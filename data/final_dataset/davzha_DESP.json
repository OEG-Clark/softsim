{"home.repos.pwc.inspect_result.davzha_DESP.None.gradient_iterators.ClippedGradientDescent.__init__": [[56, 68], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.init.uniform_", "torch.init.uniform_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "energy_fn", ",", "n_points", ",", "d_y", ",", "T", ",", "eps", ",", "norm_type", ",", "max_norm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "energy_fn", "=", "energy_fn", "\n", "self", ".", "n_points", "=", "n_points", "\n", "self", ".", "d_y", "=", "d_y", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "T", "=", "T", "\n", "self", ".", "norm_type", "=", "norm_type", "\n", "self", ".", "max_norm", "=", "max_norm", "\n", "\n", "self", ".", "y_init", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "n_points", ",", "d_y", ")", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "self", ".", "y_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.gradient_iterators.ClippedGradientDescent.clip_gradient": [[69, 81], ["grads.norm", "clip_coef.clamp.clamp.clamp", "grads.clamp", "grads.norm.detach"], "methods", ["None"], ["", "def", "clip_gradient", "(", "self", ",", "grads", ")", ":", "\n", "        ", "if", "self", ".", "norm_type", "is", "None", ":", "\n", "            ", "return", "grads", "\n", "\n", "", "if", "self", ".", "norm_type", "==", "0.", ":", "\n", "            ", "return", "grads", ".", "clamp", "(", "-", "self", ".", "max_norm", ",", "self", ".", "max_norm", ")", "\n", "\n", "", "grad_norm", "=", "grads", ".", "norm", "(", "2.", ",", "dim", "=", "(", "1", ",", "2", ")", ",", "keepdim", "=", "True", ")", "\n", "clip_coef", "=", "self", ".", "max_norm", "/", "(", "grad_norm", ".", "detach", "(", ")", "+", "1e-6", ")", "\n", "clip_coef", "=", "clip_coef", ".", "clamp", "(", "0.", ",", "1.", ")", "\n", "grads", "=", "grads", "*", "clip_coef", "\n", "return", "grads", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.gradient_iterators.ClippedGradientDescent.forward": [[82, 113], ["x.size", "gradient_iterators.ClippedGradientDescent.y_init.expand", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "gradient_iterators.ClippedGradientDescent.clip_gradient", "ys.append", "energies.append", "gradient_iterators.ClippedGradientDescent.contiguous().detach().view().norm().mean", "dict", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "gradient_iterators.ClippedGradientDescent.energy_fn().sum", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "gradient_iterators.ClippedGradientDescent.contiguous().detach().view().norm", "gradient_iterators.ClippedGradientDescent.energy_fn", "gradient_iterators.ClippedGradientDescent.contiguous().detach().view", "gradient_iterators.ClippedGradientDescent.contiguous().detach", "gradient_iterators.ClippedGradientDescent.contiguous"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.None.gradient_iterators.ClippedGradientDescent.clip_gradient"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "y_t", "=", "self", ".", "y_init", ".", "expand", "(", "batch_size", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "energies", "=", "[", "]", "\n", "ys", "=", "[", "y_t", "]", "\n", "gradnorms", "=", "torch", ".", "zeros", "(", "1", ",", "device", "=", "y_t", ".", "device", ")", "\n", "\n", "for", "_", "in", "range", "(", "self", ".", "T", ")", ":", "\n", "            ", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "                ", "if", "not", "self", ".", "training", ":", "\n", "                    ", "y_t", ".", "requires_grad", "=", "True", "\n", "\n", "", "e", "=", "self", ".", "energy_fn", "(", "y_t", ",", "x", ")", ".", "sum", "(", "0", ")", "\n", "\n", "grads", ",", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "inputs", "=", "y_t", ",", "\n", "outputs", "=", "e", ",", "\n", "only_inputs", "=", "True", ",", "\n", "create_graph", "=", "True", ",", "\n", "allow_unused", "=", "False", "\n", ")", "\n", "\n", "", "grads", "=", "self", ".", "clip_gradient", "(", "grads", ")", "\n", "y_t", "=", "y_t", "-", "self", ".", "eps", "*", "grads", "\n", "\n", "ys", ".", "append", "(", "y_t", ")", "\n", "energies", ".", "append", "(", "e", ")", "\n", "gradnorms", "+=", "grads", ".", "contiguous", "(", ")", ".", "detach", "(", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "norm", "(", "1", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "ys", ",", "dict", "(", "energies", "=", "energies", ",", "gradnorm", "=", "gradnorms", "/", "self", ".", "T", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.gradient_iterators.langevin_sample": [[5, 53], ["x.repeat_interleave.size", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "torch.stack", "torch.stack", "x.repeat_interleave.repeat_interleave", "torch.stack.append", "torch.zeros.detach", "dict", "torch.enable_grad", "torch.enable_grad", "energy_fn", "torch.autograd.grad", "torch.autograd.grad", "grads.contiguous().view().norm().mean", "energy_fn.detach", "torch.randn_like", "torch.randn_like", "energy_fn.sum", "grads.contiguous().view().norm", "grads.contiguous().view", "grads.contiguous"], "function", ["None"], ["def", "langevin_sample", "(", "energy_fn", ",", "x", ",", "set_size", ",", "d_y", ",", "T", ",", "S", ",", "eps", ",", "k", "=", "1", ",", "device", "=", "\"cuda\"", ")", ":", "\n", "    ", "\"\"\"Also used for prediction, by setting S < T.\n    Args:\n        energy_fn: callable; deep energy function\n        x: input features\n        set_size: set size of y\n        d_y: num features of y\n        T: num total iterations\n        S: num sample iterations\n        eps: noise coefficient\n        k: num samplese\n    \"\"\"", "\n", "if", "k", ">", "1", ":", "\n", "        ", "x", "=", "x", ".", "repeat_interleave", "(", "k", ",", "dim", "=", "0", ")", "\n", "\n", "", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "y_t", "=", "torch", ".", "zeros", "(", "batch_size", ",", "set_size", ",", "d_y", ",", "device", "=", "device", ")", "\n", "\n", "energies", "=", "[", "]", "\n", "gradnorm", "=", "torch", ".", "zeros", "(", "1", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "\n", "for", "i", "in", "range", "(", "T", ")", ":", "\n", "        ", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "y_t", ".", "requires_grad", "=", "True", "\n", "if", "S", "is", "None", "or", "i", "<", "S", ":", "\n", "# This is slightly different from the paper, ", "\n", "# but offers small performance boosts in some cases.", "\n", "# The change amounts to dropping the noise on the last sampling step.", "\n", "                ", "y_t", ".", "data", "+=", "eps", "*", "torch", ".", "randn_like", "(", "y_t", ")", "\n", "\n", "", "e", "=", "energy_fn", "(", "y_t", ",", "x", ")", "\n", "\n", "grads", ",", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "inputs", "=", "y_t", ",", "\n", "outputs", "=", "e", ".", "sum", "(", ")", ",", "\n", "only_inputs", "=", "True", ",", "\n", "retain_graph", "=", "True", ",", "\n", "allow_unused", "=", "False", "\n", ")", "\n", "\n", "gradnorm", "+=", "grads", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "norm", "(", "dim", "=", "1", ")", ".", "mean", "(", "0", ")", "\n", "y_t", ".", "data", "-=", "grads", "\n", "\n", "", "energies", ".", "append", "(", "e", ".", "detach", "(", ")", ")", "\n", "\n", "", "energies", "=", "torch", ".", "stack", "(", "energies", ")", "\n", "\n", "return", "y_t", ".", "detach", "(", ")", ",", "dict", "(", "energies", "=", "energies", ",", "gradnorm", "=", "gradnorm", "/", "T", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.FSPool.__init__": [[15, 25], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "modules.FSPool.reset_parameters", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__", "home.repos.pwc.inspect_result.davzha_DESP.None.modules.DSEnergy.reset_parameters"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "n_pieces", ")", ":", "\n", "        ", "\"\"\"\n        in_channels: Number of channels in input\n        n_pieces: Number of pieces in piecewise linear\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_pieces", "=", "n_pieces", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "n_pieces", "+", "1", ",", "in_channels", ")", ")", "\n", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.FSPool.reset_parameters": [[26, 28], ["torch.init.normal_", "torch.init.normal_", "torch.init.normal_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "normal_", "(", "self", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.FSPool.forward": [[29, 55], ["torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "index.expand.expand.unsqueeze_().unsqueeze_", "index.expand.expand.expand", "modules.FSPool.weight.expand", "x.sum.sum.argsort", "index.expand.expand.long", "index.expand.expand.frac", "weight.scatter.scatter.gather", "weight.scatter.scatter.gather", "weight.scatter.scatter.scatter", "x.sum.sum.sum", "x.sum.sum.size", "x.sum.sum.size", "index.expand.expand.size", "x.sum.sum.size", "x.sum.sum.size", "index.expand.expand.unsqueeze_"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "n", "=", "None", ")", ":", "\n", "        ", "index", "=", "torch", ".", "arange", "(", "end", "=", "x", ".", "size", "(", "1", ")", ",", "device", "=", "x", ".", "device", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "index", "=", "index", "/", "(", "x", ".", "size", "(", "1", ")", "-", "1", ")", "\n", "\n", "index", "=", "index", ".", "unsqueeze_", "(", "0", ")", ".", "unsqueeze_", "(", "2", ")", "\n", "index", "=", "index", ".", "expand", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ",", "x", ".", "size", "(", "2", ")", ")", "\n", "\n", "weight", "=", "self", ".", "weight", ".", "expand", "(", "index", ".", "size", "(", "0", ")", ",", "-", "1", ",", "-", "1", ")", "\n", "perm", "=", "x", ".", "argsort", "(", "dim", "=", "1", ",", "descending", "=", "True", ")", "\n", "\n", "# linspace [0, 1] -> linspace [0, n_pieces]", "\n", "index", "=", "self", ".", "n_pieces", "*", "index", "\n", "idx", "=", "index", ".", "long", "(", ")", "\n", "frac", "=", "index", ".", "frac", "(", ")", "\n", "\n", "left", "=", "weight", ".", "gather", "(", "1", ",", "idx", ")", "\n", "right", "=", "weight", ".", "gather", "(", "1", ",", "(", "idx", "+", "1", ")", ".", "clamp", "(", "max", "=", "self", ".", "n_pieces", ")", ")", "\n", "\n", "weight", "=", "(", "1", "-", "frac", ")", "*", "left", "+", "frac", "*", "right", "\n", "\n", "weight", "=", "weight", ".", "scatter", "(", "1", ",", "perm", ",", "weight", ")", "\n", "\n", "x", "=", "(", "x", "*", "weight", ")", "\n", "x", "=", "x", ".", "sum", "(", "1", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.DSEnergy.__init__": [[69, 77], ["torch.Module.__init__", "modules.get_mlp", "modules.get_mlp", "torch.Parameter", "torch.Parameter", "torch.Parameter", "modules.FSPool", "modules.DSEnergy.reset_parameters", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__", "home.repos.pwc.inspect_result.davzha_DESP.None.modules.get_mlp", "home.repos.pwc.inspect_result.davzha_DESP.None.modules.get_mlp", "home.repos.pwc.inspect_result.davzha_DESP.None.modules.DSEnergy.reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "d_x", ",", "d_y", ",", "d_hid", ",", "n_equiv", ",", "n_inv", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "normalize", "=", "normalize", "\n", "self", ".", "mlp_equiv", "=", "get_mlp", "(", "d_x", "+", "d_y", ",", "d_hid", ",", "d_hid", ",", "n_equiv", ")", "\n", "self", ".", "mlp_inv", "=", "get_mlp", "(", "d_hid", ",", "d_hid", ",", "d_hid", ",", "n_inv", ")", "\n", "self", ".", "L", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "d_hid", ",", "d_hid", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "pool", "=", "FSPool", "(", "d_hid", ",", "20", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.DSEnergy.reset_parameters": [[78, 87], ["modules.DSEnergy.parameters", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init._calculate_fan_in_and_fan_out", "torch.init._calculate_fan_in_and_fan_out", "torch.init._calculate_fan_in_and_fan_out", "torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_", "math.sqrt"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "for", "l", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "l", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "l", ".", "weight", ",", "a", "=", "self", ".", "activ", ".", "negative_slope", ")", "\n", "if", "l", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "fan_in", ",", "_", "=", "nn", ".", "init", ".", "_calculate_fan_in_and_fan_out", "(", "l", ".", "weight", ")", "\n", "bound", "=", "1", "/", "math", ".", "sqrt", "(", "fan_in", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "l", ".", "bias", ",", "-", "bound", ",", "bound", ")", "\n", "", "", "", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "L", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.DSEnergy.forward": [[88, 99], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.DSEnergy.mlp_equiv", "modules.DSEnergy.pool", "modules.DSEnergy.mlp_inv", "len", "x.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "y.size", "modules.DSEnergy.size", "x.unsqueeze().expand.unsqueeze().expand.unsqueeze", "torch.tril", "torch.tril", "torch.tril", "torch.tril", "torch.tril", "torch.tril", "torch.tril", "torch.tril", "torch.tril"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "y", ",", "x", ")", ":", "\n", "        ", "if", "len", "(", "x", ".", "shape", ")", "<", "3", ":", "\n", "            ", "x", "=", "x", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "y", ".", "size", "(", "1", ")", ",", "-", "1", ")", "\n", "", "z", "=", "torch", ".", "cat", "(", "[", "x", ",", "y", "]", ",", "dim", "=", "2", ")", "\n", "z", "=", "self", ".", "mlp_equiv", "(", "z", ")", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "z", "=", "z", "/", "z", ".", "size", "(", "1", ")", "\n", "", "z", "=", "self", ".", "pool", "(", "z", ")", "\n", "z", "=", "self", ".", "mlp_inv", "(", "z", ")", "\n", "energy", "=", "(", "(", "z", "@", "torch", ".", "tril", "(", "self", ".", "L", ")", ")", "**", "2", ")", ".", "sum", "(", "1", ")", "\n", "return", "energy", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.FSEncoder.__init__": [[103, 112], ["torch.Module.__init__", "modules.get_mlp", "modules.FSPool"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__", "home.repos.pwc.inspect_result.davzha_DESP.None.modules.get_mlp"], ["    ", "def", "__init__", "(", "self", ",", "d_in", ",", "d_hid", ",", "d_out", ",", "n_layers", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "d_in", "=", "d_in", "\n", "self", ".", "d_hid", "=", "d_hid", "\n", "self", ".", "d_out", "=", "d_out", "\n", "self", ".", "normalize", "=", "normalize", "\n", "\n", "self", ".", "mlp", "=", "get_mlp", "(", "d_in", ",", "d_hid", ",", "d_out", ",", "n_layers", ")", "\n", "self", ".", "pool", "=", "FSPool", "(", "d_out", ",", "20", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.FSEncoder.forward": [[113, 119], ["modules.FSEncoder.mlp", "modules.FSEncoder.pool", "modules.FSEncoder.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "mlp", "(", "x", ")", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "x", "=", "x", "/", "x", ".", "size", "(", "1", ")", "\n", "", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.L1Energy.__init__": [[122, 125], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "enc", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc", "=", "enc", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.L1Energy.forward": [[126, 129], ["modules.L1Energy.enc", "torch.smooth_l1_loss().mean", "torch.smooth_l1_loss().mean", "torch.smooth_l1_loss().mean", "torch.smooth_l1_loss", "torch.smooth_l1_loss", "torch.smooth_l1_loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "y", ",", "enc_x", ")", ":", "\n", "        ", "enc_y", "=", "self", ".", "enc", "(", "y", ")", "\n", "return", "F", ".", "smooth_l1_loss", "(", "enc_y", ",", "enc_x", ",", "reduction", "=", "'none'", ")", ".", "mean", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.ConvEncoder.__init__": [[136, 145], ["torch.Module.__init__", "torchvision.models.resnet34", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "list", "torchvision.models.resnet34.children"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__"], ["def", "__init__", "(", "self", ",", "latent", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "resnet", "=", "torchvision", ".", "models", ".", "resnet34", "(", ")", "\n", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "resnet", ".", "children", "(", ")", ")", "[", ":", "-", "2", "]", ")", "\n", "self", ".", "end", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "# now has 2x2 spatial size", "\n", "nn", ".", "Conv2d", "(", "512", ",", "latent", ",", "2", ")", ",", "\n", "# now has shape (n, latent, 1, 1)", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.ConvEncoder.forward": [[148, 152], ["modules.ConvEncoder.layers", "modules.ConvEncoder.end", "modules.ConvEncoder.view", "modules.ConvEncoder.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "layers", "(", "x", ")", "\n", "x", "=", "self", ".", "end", "(", "x", ")", "\n", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.PretrainedConvEncoder.__init__": [[158, 174], ["torch.Module.__init__", "torchvision.models.resnet34", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "modules.PretrainedConvEncoder.layers.load_state_dict", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules.PretrainedConvEncoder.layers.parameters", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "list", "torchvision.models.resnet34.children"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__"], ["def", "__init__", "(", "self", ",", "d_out", ",", "model_file", ",", "freeze_resnet", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "resnet", "=", "torchvision", ".", "models", ".", "resnet34", "(", ")", "\n", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "resnet", ".", "children", "(", ")", ")", "[", ":", "-", "1", "]", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "self", ".", "layers", ".", "load_state_dict", "(", "state_dict", ",", "strict", "=", "False", ")", "\n", "\n", "if", "freeze_resnet", ":", "\n", "            ", "for", "param", "in", "self", ".", "layers", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "self", ".", "end", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", ",", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "d_out", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.PretrainedConvEncoder.forward": [[176, 180], ["modules.PretrainedConvEncoder.layers", "modules.PretrainedConvEncoder.end", "modules.PretrainedConvEncoder.view", "modules.PretrainedConvEncoder.squeeze", "modules.PretrainedConvEncoder.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "layers", "(", "x", ")", "\n", "x", "=", "self", ".", "end", "(", "x", ".", "squeeze", "(", ")", ")", "\n", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.DSEquivariant.__init__": [[183, 193], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "range", "range"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "d_in", ",", "d_hid", ",", "d_out", ",", "n_layers", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "\n", "self", ".", "layers_e", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Linear", "(", "d_in", "if", "i", "==", "0", "else", "d_hid", ",", "d_out", "if", "i", "==", "n_layers", "-", "1", "else", "d_hid", ")", "\n", "for", "i", "in", "range", "(", "n_layers", ")", "]", ")", "\n", "self", ".", "layers_s", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Linear", "(", "d_in", "if", "i", "==", "0", "else", "d_hid", ",", "d_out", "if", "i", "==", "n_layers", "-", "1", "else", "d_hid", ")", "\n", "for", "i", "in", "range", "(", "n_layers", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.DSEquivariant.forward": [[194, 202], ["range", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "x", "=", "self", ".", "layers_e", "[", "i", "]", "(", "x", ")", "+", "self", ".", "layers_s", "[", "i", "]", "(", "x", ".", "mean", "(", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "if", "i", "<", "self", ".", "n_layers", "-", "1", ":", "\n", "                ", "x", "=", "F", ".", "leaky_relu", "(", "x", ")", "\n", "\n", "", "", "x", "=", "torch", ".", "sigmoid", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.None.modules.get_mlp": [[57, 66], ["range", "torch.Sequential", "layers.append", "torch.Linear", "layers.append", "torch.LeakyReLU"], "function", ["None"], ["", "", "def", "get_mlp", "(", "d_in", ",", "d_hid", ",", "d_out", ",", "n_layers", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_layers", ")", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "\n", "d_in", "if", "i", "==", "0", "else", "d_hid", ",", "\n", "d_hid", "if", "i", "<", "n_layers", "-", "1", "else", "d_out", ")", ")", "\n", "if", "i", "<", "n_layers", "-", "1", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", ")", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.loss.ApproxLoss.__call__": [[52, 65], ["y_gt.view.view.view", "y.unsqueeze().expand", "y_e.reshape.reshape.reshape", "loss.ApproxLoss.set_distance", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "loss.ApproxLoss.reshape().min", "y.unsqueeze", "loss.ApproxLoss.labels.unsqueeze", "n.unsqueeze", "loss.ApproxLoss.reshape"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "y", ",", "n", ")", ":", "\n", "# batch , n_csets , n_points, d_feat", "\n", "        ", "n", "=", "torch", ".", "nonzero", "(", "self", ".", "labels", ".", "unsqueeze", "(", "0", ")", "==", "n", ".", "unsqueeze", "(", "1", ")", ")", "[", ":", ",", "1", "]", "\n", "y_gt", "=", "self", ".", "examples", "[", "n", "]", "\n", "y_gt", "=", "y_gt", ".", "view", "(", "-", "1", ",", "*", "y", ".", "shape", "[", "1", ":", "]", ")", "\n", "\n", "y_e", "=", "y", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "self", ".", "gran", ",", "-", "1", ",", "-", "1", ")", "\n", "y_e", "=", "y_e", ".", "reshape", "(", "-", "1", ",", "*", "y", ".", "shape", "[", "1", ":", "]", ")", "\n", "\n", "l", "=", "self", ".", "set_distance", "(", "y_gt", ",", "y_e", ")", "\n", "l", "=", "l", ".", "reshape", "(", "-", "1", ",", "self", ".", "gran", ")", ".", "min", "(", "1", ")", "[", "0", "]", "\n", "\n", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.loss.RotatedPolygonLoss.__init__": [[67, 84], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "max", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "loss.RotatedPolygonLoss.theta2xy", "csets.append", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.linspace.unsqueeze", "torch.linspace.unsqueeze", "torch.linspace.unsqueeze", "torch.linspace.unsqueeze", "torch.linspace.unsqueeze", "torch.linspace.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__", "home.repos.pwc.inspect_result.davzha_DESP.None.loss.RotatedPolygonLoss.theta2xy"], ["    ", "def", "__init__", "(", "self", ",", "n_poly", ",", "set_distance", ",", "radius", "=", "0.35", ",", "center", "=", "0.5", ",", "max_n", "=", "None", ",", "gran", "=", "256", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "labels", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "n_poly", ")", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "set_distance", "=", "set_distance", "\n", "self", ".", "radius", "=", "radius", "\n", "self", ".", "center", "=", "center", "\n", "self", ".", "max_n", "=", "max_n", "if", "max_n", "is", "not", "None", "else", "max", "(", "n_poly", ")", "\n", "self", ".", "gran", "=", "gran", "\n", "\n", "csets", "=", "[", "]", "\n", "for", "n", "in", "n_poly", ":", "\n", "            ", "points", "=", "torch", ".", "linspace", "(", "0.", ",", "TWO_PI", "-", "(", "TWO_PI", "/", "n", ")", ",", "n", ")", "\n", "angles", "=", "torch", ".", "linspace", "(", "0", ",", "TWO_PI", "-", "(", "TWO_PI", "/", "self", ".", "gran", ")", ",", "self", ".", "gran", ")", "\n", "theta", "=", "points", ".", "unsqueeze", "(", "0", ")", "+", "angles", ".", "unsqueeze", "(", "1", ")", "\n", "xy", "=", "self", ".", "theta2xy", "(", "theta", ")", "\n", "csets", ".", "append", "(", "xy", ")", "\n", "", "self", ".", "examples", "=", "nn", ".", "Parameter", "(", "torch", ".", "stack", "(", "csets", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.loss.RotatedPolygonLoss.theta2xy": [[85, 93], ["torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["", "def", "theta2xy", "(", "self", ",", "theta", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cos", "(", "theta", ")", "*", "self", ".", "radius", "\n", "y", "=", "torch", ".", "sin", "(", "theta", ")", "*", "self", ".", "radius", "\n", "xy", "=", "torch", ".", "stack", "(", "(", "x", ",", "y", ")", ",", "dim", "=", "-", "1", ")", "+", "self", ".", "center", "\n", "if", "xy", ".", "size", "(", "1", ")", "<", "self", ".", "max_n", ":", "\n", "            ", "padding", "=", "torch", ".", "zeros_like", "(", "xy", "[", ":", ",", ":", "self", ".", "max_n", "-", "xy", ".", "size", "(", "1", ")", "]", ")", "\n", "xy", "=", "torch", ".", "cat", "(", "[", "xy", ",", "padding", "]", ",", "dim", "=", "1", ")", "\n", "", "return", "xy", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.loss.DigitLoss.__init__": [[96, 103], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "loss.DigitLoss.examples.size"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "digit_examples", ",", "labels", ",", "set_distance", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "examples", "=", "nn", ".", "Parameter", "(", "digit_examples", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "labels", "=", "nn", ".", "Parameter", "(", "labels", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "set_distance", "=", "set_distance", "\n", "\n", "self", ".", "gran", "=", "self", ".", "examples", ".", "size", "(", "0", ")", "//", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.loss.chamfer_distance": [[11, 24], ["torch.smooth_l1_loss().mean", "loss.view().mean", "torch.smooth_l1_loss", "F.smooth_l1_loss().mean.min", "F.smooth_l1_loss().mean.min", "loss.view", "x.unsqueeze().expand", "y.unsqueeze().expand", "loss.size", "y.size", "x.size", "x.unsqueeze", "y.unsqueeze"], "function", ["None"], ["def", "chamfer_distance", "(", "x", ",", "y", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        x: (batch, set, num_features)\n        y: - // -\n    \"\"\"", "\n", "pdist", "=", "F", ".", "smooth_l1_loss", "(", "\n", "x", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "y", ".", "size", "(", "1", ")", ",", "-", "1", ",", "-", "1", ")", ",", "\n", "y", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "x", ".", "size", "(", "1", ")", ",", "-", "1", ")", ",", "\n", "reduction", "=", "'none'", ")", ".", "mean", "(", "3", ")", "# TODO mean?", "\n", "\n", "loss", "=", "pdist", ".", "min", "(", "1", ")", "[", "0", "]", "+", "pdist", ".", "min", "(", "2", ")", "[", "0", "]", "\n", "return", "loss", ".", "view", "(", "loss", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "mean", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.loss.LAP_loss": [[26, 47], ["torch.smooth_l1_loss().mean", "F.smooth_l1_loss().mean.detach().cpu().numpy", "torch.stack", "torch.stack", "torch.stack", "list", "sample[].mean", "torch.smooth_l1_loss", "F.smooth_l1_loss().mean.detach().cpu", "pool.map", "scipy.optimize.linear_sum_assignment", "zip", "x.unsqueeze().expand", "y.unsqueeze().expand", "y.size", "x.size", "F.smooth_l1_loss().mean.detach", "x.unsqueeze", "y.unsqueeze"], "function", ["None"], ["", "def", "LAP_loss", "(", "x", ",", "y", ",", "pool", "=", "None", ")", ":", "\n", "    ", "pdist", "=", "F", ".", "smooth_l1_loss", "(", "\n", "x", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "y", ".", "size", "(", "1", ")", ",", "-", "1", ",", "-", "1", ")", ",", "\n", "y", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "x", ".", "size", "(", "1", ")", ",", "-", "1", ")", ",", "\n", "reduction", "=", "'none'", ")", ".", "mean", "(", "3", ")", "\n", "\n", "pdist_", "=", "pdist", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "if", "pool", "is", "not", "None", ":", "\n", "        ", "indices", "=", "list", "(", "pool", ".", "map", "(", "scipy", ".", "optimize", ".", "linear_sum_assignment", ",", "pdist_", ")", ")", "\n", "", "else", ":", "\n", "        ", "indices", "=", "[", "scipy", ".", "optimize", ".", "linear_sum_assignment", "(", "p", ")", "for", "p", "in", "pdist_", "]", "\n", "\n", "", "losses", "=", "[", "\n", "sample", "[", "row_idx", ",", "col_idx", "]", ".", "mean", "(", ")", "\n", "for", "sample", ",", "(", "row_idx", ",", "col_idx", ")", "in", "zip", "(", "pdist", ",", "indices", ")", "\n", "]", "\n", "\n", "total_loss", "=", "torch", ".", "stack", "(", "losses", ")", "\n", "\n", "return", "total_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.loss.f1score": [[105, 111], ["set_eq.any().float().mean", "set_eq.any().float().mean", "set_eq.any().float", "set_eq.any().float", "targets.unsqueeze", "preds.unsqueeze", "set_eq.any", "set_eq.any"], "function", ["None"], ["", "", "def", "f1score", "(", "preds", ",", "targets", ")", ":", "\n", "    ", "set_eq", "=", "(", "targets", ".", "unsqueeze", "(", "0", ")", "==", "preds", ".", "unsqueeze", "(", "1", ")", ")", ".", "all", "(", "2", ")", "\n", "recall", "=", "set_eq", ".", "any", "(", "0", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "precision", "=", "set_eq", ".", "any", "(", "1", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "f1", "=", "2", "*", "(", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", "+", "1e-6", ")", "\n", "return", "f1", ",", "precision", ",", "recall", "", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set": [[10, 78], ["isinstance", "matplotlib.to_rgb", "matplotlib.subplots", "fig.set_size_inches", "range", "np.concatenate.data.cpu().numpy", "isinstance", "labels.data.cpu().numpy.data.cpu().numpy", "numpy.concatenate", "utils.time_print", "int", "int", "numpy.zeros", "axs[].set_aspect", "axs[].scatter", "axs[].axis", "a.set_xticks", "a.set_yticks", "axs.title", "matplotlib.savefig", "matplotlib.close", "matplotlib.show", "numpy.clip", "axs[].set_title", "np.concatenate.data.cpu", "labels.data.cpu().numpy.data.cpu", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print"], ["def", "plot_set", "(", "points", ",", "filepath", "=", "None", ",", "labels", "=", "None", ",", "n_sets", "=", "100", ",", "title", "=", "None", ",", "\n", "thr", "=", "0.2", ",", "figsize", "=", "(", "3", ",", "3", ")", ",", "point_size", "=", "1e2", ",", "fontsize", "=", "20", ",", "opacity", "=", "0.3", ",", "\n", "rows", "=", "None", ",", "cols", "=", "None", ")", ":", "\n", "    ", "batch_size", ",", "n_points", ",", "n_feat", "=", "points", ".", "shape", "\n", "\n", "# tensor -> array", "\n", "if", "isinstance", "(", "points", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "points", "=", "points", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "if", "labels", "is", "not", "None", "and", "isinstance", "(", "labels", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "labels", "=", "labels", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "# add membership variable", "\n", "", "if", "n_feat", "==", "2", ":", "\n", "        ", "points", "=", "np", ".", "concatenate", "(", "[", "points", ",", "np", ".", "ones", "(", "(", "batch_size", ",", "n_points", ",", "1", ")", ",", "dtype", "=", "points", ".", "dtype", ")", "]", ",", "axis", "=", "2", ")", "\n", "\n", "", "if", "rows", "is", "not", "None", "and", "cols", "is", "not", "None", ":", "\n", "        ", "n_sets", "=", "rows", "*", "cols", "\n", "\n", "", "if", "batch_size", "<", "n_sets", ":", "\n", "        ", "time_print", "(", "f\"Batch size {batch_size} is too small, require atleast {n_sets}\"", ")", "\n", "return", "False", "\n", "\n", "", "if", "rows", "is", "None", ":", "\n", "        ", "rows", "=", "int", "(", "n_sets", "**", "0.5", ")", "\n", "", "if", "cols", "is", "None", ":", "\n", "        ", "cols", "=", "int", "(", "n_sets", "**", "0.5", ")", "\n", "\n", "# point_color = colors.to_rgb(\"#969ad0\")", "\n", "", "point_color", "=", "colors", ".", "to_rgb", "(", "\"#475468\"", ")", "\n", "# point_color = colors.to_rgb(\"#34495e\")", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "rows", ",", "cols", ",", "squeeze", "=", "False", ")", "\n", "fig", ".", "set_size_inches", "(", "cols", "*", "figsize", "[", "0", "]", ",", "rows", "*", "figsize", "[", "1", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "rows", "*", "cols", ")", ":", "\n", "        ", "color", "=", "np", ".", "zeros", "(", "(", "n_points", ",", "4", ")", ")", "\n", "color", "[", ":", ",", ":", "3", "]", "=", "point_color", "\n", "\n", "color", "[", ":", ",", "3", "]", "=", "np", ".", "clip", "(", "points", "[", "i", ",", ":", ",", "-", "1", "]", ",", "0", ",", "1", ")", "*", "opacity", "\n", "\n", "keep", "=", "color", "[", ":", ",", "3", "]", ">", "thr", "\n", "x", "=", "points", "[", "i", ",", ":", ",", "1", "]", "[", "keep", "]", "\n", "y", "=", "1", "-", "points", "[", "i", ",", ":", ",", "0", "]", "[", "keep", "]", "\n", "color", "=", "color", "[", "keep", "]", "\n", "\n", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "set_aspect", "(", "'equal'", ")", "\n", "\n", "if", "labels", "is", "not", "None", ":", "\n", "            ", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "set_title", "(", "labels", "[", "i", "]", ",", "fontsize", "=", "fontsize", ")", "\n", "", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "scatter", "(", "x", ",", "y", ",", "marker", "=", "\".\"", ",", "color", "=", "color", ",", "s", "=", "point_size", ",", "rasterized", "=", "True", ",", "lw", "=", "0", ")", "\n", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "axis", "(", "xmin", "=", "0", ",", "xmax", "=", "1", ",", "ymin", "=", "0", ",", "ymax", "=", "1", ")", "\n", "# axs[i // C, i % C].set_xticks([])", "\n", "# axs[i // C, i % C].set_yticks([])", "\n", "\n", "", "for", "a", "in", "axs", ".", "flat", ":", "\n", "        ", "a", ".", "set_xticks", "(", "[", "]", ")", "\n", "a", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "", "if", "title", "is", "not", "None", ":", "\n", "        ", "axs", ".", "title", "(", "title", ")", "\n", "\n", "", "if", "filepath", "is", "not", "None", ":", "\n", "        ", "plt", ".", "savefig", "(", "filepath", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_rect": [[81, 132], ["isinstance", "isinstance", "numpy.array", "img.data.cpu().numpy.transpose", "matplotlib.subplots", "fig.set_size_inches", "range", "points.data.cpu().numpy.data.cpu().numpy", "img.data.cpu().numpy.data.cpu().numpy", "utils.time_print", "int", "int", "axs[].imshow", "plot.gather_patch", "a.set_xticks", "a.set_yticks", "axs.title", "matplotlib.savefig", "matplotlib.close", "matplotlib.show", "axs[].add_patch", "points.data.cpu().numpy.data.cpu", "img.data.cpu().numpy.data.cpu"], "function", ["home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.gather_patch"], ["", "def", "plot_rect", "(", "points", ",", "img", ",", "filepath", "=", "None", ",", "n_sets", "=", "100", ",", "title", "=", "None", ",", "\n", "thr", "=", "0.2", ",", "figsize", "=", "(", "3", ",", "3", ")", ",", "point_size", "=", "1e2", ",", "fontsize", "=", "20", ",", "opacity", "=", "0.3", ",", "\n", "rows", "=", "None", ",", "cols", "=", "None", ")", ":", "\n", "    ", "batch_size", ",", "n_points", ",", "n_feat", "=", "points", ".", "shape", "\n", "_", ",", "_", ",", "w", ",", "h", "=", "img", ".", "shape", "\n", "\n", "# tensor -> array", "\n", "if", "isinstance", "(", "points", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "points", "=", "points", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "if", "isinstance", "(", "img", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "img", "=", "img", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "points", "[", ":", ",", ":", ",", ":", "4", "]", "*=", "np", ".", "array", "(", "[", "w", ",", "h", ",", "w", ",", "h", "]", ")", "\n", "img", "=", "img", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "\n", "if", "rows", "is", "not", "None", "and", "cols", "is", "not", "None", ":", "\n", "        ", "n_sets", "=", "rows", "*", "cols", "\n", "\n", "", "if", "batch_size", "<", "n_sets", ":", "\n", "        ", "time_print", "(", "f\"Batch size {batch_size} is too small, require atleast {n_sets}\"", ")", "\n", "return", "False", "\n", "\n", "", "if", "rows", "is", "None", ":", "\n", "        ", "rows", "=", "int", "(", "n_sets", "**", "0.5", ")", "\n", "", "if", "cols", "is", "None", ":", "\n", "        ", "cols", "=", "int", "(", "n_sets", "**", "0.5", ")", "\n", "\n", "", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "rows", ",", "cols", ",", "squeeze", "=", "False", ")", "\n", "fig", ".", "set_size_inches", "(", "cols", "*", "figsize", "[", "0", "]", ",", "rows", "*", "figsize", "[", "1", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "rows", "*", "cols", ")", ":", "\n", "        ", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "imshow", "(", "img", "[", "i", "]", ")", "\n", "rect", "=", "gather_patch", "(", "points", "[", "i", "]", ",", "thr", ")", "\n", "for", "r", "in", "rect", ":", "\n", "            ", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "add_patch", "(", "r", ")", "\n", "\n", "", "", "for", "a", "in", "axs", ".", "flat", ":", "\n", "        ", "a", ".", "set_xticks", "(", "[", "]", ")", "\n", "a", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "", "if", "title", "is", "not", "None", ":", "\n", "        ", "axs", ".", "title", "(", "title", ")", "\n", "\n", "", "if", "filepath", "is", "not", "None", ":", "\n", "        ", "plt", ".", "savefig", "(", "filepath", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.plot.gather_patch": [[133, 142], ["rects.append", "matplotlib.patches.Rectangle"], "function", ["None"], ["", "def", "gather_patch", "(", "points", ",", "thr", ")", ":", "\n", "    ", "rects", "=", "[", "]", "\n", "mem", "=", "(", "points", ">", "thr", ")", ".", "all", "(", "1", ")", "# TODO", "\n", "for", "p", "in", "points", "[", "mem", "]", ":", "\n", "        ", "w", "=", "p", "[", "2", "]", "-", "p", "[", "0", "]", "\n", "l", "=", "p", "[", "3", "]", "-", "p", "[", "1", "]", "\n", "rects", ".", "append", "(", "Rectangle", "(", "(", "p", "[", "0", "]", ",", "p", "[", "1", "]", ")", ",", "w", ",", "l", ",", "linewidth", "=", "1", ",", "edgecolor", "=", "'r'", ",", "facecolor", "=", "'none'", ")", ")", "\n", "\n", "", "return", "rects", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_imgs": [[145, 218], ["imgs.data.cpu().numpy.permute", "imgs.data.cpu().numpy.squeeze", "isinstance", "matplotlib.subplots", "fig.set_size_inches", "range", "fig.tight_layout", "imgs.data.cpu().numpy.data.cpu().numpy", "isinstance", "labels.data.cpu().numpy.data.cpu().numpy", "utils.time_print", "int", "int", "axs[].imshow", "zip", "zip", "a.set_xticks", "a.set_yticks", "axs.title", "matplotlib.savefig", "matplotlib.close", "matplotlib.show", "matplotlib.setp", "matplotlib.setp", "matplotlib.setp", "axs[].set_title", "a.annotate", "a.annotate", "imgs.data.cpu().numpy.data.cpu", "labels.data.cpu().numpy.data.cpu", "axs[].spines.values", "axs[].spines.values", "axs[].spines.values"], "function", ["home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print"], ["", "def", "plot_imgs", "(", "imgs", ",", "filepath", "=", "None", ",", "labels", "=", "None", ",", "n_imgs", "=", "100", ",", "title", "=", "None", ",", "\n", "figsize", "=", "(", "3", ",", "3", ")", ",", "fontsize", "=", "20", ",", "\n", "rows", "=", "None", ",", "cols", "=", "None", ",", "row_labels", "=", "None", ",", "col_labels", "=", "None", ",", "rl_fs", "=", "24", ",", "cl_fs", "=", "24", ",", "\n", "sub_colors", "=", "None", ",", "sub_linewidth", "=", "None", ",", "sub_linestyle", "=", "None", ")", ":", "\n", "    ", "batch_size", ",", "n_channels", ",", "width", ",", "height", "=", "imgs", ".", "shape", "\n", "\n", "imgs", "=", "imgs", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "imgs", "=", "imgs", ".", "squeeze", "(", "3", ")", "\n", "# imgs = imgs * 0.5 + 0.5", "\n", "\n", "# tensor -> array", "\n", "if", "isinstance", "(", "imgs", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "imgs", "=", "imgs", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "if", "labels", "is", "not", "None", "and", "isinstance", "(", "labels", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "labels", "=", "labels", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "if", "rows", "is", "not", "None", "and", "cols", "is", "not", "None", ":", "\n", "        ", "n_imgs", "=", "rows", "*", "cols", "\n", "\n", "", "if", "batch_size", "<", "n_imgs", ":", "\n", "        ", "time_print", "(", "f\"Batch size {batch_size} is too small, require atleast {n_imgs}\"", ")", "\n", "return", "False", "\n", "\n", "", "if", "rows", "is", "None", ":", "\n", "        ", "rows", "=", "int", "(", "n_imgs", "**", "0.5", ")", "\n", "", "if", "cols", "is", "None", ":", "\n", "        ", "cols", "=", "int", "(", "n_imgs", "**", "0.5", ")", "\n", "\n", "", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "rows", ",", "cols", ",", "squeeze", "=", "False", ")", "\n", "fig", ".", "set_size_inches", "(", "cols", "*", "figsize", "[", "0", "]", ",", "rows", "*", "figsize", "[", "1", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "rows", "*", "cols", ")", ":", "\n", "        ", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "imshow", "(", "imgs", "[", "i", "]", ")", "\n", "\n", "if", "sub_colors", "is", "not", "None", ":", "\n", "            ", "plt", ".", "setp", "(", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "spines", ".", "values", "(", ")", ",", "color", "=", "sub_colors", "[", "i", "]", ")", "\n", "", "if", "sub_linewidth", "is", "not", "None", ":", "\n", "            ", "plt", ".", "setp", "(", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "spines", ".", "values", "(", ")", ",", "linewidth", "=", "sub_linewidth", "[", "i", "]", ")", "\n", "", "if", "sub_linestyle", "is", "not", "None", ":", "\n", "            ", "plt", ".", "setp", "(", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "spines", ".", "values", "(", ")", ",", "linestyle", "=", "sub_linestyle", "[", "i", "]", ")", "\n", "", "if", "labels", "is", "not", "None", ":", "\n", "            ", "axs", "[", "i", "//", "cols", ",", "i", "%", "cols", "]", ".", "set_title", "(", "labels", "[", "i", "]", ",", "fontsize", "=", "fontsize", ")", "\n", "\n", "", "", "pad", "=", "5", "\n", "if", "row_labels", "is", "not", "None", ":", "\n", "        ", "for", "a", ",", "l", "in", "zip", "(", "axs", "[", ":", ",", "0", "]", ",", "row_labels", ")", ":", "\n", "            ", "a", ".", "annotate", "(", "l", ",", "xy", "=", "(", "0", ",", "0.5", ")", ",", "xytext", "=", "(", "-", "a", ".", "yaxis", ".", "labelpad", "-", "pad", ",", "0", ")", ",", "\n", "xycoords", "=", "a", ".", "yaxis", ".", "label", ",", "textcoords", "=", "'offset points'", ",", "\n", "size", "=", "rl_fs", ",", "ha", "=", "'right'", ",", "va", "=", "'center'", ")", "\n", "\n", "", "", "if", "col_labels", "is", "not", "None", ":", "\n", "        ", "for", "a", ",", "l", "in", "zip", "(", "axs", "[", "0", "]", ",", "col_labels", ")", ":", "\n", "            ", "a", ".", "annotate", "(", "l", ",", "xy", "=", "(", "0.5", ",", "1.", ")", ",", "xytext", "=", "(", "0", ",", "2", "*", "pad", ")", ",", "\n", "xycoords", "=", "'axes fraction'", ",", "textcoords", "=", "'offset points'", ",", "\n", "size", "=", "cl_fs", ",", "ha", "=", "'center'", ",", "va", "=", "'baseline'", ")", "\n", "\n", "", "", "for", "a", "in", "axs", ".", "flat", ":", "\n", "        ", "a", ".", "set_xticks", "(", "[", "]", ")", "\n", "a", ".", "set_yticks", "(", "[", "]", ")", "\n", "\n", "", "if", "title", "is", "not", "None", ":", "\n", "        ", "axs", ".", "title", "(", "title", ")", "\n", "\n", "", "fig", ".", "tight_layout", "(", ")", "\n", "\n", "if", "filepath", "is", "not", "None", ":", "\n", "        ", "plt", ".", "savefig", "(", "filepath", ")", "\n", "plt", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n", "", "return", "True", "", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.None.utils.AverageMeter.__init__": [[34, 38], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.None.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "':f'", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.utils.AverageMeter.reset": [[39, 44], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.utils.AverageMeter.update": [[45, 50], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.utils.AverageMeter.__str__": [[51, 54], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "'{name} {val'", "+", "self", ".", "fmt", "+", "'} ({avg'", "+", "self", ".", "fmt", "+", "'})'", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.utils.ProgressMeter.__init__": [[57, 61], ["utils.ProgressMeter._get_batch_fmtstr"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.None.utils.ProgressMeter._get_batch_fmtstr"], ["    ", "def", "__init__", "(", "self", ",", "num_batches", ",", "meters", ",", "prefix", "=", "\"\"", ")", ":", "\n", "        ", "self", ".", "batch_fmtstr", "=", "self", ".", "_get_batch_fmtstr", "(", "num_batches", ")", "\n", "self", ".", "meters", "=", "meters", "\n", "self", ".", "prefix", "=", "prefix", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.utils.ProgressMeter.display": [[62, 66], ["print_fn", "str", "utils.ProgressMeter.batch_fmtstr.format"], "methods", ["None"], ["", "def", "display", "(", "self", ",", "batch", ",", "print_fn", "=", "print", ")", ":", "\n", "        ", "entries", "=", "[", "self", ".", "prefix", "+", "self", ".", "batch_fmtstr", ".", "format", "(", "batch", ")", "]", "\n", "entries", "+=", "[", "str", "(", "meter", ")", "for", "meter", "in", "self", ".", "meters", "]", "\n", "print_fn", "(", "'\\t'", ".", "join", "(", "entries", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.utils.ProgressMeter._get_batch_fmtstr": [[67, 71], ["len", "str", "str", "fmt.format"], "methods", ["None"], ["", "def", "_get_batch_fmtstr", "(", "self", ",", "num_batches", ")", ":", "\n", "        ", "num_digits", "=", "len", "(", "str", "(", "num_batches", "//", "1", ")", ")", "\n", "fmt", "=", "'{:'", "+", "str", "(", "num_digits", ")", "+", "'d}'", "\n", "return", "'['", "+", "fmt", "+", "'/'", "+", "fmt", ".", "format", "(", "num_batches", ")", "+", "']'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.None.utils.get_git_state": [[7, 16], ["git.Repo"], "function", ["None"], ["def", "get_git_state", "(", ")", ":", "\n", "    ", "import", "git", "\n", "repo", "=", "git", ".", "Repo", "(", "search_parent_directories", "=", "True", ")", "\n", "try", ":", "\n", "        ", "branch_name", "=", "repo", ".", "active_branch", ".", "name", "\n", "", "except", "Exception", ":", "\n", "        ", "branch_name", "=", "\"NONE\"", "\n", "\n", "", "return", "branch_name", ",", "repo", ".", "head", ".", "object", ".", "hexsha", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print": [[17, 19], ["print", "time.strftime"], "function", ["None"], ["", "def", "time_print", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "print", "(", "time", ".", "strftime", "(", "\"%Y-%m-%d %H:%M:%S\"", ")", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.None.utils.save_checkpoint": [[20, 29], ["pathlib.Path", "pathlib.Path.mkdir", "str", "torch.save", "shutil.copyfile", "str"], "function", ["None"], ["", "def", "save_checkpoint", "(", "state", ",", "is_best", "=", "True", ",", "directory", "=", "\".\"", ",", "filename", "=", "'checkpoint.pth.tar'", ")", ":", "\n", "    ", "directory", "=", "Path", "(", "directory", ")", "\n", "directory", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "\n", "filepath", "=", "str", "(", "directory", "/", "filename", ")", "\n", "\n", "torch", ".", "save", "(", "state", ",", "filepath", ")", "\n", "if", "is_best", ":", "\n", "        ", "shutil", ".", "copyfile", "(", "filepath", ",", "str", "(", "directory", "/", "'model_best.pth.tar'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits.__init__": [[8, 34], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "math.cos", "math.sin", "math.cos", "math.cos", "math.sin", "math.cos", "math.sin", "math.sin"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_points", ",", "mem_feat", "=", "False", ",", "length", "=", "60000", ",", "mode", "=", "None", ")", ":", "\n", "        ", "self", ".", "n_points", "=", "n_points", "\n", "self", ".", "mem_feat", "=", "mem_feat", "\n", "self", ".", "length", "=", "length", "\n", "\n", "self", ".", "mid_mm", "=", "[", "[", "0.48", ",", "0.25", "]", ",", "\n", "[", "0.52", ",", "0.75", "]", "]", "\n", "\n", "self", ".", "hook_mm", "=", "[", "[", "0.3", ",", "0.00", "]", ",", "\n", "[", "0.5", ",", "0.04", "]", "]", "\n", "self", ".", "hook_b", "=", "np", ".", "array", "(", "[", "0.125", ",", "0.37", "]", ")", "\n", "\n", "self", ".", "hook_rotm", "=", "np", ".", "array", "(", "[", "[", "math", ".", "cos", "(", "math", ".", "pi", "/", "4", ")", ",", "-", "math", ".", "sin", "(", "math", ".", "pi", "/", "4", ")", "]", ",", "\n", "[", "math", ".", "sin", "(", "math", ".", "pi", "/", "4", ")", ",", "math", ".", "cos", "(", "math", ".", "pi", "/", "4", ")", "]", "]", ")", "\n", "\n", "self", ".", "mid_rotm", "=", "np", ".", "array", "(", "[", "[", "math", ".", "cos", "(", "-", "math", ".", "pi", "/", "10", ")", ",", "-", "math", ".", "sin", "(", "-", "math", ".", "pi", "/", "10", ")", "]", ",", "\n", "[", "math", ".", "sin", "(", "-", "math", ".", "pi", "/", "10", ")", ",", "math", ".", "cos", "(", "-", "math", ".", "pi", "/", "10", ")", "]", "]", ")", "\n", "self", ".", "mid_seven_b", "=", "np", ".", "array", "(", "[", "-", "0.1", ",", "0.1", "]", ")", "\n", "\n", "self", ".", "top_bar_mm", "=", "[", "[", "0.4", ",", "0.61", "]", ",", "\n", "[", "0.57", ",", "0.67", "]", "]", "\n", "\n", "self", ".", "bar_mm", "=", "[", "[", "0.415", ",", "0.42", "]", ",", "\n", "[", "0.595", ",", "0.48", "]", "]", "\n", "\n", "self", ".", "figure_fn", "=", "[", "self", ".", "_build_one", ",", "self", ".", "_build_seven", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits.pad": [[35, 47], ["numpy.flip().copy", "torch.zeros", "membership[].fill_", "torch.tensor", "torch.cat", "numpy.flip"], "methods", ["None"], ["", "def", "pad", "(", "self", ",", "points", ",", "nonpad", ")", ":", "\n", "        ", "points", "[", ":", "nonpad", ",", "1", "]", "=", "1.", "-", "points", "[", ":", "nonpad", ",", "1", "]", "\n", "points", "=", "np", ".", "flip", "(", "points", ",", "axis", "=", "1", ")", ".", "copy", "(", ")", "\n", "\n", "membership", "=", "torch", ".", "zeros", "(", "self", ".", "n_points", ",", "1", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "membership", "[", ":", "nonpad", "]", ".", "fill_", "(", "1.", ")", "\n", "\n", "points", "=", "torch", ".", "tensor", "(", "points", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "\n", "if", "self", ".", "mem_feat", ":", "\n", "            ", "points", "=", "torch", ".", "cat", "(", "[", "points", ",", "membership", "]", ",", "dim", "=", "1", ")", "\n", "", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits._build_one": [[48, 66], ["int", "numpy.random.uniform", "digits.Digits.pad", "numpy.random.uniform", "numpy.concatenate", "numpy.zeros", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits.pad"], ["", "def", "_build_one", "(", "self", ",", "opt", ")", ":", "\n", "        ", "n_mp", "=", "int", "(", "self", ".", "n_points", "/", "1.5", ")", "\n", "n_hp", "=", "self", ".", "n_points", "-", "n_mp", "\n", "mid", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "mid_mm", "[", "0", "]", ",", "self", ".", "mid_mm", "[", "1", "]", ",", "size", "=", "(", "n_mp", ",", "2", ")", ")", "\n", "\n", "if", "opt", ":", "\n", "            ", "hook", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "hook_mm", "[", "0", "]", ",", "self", ".", "hook_mm", "[", "1", "]", ",", "size", "=", "(", "n_hp", ",", "2", ")", ")", "\n", "hook", "=", "hook", "@", "self", ".", "hook_rotm", ".", "T", "+", "self", ".", "hook_b", "\n", "points", "=", "np", ".", "concatenate", "(", "[", "mid", ",", "hook", "]", ",", "axis", "=", "0", ")", "\n", "nonpad", "=", "self", ".", "n_points", "\n", "", "else", ":", "\n", "            ", "pad", "=", "np", ".", "zeros", "(", "(", "n_hp", ",", "2", ")", ")", "\n", "points", "=", "np", ".", "concatenate", "(", "[", "mid", ",", "pad", "]", ",", "axis", "=", "0", ")", "\n", "nonpad", "=", "n_mp", "\n", "\n", "", "points", "=", "self", ".", "pad", "(", "points", ",", "nonpad", ")", "\n", "\n", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits._build_seven": [[67, 89], ["int", "int", "numpy.random.uniform", "numpy.random.uniform", "digits.Digits.pad", "numpy.random.uniform", "numpy.concatenate", "numpy.zeros", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits.pad"], ["", "def", "_build_seven", "(", "self", ",", "opt", ")", ":", "\n", "        ", "n_mp", "=", "int", "(", "self", ".", "n_points", "/", "2", ")", "\n", "n_tp", "=", "int", "(", "self", ".", "n_points", "/", "4", ")", "\n", "n_bp", "=", "self", ".", "n_points", "-", "n_mp", "-", "n_tp", "\n", "\n", "mid", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "mid_mm", "[", "0", "]", ",", "self", ".", "mid_mm", "[", "1", "]", ",", "size", "=", "(", "n_mp", ",", "2", ")", ")", "\n", "mid", "=", "mid", "@", "self", ".", "mid_rotm", ".", "T", "+", "self", ".", "mid_seven_b", "\n", "\n", "top", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "top_bar_mm", "[", "0", "]", ",", "self", ".", "top_bar_mm", "[", "1", "]", ",", "size", "=", "(", "n_tp", ",", "2", ")", ")", "\n", "\n", "if", "opt", ":", "\n", "            ", "bar", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "bar_mm", "[", "0", "]", ",", "self", ".", "bar_mm", "[", "1", "]", ",", "size", "=", "(", "n_bp", ",", "2", ")", ")", "\n", "points", "=", "np", ".", "concatenate", "(", "[", "mid", ",", "top", ",", "bar", "]", ",", "axis", "=", "0", ")", "\n", "nonpad", "=", "self", ".", "n_points", "\n", "", "else", ":", "\n", "            ", "pad", "=", "np", ".", "zeros", "(", "(", "n_bp", ",", "2", ")", ")", "\n", "points", "=", "np", ".", "concatenate", "(", "[", "mid", ",", "top", ",", "pad", "]", ",", "axis", "=", "0", ")", "\n", "nonpad", "=", "n_mp", "+", "n_tp", "\n", "\n", "", "points", "=", "self", ".", "pad", "(", "points", ",", "nonpad", ")", "\n", "\n", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits.__getitem__": [[90, 97], ["random.choice", "random.choice", "fn", "list", "enumerate"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "n", ",", "fn", "=", "random", ".", "choice", "(", "list", "(", "enumerate", "(", "self", ".", "figure_fn", ")", ")", ")", "\n", "opt", "=", "random", ".", "choice", "(", "[", "False", ",", "True", "]", ")", "\n", "\n", "points", "=", "fn", "(", "opt", "=", "opt", ")", "\n", "\n", "return", "n", ",", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits.__len__": [[98, 100], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "", "", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.mnist_set.MNISTSet.__init__": [[12, 32], ["pathlib.Path", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "mnist_set.MNISTSet.cache", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Normalize", "torchvision.Normalize"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.mnist_set.MNISTSet.cache"], ["def", "__init__", "(", "self", ",", "threshold", "=", "0.0", ",", "n_points", "=", "342", ",", "mode", "=", "'train'", ",", "\n", "root", "=", "\".mnist\"", ",", "full", "=", "False", ",", "random_padding", "=", "False", ",", "\n", "overwrite_cache", "=", "False", ",", "filter_label", "=", "None", ",", "\n", "mem_feat", "=", "False", ")", ":", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "self", ".", "root", "=", "Path", "(", "root", ")", "\n", "self", ".", "threshold", "=", "threshold", "\n", "self", ".", "full", "=", "full", "\n", "self", ".", "random_padding", "=", "random_padding", "\n", "self", ".", "overwrite_cache", "=", "overwrite_cache", "\n", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "]", "\n", ")", "\n", "mnist", "=", "torchvision", ".", "datasets", ".", "MNIST", "(", "\n", "train", "=", "mode", "==", "'train'", ",", "transform", "=", "transform", ",", "download", "=", "True", ",", "root", "=", "root", "\n", ")", "\n", "self", ".", "filter_label", "=", "filter_label", "\n", "self", ".", "mem_feat", "=", "mem_feat", "\n", "self", ".", "max", "=", "n_points", "\n", "self", ".", "data", "=", "self", ".", "cache", "(", "mnist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.mnist_set.MNISTSet.cache": [[33, 53], ["print", "torch.save", "print", "cache_path.exists", "torch.load", "mnist_set.MNISTSet.image_to_set", "data.append", "map"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.mnist_set.MNISTSet.image_to_set"], ["", "def", "cache", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "keep_label", "=", "\"all\"", "if", "self", ".", "filter_label", "is", "None", "else", "\"\"", ".", "join", "(", "map", "(", "str", ",", "self", ".", "filter_label", ")", ")", "\n", "cache_path", "=", "self", ".", "root", "/", "(", "f\"mnist_{self.mode}\"", "\n", "f\"_{self.threshold}\"", "\n", "f\"_{keep_label}.pth\"", ")", "\n", "if", "cache_path", ".", "exists", "(", ")", "and", "not", "self", ".", "overwrite_cache", ":", "\n", "            ", "return", "torch", ".", "load", "(", "cache_path", ")", "\n", "\n", "", "print", "(", "\"Processing dataset...\"", ")", "\n", "data", "=", "[", "]", "\n", "for", "datapoint", "in", "dataset", ":", "\n", "            ", "img", ",", "label", "=", "datapoint", "\n", "if", "self", ".", "filter_label", "is", "not", "None", "and", "label", "not", "in", "self", ".", "filter_label", ":", "\n", "                ", "continue", "\n", "", "point_set", ",", "cardinality", "=", "self", ".", "image_to_set", "(", "img", ")", "\n", "data", ".", "append", "(", "(", "point_set", ",", "label", ",", "cardinality", ")", ")", "\n", "", "torch", ".", "save", "(", "data", ",", "cache_path", ")", "\n", "print", "(", "\"Done!\"", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.mnist_set.MNISTSet.image_to_set": [[54, 58], ["torch.nonzero", "torch.nonzero.size", "img.squeeze"], "methods", ["None"], ["", "def", "image_to_set", "(", "self", ",", "img", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "nonzero", "(", "(", "img", ".", "squeeze", "(", "0", ")", ">", "self", ".", "threshold", ")", ")", "\n", "cardinality", "=", "idx", ".", "size", "(", "0", ")", "\n", "return", "idx", ",", "cardinality", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.mnist_set.MNISTSet.__getitem__": [[59, 79], ["torch.cat.size", "torch.cat.float", "torch.cat", "torch.cat", "torch.zeros", "mask[].fill_", "torch.cat", "torch.randperm", "torch.rand", "torch.zeros"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "s", ",", "l", ",", "c", "=", "self", ".", "data", "[", "item", "]", "\n", "# make sure set is shuffled", "\n", "s", "=", "s", "[", "torch", ".", "randperm", "(", "c", ")", "]", "\n", "# pad to fixed size", "\n", "padding_size", "=", "self", ".", "max", "-", "s", ".", "size", "(", "0", ")", "\n", "# put in range [0, 1]", "\n", "s", "=", "s", ".", "float", "(", ")", "/", "27.", "\n", "if", "self", ".", "random_padding", ":", "\n", "            ", "s", "=", "torch", ".", "cat", "(", "[", "s", ",", "torch", ".", "rand", "(", "padding_size", ",", "2", ",", "dtype", "=", "torch", ".", "float", ")", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "            ", "s", "=", "torch", ".", "cat", "(", "[", "s", ",", "torch", ".", "zeros", "(", "padding_size", ",", "2", ")", "]", ",", "dim", "=", "0", ")", "\n", "\n", "# mask of which elements are valid,not padding", "\n", "", "if", "self", ".", "mem_feat", ":", "\n", "            ", "mask", "=", "torch", ".", "zeros", "(", "self", ".", "max", ",", "1", ")", "\n", "mask", "[", ":", "c", "]", ".", "fill_", "(", "1", ")", "\n", "s", "=", "torch", ".", "cat", "(", "[", "s", ",", "mask", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "return", "l", ",", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.mnist_set.MNISTSet.__len__": [[80, 85], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "'train'", "or", "self", ".", "full", ":", "\n", "            ", "return", "len", "(", "self", ".", "data", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "data", ")", "//", "10", "", "", "", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.__init__": [[21, 43], ["clevr_set.CLEVRSet.prepare_scenes", "pathlib.Path.home", "clevr_set.CLEVRSet.img_db", "open", "json.load", "enumerate"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.prepare_scenes", "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.img_db"], ["def", "__init__", "(", "self", ",", "mode", ",", "base_path", "=", "Path", ".", "home", "(", ")", "/", "\"data/clevr\"", ",", "n_points", "=", "10", ",", "n_objects", "=", "None", ",", "mem_feat", "=", "False", ",", "box", "=", "False", ",", "full", "=", "False", ")", ":", "\n", "        ", "assert", "mode", "in", "{", "\n", "\"train\"", ",", "\n", "\"val\"", ",", "\n", "\"test\"", ",", "\n", "}", "# note: test isn't very useful since it doesn't have ground-truth scene information", "\n", "self", ".", "base_path", "=", "base_path", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "n_objects", "=", "n_objects", "\n", "self", ".", "n_points", "=", "n_points", "\n", "self", ".", "mem_feat", "=", "mem_feat", "\n", "self", ".", "box", "=", "box", "# True if clevr-box version, False if clevr-state version", "\n", "self", ".", "full", "=", "full", "# Use full validation set?", "\n", "\n", "with", "self", ".", "img_db", "(", ")", "as", "db", ":", "\n", "            ", "ids", "=", "db", "[", "\"image_ids\"", "]", "\n", "self", ".", "image_id_to_index", "=", "{", "id", ":", "i", "for", "i", ",", "id", "in", "enumerate", "(", "ids", ")", "}", "\n", "", "self", ".", "image_db", "=", "None", "\n", "\n", "with", "open", "(", "self", ".", "scenes_path", ")", "as", "fd", ":", "\n", "            ", "scenes", "=", "json", ".", "load", "(", "fd", ")", "[", "\"scenes\"", "]", "\n", "", "self", ".", "img_ids", ",", "self", ".", "scenes", "=", "self", ".", "prepare_scenes", "(", "scenes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.object_to_fv": [[44, 57], ["one_hot", "one_hot", "one_hot", "one_hot", "sum", "sum", "sum", "sum"], "methods", ["None"], ["", "def", "object_to_fv", "(", "self", ",", "obj", ")", ":", "\n", "        ", "coords", "=", "[", "p", "/", "3", "for", "p", "in", "obj", "[", "\"3d_coords\"", "]", "]", "\n", "one_hot", "=", "lambda", "key", ":", "[", "obj", "[", "key", "]", "==", "x", "for", "x", "in", "CLASSES", "[", "key", "]", "]", "\n", "material", "=", "one_hot", "(", "\"material\"", ")", "\n", "color", "=", "one_hot", "(", "\"color\"", ")", "\n", "shape", "=", "one_hot", "(", "\"shape\"", ")", "\n", "size", "=", "one_hot", "(", "\"size\"", ")", "\n", "assert", "sum", "(", "material", ")", "==", "1", "\n", "assert", "sum", "(", "color", ")", "==", "1", "\n", "assert", "sum", "(", "shape", ")", "==", "1", "\n", "assert", "sum", "(", "size", ")", "==", "1", "\n", "# concatenate all the classes", "\n", "return", "coords", "+", "material", "+", "color", "+", "shape", "+", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.prepare_scenes": [[58, 92], ["torch.cat.size", "torch.zeros", "img_ids.append", "scenes.append", "clevr_set.CLEVRSet.extract_bounding_boxes", "torch.tensor", "torch.tensor().transpose", "torch.cat", "clevr_set.CLEVRSet.object_to_fv", "torch.tensor", "torch.zeros", "torch.cat.size"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.extract_bounding_boxes", "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.object_to_fv"], ["", "def", "prepare_scenes", "(", "self", ",", "scenes_json", ")", ":", "\n", "        ", "img_ids", "=", "[", "]", "\n", "scenes", "=", "[", "]", "\n", "for", "scene", "in", "scenes_json", ":", "\n", "            ", "img_idx", "=", "scene", "[", "\"image_index\"", "]", "\n", "# different objects depending on bbox version or attribute version of CLEVR sets", "\n", "if", "self", ".", "box", ":", "\n", "                ", "objects", "=", "self", ".", "extract_bounding_boxes", "(", "scene", ")", "\n", "objects", "=", "torch", ".", "tensor", "(", "objects", ")", "\n", "", "else", ":", "\n", "                ", "objects", "=", "[", "self", ".", "object_to_fv", "(", "obj", ")", "for", "obj", "in", "scene", "[", "\"objects\"", "]", "]", "\n", "objects", "=", "torch", ".", "tensor", "(", "objects", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "", "num_objects", "=", "objects", ".", "size", "(", "1", ")", "\n", "\n", "# skip if too many objects", "\n", "if", "self", ".", "n_objects", "is", "not", "None", "and", "num_objects", "not", "in", "self", ".", "n_objects", ":", "\n", "                ", "continue", "\n", "\n", "# pad with 0s", "\n", "", "if", "num_objects", "<", "self", ".", "n_points", ":", "\n", "                ", "objects", "=", "torch", ".", "cat", "(", "\n", "[", "\n", "objects", ",", "\n", "torch", ".", "zeros", "(", "objects", ".", "size", "(", "0", ")", ",", "self", ".", "n_points", "-", "num_objects", ")", ",", "\n", "]", ",", "\n", "dim", "=", "1", ",", "\n", ")", "\n", "# fill in masks", "\n", "", "mask", "=", "torch", ".", "zeros", "(", "self", ".", "n_points", ")", "\n", "mask", "[", ":", "num_objects", "]", "=", "1", "\n", "\n", "img_ids", ".", "append", "(", "img_idx", ")", "\n", "scenes", ".", "append", "(", "(", "objects", ",", "mask", ")", ")", "\n", "", "return", "img_ids", ",", "scenes", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.extract_bounding_boxes": [[93, 160], ["len", "numpy.zeros", "enumerate", "ymin.append", "ymax.append", "xmin.append", "xmax.append"], "methods", ["None"], ["", "def", "extract_bounding_boxes", "(", "self", ",", "scene", ")", ":", "\n", "        ", "\"\"\"\n        Code used for 'Object-based Reasoning in VQA' to generate bboxes\n        https://arxiv.org/abs/1801.09718\n        https://github.com/larchen/clevr-vqa/blob/master/bounding_box.py#L51-L107\n        \"\"\"", "\n", "objs", "=", "scene", "[", "\"objects\"", "]", "\n", "rotation", "=", "scene", "[", "\"directions\"", "]", "[", "\"right\"", "]", "\n", "\n", "num_boxes", "=", "len", "(", "objs", ")", "\n", "\n", "boxes", "=", "np", ".", "zeros", "(", "(", "1", ",", "num_boxes", ",", "4", ")", ")", "\n", "\n", "xmin", "=", "[", "]", "\n", "ymin", "=", "[", "]", "\n", "xmax", "=", "[", "]", "\n", "ymax", "=", "[", "]", "\n", "classes", "=", "[", "]", "\n", "classes_text", "=", "[", "]", "\n", "\n", "for", "i", ",", "obj", "in", "enumerate", "(", "objs", ")", ":", "\n", "            ", "[", "x", ",", "y", ",", "z", "]", "=", "obj", "[", "\"pixel_coords\"", "]", "\n", "\n", "[", "x1", ",", "y1", ",", "z1", "]", "=", "obj", "[", "\"3d_coords\"", "]", "\n", "\n", "cos_theta", ",", "sin_theta", ",", "_", "=", "rotation", "\n", "\n", "x1", "=", "x1", "*", "cos_theta", "+", "y1", "*", "sin_theta", "\n", "y1", "=", "x1", "*", "-", "sin_theta", "+", "y1", "*", "cos_theta", "\n", "\n", "height_d", "=", "6.9", "*", "z1", "*", "(", "15", "-", "y1", ")", "/", "2.0", "\n", "height_u", "=", "height_d", "\n", "width_l", "=", "height_d", "\n", "width_r", "=", "height_d", "\n", "\n", "if", "obj", "[", "\"shape\"", "]", "==", "\"cylinder\"", ":", "\n", "                ", "d", "=", "9.4", "+", "y1", "\n", "h", "=", "6.4", "\n", "s", "=", "z1", "\n", "\n", "height_u", "*=", "(", "s", "*", "(", "h", "/", "d", "+", "1", ")", ")", "/", "(", "(", "s", "*", "(", "h", "/", "d", "+", "1", ")", ")", "-", "(", "s", "*", "(", "h", "-", "s", ")", "/", "d", ")", ")", "\n", "height_d", "=", "height_u", "*", "(", "h", "-", "s", "+", "d", ")", "/", "(", "h", "+", "s", "+", "d", ")", "\n", "\n", "width_l", "*=", "11", "/", "(", "10", "+", "y1", ")", "\n", "width_r", "=", "width_l", "\n", "\n", "", "if", "obj", "[", "\"shape\"", "]", "==", "\"cube\"", ":", "\n", "                ", "height_u", "*=", "1.3", "*", "10", "/", "(", "10", "+", "y1", ")", "\n", "height_d", "=", "height_u", "\n", "width_l", "=", "height_u", "\n", "width_r", "=", "height_u", "\n", "\n", "", "obj_name", "=", "(", "\n", "obj", "[", "\"size\"", "]", "\n", "+", "\" \"", "\n", "+", "obj", "[", "\"color\"", "]", "\n", "+", "\" \"", "\n", "+", "obj", "[", "\"material\"", "]", "\n", "+", "\" \"", "\n", "+", "obj", "[", "\"shape\"", "]", "\n", ")", "\n", "ymin", ".", "append", "(", "(", "y", "-", "height_d", ")", "/", "320.0", ")", "\n", "ymax", ".", "append", "(", "(", "y", "+", "height_u", ")", "/", "320.0", ")", "\n", "xmin", ".", "append", "(", "(", "x", "-", "width_l", ")", "/", "480.0", ")", "\n", "xmax", ".", "append", "(", "(", "x", "+", "width_r", ")", "/", "480.0", ")", "\n", "\n", "", "return", "xmin", ",", "ymin", ",", "xmax", ",", "ymax", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.images_folder": [[161, 164], ["os.path.join"], "methods", ["None"], ["", "@", "property", "\n", "def", "images_folder", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "base_path", ",", "\"images\"", ",", "self", ".", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.scenes_path": [[165, 171], ["os.path.join", "ValueError"], "methods", ["None"], ["", "@", "property", "\n", "def", "scenes_path", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "\"test\"", ":", "\n", "            ", "raise", "ValueError", "(", "\"Scenes are not available for test\"", ")", "\n", "", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "base_path", ",", "\"scenes\"", ",", "\"CLEVR_{}_scenes.json\"", ".", "format", "(", "self", ".", "mode", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.img_db": [[173, 176], ["os.path.join", "h5py.File"], "methods", ["None"], ["", "def", "img_db", "(", "self", ")", ":", "\n", "        ", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "base_path", ",", "\"{}-images.h5\"", ".", "format", "(", "self", ".", "mode", ")", ")", "\n", "return", "h5py", ".", "File", "(", "path", ",", "\"r\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.load_image": [[177, 183], ["clevr_set.CLEVRSet.img_db"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.img_db"], ["", "def", "load_image", "(", "self", ",", "image_id", ")", ":", "\n", "        ", "if", "self", ".", "image_db", "is", "None", ":", "\n", "            ", "self", ".", "image_db", "=", "self", ".", "img_db", "(", ")", "\n", "", "index", "=", "self", ".", "image_id_to_index", "[", "image_id", "]", "\n", "image", "=", "self", ".", "image_db", "[", "\"images\"", "]", "[", "index", "]", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.__getitem__": [[184, 194], ["clevr_set.CLEVRSet.load_image", "torch.cat", "size.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.load_image"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "image_id", "=", "self", ".", "img_ids", "[", "item", "]", "\n", "image", "=", "self", ".", "load_image", "(", "image_id", ")", "\n", "objects", ",", "size", "=", "self", ".", "scenes", "[", "item", "]", "\n", "objects", "=", "objects", ".", "T", "\n", "\n", "if", "self", ".", "mem_feat", ":", "\n", "            ", "objects", "=", "torch", ".", "cat", "(", "[", "objects", ",", "size", ".", "unsqueeze", "(", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "return", "image", ",", "objects", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.clevr_set.CLEVRSet.__len__": [[195, 200], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "mode", "==", "\"train\"", "or", "self", ".", "full", ":", "\n", "            ", "return", "len", "(", "self", ".", "scenes", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "scenes", ")", "//", "10", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.CelebASet.__init__": [[25, 48], ["super().__init__", "celeba_set.CelebASet.init_attr_combinations", "pathlib.Path", "max", "celeba_set.CelebASet.get_default_transform", "ValueError"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__", "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.CelebASet.init_attr_combinations", "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.CelebASet.get_default_transform"], ["def", "__init__", "(", "self", ",", "root", ",", "mode", ",", "n_attr", ",", "set_size", ",", "n_outliers", ",", "p_outliers", "=", "None", ",", "\n", "min_n_target", "=", "1", ",", "length", "=", "500", ",", "transform", "=", "None", ",", "download", "=", "False", ")", ":", "\n", "        ", "if", "mode", "==", "'val'", ":", "\n", "            ", "split", "=", "'valid'", "\n", "", "elif", "mode", "==", "'train'", ":", "\n", "            ", "split", "=", "'train'", "\n", "", "elif", "mode", "==", "'test'", ":", "\n", "            ", "split", "=", "'test'", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "mode", ")", "\n", "", "super", "(", ")", ".", "__init__", "(", "Path", "(", "root", ")", ",", "split", ",", "target_type", "=", "\"attr\"", ",", "transform", "=", "transform", ",", "download", "=", "download", ")", "\n", "self", ".", "n_attr", "=", "n_attr", "\n", "self", ".", "set_size", "=", "set_size", "\n", "self", ".", "n_outliers", "=", "n_outliers", "\n", "self", ".", "p_outliers", "=", "p_outliers", "\n", "self", ".", "min_n_target", "=", "min_n_target", "\n", "self", ".", "length", "=", "length", "\n", "self", ".", "min_in", "=", "set_size", "-", "max", "(", "n_outliers", ")", "\n", "\n", "if", "self", ".", "transform", "is", "None", ":", "\n", "            ", "self", ".", "transform", "=", "self", ".", "get_default_transform", "(", ")", "\n", "\n", "", "self", ".", "init_attr_combinations", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.CelebASet.init_attr_combinations": [[49, 57], ["numpy.array", "celeba_set.CelebASet.attr[].bool().all().int().sum", "list", "itertools.combinations", "celeba_set.CelebASet.attr[].bool().all().int", "celeba_set.CelebASet.attr[].bool().all", "celeba_set.CelebASet.attr[].bool"], "methods", ["None"], ["", "def", "init_attr_combinations", "(", "self", ",", "threshold", "=", "10", ")", ":", "\n", "        ", "\"\"\" \n        Truncate attribute combinations by their number of images (having said attributes)\n        \"\"\"", "\n", "# all combinations", "\n", "attr_comb", "=", "np", ".", "array", "(", "list", "(", "combinations", "(", "self", ".", "KEEP_ATTR", ",", "self", ".", "n_attr", ")", ")", ")", "\n", "n_img_per_attr_comb", "=", "self", ".", "attr", "[", ":", ",", "attr_comb", "]", ".", "bool", "(", ")", ".", "all", "(", "2", ")", ".", "int", "(", ")", ".", "sum", "(", "0", ")", "\n", "self", ".", "attr_comb", "=", "attr_comb", "[", "n_img_per_attr_comb", ">", "threshold", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.CelebASet.load_imgs": [[58, 67], ["torch.stack", "torchvision.datasets.folder.default_loader", "torchvision.datasets.folder.default_loader", "torch.stack.append", "celeba_set.CelebASet.transform"], "methods", ["None"], ["", "def", "load_imgs", "(", "self", ",", "sam", ")", ":", "\n", "        ", "imgs", "=", "[", "]", "\n", "for", "i", "in", "sam", ":", "\n", "            ", "img", "=", "default_loader", "(", "self", ".", "root", "/", "self", ".", "base_folder", "/", "\"img_align_celeba\"", "/", "self", ".", "filename", "[", "i", "]", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "                ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "imgs", ".", "append", "(", "img", ")", "\n", "", "imgs", "=", "torch", ".", "stack", "(", "imgs", ")", "\n", "return", "imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.CelebASet.get_default_transform": [[68, 74], ["torchvision.Compose", "torchvision.Compose", "torchvision.Resize", "torchvision.Resize", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "get_default_transform", "(", "self", ")", ":", "\n", "        ", "tr", "=", "[", "\n", "transforms", ".", "Resize", "(", "(", "128", ",", "128", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", "\n", "return", "transforms", ".", "Compose", "(", "tr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.CelebASet.__getitem__": [[75, 105], ["numpy.random.choice", "torch.zeros", "celeba_set.CelebASet.load_imgs", "numpy.random.choice", "numpy.random.choice", "numpy.concatenate", "celeba_set.get_targets", "numpy.flatnonzero().squeeze", "numpy.flatnonzero().squeeze", "get_targets.size", "numpy.random.randint", "numpy.flatnonzero", "numpy.flatnonzero"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.CelebASet.load_imgs", "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.get_targets"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# select random subset size of outlier samples", "\n", "        ", "n_out", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "n_outliers", ",", "p", "=", "self", ".", "p_outliers", ")", "\n", "n_in", "=", "self", ".", "set_size", "-", "n_out", "\n", "\n", "targets", "=", "torch", ".", "zeros", "(", "self", ".", "set_size", ")", "\n", "targets", "[", ":", "n_in", "]", "=", "1.", "\n", "\n", "while", "True", ":", "\n", "# select random attribute combinations used to sample inliers", "\n", "            ", "attr_in", "=", "self", ".", "attr_comb", "[", "np", ".", "random", ".", "randint", "(", "self", ".", "attr_comb", ".", "shape", "[", "0", "]", ")", "]", "\n", "\n", "# sample", "\n", "inlier_indicator", "=", "(", "self", ".", "attr", "[", ":", ",", "attr_in", "]", "==", "1", ")", ".", "all", "(", "1", ")", "\n", "sample_in", "=", "np", ".", "random", ".", "choice", "(", "\n", "np", ".", "flatnonzero", "(", "inlier_indicator", ")", ".", "squeeze", "(", ")", ",", "size", "=", "(", "n_in", ",", ")", ",", "replace", "=", "False", ")", "\n", "sample_out", "=", "np", ".", "random", ".", "choice", "(", "\n", "np", ".", "flatnonzero", "(", "~", "inlier_indicator", ")", ".", "squeeze", "(", ")", ",", "size", "=", "(", "n_out", ",", ")", ",", "replace", "=", "False", ")", "\n", "sample", "=", "np", ".", "concatenate", "(", "[", "sample_in", ",", "sample_out", "]", ")", "\n", "\n", "# compute all valid targets, for example sample_out may include images", "\n", "# that share other attributes with sample_in, then were used for sampling", "\n", "all_targets", "=", "get_targets", "(", "self", ".", "attr", "[", "sample", "]", "[", ":", ",", "self", ".", "KEEP_ATTR", "]", ",", "min_in", "=", "self", ".", "min_in", ")", "\n", "# re-sample if there aren't enough targets", "\n", "if", "all_targets", ".", "size", "(", "0", ")", ">=", "self", ".", "min_n_target", ":", "\n", "                ", "break", "\n", "\n", "", "", "imgs", "=", "self", ".", "load_imgs", "(", "sample", ")", "\n", "\n", "return", "imgs", ",", "targets", ",", "all_targets", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.CelebASet.__len__": [[106, 108], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.get_targets": [[109, 124], ["attr.size", "torch.tensor", "torch.cartesian_prod", "range", "torch.stack", "torch.cartesian_prod.size", "torch.stack.append", "celeba_set.check", "torch.cartesian_prod.sum"], "function", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.check"], ["", "", "def", "get_targets", "(", "attr", ",", "min_in", ")", ":", "\n", "# list all possible combinations", "\n", "    ", "set_size", "=", "attr", ".", "size", "(", "0", ")", "\n", "x", "=", "torch", ".", "tensor", "(", "[", "0", ",", "1", "]", ")", "\n", "targets", "=", "torch", ".", "cartesian_prod", "(", "*", "[", "x", "]", "*", "set_size", ")", "\n", "\n", "# remove those that do not have enough inliers", "\n", "targets", "=", "targets", "[", "targets", ".", "sum", "(", "1", ")", ">=", "min_in", "]", "\n", "\n", "# check the remaining for if they are valid", "\n", "valid", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "targets", ".", "size", "(", "0", ")", ")", ":", "\n", "        ", "valid", ".", "append", "(", "check", "(", "targets", "[", "i", "]", ",", "attr", ")", ")", "\n", "", "valid", "=", "torch", ".", "stack", "(", "valid", ")", "\n", "return", "targets", "[", "valid", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.celeba_set.check": [[125, 133], ["target.squeeze().bool", "inlier_attr.bool().all", "inlier_attr.bool().all.sum", "target.squeeze", "inlier_attr.bool", "inlier_attr.bool().all.sum", "outlier_attr.bool"], "function", ["None"], ["", "def", "check", "(", "target", ",", "attr", ",", "n_attr", "=", "2", ")", ":", "\n", "    ", "inlier_indicator", "=", "target", ".", "squeeze", "(", ")", ".", "bool", "(", ")", "\n", "inlier_attr", "=", "attr", "[", "inlier_indicator", "]", "# attributes for each inlier", "\n", "attr_in", "=", "inlier_attr", ".", "bool", "(", ")", ".", "all", "(", "0", ")", "# attributes shared by all inliers", "\n", "outlier_attr", "=", "attr", "[", "~", "inlier_indicator", "]", "# attributes for each outlier", "\n", "shared_inlier_attr", "=", "(", "attr_in", ".", "sum", "(", ")", ">=", "n_attr", ")", "# predicate checking for sufficient number of shared attribtues", "\n", "not_shared_with_outliers", "=", "(", "(", "attr_in", "&", "outlier_attr", ".", "bool", "(", ")", ")", ".", "sum", "(", "1", ")", "<", "attr_in", ".", "sum", "(", ")", ")", ".", "all", "(", ")", "\n", "return", "shared_inlier_attr", "&", "not_shared_with_outliers", "\n", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.polygons.Polygons.__init__": [[9, 18], ["torch.tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_points", ",", "n_poly", ",", "radius", "=", "0.35", ",", "noise", "=", "True", ",", "length", "=", "60000", ",", "mem_feat", "=", "False", ",", "mode", "=", "None", ")", ":", "\n", "        ", "self", ".", "n_points", "=", "n_points", "\n", "self", ".", "length", "=", "length", "\n", "self", ".", "center", "=", "torch", ".", "tensor", "(", "(", "0.5", ",", "0.5", ")", ")", "\n", "self", ".", "radius", "=", "radius", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "n_poly", "=", "n_poly", "\n", "self", ".", "mem_feat", "=", "mem_feat", "\n", "self", ".", "mode", "=", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.polygons.Polygons._get_n_polygon": [[19, 44], ["torch.linspace", "torch.stack", "torch.zeros", "torch.cat", "torch.empty().uniform_", "torch.cos", "torch.sin", "torch.zeros", "membership[].fill_", "torch.cat", "print", "torch.empty"], "methods", ["None"], ["", "def", "_get_n_polygon", "(", "self", ",", "n", ")", ":", "\n", "        ", "angles", "=", "torch", ".", "linspace", "(", "0.", ",", "TWO_PI", "-", "(", "TWO_PI", "/", "n", ")", ",", "n", ")", "\n", "radius", "=", "self", ".", "radius", "\n", "if", "self", ".", "noise", ":", "\n", "            ", "angles", "+=", "torch", ".", "empty", "(", "1", ")", ".", "uniform_", "(", "0.", ",", "TWO_PI", ")", "\n", "# target = torch.randint(self.centers.shape[0], (1,))", "\n", "", "center", "=", "self", ".", "center", "\n", "\n", "x", "=", "torch", ".", "cos", "(", "angles", ")", "*", "radius", "\n", "y", "=", "torch", ".", "sin", "(", "angles", ")", "*", "radius", "\n", "\n", "coo", "=", "torch", ".", "stack", "(", "(", "x", ",", "y", ")", ",", "dim", "=", "1", ")", "\n", "coo", "=", "coo", "+", "center", "\n", "\n", "padding", "=", "torch", ".", "zeros", "(", "self", ".", "n_points", "-", "n", ",", "2", ",", "dtype", "=", "coo", ".", "dtype", ")", "\n", "padding_len", "=", "padding", ".", "shape", "[", "0", "]", "\n", "nonpadding_len", "=", "coo", ".", "shape", "[", "0", "]", "\n", "coo", "=", "torch", ".", "cat", "(", "[", "coo", ",", "padding", "]", ",", "dim", "=", "0", ")", "\n", "if", "self", ".", "mem_feat", ":", "\n", "            ", "membership", "=", "torch", ".", "zeros", "(", "self", ".", "n_points", ",", "1", ",", "dtype", "=", "coo", ".", "dtype", ")", "\n", "membership", "[", ":", "n", "]", ".", "fill_", "(", "1.", ")", "\n", "coo", "=", "torch", ".", "cat", "(", "[", "coo", ",", "membership", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "if", "self", ".", "n_points", "!=", "coo", ".", "shape", "[", "0", "]", ":", "\n", "            ", "print", "(", "coo", ".", "shape", ",", "n", ",", "padding_len", ",", "nonpadding_len", ")", "\n", "", "return", "coo", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.polygons.Polygons.__getitem__": [[45, 50], ["random.choice", "polygons.Polygons._get_n_polygon"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.datasets.polygons.Polygons._get_n_polygon"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "# angles = torch.empty(self.n_points).uniform_(0., 2 * np.pi)", "\n", "        ", "n", "=", "random", ".", "choice", "(", "self", ".", "n_poly", ")", "\n", "coo", "=", "self", ".", "_get_n_polygon", "(", "n", ")", "\n", "return", "n", ",", "coo", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.datasets.polygons.Polygons.__len__": [[51, 53], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.__init__": [[14, 28], ["torch.Module.__init__", "modules.ConvEncoder", "modules.FSEncoder", "modules.L1Energy", "desp_object_detection.Model.configure_optimizer", "desp_object_detection.Model._init_datasets", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.configure_optimizer", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model._init_datasets"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "pool", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", "\n", "self", ".", "global_step", "=", "0", "\n", "self", ".", "pool", "=", "pool", "\n", "self", ".", "cfg", "=", "cfg", "\n", "\n", "self", ".", "img_enc", "=", "ConvEncoder", "(", "**", "self", ".", "cfg", ".", "img_enc", ")", "\n", "# this set encoder differs from the paper and does not apply RN,", "\n", "# leading to much faster training times at almost the same performance", "\n", "self", ".", "set_enc", "=", "FSEncoder", "(", "**", "self", ".", "cfg", ".", "set_enc", ")", "\n", "self", ".", "energy_fn", "=", "L1Energy", "(", "self", ".", "set_enc", ")", "\n", "self", ".", "optimizers", "=", "self", ".", "configure_optimizer", "(", ")", "\n", "self", ".", "_init_datasets", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.forward": [[29, 42], ["desp_object_detection.Model.img_enc", "gradient_iterators.langevin_sample", "img.to", "set.size"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.None.gradient_iterators.langevin_sample"], ["", "def", "forward", "(", "self", ",", "batch", ",", "cfg_sample", ")", ":", "\n", "        ", "img", ",", "set", "=", "batch", "\n", "\n", "enc_x", "=", "self", ".", "img_enc", "(", "img", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "y_T", ",", "report", "=", "langevin_sample", "(", "\n", "self", ".", "energy_fn", ",", "\n", "enc_x", ",", "\n", "set_size", "=", "set", ".", "size", "(", "1", ")", ",", "\n", "d_y", "=", "self", ".", "cfg", ".", "set_enc", ".", "d_in", ",", "\n", "**", "cfg_sample", ",", "\n", "device", "=", "self", ".", "device", ")", "\n", "\n", "return", "y_T", ",", "enc_x", ",", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.loss_and_metrics": [[43, 64], ["set.to.to.to", "set.to.to.clone().detach", "desp_object_detection.Model.energy_fn().mean", "desp_object_detection.Model.energy_fn().mean", "dict", "set.to.to.clone", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "desp_object_detection.Model.energy_fn", "desp_object_detection.Model.energy_fn"], "methods", ["None"], ["", "def", "loss_and_metrics", "(", "self", ",", "batch", ",", "y_T", ",", "enc_x", ")", ":", "\n", "        ", "_", ",", "set", "=", "batch", "\n", "set", "=", "set", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "noise_target", "=", "set", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "if", "self", ".", "cfg", ".", "estim", ".", "data_noise", ":", "\n", "            ", "noise_target", "+=", "self", ".", "cfg", ".", "estim", ".", "eps_d", "*", "torch", ".", "randn_like", "(", "set", ")", "\n", "\n", "", "e_p", "=", "self", ".", "energy_fn", "(", "noise_target", ",", "enc_x", ")", ".", "mean", "(", ")", "\n", "e_n", "=", "self", ".", "energy_fn", "(", "y_T", ",", "enc_x", ")", ".", "mean", "(", ")", "\n", "\n", "card_p", "=", "(", "y_T", ">", "0.015", ")", ".", "all", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "float", "(", ")", "\n", "card_t", "=", "(", "set", ">", "0.015", ")", ".", "all", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "float", "(", ")", "\n", "rmse", "=", "(", "(", "card_p", "-", "card_t", ")", "**", "2", ")", ".", "mean", "(", "0", ")", ".", "sqrt", "(", ")", "\n", "\n", "loss", "=", "e_p", "-", "e_n", "\n", "\n", "return", "dict", "(", "loss", "=", "loss", ",", "\n", "e_n", "=", "e_n", ",", "\n", "e_p", "=", "e_p", ",", "\n", "rmse", "=", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.compose_report": [[65, 71], ["[].mean", "[].mean", "hasattr", "v.item", "report.items"], "methods", ["None"], ["", "def", "compose_report", "(", "self", ",", "loss_report", ",", "sample_report", ")", ":", "\n", "        ", "report", "=", "{", "**", "loss_report", ",", "\"gradnorm\"", ":", "sample_report", "[", "\"gradnorm\"", "]", "}", "\n", "report", "[", "\"first_energy\"", "]", "=", "sample_report", "[", "\"energies\"", "]", "[", "0", "]", ".", "mean", "(", ")", "\n", "report", "[", "\"last_energy\"", "]", "=", "sample_report", "[", "\"energies\"", "]", "[", "-", "1", "]", ".", "mean", "(", ")", "\n", "\n", "return", "{", "k", ":", "v", ".", "item", "(", ")", "if", "hasattr", "(", "v", ",", "\"item\"", ")", "else", "v", "for", "k", ",", "v", "in", "report", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.training_step": [[73, 101], ["desp_object_detection.Model.forward", "desp_object_detection.Model.loss_and_metrics", "desp_object_detection.Model.compose_report", "desp_object_detection.Model.optimizers.values", "loss.backward", "desp_object_detection.Model.optimizers.values", "opt.zero_grad", "opt.step", "plot.plot_rect", "plot.plot_rect", "utils.time_print"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.forward", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.loss_and_metrics", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.compose_report", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_rect", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_rect", "home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print"], ["", "def", "training_step", "(", "self", ",", "batch", ",", "batch_nb", ")", ":", "\n", "        ", "y_T", ",", "enc_x", ",", "sample_report", "=", "self", ".", "forward", "(", "batch", ",", "self", ".", "cfg", ".", "sample", ")", "\n", "loss_report", "=", "self", ".", "loss_and_metrics", "(", "batch", ",", "y_T", ",", "enc_x", ")", "\n", "\n", "report", "=", "self", ".", "compose_report", "(", "loss_report", ",", "sample_report", ")", "\n", "\n", "loss", "=", "loss_report", "[", "'loss'", "]", "\n", "\n", "for", "opt", "in", "self", ".", "optimizers", ".", "values", "(", ")", ":", "\n", "            ", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "opt", "in", "self", ".", "optimizers", ".", "values", "(", ")", ":", "\n", "            ", "opt", ".", "step", "(", ")", "\n", "\n", "", "if", "self", ".", "global_step", "%", "self", ".", "cfg", ".", "log", ".", "plt_freq", "==", "0", ":", "\n", "            ", "try", ":", "\n", "                ", "plot_rect", "(", "batch", "[", "1", "]", ",", "batch", "[", "0", "]", ",", "n_sets", "=", "16", ",", "\n", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_gt.png\"", ")", "\n", "plot_rect", "(", "y_T", ",", "batch", "[", "0", "]", ",", "n_sets", "=", "16", ",", "\n", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_samples.png\"", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "time_print", "(", "f\"Error while plotting: {e}\"", ")", "\n", "\n", "", "", "self", ".", "global_step", "+=", "1", "\n", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.eval_step": [[102, 119], ["desp_object_detection.Model.forward", "desp_object_detection.Model.loss_and_metrics", "desp_object_detection.Model.compose_report", "loss.chamfer_distance().mean", "plot.plot_rect", "plot.plot_rect", "loss.LAP_loss().mean", "loss.chamfer_distance", "batch[].to", "loss.LAP_loss", "batch[].to"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.forward", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.loss_and_metrics", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.compose_report", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_rect", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_rect", "home.repos.pwc.inspect_result.davzha_DESP.None.loss.chamfer_distance", "home.repos.pwc.inspect_result.davzha_DESP.None.loss.LAP_loss"], ["", "def", "eval_step", "(", "self", ",", "batch", ",", "batch_nb", ",", "mode", "=", "\"test\"", ")", ":", "\n", "        ", "y_T", ",", "enc_x", ",", "sample_report", "=", "self", ".", "forward", "(", "batch", ",", "self", ".", "cfg", ".", "predict", ")", "\n", "loss_report", "=", "self", ".", "loss_and_metrics", "(", "batch", ",", "y_T", ",", "enc_x", ")", "\n", "\n", "report", "=", "self", ".", "compose_report", "(", "loss_report", ",", "sample_report", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "eval_loss", "==", "\"chamfer\"", ":", "\n", "            ", "report", "[", "\"performance\"", "]", "=", "chamfer_distance", "(", "batch", "[", "1", "]", ".", "to", "(", "self", ".", "device", ")", ",", "y_T", ")", ".", "mean", "(", "0", ")", "\n", "", "elif", "self", ".", "cfg", ".", "eval_loss", "==", "\"lap\"", ":", "\n", "            ", "report", "[", "\"performance\"", "]", "=", "LAP_loss", "(", "batch", "[", "1", "]", ".", "to", "(", "self", ".", "device", ")", ",", "y_T", ",", "pool", "=", "self", ".", "pool", ")", ".", "mean", "(", "0", ")", "\n", "\n", "", "if", "batch_nb", "==", "0", ":", "\n", "            ", "plot_rect", "(", "batch", "[", "1", "]", ",", "batch", "[", "0", "]", ",", "n_sets", "=", "16", ",", "\n", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_{mode}_gt.png\"", ")", "\n", "plot_rect", "(", "y_T", ",", "batch", "[", "0", "]", ",", "n_sets", "=", "16", ",", "\n", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_{mode}_samples.png\"", ")", "\n", "", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.configure_optimizer": [[120, 124], ["desp_object_detection.Model.parameters", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict", "filter"], "methods", ["None"], ["", "def", "configure_optimizer", "(", "self", ")", ":", "\n", "        ", "param", "=", "self", ".", "parameters", "(", ")", "\n", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "param", ")", ",", "lr", "=", "self", ".", "cfg", ".", "optim", ".", "lr", ")", "\n", "return", "dict", "(", "opt", "=", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.get_dataset": [[125, 132], ["desp_object_detection.Model.cfg.data.copy", "desp_object_detection.Model.pop", "getattr", "getattr.", "importlib.import_module"], "methods", ["None"], ["", "def", "get_dataset", "(", "self", ",", "mode", ",", "**", "kwargs", ")", ":", "\n", "        ", "cfg", "=", "self", ".", "cfg", ".", "data", ".", "copy", "(", ")", "\n", "name", "=", "cfg", ".", "pop", "(", "\"name\"", ")", "\n", "DataSet", "=", "getattr", "(", "importlib", ".", "import_module", "(", "\"datasets\"", ")", ",", "name", ",", "None", ")", "\n", "assert", "DataSet", "is", "not", "None", ",", "f\"{name}\"", "\n", "ds", "=", "DataSet", "(", "mode", "=", "mode", ",", "**", "cfg", ",", "**", "kwargs", ")", "\n", "return", "ds", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model._init_datasets": [[133, 139], ["desp_object_detection.Model.get_dataset", "int", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "desp_object_detection.Model.get_dataset", "len", "getattr", "len", "getattr"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset"], ["", "def", "_init_datasets", "(", "self", ")", ":", "\n", "        ", "ds", "=", "self", ".", "get_dataset", "(", "mode", "=", "\"train\"", ",", "**", "getattr", "(", "self", ".", "cfg", ".", "train", ",", "\"kwargs\"", ",", "{", "}", ")", ")", "\n", "train_size", "=", "int", "(", "len", "(", "ds", ")", "*", "self", ".", "cfg", ".", "train", ".", "train_val_split", ")", "\n", "val_size", "=", "len", "(", "ds", ")", "-", "train_size", "\n", "self", ".", "dataset_train", ",", "self", ".", "dataset_val", "=", "torch", ".", "utils", ".", "data", ".", "random_split", "(", "ds", ",", "[", "train_size", ",", "val_size", "]", ")", "\n", "self", ".", "dataset_test", "=", "self", ".", "get_dataset", "(", "mode", "=", "\"val\"", ",", "**", "getattr", "(", "self", ".", "cfg", ".", "test", ",", "\"kwargs\"", ",", "{", "}", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.get_train_loader": [[140, 148], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_train_loader", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset_train", ",", "\n", "shuffle", "=", "True", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "train", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.get_val_loader": [[150, 158], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_val_loader", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset_val", ",", "\n", "shuffle", "=", "False", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "train", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.get_test_loader": [[160, 168], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_test_loader", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset_test", ",", "\n", "shuffle", "=", "False", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "test", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "test", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_object_detection.Model.load_ckpt": [[170, 183], ["getattr", "utils.time_print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "desp_object_detection.Model.load_state_dict", "ckpt[].items", "utils.time_print", "desp_object_detection.Model.optimizers[].load_state_dict"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print", "home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print"], ["", "def", "load_ckpt", "(", "self", ",", "model_file", "=", "None", ")", ":", "\n", "        ", "if", "not", "self", ".", "cfg", ".", "load_model", "and", "model_file", "is", "None", ":", "\n", "            ", "time_print", "(", "f\"Not loading from ckpt.\"", ")", "\n", "return", "self", "\n", "\n", "", "model_file", "=", "getattr", "(", "self", ".", "cfg", ",", "\"model_file\"", ")", "\n", "time_print", "(", "f\"Loading ckpt file {model_file}\"", ")", "\n", "\n", "ckpt", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "self", ".", "load_state_dict", "(", "ckpt", "[", "\"state_dict\"", "]", ",", "strict", "=", "False", ")", "\n", "for", "k", ",", "v", "in", "ckpt", "[", "\"opt_state_dict\"", "]", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "optimizers", "[", "k", "]", ".", "load_state_dict", "(", "v", ")", "\n", "", "return", "self", "", "", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.__init__": [[17, 36], ["torch.Module.__init__", "modules.DSEnergy", "gradient_iterators.ClippedGradientDescent", "baseline_digits_and_polygons.Model.get_performance_metric", "baseline_digits_and_polygons.Model.configure_optimizer", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_performance_metric", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.configure_optimizer"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "pool", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", "\n", "self", ".", "global_step", "=", "0", "\n", "self", ".", "pool", "=", "pool", "\n", "self", ".", "cfg", "=", "cfg", "\n", "\n", "self", ".", "energy_fn", "=", "DSEnergy", "(", "**", "self", ".", "cfg", ".", "energy_fn", ")", "\n", "self", ".", "cgd", "=", "ClippedGradientDescent", "(", "\n", "self", ".", "energy_fn", ",", "\n", "n_points", "=", "self", ".", "cfg", ".", "data", ".", "n_points", ",", "\n", "d_y", "=", "self", ".", "cfg", ".", "energy_fn", ".", "d_y", ",", "\n", "T", "=", "self", ".", "cfg", ".", "cgd", ".", "T", ",", "\n", "eps", "=", "self", ".", "cfg", ".", "cgd", ".", "eps", ",", "\n", "norm_type", "=", "self", ".", "cfg", ".", "cgd", ".", "norm_type", ",", "\n", "max_norm", "=", "self", ".", "cfg", ".", "cgd", ".", "max_norm", ")", "\n", "\n", "self", ".", "performance_metric", "=", "self", ".", "get_performance_metric", "(", "cfg", ".", "eval_loss", ")", "\n", "self", ".", "optimizers", "=", "self", ".", "configure_optimizer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.get_performance_metric": [[37, 58], ["loss.RotatedPolygonLoss", "baseline_digits_and_polygons.Model.get_dataset", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "loss.DigitLoss", "loss.LAP_loss", "baseline_digits_and_polygons.Model._build_one", "baseline_digits_and_polygons.Model._build_one", "baseline_digits_and_polygons.Model._build_seven", "baseline_digits_and_polygons.Model._build_seven", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset", "home.repos.pwc.inspect_result.davzha_DESP.None.loss.LAP_loss", "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits._build_one", "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits._build_one", "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits._build_seven", "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits._build_seven"], ["", "def", "get_performance_metric", "(", "self", ",", "loss_type", ")", ":", "\n", "        ", "if", "loss_type", "==", "\"chamfer\"", ":", "\n", "            ", "set_loss_fn", "=", "chamfer_distance", "\n", "", "else", ":", "\n", "            ", "def", "set_loss_fn", "(", "x", ",", "y", ")", ":", "\n", "                ", "return", "LAP_loss", "(", "x", ",", "y", ",", "pool", "=", "self", ".", "pool", ")", "\n", "\n", "", "", "if", "self", ".", "cfg", ".", "data", ".", "name", "==", "\"Polygons\"", ":", "\n", "            ", "loss_fn", "=", "RotatedPolygonLoss", "(", "self", ".", "cfg", ".", "data", ".", "n_poly", ",", "set_loss_fn", ")", "\n", "", "else", ":", "\n", "            ", "ds", "=", "self", ".", "get_dataset", "(", "mode", "=", "\"train\"", ",", "**", "self", ".", "cfg", ".", "train", ".", "kwargs", ")", "\n", "\n", "digit_examples", "=", "torch", ".", "stack", "(", "[", "\n", "ds", ".", "_build_one", "(", "False", ")", ",", "\n", "ds", ".", "_build_one", "(", "True", ")", ",", "\n", "ds", ".", "_build_seven", "(", "False", ")", ",", "\n", "ds", ".", "_build_seven", "(", "True", ")", ",", "\n", "]", ")", "\n", "n", "=", "torch", ".", "Tensor", "(", "[", "0", ",", "0", ",", "1", ",", "1", "]", ")", ".", "long", "(", ")", "\n", "loss_fn", "=", "DigitLoss", "(", "digit_examples", ",", "n", ",", "set_loss_fn", ")", "\n", "", "return", "loss_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model._set_loss": [[59, 66], ["loss.chamfer_distance().mean", "loss.LAP_loss().mean", "loss.chamfer_distance", "loss.LAP_loss"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.None.loss.chamfer_distance", "home.repos.pwc.inspect_result.davzha_DESP.None.loss.LAP_loss"], ["", "def", "_set_loss", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "        ", "if", "self", ".", "cfg", ".", "train_loss", "==", "\"chamfer\"", ":", "\n", "            ", "loss_set", "=", "[", "chamfer_distance", "(", "target", ",", "y", ")", ".", "mean", "(", "0", ")", "for", "y", "in", "pred", "]", "\n", "", "else", ":", "\n", "            ", "loss_set", "=", "[", "LAP_loss", "(", "target", ",", "y", ",", "pool", "=", "self", ".", "pool", ")", ".", "mean", "(", "0", ")", "for", "y", "in", "pred", "]", "\n", "\n", "", "return", "loss_set", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.one_hot_x": [[67, 78], ["torch.one_hot().float", "torch.one_hot().float", "torch.one_hot().float", "len", "torch.one_hot", "torch.one_hot", "torch.one_hot", "inputs.to"], "methods", ["None"], ["", "def", "one_hot_x", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "self", ".", "cfg", ".", "data", ".", "name", "==", "\"Polygons\"", ":", "\n", "            ", "inputs", "=", "inputs", "-", "self", ".", "cfg", ".", "data", ".", "n_poly", "[", "0", "]", "\n", "num_classes", "=", "len", "(", "self", ".", "cfg", ".", "data", ".", "n_poly", ")", "\n", "", "else", ":", "\n", "            ", "num_classes", "=", "2", "\n", "\n", "", "x", "=", "F", ".", "one_hot", "(", "inputs", ".", "to", "(", "self", ".", "device", ")", ",", "\n", "num_classes", "=", "num_classes", ")", ".", "float", "(", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.forward": [[79, 88], ["inputs.size", "baseline_digits_and_polygons.Model.one_hot_x", "baseline_digits_and_polygons.Model.cgd"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.one_hot_x"], ["", "def", "forward", "(", "self", ",", "batch", ",", "cfg_sample", ")", ":", "\n", "        ", "inputs", ",", "targets", "=", "batch", "\n", "bsize", "=", "inputs", ".", "size", "(", "0", ")", "\n", "\n", "x", "=", "self", ".", "one_hot_x", "(", "inputs", ")", "\n", "\n", "ys", ",", "report", "=", "self", ".", "cgd", "(", "x", ")", "\n", "\n", "return", "ys", ",", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.loss_and_metrics": [[89, 108], ["targets.to.to.to", "baseline_digits_and_polygons.Model._set_loss", "dict", "sum", "len"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model._set_loss"], ["", "def", "loss_and_metrics", "(", "self", ",", "batch", ",", "ys", ")", ":", "\n", "        ", "_", ",", "targets", "=", "batch", "\n", "targets", "=", "targets", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "loss_set", "=", "self", ".", "_set_loss", "(", "ys", "[", "-", "1", ":", "]", ",", "targets", ")", "\n", "loss", "=", "sum", "(", "loss_set", ")", "/", "len", "(", "loss_set", ")", "\n", "\n", "card_p", "=", "(", "ys", "[", "-", "1", "]", ">", "0.015", ")", ".", "all", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "float", "(", ")", "\n", "card_t", "=", "(", "targets", ">", "0.015", ")", ".", "all", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "float", "(", ")", "\n", "rmse", "=", "(", "(", "card_p", "-", "card_t", ")", "**", "2", ")", ".", "mean", "(", "0", ")", ".", "sqrt", "(", ")", "\n", "\n", "report", "=", "dict", "(", "\n", "loss", "=", "loss", ",", "\n", "rmse", "=", "rmse", ",", "\n", "# loss_set_first=loss_set[0],", "\n", "# loss_set_last=loss_set[-1]", "\n", ")", "\n", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.compose_report": [[109, 115], ["[].mean", "[].mean", "hasattr", "v.item", "report.items"], "methods", ["None"], ["", "def", "compose_report", "(", "self", ",", "loss_report", ",", "sample_report", ")", ":", "\n", "        ", "report", "=", "{", "**", "loss_report", ",", "\"gradnorm\"", ":", "sample_report", "[", "\"gradnorm\"", "]", "}", "\n", "report", "[", "\"first_energy\"", "]", "=", "sample_report", "[", "\"energies\"", "]", "[", "0", "]", ".", "mean", "(", ")", "\n", "report", "[", "\"last_energy\"", "]", "=", "sample_report", "[", "\"energies\"", "]", "[", "-", "1", "]", ".", "mean", "(", ")", "\n", "\n", "return", "{", "k", ":", "v", ".", "item", "(", ")", "if", "hasattr", "(", "v", ",", "\"item\"", ")", "else", "v", "for", "k", ",", "v", "in", "report", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.training_step": [[116, 142], ["baseline_digits_and_polygons.Model.forward", "baseline_digits_and_polygons.Model.loss_and_metrics", "baseline_digits_and_polygons.Model.compose_report", "baseline_digits_and_polygons.Model.optimizers.values", "loss.backward", "baseline_digits_and_polygons.Model.optimizers.values", "opt.zero_grad", "opt.step", "plot.plot_set", "plot.plot_set", "utils.time_print"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.forward", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.loss_and_metrics", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.compose_report", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set", "home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print"], ["", "def", "training_step", "(", "self", ",", "batch", ",", "batch_nb", ")", ":", "\n", "        ", "ys", ",", "sample_report", "=", "self", ".", "forward", "(", "batch", ",", "self", ".", "cfg", ".", "cgd", ")", "\n", "loss_report", "=", "self", ".", "loss_and_metrics", "(", "batch", ",", "ys", ")", "\n", "\n", "report", "=", "self", ".", "compose_report", "(", "loss_report", ",", "sample_report", ")", "\n", "\n", "loss", "=", "loss_report", "[", "\"loss\"", "]", "\n", "\n", "for", "opt", "in", "self", ".", "optimizers", ".", "values", "(", ")", ":", "\n", "            ", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "opt", "in", "self", ".", "optimizers", ".", "values", "(", ")", ":", "\n", "            ", "opt", ".", "step", "(", ")", "\n", "\n", "", "if", "self", ".", "global_step", "%", "self", ".", "cfg", ".", "log", ".", "plt_freq", "==", "0", ":", "\n", "            ", "try", ":", "\n", "                ", "plot_set", "(", "batch", "[", "1", "]", ",", "labels", "=", "batch", "[", "0", "]", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_gt.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ")", "\n", "plot_set", "(", "ys", "[", "-", "1", "]", ",", "labels", "=", "batch", "[", "0", "]", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_samples.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "time_print", "(", "f\"Error while plotting: {e}\"", ")", "\n", "\n", "", "", "self", ".", "global_step", "+=", "1", "\n", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.test_step": [[143, 154], ["baseline_digits_and_polygons.Model.forward", "baseline_digits_and_polygons.Model.loss_and_metrics", "baseline_digits_and_polygons.Model.compose_report", "baseline_digits_and_polygons.Model.performance_metric().mean", "plot.plot_set", "plot.plot_set", "baseline_digits_and_polygons.Model.performance_metric", "batch[].to"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.forward", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.loss_and_metrics", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.compose_report", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set"], ["", "def", "test_step", "(", "self", ",", "batch", ",", "batch_nb", ")", ":", "\n", "        ", "ys", ",", "sample_report", "=", "self", ".", "forward", "(", "batch", ",", "self", ".", "cfg", ".", "cgd", ")", "\n", "loss_report", "=", "self", ".", "loss_and_metrics", "(", "batch", ",", "ys", ")", "\n", "\n", "report", "=", "self", ".", "compose_report", "(", "loss_report", ",", "sample_report", ")", "\n", "report", "[", "\"performance\"", "]", "=", "self", ".", "performance_metric", "(", "ys", "[", "-", "1", "]", ",", "batch", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", ")", ".", "mean", "(", "0", ")", "\n", "\n", "if", "batch_nb", "==", "0", ":", "\n", "            ", "plot_set", "(", "batch", "[", "1", "]", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_test_gt.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "test", ".", "batch_size", ")", "\n", "plot_set", "(", "ys", "[", "-", "1", "]", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_test_samples.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "test", ".", "batch_size", ")", "\n", "", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.configure_optimizer": [[155, 159], ["baseline_digits_and_polygons.Model.parameters", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict", "filter"], "methods", ["None"], ["", "def", "configure_optimizer", "(", "self", ")", ":", "\n", "        ", "param", "=", "self", ".", "parameters", "(", ")", "\n", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "param", ")", ",", "lr", "=", "self", ".", "cfg", ".", "optim", ".", "lr", ")", "\n", "return", "dict", "(", "opt", "=", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.get_dataset": [[160, 167], ["baseline_digits_and_polygons.Model.cfg.data.copy", "baseline_digits_and_polygons.Model.pop", "getattr", "getattr.", "importlib.import_module"], "methods", ["None"], ["", "def", "get_dataset", "(", "self", ",", "mode", ",", "**", "kwargs", ")", ":", "\n", "        ", "cfg", "=", "self", ".", "cfg", ".", "data", ".", "copy", "(", ")", "\n", "name", "=", "cfg", ".", "pop", "(", "\"name\"", ")", "\n", "DataSet", "=", "getattr", "(", "importlib", ".", "import_module", "(", "\"datasets\"", ")", ",", "name", ",", "None", ")", "\n", "assert", "DataSet", "is", "not", "None", ",", "f\"{name}\"", "\n", "ds", "=", "DataSet", "(", "mode", "=", "mode", ",", "**", "cfg", ",", "**", "kwargs", ")", "\n", "return", "ds", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.get_train_loader": [[168, 176], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "baseline_digits_and_polygons.Model.get_dataset", "getattr"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset"], ["", "def", "get_train_loader", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "get_dataset", "(", "mode", "=", "\"train\"", ",", "**", "getattr", "(", "self", ".", "cfg", ".", "train", ",", "\"kwargs\"", ",", "{", "}", ")", ")", ",", "\n", "shuffle", "=", "True", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "train", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.get_test_loader": [[178, 186], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "baseline_digits_and_polygons.Model.get_dataset", "getattr"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset"], ["", "def", "get_test_loader", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "get_dataset", "(", "mode", "=", "\"test\"", ",", "**", "getattr", "(", "self", ".", "cfg", ".", "test", ",", "\"kwargs\"", ",", "{", "}", ")", ")", ",", "\n", "shuffle", "=", "False", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "test", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "test", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.baseline_digits_and_polygons.Model.load_ckpt": [[188, 201], ["getattr", "utils.time_print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "baseline_digits_and_polygons.Model.load_state_dict", "ckpt[].items", "utils.time_print", "baseline_digits_and_polygons.Model.optimizers[].load_state_dict"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print", "home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print"], ["", "def", "load_ckpt", "(", "self", ",", "model_file", "=", "None", ")", ":", "\n", "        ", "if", "not", "self", ".", "cfg", ".", "load_model", "and", "model_file", "is", "None", ":", "\n", "            ", "time_print", "(", "f\"Not loading from ckpt.\"", ")", "\n", "return", "self", "\n", "\n", "", "model_file", "=", "getattr", "(", "self", ".", "cfg", ",", "\"model_file\"", ")", "\n", "time_print", "(", "f\"Loading ckpt file {model_file}\"", ")", "\n", "\n", "ckpt", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "self", ".", "load_state_dict", "(", "ckpt", "[", "\"state_dict\"", "]", ",", "strict", "=", "False", ")", "\n", "for", "k", ",", "v", "in", "ckpt", "[", "\"opt_state_dict\"", "]", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "optimizers", "[", "k", "]", ".", "load_state_dict", "(", "v", ")", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.__init__": [[14, 25], ["torch.Module.__init__", "modules.FSEncoder", "modules.L1Energy", "desp_auto_encoder.Model.configure_optimizer", "desp_auto_encoder.Model._init_datasets", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.configure_optimizer", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model._init_datasets"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "pool", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", "\n", "self", ".", "global_step", "=", "0", "\n", "self", ".", "pool", "=", "pool", "\n", "self", ".", "cfg", "=", "cfg", "\n", "\n", "self", ".", "enc", "=", "FSEncoder", "(", "**", "self", ".", "cfg", ".", "set_enc", ")", "\n", "self", ".", "energy_fn", "=", "L1Energy", "(", "self", ".", "enc", ")", "\n", "self", ".", "optimizers", "=", "self", ".", "configure_optimizer", "(", ")", "\n", "self", ".", "_init_datasets", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.forward": [[26, 39], ["desp_auto_encoder.Model.enc", "gradient_iterators.langevin_sample", "set.to", "set.size"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.None.gradient_iterators.langevin_sample"], ["", "def", "forward", "(", "self", ",", "batch", ",", "cfg_sample", ")", ":", "\n", "        ", "_", ",", "set", "=", "batch", "\n", "\n", "enc_x", "=", "self", ".", "enc", "(", "set", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "y_T", ",", "report", "=", "langevin_sample", "(", "\n", "self", ".", "energy_fn", ",", "\n", "enc_x", ",", "\n", "set_size", "=", "set", ".", "size", "(", "1", ")", ",", "\n", "d_y", "=", "self", ".", "cfg", ".", "set_enc", ".", "d_in", ",", "\n", "**", "cfg_sample", ",", "\n", "device", "=", "self", ".", "device", ")", "\n", "\n", "return", "y_T", ",", "enc_x", ",", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.loss_and_metrics": [[40, 61], ["set.to.to.to", "set.to.to.clone().detach", "desp_auto_encoder.Model.energy_fn().mean", "desp_auto_encoder.Model.energy_fn().mean", "dict", "set.to.to.clone", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "desp_auto_encoder.Model.energy_fn", "desp_auto_encoder.Model.energy_fn"], "methods", ["None"], ["", "def", "loss_and_metrics", "(", "self", ",", "batch", ",", "y_T", ",", "enc_x", ")", ":", "\n", "        ", "_", ",", "set", "=", "batch", "\n", "set", "=", "set", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "noise_target", "=", "set", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "if", "self", ".", "cfg", ".", "estim", ".", "data_noise", ":", "\n", "            ", "noise_target", "+=", "self", ".", "cfg", ".", "estim", ".", "eps_d", "*", "torch", ".", "randn_like", "(", "set", ")", "\n", "\n", "", "e_p", "=", "self", ".", "energy_fn", "(", "noise_target", ",", "enc_x", ")", ".", "mean", "(", ")", "\n", "e_n", "=", "self", ".", "energy_fn", "(", "y_T", ",", "enc_x", ")", ".", "mean", "(", ")", "\n", "\n", "card_p", "=", "(", "y_T", "[", "...", ",", ":", "3", "]", ">", "0.015", ")", ".", "all", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "float", "(", ")", "\n", "card_t", "=", "(", "set", "[", "...", ",", ":", "3", "]", ">", "0.015", ")", ".", "all", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "float", "(", ")", "\n", "rmse", "=", "(", "(", "card_p", "-", "card_t", ")", "**", "2", ")", ".", "mean", "(", "0", ")", ".", "sqrt", "(", ")", "\n", "\n", "loss", "=", "e_p", "-", "e_n", "\n", "\n", "return", "dict", "(", "loss", "=", "loss", ",", "\n", "e_n", "=", "e_n", ",", "\n", "e_p", "=", "e_p", ",", "\n", "rmse", "=", "rmse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.compose_report": [[62, 68], ["[].mean", "[].mean", "hasattr", "v.item", "report.items"], "methods", ["None"], ["", "def", "compose_report", "(", "self", ",", "loss_report", ",", "sample_report", ")", ":", "\n", "        ", "report", "=", "{", "**", "loss_report", ",", "\"gradnorm\"", ":", "sample_report", "[", "\"gradnorm\"", "]", "}", "\n", "report", "[", "\"first_energy\"", "]", "=", "sample_report", "[", "\"energies\"", "]", "[", "0", "]", ".", "mean", "(", ")", "\n", "report", "[", "\"last_energy\"", "]", "=", "sample_report", "[", "\"energies\"", "]", "[", "-", "1", "]", ".", "mean", "(", ")", "\n", "\n", "return", "{", "k", ":", "v", ".", "item", "(", ")", "if", "hasattr", "(", "v", ",", "\"item\"", ")", "else", "v", "for", "k", ",", "v", "in", "report", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.training_step": [[70, 96], ["desp_auto_encoder.Model.forward", "desp_auto_encoder.Model.loss_and_metrics", "desp_auto_encoder.Model.compose_report", "desp_auto_encoder.Model.optimizers.values", "loss.backward", "desp_auto_encoder.Model.optimizers.values", "opt.zero_grad", "opt.step", "plot.plot_set", "plot.plot_set", "utils.time_print"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.forward", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.loss_and_metrics", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.compose_report", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set", "home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print"], ["", "def", "training_step", "(", "self", ",", "batch", ",", "batch_nb", ")", ":", "\n", "        ", "y_T", ",", "enc_x", ",", "sample_report", "=", "self", ".", "forward", "(", "batch", ",", "self", ".", "cfg", ".", "sample", ")", "\n", "loss_report", "=", "self", ".", "loss_and_metrics", "(", "batch", ",", "y_T", ",", "enc_x", ")", "\n", "\n", "report", "=", "self", ".", "compose_report", "(", "loss_report", ",", "sample_report", ")", "\n", "\n", "loss", "=", "loss_report", "[", "'loss'", "]", "\n", "\n", "for", "opt", "in", "self", ".", "optimizers", ".", "values", "(", ")", ":", "\n", "            ", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "opt", "in", "self", ".", "optimizers", ".", "values", "(", ")", ":", "\n", "            ", "opt", ".", "step", "(", ")", "\n", "\n", "", "if", "self", ".", "global_step", "%", "self", ".", "cfg", ".", "log", ".", "plt_freq", "==", "0", ":", "\n", "            ", "try", ":", "\n", "                ", "plot_set", "(", "batch", "[", "1", "]", "[", "...", ",", ":", "3", "]", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_gt.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ")", "\n", "plot_set", "(", "y_T", "[", "...", ",", ":", "3", "]", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_samples.png\"", ",", "fontsize", "=", "27", ",", "n_sets", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "time_print", "(", "f\"Error while plotting: {e}\"", ")", "\n", "\n", "", "", "self", ".", "global_step", "+=", "1", "\n", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.eval_step": [[97, 112], ["desp_auto_encoder.Model.forward", "desp_auto_encoder.Model.loss_and_metrics", "desp_auto_encoder.Model.compose_report", "loss.chamfer_distance().mean", "plot.plot_set", "plot.plot_set", "loss.LAP_loss().mean", "loss.chamfer_distance", "batch[].to", "loss.LAP_loss", "batch[].to"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.forward", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.loss_and_metrics", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.compose_report", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set", "home.repos.pwc.inspect_result.davzha_DESP.None.loss.chamfer_distance", "home.repos.pwc.inspect_result.davzha_DESP.None.loss.LAP_loss"], ["", "def", "eval_step", "(", "self", ",", "batch", ",", "batch_nb", ",", "mode", "=", "\"test\"", ")", ":", "\n", "        ", "y_T", ",", "enc_x", ",", "sample_report", "=", "self", ".", "forward", "(", "batch", ",", "self", ".", "cfg", ".", "predict", ")", "\n", "loss_report", "=", "self", ".", "loss_and_metrics", "(", "batch", ",", "y_T", ",", "enc_x", ")", "\n", "\n", "report", "=", "self", ".", "compose_report", "(", "loss_report", ",", "sample_report", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "eval_loss", "==", "\"chamfer\"", ":", "\n", "            ", "report", "[", "\"performance\"", "]", "=", "chamfer_distance", "(", "batch", "[", "1", "]", ".", "to", "(", "self", ".", "device", ")", ",", "y_T", ")", ".", "mean", "(", "0", ")", "\n", "", "elif", "self", ".", "cfg", ".", "eval_loss", "==", "\"lap\"", ":", "\n", "            ", "report", "[", "\"performance\"", "]", "=", "LAP_loss", "(", "batch", "[", "1", "]", ".", "to", "(", "self", ".", "device", ")", ",", "y_T", ",", "pool", "=", "self", ".", "pool", ")", ".", "mean", "(", "0", ")", "\n", "\n", "", "if", "batch_nb", "==", "0", ":", "\n", "            ", "plot_set", "(", "batch", "[", "1", "]", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_{mode}_gt.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "test", ".", "batch_size", ")", "\n", "plot_set", "(", "y_T", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_{mode}_samples.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "test", ".", "batch_size", ")", "\n", "", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.configure_optimizer": [[113, 117], ["desp_auto_encoder.Model.parameters", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict", "filter"], "methods", ["None"], ["", "def", "configure_optimizer", "(", "self", ")", ":", "\n", "        ", "param", "=", "self", ".", "parameters", "(", ")", "\n", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "param", ")", ",", "lr", "=", "self", ".", "cfg", ".", "optim", ".", "lr", ")", "\n", "return", "dict", "(", "opt", "=", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.get_dataset": [[118, 125], ["desp_auto_encoder.Model.cfg.data.copy", "desp_auto_encoder.Model.pop", "getattr", "getattr.", "importlib.import_module"], "methods", ["None"], ["", "def", "get_dataset", "(", "self", ",", "mode", ",", "**", "kwargs", ")", ":", "\n", "        ", "cfg", "=", "self", ".", "cfg", ".", "data", ".", "copy", "(", ")", "\n", "name", "=", "cfg", ".", "pop", "(", "\"name\"", ")", "\n", "DataSet", "=", "getattr", "(", "importlib", ".", "import_module", "(", "\"datasets\"", ")", ",", "name", ",", "None", ")", "\n", "assert", "DataSet", "is", "not", "None", ",", "f\"{name}\"", "\n", "ds", "=", "DataSet", "(", "mode", "=", "mode", ",", "**", "cfg", ",", "**", "kwargs", ")", "\n", "return", "ds", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model._init_datasets": [[126, 132], ["desp_auto_encoder.Model.get_dataset", "int", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "torch.utils.data.random_split", "desp_auto_encoder.Model.get_dataset", "len", "getattr", "len", "getattr"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset"], ["", "def", "_init_datasets", "(", "self", ")", ":", "\n", "        ", "ds", "=", "self", ".", "get_dataset", "(", "mode", "=", "\"train\"", ",", "**", "getattr", "(", "self", ".", "cfg", ".", "train", ",", "\"kwargs\"", ",", "{", "}", ")", ")", "\n", "train_size", "=", "int", "(", "len", "(", "ds", ")", "*", "self", ".", "cfg", ".", "train", ".", "train_val_split", ")", "\n", "val_size", "=", "len", "(", "ds", ")", "-", "train_size", "\n", "self", ".", "dataset_train", ",", "self", ".", "dataset_val", "=", "torch", ".", "utils", ".", "data", ".", "random_split", "(", "ds", ",", "[", "train_size", ",", "val_size", "]", ")", "\n", "self", ".", "dataset_test", "=", "self", ".", "get_dataset", "(", "mode", "=", "\"test\"", ",", "**", "getattr", "(", "self", ".", "cfg", ".", "test", ",", "\"kwargs\"", ",", "{", "}", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.get_train_loader": [[133, 141], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_train_loader", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset_train", ",", "\n", "shuffle", "=", "True", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "train", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.get_val_loader": [[143, 151], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_val_loader", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset_val", ",", "\n", "shuffle", "=", "False", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "train", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.get_test_loader": [[153, 161], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_test_loader", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "dataset_test", ",", "\n", "shuffle", "=", "False", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "test", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "test", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_auto_encoder.Model.load_ckpt": [[163, 176], ["getattr", "utils.time_print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "desp_auto_encoder.Model.load_state_dict", "ckpt[].items", "utils.time_print", "desp_auto_encoder.Model.optimizers[].load_state_dict"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print", "home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print"], ["", "def", "load_ckpt", "(", "self", ",", "model_file", "=", "None", ")", ":", "\n", "        ", "if", "not", "self", ".", "cfg", ".", "load_model", "and", "model_file", "is", "None", ":", "\n", "            ", "time_print", "(", "f\"Not loading from ckpt.\"", ")", "\n", "return", "self", "\n", "\n", "", "model_file", "=", "getattr", "(", "self", ".", "cfg", ",", "\"model_file\"", ")", "\n", "time_print", "(", "f\"Loading ckpt file {model_file}\"", ")", "\n", "\n", "ckpt", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "self", ".", "load_state_dict", "(", "ckpt", "[", "\"state_dict\"", "]", ",", "strict", "=", "False", ")", "\n", "for", "k", ",", "v", "in", "ckpt", "[", "\"opt_state_dict\"", "]", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "optimizers", "[", "k", "]", ".", "load_state_dict", "(", "v", ")", "\n", "", "return", "self", "", "", "", ""]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__": [[17, 27], ["torch.Module.__init__", "modules.DSEnergy", "desp_digits_and_polygons.Model.get_performance_metric", "desp_digits_and_polygons.Model.configure_optimizer", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.__init__", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_performance_metric", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.configure_optimizer"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ",", "pool", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "device", "=", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", "\n", "self", ".", "global_step", "=", "0", "\n", "self", ".", "pool", "=", "pool", "\n", "self", ".", "cfg", "=", "cfg", "\n", "\n", "self", ".", "energy_fn", "=", "DSEnergy", "(", "**", "cfg", ".", "energy_fn", ")", "\n", "self", ".", "performance_metric", "=", "self", ".", "get_performance_metric", "(", "cfg", ".", "eval_loss", ")", "\n", "self", ".", "optimizers", "=", "self", ".", "configure_optimizer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_performance_metric": [[28, 49], ["loss.RotatedPolygonLoss", "desp_digits_and_polygons.Model.get_dataset", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "loss.DigitLoss", "loss.LAP_loss", "desp_digits_and_polygons.Model._build_one", "desp_digits_and_polygons.Model._build_one", "desp_digits_and_polygons.Model._build_seven", "desp_digits_and_polygons.Model._build_seven", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset", "home.repos.pwc.inspect_result.davzha_DESP.None.loss.LAP_loss", "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits._build_one", "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits._build_one", "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits._build_seven", "home.repos.pwc.inspect_result.davzha_DESP.datasets.digits.Digits._build_seven"], ["", "def", "get_performance_metric", "(", "self", ",", "loss_type", ")", ":", "\n", "        ", "if", "loss_type", "==", "\"chamfer\"", ":", "\n", "            ", "set_loss_fn", "=", "chamfer_distance", "\n", "", "else", ":", "\n", "            ", "def", "set_loss_fn", "(", "x", ",", "y", ")", ":", "\n", "                ", "return", "LAP_loss", "(", "x", ",", "y", ",", "pool", "=", "self", ".", "pool", ")", "\n", "\n", "", "", "if", "self", ".", "cfg", ".", "data", ".", "name", "==", "\"Polygons\"", ":", "\n", "            ", "loss_fn", "=", "RotatedPolygonLoss", "(", "self", ".", "cfg", ".", "data", ".", "n_poly", ",", "set_loss_fn", ")", "\n", "", "else", ":", "\n", "            ", "ds", "=", "self", ".", "get_dataset", "(", "mode", "=", "\"train\"", ",", "**", "self", ".", "cfg", ".", "train", ".", "kwargs", ")", "\n", "\n", "digit_examples", "=", "torch", ".", "stack", "(", "[", "\n", "ds", ".", "_build_one", "(", "False", ")", ",", "\n", "ds", ".", "_build_one", "(", "True", ")", ",", "\n", "ds", ".", "_build_seven", "(", "False", ")", ",", "\n", "ds", ".", "_build_seven", "(", "True", ")", ",", "\n", "]", ")", "\n", "n", "=", "torch", ".", "Tensor", "(", "[", "0", ",", "0", ",", "1", ",", "1", "]", ")", ".", "long", "(", ")", "\n", "loss_fn", "=", "DigitLoss", "(", "digit_examples", ",", "n", ",", "set_loss_fn", ")", "\n", "", "return", "loss_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.one_hot_x": [[50, 61], ["torch.one_hot().float", "torch.one_hot().float", "torch.one_hot().float", "len", "torch.one_hot", "torch.one_hot", "torch.one_hot", "inputs.to"], "methods", ["None"], ["", "def", "one_hot_x", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "self", ".", "cfg", ".", "data", ".", "name", "==", "\"Polygons\"", ":", "\n", "            ", "inputs", "=", "inputs", "-", "self", ".", "cfg", ".", "data", ".", "n_poly", "[", "0", "]", "\n", "num_classes", "=", "len", "(", "self", ".", "cfg", ".", "data", ".", "n_poly", ")", "\n", "", "else", ":", "\n", "            ", "num_classes", "=", "2", "\n", "\n", "", "x", "=", "F", ".", "one_hot", "(", "inputs", ".", "to", "(", "self", ".", "device", ")", ",", "\n", "num_classes", "=", "num_classes", ")", ".", "float", "(", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.forward": [[62, 77], ["inputs.size", "desp_digits_and_polygons.Model.one_hot_x", "gradient_iterators.langevin_sample", "targets.size"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.one_hot_x", "home.repos.pwc.inspect_result.davzha_DESP.None.gradient_iterators.langevin_sample"], ["", "def", "forward", "(", "self", ",", "batch", ",", "cfg_sample", ")", ":", "\n", "        ", "inputs", ",", "targets", "=", "batch", "\n", "bsize", "=", "inputs", ".", "size", "(", "0", ")", "\n", "\n", "x", "=", "self", ".", "one_hot_x", "(", "inputs", ")", "\n", "\n", "y_T", ",", "report", "=", "langevin_sample", "(", "\n", "self", ".", "energy_fn", ",", "\n", "x", ",", "\n", "set_size", "=", "targets", ".", "size", "(", "1", ")", ",", "\n", "d_y", "=", "self", ".", "cfg", ".", "energy_fn", ".", "d_y", ",", "\n", "**", "cfg_sample", ",", "\n", "device", "=", "self", ".", "device", ")", "\n", "\n", "return", "y_T", ",", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.loss_and_metrics": [[78, 104], ["inputs.to.to.to", "targets.to.to.to", "desp_digits_and_polygons.Model.one_hot_x", "targets.to.to.clone().detach", "desp_digits_and_polygons.Model.energy_fn().mean", "desp_digits_and_polygons.Model.energy_fn().mean", "dict", "targets.to.to.clone", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "desp_digits_and_polygons.Model.energy_fn", "desp_digits_and_polygons.Model.energy_fn"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.one_hot_x"], ["", "def", "loss_and_metrics", "(", "self", ",", "batch", ",", "y_T", ")", ":", "\n", "        ", "inputs", ",", "targets", "=", "batch", "\n", "inputs", "=", "inputs", ".", "to", "(", "self", ".", "device", ")", "\n", "targets", "=", "targets", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "x", "=", "self", ".", "one_hot_x", "(", "inputs", ")", "\n", "\n", "noise_targets", "=", "targets", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "if", "self", ".", "cfg", ".", "estim", ".", "data_noise", ":", "\n", "            ", "noise_targets", "+=", "self", ".", "cfg", ".", "estim", ".", "eps_d", "*", "torch", ".", "randn_like", "(", "targets", ")", "\n", "\n", "", "e_p", "=", "self", ".", "energy_fn", "(", "noise_targets", ",", "x", ")", ".", "mean", "(", ")", "\n", "e_n", "=", "self", ".", "energy_fn", "(", "y_T", ",", "x", ")", ".", "mean", "(", ")", "\n", "\n", "loss", "=", "e_p", "-", "e_n", "\n", "\n", "card_p", "=", "(", "y_T", ">", "0.015", ")", ".", "all", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "float", "(", ")", "\n", "card_t", "=", "(", "targets", ">", "0.015", ")", ".", "all", "(", "2", ")", ".", "sum", "(", "1", ")", ".", "float", "(", ")", "\n", "rmse", "=", "(", "(", "card_p", "-", "card_t", ")", "**", "2", ")", ".", "mean", "(", "0", ")", ".", "sqrt", "(", ")", "\n", "\n", "r", "=", "dict", "(", "loss", "=", "loss", ",", "\n", "e_n", "=", "e_n", ",", "\n", "e_p", "=", "e_p", ",", "\n", "rmse", "=", "rmse", ")", "\n", "\n", "return", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.compose_report": [[105, 111], ["[].mean", "[].mean", "hasattr", "v.item", "report.items"], "methods", ["None"], ["", "def", "compose_report", "(", "self", ",", "loss_report", ",", "sample_report", ")", ":", "\n", "        ", "report", "=", "{", "**", "loss_report", ",", "\"gradnorm\"", ":", "sample_report", "[", "\"gradnorm\"", "]", "}", "\n", "report", "[", "\"first_energy\"", "]", "=", "sample_report", "[", "\"energies\"", "]", "[", "0", "]", ".", "mean", "(", ")", "\n", "report", "[", "\"last_energy\"", "]", "=", "sample_report", "[", "\"energies\"", "]", "[", "-", "1", "]", ".", "mean", "(", ")", "\n", "\n", "return", "{", "k", ":", "v", ".", "item", "(", ")", "if", "hasattr", "(", "v", ",", "\"item\"", ")", "else", "v", "for", "k", ",", "v", "in", "report", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.training_step": [[112, 138], ["desp_digits_and_polygons.Model.forward", "desp_digits_and_polygons.Model.loss_and_metrics", "desp_digits_and_polygons.Model.compose_report", "desp_digits_and_polygons.Model.optimizers.values", "loss.backward", "desp_digits_and_polygons.Model.optimizers.values", "opt.zero_grad", "opt.step", "plot.plot_set", "plot.plot_set", "utils.time_print"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.forward", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.loss_and_metrics", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.compose_report", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set", "home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print"], ["", "def", "training_step", "(", "self", ",", "batch", ",", "batch_nb", ")", ":", "\n", "        ", "y_T", ",", "sample_report", "=", "self", ".", "forward", "(", "batch", ",", "self", ".", "cfg", ".", "sample", ")", "\n", "loss_report", "=", "self", ".", "loss_and_metrics", "(", "batch", ",", "y_T", ")", "\n", "\n", "report", "=", "self", ".", "compose_report", "(", "loss_report", ",", "sample_report", ")", "\n", "\n", "loss", "=", "loss_report", "[", "\"loss\"", "]", "\n", "\n", "for", "opt", "in", "self", ".", "optimizers", ".", "values", "(", ")", ":", "\n", "            ", "opt", ".", "zero_grad", "(", ")", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "opt", "in", "self", ".", "optimizers", ".", "values", "(", ")", ":", "\n", "            ", "opt", ".", "step", "(", ")", "\n", "\n", "", "if", "self", ".", "global_step", "%", "self", ".", "cfg", ".", "log", ".", "plt_freq", "==", "0", ":", "\n", "            ", "try", ":", "\n", "                ", "plot_set", "(", "batch", "[", "1", "]", ",", "labels", "=", "batch", "[", "0", "]", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_gt.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ")", "\n", "plot_set", "(", "y_T", ",", "labels", "=", "batch", "[", "0", "]", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_samples.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                ", "time_print", "(", "f\"Error while plotting: {e}\"", ")", "\n", "\n", "", "", "self", ".", "global_step", "+=", "1", "\n", "\n", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.test_step": [[139, 150], ["desp_digits_and_polygons.Model.forward", "desp_digits_and_polygons.Model.loss_and_metrics", "desp_digits_and_polygons.Model.compose_report", "desp_digits_and_polygons.Model.performance_metric().mean", "plot.plot_set", "plot.plot_set", "desp_digits_and_polygons.Model.performance_metric", "batch[].to"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.forward", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.loss_and_metrics", "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.compose_report", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set", "home.repos.pwc.inspect_result.davzha_DESP.None.plot.plot_set"], ["", "def", "test_step", "(", "self", ",", "batch", ",", "batch_nb", ")", ":", "\n", "        ", "y_T", ",", "sample_report", "=", "self", ".", "forward", "(", "batch", ",", "self", ".", "cfg", ".", "predict", ")", "\n", "loss_report", "=", "self", ".", "loss_and_metrics", "(", "batch", ",", "y_T", ")", "\n", "\n", "report", "=", "self", ".", "compose_report", "(", "loss_report", ",", "sample_report", ")", "\n", "report", "[", "\"performance\"", "]", "=", "self", ".", "performance_metric", "(", "y_T", ",", "batch", "[", "0", "]", ".", "to", "(", "self", ".", "device", ")", ")", ".", "mean", "(", "0", ")", "\n", "\n", "if", "batch_nb", "==", "0", ":", "\n", "            ", "plot_set", "(", "batch", "[", "1", "]", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_test_gt.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "test", ".", "batch_size", ")", "\n", "plot_set", "(", "y_T", ",", "filepath", "=", "self", ".", "cfg", ".", "log", ".", "misc_dir", "/", "f\"{self.global_step}_test_samples.png\"", ",", "n_sets", "=", "self", ".", "cfg", ".", "test", ".", "batch_size", ")", "\n", "", "return", "report", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.configure_optimizer": [[151, 155], ["desp_digits_and_polygons.Model.parameters", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "dict", "filter"], "methods", ["None"], ["", "def", "configure_optimizer", "(", "self", ")", ":", "\n", "        ", "param", "=", "self", ".", "parameters", "(", ")", "\n", "opt", "=", "torch", ".", "optim", ".", "Adam", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "param", ")", ",", "lr", "=", "self", ".", "cfg", ".", "optim", ".", "lr", ")", "\n", "return", "dict", "(", "opt", "=", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset": [[156, 163], ["desp_digits_and_polygons.Model.cfg.data.copy", "desp_digits_and_polygons.Model.pop", "getattr", "getattr.", "importlib.import_module"], "methods", ["None"], ["", "def", "get_dataset", "(", "self", ",", "mode", ",", "**", "kwargs", ")", ":", "\n", "        ", "cfg", "=", "self", ".", "cfg", ".", "data", ".", "copy", "(", ")", "\n", "name", "=", "cfg", ".", "pop", "(", "\"name\"", ")", "\n", "DataSet", "=", "getattr", "(", "importlib", ".", "import_module", "(", "\"datasets\"", ")", ",", "name", ",", "None", ")", "\n", "assert", "DataSet", "is", "not", "None", ",", "f\"{name}\"", "\n", "ds", "=", "DataSet", "(", "mode", "=", "mode", ",", "**", "cfg", ",", "**", "kwargs", ")", "\n", "return", "ds", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_train_loader": [[164, 172], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "desp_digits_and_polygons.Model.get_dataset", "getattr"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset"], ["", "def", "get_train_loader", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "get_dataset", "(", "mode", "=", "'train'", ",", "**", "getattr", "(", "self", ".", "cfg", ".", "train", ",", "'kwargs'", ",", "{", "}", ")", ")", ",", "\n", "shuffle", "=", "True", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "train", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "train", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_test_loader": [[174, 182], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "desp_digits_and_polygons.Model.get_dataset", "getattr"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.get_dataset"], ["", "def", "get_test_loader", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "get_dataset", "(", "mode", "=", "\"test\"", ",", "**", "getattr", "(", "self", ".", "cfg", ".", "test", ",", "\"kwargs\"", ",", "{", "}", ")", ")", ",", "\n", "shuffle", "=", "False", ",", "\n", "batch_size", "=", "self", ".", "cfg", ".", "test", ".", "batch_size", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "self", ".", "cfg", ".", "test", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.models.desp_digits_and_polygons.Model.load_ckpt": [[184, 197], ["getattr", "utils.time_print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "desp_digits_and_polygons.Model.load_state_dict", "ckpt[].items", "utils.time_print", "desp_digits_and_polygons.Model.optimizers[].load_state_dict"], "methods", ["home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print", "home.repos.pwc.inspect_result.davzha_DESP.None.utils.time_print"], ["", "def", "load_ckpt", "(", "self", ",", "model_file", "=", "None", ")", ":", "\n", "        ", "if", "not", "self", ".", "cfg", ".", "load_model", "and", "model_file", "is", "None", ":", "\n", "            ", "time_print", "(", "f\"Not loading from ckpt.\"", ")", "\n", "return", "self", "\n", "\n", "", "model_file", "=", "getattr", "(", "self", ".", "cfg", ",", "\"model_file\"", ")", "\n", "time_print", "(", "f\"Loading ckpt file {model_file}\"", ")", "\n", "\n", "ckpt", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "self", ".", "load_state_dict", "(", "ckpt", "[", "\"state_dict\"", "]", ",", "strict", "=", "False", ")", "\n", "for", "k", ",", "v", "in", "ckpt", "[", "\"opt_state_dict\"", "]", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "optimizers", "[", "k", "]", ".", "load_state_dict", "(", "v", ")", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.configs.desp_digits.Config.__getattr__": [[6, 11], ["None"], "methods", ["None"], ["def", "__getattr__", "(", "self", ",", "k", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", "[", "k", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "AttributeError", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.configs.baseline_digits.Config.__getattr__": [[6, 11], ["None"], "methods", ["None"], ["def", "__getattr__", "(", "self", ",", "k", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", "[", "k", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "AttributeError", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.configs.desp_celeba.Config.__getattr__": [[6, 11], ["None"], "methods", ["None"], ["def", "__getattr__", "(", "self", ",", "k", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", "[", "k", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "AttributeError", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.configs.baseline_celeba.Config.__getattr__": [[6, 11], ["None"], "methods", ["None"], ["def", "__getattr__", "(", "self", ",", "k", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", "[", "k", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "AttributeError", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.configs.desp_clevr.Config.__getattr__": [[6, 11], ["None"], "methods", ["None"], ["def", "__getattr__", "(", "self", ",", "k", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", "[", "k", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "AttributeError", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.configs.desp_mnist.Config.__getattr__": [[6, 11], ["None"], "methods", ["None"], ["def", "__getattr__", "(", "self", ",", "k", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", "[", "k", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "AttributeError", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.configs.desp_polygons.Config.__getattr__": [[6, 11], ["None"], "methods", ["None"], ["def", "__getattr__", "(", "self", ",", "k", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", "[", "k", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "AttributeError", "\n", "\n"]], "home.repos.pwc.inspect_result.davzha_DESP.configs.baseline_polygons.Config.__getattr__": [[6, 11], ["None"], "methods", ["None"], ["def", "__getattr__", "(", "self", ",", "k", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", "[", "k", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "AttributeError", "\n", "\n"]]}