{"home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.SharedMLP.__init__": [[72, 96], ["torch.Module.__init__", "conv_fn", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "transpose", "=", "False", ",", "\n", "padding_mode", "=", "0", ",", "\n", "bn", "=", "False", ",", "\n", "activation_fn", "=", "None", "\n", ")", ":", "\n", "        ", "super", "(", "SharedMLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "conv_fn", "=", "nn", ".", "ConvTranspose2d", "if", "transpose", "else", "nn", ".", "Conv2d", "\n", "\n", "self", ".", "conv", "=", "conv_fn", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding_mode", "\n", ")", "\n", "self", ".", "batch_norm", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ",", "eps", "=", "1e-6", ",", "momentum", "=", "0.99", ")", "if", "bn", "else", "None", "\n", "self", ".", "activation_fn", "=", "activation_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.SharedMLP.forward": [[97, 105], ["R_GCN_model.SharedMLP.conv", "R_GCN_model.SharedMLP.batch_norm", "R_GCN_model.SharedMLP.activation_fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "x", "=", "self", ".", "conv", "(", "input", ")", "\n", "if", "self", ".", "batch_norm", ":", "\n", "            ", "x", "=", "self", ".", "batch_norm", "(", "x", ")", "\n", "", "if", "self", ".", "activation_fn", ":", "\n", "            ", "x", "=", "self", ".", "activation_fn", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.att_pooling.__init__": [[108, 113], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "R_GCN_model.SharedMLP", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "d_in", ",", "d_out", ")", ":", "\n", "        ", "super", "(", "att_pooling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "d_in", ",", "d_in", ",", "bias", "=", "False", ")", "\n", "self", ".", "mlp", "=", "SharedMLP", "(", "d_in", ",", "d_out", ",", "bn", "=", "True", ",", "activation_fn", "=", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.att_pooling.forward": [[115, 126], ["R_GCN_model.att_pooling.fc", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "feature_set.mul", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "f_agg.squeeze().squeeze().permute.squeeze().squeeze().permute.permute().unsqueeze", "R_GCN_model.att_pooling.mlp", "f_agg.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze().squeeze().permute", "f_agg.squeeze().squeeze().permute.squeeze().squeeze().permute.permute", "f_agg.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze().squeeze", "f_agg.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feature_set", ")", ":", "\n", "\n", "        ", "att_activation", "=", "self", ".", "fc", "(", "feature_set", ")", "\n", "att_scores", "=", "torch", ".", "softmax", "(", "att_activation", ",", "1", ")", "\n", "f_agg", "=", "feature_set", ".", "mul", "(", "att_scores", ")", "\n", "f_agg", "=", "torch", ".", "sum", "(", "f_agg", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "f_agg", "=", "f_agg", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "f_agg", "=", "self", ".", "mlp", "(", "f_agg", ")", "\n", "f_agg", "=", "f_agg", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "\n", "return", "f_agg", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.Building_block.__init__": [[130, 138], ["torch.Module.__init__", "R_GCN_model.SharedMLP", "R_GCN_model.SharedMLP", "R_GCN_model.att_pooling", "R_GCN_model.att_pooling", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "geo_in", ",", "d_out", ")", ":", "\n", "        ", "super", "(", "Building_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv2d_1", "=", "SharedMLP", "(", "geo_in", ",", "d_out", "//", "2", ",", "bn", "=", "True", ",", "activation_fn", "=", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv2d_2", "=", "SharedMLP", "(", "d_out", "//", "2", ",", "d_out", "//", "2", ",", "bn", "=", "True", ",", "activation_fn", "=", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "attentive_pooling_1", "=", "att_pooling", "(", "d_out", ",", "d_out", "//", "2", ")", "\n", "self", ".", "attentive_pooling_2", "=", "att_pooling", "(", "d_out", ",", "d_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.Building_block.forward": [[140, 152], ["R_GCN_model.Building_block.conv2d_1", "R_GCN_model.gather_neighbour", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "R_GCN_model.Building_block.attentive_pooling_2", "R_GCN_model.Building_block.permute().unsqueeze", "R_GCN_model.Building_block.squeeze().permute", "R_GCN_model.Building_block.permute", "R_GCN_model.Building_block.squeeze"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.gather_neighbour"], ["", "def", "forward", "(", "self", ",", "f_geo", ",", "feature", ",", "neigh_idx", ")", ":", "\n", "\n", "        ", "f_geo", "=", "self", ".", "conv2d_1", "(", "f_geo", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", ")", "\n", "\n", "f_neighbours", "=", "gather_neighbour", "(", "feature", ",", "neigh_idx", ")", "\n", "\n", "f_concat", "=", "torch", ".", "cat", "(", "(", "f_neighbours", ",", "f_geo", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ")", ",", "dim", "=", "2", ")", "\n", "\n", "f_pc_agg", "=", "self", ".", "attentive_pooling_2", "(", "f_concat", ")", "\n", "\n", "\n", "return", "f_pc_agg", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.dilated_res_block.__init__": [[156, 165], ["torch.Module.__init__", "R_GCN_model.SharedMLP", "R_GCN_model.SharedMLP", "R_GCN_model.SharedMLP", "R_GCN_model.Building_block", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "geo_in", ",", "d_in", ",", "d_out", ")", ":", "\n", "        ", "super", "(", "dilated_res_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv2d_1", "=", "SharedMLP", "(", "d_in", ",", "d_out", "//", "2", ",", "activation_fn", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", "self", ".", "conv2d_2", "=", "SharedMLP", "(", "d_out", ",", "d_out", ")", "\n", "self", ".", "shortcut", "=", "SharedMLP", "(", "d_in", ",", "d_out", ",", "bn", "=", "True", ")", "\n", "\n", "self", ".", "building_block", "=", "Building_block", "(", "geo_in", ",", "d_out", ")", "\n", "self", ".", "lrelu", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.dilated_res_block.forward": [[168, 181], ["R_GCN_model.dilated_res_block.conv2d_1", "R_GCN_model.dilated_res_block.permute().squeeze().squeeze", "R_GCN_model.dilated_res_block.building_block", "R_GCN_model.dilated_res_block.conv2d_2", "R_GCN_model.dilated_res_block.shortcut", "R_GCN_model.dilated_res_block.lrelu", "lfa.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze().squeeze().permute", "feature.permute().unsqueeze().unsqueeze", "R_GCN_model.dilated_res_block.permute().unsqueeze().unsqueeze", "feature.unsqueeze().unsqueeze().permute", "R_GCN_model.dilated_res_block.permute().squeeze", "lfa.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze().squeeze", "feature.permute().unsqueeze", "R_GCN_model.dilated_res_block.permute().unsqueeze", "feature.unsqueeze().unsqueeze", "R_GCN_model.dilated_res_block.permute", "lfa.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze", "feature.permute", "R_GCN_model.dilated_res_block.permute", "feature.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "f_geo", ",", "feature", ",", "neigh_idx", ")", ":", "\n", "\n", "        ", "f_pc", "=", "self", ".", "conv2d_1", "(", "feature", ".", "permute", "(", "1", ",", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "3", ")", ")", "\n", "f_pc", "=", "f_pc", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "0", ")", "\n", "f_pc", "=", "self", ".", "building_block", "(", "f_geo", ",", "f_pc", ",", "neigh_idx", ")", "\n", "\n", "f_pc", "=", "self", ".", "conv2d_2", "(", "f_pc", ".", "permute", "(", "1", ",", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "3", ")", ")", "\n", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "feature", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "3", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "lfa", "=", "self", ".", "lrelu", "(", "f_pc", "+", "shortcut", ")", "\n", "lfa", "=", "lfa", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "\n", "return", "lfa", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.GraphConvolution.__init__": [[188, 198], ["torch.nn.modules.module.Module.__init__", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "R_GCN_model.GraphConvolution.reset_parameters", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "R_GCN_model.GraphConvolution.register_parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.__init__", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.GraphConvolution.reset_parameters"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "GraphConvolution", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "out_features", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.GraphConvolution.reset_parameters": [[199, 204], ["math.sqrt", "R_GCN_model.GraphConvolution.weight.data.uniform_", "R_GCN_model.GraphConvolution.bias.data.fill_", "R_GCN_model.GraphConvolution.weight.size", "R_GCN_model.GraphConvolution.weight.size"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "math", ".", "sqrt", "(", "6.0", "/", "(", "self", ".", "weight", ".", "size", "(", "-", "2", ")", "+", "self", ".", "weight", ".", "size", "(", "-", "1", ")", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.GraphConvolution.forward": [[205, 212], ["torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm", "torch.sparse.mm"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "adj", ")", ":", "\n", "        ", "support", "=", "torch", ".", "mm", "(", "input", ",", "self", ".", "weight", ")", "\n", "output", "=", "torch", ".", "sparse", ".", "mm", "(", "adj", ",", "support", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "return", "output", "+", "self", ".", "bias", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.GraphConvolution.__repr__": [[213, 217], ["str", "str"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "' ('", "+", "str", "(", "self", ".", "in_features", ")", "+", "' -> '", "+", "str", "(", "self", ".", "out_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.GCN.__init__": [[220, 230], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "R_GCN_model.GCN.gc.append", "len", "R_GCN_model.GraphConvolution"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "gc", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "channels", ")", "-", "1", ")", ":", "\n", "            ", "self", ".", "gc", ".", "append", "(", "\n", "GraphConvolution", "(", "channels", "[", "i", "]", ",", "channels", "[", "i", "+", "1", "]", ")", "\n", ")", "\n", "", "self", ".", "dropout", "=", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.GCN.forward": [[231, 239], ["enumerate", "gc", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.dropout", "torch.dropout", "torch.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "\n", "        ", "for", "i", ",", "gc", "in", "enumerate", "(", "self", ".", "gc", ")", ":", "\n", "            ", "x", "=", "gc", "(", "x", ",", "adj", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ",", "negative_slope", "=", "0.1", ")", "\n", "if", "self", ".", "dropout", "!=", "0.0", ":", "\n", "                ", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.R_GCN.__init__": [[241, 284], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "R_GCN_model.att_pooling", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "R_GCN_model.SharedMLP", "dict", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "R_GCN_model.att_pooling", "R_GCN_model.GCN", "R_GCN_model.GCN", "R_GCN_model.GraphConvolution", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "R_GCN_model.SharedMLP", "torch.Dropout", "torch.Dropout", "torch.Dropout", "R_GCN_model.SharedMLP", "R_GCN_model.dilated_res_block", "R_GCN_model.dilated_res_block", "R_GCN_model.dilated_res_block", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "R_GCN_model.SharedMLP", "R_GCN_model.SharedMLP", "R_GCN_model.SharedMLP", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "geo_in", ")", ":", "\n", "        ", "super", "(", "R_GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "geo_in", ",", "8", ")", "\n", "self", ".", "ap1", "=", "att_pooling", "(", "8", ",", "8", ")", "\n", "\n", "self", ".", "bn_start", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm1d", "(", "8", ",", "eps", "=", "1e-6", ",", "momentum", "=", "0.99", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ")", "\n", ")", "\n", "\n", "# encoding layers", "\n", "self", ".", "encoder", "=", "nn", ".", "ModuleList", "(", "[", "\n", "dilated_res_block", "(", "geo_in", ",", "8", ",", "32", ")", ",", "\n", "dilated_res_block", "(", "geo_in", ",", "32", ",", "64", ")", ",", "\n", "dilated_res_block", "(", "geo_in", ",", "64", ",", "128", ")", "\n", "]", ")", "\n", "\n", "self", ".", "mlp", "=", "SharedMLP", "(", "128", ",", "128", ",", "activation_fn", "=", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "# decoding layers", "\n", "decoder_kwargs", "=", "dict", "(", "\n", "transpose", "=", "True", ",", "\n", "bn", "=", "True", ",", "\n", "activation_fn", "=", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "ModuleList", "(", "[", "\n", "SharedMLP", "(", "64", "+", "128", ",", "64", ",", "**", "decoder_kwargs", ")", ",", "\n", "SharedMLP", "(", "32", "+", "64", ",", "32", ",", "**", "decoder_kwargs", ")", ",", "\n", "SharedMLP", "(", "32", "+", "32", ",", "8", ",", "**", "decoder_kwargs", ")", ",", "\n", "]", ")", "\n", "\n", "self", ".", "fcs", "=", "nn", ".", "Sequential", "(", "\n", "SharedMLP", "(", "8", ",", "64", ",", "bn", "=", "True", ",", "activation_fn", "=", "nn", ".", "ReLU", "(", ")", ")", ",", "\n", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "\n", "SharedMLP", "(", "64", ",", "32", ",", "activation_fn", "=", "nn", ".", "LeakyReLU", "(", "0.2", ")", ")", "\n", ")", "\n", "\n", "self", ".", "aa", "=", "att_pooling", "(", "32", ",", "32", ")", "\n", "self", ".", "gc1", "=", "GCN", "(", "[", "32", ",", "64", ",", "128", "]", ")", "\n", "self", ".", "gc2", "=", "GCN", "(", "[", "128", ",", "64", ",", "32", "]", ")", "\n", "self", ".", "gc3", "=", "GraphConvolution", "(", "32", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.R_GCN.forward": [[285, 338], ["R_GCN_model.R_GCN.fc1", "R_GCN_model.R_GCN.ap1", "R_GCN_model.R_GCN.bn_start", "R_GCN_model.R_GCN.mlp", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze().squeeze().permute", "R_GCN_model.R_GCN.fcs", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze().squeeze().permute", "R_GCN_model.feature_fetch", "R_GCN_model.R_GCN.aa", "R_GCN_model.R_GCN.gc1", "R_GCN_model.R_GCN.gc2", "R_GCN_model.R_GCN.gc3", "torch.softmax", "torch.softmax", "torch.softmax", "R_GCN_model.cal_loss4", "R_GCN_model.cal_loss3", "lfa", "R_GCN_model.random_sample", "point_feature_stack.append", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.permute().unsqueeze().unsqueeze", "R_GCN_model.nearest_interpolation", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "mlp", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze().squeeze().permute", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.permute().unsqueeze().unsqueeze", "point_feature_stack.append", "random_sample.clone", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze().squeeze", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.permute().unsqueeze().unsqueeze", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze().squeeze", "lfa.clone", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.permute().unsqueeze", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze().squeeze", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.permute().unsqueeze", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.permute().unsqueeze", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.permute", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.squeeze", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.permute", "point_feature.squeeze().squeeze().permute.squeeze().squeeze().permute.permute"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.feature_fetch", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.cal_loss4", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.cal_loss3", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.random_sample", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.nearest_interpolation"], ["", "def", "forward", "(", "self", ",", "deepdt_data", ")", ":", "\n", "\n", "        ", "point_feature", "=", "self", ".", "fc1", "(", "deepdt_data", ".", "batch_feature", "[", "0", "]", ")", "\n", "point_feature", "=", "self", ".", "ap1", "(", "point_feature", ")", "\n", "point_feature", "=", "self", ".", "bn_start", "(", "point_feature", ")", "\n", "\n", "decimation_ratio", "=", "1", "\n", "point_feature_stack", "=", "[", "]", "\n", "\n", "\n", "\n", "# ENCODER", "\n", "i", "=", "0", "\n", "for", "lfa", "in", "self", ".", "encoder", ":", "\n", "            ", "f_encoder_i", "=", "lfa", "(", "deepdt_data", ".", "batch_feature", "[", "i", "]", ",", "point_feature", ",", "deepdt_data", ".", "neigh_idx", "[", "i", "]", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "point_feature_stack", ".", "append", "(", "f_encoder_i", ".", "clone", "(", ")", ")", "\n", "", "f_sampled_i", "=", "random_sample", "(", "f_encoder_i", ",", "deepdt_data", ".", "sub_idx", "[", "i", "]", ")", "\n", "point_feature", "=", "f_sampled_i", "\n", "point_feature_stack", ".", "append", "(", "f_sampled_i", ".", "clone", "(", ")", ")", "\n", "i", "=", "i", "+", "1", "\n", "\n", "", "point_feature", "=", "self", ".", "mlp", "(", "point_feature", ".", "permute", "(", "1", ",", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "3", ")", ")", "\n", "point_feature", "=", "point_feature", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "\n", "# DECODER", "\n", "j", "=", "0", "\n", "for", "mlp", "in", "self", ".", "decoder", ":", "\n", "            ", "f_interp_i", "=", "nearest_interpolation", "(", "point_feature", ",", "deepdt_data", ".", "interp_idx", "[", "-", "j", "-", "1", "]", ")", "\n", "\n", "point_feature", "=", "torch", ".", "cat", "(", "(", "f_interp_i", ",", "point_feature_stack", "[", "-", "j", "-", "2", "]", ")", ",", "dim", "=", "1", ")", "\n", "point_feature", "=", "mlp", "(", "point_feature", ".", "permute", "(", "1", ",", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "3", ")", ")", "\n", "point_feature", "=", "point_feature", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "j", "+=", "1", "\n", "\n", "", "point_feature", "=", "self", ".", "fcs", "(", "point_feature", ".", "permute", "(", "1", ",", "0", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "3", ")", ")", "\n", "point_feature", "=", "point_feature", ".", "squeeze", "(", "3", ")", ".", "squeeze", "(", "0", ")", ".", "permute", "(", "1", ",", "0", ")", "\n", "\n", "node_feature", "=", "feature_fetch", "(", "point_feature", ",", "deepdt_data", ".", "cell_vertex_idx", ")", "\n", "node_feature", "=", "self", ".", "aa", "(", "node_feature", ")", "\n", "\n", "\n", "node_feature", "=", "self", ".", "gc1", "(", "node_feature", ",", "deepdt_data", ".", "adj", ")", "\n", "node_feature", "=", "self", ".", "gc2", "(", "node_feature", ",", "deepdt_data", ".", "adj", ")", "\n", "cell_pred", "=", "self", ".", "gc3", "(", "node_feature", ",", "deepdt_data", ".", "adj", ")", "\n", "cell_pred_soft", "=", "F", ".", "softmax", "(", "cell_pred", ",", "dim", "=", "1", ")", "\n", "\n", "loss1", "=", "cal_loss4", "(", "cell_pred", ",", "deepdt_data", ".", "ref_label", ")", "\n", "\n", "c_c_target", "=", "cell_pred_soft", "[", "deepdt_data", ".", "adj_idx", "]", "\n", "loss2", "=", "cal_loss3", "(", "cell_pred", ",", "c_c_target", ")", "\n", "\n", "return", "cell_pred", ",", "loss1", ",", "loss2", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.soft_cross_entropy": [[10, 19], ["torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.mean", "torch.log_softmax", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["def", "soft_cross_entropy", "(", "pred", ",", "soft_targets", ",", "reduction", "=", "'mean'", ")", ":", "\n", "\n", "    ", "entropy", "=", "torch", ".", "sum", "(", "-", "soft_targets", "*", "F", ".", "log_softmax", "(", "pred", ",", "dim", "=", "1", ")", ",", "1", ")", "\n", "if", "reduction", "==", "'mean'", ":", "\n", "        ", "return", "torch", ".", "mean", "(", "entropy", ")", "\n", "", "elif", "reduction", "==", "'sum'", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "entropy", ")", "\n", "", "elif", "reduction", "==", "'none'", ":", "\n", "        ", "return", "entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.cal_loss3": [[20, 29], ["range", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "entropies.append", "R_GCN_model.soft_cross_entropy"], "function", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.soft_cross_entropy"], ["", "", "def", "cal_loss3", "(", "pred", ",", "target", ")", ":", "\n", "\n", "    ", "entropies", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "target", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "tmp_target", "=", "target", "[", ":", ",", "i", ",", ":", "]", "\n", "entropies", ".", "append", "(", "soft_cross_entropy", "(", "pred", ",", "tmp_target", ",", "reduction", "=", "'none'", ")", ")", "\n", "", "loss", "=", "torch", ".", "stack", "(", "entropies", ",", "dim", "=", "1", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "loss", ",", "dim", "=", "1", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.cal_loss4": [[30, 39], ["range", "torch.stack", "torch.stack", "torch.stack", "torch.mean", "torch.mean", "torch.mean", "entropies.append", "torch.cross_entropy"], "function", ["None"], ["", "def", "cal_loss4", "(", "c_pred", ",", "p_target", ")", ":", "\n", "\n", "    ", "entropies", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "p_target", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "tmp_p_target", "=", "p_target", "[", ":", ",", "i", "]", "\n", "entropies", ".", "append", "(", "F", ".", "cross_entropy", "(", "c_pred", ",", "tmp_p_target", ",", "reduction", "=", "'none'", ")", ")", "\n", "", "loss", "=", "torch", ".", "stack", "(", "entropies", ",", "dim", "=", "1", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "loss", ",", "1", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.random_sample": [[41, 46], ["torch.max", "torch.max", "torch.max"], "function", ["None"], ["", "def", "random_sample", "(", "feature", ",", "sample_idx", ")", ":", "\n", "\n", "    ", "pool_features", "=", "feature", "[", "sample_idx", "]", "\n", "pool_features", "=", "torch", ".", "max", "(", "pool_features", ",", "1", ",", "False", ")", "[", "0", "]", "\n", "return", "pool_features", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.gather_neighbour": [[48, 53], ["None"], "function", ["None"], ["", "def", "gather_neighbour", "(", "feature", ",", "neighbor_idx", ")", ":", "\n", "\n", "\n", "    ", "neighbor_features", "=", "feature", "[", "neighbor_idx", "]", "\n", "return", "neighbor_features", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.nearest_interpolation": [[55, 61], ["torch.squeeze", "torch.squeeze", "torch.squeeze"], "function", ["None"], ["", "def", "nearest_interpolation", "(", "feature", ",", "interp_idx", ")", ":", "\n", "\n", "    ", "interpolated_features", "=", "feature", "[", "interp_idx", "]", "\n", "interpolated_features", "=", "torch", ".", "squeeze", "(", "interpolated_features", ",", "1", ")", "\n", "\n", "return", "interpolated_features", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.R_GCN_model.feature_fetch": [[63, 69], ["None"], "function", ["None"], ["", "def", "feature_fetch", "(", "input_tensor", ",", "index_tensor", ")", ":", "\n", "\n", "    ", "feature", "=", "input_tensor", "[", "index_tensor", "]", "\n", "feature", "[", "index_tensor", "==", "-", "1", "]", "=", "0", "\n", "\n", "return", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_dataloader.DataListLoader.__init__": [[19, 24], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.__init__"], ["def", "__init__", "(", "self", ",", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DataListLoader", ",", "\n", "self", ")", ".", "__init__", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "collate_fn", "=", "lambda", "data_list", ":", "data_list", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.ScanData.__init__": [[14, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "pc", "=", "None", "\n", "self", ".", "scan_name", "=", "None", "\n", "self", ".", "data_para", "=", "None", "\n", "self", ".", "cell_vertex_idx", "=", "None", "\n", "self", ".", "adj", "=", "None", "\n", "self", ".", "ref_label", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.ScanData.load_full_scan": [[25, 43], ["print", "open3d.read_point_cloud", "dict", "os.path.join", "os.path.join", "os.path.join", "dict", "numpy.fromfile().reshape", "numpy.fromfile().reshape", "numpy.fromfile().reshape", "print", "os.path.join", "numpy.fromfile", "numpy.fromfile", "numpy.fromfile", "file_path.split"], "methods", ["None"], ["", "def", "load_full_scan", "(", "self", ",", "file_path", ",", "cfg", ")", ":", "\n", "        ", "print", "(", "'file_path'", ",", "file_path", ")", "\n", "self", ".", "pc", "=", "open3d", ".", "read_point_cloud", "(", "os", ".", "path", ".", "join", "(", "file_path", ",", "\"sampled_points.ply\"", ")", ")", "\n", "\n", "file_names", "=", "dict", "(", ")", "\n", "file_names", "[", "'output_tetrahedron_adj'", "]", "=", "(", "os", ".", "path", ".", "join", "(", "file_path", ",", "\"output_tetrahedron_adj\"", ")", ")", "\n", "file_names", "[", "'output_cell_vertex_idx'", "]", "=", "(", "os", ".", "path", ".", "join", "(", "file_path", ",", "\"output_cell_vertex_idx.txt\"", ")", ")", "\n", "file_names", "[", "'ref_label'", "]", "=", "(", "os", ".", "path", ".", "join", "(", "file_path", ",", "\"ref_point_label.txt\"", ")", ")", "\n", "\n", "l", "=", "dict", "(", ")", "\n", "l", "[", "'ref_label'", "]", "=", "np", ".", "fromfile", "(", "file_names", "[", "'ref_label'", "]", ",", "dtype", "=", "np", ".", "int32", ",", "sep", "=", "' '", ")", ".", "reshape", "(", "-", "1", ",", "7", ")", "\n", "l", "[", "'adj_mat'", "]", "=", "np", ".", "fromfile", "(", "file_names", "[", "'output_tetrahedron_adj'", "]", ",", "dtype", "=", "np", ".", "int32", ",", "sep", "=", "' '", ")", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "l", "[", "'cell_vertex_idx'", "]", "=", "np", ".", "fromfile", "(", "file_names", "[", "'output_cell_vertex_idx'", "]", ",", "dtype", "=", "np", ".", "int32", ",", "sep", "=", "' '", ")", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "\n", "self", ".", "cell_vertex_idx", "=", "(", "l", "[", "'cell_vertex_idx'", "]", ")", "\n", "self", ".", "adj", "=", "l", "[", "'adj_mat'", "]", "\n", "self", ".", "ref_label", "=", "l", "[", "'ref_label'", "]", "[", ":", ",", "0", ":", "cfg", "[", "\"ref_num\"", "]", "]", "\n", "print", "(", "\"loaded \"", "+", "file_path", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.__init__": [[46, 61], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "label_weights", "=", "None", "\n", "\n", "\n", "self", ".", "cell_vertex_idx", "=", "None", "\n", "self", ".", "adj", "=", "None", "\n", "self", ".", "adj_idx", "=", "None", "\n", "self", ".", "ref_label", "=", "None", "\n", "self", ".", "data_name", "=", "\"\"", "\n", "\n", "self", ".", "neigh_idx", "=", "[", "]", "\n", "self", ".", "sub_idx", "=", "[", "]", "\n", "self", ".", "interp_idx", "=", "[", "]", "\n", "self", ".", "depth", "=", "[", "]", "\n", "self", ".", "batch_feature", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.keys": [[63, 67], ["DeepDT_data.DeepDT_Data.__dict__.keys"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.keys"], ["", "def", "keys", "(", "self", ")", ":", "\n", "        ", "keys", "=", "[", "key", "for", "key", "in", "self", ".", "__dict__", ".", "keys", "(", ")", "if", "self", "[", "key", "]", "is", "not", "None", "]", "\n", "keys", "=", "[", "key", "for", "key", "in", "keys", "if", "key", "[", ":", "2", "]", "!=", "'__'", "and", "key", "[", "-", "2", ":", "]", "!=", "'__'", "]", "\n", "return", "keys", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.__getitem__": [[68, 71], ["getattr"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "        ", "r\"\"\"Gets the data of the attribute :obj:`key`.\"\"\"", "\n", "return", "getattr", "(", "self", ",", "key", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.__setitem__": [[72, 75], ["setattr"], "methods", ["None"], ["", "def", "__setitem__", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "        ", "\"\"\"Sets the attribute :obj:`key` to :obj:`value`.\"\"\"", "\n", "setattr", "(", "self", ",", "key", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.to": [[76, 95], ["DeepDT_data.DeepDT_Data", "DeepDT_data.DeepDT_Data.keys", "isinstance", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "device_data[].append", "DeepDT_data.DeepDT_Data.type", "DeepDT_data.DeepDT_Data.to", "DeepDT_data.DeepDT_Data.to", "e.type", "device_data[].append", "device_data[].append", "e.to", "e.to"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.keys", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.to", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.to", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.to", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.to"], ["", "def", "to", "(", "self", ",", "device", ")", ":", "\n", "        ", "device_data", "=", "DeepDT_Data", "(", ")", "\n", "self_keys", "=", "self", ".", "keys", "(", ")", "\n", "for", "key", "in", "self_keys", ":", "\n", "            ", "if", "isinstance", "(", "self", "[", "key", "]", ",", "list", ")", ":", "\n", "                ", "for", "e", "in", "self", "[", "key", "]", ":", "\n", "                    ", "if", "torch", ".", "is_tensor", "(", "e", ")", ":", "\n", "                        ", "if", "e", ".", "type", "(", ")", "==", "'torch.IntTensor'", ":", "\n", "                            ", "device_data", "[", "key", "]", ".", "append", "(", "e", ".", "to", "(", "device", ",", "dtype", "=", "torch", ".", "long", ")", ")", "\n", "", "else", ":", "\n", "                            ", "device_data", "[", "key", "]", ".", "append", "(", "e", ".", "to", "(", "device", ")", ")", "\n", "", "", "else", ":", "\n", "                        ", "device_data", "[", "key", "]", ".", "append", "(", "e", ")", "\n", "", "", "", "elif", "torch", ".", "is_tensor", "(", "self", "[", "key", "]", ")", ":", "\n", "                ", "if", "self", "[", "key", "]", ".", "type", "(", ")", "==", "'torch.IntTensor'", ":", "\n", "                    ", "device_data", "[", "key", "]", "=", "self", "[", "key", "]", ".", "to", "(", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "", "else", ":", "\n", "                    ", "device_data", "[", "key", "]", "=", "self", "[", "key", "]", ".", "to", "(", "device", ")", "\n", "", "", "", "return", "device_data", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.create_full_data": [[97, 157], ["DeepDT_data.DeepDT_Data", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.normalize", "range", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.repeat", "numpy.reshape", "scipy.sparse.coo_matrix", "DeepDT_data.normalize", "DeepDT_data.get_neighbor_idx", "DeepDT_data.get_depth", "DeepDT_data.depth_normalize", "torch.randperm", "torch.randperm", "print", "print", "DeepDT_data.get_neighbor_idx", "DeepDT_Data.neigh_idx.append", "DeepDT_Data.sub_idx.append", "DeepDT_Data.interp_idx.append", "DeepDT_Data.batch_feature.append", "torch.from_numpy", "torch.from_numpy", "numpy.asarray", "numpy.asarray", "numpy.arange", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().float.numpy", "torch.from_numpy().float.numpy", "DeepDT_data.get_normal", "torch.cat", "torch.cat", "depth_normalize.unsqueeze", "torch.manual_seed", "torch.manual_seed", "torch.randperm.size", "current_xyz[].size", "sub_points.numpy", "torch.from_numpy().float.numpy", "numpy.asarray", "torch.from_numpy", "torch.from_numpy", "numpy.ones", "scipy.sparse.eye", "numpy.asarray", "numpy.asarray", "depth_normalize.unsqueeze"], "function", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.normalize", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.normalize", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.get_neighbor_idx", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.get_depth", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.depth_normalize", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.get_neighbor_idx", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.get_normal"], ["", "", "def", "create_full_data", "(", "scan", ",", "cfg", ")", ":", "\n", "    ", "out", "=", "DeepDT_Data", "(", ")", "\n", "out", ".", "data_name", "=", "scan", ".", "scan_name", "\n", "\n", "current_xyz", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "scan", ".", "pc", ".", "points", ")", ")", ".", "float", "(", ")", "\n", "current_normals", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "scan", ".", "pc", ".", "normals", ")", ")", ".", "float", "(", ")", "\n", "current_normals", "=", "f", ".", "normalize", "(", "current_normals", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "\n", "for", "i", "in", "range", "(", "cfg", "[", "\"num_layers\"", "]", ")", ":", "\n", "        ", "neigh_idx", "=", "get_neighbor_idx", "(", "current_xyz", ".", "numpy", "(", ")", ",", "current_xyz", ".", "numpy", "(", ")", ",", "cfg", "[", "\"k_n\"", "]", ")", "\n", "neigh_normals", "=", "current_normals", "[", "neigh_idx", "]", "\n", "neighbor_xyz", "=", "current_xyz", "[", "neigh_idx", "]", "\n", "\n", "depth", "=", "get_depth", "(", "current_xyz", ",", "neigh_normals", ",", "neighbor_xyz", ",", "cfg", "[", "\"k_n\"", "]", ")", "\n", "depth", "=", "depth_normalize", "(", "depth", ")", "\n", "if", "cfg", "[", "\"use_normal\"", "]", ":", "\n", "            ", "relative_normal", "=", "get_normal", "(", "current_normals", ",", "neigh_normals", ")", "\n", "batch_feature", "=", "torch", ".", "cat", "(", "(", "depth", ".", "unsqueeze", "(", "2", ")", ",", "relative_normal", ")", ",", "dim", "=", "2", ")", "\n", "", "else", ":", "\n", "            ", "batch_feature", "=", "depth", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "\n", "", "if", "not", "cfg", "[", "\"is_training\"", "]", ":", "\n", "            ", "torch", ".", "manual_seed", "(", "0", ")", "\n", "", "sub_idx", "=", "torch", ".", "randperm", "(", "current_xyz", ".", "shape", "[", "0", "]", "//", "cfg", "[", "'sub_sampling_ratio'", "]", "[", "i", "]", ")", "\n", "\n", "sub_points", "=", "current_xyz", "[", "sub_idx", "]", "\n", "sub_normals", "=", "current_normals", "[", "sub_idx", "]", "\n", "print", "(", "sub_idx", ".", "size", "(", ")", ")", "\n", "print", "(", "current_xyz", "[", "sub_idx", "]", ".", "size", "(", ")", ")", "\n", "\n", "pool_i", "=", "neigh_idx", "[", "sub_idx", "]", "\n", "up_i", "=", "get_neighbor_idx", "(", "sub_points", ".", "numpy", "(", ")", ",", "current_xyz", ".", "numpy", "(", ")", ",", "1", ")", "\n", "\n", "out", ".", "neigh_idx", ".", "append", "(", "neigh_idx", ")", "\n", "out", ".", "sub_idx", ".", "append", "(", "pool_i", ")", "\n", "out", ".", "interp_idx", ".", "append", "(", "up_i", ")", "\n", "out", ".", "batch_feature", ".", "append", "(", "batch_feature", ")", "\n", "current_xyz", "=", "sub_points", "\n", "current_normals", "=", "sub_normals", "\n", "\n", "", "if", "cfg", "[", "\"use_label\"", "]", ":", "\n", "        ", "tmp_labels", "=", "np", ".", "asarray", "(", "scan", ".", "ref_label", ")", "-", "1", "\n", "out", ".", "ref_label", "=", "torch", ".", "from_numpy", "(", "tmp_labels", ")", "\n", "if", "scan", ".", "data_para", "is", "not", "None", ":", "\n", "            ", "out", ".", "label_weights", "=", "torch", ".", "from_numpy", "(", "scan", ".", "data_para", ".", "class_weights", ")", "\n", "\n", "", "", "out", ".", "cell_vertex_idx", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "scan", ".", "cell_vertex_idx", ")", ")", "\n", "\n", "out", ".", "adj_idx", "=", "torch", ".", "from_numpy", "(", "np", ".", "asarray", "(", "scan", ".", "adj", ")", ")", "\n", "\n", "adj_rows", "=", "np", ".", "repeat", "(", "np", ".", "arange", "(", "scan", ".", "adj", ".", "shape", "[", "0", "]", ")", ",", "4", ")", "\n", "adj_cols", "=", "np", ".", "reshape", "(", "scan", ".", "adj", ",", "adj_rows", ".", "size", ")", "\n", "\n", "adj", "=", "sp", ".", "coo_matrix", "(", "\n", "(", "np", ".", "ones", "(", "adj_rows", ".", "shape", "[", "0", "]", ")", ",", "(", "adj_rows", ",", "adj_cols", ")", ")", ",", "\n", "shape", "=", "[", "scan", ".", "adj", ".", "shape", "[", "0", "]", ",", "scan", ".", "adj", ".", "shape", "[", "0", "]", "]", ")", "\n", "\n", "out", ".", "adj", "=", "normalize", "(", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.get_neighbor_idx": [[159, 178], ["print", "time", "scipy.spatial.cKDTree", "time", "print", "print", "print", "scipy.spatial.cKDTree.query", "time", "print", "print", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["", "def", "get_neighbor_idx", "(", "pc", ",", "query_pts", ",", "k", ")", ":", "\n", "\n", "\n", "    ", "print", "(", "\"Tree start!\"", ")", "\n", "t1", "=", "time", "(", ")", "\n", "kdtree", "=", "cKDTree", "(", "pc", ")", "\n", "t", "=", "time", "(", ")", "\n", "print", "(", "\"Finish! Time consumption = \"", ",", "t", "-", "t1", ",", "\"s\"", ")", "\n", "print", "(", "\"Tree finish!\"", ")", "\n", "print", "(", "\"Find its K nearest neighbors.\"", ")", "\n", "\n", "(", "x", ",", "idx", ")", "=", "kdtree", ".", "query", "(", "query_pts", ",", "k", ",", "n_jobs", "=", "-", "1", ")", "\n", "t2", "=", "time", "(", ")", "\n", "print", "(", "idx", ".", "shape", ")", "\n", "\n", "print", "(", "\"Finish! Time consumption = \"", ",", "t2", "-", "t", ",", "\"s\"", ")", "\n", "idxs", "=", "torch", ".", "from_numpy", "(", "idx", ")", "\n", "\n", "return", "idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.get_depth": [[180, 194], ["print", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "neighbor_xyz.size", "point_xyz.unsqueeze"], "function", ["None"], ["", "def", "get_depth", "(", "point_xyz", ",", "neighbor_normals", ",", "neighbor_xyz", ",", "k", ")", ":", "\n", "\n", "\n", "    ", "print", "(", "neighbor_xyz", ".", "size", "(", ")", ")", "\n", "\n", "\n", "\n", "relative_xyz", "=", "point_xyz", ".", "unsqueeze", "(", "1", ")", "-", "neighbor_xyz", "\n", "\n", "depth", "=", "torch", ".", "mul", "(", "neighbor_normals", ",", "relative_xyz", ")", "\n", "\n", "depth", "=", "torch", ".", "sum", "(", "depth", ",", "2", ")", "\n", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.get_normal": [[196, 205], ["print", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.cat", "torch.cat", "point_normals.size", "torch.mul", "torch.mul", "point_normals.unsqueeze", "point_normals.unsqueeze"], "function", ["None"], ["", "def", "get_normal", "(", "point_normals", ",", "neighbor_normals", ")", ":", "\n", "\n", "    ", "print", "(", "point_normals", ".", "size", "(", ")", ")", "\n", "depth", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "neighbor_normals", ",", "point_normals", ".", "unsqueeze", "(", "1", ")", ")", ",", "2", ",", "keepdim", "=", "True", ")", "\n", "normals1", "=", "torch", ".", "mul", "(", "depth", ",", "neighbor_normals", ")", "\n", "normals2", "=", "point_normals", ".", "unsqueeze", "(", "1", ")", "-", "normals1", "\n", "relative_normals", "=", "torch", ".", "cat", "(", "(", "normals1", ",", "normals2", ")", ",", "dim", "=", "2", ")", "\n", "\n", "return", "relative_normals", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.depth_normalize": [[207, 213], ["torch.clamp", "torch.clamp", "torch.max", "torch.max", "torch.abs", "torch.abs"], "function", ["None"], ["", "def", "depth_normalize", "(", "depth", ")", ":", "\n", "\n", "    ", "max_depth", "=", "torch", ".", "clamp", "(", "torch", ".", "max", "(", "torch", ".", "abs", "(", "depth", ")", ",", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", ",", "min", "=", "1e-12", ")", "\n", "depth", "=", "depth", "/", "max_depth", "\n", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.normalize": [[215, 223], ["numpy.array", "numpy.power().flatten", "scipy.sparse.diags", "sp.diags.dot", "r_mat_inv.dot.sum", "numpy.power", "numpy.isinf"], "function", ["None"], ["", "def", "normalize", "(", "mx", ")", ":", "\n", "    ", "\"\"\"Row-normalize sparse matrix\"\"\"", "\n", "rowsum", "=", "np", ".", "array", "(", "mx", ".", "sum", "(", "1", ")", ")", "\n", "r_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "r_inv", "[", "np", ".", "isinf", "(", "r_inv", ")", "]", "=", "0.", "\n", "r_mat_inv", "=", "sp", ".", "diags", "(", "r_inv", ")", "\n", "mx", "=", "r_mat_inv", ".", "dot", "(", "mx", ")", "\n", "return", "mx", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.sparse_mx_to_torch_sparse_tensor": [[225, 233], ["sparse_mx.tocoo().astype.tocoo().astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.Size", "torch.Size", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "numpy.vstack().astype", "sparse_mx.tocoo().astype.tocoo", "numpy.vstack"], "function", ["None"], ["", "def", "sparse_mx_to_torch_sparse_tensor", "(", "sparse_mx", ")", ":", "\n", "    ", "\"\"\"Convert a scipy sparse matrix to a torch sparse tensor.\"\"\"", "\n", "sparse_mx", "=", "sparse_mx", ".", "tocoo", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "indices", "=", "torch", ".", "from_numpy", "(", "\n", "np", ".", "vstack", "(", "(", "sparse_mx", ".", "row", ",", "sparse_mx", ".", "col", ")", ")", ".", "astype", "(", "np", ".", "int64", ")", ")", "\n", "values", "=", "torch", ".", "from_numpy", "(", "sparse_mx", ".", "data", ")", "\n", "shape", "=", "torch", ".", "Size", "(", "sparse_mx", ".", "shape", ")", "\n", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "indices", ",", "values", ",", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_util.load_config": [[7, 11], ["open", "yaml.load"], "function", ["None"], ["def", "load_config", "(", "cfg_path", ")", ":", "\n", "    ", "with", "open", "(", "cfg_path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "cfg", "=", "yaml", ".", "load", "(", "f", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "return", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_util.augment_config": [[13, 19], ["os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "augment_config", "(", "cfg", ")", ":", "\n", "    ", "cfg", "[", "\"train_name_file\"", "]", "=", "os", ".", "path", ".", "join", "(", "cfg", "[", "\"experiment_dir\"", "]", ",", "cfg", "[", "\"train_name_file\"", "]", ")", "\n", "cfg", "[", "\"test_name_file\"", "]", "=", "os", ".", "path", ".", "join", "(", "cfg", "[", "\"experiment_dir\"", "]", ",", "cfg", "[", "\"test_name_file\"", "]", ")", "\n", "cfg", "[", "\"model_path\"", "]", "=", "os", ".", "path", ".", "join", "(", "cfg", "[", "\"experiment_dir\"", "]", ",", "cfg", "[", "\"model_path\"", "]", ")", "\n", "\n", "return", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_util.check_config": [[21, 28], ["len", "print", "print", "len", "len"], "function", ["None"], ["", "def", "check_config", "(", "cfg", ")", ":", "\n", "    ", "if", "cfg", "[", "\"batch_size\"", "]", ">", "len", "(", "cfg", "[", "\"device_ids\"", "]", ")", ":", "\n", "        ", "print", "(", "\"Warning: batch_size must be no more than device count\"", ")", "\n", "print", "(", "\"Set new batch_size as\"", ",", "len", "(", "cfg", "[", "\"device_ids\"", "]", ")", ")", "\n", "cfg", "[", "\"batch_size\"", "]", "=", "len", "(", "cfg", "[", "\"device_ids\"", "]", ")", "\n", "\n", "", "return", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_util.accuracy_score": [[30, 60], ["torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "torch.sum().item", "accus.append", "accus.append", "accus.append", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["", "def", "accuracy_score", "(", "label_gt", ",", "label_pred", ")", ":", "\n", "    ", "accus", "=", "[", "]", "\n", "# print(torch.max(label_gt))", "\n", "all_gt_num", "=", "label_gt", ".", "shape", "[", "0", "]", "\n", "label0_gt_num", "=", "torch", ".", "sum", "(", "label_gt", "==", "0", ")", ".", "item", "(", ")", "\n", "label1_gt_num", "=", "torch", ".", "sum", "(", "label_gt", "==", "1", ")", ".", "item", "(", ")", "\n", "\n", "label0_pred_true_num", "=", "torch", ".", "sum", "(", "label_pred", "[", "label_gt", "==", "0", "]", "==", "0", ")", ".", "item", "(", ")", "\n", "label1_pred_true_num", "=", "torch", ".", "sum", "(", "label_pred", "[", "label_gt", "==", "1", "]", "==", "1", ")", ".", "item", "(", ")", "\n", "if", "label0_gt_num", "==", "0", ":", "\n", "        ", "label0_accu", "=", "0", "\n", "", "else", ":", "\n", "        ", "label0_accu", "=", "label0_pred_true_num", "/", "label0_gt_num", "\n", "\n", "", "if", "label1_gt_num", "==", "0", ":", "\n", "        ", "label1_accu", "=", "0", "\n", "", "else", ":", "\n", "        ", "label1_accu", "=", "label1_pred_true_num", "/", "label1_gt_num", "\n", "\n", "", "all_true_num", "=", "torch", ".", "sum", "(", "label_gt", "==", "label_pred", ")", ".", "item", "(", ")", "\n", "if", "all_gt_num", "==", "0", ":", "\n", "        ", "all_accu", "=", "0", "\n", "", "else", ":", "\n", "        ", "all_accu", "=", "all_true_num", "/", "all_gt_num", "\n", "\n", "", "accus", ".", "append", "(", "all_accu", ")", "\n", "accus", ".", "append", "(", "label0_accu", ")", "\n", "accus", ".", "append", "(", "label1_accu", ")", "\n", "\n", "return", "accus", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.__init__": [[20, 23], ["super().__init__", "torch.device"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.__init__"], ["def", "__init__", "(", "self", ",", "module", ",", "device_ids", "=", "None", ",", "output_device", "=", "None", ")", ":", "\n", "        ", "super", "(", "DeepDTParallel", ",", "self", ")", ".", "__init__", "(", "module", ",", "device_ids", ",", "output_device", ")", "\n", "self", ".", "src_device", "=", "torch", ".", "device", "(", "\"cuda:{}\"", ".", "format", "(", "self", ".", "device_ids", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.forward": [[24, 50], ["itertools.chain", "DeepDT_Parallel.DeepDTParallel.scatter", "DeepDT_Parallel.DeepDTParallel.replicate", "DeepDT_Parallel.DeepDTParallel.parallel_apply", "DeepDT_Parallel.DeepDTParallel.gather", "len", "warnings.warn", "len", "len", "RuntimeError", "data_list[].to", "DeepDT_Parallel.DeepDTParallel.module", "DeepDT_Parallel.DeepDTParallel.module.parameters", "DeepDT_Parallel.DeepDTParallel.module.buffers", "len", "RuntimeError", "len"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.scatter", "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.to"], ["", "def", "forward", "(", "self", ",", "data_list", ")", ":", "\n", "        ", "\"\"\"\"\"\"", "\n", "if", "len", "(", "data_list", ")", "==", "0", ":", "\n", "            ", "warnings", ".", "warn", "(", "'DataParallel received an empty data list, which '", "\n", "'may result in unexpected behaviour.'", ")", "\n", "return", "None", "\n", "\n", "", "if", "len", "(", "data_list", ")", ">", "len", "(", "self", ".", "device_ids", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"The length of data_list must no more than device_ids\"", "\n", "\"in this implementation.\"", ")", "\n", "\n", "", "if", "not", "self", ".", "device_ids", "or", "len", "(", "self", ".", "device_ids", ")", "==", "1", ":", "# Fallback", "\n", "            ", "data", "=", "data_list", "[", "0", "]", ".", "to", "(", "self", ".", "src_device", ")", "\n", "return", "self", ".", "module", "(", "data", ")", "\n", "\n", "", "for", "t", "in", "chain", "(", "self", ".", "module", ".", "parameters", "(", ")", ",", "self", ".", "module", ".", "buffers", "(", ")", ")", ":", "\n", "            ", "if", "t", ".", "device", "!=", "self", ".", "src_device", ":", "\n", "                ", "raise", "RuntimeError", "(", "\n", "(", "'Module must have its parameters and buffers on device '", "\n", "'{} but found one of them on device {}.'", ")", ".", "format", "(", "\n", "self", ".", "src_device", ",", "t", ".", "device", ")", ")", "\n", "\n", "", "", "inputs", "=", "self", ".", "scatter", "(", "data_list", ",", "self", ".", "device_ids", ")", "\n", "replicas", "=", "self", ".", "replicate", "(", "self", ".", "module", ",", "self", ".", "device_ids", "[", ":", "len", "(", "inputs", ")", "]", ")", "\n", "outputs", "=", "self", ".", "parallel_apply", "(", "replicas", ",", "inputs", ",", "None", ")", "\n", "return", "self", ".", "gather", "(", "outputs", ",", "self", ".", "output_device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_Parallel.DeepDTParallel.scatter": [[51, 56], ["len", "len", "RuntimeError", "data_list[].to", "torch.device", "range", "len"], "methods", ["home.repos.pwc.inspect_result.wenbingtao_DeepDT.None.DeepDT_data.DeepDT_Data.to"], ["", "def", "scatter", "(", "self", ",", "data_list", ",", "device_ids", ")", ":", "\n", "        ", "if", "len", "(", "data_list", ")", ">", "len", "(", "self", ".", "device_ids", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"The length of data_list must no more than device_ids\"", "\n", "\"in this implementation.\"", ")", "\n", "", "return", "[", "data_list", "[", "i", "]", ".", "to", "(", "torch", ".", "device", "(", "'cuda:{}'", ".", "format", "(", "device_ids", "[", "i", "]", ")", ")", ")", "for", "i", "in", "range", "(", "len", "(", "data_list", ")", ")", "]", "\n", "", "", ""]]}