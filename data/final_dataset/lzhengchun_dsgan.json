{"home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.CAM.__init__": [[6, 16], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sigmoid", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "relu_a", "=", "0.01", ",", "r", "=", "2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp_ops", "=", "[", "\n", "torch", ".", "nn", ".", "Linear", "(", "in_ch", ",", "in_ch", "//", "r", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "relu_a", ")", ",", "\n", "torch", ".", "nn", ".", "Linear", "(", "in_ch", "//", "r", ",", "in_ch", ")", ",", "\n", "]", "\n", "\n", "self", ".", "amlp_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "mlp_ops", ")", "\n", "self", ".", "out_act", "=", "torch", ".", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.CAM.forward": [[17, 40], ["torch.max", "torch.max", "torch.mean", "torch.mean", "models.CAM.out_act", "_attention.unsqueeze.unsqueeze.unsqueeze", "_attention.unsqueeze.unsqueeze.unsqueeze", "layer", "layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "ret_att", "=", "False", ")", ":", "\n", "        ", "_max_out", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "2", ",", "keepdim", "=", "False", ")", "\n", "_max_out", ",", "_", "=", "torch", ".", "max", "(", "_max_out", ",", "-", "1", ",", "keepdim", "=", "False", ")", "\n", "\n", "_avg_out", "=", "torch", ".", "mean", "(", "x", ",", "2", ",", "keepdim", "=", "False", ")", "\n", "_avg_out", "=", "torch", ".", "mean", "(", "_avg_out", ",", "-", "1", ",", "keepdim", "=", "False", ")", "\n", "\n", "_mlp_max", "=", "_max_out", "\n", "for", "layer", "in", "self", ".", "amlp_layer", ":", "\n", "            ", "_mlp_max", "=", "layer", "(", "_mlp_max", ")", "\n", "\n", "", "_mlp_avg", "=", "_avg_out", "\n", "for", "layer", "in", "self", ".", "amlp_layer", ":", "\n", "            ", "_mlp_avg", "=", "layer", "(", "_mlp_avg", ")", "\n", "\n", "", "_attention", "=", "self", ".", "out_act", "(", "_mlp_avg", "+", "_mlp_max", ")", "\n", "_attention", "=", "_attention", ".", "unsqueeze", "(", "-", "1", ")", "\n", "_attention", "=", "_attention", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "if", "ret_att", ":", "\n", "            ", "return", "_attention", ",", "_attention", "*", "x", "\n", "", "else", ":", "\n", "            ", "return", "_attention", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.SAM.__init__": [[43, 51], ["super().__init__", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "relu_a", "=", "0.01", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cnn_ops", "=", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "2", ",", "out_channels", "=", "1", ",", "kernel_size", "=", "7", ",", "padding", "=", "3", ")", ",", "\n", "torch", ".", "nn", ".", "Sigmoid", "(", ")", ",", "]", "# use Sigmoid to norm to [0, 1]", "\n", "\n", "self", ".", "attention_layer", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "cnn_ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.SAM.forward": [[52, 64], ["torch.max", "torch.mean", "torch.cat", "layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "ret_att", "=", "False", ")", ":", "\n", "        ", "_max_out", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "1", ",", "keepdim", "=", "True", ")", "\n", "_avg_out", "=", "torch", ".", "mean", "(", "x", ",", "1", ",", "keepdim", "=", "True", ")", "\n", "_out", "=", "torch", ".", "cat", "(", "(", "_max_out", ",", "_avg_out", ")", ",", "dim", "=", "1", ")", "\n", "_attention", "=", "_out", "\n", "for", "layer", "in", "self", ".", "attention_layer", ":", "\n", "            ", "_attention", "=", "layer", "(", "_attention", ")", "\n", "\n", "", "if", "ret_att", ":", "\n", "            ", "return", "_attention", ",", "_attention", "*", "x", "\n", "", "else", ":", "\n", "            ", "return", "_attention", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.inception_box.__init__": [[66, 100], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.MaxPool2d", "torch.nn.Conv2d", "torch.nn.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "o_ch", ",", "relu_a", "=", "0.01", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "o_ch", "%", "4", "==", "0", "\n", "self", ".", "conv1b1_ops", "=", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_ch", ",", "out_channels", "=", "o_ch", "//", "4", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "relu_a", ")", ",", "]", "\n", "\n", "self", ".", "conv3b3_ops", "=", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_ch", ",", "out_channels", "=", "o_ch", "//", "4", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "relu_a", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "o_ch", "//", "4", ",", "out_channels", "=", "o_ch", "//", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "relu_a", ")", ",", "]", "\n", "\n", "self", ".", "conv5b5_ops", "=", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_ch", ",", "out_channels", "=", "o_ch", "//", "4", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "relu_a", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "o_ch", "//", "4", ",", "out_channels", "=", "o_ch", "//", "4", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "relu_a", ")", ",", "]", "\n", "\n", "self", ".", "maxpool_ops", "=", "[", "\n", "torch", ".", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_ch", ",", "out_channels", "=", "o_ch", "//", "4", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "relu_a", ")", ",", "]", "\n", "\n", "self", ".", "conv1b1", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "conv1b1_ops", ")", "\n", "self", ".", "conv3b3", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "conv3b3_ops", ")", "\n", "self", ".", "conv5b5", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "conv5b5_ops", ")", "\n", "self", ".", "maxpool", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "maxpool_ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.inception_box.forward": [[101, 119], ["torch.cat", "layer", "layer", "layer", "layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "_out_conv1b1", "=", "x", "\n", "for", "layer", "in", "self", ".", "conv1b1", ":", "\n", "            ", "_out_conv1b1", "=", "layer", "(", "_out_conv1b1", ")", "\n", "\n", "", "_out_conv3b3", "=", "x", "\n", "for", "layer", "in", "self", ".", "conv3b3", ":", "\n", "            ", "_out_conv3b3", "=", "layer", "(", "_out_conv3b3", ")", "\n", "\n", "", "_out_conv5b5", "=", "x", "\n", "for", "layer", "in", "self", ".", "conv5b5", ":", "\n", "            ", "_out_conv5b5", "=", "layer", "(", "_out_conv5b5", ")", "\n", "\n", "", "_out_maxpool", "=", "x", "\n", "for", "layer", "in", "self", ".", "conv1b1", ":", "\n", "            ", "_out_maxpool", "=", "layer", "(", "_out_maxpool", ")", "\n", "\n", "", "return", "torch", ".", "cat", "(", "[", "_out_conv1b1", ",", "_out_conv3b3", ",", "_out_conv5b5", ",", "_out_maxpool", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.encodedGenerator.ceil": [[122, 125], ["int", "int", "int"], "methods", ["None"], ["    ", "def", "ceil", "(", "self", ",", "v", ")", ":", "\n", "        ", "if", "v", "==", "int", "(", "v", ")", ":", "return", "int", "(", "v", ")", "\n", "else", ":", "return", "int", "(", "v", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.encodedGenerator.__init__": [[126, 202], ["super().__init__", "torch.nn.ModuleList", "torch.nn.Sequential", "models.inception_box", "models.inception_box", "models.inception_box", "models.inception_box", "torch.nn.Sequential", "models.inception_box", "models.inception_box", "models.inception_box", "models.inception_box", "torch.nn.Sequential", "models.inception_box", "models.inception_box", "models.inception_box", "torch.nn.Sequential", "models.encodedGenerator.ceil", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.LeakyReLU", "torch.nn.ConvTranspose2d", "torch.nn.LeakyReLU", "torch.nn.ConvTranspose2d", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.ModuleList", "models.CAM", "models.CAM", "models.SAM", "models.SAM", "torch.nn.Sequential", "models.inception_box", "models.inception_box", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "range", "models.inception_box", "models.inception_box", "models.inception_box", "models.inception_box"], "methods", ["home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.__init__", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.encodedGenerator.ceil"], ["", "def", "__init__", "(", "self", ",", "in_ch", ",", "ncvar", ",", "cvar_ch", "=", "8", ",", "relu_a", "=", "0.01", ",", "use_ele", "=", "True", ",", "cam", "=", "False", ",", "sam", "=", "False", ",", "stage_chs", "=", "(", "64", ",", "32", ",", "16", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_ch", "=", "in_ch", "\n", "self", ".", "norm_chs", "=", "4", "*", "self", ".", "ceil", "(", "in_ch", "/", "4", ")", "\n", "self", ".", "use_sam", "=", "sam", "\n", "self", ".", "use_cam", "=", "cam", "\n", "self", ".", "in_norm_ops", "=", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_ch", ",", "out_channels", "=", "self", ".", "norm_chs", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "self", ".", "norm_chs", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "relu_a", ")", ",", "]", "\n", "\n", "self", ".", "up1_ops", "=", "[", "\n", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "in_channels", "=", "stage_chs", "[", "0", "]", "+", "cvar_ch", "*", "ncvar", ",", "out_channels", "=", "stage_chs", "[", "0", "]", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.01", ")", ",", "]", "\n", "\n", "self", ".", "up2_ops", "=", "[", "\n", "torch", ".", "nn", ".", "ConvTranspose2d", "(", "in_channels", "=", "stage_chs", "[", "1", "]", ",", "out_channels", "=", "stage_chs", "[", "1", "]", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.01", ")", ",", "]", "\n", "\n", "if", "use_ele", ":", "\n", "            ", "self", ".", "ele_ops", "=", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "1", ",", "out_channels", "=", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.01", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "4", ",", "out_channels", "=", "8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.01", ")", ",", "]", "\n", "\n", "", "self", ".", "out_ops", "=", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "stage_chs", "[", "2", "]", ",", "out_channels", "=", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "num_features", "=", "4", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.01", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "4", ",", "out_channels", "=", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "]", "\n", "\n", "self", ".", "cvar_inceps", "=", "[", "torch", ".", "nn", ".", "ModuleList", "(", "[", "inception_box", "(", "in_ch", "=", "1", ",", "o_ch", "=", "cvar_ch", ")", ",", "inception_box", "(", "in_ch", "=", "cvar_ch", ",", "o_ch", "=", "cvar_ch", ")", ",", "inception_box", "(", "in_ch", "=", "cvar_ch", ",", "o_ch", "=", "cvar_ch", ")", ",", "inception_box", "(", "in_ch", "=", "cvar_ch", ",", "o_ch", "=", "cvar_ch", ")", "]", ")", "for", "_", "in", "range", "(", "ncvar", ")", "]", "\n", "self", ".", "cvar_inceps", "=", "torch", ".", "nn", ".", "ModuleList", "(", "self", ".", "cvar_inceps", ")", "\n", "\n", "self", ".", "ich_layers", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "in_norm_ops", ")", "\n", "\n", "self", ".", "p1_inception1", "=", "inception_box", "(", "in_ch", "=", "self", ".", "norm_chs", ",", "o_ch", "=", "stage_chs", "[", "0", "]", ")", "\n", "self", ".", "p1_inception2", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "0", "]", ",", "o_ch", "=", "stage_chs", "[", "0", "]", ")", "\n", "self", ".", "p1_inception3", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "0", "]", ",", "o_ch", "=", "stage_chs", "[", "0", "]", ")", "\n", "self", ".", "p1_inception4", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "0", "]", ",", "o_ch", "=", "stage_chs", "[", "0", "]", ")", "\n", "self", ".", "up1_layers", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "up1_ops", ")", "\n", "\n", "self", ".", "p2_inception1", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "0", "]", ",", "o_ch", "=", "stage_chs", "[", "1", "]", ")", "\n", "self", ".", "p2_inception2", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "1", "]", ",", "o_ch", "=", "stage_chs", "[", "1", "]", ")", "\n", "self", ".", "p2_inception3", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "1", "]", ",", "o_ch", "=", "stage_chs", "[", "1", "]", ")", "\n", "self", ".", "p2_inception4", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "1", "]", ",", "o_ch", "=", "stage_chs", "[", "1", "]", ")", "\n", "self", ".", "up2_layers", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "up2_ops", ")", "\n", "\n", "if", "self", ".", "use_cam", ":", "\n", "            ", "self", ".", "up1_cam", "=", "CAM", "(", "in_ch", "=", "stage_chs", "[", "0", "]", "+", "cvar_ch", "*", "ncvar", ")", "\n", "self", ".", "up2_cam", "=", "CAM", "(", "in_ch", "=", "stage_chs", "[", "1", "]", ")", "\n", "\n", "", "if", "self", ".", "use_sam", ":", "\n", "            ", "self", ".", "up1_sam", "=", "SAM", "(", "in_ch", "=", "stage_chs", "[", "0", "]", ")", "\n", "self", ".", "up2_sam", "=", "SAM", "(", "in_ch", "=", "stage_chs", "[", "1", "]", ")", "\n", "\n", "", "if", "use_ele", ":", "\n", "            ", "self", ".", "ele_layers", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "ele_ops", ")", "\n", "self", ".", "p3_inception1", "=", "inception_box", "(", "in_ch", "=", "8", "+", "stage_chs", "[", "1", "]", ",", "o_ch", "=", "stage_chs", "[", "2", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "p3_inception1", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "1", "]", ",", "o_ch", "=", "stage_chs", "[", "2", "]", ")", "\n", "", "self", ".", "p3_inception2", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "2", "]", ",", "o_ch", "=", "stage_chs", "[", "2", "]", ")", "\n", "self", ".", "p3_inception3", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "2", "]", ",", "o_ch", "=", "stage_chs", "[", "2", "]", ")", "\n", "self", ".", "p3_inception4", "=", "inception_box", "(", "in_ch", "=", "stage_chs", "[", "2", "]", ",", "o_ch", "=", "stage_chs", "[", "2", "]", ")", "\n", "self", ".", "out_layers", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "out_ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.encodedGenerator.forward": [[203, 269], ["zip", "models.encodedGenerator.p1_inception1", "models.encodedGenerator.p1_inception2", "models.encodedGenerator.p1_inception3", "models.encodedGenerator.p1_inception4", "torch.cat", "models.encodedGenerator.p2_inception1", "models.encodedGenerator.p2_inception2", "models.encodedGenerator.p2_inception3", "models.encodedGenerator.p2_inception4", "models.encodedGenerator.p3_inception1", "models.encodedGenerator.p3_inception2", "models.encodedGenerator.p3_inception3", "models.encodedGenerator.p3_inception4", "len", "len", "cvar_outs.append", "layer", "models.encodedGenerator.up1_cam", "layer", "models.encodedGenerator.up2_cam", "layer", "torch.cat", "layer", "_f", "models.encodedGenerator.up1_sam", "models.encodedGenerator.up1_sam", "models.encodedGenerator.up2_sam", "models.encodedGenerator.up2_sam", "layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "cvars", ",", "elevation", "=", "None", ",", "ret_sam", "=", "False", ")", ":", "\n", "        ", "assert", "len", "(", "cvars", ")", "==", "len", "(", "self", ".", "cvar_inceps", ")", "\n", "cvar_outs", "=", "[", "]", "\n", "for", "_cf", ",", "cvar", "in", "zip", "(", "self", ".", "cvar_inceps", ",", "cvars", ")", ":", "\n", "            ", "_tmp", "=", "cvar", "\n", "for", "_f", "in", "_cf", ":", "\n", "                ", "_tmp", "=", "_f", "(", "_tmp", ")", "\n", "", "cvar_outs", ".", "append", "(", "_tmp", ")", "\n", "\n", "", "out_tmp", "=", "x", "\n", "for", "layer", "in", "self", ".", "ich_layers", ":", "\n", "            ", "out_tmp", "=", "layer", "(", "out_tmp", ")", "\n", "\n", "", "out_tmp", "=", "self", ".", "p1_inception1", "(", "out_tmp", ")", "\n", "out_tmp", "=", "self", ".", "p1_inception2", "(", "out_tmp", ")", "\n", "out_tmp", "=", "self", ".", "p1_inception3", "(", "out_tmp", ")", "\n", "out_tmp", "=", "self", ".", "p1_inception4", "(", "out_tmp", ")", "\n", "\n", "if", "self", ".", "use_sam", ":", "# apply spatial attention ", "\n", "            ", "if", "ret_sam", ":", "\n", "                ", "atten1", ",", "out_tmp", "=", "self", ".", "up1_sam", "(", "out_tmp", ",", "ret_att", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "out_tmp", "=", "self", ".", "up1_sam", "(", "out_tmp", ")", "\n", "\n", "", "", "out_tmp", "=", "torch", ".", "cat", "(", "[", "out_tmp", ",", "]", "+", "cvar_outs", ",", "1", ")", "# concat cvars", "\n", "\n", "if", "self", ".", "use_cam", ":", "\n", "            ", "out_tmp", "=", "self", ".", "up1_cam", "(", "out_tmp", ")", "# apply channel attention ", "\n", "\n", "", "for", "layer", "in", "self", ".", "up1_layers", ":", "\n", "            ", "out_tmp", "=", "layer", "(", "out_tmp", ")", "\n", "\n", "", "out_tmp", "=", "self", ".", "p2_inception1", "(", "out_tmp", ")", "\n", "out_tmp", "=", "self", ".", "p2_inception2", "(", "out_tmp", ")", "\n", "out_tmp", "=", "self", ".", "p2_inception3", "(", "out_tmp", ")", "\n", "out_tmp", "=", "self", ".", "p2_inception4", "(", "out_tmp", ")", "\n", "\n", "if", "self", ".", "use_cam", ":", "\n", "            ", "out_tmp", "=", "self", ".", "up2_cam", "(", "out_tmp", ")", "# apply channel attention ", "\n", "\n", "", "if", "self", ".", "use_sam", ":", "# apply spatial attention ", "\n", "            ", "if", "ret_sam", ":", "\n", "                ", "atten2", ",", "out_tmp", "=", "self", ".", "up2_sam", "(", "out_tmp", ",", "ret_att", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "out_tmp", "=", "self", ".", "up2_sam", "(", "out_tmp", ")", "\n", "\n", "", "", "for", "layer", "in", "self", ".", "up2_layers", ":", "\n", "            ", "out_tmp", "=", "layer", "(", "out_tmp", ")", "\n", "\n", "", "if", "elevation", "is", "not", "None", ":", "\n", "            ", "ele_tmp", "=", "elevation", "\n", "for", "layer", "in", "self", ".", "ele_layers", ":", "\n", "                ", "ele_tmp", "=", "layer", "(", "ele_tmp", ")", "\n", "", "out_tmp", "=", "torch", ".", "cat", "(", "[", "out_tmp", ",", "ele_tmp", "]", ",", "1", ")", "\n", "\n", "", "out_tmp", "=", "self", ".", "p3_inception1", "(", "out_tmp", ")", "\n", "out_tmp", "=", "self", ".", "p3_inception2", "(", "out_tmp", ")", "\n", "out_tmp", "=", "self", ".", "p3_inception3", "(", "out_tmp", ")", "\n", "out_tmp", "=", "self", ".", "p3_inception4", "(", "out_tmp", ")", "\n", "for", "layer", "in", "self", ".", "out_layers", ":", "\n", "            ", "out_tmp", "=", "layer", "(", "out_tmp", ")", "\n", "\n", "", "if", "ret_sam", ":", "\n", "            ", "return", "out_tmp", ",", "atten1", ",", "atten2", "\n", "", "else", ":", "\n", "            ", "return", "out_tmp", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.discModel.__init__": [[271, 294], ["super().__init__", "zip", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.Sigmoid", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# input layer", "\n", "self", ".", "operations", "=", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_ch", ",", "out_channels", "=", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "]", "\n", "\n", "# C128-C256-C512-C512", "\n", "out_chs", "=", "(", "128", ",", "256", ",", "512", ",", "512", ",", ")", "\n", "in_chs", "=", "(", "64", ",", ")", "+", "out_chs", "[", ":", "-", "1", "]", "\n", "for", "ic", ",", "oc", "in", "zip", "(", "in_chs", ",", "out_chs", ")", ":", "\n", "            ", "self", ".", "operations", "+=", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "ic", ",", "out_channels", "=", "oc", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "oc", ")", ",", "\n", "torch", ".", "nn", ".", "LeakyReLU", "(", "0.2", ")", ",", "]", "\n", "\n", "# output layers", "\n", "", "self", ".", "operations", "+=", "[", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", "=", "out_chs", "[", "-", "1", "]", ",", "out_channels", "=", "1", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "torch", ".", "nn", ".", "Sigmoid", "(", ")", ",", "]", "\n", "\n", "self", ".", "layers", "=", "torch", ".", "nn", ".", "Sequential", "(", "*", "self", ".", "operations", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.discModel.forward": [[295, 297], ["models.discModel.layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "layers", "(", "x", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.main.main": [[48, 144], ["models.encodedGenerator", "models.discModel", "torch.cuda.is_available", "torch.nn.L1Loss", "torch.nn.BCELoss", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.lr_scheduler.LambdaLR", "torch.optim.lr_scheduler.LambdaLR", "data.bkgdGen", "numpy.array", "numpy.expand_dims", "torch.from_numpy().to", "torch.ones", "torch.zeros", "torch.cat().to", "range", "torch.nn.DataParallel.to", "torch.nn.DataParallel.to", "torch.nn.DataParallel.parameters", "torch.nn.DataParallel.parameters", "util.cosine_decay", "h5py.File", "time.time", "data.bkgdGen.next", "torch.optim.Adam.zero_grad", "torch.nn.DataParallel.forward", "torch.nn.L1Loss.", "gene_loss.backward", "torch.optim.Adam.step", "torch.optim.lr_scheduler.LambdaLR.step", "torch.optim.Adam.zero_grad", "torch.cat", "torch.nn.DataParallel.forward", "disc_loss.backward", "torch.optim.Adam.step", "torch.optim.lr_scheduler.LambdaLR.step", "print", "sys.stdout.flush", "len", "torch.cuda.device_count", "torch.nn.DataParallel", "torch.nn.DataParallel", "data.gen_train_batch_bg", "torch.from_numpy", "torch.cat", "torch.no_grad", "torch.nn.BCELoss.", "print", "util.save2img_rgb", "torch.nn.DataParallel.forward().mean().log", "gene_model.forward.detach", "time.time", "gene_loss.detach().cpu().numpy", "gene_criterion.detach().cpu().numpy", "advs_loss.detach().cpu().numpy", "disc_loss.detach().cpu().numpy", "data.get1batch4test", "util.save2img_rgb", "y222.cpu().numpy", "util.save2img_rgb", "torch.no_grad", "torch.nn.DataParallel.forward().cpu().numpy", "numpy.mean", "numpy.mean", "torch.cuda.device_count", "torch.save", "torch.save", "range", "time.time", "X222[].cpu", "torch.nn.DataParallel.module.state_dict", "torch.nn.DataParallel.state_dict", "torch.nn.DataParallel.forward().mean", "gene_loss.detach().cpu", "gene_criterion.detach().cpu", "advs_loss.detach().cpu", "disc_loss.detach().cpu", "range", "y222.cpu", "numpy.exp", "torch.nn.DataParallel.forward().cpu", "numpy.exp", "scipy.stats.pearsonr", "range", "torch.nn.DataParallel.forward", "gene_loss.detach", "gene_criterion.detach", "advs_loss.detach", "disc_loss.detach", "torch.nn.DataParallel.forward", "pred_img[].flatten", "true_img[].flatten"], "function", ["home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.util.cosine_decay", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.next", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.discModel.forward", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.discModel.forward", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.gen_train_batch_bg", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.util.save2img_rgb", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.get1batch4test", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.util.save2img_rgb", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.util.save2img_rgb", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.discModel.forward", "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.models.discModel.forward"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "mb_size", "=", "args", ".", "mbsize", "\n", "in_depth", "=", "args", ".", "depth", "\n", "\n", "gene_model", "=", "encodedGenerator", "(", "in_ch", "=", "1", ",", "ncvar", "=", "len", "(", "args", ".", "cvars", ")", ",", "use_ele", "=", "True", ",", "sam", "=", "args", ".", "sam", ",", "cam", "=", "args", ".", "cam", ",", "stage_chs", "=", "[", "args", ".", "mdlsz", "//", "2", "**", "_d", "for", "_d", "in", "range", "(", "3", ")", "]", ")", "\n", "\n", "disc_model", "=", "discModel", "(", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "if", "torch", ".", "cuda", ".", "device_count", "(", ")", ">", "1", ":", "\n", "            ", "gene_model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "gene_model", ")", "\n", "disc_model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "disc_model", ")", "\n", "", "gene_model", "=", "gene_model", ".", "to", "(", "torch_devs", ")", "\n", "disc_model", "=", "disc_model", ".", "to", "(", "torch_devs", ")", "\n", "# gene_criterion = torch.nn.MSELoss()", "\n", "", "gene_criterion", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "disc_criterion", "=", "torch", ".", "nn", ".", "BCELoss", "(", ")", "\n", "\n", "gene_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "gene_model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "disc_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "disc_model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "\n", "lrdecay_lambda", "=", "lambda", "epoch", ":", "cosine_decay", "(", "epoch", ",", "warmup", "=", "args", ".", "warmup", ",", "max_epoch", "=", "args", ".", "maxep", ")", "\n", "# initial lr times a given function", "\n", "gene_lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "LambdaLR", "(", "gene_optimizer", ",", "lr_lambda", "=", "lrdecay_lambda", ")", "\n", "disc_lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "LambdaLR", "(", "disc_optimizer", ",", "lr_lambda", "=", "lrdecay_lambda", ")", "\n", "# build minibatch data generator with prefetch", "\n", "mb_data_iter", "=", "bkgdGen", "(", "data_generator", "=", "gen_train_batch_bg", "(", "mb_size", "=", "mb_size", ",", "in_depth", "=", "in_depth", ",", "dev", "=", "torch_devs", ",", "trans", "=", "args", ".", "logtrs", ",", "cvars", "=", "args", ".", "cvars", ")", ",", "max_prefetch", "=", "mb_size", "*", "4", ")", "\n", "\n", "ele_12km", "=", "h5py", ".", "File", "(", "'../dataset/elevation_12km_resized.hdf5'", ",", "\"r\"", ")", "[", "\"elevation\"", "]", "\n", "ele_12km", "=", "np", ".", "array", "(", "[", "ele_12km", "]", "*", "mb_size", ")", "\n", "ele_12km", "=", "np", ".", "expand_dims", "(", "ele_12km", ",", "1", ")", "\n", "ele_12km", "=", "torch", ".", "from_numpy", "(", "ele_12km", ")", ".", "to", "(", "torch_devs", ")", "\n", "\n", "# get disc out size and create label", "\n", "dsc_out_size", "=", "(", "mb_size", ",", "1", ",", "4", ",", "8", ")", "\n", "true_label", "=", "torch", ".", "ones", "(", "dsc_out_size", ")", "\n", "false_label", "=", "torch", ".", "zeros", "(", "dsc_out_size", ")", "\n", "disc_label", "=", "torch", ".", "cat", "(", "(", "true_label", ",", "false_label", ")", ",", "dim", "=", "0", ")", ".", "to", "(", "torch_devs", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "maxep", "+", "1", ")", ":", "\n", "        ", "time_it_st", "=", "time", ".", "time", "(", ")", "\n", "X_mb", ",", "cvars", ",", "y_mb", "=", "mb_data_iter", ".", "next", "(", ")", "# with prefetch", "\n", "\n", "# generator optimize", "\n", "gene_optimizer", ".", "zero_grad", "(", ")", "\n", "pred", "=", "gene_model", ".", "forward", "(", "X_mb", ",", "cvars", ",", "ele_12km", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "advs_loss", "=", "0", "-", "disc_model", ".", "forward", "(", "pred", ")", ".", "mean", "(", ")", ".", "log", "(", ")", "# adv loss", "\n", "", "cont_loss", "=", "gene_criterion", "(", "pred", ",", "y_mb", ")", "# content loss", "\n", "gene_loss", "=", "args", ".", "wmse", "*", "cont_loss", "+", "advs_loss", "\n", "gene_loss", ".", "backward", "(", ")", "\n", "gene_optimizer", ".", "step", "(", ")", "\n", "gene_lr_scheduler", ".", "step", "(", ")", "\n", "\n", "# discriminator optimize", "\n", "disc_optimizer", ".", "zero_grad", "(", ")", "\n", "disc_mb", "=", "torch", ".", "cat", "(", "(", "y_mb", ",", "pred", ".", "detach", "(", ")", ")", ",", "dim", "=", "0", ")", "\n", "disc_pred", "=", "disc_model", ".", "forward", "(", "disc_mb", ")", "\n", "disc_loss", "=", "disc_criterion", "(", "disc_pred", ",", "disc_label", ")", "/", "2", "# slows down the rate relative to G", "\n", "disc_loss", ".", "backward", "(", ")", "\n", "disc_optimizer", ".", "step", "(", ")", "\n", "disc_lr_scheduler", ".", "step", "(", ")", "\n", "\n", "itr_prints", "=", "'[Info] @ %.1f Epoch: %05d, gloss: %.2f = (Cont:%.2f + Adv:%.2f), dloss: %.2f, elapse: %.2fs/itr, lr: %.5f'", "%", "(", "time", ".", "time", "(", ")", ",", "epoch", ",", "gene_loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "cont_loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "advs_loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "disc_loss", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "(", "time", ".", "time", "(", ")", "-", "time_it_st", ")", ",", "gene_optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", "\n", "print", "(", "itr_prints", ")", "\n", "\n", "if", "epoch", "%", "(", "500", ")", "==", "0", ":", "\n", "            ", "if", "epoch", "==", "0", ":", "\n", "                ", "X222", ",", "cv222", ",", "y222", "=", "get1batch4test", "(", "in_depth", "=", "in_depth", ",", "idx", "=", "range", "(", "args", ".", "mbsize", ")", ",", "dev", "=", "torch_devs", ",", "trans", "=", "args", ".", "logtrs", ",", "cvars", "=", "args", ".", "cvars", ")", "\n", "save2img_rgb", "(", "X222", "[", "0", ",", "in_depth", "-", "1", ",", ":", ",", ":", "]", ".", "cpu", "(", ")", ",", "'%s/low-res.png'", "%", "(", "itr_out_dir", ")", ")", "\n", "true_img", "=", "y222", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "args", ".", "logtrs", ":", "true_img", "=", "np", ".", "exp", "(", "true_img", ")", "-", "1", "# transform back", "\n", "save2img_rgb", "(", "true_img", "[", "0", ",", "0", ",", ":", ",", ":", "]", ",", "'%s/high-res.png'", "%", "(", "itr_out_dir", ")", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "pred_img", "=", "gene_model", ".", "forward", "(", "X222", ",", "cv222", ",", "ele_12km", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "args", ".", "logtrs", ":", "pred_img", "=", "np", ".", "exp", "(", "pred_img", ")", "-", "1", "# transform back", "\n", "mse", "=", "np", ".", "mean", "(", "(", "true_img", "-", "pred_img", ")", "**", "2", ")", "\n", "cc_avg", "=", "np", ".", "mean", "(", "[", "pearsonr", "(", "pred_img", "[", "i", "]", ".", "flatten", "(", ")", ",", "true_img", "[", "i", "]", ".", "flatten", "(", ")", ")", "[", "0", "]", "for", "i", "in", "range", "(", "pred_img", ".", "shape", "[", "0", "]", ")", "]", ")", "\n", "", "print", "(", "'[Validation] @ Epoch: %05d MSE: %.4f, CC:%.3f of %d samples'", "%", "(", "epoch", ",", "mse", ",", "cc_avg", ",", "pred_img", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "save2img_rgb", "(", "pred_img", "[", "0", ",", "0", ",", ":", ",", ":", "]", ",", "'%s/it%05d.png'", "%", "(", "itr_out_dir", ",", "epoch", ")", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "device_count", "(", ")", ">", "1", ":", "\n", "                ", "torch", ".", "save", "(", "gene_model", ".", "module", ".", "state_dict", "(", ")", ",", "\"%s/mdl-it%05d.pth\"", "%", "(", "itr_out_dir", ",", "epoch", ")", ")", "\n", "", "else", ":", "\n", "                ", "torch", ".", "save", "(", "gene_model", ".", "state_dict", "(", ")", ",", "\"%s/mdl-it%05d.pth\"", "%", "(", "itr_out_dir", ",", "epoch", ")", ")", "\n", "\n", "", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.__init__": [[7, 13], ["threading.Thread.__init__", "queue.Queue", "data.bkgdGen.start"], "methods", ["home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_generator", ",", "max_prefetch", "=", "1", ")", ":", "\n", "        ", "threading", ".", "Thread", ".", "__init__", "(", "self", ")", "\n", "self", ".", "queue", "=", "Queue", ".", "Queue", "(", "max_prefetch", ")", "\n", "self", ".", "generator", "=", "data_generator", "\n", "self", ".", "daemon", "=", "True", "\n", "self", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.run": [[14, 19], ["data.bkgdGen.queue.put", "data.bkgdGen.queue.put"], "methods", ["None"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "for", "item", "in", "self", ".", "generator", ":", "\n", "# block if necessary until a free slot is available", "\n", "            ", "self", ".", "queue", ".", "put", "(", "item", ",", "block", "=", "True", ",", "timeout", "=", "None", ")", "\n", "", "self", ".", "queue", ".", "put", "(", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.next": [[20, 26], ["data.bkgdGen.queue.get"], "methods", ["None"], ["", "def", "next", "(", "self", ")", ":", "\n", "# block if necessary until an item is available", "\n", "        ", "next_item", "=", "self", ".", "queue", ".", "get", "(", "block", "=", "True", ",", "timeout", "=", "None", ")", "\n", "if", "next_item", "is", "None", ":", "\n", "            ", "raise", "StopIteration", "\n", "", "return", "next_item", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.__next__": [[28, 30], ["data.bkgdGen.next"], "methods", ["home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.next"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "next", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.bkgdGen.__iter__": [[31, 33], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.gen_train_batch_bg": [[34, 60], ["numpy.arange", "h5py.File", "h5py.File", "numpy.log", "numpy.random.randint", "numpy.array", "numpy.expand_dims", "numpy.array", "vars4stack.append", "h5py.File", "h5py.File", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["", "", "def", "gen_train_batch_bg", "(", "mb_size", ",", "in_depth", ",", "dev", "=", "'cuda'", ",", "trans", "=", "True", ",", "cvars", "=", "[", "]", ")", ":", "\n", "    ", "train_mask", "=", "np", ".", "arange", "(", "0", ",", "2911", ",", "dtype", "=", "np", ".", "uint", ")", "<", "2328", "\n", "\n", "rain_12km", "=", "h5py", ".", "File", "(", "'../dataset/WRF_precip_2005_12km-mask-clip0p05-99p5.hdf5'", ",", "\"r\"", ")", "[", "'rain'", "]", "[", ":", "]", "[", "train_mask", "]", "\n", "\n", "vars_all", "=", "{", "}", "\n", "with", "h5py", ".", "File", "(", "'../dataset/WRF_50km_vars-mask-clip0p05-99p5.hdf5'", ",", "\"r\"", ")", "as", "h5fd", ":", "\n", "        ", "vars_all", "[", "'prec'", "]", "=", "h5fd", "[", "'RAIN'", "]", "[", ":", "]", "[", "train_mask", "]", "# precipitation as always", "\n", "for", "_var", "in", "cvars", ":", "\n", "            ", "vars_all", "[", "_var", "]", "=", "h5fd", "[", "_var", "]", "[", ":", "]", "[", "train_mask", "]", "\n", "\n", "", "", "if", "trans", ":", "\n", "        ", "rain_12km", "=", "np", ".", "log", "(", "1", "+", "rain_12km", ")", "\n", "\n", "", "while", "True", ":", "\n", "        ", "idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "rain_12km", ".", "shape", "[", "0", "]", "-", "in_depth", ",", "mb_size", ")", "\n", "vars4stack", "=", "[", "]", "\n", "batch_prec", "=", "np", ".", "array", "(", "[", "vars_all", "[", "'prec'", "]", "[", "s_idx", ":", "(", "s_idx", "+", "in_depth", ")", "]", "for", "s_idx", "in", "idx", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "_var", "in", "cvars", ":", "\n", "            ", "batch_cvar", "=", "np", ".", "array", "(", "[", "vars_all", "[", "_var", "]", "[", "s_idx", ":", "(", "s_idx", "+", "in_depth", ")", "]", "for", "s_idx", "in", "idx", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "vars4stack", ".", "append", "(", "batch_cvar", ")", "\n", "\n", "", "batch_Y", "=", "np", ".", "expand_dims", "(", "[", "rain_12km", "[", "s_idx", "+", "in_depth", "-", "1", "]", "for", "s_idx", "in", "idx", "]", ",", "1", ")", "\n", "\n", "yield", "torch", ".", "from_numpy", "(", "batch_prec", ")", ".", "to", "(", "dev", ")", ",", "[", "torch", ".", "from_numpy", "(", "_d", ")", ".", "to", "(", "dev", ")", "for", "_d", "in", "vars4stack", "]", ",", "torch", ".", "from_numpy", "(", "batch_Y", ")", ".", "to", "(", "dev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.data.get1batch4test": [[61, 86], ["numpy.array", "numpy.expand_dims", "numpy.arange", "h5py.File", "h5py.File", "numpy.log", "numpy.random.randint", "numpy.array", "vars4stack.append", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "h5py.File", "h5py.File", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["", "", "def", "get1batch4test", "(", "in_depth", ",", "idx", "=", "None", ",", "dev", "=", "'cuda'", ",", "trans", "=", "True", ",", "cvars", "=", "[", "]", ")", ":", "\n", "    ", "test_mask", "=", "np", ".", "arange", "(", "0", ",", "2911", ",", "dtype", "=", "np", ".", "uint", ")", ">=", "2328", "\n", "\n", "rain_12km", "=", "h5py", ".", "File", "(", "'../dataset/WRF_precip_2005_12km-mask-clip0p05-99p5.hdf5'", ",", "\"r\"", ")", "[", "'rain'", "]", "[", ":", "]", "[", "test_mask", "]", "\n", "\n", "vars_all", "=", "{", "}", "\n", "with", "h5py", ".", "File", "(", "'../dataset/WRF_50km_vars-mask-clip0p05-99p5.hdf5'", ",", "\"r\"", ")", "as", "h5fd", ":", "\n", "        ", "vars_all", "[", "'prec'", "]", "=", "h5fd", "[", "'RAIN'", "]", "[", ":", "]", "[", "test_mask", "]", "# precipitation as always", "\n", "for", "_var", "in", "cvars", ":", "\n", "            ", "vars_all", "[", "_var", "]", "=", "h5fd", "[", "_var", "]", "[", ":", "]", "[", "test_mask", "]", "\n", "\n", "", "", "if", "trans", ":", "\n", "        ", "rain_12km", "=", "np", ".", "log", "(", "1", "+", "rain_12km", ")", "\n", "\n", "", "if", "idx", "is", "None", ":", "idx", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "rain_12km", ".", "shape", "[", "0", "]", "-", "in_depth", ",", "128", ")", "\n", "vars4stack", "=", "[", "]", "\n", "batch_prec", "=", "np", ".", "array", "(", "[", "vars_all", "[", "'prec'", "]", "[", "s_idx", ":", "(", "s_idx", "+", "in_depth", ")", "]", "for", "s_idx", "in", "idx", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "_var", "in", "cvars", ":", "\n", "        ", "batch_cvar", "=", "np", ".", "array", "(", "[", "vars_all", "[", "_var", "]", "[", "s_idx", ":", "(", "s_idx", "+", "in_depth", ")", "]", "for", "s_idx", "in", "idx", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "vars4stack", ".", "append", "(", "batch_cvar", ")", "\n", "\n", "", "batch_Y", "=", "np", ".", "expand_dims", "(", "[", "rain_12km", "[", "s_idx", "+", "in_depth", "-", "1", "]", "for", "s_idx", "in", "idx", "]", ",", "1", ")", "\n", "\n", "return", "torch", ".", "from_numpy", "(", "batch_prec", ")", ".", "to", "(", "dev", ")", ",", "[", "torch", ".", "from_numpy", "(", "_d", ")", ".", "to", "(", "dev", ")", "for", "_d", "in", "vars4stack", "]", ",", "torch", ".", "from_numpy", "(", "batch_Y", ")", ".", "to", "(", "dev", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.util.save2img_rgb": [[5, 11], ["matplotlib.pyplot.figure", "matplotlib.pyplot.axes", "matplotlib.pyplot.imshow", "matplotlib.pyplot.savefig", "matplotlib.pyplot.close"], "function", ["None"], ["def", "save2img_rgb", "(", "img_data", ",", "img_fn", ")", ":", "\n", "    ", "plt", ".", "figure", "(", "figsize", "=", "(", "img_data", ".", "shape", "[", "1", "]", "/", "10.", ",", "img_data", ".", "shape", "[", "0", "]", "/", "10.", ")", ")", "\n", "plt", ".", "axes", "(", "[", "0", ",", "0", ",", "1", ",", "1", "]", ")", "\n", "plt", ".", "imshow", "(", "img_data", ",", ")", "\n", "plt", ".", "savefig", "(", "img_fn", ",", "facecolor", "=", "'black'", ",", "edgecolor", "=", "'black'", ",", "dpi", "=", "10", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.util.save2img": [[12, 23], ["imageio.imwrite", "d_img.copy", "img_norm.astype.astype", "d_img.min", "d_img.max"], "function", ["None"], ["", "def", "save2img", "(", "d_img", ",", "fn", ")", ":", "\n", "    ", "if", "fn", "[", "-", "4", ":", "]", "==", "'tiff'", ":", "\n", "        ", "img_norm", "=", "d_img", ".", "copy", "(", ")", "\n", "", "else", ":", "\n", "        ", "_min", ",", "_max", "=", "d_img", ".", "min", "(", ")", ",", "d_img", ".", "max", "(", ")", "\n", "if", "_max", "==", "_min", ":", "\n", "            ", "img_norm", "=", "d_img", "-", "_max", "\n", "", "else", ":", "\n", "            ", "img_norm", "=", "(", "d_img", "-", "_min", ")", "*", "255.", "/", "(", "_max", "-", "_min", ")", "\n", "", "img_norm", "=", "img_norm", ".", "astype", "(", "'uint8'", ")", "\n", "", "imageio", ".", "imwrite", "(", "fn", ",", "img_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.util.scale2uint8": [[24, 32], ["_img_s.astype.astype", "_img.min", "_img.max"], "function", ["None"], ["", "def", "scale2uint8", "(", "_img", ")", ":", "\n", "    ", "_min", ",", "_max", "=", "_img", ".", "min", "(", ")", ",", "_img", ".", "max", "(", ")", "\n", "if", "_max", "==", "_min", ":", "\n", "        ", "_img_s", "=", "_img", "-", "_max", "\n", "", "else", ":", "\n", "        ", "_img_s", "=", "(", "_img", "-", "_min", ")", "*", "255.", "/", "(", "_max", "-", "_min", ")", "\n", "", "_img_s", "=", "_img_s", ".", "astype", "(", "'uint8'", ")", "\n", "return", "_img", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.util.str2bool": [[33, 42], ["isinstance", "v.lower", "v.lower", "argparse.ArgumentTypeError"], "function", ["None"], ["", "def", "str2bool", "(", "v", ")", ":", "\n", "    ", "if", "isinstance", "(", "v", ",", "bool", ")", ":", "\n", "       ", "return", "v", "\n", "", "if", "v", ".", "lower", "(", ")", "in", "(", "'yes'", ",", "'true'", ",", "'t'", ",", "'y'", ",", "'1'", ")", ":", "\n", "        ", "return", "True", "\n", "", "elif", "v", ".", "lower", "(", ")", "in", "(", "'no'", ",", "'false'", ",", "'f'", ",", "'n'", ",", "'0'", ")", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "raise", "argparse", ".", "ArgumentTypeError", "(", "'Boolean value expected.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.util.cosine_decay": [[43, 48], ["numpy.cos"], "function", ["None"], ["", "", "def", "cosine_decay", "(", "epoch", ",", "warmup", "=", "100", ",", "max_epoch", "=", "10000", ")", ":", "\n", "    ", "if", "epoch", "<=", "warmup", ":", "\n", "        ", "return", "(", "epoch", "/", "warmup", ")", "\n", "", "else", ":", "\n", "        ", "return", "0.5", "*", "(", "1", "+", "np", ".", "cos", "(", "(", "epoch", "-", "warmup", ")", "/", "max_epoch", "*", "np", ".", "pi", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lzhengchun_dsgan.Encoded-CGAN.util.str2list": [[49, 51], ["s.split"], "function", ["None"], ["", "", "def", "str2list", "(", "s", ")", ":", "\n", "    ", "return", "s", ".", "split", "(", "':'", ")", "", "", ""]]}