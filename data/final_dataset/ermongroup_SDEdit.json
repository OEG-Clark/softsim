{"home.repos.pwc.inspect_result.ermongroup_SDEdit.None.main.parse_args_and_config": [[16, 81], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "main.dict2namespace", "getattr", "logging.StreamHandler", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger", "logging.getLogger.addHandler", "logging.getLogger.setLevel", "os.makedirs", "os.path.join", "logging.info", "torch.manual_seed", "torch.manual_seed", "numpy.random.seed", "torch.cuda.is_available", "torch.cuda.is_available", "open", "yaml.safe_load", "parser.parse_args.verbose.upper", "isinstance", "ValueError", "os.path.join", "os.path.exists", "os.makedirs", "torch.cuda.is_available", "torch.cuda.is_available", "torch.device", "torch.device", "torch.device", "torch.device", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "os.path.join", "input", "shutil.rmtree", "os.makedirs", "print", "sys.exit", "globals", "input.upper"], "function", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.None.main.dict2namespace"], ["def", "parse_args_and_config", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "globals", "(", ")", "[", "'__doc__'", "]", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "help", "=", "'Path to the config file'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1234", ",", "help", "=", "'Random seed'", ")", "\n", "parser", ".", "add_argument", "(", "'--exp'", ",", "type", "=", "str", ",", "default", "=", "'exp'", ",", "help", "=", "'Path for saving running related data.'", ")", "\n", "parser", ".", "add_argument", "(", "'--comment'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "help", "=", "'A string for experiment comment'", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "type", "=", "str", ",", "default", "=", "'info'", ",", "help", "=", "'Verbose level: info | debug | warning | critical'", ")", "\n", "parser", ".", "add_argument", "(", "'--sample'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Whether to produce samples from the model'", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--image_folder'", ",", "type", "=", "str", ",", "default", "=", "'images'", ",", "help", "=", "\"The folder name of samples\"", ")", "\n", "parser", ".", "add_argument", "(", "'--ni'", ",", "action", "=", "'store_true'", ",", "help", "=", "\"No interaction. Suitable for Slurm Job launcher\"", ")", "\n", "parser", ".", "add_argument", "(", "'--npy_name'", ",", "type", "=", "str", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--sample_step'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'Total sampling steps'", ")", "\n", "parser", ".", "add_argument", "(", "'--t'", ",", "type", "=", "int", ",", "default", "=", "400", ",", "help", "=", "'Sampling noise scale'", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "# parse config file", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "'configs'", ",", "args", ".", "config", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "config", "=", "yaml", ".", "safe_load", "(", "f", ")", "\n", "", "new_config", "=", "dict2namespace", "(", "config", ")", "\n", "\n", "level", "=", "getattr", "(", "logging", ",", "args", ".", "verbose", ".", "upper", "(", ")", ",", "None", ")", "\n", "if", "not", "isinstance", "(", "level", ",", "int", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'level {} not supported'", ".", "format", "(", "args", ".", "verbose", ")", ")", "\n", "\n", "", "handler1", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(levelname)s - %(filename)s - %(asctime)s - %(message)s'", ")", "\n", "handler1", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "logger", ".", "addHandler", "(", "handler1", ")", "\n", "logger", ".", "setLevel", "(", "level", ")", "\n", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "args", ".", "exp", ",", "'image_samples'", ")", ",", "exist_ok", "=", "True", ")", "\n", "args", ".", "image_folder", "=", "os", ".", "path", ".", "join", "(", "args", ".", "exp", ",", "'image_samples'", ",", "args", ".", "image_folder", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "image_folder", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "image_folder", ")", "\n", "", "else", ":", "\n", "        ", "overwrite", "=", "False", "\n", "if", "args", ".", "ni", ":", "\n", "            ", "overwrite", "=", "True", "\n", "", "else", ":", "\n", "            ", "response", "=", "input", "(", "\"Image folder already exists. Overwrite? (Y/N)\"", ")", "\n", "if", "response", ".", "upper", "(", ")", "==", "'Y'", ":", "\n", "                ", "overwrite", "=", "True", "\n", "\n", "", "", "if", "overwrite", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "args", ".", "image_folder", ")", "\n", "os", ".", "makedirs", "(", "args", ".", "image_folder", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Output image folder exists. Program halted.\"", ")", "\n", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "# add device", "\n", "", "", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "torch", ".", "device", "(", "'cpu'", ")", "\n", "logging", ".", "info", "(", "\"Using device: {}\"", ".", "format", "(", "device", ")", ")", "\n", "new_config", ".", "device", "=", "device", "\n", "\n", "# set random seed", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "\n", "", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "return", "args", ",", "new_config", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.None.main.dict2namespace": [[83, 92], ["argparse.Namespace", "config.items", "isinstance", "setattr", "main.dict2namespace"], "function", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.None.main.dict2namespace"], ["", "def", "dict2namespace", "(", "config", ")", ":", "\n", "    ", "namespace", "=", "argparse", ".", "Namespace", "(", ")", "\n", "for", "key", ",", "value", "in", "config", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "value", ",", "dict", ")", ":", "\n", "            ", "new_value", "=", "dict2namespace", "(", "value", ")", "\n", "", "else", ":", "\n", "            ", "new_value", "=", "value", "\n", "", "setattr", "(", "namespace", ",", "key", ",", "new_value", ")", "\n", "", "return", "namespace", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.None.main.main": [[94, 109], ["main.parse_args_and_config", "print", "logging.info", "logging.info", "logging.info", "print", "runners.image_editing.Diffusion", "runners.image_editing.Diffusion.image_editing_sample", "os.getpid", "logging.error", "traceback.format_exc"], "function", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.None.main.parse_args_and_config", "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.Diffusion.image_editing_sample"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", ",", "config", "=", "parse_args_and_config", "(", ")", "\n", "print", "(", "\">\"", "*", "80", ")", "\n", "logging", ".", "info", "(", "\"Exp instance id = {}\"", ".", "format", "(", "os", ".", "getpid", "(", ")", ")", ")", "\n", "logging", ".", "info", "(", "\"Exp comment = {}\"", ".", "format", "(", "args", ".", "comment", ")", ")", "\n", "logging", ".", "info", "(", "\"Config =\"", ")", "\n", "print", "(", "\"<\"", "*", "80", ")", "\n", "\n", "try", ":", "\n", "        ", "runner", "=", "Diffusion", "(", "args", ",", "config", ")", "\n", "runner", ".", "image_editing_sample", "(", ")", "\n", "", "except", "Exception", ":", "\n", "        ", "logging", ".", "error", "(", "traceback", ".", "format_exc", "(", ")", ")", "\n", "\n", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.functions.process_data.download_process_data": [[5, 14], ["os.makedirs", "print", "torch.hub.download_url_to_file", "torch.hub.download_url_to_file", "torch.hub.download_url_to_file", "torch.hub.download_url_to_file", "torch.hub.download_url_to_file", "print", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["def", "download_process_data", "(", "path", "=", "\"colab_demo\"", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "path", ",", "exist_ok", "=", "True", ")", "\n", "print", "(", "\"Downloading data\"", ")", "\n", "torch", ".", "hub", ".", "download_url_to_file", "(", "'https://image-editing-test-12345.s3-us-west-2.amazonaws.com/colab_examples/lsun_bedroom1.pth'", ",", "os", ".", "path", ".", "join", "(", "path", ",", "'lsun_bedroom1.pth'", ")", ")", "\n", "torch", ".", "hub", ".", "download_url_to_file", "(", "'https://image-editing-test-12345.s3-us-west-2.amazonaws.com/colab_examples/lsun_bedroom2.pth'", ",", "os", ".", "path", ".", "join", "(", "path", ",", "'lsun_bedroom2.pth'", ")", ")", "\n", "torch", ".", "hub", ".", "download_url_to_file", "(", "'https://image-editing-test-12345.s3-us-west-2.amazonaws.com/colab_examples/lsun_bedroom3.pth'", ",", "os", ".", "path", ".", "join", "(", "path", ",", "'lsun_bedroom3.pth'", ")", ")", "\n", "torch", ".", "hub", ".", "download_url_to_file", "(", "'https://image-editing-test-12345.s3-us-west-2.amazonaws.com/colab_examples/lsun_edit.pth'", ",", "os", ".", "path", ".", "join", "(", "path", ",", "'lsun_edit.pth'", ")", ")", "\n", "torch", ".", "hub", ".", "download_url_to_file", "(", "'https://image-editing-test-12345.s3-us-west-2.amazonaws.com/colab_examples/lsun_church.pth'", ",", "os", ".", "path", ".", "join", "(", "path", ",", "'lsun_church.pth'", ")", ")", "\n", "print", "(", "\"Data downloaded\"", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.get_checkpoint": [[21, 31], ["None"], "function", ["None"], ["def", "get_checkpoint", "(", "dataset", ",", "category", ")", ":", "\n", "    ", "if", "category", "==", "\"bedroom\"", ":", "\n", "        ", "url", "=", "\"https://image-editing-test-12345.s3-us-west-2.amazonaws.com/checkpoints/bedroom.ckpt\"", "\n", "", "elif", "category", "==", "\"church_outdoor\"", ":", "\n", "        ", "url", "=", "\"https://image-editing-test-12345.s3-us-west-2.amazonaws.com/checkpoints/church_outdoor.ckpt\"", "\n", "", "elif", "dataset", "==", "\"CelebA_HQ\"", ":", "\n", "        ", "url", "=", "\"https://image-editing-test-12345.s3-us-west-2.amazonaws.com/checkpoints/celeba_hq.ckpt\"", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "", "return", "url", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.get_config": [[33, 38], ["main.dict2namespace", "open", "yaml.safe_load", "os.path.join"], "function", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.None.main.dict2namespace"], ["", "def", "get_config", "(", "file", ")", ":", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "'tutorial_code'", ",", "'configs'", ",", "file", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "config", "=", "yaml", ".", "safe_load", "(", "f", ")", "\n", "", "new_config", "=", "dict2namespace", "(", "config", ")", "\n", "return", "new_config", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.load_model": [[40, 67], ["utils.get_checkpoint", "utils.get_config", "Model", "torch.hub.load_state_dict_from_url", "torch.nn.DataParallel.load_state_dict", "torch.nn.DataParallel.to", "torch.nn.DataParallel", "torch.nn.DataParallel.eval", "print", "get_beta_schedule", "torch.from_numpy().float", "numpy.cumprod", "numpy.append", "numpy.log", "numpy.maximum", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.get_checkpoint", "home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.get_config", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.load_state_dict", "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.get_beta_schedule"], ["", "def", "load_model", "(", "dataset", ",", "category", ",", "file", ")", ":", "\n", "    ", "url", "=", "get_checkpoint", "(", "dataset", ",", "category", ")", "\n", "config", "=", "get_config", "(", "file", ")", "\n", "model", "=", "Model", "(", "config", ")", "\n", "ckpt", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "url", ",", "map_location", "=", "device", ")", "\n", "model", ".", "load_state_dict", "(", "ckpt", ")", "\n", "model", ".", "to", "(", "device", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", ".", "eval", "(", ")", "\n", "print", "(", "\"Model loaded\"", ")", "\n", "\n", "betas", "=", "get_beta_schedule", "(", "\n", "beta_start", "=", "config", ".", "diffusion", ".", "beta_start", ",", "\n", "beta_end", "=", "config", ".", "diffusion", ".", "beta_end", ",", "\n", "num_diffusion_timesteps", "=", "config", ".", "diffusion", ".", "num_diffusion_timesteps", "\n", ")", "\n", "betas", "=", "torch", ".", "from_numpy", "(", "betas", ")", ".", "float", "(", ")", "\n", "num_timesteps", "=", "betas", ".", "shape", "[", "0", "]", "\n", "\n", "alphas", "=", "1.0", "-", "betas", "\n", "alphas_cumprod", "=", "np", ".", "cumprod", "(", "alphas", ",", "axis", "=", "0", ")", "\n", "alphas_cumprod_prev", "=", "np", ".", "append", "(", "1.0", ",", "alphas_cumprod", "[", ":", "-", "1", "]", ")", "\n", "posterior_variance", "=", "betas", "*", "(", "1.0", "-", "alphas_cumprod_prev", ")", "/", "(", "1.0", "-", "alphas_cumprod", ")", "\n", "logvar", "=", "np", ".", "log", "(", "np", ".", "maximum", "(", "posterior_variance", ",", "1e-20", ")", ")", "\n", "\n", "return", "model", ",", "betas", ",", "num_timesteps", ",", "logvar", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.imshow": [[69, 79], ["torch.clamp.to", "torch.clamp.permute", "torch.clamp.reshape", "torch.clamp", "torch.clamp.numpy", "matplotlib.imshow", "matplotlib.title", "matplotlib.show", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.imshow"], ["", "def", "imshow", "(", "img", ",", "title", "=", "\"\"", ")", ":", "\n", "    ", "img", "=", "img", ".", "to", "(", "\"cpu\"", ")", "\n", "img", "=", "img", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", "\n", "img", "=", "img", ".", "reshape", "(", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "img", "=", "img", "/", "2", "+", "0.5", "# unnormalize", "\n", "img", "=", "torch", ".", "clamp", "(", "img", ",", "min", "=", "0.", ",", "max", "=", "1.", ")", "\n", "npimg", "=", "img", ".", "numpy", "(", ")", "\n", "plt", ".", "imshow", "(", "np", ".", "transpose", "(", "npimg", ",", "(", "1", ",", "2", ",", "0", ")", ")", ")", "\n", "plt", ".", "title", "(", "title", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.SDEditing": [[81, 115], ["print", "torch.no_grad", "torch.load", "mask.to.to", "img.repeat.to", "img.repeat.unsqueeze", "img.repeat.repeat", "utils.imshow", "range", "torch.randn_like", "utils.imshow", "utils.imshow", "tqdm.tqdm", "reversed", "a[].sqrt", "range", "image_editing_denoising_step_flexible_mask", "progress_bar.update", "utils.imshow", "a[].sqrt", "torch.ones"], "function", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.imshow", "home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.imshow", "home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.imshow", "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.image_editing_denoising_step_flexible_mask", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.update", "home.repos.pwc.inspect_result.ermongroup_SDEdit.colab_utils.utils.imshow"], ["", "def", "SDEditing", "(", "betas", ",", "logvar", ",", "model", ",", "name", ",", "sample_step", ",", "total_noise_levels", ",", "n", "=", "4", ")", ":", "\n", "    ", "print", "(", "\"Start sampling\"", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "[", "mask", ",", "img", "]", "=", "torch", ".", "load", "(", "\"colab_demo/{}.pth\"", ".", "format", "(", "name", ")", ")", "\n", "mask", "=", "mask", ".", "to", "(", "device", ")", "\n", "img", "=", "img", ".", "to", "(", "device", ")", "\n", "img", "=", "img", ".", "unsqueeze", "(", "dim", "=", "0", ")", "\n", "img", "=", "img", ".", "repeat", "(", "n", ",", "1", ",", "1", ",", "1", ")", "\n", "x0", "=", "img", "\n", "x0", "=", "(", "x0", "-", "0.5", ")", "*", "2.", "\n", "imshow", "(", "x0", ",", "title", "=", "\"Initial input\"", ")", "\n", "\n", "for", "it", "in", "range", "(", "sample_step", ")", ":", "\n", "            ", "e", "=", "torch", ".", "randn_like", "(", "x0", ")", "\n", "a", "=", "(", "1", "-", "betas", ")", ".", "cumprod", "(", "dim", "=", "0", ")", ".", "to", "(", "device", ")", "\n", "x", "=", "x0", "*", "a", "[", "total_noise_levels", "-", "1", "]", ".", "sqrt", "(", ")", "+", "e", "*", "(", "1.0", "-", "a", "[", "total_noise_levels", "-", "1", "]", ")", ".", "sqrt", "(", ")", "\n", "imshow", "(", "x", ",", "title", "=", "\"Perturb with SDE\"", ")", "\n", "\n", "with", "tqdm", "(", "total", "=", "total_noise_levels", ",", "desc", "=", "\"Iteration {}\"", ".", "format", "(", "it", ")", ")", "as", "progress_bar", ":", "\n", "                ", "for", "i", "in", "reversed", "(", "range", "(", "total_noise_levels", ")", ")", ":", "\n", "                    ", "t", "=", "(", "torch", ".", "ones", "(", "n", ")", "*", "i", ")", ".", "to", "(", "device", ")", "\n", "x_", "=", "image_editing_denoising_step_flexible_mask", "(", "x", ",", "t", "=", "t", ",", "model", "=", "model", ",", "\n", "logvar", "=", "logvar", ",", "\n", "betas", "=", "betas", ")", "\n", "x", "=", "x0", "*", "a", "[", "i", "]", ".", "sqrt", "(", ")", "+", "e", "*", "(", "1.0", "-", "a", "[", "i", "]", ")", ".", "sqrt", "(", ")", "\n", "x", "[", ":", ",", "(", "mask", "!=", "1.", ")", "]", "=", "x_", "[", ":", ",", "(", "mask", "!=", "1.", ")", "]", "\n", "# added intermediate step vis", "\n", "if", "(", "i", "-", "99", ")", "%", "100", "==", "0", ":", "\n", "                        ", "imshow", "(", "x", ",", "title", "=", "\"Iteration {}, t={}\"", ".", "format", "(", "it", ",", "i", ")", ")", "\n", "", "progress_bar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "x0", "[", ":", ",", "(", "mask", "!=", "1.", ")", "]", "=", "x", "[", ":", ",", "(", "mask", "!=", "1.", ")", "]", "\n", "imshow", "(", "x", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.__init__": [[5, 8], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mu", "=", "0.999", ")", ":", "\n", "        ", "self", ".", "mu", "=", "mu", "\n", "self", ".", "shadow", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.register": [[9, 15], ["isinstance", "module.named_parameters", "param.data.clone"], "methods", ["None"], ["", "def", "register", "(", "self", ",", "module", ")", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "module", "=", "module", ".", "module", "\n", "", "for", "name", ",", "param", "in", "module", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "param", ".", "requires_grad", ":", "\n", "                ", "self", ".", "shadow", "[", "name", "]", "=", "param", ".", "data", ".", "clone", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.update": [[16, 23], ["isinstance", "module.named_parameters"], "methods", ["None"], ["", "", "", "def", "update", "(", "self", ",", "module", ")", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "module", "=", "module", ".", "module", "\n", "", "for", "name", ",", "param", "in", "module", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "param", ".", "requires_grad", ":", "\n", "                ", "self", ".", "shadow", "[", "name", "]", ".", "data", "=", "(", "\n", "1.", "-", "self", ".", "mu", ")", "*", "param", ".", "data", "+", "self", ".", "mu", "*", "self", ".", "shadow", "[", "name", "]", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.ema": [[24, 30], ["isinstance", "module.named_parameters", "param.data.copy_"], "methods", ["None"], ["", "", "", "def", "ema", "(", "self", ",", "module", ")", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "module", "=", "module", ".", "module", "\n", "", "for", "name", ",", "param", "in", "module", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "param", ".", "requires_grad", ":", "\n", "                ", "param", ".", "data", ".", "copy_", "(", "self", ".", "shadow", "[", "name", "]", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.ema_copy": [[31, 44], ["isinstance", "ema.EMAHelper.ema", "torch.DataParallel.load_state_dict", "torch.DataParallel", "torch.DataParallel.load_state_dict", "inner_module.state_dict", "module.state_dict", "type", "type"], "methods", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.ema", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.load_state_dict", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.load_state_dict", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.state_dict", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.state_dict"], ["", "", "", "def", "ema_copy", "(", "self", ",", "module", ")", ":", "\n", "        ", "if", "isinstance", "(", "module", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "inner_module", "=", "module", ".", "module", "\n", "module_copy", "=", "type", "(", "inner_module", ")", "(", "\n", "inner_module", ".", "config", ")", ".", "to", "(", "inner_module", ".", "config", ".", "device", ")", "\n", "module_copy", ".", "load_state_dict", "(", "inner_module", ".", "state_dict", "(", ")", ")", "\n", "module_copy", "=", "nn", ".", "DataParallel", "(", "module_copy", ")", "\n", "", "else", ":", "\n", "            ", "module_copy", "=", "type", "(", "module", ")", "(", "module", ".", "config", ")", ".", "to", "(", "module", ".", "config", ".", "device", ")", "\n", "module_copy", ".", "load_state_dict", "(", "module", ".", "state_dict", "(", ")", ")", "\n", "# module_copy = copy.deepcopy(module)", "\n", "", "self", ".", "ema", "(", "module_copy", ")", "\n", "return", "module_copy", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.state_dict": [[45, 47], ["None"], "methods", ["None"], ["", "def", "state_dict", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "shadow", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.load_state_dict": [[48, 50], ["None"], "methods", ["None"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ")", ":", "\n", "        ", "self", ".", "shadow", "=", "state_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Upsample.__init__": [[37, 46], ["torch.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.Diffusion.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "with_conv", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "with_conv", "=", "with_conv", "\n", "if", "self", ".", "with_conv", ":", "\n", "            ", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "in_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Upsample.forward": [[47, 53], ["torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "diffusion.Upsample.conv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "\n", "x", ",", "scale_factor", "=", "2.0", ",", "mode", "=", "\"nearest\"", ")", "\n", "if", "self", ".", "with_conv", ":", "\n", "            ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Downsample.__init__": [[56, 66], ["torch.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.Diffusion.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "with_conv", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "with_conv", "=", "with_conv", "\n", "if", "self", ".", "with_conv", ":", "\n", "# no asymmetric padding in torch conv, must do it ourselves", "\n", "            ", "self", ".", "conv", "=", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "in_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Downsample.forward": [[67, 75], ["torch.nn.functional.pad", "torch.nn.functional.pad", "torch.nn.functional.pad", "torch.nn.functional.pad", "diffusion.Downsample.conv", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool2d"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "with_conv", ":", "\n", "            ", "pad", "=", "(", "0", ",", "1", ",", "0", ",", "1", ")", "\n", "x", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "x", ",", "pad", ",", "mode", "=", "\"constant\"", ",", "value", "=", "0", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "torch", ".", "nn", ".", "functional", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.ResnetBlock.__init__": [[78, 114], ["torch.Module.__init__", "diffusion.Normalize", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "diffusion.Normalize", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.Diffusion.__init__", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Normalize", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Normalize"], ["    ", "def", "__init__", "(", "self", ",", "*", ",", "in_channels", ",", "out_channels", "=", "None", ",", "conv_shortcut", "=", "False", ",", "\n", "dropout", ",", "temb_channels", "=", "512", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "out_channels", "=", "in_channels", "if", "out_channels", "is", "None", "else", "out_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "use_conv_shortcut", "=", "conv_shortcut", "\n", "\n", "self", ".", "norm1", "=", "Normalize", "(", "in_channels", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "self", ".", "temb_proj", "=", "torch", ".", "nn", ".", "Linear", "(", "temb_channels", ",", "\n", "out_channels", ")", "\n", "self", ".", "norm2", "=", "Normalize", "(", "out_channels", ")", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv2d", "(", "out_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "if", "self", ".", "in_channels", "!=", "self", ".", "out_channels", ":", "\n", "            ", "if", "self", ".", "use_conv_shortcut", ":", "\n", "                ", "self", ".", "conv_shortcut", "=", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "nin_shortcut", "=", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.ResnetBlock.forward": [[115, 135], ["diffusion.ResnetBlock.norm1", "diffusion.nonlinearity", "diffusion.ResnetBlock.conv1", "diffusion.ResnetBlock.norm2", "diffusion.nonlinearity", "diffusion.ResnetBlock.dropout", "diffusion.ResnetBlock.conv2", "diffusion.ResnetBlock.temb_proj", "diffusion.ResnetBlock.conv_shortcut", "diffusion.ResnetBlock.nin_shortcut", "diffusion.nonlinearity"], "methods", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.nonlinearity", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.nonlinearity", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.nonlinearity"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "temb", ")", ":", "\n", "        ", "h", "=", "x", "\n", "h", "=", "self", ".", "norm1", "(", "h", ")", "\n", "h", "=", "nonlinearity", "(", "h", ")", "\n", "h", "=", "self", ".", "conv1", "(", "h", ")", "\n", "\n", "h", "=", "h", "+", "self", ".", "temb_proj", "(", "nonlinearity", "(", "temb", ")", ")", "[", ":", ",", ":", ",", "None", ",", "None", "]", "\n", "\n", "h", "=", "self", ".", "norm2", "(", "h", ")", "\n", "h", "=", "nonlinearity", "(", "h", ")", "\n", "h", "=", "self", ".", "dropout", "(", "h", ")", "\n", "h", "=", "self", ".", "conv2", "(", "h", ")", "\n", "\n", "if", "self", ".", "in_channels", "!=", "self", ".", "out_channels", ":", "\n", "            ", "if", "self", ".", "use_conv_shortcut", ":", "\n", "                ", "x", "=", "self", ".", "conv_shortcut", "(", "x", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "self", ".", "nin_shortcut", "(", "x", ")", "\n", "\n", "", "", "return", "x", "+", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.AttnBlock.__init__": [[138, 163], ["torch.Module.__init__", "diffusion.Normalize", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.Diffusion.__init__", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Normalize"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "norm", "=", "Normalize", "(", "in_channels", ")", "\n", "self", ".", "q", "=", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "in_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "k", "=", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "in_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "v", "=", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "in_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "self", ".", "proj_out", "=", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "in_channels", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.AttnBlock.forward": [[164, 190], ["diffusion.AttnBlock.norm", "diffusion.AttnBlock.q", "diffusion.AttnBlock.k", "diffusion.AttnBlock.v", "q.permute.permute.reshape", "q.permute.permute.permute", "k.reshape.reshape.reshape", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "v.reshape.reshape.reshape", "w_.permute.permute.permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "diffusion.AttnBlock.reshape", "diffusion.AttnBlock.proj_out", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h_", "=", "x", "\n", "h_", "=", "self", ".", "norm", "(", "h_", ")", "\n", "q", "=", "self", ".", "q", "(", "h_", ")", "\n", "k", "=", "self", ".", "k", "(", "h_", ")", "\n", "v", "=", "self", ".", "v", "(", "h_", ")", "\n", "\n", "# compute attention", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "q", ".", "shape", "\n", "q", "=", "q", ".", "reshape", "(", "b", ",", "c", ",", "h", "*", "w", ")", "\n", "q", "=", "q", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "# b,hw,c", "\n", "k", "=", "k", ".", "reshape", "(", "b", ",", "c", ",", "h", "*", "w", ")", "# b,c,hw", "\n", "w_", "=", "torch", ".", "bmm", "(", "q", ",", "k", ")", "# b,hw,hw    w[b,i,j]=sum_c q[b,i,c]k[b,c,j]", "\n", "w_", "=", "w_", "*", "(", "int", "(", "c", ")", "**", "(", "-", "0.5", ")", ")", "\n", "w_", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "w_", ",", "dim", "=", "2", ")", "\n", "\n", "# attend to values", "\n", "v", "=", "v", ".", "reshape", "(", "b", ",", "c", ",", "h", "*", "w", ")", "\n", "w_", "=", "w_", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "# b,hw,hw (first hw of k, second of q)", "\n", "# b, c,hw (hw of q) h_[b,c,j] = sum_i v[b,c,i] w_[b,i,j]", "\n", "h_", "=", "torch", ".", "bmm", "(", "v", ",", "w_", ")", "\n", "h_", "=", "h_", ".", "reshape", "(", "b", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "h_", "=", "self", ".", "proj_out", "(", "h_", ")", "\n", "\n", "return", "x", "+", "h_", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Model.__init__": [[193, 296], ["torch.Module.__init__", "len", "torch.Module", "torch.Module", "torch.ModuleList", "torch.ModuleList", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.ModuleList", "torch.ModuleList", "range", "torch.Module", "torch.Module", "diffusion.ResnetBlock", "diffusion.AttnBlock", "diffusion.ResnetBlock", "torch.ModuleList", "torch.ModuleList", "reversed", "diffusion.Normalize", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "tuple", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Module", "torch.Module", "diffusion.Model.down.append", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Module", "torch.Module", "diffusion.Model.up.insert", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.ModuleList.append", "diffusion.Downsample", "torch.ModuleList.append", "diffusion.Upsample", "diffusion.ResnetBlock", "torch.ModuleList.append", "diffusion.ResnetBlock", "torch.ModuleList.append", "diffusion.AttnBlock", "diffusion.AttnBlock"], "methods", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.Diffusion.__init__", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Normalize"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "ch", ",", "out_ch", ",", "ch_mult", "=", "config", ".", "model", ".", "ch", ",", "config", ".", "model", ".", "out_ch", ",", "tuple", "(", "config", ".", "model", ".", "ch_mult", ")", "\n", "num_res_blocks", "=", "config", ".", "model", ".", "num_res_blocks", "\n", "attn_resolutions", "=", "config", ".", "model", ".", "attn_resolutions", "\n", "dropout", "=", "config", ".", "model", ".", "dropout", "\n", "in_channels", "=", "config", ".", "model", ".", "in_channels", "\n", "resolution", "=", "config", ".", "data", ".", "image_size", "\n", "resamp_with_conv", "=", "config", ".", "model", ".", "resamp_with_conv", "\n", "\n", "self", ".", "ch", "=", "ch", "\n", "self", ".", "temb_ch", "=", "self", ".", "ch", "*", "4", "\n", "self", ".", "num_resolutions", "=", "len", "(", "ch_mult", ")", "\n", "self", ".", "num_res_blocks", "=", "num_res_blocks", "\n", "self", ".", "resolution", "=", "resolution", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "# timestep embedding", "\n", "self", ".", "temb", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "temb", ".", "dense", "=", "nn", ".", "ModuleList", "(", "[", "\n", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "ch", ",", "\n", "self", ".", "temb_ch", ")", ",", "\n", "torch", ".", "nn", ".", "Linear", "(", "self", ".", "temb_ch", ",", "\n", "self", ".", "temb_ch", ")", ",", "\n", "]", ")", "\n", "\n", "# downsampling", "\n", "self", ".", "conv_in", "=", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "\n", "self", ".", "ch", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "curr_res", "=", "resolution", "\n", "in_ch_mult", "=", "(", "1", ",", ")", "+", "ch_mult", "\n", "self", ".", "down", "=", "nn", ".", "ModuleList", "(", ")", "\n", "block_in", "=", "None", "\n", "for", "i_level", "in", "range", "(", "self", ".", "num_resolutions", ")", ":", "\n", "            ", "block", "=", "nn", ".", "ModuleList", "(", ")", "\n", "attn", "=", "nn", ".", "ModuleList", "(", ")", "\n", "block_in", "=", "ch", "*", "in_ch_mult", "[", "i_level", "]", "\n", "block_out", "=", "ch", "*", "ch_mult", "[", "i_level", "]", "\n", "for", "i_block", "in", "range", "(", "self", ".", "num_res_blocks", ")", ":", "\n", "                ", "block", ".", "append", "(", "ResnetBlock", "(", "in_channels", "=", "block_in", ",", "\n", "out_channels", "=", "block_out", ",", "\n", "temb_channels", "=", "self", ".", "temb_ch", ",", "\n", "dropout", "=", "dropout", ")", ")", "\n", "block_in", "=", "block_out", "\n", "if", "curr_res", "in", "attn_resolutions", ":", "\n", "                    ", "attn", ".", "append", "(", "AttnBlock", "(", "block_in", ")", ")", "\n", "", "", "down", "=", "nn", ".", "Module", "(", ")", "\n", "down", ".", "block", "=", "block", "\n", "down", ".", "attn", "=", "attn", "\n", "if", "i_level", "!=", "self", ".", "num_resolutions", "-", "1", ":", "\n", "                ", "down", ".", "downsample", "=", "Downsample", "(", "block_in", ",", "resamp_with_conv", ")", "\n", "curr_res", "=", "curr_res", "//", "2", "\n", "", "self", ".", "down", ".", "append", "(", "down", ")", "\n", "\n", "# middle", "\n", "", "self", ".", "mid", "=", "nn", ".", "Module", "(", ")", "\n", "self", ".", "mid", ".", "block_1", "=", "ResnetBlock", "(", "in_channels", "=", "block_in", ",", "\n", "out_channels", "=", "block_in", ",", "\n", "temb_channels", "=", "self", ".", "temb_ch", ",", "\n", "dropout", "=", "dropout", ")", "\n", "self", ".", "mid", ".", "attn_1", "=", "AttnBlock", "(", "block_in", ")", "\n", "self", ".", "mid", ".", "block_2", "=", "ResnetBlock", "(", "in_channels", "=", "block_in", ",", "\n", "out_channels", "=", "block_in", ",", "\n", "temb_channels", "=", "self", ".", "temb_ch", ",", "\n", "dropout", "=", "dropout", ")", "\n", "\n", "# upsampling", "\n", "self", ".", "up", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i_level", "in", "reversed", "(", "range", "(", "self", ".", "num_resolutions", ")", ")", ":", "\n", "            ", "block", "=", "nn", ".", "ModuleList", "(", ")", "\n", "attn", "=", "nn", ".", "ModuleList", "(", ")", "\n", "block_out", "=", "ch", "*", "ch_mult", "[", "i_level", "]", "\n", "skip_in", "=", "ch", "*", "ch_mult", "[", "i_level", "]", "\n", "for", "i_block", "in", "range", "(", "self", ".", "num_res_blocks", "+", "1", ")", ":", "\n", "                ", "if", "i_block", "==", "self", ".", "num_res_blocks", ":", "\n", "                    ", "skip_in", "=", "ch", "*", "in_ch_mult", "[", "i_level", "]", "\n", "", "block", ".", "append", "(", "ResnetBlock", "(", "in_channels", "=", "block_in", "+", "skip_in", ",", "\n", "out_channels", "=", "block_out", ",", "\n", "temb_channels", "=", "self", ".", "temb_ch", ",", "\n", "dropout", "=", "dropout", ")", ")", "\n", "block_in", "=", "block_out", "\n", "if", "curr_res", "in", "attn_resolutions", ":", "\n", "                    ", "attn", ".", "append", "(", "AttnBlock", "(", "block_in", ")", ")", "\n", "", "", "up", "=", "nn", ".", "Module", "(", ")", "\n", "up", ".", "block", "=", "block", "\n", "up", ".", "attn", "=", "attn", "\n", "if", "i_level", "!=", "0", ":", "\n", "                ", "up", ".", "upsample", "=", "Upsample", "(", "block_in", ",", "resamp_with_conv", ")", "\n", "curr_res", "=", "curr_res", "*", "2", "\n", "", "self", ".", "up", ".", "insert", "(", "0", ",", "up", ")", "# prepend to get consistent order", "\n", "\n", "# end", "\n", "", "self", ".", "norm_out", "=", "Normalize", "(", "block_in", ")", "\n", "self", ".", "conv_out", "=", "torch", ".", "nn", ".", "Conv2d", "(", "block_in", ",", "\n", "out_ch", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Model.forward": [[297, 338], ["diffusion.get_timestep_embedding", "diffusion.nonlinearity", "range", "diffusion.Model.mid.block_1", "diffusion.Model.mid.attn_1", "diffusion.Model.mid.block_2", "reversed", "diffusion.Model.norm_out", "diffusion.nonlinearity", "diffusion.Model.conv_out", "diffusion.Model.conv_in", "range", "range", "range", "hs.append", "hs.append", "diffusion.Model.up[].upsample", "len", "diffusion.Model.down[].downsample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "hs.pop"], "methods", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.get_timestep_embedding", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.nonlinearity", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.nonlinearity"], ["", "def", "forward", "(", "self", ",", "x", ",", "t", ")", ":", "\n", "        ", "assert", "x", ".", "shape", "[", "2", "]", "==", "x", ".", "shape", "[", "3", "]", "==", "self", ".", "resolution", "\n", "\n", "# timestep embedding", "\n", "temb", "=", "get_timestep_embedding", "(", "t", ",", "self", ".", "ch", ")", "\n", "temb", "=", "self", ".", "temb", ".", "dense", "[", "0", "]", "(", "temb", ")", "\n", "temb", "=", "nonlinearity", "(", "temb", ")", "\n", "temb", "=", "self", ".", "temb", ".", "dense", "[", "1", "]", "(", "temb", ")", "\n", "\n", "# downsampling", "\n", "hs", "=", "[", "self", ".", "conv_in", "(", "x", ")", "]", "\n", "for", "i_level", "in", "range", "(", "self", ".", "num_resolutions", ")", ":", "\n", "            ", "for", "i_block", "in", "range", "(", "self", ".", "num_res_blocks", ")", ":", "\n", "                ", "h", "=", "self", ".", "down", "[", "i_level", "]", ".", "block", "[", "i_block", "]", "(", "hs", "[", "-", "1", "]", ",", "temb", ")", "\n", "if", "len", "(", "self", ".", "down", "[", "i_level", "]", ".", "attn", ")", ">", "0", ":", "\n", "                    ", "h", "=", "self", ".", "down", "[", "i_level", "]", ".", "attn", "[", "i_block", "]", "(", "h", ")", "\n", "", "hs", ".", "append", "(", "h", ")", "\n", "", "if", "i_level", "!=", "self", ".", "num_resolutions", "-", "1", ":", "\n", "                ", "hs", ".", "append", "(", "self", ".", "down", "[", "i_level", "]", ".", "downsample", "(", "hs", "[", "-", "1", "]", ")", ")", "\n", "\n", "# middle", "\n", "", "", "h", "=", "hs", "[", "-", "1", "]", "\n", "h", "=", "self", ".", "mid", ".", "block_1", "(", "h", ",", "temb", ")", "\n", "h", "=", "self", ".", "mid", ".", "attn_1", "(", "h", ")", "\n", "h", "=", "self", ".", "mid", ".", "block_2", "(", "h", ",", "temb", ")", "\n", "\n", "# upsampling", "\n", "for", "i_level", "in", "reversed", "(", "range", "(", "self", ".", "num_resolutions", ")", ")", ":", "\n", "            ", "for", "i_block", "in", "range", "(", "self", ".", "num_res_blocks", "+", "1", ")", ":", "\n", "                ", "h", "=", "self", ".", "up", "[", "i_level", "]", ".", "block", "[", "i_block", "]", "(", "\n", "torch", ".", "cat", "(", "[", "h", ",", "hs", ".", "pop", "(", ")", "]", ",", "dim", "=", "1", ")", ",", "temb", ")", "\n", "if", "len", "(", "self", ".", "up", "[", "i_level", "]", ".", "attn", ")", ">", "0", ":", "\n", "                    ", "h", "=", "self", ".", "up", "[", "i_level", "]", ".", "attn", "[", "i_block", "]", "(", "h", ")", "\n", "", "", "if", "i_level", "!=", "0", ":", "\n", "                ", "h", "=", "self", ".", "up", "[", "i_level", "]", ".", "upsample", "(", "h", ")", "\n", "\n", "# end", "\n", "", "", "h", "=", "self", ".", "norm_out", "(", "h", ")", "\n", "h", "=", "nonlinearity", "(", "h", ")", "\n", "h", "=", "self", ".", "conv_out", "(", "h", ")", "\n", "return", "h", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.get_timestep_embedding": [[6, 25], ["torch.exp", "torch.exp", "torch.nn.functional.pad.to", "torch.cat", "torch.cat", "len", "math.log", "torch.nn.functional.pad", "torch.nn.functional.pad", "torch.arange", "torch.arange", "timesteps.float", "torch.sin", "torch.sin", "torch.cos", "torch.cos"], "function", ["None"], ["def", "get_timestep_embedding", "(", "timesteps", ",", "embedding_dim", ")", ":", "\n", "    ", "\"\"\"\n    This matches the implementation in Denoising Diffusion Probabilistic Models:\n    From Fairseq.\n    Build sinusoidal embeddings.\n    This matches the implementation in tensor2tensor, but differs slightly\n    from the description in Section 3.5 of \"Attention Is All You Need\".\n    \"\"\"", "\n", "assert", "len", "(", "timesteps", ".", "shape", ")", "==", "1", "\n", "\n", "half_dim", "=", "embedding_dim", "//", "2", "\n", "emb", "=", "math", ".", "log", "(", "10000", ")", "/", "(", "half_dim", "-", "1", ")", "\n", "emb", "=", "torch", ".", "exp", "(", "torch", ".", "arange", "(", "half_dim", ",", "dtype", "=", "torch", ".", "float32", ")", "*", "-", "emb", ")", "\n", "emb", "=", "emb", ".", "to", "(", "device", "=", "timesteps", ".", "device", ")", "\n", "emb", "=", "timesteps", ".", "float", "(", ")", "[", ":", ",", "None", "]", "*", "emb", "[", "None", ",", ":", "]", "\n", "emb", "=", "torch", ".", "cat", "(", "[", "torch", ".", "sin", "(", "emb", ")", ",", "torch", ".", "cos", "(", "emb", ")", "]", ",", "dim", "=", "1", ")", "\n", "if", "embedding_dim", "%", "2", "==", "1", ":", "# zero pad", "\n", "        ", "emb", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "emb", ",", "(", "0", ",", "1", ",", "0", ",", "0", ")", ")", "\n", "", "return", "emb", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.nonlinearity": [[27, 30], ["torch.sigmoid", "torch.sigmoid"], "function", ["None"], ["", "def", "nonlinearity", "(", "x", ")", ":", "\n", "# swish", "\n", "    ", "return", "x", "*", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.diffusion.Normalize": [[32, 34], ["torch.nn.GroupNorm", "torch.nn.GroupNorm"], "function", ["None"], ["", "def", "Normalize", "(", "in_channels", ")", ":", "\n", "    ", "return", "torch", ".", "nn", ".", "GroupNorm", "(", "num_groups", "=", "32", ",", "num_channels", "=", "in_channels", ",", "eps", "=", "1e-6", ",", "affine", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.Diffusion.__init__": [[54, 81], ["image_editing.get_beta_schedule", "torch.from_numpy().float().to", "numpy.cumprod", "numpy.append", "numpy.log", "torch.cuda.is_available", "torch.device", "torch.device", "torch.from_numpy().float", "numpy.append", "numpy.log", "numpy.maximum", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.get_beta_schedule"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "config", ",", "device", "=", "None", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "config", "=", "config", "\n", "if", "device", "is", "None", ":", "\n", "            ", "device", "=", "torch", ".", "device", "(", "\n", "\"cuda\"", ")", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "model_var_type", "=", "config", ".", "model", ".", "var_type", "\n", "betas", "=", "get_beta_schedule", "(", "\n", "beta_start", "=", "config", ".", "diffusion", ".", "beta_start", ",", "\n", "beta_end", "=", "config", ".", "diffusion", ".", "beta_end", ",", "\n", "num_diffusion_timesteps", "=", "config", ".", "diffusion", ".", "num_diffusion_timesteps", "\n", ")", "\n", "self", ".", "betas", "=", "torch", ".", "from_numpy", "(", "betas", ")", ".", "float", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "num_timesteps", "=", "betas", ".", "shape", "[", "0", "]", "\n", "\n", "alphas", "=", "1.0", "-", "betas", "\n", "alphas_cumprod", "=", "np", ".", "cumprod", "(", "alphas", ",", "axis", "=", "0", ")", "\n", "alphas_cumprod_prev", "=", "np", ".", "append", "(", "1.0", ",", "alphas_cumprod", "[", ":", "-", "1", "]", ")", "\n", "posterior_variance", "=", "betas", "*", "(", "1.0", "-", "alphas_cumprod_prev", ")", "/", "(", "1.0", "-", "alphas_cumprod", ")", "\n", "if", "self", ".", "model_var_type", "==", "\"fixedlarge\"", ":", "\n", "            ", "self", ".", "logvar", "=", "np", ".", "log", "(", "np", ".", "append", "(", "posterior_variance", "[", "1", "]", ",", "betas", "[", "1", ":", "]", ")", ")", "\n", "\n", "", "elif", "self", ".", "model_var_type", "==", "'fixedsmall'", ":", "\n", "            ", "self", ".", "logvar", "=", "np", ".", "log", "(", "np", ".", "maximum", "(", "posterior_variance", ",", "1e-20", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.Diffusion.image_editing_sample": [[82, 145], ["print", "models.diffusion.Model", "torch.hub.load_state_dict_from_url", "torch.nn.DataParallel.load_state_dict", "torch.nn.DataParallel.to", "torch.nn.DataParallel", "print", "download_process_data", "torch.nn.DataParallel.eval", "print", "torch.no_grad", "torch.load", "mask.to.to.to", "img.repeat.repeat.to", "img.repeat.repeat.unsqueeze", "img.repeat.repeat.repeat", "torchvision.save_image", "range", "os.path.join", "torch.randn_like", "torchvision.save_image", "torch.save", "torchvision.save_image", "os.path.join", "tqdm.tqdm.tqdm", "reversed", "os.path.join", "os.path.join", "a[].sqrt", "range", "image_editing.image_editing_denoising_step_flexible_mask", "progress_bar.update", "torchvision.save_image", "a[].sqrt", "os.path.join", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.load_state_dict", "home.repos.pwc.inspect_result.ermongroup_SDEdit.functions.process_data.download_process_data", "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.image_editing_denoising_step_flexible_mask", "home.repos.pwc.inspect_result.ermongroup_SDEdit.models.ema.EMAHelper.update"], ["", "", "def", "image_editing_sample", "(", "self", ")", ":", "\n", "        ", "print", "(", "\"Loading model\"", ")", "\n", "if", "self", ".", "config", ".", "data", ".", "dataset", "==", "\"LSUN\"", ":", "\n", "            ", "if", "self", ".", "config", ".", "data", ".", "category", "==", "\"bedroom\"", ":", "\n", "                ", "url", "=", "\"https://image-editing-test-12345.s3-us-west-2.amazonaws.com/checkpoints/bedroom.ckpt\"", "\n", "", "elif", "self", ".", "config", ".", "data", ".", "category", "==", "\"church_outdoor\"", ":", "\n", "                ", "url", "=", "\"https://image-editing-test-12345.s3-us-west-2.amazonaws.com/checkpoints/church_outdoor.ckpt\"", "\n", "", "", "elif", "self", ".", "config", ".", "data", ".", "dataset", "==", "\"CelebA_HQ\"", ":", "\n", "            ", "url", "=", "\"https://image-editing-test-12345.s3-us-west-2.amazonaws.com/checkpoints/celeba_hq.ckpt\"", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "model", "=", "Model", "(", "self", ".", "config", ")", "\n", "ckpt", "=", "torch", ".", "hub", ".", "load_state_dict_from_url", "(", "url", ",", "map_location", "=", "self", ".", "device", ")", "\n", "model", ".", "load_state_dict", "(", "ckpt", ")", "\n", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "print", "(", "\"Model loaded\"", ")", "\n", "ckpt_id", "=", "0", "\n", "\n", "download_process_data", "(", "path", "=", "\"colab_demo\"", ")", "\n", "n", "=", "self", ".", "config", ".", "sampling", ".", "batch_size", "\n", "model", ".", "eval", "(", ")", "\n", "print", "(", "\"Start sampling\"", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "name", "=", "self", ".", "args", ".", "npy_name", "\n", "[", "mask", ",", "img", "]", "=", "torch", ".", "load", "(", "\"colab_demo/{}.pth\"", ".", "format", "(", "name", ")", ")", "\n", "\n", "mask", "=", "mask", ".", "to", "(", "self", ".", "config", ".", "device", ")", "\n", "img", "=", "img", ".", "to", "(", "self", ".", "config", ".", "device", ")", "\n", "img", "=", "img", ".", "unsqueeze", "(", "dim", "=", "0", ")", "\n", "img", "=", "img", ".", "repeat", "(", "n", ",", "1", ",", "1", ",", "1", ")", "\n", "x0", "=", "img", "\n", "\n", "tvu", ".", "save_image", "(", "x0", ",", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "image_folder", ",", "f'original_input.png'", ")", ")", "\n", "x0", "=", "(", "x0", "-", "0.5", ")", "*", "2.", "\n", "\n", "for", "it", "in", "range", "(", "self", ".", "args", ".", "sample_step", ")", ":", "\n", "                ", "e", "=", "torch", ".", "randn_like", "(", "x0", ")", "\n", "total_noise_levels", "=", "self", ".", "args", ".", "t", "\n", "a", "=", "(", "1", "-", "self", ".", "betas", ")", ".", "cumprod", "(", "dim", "=", "0", ")", "\n", "x", "=", "x0", "*", "a", "[", "total_noise_levels", "-", "1", "]", ".", "sqrt", "(", ")", "+", "e", "*", "(", "1.0", "-", "a", "[", "total_noise_levels", "-", "1", "]", ")", ".", "sqrt", "(", ")", "\n", "tvu", ".", "save_image", "(", "(", "x", "+", "1", ")", "*", "0.5", ",", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "image_folder", ",", "f'init_{ckpt_id}.png'", ")", ")", "\n", "\n", "with", "tqdm", "(", "total", "=", "total_noise_levels", ",", "desc", "=", "\"Iteration {}\"", ".", "format", "(", "it", ")", ")", "as", "progress_bar", ":", "\n", "                    ", "for", "i", "in", "reversed", "(", "range", "(", "total_noise_levels", ")", ")", ":", "\n", "                        ", "t", "=", "(", "torch", ".", "ones", "(", "n", ")", "*", "i", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "x_", "=", "image_editing_denoising_step_flexible_mask", "(", "x", ",", "t", "=", "t", ",", "model", "=", "model", ",", "\n", "logvar", "=", "self", ".", "logvar", ",", "\n", "betas", "=", "self", ".", "betas", ")", "\n", "x", "=", "x0", "*", "a", "[", "i", "]", ".", "sqrt", "(", ")", "+", "e", "*", "(", "1.0", "-", "a", "[", "i", "]", ")", ".", "sqrt", "(", ")", "\n", "x", "[", ":", ",", "(", "mask", "!=", "1.", ")", "]", "=", "x_", "[", ":", ",", "(", "mask", "!=", "1.", ")", "]", "\n", "# added intermediate step vis", "\n", "if", "(", "i", "-", "99", ")", "%", "100", "==", "0", ":", "\n", "                            ", "tvu", ".", "save_image", "(", "(", "x", "+", "1", ")", "*", "0.5", ",", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "image_folder", ",", "\n", "f'noise_t_{i}_{it}.png'", ")", ")", "\n", "", "progress_bar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "x0", "[", ":", ",", "(", "mask", "!=", "1.", ")", "]", "=", "x", "[", ":", ",", "(", "mask", "!=", "1.", ")", "]", "\n", "torch", ".", "save", "(", "x", ",", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "image_folder", ",", "\n", "f'samples_{it}.pth'", ")", ")", "\n", "tvu", ".", "save_image", "(", "(", "x", "+", "1", ")", "*", "0.5", ",", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "image_folder", ",", "\n", "f'samples_{it}.png'", ")", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.get_beta_schedule": [[12, 17], ["numpy.linspace"], "function", ["None"], ["def", "get_beta_schedule", "(", "*", ",", "beta_start", ",", "beta_end", ",", "num_diffusion_timesteps", ")", ":", "\n", "    ", "betas", "=", "np", ".", "linspace", "(", "beta_start", ",", "beta_end", ",", "\n", "num_diffusion_timesteps", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "assert", "betas", ".", "shape", "==", "(", "num_diffusion_timesteps", ",", ")", "\n", "return", "betas", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.extract": [[19, 28], ["torch.gather", "out.reshape.reshape", "torch.tensor", "t.long", "len"], "function", ["None"], ["", "def", "extract", "(", "a", ",", "t", ",", "x_shape", ")", ":", "\n", "    ", "\"\"\"Extract coefficients from a based on t and reshape to make it\n    broadcastable with x_shape.\"\"\"", "\n", "bs", ",", "=", "t", ".", "shape", "\n", "assert", "x_shape", "[", "0", "]", "==", "bs", "\n", "out", "=", "torch", ".", "gather", "(", "torch", ".", "tensor", "(", "a", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "t", ".", "device", ")", ",", "0", ",", "t", ".", "long", "(", ")", ")", "\n", "assert", "out", ".", "shape", "==", "(", "bs", ",", ")", "\n", "out", "=", "out", ".", "reshape", "(", "(", "bs", ",", ")", "+", "(", "1", ",", ")", "*", "(", "len", "(", "x_shape", ")", "-", "1", ")", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.image_editing_denoising_step_flexible_mask": [[30, 51], ["alphas.cumprod", "model", "image_editing.extract", "torch.randn_like", "mask.reshape.reshape", "sample.float.float", "torch.sqrt", "image_editing.extract", "torch.sqrt", "image_editing.extract", "torch.exp", "len"], "function", ["home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.extract", "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.extract", "home.repos.pwc.inspect_result.ermongroup_SDEdit.runners.image_editing.extract"], ["", "def", "image_editing_denoising_step_flexible_mask", "(", "x", ",", "t", ",", "*", ",", "\n", "model", ",", "\n", "logvar", ",", "\n", "betas", ")", ":", "\n", "    ", "\"\"\"\n    Sample from p(x_{t-1} | x_t)\n    \"\"\"", "\n", "alphas", "=", "1.0", "-", "betas", "\n", "alphas_cumprod", "=", "alphas", ".", "cumprod", "(", "dim", "=", "0", ")", "\n", "\n", "model_output", "=", "model", "(", "x", ",", "t", ")", "\n", "weighted_score", "=", "betas", "/", "torch", ".", "sqrt", "(", "1", "-", "alphas_cumprod", ")", "\n", "mean", "=", "extract", "(", "1", "/", "torch", ".", "sqrt", "(", "alphas", ")", ",", "t", ",", "x", ".", "shape", ")", "*", "(", "x", "-", "extract", "(", "weighted_score", ",", "t", ",", "x", ".", "shape", ")", "*", "model_output", ")", "\n", "\n", "logvar", "=", "extract", "(", "logvar", ",", "t", ",", "x", ".", "shape", ")", "\n", "noise", "=", "torch", ".", "randn_like", "(", "x", ")", "\n", "mask", "=", "1", "-", "(", "t", "==", "0", ")", ".", "float", "(", ")", "\n", "mask", "=", "mask", ".", "reshape", "(", "(", "x", ".", "shape", "[", "0", "]", ",", ")", "+", "(", "1", ",", ")", "*", "(", "len", "(", "x", ".", "shape", ")", "-", "1", ")", ")", "\n", "sample", "=", "mean", "+", "mask", "*", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "*", "noise", "\n", "sample", "=", "sample", ".", "float", "(", ")", "\n", "return", "sample", "\n", "\n"]]}