{"home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.main.flow": [[37, 59], ["trainer.fit_generator", "aux_data_provider.get_full_data_generator", "data_provider.get_training_data_generator", "data_provider.get_testing_data_generator"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.PytorchModelBase.fit_generator", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.get_full_data_generator", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.get_training_data_generator", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.get_testing_data_generator"], ["def", "flow", "(", "\n", "data_provider", ",", "\n", "auxiliary_data_providers", ",", "\n", "auxiliary_data_provider_ids", ",", "\n", "trainer", ":", "PytorchTrainer", ",", "\n", "fit_hyper_parameters", "=", "None", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "    ", "if", "fit_hyper_parameters", "is", "None", ":", "\n", "        ", "fit_hyper_parameters", "=", "{", "}", "\n", "\n", "", "auxiliary_data_generators", "=", "[", "\n", "aux_data_provider", ".", "get_full_data_generator", "(", "**", "kwargs", ")", "\n", "for", "aux_data_provider", "in", "auxiliary_data_providers", "\n", "]", "\n", "trainer", ".", "fit_generator", "(", "\n", "training_data_generator", "=", "data_provider", ".", "get_training_data_generator", "(", "**", "kwargs", ")", ",", "\n", "validation_data_generator", "=", "data_provider", ".", "get_testing_data_generator", "(", "**", "kwargs", ")", ",", "\n", "auxiliary_data_generators", "=", "auxiliary_data_generators", ",", "\n", "auxiliary_data_provider_ids", "=", "auxiliary_data_provider_ids", ",", "\n", "metric", "=", "data_provider", ".", "metric", ",", "\n", "**", "fit_hyper_parameters", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.main.main": [[62, 122], ["datetime.datetime.now().strftime", "os.mkdir", "os.environ.get", "print", "data.data_providers.DataProviderHub", "get_data_provider", "get_model", "optimizers.OptimizerFactory", "optimizers.OptimizerFactory.", "trainers.pytorch_trainer.PytorchTrainer", "main.flow", "experiment.log_parameters", "os.path.basename", "utils.parse_exp_id", "os.path.join", "os.environ.get", "get_data_provider", "auxiliary_data_providers.append", "auxiliary_data_formats.append", "vars", "os.path.normpath", "datetime.datetime.now", "os.environ.get", "get_model.parameters", "len", "len", "vars"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.predict.flow", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.parse_exp_id"], ["", "def", "main", "(", ")", ":", "\n", "    ", "if", "args", ".", "do_comet", ":", "\n", "        ", "experiment", ".", "log_parameters", "(", "vars", "(", "args", ")", ")", "\n", "\n", "", "if", "args", ".", "checkpoint_dir", "is", "not", "None", ":", "\n", "        ", "folder_name", "=", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "normpath", "(", "args", ".", "checkpoint_dir", ")", ")", "\n", "model_id", ",", "data_provider_id", ",", "time_stamp", "=", "parse_exp_id", "(", "folder_name", ")", "\n", "args", ".", "model_id", ",", "args", ".", "data_provider_id", "=", "model_id", ",", "data_provider_id", "\n", "\n", "", "time_stamp", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", "\n", "os", ".", "environ", "[", "'EXP_ID'", "]", "=", "f'{args.model_id}_on_{args.data_provider_id}_{time_stamp}'", "\n", "os", ".", "mkdir", "(", "os", ".", "path", ".", "join", "(", "RESULT_DIR", ",", "os", ".", "environ", ".", "get", "(", "'EXP_ID'", ")", ")", ")", "\n", "args", ".", "exp_id", "=", "os", ".", "environ", ".", "get", "(", "'EXP_ID'", ")", "\n", "print", "(", "'EXP_ID:'", ",", "os", ".", "environ", ".", "get", "(", "'EXP_ID'", ")", ")", "\n", "\n", "data_provider_hub", "=", "DataProviderHub", "(", ")", "\n", "get_data_provider", ",", "data_provider_parameters", "=", "data_provider_hub", "[", "args", ".", "data_provider_id", "]", "\n", "data_provider", "=", "get_data_provider", "(", "data_provider_parameters", ")", "\n", "\n", "auxiliary_data_providers", "=", "[", "]", "\n", "auxiliary_data_formats", "=", "[", "]", "\n", "for", "data_provider_id", "in", "args", ".", "auxiliary_data_provider_ids", ":", "\n", "        ", "get_data_provider", ",", "data_provider_parameters", "=", "data_provider_hub", "[", "data_provider_id", "]", "\n", "aux_data_provider", "=", "get_data_provider", "(", "data_provider_parameters", ")", "\n", "auxiliary_data_providers", ".", "append", "(", "aux_data_provider", ")", "\n", "auxiliary_data_formats", ".", "append", "(", "aux_data_provider", ".", "data_format", ")", "\n", "\n", "", "get_model", ",", "fit_hyper_parameters", "=", "ModelHub", "[", "args", ".", "model_id", "]", "\n", "model", "=", "get_model", "(", "\n", "data_format", "=", "data_provider", ".", "data_format", ",", "\n", "loss_function_id", "=", "args", ".", "loss_function_id", ",", "\n", "clip_grad", "=", "args", ".", "clip_grad", ",", "\n", "optim_batch_steps", "=", "args", ".", "optim_batch_steps", ",", "\n", "auxiliary_data_formats", "=", "auxiliary_data_formats", ",", "\n", ")", "\n", "\n", "optimizer_factory", "=", "OptimizerFactory", "(", ")", "\n", "optimizer", ",", "scheduler", "=", "optimizer_factory", "(", "\n", "model_parameters", "=", "model", ".", "parameters", "(", ")", ",", "\n", "dataset_size", "=", "len", "(", "data_provider", ")", ",", "\n", "optimizer_type", "=", "args", ".", "optimizer_type", ",", "\n", "lr", "=", "args", ".", "lr", ",", "\n", "epoch_milestones", "=", "args", ".", "epoch_milestones", ",", "\n", "gamma", "=", "args", ".", "gamma", ",", "\n", ")", "\n", "trainer", "=", "PytorchTrainer", "(", "\n", "model", "=", "model", ",", "\n", "dataset_size", "=", "len", "(", "data_provider", ")", ",", "\n", "comet_experiment", "=", "experiment", ",", "\n", "profile", "=", "args", ".", "profile", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "scheduler", "=", "scheduler", ",", "\n", ")", "\n", "flow", "(", "\n", "data_provider", "=", "data_provider", ",", "\n", "auxiliary_data_providers", "=", "auxiliary_data_providers", ",", "\n", "trainer", "=", "trainer", ",", "\n", "fit_hyper_parameters", "=", "fit_hyper_parameters", ",", "\n", "**", "vars", "(", "args", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.predict.flow": [[19, 50], ["trainer.predict_on_generator", "utils.highlight_print", "print", "models.utils.summarize_logs", "utils.highlight_print", "get_data_generator_fn", "predict.categorize_by_diagnosis", "categorize_by_diagnosis.keys", "get_data_generator_fn", "os.path.join", "trainer.predict_on_generator.keys", "print", "models.utils.summarize_logs"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer.predict_on_generator", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.highlight_print", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.summarize_logs", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.highlight_print", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.predict.categorize_by_diagnosis", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.summarize_logs"], ["def", "flow", "(", "\n", "data_provider", ",", "\n", "trainer", ",", "\n", "args", ",", "\n", "fit_hyper_parameters", "=", "None", ",", "\n", ")", ":", "\n", "    ", "if", "fit_hyper_parameters", "is", "None", ":", "\n", "        ", "fit_hyper_parameters", "=", "{", "}", "\n", "\n", "", "get_data_generator_fns", "=", "{", "\n", "'full'", ":", "data_provider", ".", "get_full_data_generator", ",", "\n", "'test'", ":", "data_provider", ".", "get_testing_data_generator", ",", "\n", "}", "\n", "get_data_generator_fn", "=", "get_data_generator_fns", "[", "args", ".", "predict_mode", "]", "\n", "all_metric_dict", "=", "trainer", ".", "predict_on_generator", "(", "\n", "data_generator", "=", "get_data_generator_fn", "(", "random", "=", "False", ")", ",", "\n", "save_base_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "checkpoint_dir", ",", "f'{args.data_provider_id}'", ")", ",", "\n", "metric", "=", "data_provider", ".", "metric", ",", "\n", "save_volume", "=", "args", ".", "save_volume", ",", "\n", "**", "fit_hyper_parameters", ",", "\n", ")", "\n", "all_metric_list", "=", "[", "all_metric_dict", "[", "key", "]", "for", "key", "in", "all_metric_dict", ".", "keys", "(", ")", "]", "\n", "highlight_print", "(", "f'full average metric'", ")", "\n", "print", "(", "summarize_logs", "(", "all_metric_list", ")", ")", "\n", "\n", "if", "'diagnosis'", "in", "data_provider", ".", "data_format", ":", "\n", "        ", "highlight_print", "(", "'metric by class'", ")", "\n", "data_generator", "=", "get_data_generator_fn", "(", "random", "=", "False", ")", "\n", "metric_list_by_diagnosis", "=", "categorize_by_diagnosis", "(", "all_metric_dict", ",", "data_generator", ")", "\n", "for", "key", "in", "metric_list_by_diagnosis", ".", "keys", "(", ")", ":", "\n", "            ", "print", "(", "f'diagnosis: {key}, {summarize_logs(metric_list_by_diagnosis[key])}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.predict.categorize_by_diagnosis": [[52, 63], ["print", "tqdm.tqdm", "range", "data_generator", "categorized_dict[].append", "len", "len"], "function", ["None"], ["", "", "", "def", "categorize_by_diagnosis", "(", "all_metric_dict", ",", "data_generator", ")", "->", "dict", ":", "\n", "    ", "print", "(", "f'categorizing on {len(data_generator)} volumes...'", ")", "\n", "categorized_dict", "=", "{", "}", "\n", "for", "_", "in", "tqdm", "(", "range", "(", "len", "(", "data_generator", ")", ")", ")", ":", "\n", "        ", "batch_data", "=", "data_generator", "(", "batch_size", "=", "1", ")", "\n", "data_id", "=", "batch_data", "[", "'data_ids'", "]", "[", "0", "]", "\n", "diagnosis", "=", "batch_data", "[", "'diagnosis'", "]", "[", "0", "]", "\n", "if", "diagnosis", "not", "in", "categorized_dict", ":", "\n", "            ", "categorized_dict", "[", "diagnosis", "]", "=", "[", "]", "\n", "", "categorized_dict", "[", "diagnosis", "]", ".", "append", "(", "all_metric_dict", "[", "data_id", "]", ")", "\n", "", "return", "categorized_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.MetricBase.__init__": [[49, 66], ["ValueError", "ValueError", "ValueError"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "pred", ",", "tar", ")", ":", "\n", "        ", "if", "pred", ".", "shape", "!=", "tar", ".", "shape", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f\"pred.shape should be equal to tar.shape, \"", "\n", "f\"got pred = {pred.shape} and tar = {tar.shape}\"", ",", "\n", ")", "\n", "", "if", "pred", ".", "shape", "[", "1", "]", "<", "2", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f'pred.shape[1] (class_num) should be greater than 1, '", "\n", "f'got class_num = {pred.shape[1]}'", "\n", ")", "\n", "", "if", "pred", ".", "ndim", "!=", "5", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Input shape of Metric-Class should be (N, C, D, H, W), '", "\n", "f'got {pred.shape} instead.'", "\n", ")", "\n", "", "self", ".", "do_all_metrics", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.MetricBase.all_metrics": [[67, 73], ["metric_func", "results.items", "metrics.MetricBase.do_all_metrics.items", "print"], "methods", ["None"], ["", "def", "all_metrics", "(", "self", ",", "verbose", "=", "True", ")", ":", "\n", "        ", "results", "=", "{", "metric", ":", "metric_func", "(", ")", "for", "(", "metric", ",", "metric_func", ")", "in", "self", ".", "do_all_metrics", ".", "items", "(", ")", "}", "\n", "if", "verbose", ":", "\n", "            ", "for", "metric", ",", "result", "in", "results", ".", "items", "(", ")", ":", "\n", "                ", "print", "(", "f'{metric}: {result:.2f}'", ")", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.ClasswiseMetric.__init__": [[77, 106], ["utils.to_one_hot_label", "metrics.MetricBase.__init__", "metrics.hard_max", "functools.partial", "functools.partial", "metrics.ClasswiseMetric.metrics.items", "range"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.to_one_hot_label", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.hard_max"], ["    ", "def", "__init__", "(", "self", ",", "pred", ",", "tar", ")", ":", "\n", "        ", "self", ".", "class_num", "=", "pred", ".", "shape", "[", "1", "]", "# class_num includes background", "\n", "self", ".", "tar_ids", "=", "tar", "\n", "tar", "=", "to_one_hot_label", "(", "tar", ",", "self", ".", "class_num", ")", "\n", "super", "(", ")", ".", "__init__", "(", "pred", ",", "tar", ")", "\n", "\n", "self", ".", "prob_pred", "=", "pred", "\n", "self", ".", "pred", "=", "hard_max", "(", "pred", ")", "\n", "self", ".", "tar", "=", "tar", "\n", "\n", "self", ".", "metrics", "=", "{", "\n", "'soft_dice'", ":", "(", "soft_dice", ",", "self", ".", "prob_pred", ")", ",", "\n", "'hard_dice'", ":", "(", "medmetric", ".", "dc", ",", "self", ".", "pred", ")", ",", "\n", "'sensitivity'", ":", "(", "medmetric", ".", "sensitivity", ",", "self", ".", "pred", ")", ",", "\n", "'precision'", ":", "(", "medmetric", ".", "precision", ",", "self", ".", "pred", ")", ",", "\n", "}", "\n", "\n", "self", ".", "do_all_metrics", "=", "{", "\n", "**", "{", "\n", "f'{metric_name}_class{i}'", ":", "partial", "(", "\n", "volumewise_mean_score", ",", "\n", "score_fn", "=", "metric_fn", ",", "\n", "pred_batch", "=", "p", "[", ":", ",", "i", "]", ",", "\n", "tar_batch", "=", "self", ".", "tar", "[", ":", ",", "i", "]", ",", "\n", ")", "\n", "for", "metric_name", ",", "(", "metric_fn", ",", "p", ")", "in", "self", ".", "metrics", ".", "items", "(", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "class_num", ")", "\n", "}", ",", "\n", "'crossentropy'", ":", "partial", "(", "cross_entropy", ",", "self", ".", "prob_pred", ",", "self", ".", "tar_ids", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.ClasswiseMetric.all_metrics": [[108, 127], ["metrics.MetricBase.all_metrics", "super().all_metrics.items", "metrics.ClasswiseMetric.metrics.keys", "new_results.items", "metrics.ClasswiseMetric.metrics.keys", "metric_name.startswith", "print", "metrics.ClasswiseMetric.metrics.keys"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.StructSegHaNMetric.all_metrics"], ["", "def", "all_metrics", "(", "self", ",", "verbose", "=", "True", ")", ":", "\n", "        ", "results", "=", "super", "(", "ClasswiseMetric", ",", "self", ")", ".", "all_metrics", "(", "verbose", "=", "False", ")", "\n", "accum_scores", "=", "{", "score_name", ":", "0.", "for", "score_name", "in", "self", ".", "metrics", ".", "keys", "(", ")", "}", "\n", "\n", "for", "metric_name", ",", "score", "in", "results", ".", "items", "(", ")", ":", "\n", "            ", "for", "prefix", "in", "self", ".", "metrics", ".", "keys", "(", ")", ":", "\n", "                ", "if", "metric_name", ".", "startswith", "(", "prefix", ")", ":", "\n", "                    ", "accum_scores", "[", "prefix", "]", "+=", "score", "/", "(", "self", ".", "class_num", "-", "1", ")", "# minus 1 for background", "\n", "break", "\n", "\n", "", "", "", "new_results", "=", "{", "\n", "**", "results", ",", "\n", "**", "{", "f'{prefix}_overall'", ":", "accum_scores", "[", "prefix", "]", "for", "prefix", "in", "self", ".", "metrics", ".", "keys", "(", ")", "}", ",", "\n", "}", "\n", "\n", "if", "verbose", ":", "\n", "            ", "for", "metric", ",", "result", "in", "new_results", ".", "items", "(", ")", ":", "\n", "                ", "print", "(", "f'{metric}: {result:.2f}'", ")", "\n", "", "", "return", "new_results", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.BRATSMetric.__init__": [[130, 163], ["utils.to_one_hot_label", "metrics.MetricBase.__init__", "functools.partial", "metrics.BRATSMetric.metrics.items", "metrics.BRATSMetric.modes.items"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.to_one_hot_label", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "prob_pred", ",", "tar", ")", ":", "\n", "        ", "tar", "=", "to_one_hot_label", "(", "tar", ",", "prob_pred", ".", "shape", "[", "1", "]", ")", "\n", "super", "(", ")", ".", "__init__", "(", "prob_pred", ",", "tar", ")", "\n", "\n", "self", ".", "pred_complete", "=", "prob_pred", "[", ":", ",", "1", "]", "+", "prob_pred", "[", ":", ",", "2", "]", "+", "prob_pred", "[", ":", ",", "3", "]", "+", "prob_pred", "[", ":", ",", "4", "]", "\n", "self", ".", "pred_core", "=", "prob_pred", "[", ":", ",", "1", "]", "+", "prob_pred", "[", ":", ",", "3", "]", "+", "prob_pred", "[", ":", ",", "4", "]", "\n", "self", ".", "pred_enhancing", "=", "prob_pred", "[", ":", ",", "4", "]", "\n", "\n", "self", ".", "tar_complete", "=", "tar", "[", ":", ",", "1", "]", "+", "tar", "[", ":", ",", "2", "]", "+", "tar", "[", ":", ",", "3", "]", "+", "tar", "[", ":", ",", "4", "]", "\n", "self", ".", "tar_core", "=", "tar", "[", ":", ",", "1", "]", "+", "tar", "[", ":", ",", "3", "]", "+", "tar", "[", ":", ",", "4", "]", "\n", "self", ".", "tar_enhancing", "=", "tar", "[", ":", ",", "4", "]", "\n", "\n", "self", ".", "metrics", "=", "{", "\n", "'soft_dice'", ":", "soft_dice", ",", "\n", "'hard_dice'", ":", "medmetric", ".", "dc", ",", "\n", "'sensitivity'", ":", "medmetric", ".", "sensitivity", ",", "\n", "'precision'", ":", "medmetric", ".", "precision", ",", "\n", "}", "\n", "self", ".", "modes", "=", "{", "\n", "'complete'", ":", "(", "self", ".", "pred_complete", ",", "self", ".", "tar_complete", ")", ",", "\n", "'core'", ":", "(", "self", ".", "pred_core", ",", "self", ".", "tar_core", ")", ",", "\n", "'enhancing'", ":", "(", "self", ".", "pred_enhancing", ",", "self", ".", "tar_enhancing", ")", ",", "\n", "}", "\n", "self", ".", "do_all_metrics", "=", "{", "\n", "f'{metric_name}_{mode}'", ":", "partial", "(", "\n", "volumewise_mean_score", ",", "\n", "score_fn", "=", "metric_fn", ",", "\n", "pred_batch", "=", "p", ",", "\n", "tar_batch", "=", "t", ",", "\n", ")", "\n", "for", "metric_name", ",", "metric_fn", "in", "self", ".", "metrics", ".", "items", "(", ")", "\n", "for", "mode", ",", "(", "p", ",", "t", ")", "in", "self", ".", "modes", ".", "items", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.StructSegHaNMetric.__init__": [[193, 219], ["utils.to_one_hot_label", "metrics.MetricBase.__init__", "metrics.hard_max", "functools.partial", "functools.partial", "metrics.StructSegHaNMetric.metrics.items", "enumerate", "metrics.StructSegHaNMetric.class_weights.keys"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.to_one_hot_label", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.hard_max"], ["def", "__init__", "(", "self", ",", "pred", ",", "tar", ")", ":", "\n", "        ", "self", ".", "tar_ids", "=", "tar", "\n", "tar", "=", "to_one_hot_label", "(", "tar", ",", "pred", ".", "shape", "[", "1", "]", ")", "\n", "super", "(", ")", ".", "__init__", "(", "pred", ",", "tar", ")", "\n", "\n", "self", ".", "prob_pred", "=", "pred", "\n", "self", ".", "pred", "=", "hard_max", "(", "pred", ")", "\n", "self", ".", "tar", "=", "tar", "\n", "\n", "self", ".", "metrics", "=", "{", "\n", "'soft_dice'", ":", "(", "soft_dice", ",", "self", ".", "prob_pred", ")", ",", "\n", "'hard_dice'", ":", "(", "medmetric", ".", "dc", ",", "self", ".", "pred", ")", ",", "\n", "}", "\n", "self", ".", "do_all_metrics", "=", "{", "\n", "**", "{", "\n", "f'{metric_name}_{organ_name}'", ":", "partial", "(", "\n", "volumewise_mean_score", ",", "\n", "metric_fn", ",", "\n", "p", "[", ":", ",", "class_idx", "]", ",", "\n", "self", ".", "tar", "[", ":", ",", "class_idx", "]", ",", "\n", ")", "\n", "for", "metric_name", ",", "(", "metric_fn", ",", "p", ")", "in", "self", ".", "metrics", ".", "items", "(", ")", "\n", "for", "class_idx", ",", "organ_name", "in", "enumerate", "(", "self", ".", "class_weights", ".", "keys", "(", ")", ",", "1", ")", "\n", "}", ",", "\n", "'crossentropy'", ":", "partial", "(", "\n", "cross_entropy", ",", "self", ".", "prob_pred", ",", "self", ".", "tar_ids", ",", "\n", ")", ",", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.StructSegHaNMetric.all_metrics": [[222, 244], ["metrics.MetricBase.all_metrics", "sum", "super().all_metrics.items", "metrics.StructSegHaNMetric.class_weights.values", "metrics.StructSegHaNMetric.metrics.keys", "new_results.items", "metrics.StructSegHaNMetric.metrics.keys", "metric_name.startswith", "print", "metrics.StructSegHaNMetric.metrics.keys", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.StructSegHaNMetric.all_metrics"], ["", "def", "all_metrics", "(", "self", ",", "verbose", "=", "True", ")", ":", "\n", "        ", "results", "=", "super", "(", "StructSegHaNMetric", ",", "self", ")", ".", "all_metrics", "(", "verbose", "=", "False", ")", "\n", "total_class_weight", "=", "sum", "(", "self", ".", "class_weights", ".", "values", "(", ")", ")", "\n", "accum_scores", "=", "{", "score_name", ":", "0.", "for", "score_name", "in", "self", ".", "metrics", ".", "keys", "(", ")", "}", "\n", "\n", "for", "metric_name", ",", "score", "in", "results", ".", "items", "(", ")", ":", "\n", "            ", "for", "prefix", "in", "self", ".", "metrics", ".", "keys", "(", ")", ":", "\n", "                ", "if", "metric_name", ".", "startswith", "(", "prefix", ")", ":", "\n", "                    ", "stripped_metric_name", "=", "metric_name", "[", "len", "(", "prefix", ")", "+", "1", ":", "]", "\n", "accum_scores", "[", "prefix", "]", "+=", "score", "*", "self", ".", "class_weights", "[", "stripped_metric_name", "]", "/", "total_class_weight", "\n", "break", "\n", "\n", "", "", "", "new_results", "=", "{", "\n", "**", "results", ",", "\n", "**", "{", "f'{prefix}_overall'", ":", "accum_scores", "[", "prefix", "]", "for", "prefix", "in", "self", ".", "metrics", ".", "keys", "(", ")", "}", ",", "\n", "}", "\n", "\n", "if", "verbose", ":", "\n", "            ", "for", "metric", ",", "result", "in", "new_results", ".", "items", "(", ")", ":", "\n", "                ", "print", "(", "f'{metric}: {result:.2f}'", ")", "\n", "", "", "return", "new_results", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.hard_max": [[10, 14], ["numpy.argmax", "utils.to_one_hot_label"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.to_one_hot_label"], ["def", "hard_max", "(", "x", ")", ":", "\n", "    ", "index_x", "=", "np", ".", "argmax", "(", "x", ",", "axis", "=", "1", ")", "\n", "categorical_x", "=", "to_one_hot_label", "(", "index_x", ",", "class_num", "=", "x", ".", "shape", "[", "1", "]", ")", "\n", "return", "categorical_x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.soft_dice": [[16, 25], ["numpy.sum", "numpy.sum", "numpy.sum", "ValueError"], "function", ["None"], ["", "def", "soft_dice", "(", "prob_pred", ",", "tar", ")", ":", "\n", "    ", "if", "not", "(", "(", "tar", "==", "0", ")", "|", "(", "tar", "==", "1", ")", ")", ".", "all", "(", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'Target data should be binary.'", ")", "\n", "", "intersection", "=", "tar", "*", "prob_pred", "\n", "intersection", "=", "np", ".", "sum", "(", "intersection", ")", "\n", "m1", "=", "np", ".", "sum", "(", "prob_pred", "**", "2", ")", "\n", "m2", "=", "np", ".", "sum", "(", "tar", "**", "2", ")", "\n", "dice_loss", "=", "(", "2", "*", "intersection", "+", "epsilon", ")", "/", "(", "m1", "+", "m2", "+", "epsilon", ")", "\n", "return", "dice_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.cross_entropy": [[27, 41], ["numpy.take_along_axis", "numpy.mean", "models.loss_functions.utils.GetClassWeights", "numpy.log", "numpy.squeeze"], "function", ["None"], ["", "def", "cross_entropy", "(", "prob_pred", ",", "tar_ids", ")", ":", "\n", "    ", "class_num", "=", "prob_pred", ".", "shape", "[", "1", "]", "\n", "weights", "=", "GetClassWeights", "(", ")", "(", "tar_ids", ",", "class_num", "=", "class_num", ")", "\n", "weights", "/=", "class_num", "\n", "\n", "selected_pred", "=", "np", ".", "take_along_axis", "(", "\n", "prob_pred", ",", "# (N, C, ...)", "\n", "tar_ids", "[", ":", ",", "np", ".", "newaxis", "]", ",", "# (N, 1, ...)", "\n", "axis", "=", "1", ",", "\n", ")", "# (N, 1, ...)", "\n", "selected_weights", "=", "weights", "[", "tar_ids", "]", "# (N, ...)", "\n", "ce", "=", "-", "selected_weights", "*", "np", ".", "log", "(", "np", ".", "squeeze", "(", "selected_pred", ",", "axis", "=", "1", ")", "+", "epsilon", ")", "# (N, ...)", "\n", "ce", "=", "np", ".", "mean", "(", "ce", ")", "\n", "return", "ce", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.volumewise_mean_score": [[43, 45], ["numpy.mean", "score_fn", "zip"], "function", ["None"], ["", "def", "volumewise_mean_score", "(", "score_fn", ",", "pred_batch", ",", "tar_batch", ")", ":", "\n", "    ", "return", "np", ".", "mean", "(", "[", "score_fn", "(", "pred", ",", "tar", ")", "for", "pred", ",", "tar", "in", "zip", "(", "pred_batch", ",", "tar_batch", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.parser.brain_tumor_argparse": [[4, 19], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument_group", "parser.add_general_args", "argparse.ArgumentParser.add_argument_group", "parser.add_optimizing_args", "argparse.ArgumentParser.add_argument_group", "parser.add_training_args", "argparse.ArgumentParser.add_argument_group", "parser.add_prediction_args"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.parser.add_general_args", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.parser.add_optimizing_args", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.parser.add_training_args", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.parser.add_prediction_args"], ["def", "brain_tumor_argparse", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Brain Tumor Segmentation Experiment'", ")", "\n", "\n", "general_args_group", "=", "parser", ".", "add_argument_group", "(", "'General Arguments'", ")", "\n", "add_general_args", "(", "general_args_group", ")", "\n", "\n", "optimizing_args_group", "=", "parser", ".", "add_argument_group", "(", "'Optimizing Arguments'", ")", "\n", "add_optimizing_args", "(", "optimizing_args_group", ")", "\n", "\n", "training_args_group", "=", "parser", ".", "add_argument_group", "(", "'Training Arguments'", ")", "\n", "add_training_args", "(", "training_args_group", ")", "\n", "\n", "prediction_args_group", "=", "parser", ".", "add_argument_group", "(", "'Prediction Arguments'", ")", "\n", "add_prediction_args", "(", "prediction_args_group", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.parser.add_general_args": [[21, 92], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.set_defaults", "parser.set_defaults", "parser.set_defaults", "parser.set_defaults"], "function", ["None"], ["", "def", "add_general_args", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "\n", "'-m'", ",", "\n", "'--model_id'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'The model_id to be used.'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-d'", ",", "\n", "'--data_provider_id'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'The medical-image data provider.'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-ad'", ",", "\n", "'--auxiliary_data_provider_ids'", ",", "\n", "type", "=", "str", ",", "\n", "nargs", "=", "'+'", ",", "\n", "default", "=", "[", "]", ",", "\n", "help", "=", "'Extra data to train alongside with the main data.'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-grs'", ",", "\n", "'--global_random_seed'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'The global random seed. [5566]'", ",", "\n", "default", "=", "5566", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--comet'", ",", "\n", "dest", "=", "'do_comet'", ",", "\n", "action", "=", "'store_true'", ",", "\n", "help", "=", "'Use comet-ml to document the info.'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-cop'", ",", "\n", "'--comet_project'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'comet ml project name'", ",", "\n", "default", "=", "'braintumorbaba'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-cow'", ",", "\n", "'--comet_workspace'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'comet ml workspace name'", ",", "\n", "default", "=", "'raywu0123'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-async'", "\n", "'--async_load'", ",", "\n", "dest", "=", "'async_load'", ",", "\n", "action", "=", "'store_true'", ",", "\n", "help", "=", "'if True, use multiple processes to load data'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--profile'", ",", "\n", "dest", "=", "'profile'", ",", "\n", "action", "=", "'store_true'", ",", "\n", "help", "=", "'if True, activate the profiler and dump the log'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--preload'", ",", "\n", "dest", "=", "'preload'", ",", "\n", "action", "=", "'store_true'", ",", "\n", "help", "=", "'if True, preload the whole dataset before training'", "\n", ")", "\n", "parser", ".", "set_defaults", "(", "do_comet", "=", "False", ")", "\n", "parser", ".", "set_defaults", "(", "async_load", "=", "False", ")", "\n", "parser", ".", "set_defaults", "(", "profile", "=", "False", ")", "\n", "parser", ".", "set_defaults", "(", "preload", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.parser.add_training_args": [[94, 123], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.set_defaults"], "function", ["None"], ["", "def", "add_training_args", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "\n", "'-lid'", ",", "\n", "'--loss_function_id'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'crossentropy-log[my_dice]'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-cg'", ",", "\n", "'--clip_grad'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "0.5", ",", "\n", "help", "=", "'The gradient norm will be clipped by this param if it is greater than 0.'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-obs'", ",", "\n", "'--optim_batch_steps'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1", ",", "\n", "help", "=", "'Gradient accumulation for this many batches.'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-aug'", ",", "\n", "'--augmentation'", ",", "\n", "dest", "=", "'augmentation'", ",", "\n", "action", "=", "'store_true'", ",", "\n", "help", "=", "'if True, activate data augmentation while training'", ",", "\n", ")", "\n", "parser", ".", "set_defaults", "(", "augmentation", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.parser.add_optimizing_args": [[125, 150], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_optimizing_args", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "\n", "'-lr'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "1e-4", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-ot'", ",", "\n", "'--optimizer_type'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "'Adam'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'-mil'", ",", "\n", "'--epoch_milestones'", ",", "\n", "type", "=", "int", ",", "\n", "nargs", "=", "'+'", ",", "\n", "default", "=", "[", "50", ",", "70", "]", ",", "\n", "help", "=", "'learning rate scheduler milestone, unit: epoch'", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--gamma'", ",", "\n", "type", "=", "float", ",", "\n", "default", "=", "0.1", ",", "\n", "help", "=", "'learning rate scheduler decay rate'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.parser.add_prediction_args": [[153, 171], ["parser.add_argument", "parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_prediction_args", "(", "parser", ")", ":", "\n", "    ", "parser", ".", "add_argument", "(", "\n", "'--checkpoint_dir'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'checkpoint directory to load the model'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--predict_mode'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Choose to predict on full dataset or only 1/10, [full/test]'", ",", "\n", "default", "=", "'test'", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--save_volume'", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "[", "]", ",", "\n", "nargs", "=", "'+'", ",", "\n", "help", "=", "'Runs faster if not saving volumes. options: [hard / soft]'", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.highlight_print": [[9, 13], ["print", "print", "print"], "function", ["None"], ["def", "highlight_print", "(", "msg", ",", "highlight_len", "=", "30", ")", ":", "\n", "    ", "print", "(", "'#'", "*", "highlight_len", ")", "\n", "print", "(", "msg", ")", "\n", "print", "(", "'#'", "*", "highlight_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_2d_from_3d": [[15, 23], ["numpy.transpose", "np.transpose.reshape", "np.transpose.reshape"], "function", ["None"], ["", "def", "get_2d_from_3d", "(", "batch_volume", ")", ":", "\n", "    ", "assert", "(", "batch_volume", ".", "ndim", "==", "4", "or", "batch_volume", ".", "ndim", "==", "5", ")", "\n", "if", "batch_volume", ".", "ndim", "==", "5", ":", "\n", "        ", "batch_volume", "=", "np", ".", "transpose", "(", "batch_volume", ",", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ")", "\n", "batch_image", "=", "batch_volume", ".", "reshape", "(", "-", "1", ",", "*", "batch_volume", ".", "shape", "[", "-", "3", ":", "]", ")", "\n", "", "else", ":", "\n", "        ", "batch_image", "=", "batch_volume", ".", "reshape", "(", "-", "1", ",", "*", "batch_volume", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "", "return", "batch_image", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_3d_from_2d": [[25, 33], ["batch_image.reshape", "batch_image.reshape", "batch_volume.transpose.transpose"], "function", ["None"], ["", "def", "get_3d_from_2d", "(", "batch_image", ",", "data_depth", ")", ":", "\n", "    ", "assert", "(", "batch_image", ".", "ndim", "==", "3", "or", "batch_image", ".", "ndim", "==", "4", ")", "\n", "if", "batch_image", ".", "ndim", "==", "3", ":", "\n", "        ", "batch_volume", "=", "batch_image", ".", "reshape", "(", "-", "1", ",", "data_depth", ",", "*", "batch_image", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "", "else", ":", "\n", "        ", "batch_volume", "=", "batch_image", ".", "reshape", "(", "-", "1", ",", "data_depth", ",", "*", "batch_image", ".", "shape", "[", "-", "3", ":", "]", ")", "\n", "batch_volume", "=", "batch_volume", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", ",", "4", "]", ")", "\n", "", "return", "batch_volume", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.parse_exp_id": [[35, 41], ["exp_id_string.split", "splits[].split", "splits[].split"], "function", ["None"], ["", "def", "parse_exp_id", "(", "exp_id_string", ")", ":", "\n", "    ", "splits", "=", "exp_id_string", ".", "split", "(", "'_on_'", ")", "\n", "model_id", "=", "splits", "[", "0", "]", "\n", "data_id", "=", "'_'", ".", "join", "(", "splits", "[", "-", "1", "]", ".", "split", "(", "'_'", ")", "[", ":", "-", "1", "]", ")", "\n", "time_stamp", "=", "splits", "[", "-", "1", "]", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", "\n", "return", "model_id", ",", "data_id", ",", "time_stamp", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.match_kwargs": [[43, 49], ["kwargs.items", "inspect.getfullargspec"], "function", ["None"], ["", "def", "match_kwargs", "(", "func", ",", "**", "kwargs", ")", ":", "\n", "    ", "ret", "=", "{", "}", "\n", "for", "key", ",", "value", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "        ", "if", "key", "in", "inspect", ".", "getfullargspec", "(", "func", ")", "[", "0", "]", ":", "\n", "            ", "ret", "[", "key", "]", "=", "value", "\n", "", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.to_one_hot_label": [[51, 66], ["numpy.array", "y.ravel.ravel", "numpy.zeros", "numpy.reshape", "numpy.moveaxis", "tuple", "len", "numpy.max", "numpy.arange"], "function", ["None"], ["", "def", "to_one_hot_label", "(", "y", ",", "class_num", "=", "None", ",", "dtype", "=", "'float32'", ")", ":", "\n", "    ", "y", "=", "np", ".", "array", "(", "y", ",", "dtype", "=", "'int'", ")", "\n", "input_shape", "=", "y", ".", "shape", "\n", "if", "input_shape", "and", "input_shape", "[", "-", "1", "]", "==", "1", "and", "len", "(", "input_shape", ")", ">", "1", ":", "\n", "        ", "input_shape", "=", "tuple", "(", "input_shape", "[", ":", "-", "1", "]", ")", "\n", "", "y", "=", "y", ".", "ravel", "(", ")", "\n", "if", "not", "class_num", ":", "\n", "        ", "class_num", "=", "np", ".", "max", "(", "y", ")", "+", "1", "\n", "", "n", "=", "y", ".", "shape", "[", "0", "]", "\n", "categorical", "=", "np", ".", "zeros", "(", "(", "n", ",", "class_num", ")", ",", "dtype", "=", "dtype", ")", "\n", "categorical", "[", "np", ".", "arange", "(", "n", ")", ",", "y", "]", "=", "1", "\n", "output_shape", "=", "input_shape", "+", "(", "class_num", ",", ")", "\n", "categorical", "=", "np", ".", "reshape", "(", "categorical", ",", "output_shape", ")", "\n", "categorical", "=", "np", ".", "moveaxis", "(", "categorical", ",", "-", "1", ",", "1", ")", "\n", "return", "categorical", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.strip_file_extension": [[68, 70], ["file_path.strip().strip", "file_path.strip"], "function", ["None"], ["", "def", "strip_file_extension", "(", "file_path", ")", ":", "\n", "    ", "return", "file_path", ".", "strip", "(", "'.nii.gz'", ")", ".", "strip", "(", "'.npy'", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.RAdam.__init__": [[8, 12], ["dict", "torch.optim.optimizer.Optimizer.__init__", "range"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "lr", "=", "1e-3", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ",", "eps", "=", "1e-8", ",", "weight_decay", "=", "0", ")", ":", "\n", "        ", "defaults", "=", "dict", "(", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "eps", "=", "eps", ",", "weight_decay", "=", "weight_decay", ")", "\n", "self", ".", "buffer", "=", "[", "[", "None", ",", "None", ",", "None", "]", "for", "ind", "in", "range", "(", "10", ")", "]", "\n", "super", "(", "RAdam", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.RAdam.__setstate__": [[13, 15], ["super().__setstate__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.AdamW.__setstate__"], ["", "def", "__setstate__", "(", "self", ",", "state", ")", ":", "\n", "        ", "super", "(", "RAdam", ",", "self", ")", ".", "__setstate__", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.RAdam.step": [[16, 82], ["closure", "p.grad.data.float", "p.data.float", "exp_avg_sq.mul_().addcmul_", "exp_avg.mul_().add_", "p.data.copy_", "RuntimeError", "len", "torch.zeros_like", "torch.zeros_like", "state[].type_as", "state[].type_as", "p.data.float.add_", "exp_avg_sq.sqrt().add_", "p.data.float.addcdiv_", "p.data.float.add_", "exp_avg_sq.mul_", "exp_avg.mul_", "int", "exp_avg_sq.sqrt", "math.sqrt"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "\n", "        ", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", ".", "float", "(", ")", "\n", "if", "grad", ".", "is_sparse", ":", "\n", "                    ", "raise", "RuntimeError", "(", "'RAdam does not support sparse gradients'", ")", "\n", "\n", "", "p_data_fp32", "=", "p", ".", "data", ".", "float", "(", ")", "\n", "\n", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                    ", "state", "[", "'step'", "]", "=", "0", "\n", "state", "[", "'exp_avg'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "", "else", ":", "\n", "                    ", "state", "[", "'exp_avg'", "]", "=", "state", "[", "'exp_avg'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "state", "[", "'exp_avg_sq'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "\n", "", "exp_avg", ",", "exp_avg_sq", "=", "state", "[", "'exp_avg'", "]", ",", "state", "[", "'exp_avg_sq'", "]", "\n", "beta1", ",", "beta2", "=", "group", "[", "'betas'", "]", "\n", "\n", "exp_avg_sq", ".", "mul_", "(", "beta2", ")", ".", "addcmul_", "(", "1", "-", "beta2", ",", "grad", ",", "grad", ")", "\n", "exp_avg", ".", "mul_", "(", "beta1", ")", ".", "add_", "(", "1", "-", "beta1", ",", "grad", ")", "\n", "\n", "state", "[", "'step'", "]", "+=", "1", "\n", "buffered", "=", "self", ".", "buffer", "[", "int", "(", "state", "[", "'step'", "]", "%", "10", ")", "]", "\n", "if", "state", "[", "'step'", "]", "==", "buffered", "[", "0", "]", ":", "\n", "                    ", "N_sma", ",", "step_size", "=", "buffered", "[", "1", "]", ",", "buffered", "[", "2", "]", "\n", "", "else", ":", "\n", "                    ", "buffered", "[", "0", "]", "=", "state", "[", "'step'", "]", "\n", "beta2_t", "=", "beta2", "**", "state", "[", "'step'", "]", "\n", "N_sma_max", "=", "2", "/", "(", "1", "-", "beta2", ")", "-", "1", "\n", "N_sma", "=", "N_sma_max", "-", "2", "*", "state", "[", "'step'", "]", "*", "beta2_t", "/", "(", "1", "-", "beta2_t", ")", "\n", "buffered", "[", "1", "]", "=", "N_sma", "\n", "\n", "# more conservative since it's an approximated value", "\n", "if", "N_sma", ">=", "5", ":", "\n", "                        ", "step_size", "=", "group", "[", "'lr'", "]", "*", "math", ".", "sqrt", "(", "\n", "(", "1", "-", "beta2_t", ")", "*", "(", "N_sma", "-", "4", ")", "/", "(", "N_sma_max", "-", "4", ")", "*", "(", "N_sma", "-", "2", ")", "/", "N_sma", "*", "N_sma_max", "/", "(", "\n", "N_sma_max", "-", "2", ")", ")", "/", "(", "1", "-", "beta1", "**", "state", "[", "'step'", "]", ")", "\n", "", "else", ":", "\n", "                        ", "step_size", "=", "group", "[", "'lr'", "]", "/", "(", "1", "-", "beta1", "**", "state", "[", "'step'", "]", ")", "\n", "", "buffered", "[", "2", "]", "=", "step_size", "\n", "\n", "", "if", "group", "[", "'weight_decay'", "]", "!=", "0", ":", "\n", "                    ", "p_data_fp32", ".", "add_", "(", "-", "group", "[", "'weight_decay'", "]", "*", "group", "[", "'lr'", "]", ",", "p_data_fp32", ")", "\n", "\n", "# more conservative since it's an approximated value", "\n", "", "if", "N_sma", ">=", "5", ":", "\n", "                    ", "denom", "=", "exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "group", "[", "'eps'", "]", ")", "\n", "p_data_fp32", ".", "addcdiv_", "(", "-", "step_size", ",", "exp_avg", ",", "denom", ")", "\n", "", "else", ":", "\n", "                    ", "p_data_fp32", ".", "add_", "(", "-", "step_size", ",", "exp_avg", ")", "\n", "\n", "", "p", ".", "data", ".", "copy_", "(", "p_data_fp32", ")", "\n", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.PlainRAdam.__init__": [[86, 90], ["dict", "torch.optim.optimizer.Optimizer.__init__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "lr", "=", "1e-3", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ",", "eps", "=", "1e-8", ",", "weight_decay", "=", "0", ")", ":", "\n", "        ", "defaults", "=", "dict", "(", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "eps", "=", "eps", ",", "weight_decay", "=", "weight_decay", ")", "\n", "\n", "super", "(", "PlainRAdam", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.PlainRAdam.__setstate__": [[91, 93], ["super().__setstate__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.AdamW.__setstate__"], ["", "def", "__setstate__", "(", "self", ",", "state", ")", ":", "\n", "        ", "super", "(", "PlainRAdam", ",", "self", ")", ".", "__setstate__", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.PlainRAdam.step": [[94, 149], ["closure", "p.grad.data.float", "p.data.float", "exp_avg_sq.mul_().addcmul_", "exp_avg.mul_().add_", "p.data.copy_", "RuntimeError", "len", "torch.zeros_like", "torch.zeros_like", "state[].type_as", "state[].type_as", "p.data.float.add_", "exp_avg_sq.sqrt().add_", "p.data.float.addcdiv_", "p.data.float.add_", "exp_avg_sq.mul_", "exp_avg.mul_", "math.sqrt", "exp_avg_sq.sqrt"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "\n", "        ", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", ".", "float", "(", ")", "\n", "if", "grad", ".", "is_sparse", ":", "\n", "                    ", "raise", "RuntimeError", "(", "'RAdam does not support sparse gradients'", ")", "\n", "\n", "", "p_data_fp32", "=", "p", ".", "data", ".", "float", "(", ")", "\n", "\n", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                    ", "state", "[", "'step'", "]", "=", "0", "\n", "state", "[", "'exp_avg'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "", "else", ":", "\n", "                    ", "state", "[", "'exp_avg'", "]", "=", "state", "[", "'exp_avg'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "state", "[", "'exp_avg_sq'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "\n", "", "exp_avg", ",", "exp_avg_sq", "=", "state", "[", "'exp_avg'", "]", ",", "state", "[", "'exp_avg_sq'", "]", "\n", "beta1", ",", "beta2", "=", "group", "[", "'betas'", "]", "\n", "\n", "exp_avg_sq", ".", "mul_", "(", "beta2", ")", ".", "addcmul_", "(", "1", "-", "beta2", ",", "grad", ",", "grad", ")", "\n", "exp_avg", ".", "mul_", "(", "beta1", ")", ".", "add_", "(", "1", "-", "beta1", ",", "grad", ")", "\n", "\n", "state", "[", "'step'", "]", "+=", "1", "\n", "beta2_t", "=", "beta2", "**", "state", "[", "'step'", "]", "\n", "N_sma_max", "=", "2", "/", "(", "1", "-", "beta2", ")", "-", "1", "\n", "N_sma", "=", "N_sma_max", "-", "2", "*", "state", "[", "'step'", "]", "*", "beta2_t", "/", "(", "1", "-", "beta2_t", ")", "\n", "\n", "if", "group", "[", "'weight_decay'", "]", "!=", "0", ":", "\n", "                    ", "p_data_fp32", ".", "add_", "(", "-", "group", "[", "'weight_decay'", "]", "*", "group", "[", "'lr'", "]", ",", "p_data_fp32", ")", "\n", "\n", "# more conservative since it's an approximated value", "\n", "", "if", "N_sma", ">=", "5", ":", "\n", "                    ", "step_size", "=", "group", "[", "'lr'", "]", "*", "math", ".", "sqrt", "(", "\n", "(", "1", "-", "beta2_t", ")", "*", "(", "N_sma", "-", "4", ")", "/", "(", "N_sma_max", "-", "4", ")", "*", "(", "N_sma", "-", "2", ")", "/", "N_sma", "*", "N_sma_max", "/", "(", "\n", "N_sma_max", "-", "2", ")", ")", "/", "(", "1", "-", "beta1", "**", "state", "[", "'step'", "]", ")", "\n", "denom", "=", "exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "group", "[", "'eps'", "]", ")", "\n", "p_data_fp32", ".", "addcdiv_", "(", "-", "step_size", ",", "exp_avg", ",", "denom", ")", "\n", "", "else", ":", "\n", "                    ", "step_size", "=", "group", "[", "'lr'", "]", "/", "(", "1", "-", "beta1", "**", "state", "[", "'step'", "]", ")", "\n", "p_data_fp32", ".", "add_", "(", "-", "step_size", ",", "exp_avg", ")", "\n", "\n", "", "p", ".", "data", ".", "copy_", "(", "p_data_fp32", ")", "\n", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.AdamW.__init__": [[153, 157], ["dict", "torch.optim.optimizer.Optimizer.__init__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "lr", "=", "1e-3", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ",", "eps", "=", "1e-8", ",", "weight_decay", "=", "0", ",", "warmup", "=", "0", ")", ":", "\n", "        ", "defaults", "=", "dict", "(", "lr", "=", "lr", ",", "betas", "=", "betas", ",", "eps", "=", "eps", ",", "\n", "weight_decay", "=", "weight_decay", ",", "warmup", "=", "warmup", ")", "\n", "super", "(", "AdamW", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.AdamW.__setstate__": [[158, 160], ["super().__setstate__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.AdamW.__setstate__"], ["", "def", "__setstate__", "(", "self", ",", "state", ")", ":", "\n", "        ", "super", "(", "AdamW", ",", "self", ")", ".", "__setstate__", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.AdamW.step": [[161, 214], ["closure", "p.grad.data.float", "p.data.float", "exp_avg_sq.mul_().addcmul_", "exp_avg.mul_().add_", "exp_avg_sq.sqrt().add_", "p.data.float.addcdiv_", "p.data.copy_", "RuntimeError", "len", "torch.zeros_like", "torch.zeros_like", "state[].type_as", "state[].type_as", "p.data.float.add_", "exp_avg_sq.mul_", "exp_avg.mul_", "exp_avg_sq.sqrt", "math.sqrt"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "        ", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "loss", "=", "closure", "(", ")", "\n", "\n", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "\n", "            ", "for", "p", "in", "group", "[", "'params'", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "grad", "=", "p", ".", "grad", ".", "data", ".", "float", "(", ")", "\n", "if", "grad", ".", "is_sparse", ":", "\n", "                    ", "raise", "RuntimeError", "(", "'Adam does not support sparse gradients, please consider SparseAdam instead'", ")", "\n", "\n", "", "p_data_fp32", "=", "p", ".", "data", ".", "float", "(", ")", "\n", "\n", "state", "=", "self", ".", "state", "[", "p", "]", "\n", "\n", "if", "len", "(", "state", ")", "==", "0", ":", "\n", "                    ", "state", "[", "'step'", "]", "=", "0", "\n", "state", "[", "'exp_avg'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "torch", ".", "zeros_like", "(", "p_data_fp32", ")", "\n", "", "else", ":", "\n", "                    ", "state", "[", "'exp_avg'", "]", "=", "state", "[", "'exp_avg'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "state", "[", "'exp_avg_sq'", "]", "=", "state", "[", "'exp_avg_sq'", "]", ".", "type_as", "(", "p_data_fp32", ")", "\n", "\n", "", "exp_avg", ",", "exp_avg_sq", "=", "state", "[", "'exp_avg'", "]", ",", "state", "[", "'exp_avg_sq'", "]", "\n", "beta1", ",", "beta2", "=", "group", "[", "'betas'", "]", "\n", "\n", "state", "[", "'step'", "]", "+=", "1", "\n", "\n", "exp_avg_sq", ".", "mul_", "(", "beta2", ")", ".", "addcmul_", "(", "1", "-", "beta2", ",", "grad", ",", "grad", ")", "\n", "exp_avg", ".", "mul_", "(", "beta1", ")", ".", "add_", "(", "1", "-", "beta1", ",", "grad", ")", "\n", "\n", "denom", "=", "exp_avg_sq", ".", "sqrt", "(", ")", ".", "add_", "(", "group", "[", "'eps'", "]", ")", "\n", "bias_correction1", "=", "1", "-", "beta1", "**", "state", "[", "'step'", "]", "\n", "bias_correction2", "=", "1", "-", "beta2", "**", "state", "[", "'step'", "]", "\n", "\n", "if", "group", "[", "'warmup'", "]", ">", "state", "[", "'step'", "]", ":", "\n", "                    ", "scheduled_lr", "=", "1e-8", "+", "state", "[", "'step'", "]", "*", "group", "[", "'lr'", "]", "/", "group", "[", "'warmup'", "]", "\n", "", "else", ":", "\n", "                    ", "scheduled_lr", "=", "group", "[", "'lr'", "]", "\n", "\n", "", "step_size", "=", "group", "[", "'lr'", "]", "*", "math", ".", "sqrt", "(", "bias_correction2", ")", "/", "bias_correction1", "\n", "\n", "if", "group", "[", "'weight_decay'", "]", "!=", "0", ":", "\n", "                    ", "p_data_fp32", ".", "add_", "(", "-", "group", "[", "'weight_decay'", "]", "*", "scheduled_lr", ",", "p_data_fp32", ")", "\n", "\n", "", "p_data_fp32", ".", "addcdiv_", "(", "-", "step_size", ",", "exp_avg", ",", "denom", ")", "\n", "\n", "p", ".", "data", ".", "copy_", "(", "p_data_fp32", ")", "\n", "\n", "", "", "return", "loss", "", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.__init__.OptimizerFactory.__call__": [[13, 39], ["eval", "eval.", "eval.", "__init__.OptimizerFactory.custom_optimizers.keys", "eval", "utils.match_kwargs", "utils.match_kwargs"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.match_kwargs", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.match_kwargs"], ["def", "__call__", "(", "\n", "self", ",", "\n", "model_parameters", ",", "\n", "dataset_size", ",", "\n", "optimizer_type", "=", "'Adam'", ",", "\n", "scheduler_type", "=", "'MultiStepLR'", ",", "\n", "epoch_milestones", "=", "(", "50", ",", "70", ")", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "if", "optimizer_type", "in", "self", ".", "custom_optimizers", ".", "keys", "(", ")", ":", "\n", "            ", "opt_constructor", "=", "self", ".", "custom_optimizers", "[", "optimizer_type", "]", "\n", "", "else", ":", "\n", "            ", "opt_constructor", "=", "eval", "(", "f'torch.optim.{optimizer_type}'", ")", "\n", "\n", "", "scheduler_constructor", "=", "eval", "(", "f'torch.optim.lr_scheduler.{scheduler_type}'", ")", "\n", "\n", "step_milestones", "=", "[", "n_epoch", "*", "dataset_size", "for", "n_epoch", "in", "epoch_milestones", "]", "\n", "optimizer", "=", "opt_constructor", "(", "\n", "model_parameters", ",", "\n", "**", "match_kwargs", "(", "opt_constructor", ",", "**", "kwargs", ")", ",", "\n", ")", "\n", "scheduler", "=", "scheduler_constructor", "(", "\n", "optimizer", ",", "\n", "**", "match_kwargs", "(", "scheduler_constructor", ",", "milestones", "=", "step_milestones", ",", "**", "kwargs", ")", ",", "\n", ")", "\n", "return", "optimizer", ",", "scheduler", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.base.TrainerBase.fit_generator": [[6, 9], ["None"], "methods", ["None"], ["    ", "@", "abstractmethod", "\n", "def", "fit_generator", "(", "self", ",", "training_data_generator", ",", "validation_data_generator", ",", "metric", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.base.TrainerBase.save": [[10, 13], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "save", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.base.TrainerBase.load": [[14, 17], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "load", "(", "self", ",", "checkpoint_path", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer.__init__": [[26, 61], ["os.environ.get", "os.path.join", "os.path.join", "torch.cuda.is_available", "print", "cProfile.Profile", "pytorch_trainer.PytorchTrainer.model.cuda", "pytorch_trainer.PytorchTrainer.load", "pytorch_trainer.PytorchTrainer.count_parameters"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer.count_parameters"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "model", ":", "PytorchModelBase", ",", "\n", "dataset_size", ":", "int", ",", "\n", "optimizer", "=", "None", ",", "\n", "scheduler", "=", "None", ",", "\n", "comet_experiment", ":", "comet_ml", ".", "Experiment", "=", "None", ",", "\n", "checkpoint_dir", "=", "None", ",", "\n", "profile", ":", "bool", "=", "False", ",", "\n", "profile_epochs", ":", "int", "=", "1", ",", "\n", ")", ":", "\n", "        ", "self", ".", "dataset_size", "=", "dataset_size", "\n", "self", ".", "opt", "=", "optimizer", "\n", "self", ".", "scheduler", "=", "scheduler", "\n", "\n", "EXP_ID", "=", "os", ".", "environ", ".", "get", "(", "'EXP_ID'", ")", "\n", "self", ".", "result_path", "=", "os", ".", "path", ".", "join", "(", "RESULT_DIR_BASE", ",", "EXP_ID", ")", "\n", "self", ".", "prob_prediction_path", "=", "None", "\n", "self", ".", "hard_prediction_path", "=", "None", "\n", "\n", "self", ".", "profile", "=", "cProfile", ".", "Profile", "(", "subcalls", "=", "False", ")", "if", "profile", "else", "None", "\n", "self", ".", "profile_epochs", "=", "profile_epochs", "\n", "self", ".", "profile_steps", "=", "profile_epochs", "*", "dataset_size", "\n", "self", ".", "profile_export_file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_path", ",", "'profile.stat'", ")", "\n", "\n", "self", ".", "comet_experiment", "=", "comet_experiment", "\n", "\n", "self", ".", "model", "=", "model", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "model", ".", "cuda", "(", ")", "\n", "", "print", "(", "f'Total parameters: {self.count_parameters()}'", ")", "\n", "if", "checkpoint_dir", "is", "not", "None", ":", "\n", "            ", "self", ".", "load", "(", "checkpoint_dir", ")", "\n", "\n", "", "self", ".", "i_step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer.count_parameters": [[62, 64], ["sum", "p.numel", "pytorch_trainer.PytorchTrainer.model.parameters"], "methods", ["None"], ["", "def", "count_parameters", "(", "self", ")", ":", "\n", "        ", "return", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "self", ".", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer.save": [[65, 75], ["torch.save", "print", "os.path.join", "pytorch_trainer.PytorchTrainer.model.state_dict", "pytorch_trainer.PytorchTrainer.opt.state_dict"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.save"], ["", "def", "save", "(", "self", ")", ":", "\n", "        ", "torch", ".", "save", "(", "\n", "{", "\n", "'step'", ":", "self", ".", "i_step", ",", "\n", "'state_dict'", ":", "self", ".", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "self", ".", "opt", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "result_path", ",", "'checkpoint.pth.tar'", ")", "\n", ")", "\n", "print", "(", "f'model saved to {self.result_path}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer.load": [[76, 83], ["torch.load", "pytorch_trainer.PytorchTrainer.model.load_state_dict", "print", "os.path.join", "pytorch_trainer.PytorchTrainer.opt.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load"], ["", "def", "load", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "file_path", ",", "'checkpoint.pth.tar'", ")", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "if", "self", ".", "opt", "is", "not", "None", ":", "\n", "            ", "self", ".", "opt", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "", "self", ".", "i_step", "=", "checkpoint", "[", "'step'", "]", "+", "1", "\n", "print", "(", "f'model loaded from {file_path}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer._validate": [[84, 89], ["validation_data_generator", "pytorch_trainer.PytorchTrainer.model.predict", "metric().all_metrics", "metric"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.PytorchModelBase.predict", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.StructSegHaNMetric.all_metrics", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.metric"], ["", "def", "_validate", "(", "self", ",", "validation_data_generator", ",", "metric", ",", "**", "kwargs", ")", ":", "\n", "        ", "batch_data", "=", "validation_data_generator", "(", "batch_size", "=", "1", ")", "\n", "label", "=", "batch_data", "[", "'label'", "]", "\n", "pred", "=", "self", ".", "model", ".", "predict", "(", "batch_data", ",", "**", "kwargs", ")", "\n", "return", "metric", "(", "pred", ",", "label", ")", ".", "all_metrics", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer.fit_generator": [[90, 146], ["math.ceil", "range", "print", "pytorch_trainer.PytorchTrainer.profile.enable", "pytorch_trainer.PytorchTrainer.model.fit_generator", "pytorch_trainer.PytorchTrainer.scheduler.step", "print", "pytorch_trainer.PytorchTrainer.save", "pytorch_trainer.PytorchTrainer._validate", "pytorch_trainer.PytorchTrainer.profile.disable", "print", "print", "print", "sys.exit", "pytorch_trainer.PytorchTrainer.comet_experiment.log_metrics", "zip", "pytorch_trainer.PytorchTrainer.comet_experiment.log_metrics", "open", "pytorch_trainer.PytorchTrainer.comet_experiment.log_metrics", "contextlib.redirect_stdout", "pytorch_trainer.PytorchTrainer.profile.print_stats"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.PytorchModelBase.fit_generator", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.AdamW.step", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.save", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer._validate"], ["", "def", "fit_generator", "(", "\n", "self", ",", "\n", "training_data_generator", ",", "\n", "validation_data_generator", ",", "\n", "auxiliary_data_generators", ",", "\n", "auxiliary_data_provider_ids", ",", "\n", "metric", ",", "\n", "batch_size", ",", "\n", "epoch_num", ",", "\n", "verbose_epoch_num", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "step_num", "=", "epoch_num", "*", "self", ".", "dataset_size", "\n", "verbose_step_num", "=", "ceil", "(", "verbose_epoch_num", "*", "self", ".", "dataset_size", ")", "\n", "\n", "if", "self", ".", "profile", "is", "not", "None", ":", "\n", "            ", "print", "(", "'Profiling...'", ")", "\n", "self", ".", "profile", ".", "enable", "(", ")", "\n", "\n", "", "for", "self", ".", "i_step", "in", "range", "(", "self", ".", "i_step", ",", "self", ".", "i_step", "+", "step_num", ")", ":", "\n", "            ", "log_dict", ",", "aux_log_dicts", "=", "self", ".", "model", ".", "fit_generator", "(", "\n", "training_data_generator", ",", "\n", "auxiliary_data_generators", ",", "\n", "self", ".", "opt", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", ")", "\n", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "# fits on one single volume, one step = one volume", "\n", "\n", "if", "self", ".", "i_step", "%", "verbose_step_num", "==", "0", ":", "\n", "                ", "print", "(", "f'epoch: {self.i_step / self.dataset_size:.2f}'", ",", "log_dict", ")", "\n", "self", ".", "save", "(", ")", "\n", "metrics", "=", "self", ".", "_validate", "(", "\n", "validation_data_generator", ",", "metric", ",", "batch_size", "=", "batch_size", "\n", ")", "\n", "if", "self", ".", "comet_experiment", "is", "not", "None", ":", "\n", "                    ", "self", ".", "comet_experiment", ".", "log_metrics", "(", "\n", "log_dict", ",", "prefix", "=", "'training'", ",", "step", "=", "self", ".", "i_step", "\n", ")", "\n", "for", "log", ",", "name", "in", "zip", "(", "aux_log_dicts", ",", "auxiliary_data_provider_ids", ")", ":", "\n", "                        ", "self", ".", "comet_experiment", ".", "log_metrics", "(", "\n", "log", ",", "prefix", "=", "f'aux_{name}'", ",", "step", "=", "self", ".", "i_step", "\n", ")", "\n", "", "self", ".", "comet_experiment", ".", "log_metrics", "(", "\n", "metrics", ",", "prefix", "=", "'validation'", ",", "step", "=", "self", ".", "i_step", "\n", ")", "\n", "\n", "", "", "if", "self", ".", "i_step", "==", "self", ".", "profile_steps", "and", "self", ".", "profile", "is", "not", "None", ":", "\n", "                ", "self", ".", "profile", ".", "disable", "(", ")", "\n", "with", "open", "(", "self", ".", "profile_export_file_path", ",", "'w'", ")", "as", "f_out", ":", "\n", "                    ", "with", "redirect_stdout", "(", "f_out", ")", ":", "\n", "                        ", "self", ".", "profile", ".", "print_stats", "(", "sort", "=", "'cumtime'", ")", "\n", "", "", "print", "(", "f\"Complete profiling in {self.profile_epochs} epochs.\"", ")", "\n", "print", "(", "f'Exported profiling stats to {self.profile_export_file_path}'", ")", "\n", "print", "(", "\"Exit by profiler\"", ")", "\n", "sys", ".", "exit", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer.predict_on_generator": [[147, 181], ["os.path.join", "os.path.join", "print", "tqdm.tqdm.tqdm", "pytorch_trainer.PytorchTrainer._save_metric_predictions", "print", "os.path.exists", "os.mkdir", "os.mkdir", "os.mkdir", "range", "data_generator", "pytorch_trainer.PytorchTrainer.model.predict", "metric().all_metrics", "pytorch_trainer.PytorchTrainer._save_volume_prediction", "os.path.exists", "os.path.exists", "len", "len", "metric"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer._save_metric_predictions", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.PytorchModelBase.predict", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.StructSegHaNMetric.all_metrics", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer._save_volume_prediction", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.metric"], ["", "", "", "def", "predict_on_generator", "(", "\n", "self", ",", "\n", "data_generator", ",", "\n", "save_base_dir", ",", "\n", "metric", ",", "\n", "save_volume", ":", "str", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "save_base_dir", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "save_base_dir", ")", "\n", "\n", "", "self", ".", "prob_prediction_path", "=", "os", ".", "path", ".", "join", "(", "save_base_dir", ",", "f'prob_predict'", ")", "\n", "self", ".", "hard_prediction_path", "=", "os", ".", "path", ".", "join", "(", "save_base_dir", ",", "f'hard_predict'", ")", "\n", "if", "'soft'", "in", "save_volume", "and", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "prob_prediction_path", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "self", ".", "prob_prediction_path", ")", "\n", "", "if", "'hard'", "in", "save_volume", "and", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "hard_prediction_path", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "self", ".", "hard_prediction_path", ")", "\n", "\n", "", "metrics_dict", "=", "{", "}", "\n", "\n", "print", "(", "f'predicting on {len(data_generator)} volumes...'", ")", "\n", "for", "_", "in", "tqdm", "(", "range", "(", "len", "(", "data_generator", ")", ")", ")", ":", "\n", "            ", "batch_data", "=", "data_generator", "(", "batch_size", "=", "1", ")", "\n", "label", ",", "data_id", "=", "batch_data", "[", "'label'", "]", ",", "batch_data", "[", "'data_ids'", "]", "[", "0", "]", "\n", "pred", "=", "self", ".", "model", ".", "predict", "(", "batch_data", ",", "**", "kwargs", ")", "\n", "\n", "metrics", "=", "metric", "(", "pred", ",", "label", ")", ".", "all_metrics", "(", "verbose", "=", "False", ")", "\n", "metrics_dict", "[", "data_id", "]", "=", "metrics", "\n", "\n", "self", ".", "_save_volume_prediction", "(", "pred", ",", "batch_data", ",", "save_volume", ")", "\n", "\n", "", "self", ".", "_save_metric_predictions", "(", "metrics_dict", ",", "save_base_dir", ")", "\n", "print", "(", "f'prediction result saved to {save_base_dir}'", ")", "\n", "return", "metrics_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer._save_volume_prediction": [[182, 196], ["pred[].transpose", "numpy.argmax", "data_id.endswith", "preprocess_tools.image_utils.save_array_to_nii", "preprocess_tools.image_utils.save_array_to_nii", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.save_array_to_nii", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.save_array_to_nii"], ["", "def", "_save_volume_prediction", "(", "self", ",", "pred", ",", "batch_data", ",", "save_volume", ")", ":", "\n", "# to [D, H, W, C] format", "\n", "        ", "pred", "=", "pred", "[", "0", "]", ".", "transpose", "(", "[", "2", ",", "3", ",", "1", ",", "0", "]", ")", "\n", "hard_pred", "=", "np", ".", "argmax", "(", "pred", ",", "axis", "=", "-", "1", ")", "\n", "\n", "data_id", "=", "batch_data", "[", "'data_ids'", "]", "[", "0", "]", "\n", "affine", "=", "batch_data", "[", "'affines'", "]", "[", "0", "]", "\n", "\n", "if", "not", "data_id", ".", "endswith", "(", "'.nii.gz'", ")", ":", "\n", "            ", "data_id", "=", "f'{data_id}.nii.gz'", "\n", "", "if", "'soft'", "in", "save_volume", ":", "\n", "            ", "save_array_to_nii", "(", "pred", ",", "os", ".", "path", ".", "join", "(", "self", ".", "prob_prediction_path", ",", "data_id", ")", ",", "affine", ")", "\n", "", "if", "'hard'", "in", "save_volume", ":", "\n", "            ", "save_array_to_nii", "(", "hard_pred", ",", "os", ".", "path", ".", "join", "(", "self", ".", "hard_prediction_path", ",", "data_id", ")", ",", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.trainers.pytorch_trainer.PytorchTrainer._save_metric_predictions": [[197, 203], ["pandas.DataFrame().transpose", "df.sort_index.sort_index.sort_index", "os.path.join", "df.sort_index.sort_index.to_csv", "pandas.DataFrame"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_save_metric_predictions", "(", "metrics_dict", ",", "save_base_dir", ")", ":", "\n", "        ", "df", "=", "pd", ".", "DataFrame", "(", "metrics_dict", ")", ".", "transpose", "(", ")", "\n", "df", "=", "df", ".", "sort_index", "(", ")", "\n", "output_file_path", "=", "os", ".", "path", ".", "join", "(", "save_base_dir", ",", "'results.csv'", ")", "\n", "df", ".", "to_csv", "(", "output_file_path", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.BasicBlock.__init__": [[49, 58], ["torch.Module.__init__", "extractors.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "extractors.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.conv3x3", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", "=", "1", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.BasicBlock.forward": [[59, 76], ["extractors.BasicBlock.conv1", "extractors.BasicBlock.bn1", "extractors.BasicBlock.relu", "extractors.BasicBlock.conv2", "extractors.BasicBlock.bn2", "extractors.BasicBlock.relu", "extractors.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.Bottleneck.__init__": [[81, 93], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ",", "\n", "padding", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.Bottleneck.forward": [[94, 115], ["extractors.Bottleneck.conv1", "extractors.Bottleneck.bn1", "extractors.Bottleneck.relu", "extractors.Bottleneck.conv2", "extractors.Bottleneck.bn2", "extractors.Bottleneck.relu", "extractors.Bottleneck.conv3", "extractors.Bottleneck.bn3", "extractors.Bottleneck.relu", "extractors.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.ResNet.__init__": [[119, 145], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "extractors.ResNet._make_layer", "extractors.ResNet._make_layer", "extractors.ResNet._make_layer", "extractors.ResNet._make_layer", "extractors.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.ResNet._make_layer", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.ResNet._make_layer", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.ResNet._make_layer", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "in_channels", ",", "layers", "=", "(", "3", ",", "4", ",", "23", ",", "3", ")", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "\n", "64", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "3", ",", "\n", "bias", "=", "False", ",", "\n", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "1", ",", "dilation", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "1", ",", "dilation", "=", "4", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.ResNet._make_layer": [[146, 161], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", "]", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.ResNet.forward": [[162, 174], ["extractors.ResNet.conv1", "extractors.ResNet.bn1", "extractors.ResNet.relu", "extractors.ResNet.maxpool", "extractors.ResNet.layer1", "extractors.ResNet.layer2", "extractors.ResNet.layer3", "extractors.ResNet.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x_3", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x_3", ")", "\n", "\n", "return", "x", ",", "x_3", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors._DenseLayer.__init__": [[183, 198], ["torch.Sequential.__init__", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_input_features", ",", "growth_rate", ",", "bn_size", ",", "drop_rate", ")", ":", "\n", "        ", "super", "(", "_DenseLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_module", "(", "'norm.1'", ",", "nn", ".", "BatchNorm2d", "(", "num_input_features", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'relu.1'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'conv.1'", ",", "nn", ".", "Conv2d", "(", "\n", "num_input_features", ",", "bn_size", "*", "growth_rate", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'norm.2'", ",", "nn", ".", "BatchNorm2d", "(", "bn_size", "*", "growth_rate", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'relu.2'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'conv.2'", ",", "nn", ".", "Conv2d", "(", "bn_size", "*", "growth_rate", ",", "growth_rate", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "self", ".", "drop_rate", "=", "drop_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors._DenseLayer.forward": [[199, 204], ["super().forward", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.dropout", "torch.dropout", "torch.dropout"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.SelfAttention.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "new_features", "=", "super", "(", "_DenseLayer", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "if", "self", ".", "drop_rate", ">", "0", ":", "\n", "            ", "new_features", "=", "F", ".", "dropout", "(", "new_features", ",", "p", "=", "self", ".", "drop_rate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "return", "torch", ".", "cat", "(", "[", "x", ",", "new_features", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors._DenseBlock.__init__": [[208, 218], ["torch.Sequential.__init__", "range", "extractors._DenseLayer", "extractors._DenseBlock.add_module"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "num_input_features", ",", "bn_size", ",", "growth_rate", ",", "drop_rate", ")", ":", "\n", "        ", "super", "(", "_DenseBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "            ", "layer", "=", "_DenseLayer", "(", "\n", "num_input_features", "+", "i", "*", "growth_rate", ",", "\n", "growth_rate", ",", "\n", "bn_size", ",", "\n", "drop_rate", "\n", ")", "\n", "self", ".", "add_module", "(", "'denselayer%d'", "%", "(", "i", "+", "1", ")", ",", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors._Transition.__init__": [[222, 232], ["torch.Sequential.__init__", "extractors._Transition.add_module", "extractors._Transition.add_module", "extractors._Transition.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "extractors._Transition.add_module", "extractors._Transition.add_module", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_input_features", ",", "num_output_features", ",", "downsample", "=", "True", ")", ":", "\n", "        ", "super", "(", "_Transition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_module", "(", "'norm'", ",", "nn", ".", "BatchNorm2d", "(", "num_input_features", ")", ")", "\n", "self", ".", "add_module", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "add_module", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "num_input_features", ",", "num_output_features", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "if", "downsample", ":", "\n", "            ", "self", ".", "add_module", "(", "'pool'", ",", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "add_module", "(", "'pool'", ",", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ")", "# compatibility hack", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.DenseNet.__init__": [[236, 297], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "enumerate", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "collections.OrderedDict", "torchvision.models.densenet.densenet121().features.children", "extractors.DenseNet.start_features.children", "extractors._DenseBlock", "extractors.DenseNet.blocks.append", "setattr", "c.load_state_dict", "_DenseBlock.load_state_dict", "extractors._Transition", "extractors.DenseNet.blocks.append", "setattr", "init_weights[].state_dict", "init_weights[].state_dict", "len", "_Transition.load_state_dict", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torchvision.models.densenet.densenet121", "init_weights[].state_dict"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channels", "=", "3", ",", "\n", "growth_rate", "=", "32", ",", "\n", "block_config", "=", "(", "6", ",", "12", ",", "24", ",", "16", ")", ",", "\n", "num_init_features", "=", "64", ",", "\n", "bn_size", "=", "4", ",", "\n", "drop_rate", "=", "0", ",", "\n", "pretrained", "=", "True", "\n", ")", ":", "\n", "\n", "        ", "super", "(", "DenseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# First convolution", "\n", "self", ".", "start_features", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv0'", ",", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "\n", "num_init_features", ",", "\n", "kernel_size", "=", "7", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "3", ",", "\n", "bias", "=", "False", "\n", ")", ")", ",", "\n", "(", "'norm0'", ",", "nn", ".", "BatchNorm2d", "(", "num_init_features", ")", ")", ",", "\n", "(", "'relu0'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "(", "'pool0'", ",", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "# Each denseblock", "\n", "num_features", "=", "num_init_features", "\n", "\n", "init_weights", "=", "list", "(", "densenet121", "(", "pretrained", "=", "True", ")", ".", "features", ".", "children", "(", ")", ")", "\n", "start", "=", "0", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "self", ".", "start_features", ".", "children", "(", ")", ")", ":", "\n", "            ", "if", "pretrained", ":", "\n", "                ", "c", ".", "load_state_dict", "(", "init_weights", "[", "i", "]", ".", "state_dict", "(", ")", ")", "\n", "", "start", "+=", "1", "\n", "", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", ",", "num_layers", "in", "enumerate", "(", "block_config", ")", ":", "\n", "            ", "block", "=", "_DenseBlock", "(", "num_layers", "=", "num_layers", ",", "num_input_features", "=", "num_features", ",", "\n", "bn_size", "=", "bn_size", ",", "growth_rate", "=", "growth_rate", ",", "drop_rate", "=", "drop_rate", ")", "\n", "if", "pretrained", ":", "\n", "                ", "block", ".", "load_state_dict", "(", "init_weights", "[", "start", "]", ".", "state_dict", "(", ")", ")", "\n", "", "start", "+=", "1", "\n", "self", ".", "blocks", ".", "append", "(", "block", ")", "\n", "setattr", "(", "self", ",", "'denseblock%d'", "%", "(", "i", "+", "1", ")", ",", "block", ")", "\n", "\n", "num_features", "=", "num_features", "+", "num_layers", "*", "growth_rate", "\n", "if", "i", "!=", "len", "(", "block_config", ")", "-", "1", ":", "\n", "                ", "downsample", "=", "i", "<", "1", "\n", "trans", "=", "_Transition", "(", "\n", "num_input_features", "=", "num_features", ",", "\n", "num_output_features", "=", "num_features", "//", "2", ",", "\n", "downsample", "=", "downsample", "\n", ")", "\n", "if", "pretrained", ":", "\n", "                    ", "trans", ".", "load_state_dict", "(", "init_weights", "[", "start", "]", ".", "state_dict", "(", ")", ")", "\n", "", "start", "+=", "1", "\n", "self", ".", "blocks", ".", "append", "(", "trans", ")", "\n", "setattr", "(", "self", ",", "'transition%d'", "%", "(", "i", "+", "1", ")", ",", "trans", ")", "\n", "num_features", "=", "num_features", "//", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.DenseNet.forward": [[298, 307], ["extractors.DenseNet.start_features", "enumerate", "block"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "start_features", "(", "x", ")", "\n", "deep_features", "=", "None", "\n", "for", "i", ",", "block", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "out", "=", "block", "(", "out", ")", "\n", "if", "i", "==", "5", ":", "\n", "                ", "deep_features", "=", "out", "\n", "\n", "", "", "return", "out", ",", "deep_features", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.Fire.__init__": [[311, 323], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "squeeze_planes", ",", "\n", "expand1x1_planes", ",", "expand3x3_planes", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "Fire", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "squeeze", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "squeeze_planes", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "squeeze_activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "expand1x1", "=", "nn", ".", "Conv2d", "(", "squeeze_planes", ",", "expand1x1_planes", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "expand1x1_activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "expand3x3", "=", "nn", ".", "Conv2d", "(", "squeeze_planes", ",", "expand3x3_planes", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "expand3x3_activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.Fire.forward": [[324, 330], ["extractors.Fire.squeeze_activation", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "extractors.Fire.squeeze", "extractors.Fire.expand1x1_activation", "extractors.Fire.expand3x3_activation", "extractors.Fire.expand1x1", "extractors.Fire.expand3x3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "squeeze_activation", "(", "self", ".", "squeeze", "(", "x", ")", ")", "\n", "return", "torch", ".", "cat", "(", "[", "\n", "self", ".", "expand1x1_activation", "(", "self", ".", "expand1x1", "(", "x", ")", ")", ",", "\n", "self", ".", "expand3x3_activation", "(", "self", ".", "expand3x3", "(", "x", ")", ")", "\n", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.SqueezeNet.__init__": [[334, 360], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "extractors.Fire", "extractors.Fire", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "extractors.Fire", "extractors.Fire", "extractors.Fire", "extractors.Fire", "extractors.Fire", "extractors.Fire", "torchvision.models.squeezenet.squeezenet1_1().features.state_dict", "extractors.load_weights_sequential", "torchvision.models.squeezenet.squeezenet1_1"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.load_weights_sequential"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "super", "(", "SqueezeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "feat_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "feat_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "Fire", "(", "64", ",", "16", ",", "64", ",", "64", ")", ",", "\n", "Fire", "(", "128", ",", "16", ",", "64", ",", "64", ")", "\n", ")", "\n", "self", ".", "feat_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "Fire", "(", "128", ",", "32", ",", "128", ",", "128", ",", "2", ")", ",", "\n", "Fire", "(", "256", ",", "32", ",", "128", ",", "128", ",", "2", ")", "\n", ")", "\n", "self", ".", "feat_4", "=", "nn", ".", "Sequential", "(", "\n", "Fire", "(", "256", ",", "48", ",", "192", ",", "192", ",", "4", ")", ",", "\n", "Fire", "(", "384", ",", "48", ",", "192", ",", "192", ",", "4", ")", ",", "\n", "Fire", "(", "384", ",", "64", ",", "256", ",", "256", ",", "4", ")", ",", "\n", "Fire", "(", "512", ",", "64", ",", "256", ",", "256", ",", "4", ")", "\n", ")", "\n", "if", "pretrained", ":", "\n", "            ", "weights", "=", "squeezenet1_1", "(", "pretrained", "=", "True", ")", ".", "features", ".", "state_dict", "(", ")", "\n", "load_weights_sequential", "(", "self", ",", "weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.SqueezeNet.forward": [[361, 367], ["extractors.SqueezeNet.feat_1", "extractors.SqueezeNet.feat_2", "extractors.SqueezeNet.feat_3", "extractors.SqueezeNet.feat_4"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "f1", "=", "self", ".", "feat_1", "(", "x", ")", "\n", "f2", "=", "self", ".", "feat_2", "(", "f1", ")", "\n", "f3", "=", "self", ".", "feat_3", "(", "f2", ")", "\n", "f4", "=", "self", ".", "feat_4", "(", "f3", ")", "\n", "return", "f4", ",", "f3", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.load_weights_sequential": [[15, 20], ["collections.OrderedDict", "zip", "target.load_state_dict", "target.state_dict().items", "source_state.items", "target.state_dict"], "function", ["None"], ["def", "load_weights_sequential", "(", "target", ",", "source_state", ")", ":", "\n", "    ", "new_dict", "=", "OrderedDict", "(", ")", "\n", "for", "(", "k1", ",", "v1", ")", ",", "(", "k2", ",", "v2", ")", "in", "zip", "(", "target", ".", "state_dict", "(", ")", ".", "items", "(", ")", ",", "source_state", ".", "items", "(", ")", ")", ":", "\n", "        ", "new_dict", "[", "k1", "]", "=", "v2", "\n", "", "target", ".", "load_state_dict", "(", "new_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.conv3x3": [[34, 43], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "\n", "dilation", "=", "dilation", ",", "\n", "bias", "=", "False", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.squeezenet": [[374, 376], ["extractors.SqueezeNet"], "function", ["None"], ["def", "squeezenet", "(", "in_channels", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "return", "SqueezeNet", "(", "in_channels", ",", "pretrained", "=", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.densenet": [[378, 380], ["extractors.DenseNet"], "function", ["None"], ["", "def", "densenet", "(", "in_channels", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "return", "DenseNet", "(", "in_channels", ",", "pretrained", "=", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.resnet18": [[382, 387], ["extractors.ResNet", "extractors.load_weights_sequential", "torch.utils.model_zoo.load_url"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.load_weights_sequential"], ["", "def", "resnet18", "(", "in_channels", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "in_channels", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "load_weights_sequential", "(", "model", ",", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.resnet34": [[389, 394], ["extractors.ResNet", "extractors.load_weights_sequential", "torch.utils.model_zoo.load_url"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.load_weights_sequential"], ["", "def", "resnet34", "(", "in_channels", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "in_channels", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "load_weights_sequential", "(", "model", ",", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.resnet50": [[396, 401], ["extractors.ResNet", "extractors.load_weights_sequential", "torch.utils.model_zoo.load_url"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.load_weights_sequential"], ["", "def", "resnet50", "(", "in_channels", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "in_channels", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "load_weights_sequential", "(", "model", ",", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.resnet101": [[403, 408], ["extractors.ResNet", "extractors.load_weights_sequential", "torch.utils.model_zoo.load_url"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.load_weights_sequential"], ["", "def", "resnet101", "(", "in_channels", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "in_channels", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "load_weights_sequential", "(", "model", ",", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.resnet152": [[410, 415], ["extractors.ResNet", "extractors.load_weights_sequential", "torch.utils.model_zoo.load_url"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.extractors.load_weights_sequential"], ["", "def", "resnet152", "(", "in_channels", ",", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "in_channels", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "load_weights_sequential", "(", "model", ",", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.ModelBase.fit_generator": [[14, 17], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "load", "(", "self", ",", "checkpoint_path", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.ModelBase.predict": [[18, 21], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.PytorchModelBase.__init__": [[25, 62], ["torch.nn.Module.__init__", "base.PytorchModelBase.batch_sampler_constructor", "base.PytorchModelBase.build_heads", "base.PytorchModelBase.build_tails"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UNet.build_heads", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UNet.build_tails"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.PytorchModelBase.fit_generator": [[64, 120], ["base.PytorchModelBase.train", "enumerate", "base.PytorchModelBase.zero_grad", "numpy.random.permutation", "base.PytorchModelBase.parameters", "data_generator", "base.PytorchModelBase.batch_sampler.convert_to_feedable", "batch_data_list.extend", "batch_label_list.extend", "data_idx_list.extend", "len", "base.PytorchModelBase.forward_head", "base.PytorchModelBase.forward", "base.PytorchModelBase.loss_fn", "logs[].append", "loss.backward", "utils.summarize_logs", "torch.nn.utils.clip_grad_norm_", "optimizer.step", "base.PytorchModelBase.zero_grad", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.convert_to_feedable", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UNet.forward_head", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.SelfAttention.forward", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.summarize_logs", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.optimizers.radam.AdamW.step"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.PytorchModelBase.predict": [[121, 138], ["base.PytorchModelBase.eval", "base.PytorchModelBase.batch_sampler.reassemble", "torch.no_grad", "base.PytorchModelBase.batch_sampler.convert_to_feedable", "torch.nn.functional.softmax().cpu().data.numpy", "torch.nn.functional.softmax().cpu", "torch.nn.functional.softmax", "base.PytorchModelBase.forward", "base.PytorchModelBase.forward_head"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.reassemble", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.convert_to_feedable", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.SelfAttention.forward", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UNet.forward_head"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.PytorchModelBase.forward_head": [[139, 142], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.PytorchModelBase.build_heads": [[143, 146], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.base.PytorchModelBase.build_tails": [[147, 150], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPNet.__init__": [[14, 40], ["base.PytorchModelBase.__init__", "pspnet.PSPModule", "torch.nn.Dropout2d", "pspnet.PSPUpsample", "pspnet.PSPUpsample", "pspnet.PSPUpsample", "torch.nn.Dropout2d"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "data_format", ":", "dict", ",", "\n", "batch_sampler_id", "=", "'two_dim'", ",", "\n", "sizes", "=", "(", "1", ",", "2", ",", "3", ",", "6", ",", "10", ")", ",", "\n", "psp_size", "=", "512", ",", "\n", "backend", "=", "'resnet34'", ",", "\n", "pretrained", "=", "False", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "batch_sampler_id", "=", "batch_sampler_id", ",", "\n", "data_format", "=", "data_format", ",", "\n", "head_outcome_channels", "=", "data_format", "[", "'channels'", "]", ",", "\n", "forward_outcome_channels", "=", "64", ",", "\n", "**", "kwargs", ",", "\n", ")", "\n", "self", ".", "feats", "=", "extractor_hub", "[", "backend", "]", "(", "data_format", "[", "'channels'", "]", ",", "pretrained", ")", "\n", "self", ".", "psp", "=", "PSPModule", "(", "psp_size", ",", "1024", ",", "sizes", ")", "\n", "self", ".", "drop_1", "=", "nn", ".", "Dropout2d", "(", "p", "=", "0.3", ")", "\n", "\n", "self", ".", "up_1", "=", "PSPUpsample", "(", "1024", ",", "256", ")", "\n", "self", ".", "up_2", "=", "PSPUpsample", "(", "256", ",", "64", ")", "\n", "self", ".", "up_3", "=", "PSPUpsample", "(", "64", ",", "64", ")", "\n", "\n", "self", ".", "drop_2", "=", "nn", ".", "Dropout2d", "(", "p", "=", "0.15", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPNet.forward_head": [[41, 46], ["utils.get_tensor_from_array"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array"], ["", "def", "forward_head", "(", "self", ",", "inp", ",", "data_idx", ":", "int", ")", ":", "\n", "        ", "x", "=", "inp", "[", "'slice'", "]", "\n", "x", "=", "get_tensor_from_array", "(", "x", ")", "\n", "x", "=", "self", ".", "heads", "[", "data_idx", "]", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPNet.forward": [[47, 63], ["pspnet.PSPNet.feats", "pspnet.PSPNet.psp", "pspnet.PSPNet.drop_1", "pspnet.PSPNet.up_1", "pspnet.PSPNet.drop_2", "pspnet.PSPNet.up_2", "pspnet.PSPNet.drop_2", "pspnet.PSPNet.up_3", "pspnet.PSPNet.drop_2", "pspnet.PSPNet.final"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "f", ",", "class_f", "=", "self", ".", "feats", "(", "x", ")", "\n", "p", "=", "self", ".", "psp", "(", "f", ")", "\n", "p", "=", "self", ".", "drop_1", "(", "p", ")", "\n", "\n", "p", "=", "self", ".", "up_1", "(", "p", ")", "\n", "p", "=", "self", ".", "drop_2", "(", "p", ")", "\n", "\n", "p", "=", "self", ".", "up_2", "(", "p", ")", "\n", "p", "=", "self", ".", "drop_2", "(", "p", ")", "\n", "\n", "p", "=", "self", ".", "up_3", "(", "p", ")", "\n", "p", "=", "self", ".", "drop_2", "(", "p", ")", "\n", "\n", "p", "=", "self", ".", "final", "(", "p", ")", "\n", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPNet.build_heads": [[64, 68], ["torch.nn.ModuleList", "torch.nn.Conv2d"], "methods", ["None"], ["", "def", "build_heads", "(", "self", ",", "input_channels", ":", "list", ",", "output_channel", ":", "int", ")", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Conv2d", "(", "input_channel", ",", "output_channel", ",", "kernel_size", "=", "3", ")", "\n", "for", "input_channel", "in", "input_channels", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPNet.build_tails": [[70, 74], ["torch.nn.ModuleList", "torch.nn.Conv2d"], "methods", ["None"], ["", "def", "build_tails", "(", "self", ",", "input_channels", ",", "class_nums", ")", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "class_num", ",", "kernel_size", "=", "1", ")", "\n", "for", "class_num", "in", "class_nums", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPModule.__init__": [[79, 85], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.Conv2d", "torch.nn.ReLU", "pspnet.PSPModule._make_stage", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPModule._make_stage"], ["    ", "def", "__init__", "(", "self", ",", "features", ",", "out_features", "=", "1024", ",", "sizes", "=", "(", "1", ",", "2", ",", "3", ",", "6", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stages", "=", "[", "]", "\n", "self", ".", "stages", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "_make_stage", "(", "features", ",", "size", ")", "for", "size", "in", "sizes", "]", ")", "\n", "self", ".", "bottleneck", "=", "nn", ".", "Conv2d", "(", "features", "*", "(", "len", "(", "sizes", ")", "+", "1", ")", ",", "out_features", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPModule._make_stage": [[86, 90], ["torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Sequential"], "methods", ["None"], ["", "def", "_make_stage", "(", "self", ",", "features", ",", "size", ")", ":", "\n", "        ", "prior", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "(", "size", ",", "size", ")", ")", "\n", "conv", "=", "nn", ".", "Conv2d", "(", "features", ",", "features", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "return", "nn", ".", "Sequential", "(", "prior", ",", "conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPModule.forward": [[91, 104], ["pspnet.PSPModule.bottleneck", "pspnet.PSPModule.relu", "feats.size", "feats.size", "torch.cat", "torch.nn.functional.interpolate", "stage"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "        ", "h", ",", "w", "=", "feats", ".", "size", "(", "2", ")", ",", "feats", ".", "size", "(", "3", ")", "\n", "priors", "=", "[", "\n", "F", ".", "interpolate", "(", "\n", "input", "=", "stage", "(", "feats", ")", ",", "\n", "size", "=", "(", "h", ",", "w", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "True", ",", "\n", ")", "for", "stage", "in", "self", ".", "stages", "\n", "]", "+", "[", "feats", "]", "\n", "\n", "bottle", "=", "self", ".", "bottleneck", "(", "torch", ".", "cat", "(", "priors", ",", "1", ")", ")", "\n", "return", "self", ".", "relu", "(", "bottle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPUpsample.__init__": [[108, 114], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.pspnet.PSPUpsample.forward": [[116, 120], ["torch.nn.functional.interpolate", "pspnet.PSPUpsample.conv", "x.size", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", ",", "w", "=", "2", "*", "x", ".", "size", "(", "2", ")", ",", "2", "*", "x", ".", "size", "(", "3", ")", "\n", "p", "=", "F", ".", "interpolate", "(", "input", "=", "x", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "return", "self", ".", "conv", "(", "p", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.VNet.__init__": [[10, 50], ["base.PytorchModelBase.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "range", "v_net.UpConv", "v_net.VNet.up.append", "AssertionError", "v_net.DownConv", "v_net.VNet.down.append", "v_net.UpConv", "v_net.VNet.up.append"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "data_format", ":", "dict", ",", "\n", "duplication_num", ":", "int", "=", "16", ",", "\n", "kernel_size", ":", "int", "=", "3", ",", "\n", "conv_time", ":", "int", "=", "2", ",", "\n", "n_layer", ":", "int", "=", "4", ",", "\n", "batch_sampler_id", "=", "'three_dim'", ",", "\n", "dropout_rate", ":", "float", "=", "0.", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "super", "(", "VNet", ",", "self", ")", ".", "__init__", "(", "\n", "batch_sampler_id", "=", "batch_sampler_id", ",", "\n", "data_format", "=", "data_format", ",", "\n", "head_outcome_channels", "=", "duplication_num", ",", "\n", "forward_outcome_channels", "=", "duplication_num", ",", "\n", "**", "kwargs", ",", "\n", ")", "\n", "# To work properly, kernel_size must be odd", "\n", "if", "kernel_size", "%", "2", "==", "0", ":", "\n", "            ", "raise", "AssertionError", "(", "'kernel_size({}) must be odd'", ".", "format", "(", "kernel_size", ")", ")", "\n", "\n", "", "self", ".", "down", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_layer", ")", ":", "\n", "            ", "n_channel", "=", "(", "2", "**", "i", ")", "*", "duplication_num", "\n", "down_conv", "=", "DownConv", "(", "n_channel", ",", "kernel_size", ",", "conv_time", ",", "dropout_rate", ")", "\n", "self", ".", "down", ".", "append", "(", "down_conv", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "n_layer", "-", "1", ")", ":", "\n", "            ", "n_channel", "=", "(", "2", "**", "i", ")", "*", "duplication_num", "\n", "up_conv", "=", "UpConv", "(", "n_channel", "*", "2", ",", "n_channel", ",", "kernel_size", ",", "conv_time", ",", "dropout_rate", ")", "\n", "self", ".", "up", ".", "append", "(", "up_conv", ")", "\n", "\n", "", "n_channel", "=", "(", "2", "**", "(", "n_layer", "-", "1", ")", ")", "*", "duplication_num", "\n", "up_conv", "=", "UpConv", "(", "n_channel", "*", "2", ",", "n_channel", ",", "kernel_size", ",", "conv_time", ",", "dropout_rate", ")", "\n", "self", ".", "up", ".", "append", "(", "up_conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.VNet.forward_head": [[51, 57], ["utils.get_tensor_from_array", "utils.get_tensor_from_array.dim", "AssertionError"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array"], ["", "def", "forward_head", "(", "self", ",", "inp", ",", "data_idx", ")", ":", "\n", "        ", "x", "=", "get_tensor_from_array", "(", "inp", ")", "\n", "if", "x", ".", "dim", "(", ")", "!=", "5", ":", "\n", "            ", "raise", "AssertionError", "(", "'input must have shape (batch_size, channel, D, H, W),\\\n                                 but get {}'", ".", "format", "(", "x", ".", "shape", ")", ")", "\n", "", "return", "self", ".", "heads", "[", "data_idx", "]", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.VNet.forward": [[58, 68], ["zip", "down_layer", "x_out.append", "u"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "[", "x", "]", "\n", "for", "down_layer", "in", "self", ".", "down", ":", "\n", "            ", "x", "=", "down_layer", "(", "x", ")", "\n", "x_out", ".", "append", "(", "x", ")", "\n", "\n", "", "x_out", "=", "x_out", "[", ":", "-", "1", "]", "\n", "for", "x_down", ",", "u", "in", "zip", "(", "x_out", "[", ":", ":", "-", "1", "]", ",", "self", ".", "up", "[", ":", ":", "-", "1", "]", ")", ":", "\n", "            ", "x", "=", "u", "(", "x", ",", "x_down", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.VNet.build_heads": [[69, 78], ["torch.ModuleList", "torch.ModuleList", "v_net.Duplicate"], "methods", ["None"], ["", "def", "build_heads", "(", "self", ",", "input_channels", ":", "list", ",", "output_channel", ":", "int", ")", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "[", "\n", "Duplicate", "(", "\n", "input_channel", ",", "\n", "output_channel", ",", "\n", "self", ".", "kernel_size", ",", "\n", "self", ".", "dropout_rate", ",", "\n", ")", "\n", "for", "input_channel", "in", "input_channels", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.VNet.build_tails": [[80, 84], ["torch.ModuleList", "torch.ModuleList", "torch.Conv3d", "torch.Conv3d"], "methods", ["None"], ["", "def", "build_tails", "(", "self", ",", "input_channels", ",", "class_nums", ")", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Conv3d", "(", "input_channels", ",", "class_num", ",", "kernel_size", "=", "1", ")", "\n", "for", "class_num", "in", "class_nums", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.DownConv.__init__": [[94, 101], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Dropout3d", "torch.Dropout3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "v_net.ConvNTimes"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channel", ",", "kernel_size", ",", "conv_time", ",", "dropout_rate", ")", ":", "\n", "        ", "super", "(", "DownConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "output_channel", "=", "input_channel", "*", "2", "\n", "self", ".", "down_conv", "=", "nn", ".", "Conv3d", "(", "input_channel", ",", "output_channel", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "2", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout3d", "(", "p", "=", "dropout_rate", ")", "\n", "self", ".", "batch_norm", "=", "nn", ".", "BatchNorm3d", "(", "output_channel", ")", "\n", "self", ".", "conv_N_time", "=", "ConvNTimes", "(", "output_channel", ",", "kernel_size", ",", "conv_time", ",", "dropout_rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.DownConv.forward": [[102, 110], ["v_net.DownConv.down_conv", "v_net.DownConv.dropout", "torch.relu", "torch.relu", "v_net.DownConv.conv_N_time", "v_net.DownConv.batch_norm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "down_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "if", "self", ".", "dropout", ".", "p", "==", "0", ":", "\n", "            ", "x", "=", "self", ".", "batch_norm", "(", "x", ")", "\n", "", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_N_time", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.UpConv.__init__": [[120, 126], ["torch.Module.__init__", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.Dropout3d", "torch.Dropout3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "v_net.ConvNTimes"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "x1_channel", ",", "x2_channel", ",", "kernel_size", ",", "conv_time", ",", "dropout_rate", ")", ":", "\n", "        ", "super", "(", "UpConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up_conv", "=", "nn", ".", "ConvTranspose3d", "(", "x1_channel", ",", "x2_channel", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "2", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout3d", "(", "p", "=", "dropout_rate", ")", "\n", "self", ".", "batch_norm", "=", "nn", ".", "BatchNorm3d", "(", "x2_channel", ")", "\n", "self", ".", "conv_N_time", "=", "ConvNTimes", "(", "x2_channel", ",", "kernel_size", ",", "conv_time", ",", "dropout_rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.UpConv.forward": [[127, 149], ["v_net.UpConv.up_conv", "v_net.UpConv.dropout", "torch.relu", "torch.relu", "v_net.UpConv.conv_N_time", "v_net.UpConv.batch_norm", "torch.ConstantPad3d", "torch.ConstantPad3d", "torch.ConstantPad3d."], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "x1", "=", "self", ".", "up_conv", "(", "x1", ")", "\n", "\n", "x1", "=", "self", ".", "dropout", "(", "x1", ")", "\n", "if", "self", ".", "dropout", ".", "p", "==", "0", ":", "\n", "            ", "x1", "=", "self", ".", "batch_norm", "(", "x1", ")", "\n", "\n", "", "x1", "=", "F", ".", "relu", "(", "x1", ")", "\n", "if", "x1", ".", "shape", "!=", "x2", ".", "shape", ":", "\n", "# this case will only happen when", "\n", "# x1 [N, C, D-1, H-1, W-1]", "\n", "# x2 [N, C, D,   H,   W  ]", "\n", "            ", "p_d", "=", "x2", ".", "shape", "[", "2", "]", "-", "x1", ".", "shape", "[", "2", "]", "\n", "p_h", "=", "x2", ".", "shape", "[", "3", "]", "-", "x1", ".", "shape", "[", "3", "]", "\n", "p_w", "=", "x2", ".", "shape", "[", "4", "]", "-", "x1", ".", "shape", "[", "4", "]", "\n", "pad", "=", "nn", ".", "ConstantPad3d", "(", "(", "0", ",", "p_w", ",", "0", ",", "p_h", ",", "0", ",", "p_d", ")", ",", "0", ")", "\n", "x1", "=", "pad", "(", "x1", ")", "\n", "\n", "# x = torch.cat((x1, x2), 1)", "\n", "", "x", "=", "x1", "+", "x2", "\n", "x", "=", "self", ".", "conv_N_time", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.ConvNTimes.__init__": [[158, 175], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Dropout3d", "torch.Dropout3d", "range", "torch.Conv3d", "torch.Conv3d", "v_net.ConvNTimes.convs.append", "torch.BatchNorm3d", "torch.BatchNorm3d", "v_net.ConvNTimes.batchnorms.append"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel_num", ",", "kernel_size", ",", "N", ",", "dropout_rate", ")", ":", "\n", "        ", "super", "(", "ConvNTimes", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "batchnorms", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout3d", "(", "p", "=", "dropout_rate", ")", "\n", "\n", "for", "_", "in", "range", "(", "N", ")", ":", "\n", "            ", "conv", "=", "nn", ".", "Conv3d", "(", "\n", "channel_num", ",", "\n", "channel_num", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "kernel_size", "//", "2", ",", "\n", ")", "\n", "self", ".", "convs", ".", "append", "(", "conv", ")", "\n", "norm", "=", "nn", ".", "BatchNorm3d", "(", "channel_num", ")", "\n", "self", ".", "batchnorms", ".", "append", "(", "norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.ConvNTimes.forward": [[176, 184], ["zip", "conv", "v_net.ConvNTimes.dropout", "torch.relu", "torch.relu", "batchnorm"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "conv", ",", "batchnorm", "in", "zip", "(", "self", ".", "convs", ",", "self", ".", "batchnorms", ")", ":", "\n", "            ", "x", "=", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "if", "self", ".", "dropout", ".", "p", "==", "0", ":", "\n", "                ", "x", "=", "batchnorm", "(", "x", ")", "\n", "", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.Duplicate.__init__": [[193, 203], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Dropout3d", "torch.Dropout3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channel", ",", "duplication_num", ",", "kernel_size", ",", "dropout_rate", ")", ":", "\n", "        ", "super", "(", "Duplicate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "duplicate", "=", "nn", ".", "Conv3d", "(", "\n", "input_channel", ",", "\n", "duplication_num", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "kernel_size", "//", "2", ",", "\n", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout3d", "(", "p", "=", "dropout_rate", ")", "\n", "self", ".", "batch_norm", "=", "nn", ".", "BatchNorm3d", "(", "duplication_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.v_net.Duplicate.forward": [[204, 211], ["v_net.Duplicate.duplicate", "v_net.Duplicate.dropout", "torch.relu", "torch.relu", "v_net.Duplicate.batch_norm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "x", "=", "self", ".", "duplicate", "(", "inp", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "if", "self", ".", "dropout", ".", "p", "==", "0", ":", "\n", "            ", "x", "=", "self", ".", "batch_norm", "(", "x", ")", "\n", "", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.high_resolution_compact_network.HighResolutionCompactNetwork.__init__": [[9, 35], ["base.PytorchModelBase.__init__", "torch.nn.Sequential", "high_resolution_compact_network.CustomConv", "high_resolution_compact_network.CustomConv", "high_resolution_compact_network.CustomConv", "high_resolution_compact_network.CustomConv", "high_resolution_compact_network.CustomConv", "high_resolution_compact_network.CustomConv", "high_resolution_compact_network.CustomConv", "high_resolution_compact_network.CustomConv", "high_resolution_compact_network.CustomConv"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "data_format", ":", "dict", ",", "\n", "batch_sampler_id", "=", "'center_patch_96'", ",", "\n", "duplication_num", "=", "16", ",", "\n", "kernel_size", "=", "3", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "self", ".", "kernel_size", "=", "kernel_size", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "batch_sampler_id", "=", "batch_sampler_id", ",", "\n", "data_format", "=", "data_format", ",", "\n", "head_outcome_channels", "=", "duplication_num", ",", "\n", "forward_outcome_channels", "=", "duplication_num", ",", "\n", "**", "kwargs", ",", "\n", ")", "\n", "self", ".", "seq_layers", "=", "nn", ".", "Sequential", "(", "\n", "CustomConv", "(", "duplication_num", ",", "duplication_num", ")", ",", "\n", "CustomConv", "(", "duplication_num", ",", "duplication_num", ")", ",", "\n", "CustomConv", "(", "duplication_num", ",", "duplication_num", ")", ",", "\n", "CustomConv", "(", "duplication_num", ",", "duplication_num", ",", "dilation", "=", "2", ")", ",", "\n", "CustomConv", "(", "duplication_num", ",", "duplication_num", ",", "dilation", "=", "2", ")", ",", "\n", "CustomConv", "(", "duplication_num", ",", "duplication_num", ",", "dilation", "=", "2", ")", ",", "\n", "CustomConv", "(", "duplication_num", ",", "duplication_num", ",", "dilation", "=", "4", ")", ",", "\n", "CustomConv", "(", "duplication_num", ",", "duplication_num", ",", "dilation", "=", "4", ")", ",", "\n", "CustomConv", "(", "duplication_num", ",", "duplication_num", ",", "dilation", "=", "4", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.high_resolution_compact_network.HighResolutionCompactNetwork.forward_head": [[37, 43], ["utils.get_tensor_from_array", "utils.get_tensor_from_array.dim", "AssertionError"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array"], ["", "def", "forward_head", "(", "self", ",", "inp", ",", "data_idx", ")", ":", "\n", "        ", "x", "=", "get_tensor_from_array", "(", "inp", ")", "\n", "if", "x", ".", "dim", "(", ")", "!=", "5", ":", "\n", "            ", "raise", "AssertionError", "(", "'input must have shape (batch_size, channel, D, H, W),\\\n                                 but get {}'", ".", "format", "(", "x", ".", "shape", ")", ")", "\n", "", "return", "self", ".", "heads", "[", "data_idx", "]", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.high_resolution_compact_network.HighResolutionCompactNetwork.build_heads": [[44, 57], ["torch.nn.ModuleList", "torch.nn.Sequential", "torch.nn.Conv3d", "torch.nn.BatchNorm3d", "torch.nn.ReLU"], "methods", ["None"], ["", "def", "build_heads", "(", "self", ",", "input_channels", ":", "list", ",", "output_channel", ":", "int", ")", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "\n", "input_channel", ",", "\n", "output_channel", ",", "\n", "self", ".", "kernel_size", ",", "\n", "padding", "=", "self", ".", "kernel_size", "//", "2", ",", "\n", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "output_channel", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "for", "input_channel", "in", "input_channels", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.high_resolution_compact_network.HighResolutionCompactNetwork.forward": [[59, 62], ["high_resolution_compact_network.HighResolutionCompactNetwork.seq_layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "seq_layers", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.high_resolution_compact_network.HighResolutionCompactNetwork.build_tails": [[63, 67], ["torch.nn.ModuleList", "torch.nn.Conv3d"], "methods", ["None"], ["", "def", "build_tails", "(", "self", ",", "input_channels", ",", "class_nums", ")", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Conv3d", "(", "input_channels", ",", "class_num", ",", "kernel_size", "=", "1", ")", "\n", "for", "class_num", "in", "class_nums", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.high_resolution_compact_network.CustomConv.__init__": [[72, 95], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.Sequential", "torch.nn.ReLU", "torch.nn.Conv3d", "range", "torch.nn.BatchNorm3d", "torch.nn.Sequential"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "dilation", "=", "1", ",", "\n", "kernel_size", "=", "3", ",", "\n", "repeats", "=", "2", ",", "\n", "batch_norm", "=", "True", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm3d", "(", "in_channels", ")", "if", "batch_norm", "else", "nn", ".", "Sequential", "(", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv3d", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "dilation", "=", "dilation", ",", "\n", "padding", "=", "(", "dilation", "*", "(", "kernel_size", "-", "1", ")", ")", "//", "2", ",", "\n", ")", ",", "\n", ")", "\n", "for", "_", "in", "range", "(", "repeats", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.high_resolution_compact_network.CustomConv.forward": [[97, 102], ["layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "x", "=", "inp", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ")", "\n", "", "return", "x", "+", "inp", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.toy_model.ToyModel.__init__": [[10, 76], ["base.PytorchModelBase.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "toy_model.ToyModel.encoder_convs.append", "toy_model.ToyModel.encoder_batchnorms.append", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "toy_model.ToyModel.decoder_deconvs.append", "toy_model.ToyModel.decoder_batchnorms.append", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "data_format", ":", "dict", ",", "\n", "batch_sampler_id", ":", "str", "=", "'two_dim'", ",", "\n", "num_units", ":", "[", "int", "]", "=", "(", "32", ",", "32", ",", "64", ",", "64", ",", "128", ")", ",", "\n", "pooling_layer_num", ":", "[", "int", "]", "=", "(", "1", ",", "3", ")", ",", "\n", "kernel_size", ":", "int", "=", "3", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "self", ".", "kernel_size", "=", "kernel_size", "\n", "super", "(", "ToyModel", ",", "self", ")", ".", "__init__", "(", "\n", "batch_sampler_id", "=", "batch_sampler_id", ",", "\n", "data_format", "=", "data_format", ",", "\n", "head_outcome_channels", "=", "num_units", "[", "0", "]", ",", "\n", "forward_outcome_channels", "=", "num_units", "[", "0", "]", ",", "\n", "**", "kwargs", ",", "\n", ")", "\n", "self", ".", "image_chns", "=", "data_format", "[", "'channels'", "]", "\n", "self", ".", "image_height", "=", "data_format", "[", "'height'", "]", "\n", "self", ".", "image_width", "=", "data_format", "[", "'width'", "]", "\n", "self", ".", "class_num", "=", "data_format", "[", "'class_num'", "]", "\n", "\n", "encoder_num_units", "=", "num_units", "\n", "self", ".", "encoder_convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "encoder_batchnorms", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "encoder_num_units", ")", "-", "1", ")", ":", "\n", "            ", "if", "idx", "in", "pooling_layer_num", ":", "\n", "                ", "stride", "=", "2", "\n", "", "else", ":", "\n", "                ", "stride", "=", "1", "\n", "", "in_chns", "=", "encoder_num_units", "[", "idx", "]", "\n", "out_chns", "=", "encoder_num_units", "[", "idx", "+", "1", "]", "\n", "conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_chns", ",", "\n", "out_chns", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "kernel_size", "//", "2", ",", "\n", ")", "\n", "batchnorm", "=", "nn", ".", "BatchNorm2d", "(", "in_chns", ")", "\n", "self", ".", "encoder_convs", ".", "append", "(", "conv", ")", "\n", "self", ".", "encoder_batchnorms", ".", "append", "(", "batchnorm", ")", "\n", "\n", "", "decoder_num_units", "=", "num_units", "[", ":", ":", "-", "1", "]", "\n", "self", ".", "decoder_deconvs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "decoder_batchnorms", "=", "nn", ".", "ModuleList", "(", ")", "\n", "img_size", "=", "self", ".", "image_height", "//", "(", "2", "**", "len", "(", "pooling_layer_num", ")", ")", "\n", "for", "idx", "in", "range", "(", "(", "len", "(", "decoder_num_units", ")", ")", "-", "1", ")", ":", "\n", "            ", "if", "idx", "in", "pooling_layer_num", ":", "\n", "                ", "stride", "=", "2", "\n", "img_size", "=", "img_size", "*", "2", "\n", "output_padding", "=", "1", "\n", "", "else", ":", "\n", "                ", "stride", "=", "1", "\n", "output_padding", "=", "0", "\n", "", "deconv", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "decoder_num_units", "[", "idx", "]", ",", "\n", "decoder_num_units", "[", "idx", "+", "1", "]", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "kernel_size", "//", "2", ",", "\n", "output_padding", "=", "output_padding", ",", "\n", ")", "\n", "batchnorm", "=", "nn", ".", "BatchNorm2d", "(", "decoder_num_units", "[", "idx", "]", ")", "\n", "self", ".", "decoder_deconvs", ".", "append", "(", "deconv", ")", "\n", "self", ".", "decoder_batchnorms", ".", "append", "(", "batchnorm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.toy_model.ToyModel.forward_head": [[77, 82], ["utils.normalize_batch_image", "utils.get_tensor_from_array"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.normalize_batch_image", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array"], ["", "", "def", "forward_head", "(", "self", ",", "inp", ",", "data_idx", ":", "int", ")", ":", "\n", "        ", "inp", "=", "inp", "[", "'slice'", "]", "\n", "x", "=", "normalize_batch_image", "(", "inp", ")", "\n", "x", "=", "get_tensor_from_array", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.toy_model.ToyModel.forward": [[83, 94], ["zip", "zip", "batchnorm", "torch.relu", "torch.relu", "conv", "batchnorm", "torch.relu", "torch.relu", "deconv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "conv", ",", "batchnorm", "in", "zip", "(", "self", ".", "encoder_convs", ",", "self", ".", "encoder_batchnorms", ")", ":", "\n", "            ", "x", "=", "batchnorm", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "conv", "(", "x", ")", "\n", "\n", "", "for", "deconv", ",", "batchnorm", "in", "zip", "(", "self", ".", "decoder_deconvs", ",", "self", ".", "decoder_batchnorms", ")", ":", "\n", "            ", "x", "=", "batchnorm", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "deconv", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.toy_model.ToyModel.build_heads": [[95, 99], ["torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["", "def", "build_heads", "(", "self", ",", "input_channels", ":", "list", ",", "output_channel", ":", "int", ")", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "\n", "nn", ".", "Conv2d", "(", "input_channel", ",", "output_channel", ",", "kernel_size", "=", "self", ".", "kernel_size", ")", "\n", "for", "input_channel", "in", "input_channels", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.toy_model.ToyModel.build_tails": [[101, 105], ["torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["", "def", "build_tails", "(", "self", ",", "input_channels", ",", "class_nums", ")", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "class_num", ",", "kernel_size", "=", "1", ")", "\n", "for", "class_num", "in", "class_nums", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.normalize_batch_image": [[5, 12], ["numpy.std", "numpy.mean", "std_is_zero.astype"], "function", ["None"], ["\n", "epsilon", "=", "1e-8", "\n", "\n", "\n", "def", "highlight_print", "(", "msg", ",", "highlight_len", "=", "30", ")", ":", "\n", "    ", "print", "(", "'#'", "*", "highlight_len", ")", "\n", "print", "(", "msg", ")", "\n", "print", "(", "'#'", "*", "highlight_len", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.co_shuffle": [[14, 19], ["numpy.random.permutation", "len", "len", "len"], "function", ["None"], ["\n", "", "def", "get_2d_from_3d", "(", "batch_volume", ")", ":", "\n", "    ", "assert", "(", "batch_volume", ".", "ndim", "==", "4", "or", "batch_volume", ".", "ndim", "==", "5", ")", "\n", "if", "batch_volume", ".", "ndim", "==", "5", ":", "\n", "        ", "batch_volume", "=", "np", ".", "transpose", "(", "batch_volume", ",", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ")", "\n", "batch_image", "=", "batch_volume", ".", "reshape", "(", "-", "1", ",", "*", "batch_volume", ".", "shape", "[", "-", "3", ":", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array": [[21, 29], ["torch.Tensor", "torch.cuda.is_available", "array.astype.astype", "tensor.cuda.cuda"], "function", ["None"], ["        ", "batch_image", "=", "batch_volume", ".", "reshape", "(", "-", "1", ",", "*", "batch_volume", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "", "return", "batch_image", "\n", "\n", "\n", "", "def", "get_3d_from_2d", "(", "batch_image", ",", "data_depth", ")", ":", "\n", "    ", "assert", "(", "batch_image", ".", "ndim", "==", "3", "or", "batch_image", ".", "ndim", "==", "4", ")", "\n", "if", "batch_image", ".", "ndim", "==", "3", ":", "\n", "        ", "batch_volume", "=", "batch_image", ".", "reshape", "(", "-", "1", ",", "data_depth", ",", "*", "batch_image", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.summarize_logs": [[31, 41], ["logs[].keys", "len", "len", "numpy.mean"], "function", ["None"], ["batch_volume", "=", "batch_volume", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", ",", "4", "]", ")", "\n", "", "return", "batch_volume", "\n", "\n", "\n", "", "def", "parse_exp_id", "(", "exp_id_string", ")", ":", "\n", "    ", "splits", "=", "exp_id_string", ".", "split", "(", "'_on_'", ")", "\n", "model_id", "=", "splits", "[", "0", "]", "\n", "data_id", "=", "'_'", ".", "join", "(", "splits", "[", "-", "1", "]", ".", "split", "(", "'_'", ")", "[", ":", "-", "1", "]", ")", "\n", "time_stamp", "=", "splits", "[", "-", "1", "]", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", "\n", "return", "model_id", ",", "data_id", ",", "time_stamp", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UNet.__init__": [[11, 63], ["base.PytorchModelBase.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "range", "u_net.DownConv", "u_net.UNet.down_layers.append", "range", "up_conv_class", "u_net.UNet.up_layers.append", "u_net.SelfAttention", "range"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "data_format", ":", "dict", ",", "\n", "batch_sampler_id", ":", "str", "=", "'two_dim'", ",", "\n", "floor_num", ":", "int", "=", "4", ",", "\n", "kernel_size", ":", "int", "=", "3", ",", "\n", "channel_num", ":", "int", "=", "64", ",", "\n", "conv_times", ":", "int", "=", "2", ",", "\n", "use_position", "=", "False", ",", "\n", "dropout_rate", ":", "int", "=", "0.", ",", "\n", "attention", ":", "bool", "=", "False", ",", "\n", "self_attention", ":", "int", "=", "0", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "conv_times", "=", "conv_times", "\n", "self", ".", "use_position", "=", "use_position", "\n", "super", "(", "UNet", ",", "self", ")", ".", "__init__", "(", "\n", "batch_sampler_id", "=", "batch_sampler_id", ",", "\n", "data_format", "=", "data_format", ",", "\n", "forward_outcome_channels", "=", "channel_num", ",", "\n", "head_outcome_channels", "=", "channel_num", ",", "\n", "**", "kwargs", ",", "\n", ")", "\n", "self", ".", "floor_num", "=", "floor_num", "\n", "image_chns", "=", "data_format", "[", "'channels'", "]", "\n", "if", "use_position", ":", "\n", "            ", "image_chns", "+=", "1", "\n", "", "self", ".", "down_layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "up_layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "self", ".", "self_attention_module", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "SelfAttention", "(", "in_dim", "=", "2", "**", "floor_num", "*", "channel_num", ")", "\n", "for", "_", "in", "range", "(", "self_attention", ")", "\n", "]", ")", "\n", "\n", "for", "floor_idx", "in", "range", "(", "floor_num", ")", ":", "\n", "            ", "channel_times", "=", "2", "**", "floor_idx", "\n", "d", "=", "DownConv", "(", "channel_num", "*", "channel_times", ",", "kernel_size", ",", "conv_times", ",", "self", ".", "dropout_rate", ")", "\n", "self", ".", "down_layers", ".", "append", "(", "d", ")", "\n", "\n", "", "for", "floor_idx", "in", "range", "(", "floor_num", ")", "[", ":", ":", "-", "1", "]", ":", "\n", "            ", "channel_times", "=", "2", "**", "floor_idx", "\n", "up_conv_class", "=", "AttentionUpConv", "if", "attention", "else", "UpConv", "\n", "u", "=", "up_conv_class", "(", "\n", "channel_num", "*", "2", "*", "channel_times", ",", "\n", "kernel_size", ",", "\n", "conv_times", ",", "\n", "self", ".", "dropout_rate", ",", "\n", ")", "\n", "self", ".", "up_layers", ".", "append", "(", "u", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UNet.forward_head": [[64, 77], ["utils.normalize_batch_image", "utils.get_tensor_from_array", "utils.get_tensor_from_array", "pos.expand.expand.view", "pos.expand.expand.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.normalize_batch_image", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array"], ["", "", "def", "forward_head", "(", "self", ",", "inp", ",", "data_idx", ")", ":", "\n", "        ", "inp", ",", "pos", "=", "inp", "[", "'slice'", "]", ",", "inp", "[", "'position'", "]", "\n", "x", "=", "normalize_batch_image", "(", "inp", ")", "\n", "x", "=", "get_tensor_from_array", "(", "x", ")", "\n", "\n", "if", "self", ".", "use_position", ":", "\n", "            ", "pos", "=", "get_tensor_from_array", "(", "pos", ")", "\n", "pos", "=", "pos", ".", "view", "(", "pos", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", "\n", "pos", "=", "pos", ".", "expand", "(", "-", "1", ",", "1", ",", "x", ".", "shape", "[", "-", "2", "]", ",", "x", ".", "shape", "[", "-", "1", "]", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "pos", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "x", "=", "self", ".", "heads", "[", "data_idx", "]", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UNet.forward": [[78, 89], ["u_net.UNet.self_attention_module", "zip", "down_layer", "x_out.append", "u"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "[", "x", "]", "\n", "for", "down_layer", "in", "self", ".", "down_layers", ":", "\n", "            ", "x", "=", "down_layer", "(", "x", ")", "\n", "x_out", ".", "append", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "self_attention_module", "(", "x", ")", "\n", "x_out", "=", "x_out", "[", ":", "-", "1", "]", "\n", "for", "x_down", ",", "u", "in", "zip", "(", "x_out", "[", ":", ":", "-", "1", "]", ",", "self", ".", "up_layers", ")", ":", "\n", "            ", "x", "=", "u", "(", "x", ",", "x_down", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UNet.build_heads": [[90, 102], ["torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "u_net.ConvNTimes"], "methods", ["None"], ["", "def", "build_heads", "(", "self", ",", "input_channels", ":", "list", ",", "output_channel", ":", "int", ")", ":", "\n", "        ", "if", "self", ".", "use_position", ":", "\n", "            ", "input_channels", "=", "[", "chn", "+", "1", "for", "chn", "in", "input_channels", "]", "\n", "", "return", "nn", ".", "ModuleList", "(", "[", "\n", "ConvNTimes", "(", "\n", "input_channel", ",", "\n", "output_channel", ",", "\n", "self", ".", "kernel_size", ",", "\n", "self", ".", "conv_times", ",", "\n", "self", ".", "dropout_rate", ",", "\n", ")", "\n", "for", "input_channel", "in", "input_channels", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UNet.build_tails": [[104, 117], ["torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "u_net.ConvNTimes", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["", "def", "build_tails", "(", "self", ",", "input_channels", ",", "class_nums", ")", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Sequential", "(", "\n", "ConvNTimes", "(", "\n", "input_channels", ",", "\n", "input_channels", ",", "\n", "self", ".", "kernel_size", ",", "\n", "self", ".", "conv_times", ",", "\n", "self", ".", "dropout_rate", ",", "\n", ")", ",", "\n", "nn", ".", "Conv2d", "(", "input_channels", ",", "class_num", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n", "for", "class_num", "in", "class_nums", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.ConvNTimes.__init__": [[122, 138], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range", "range", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "u_net.ConvNTimes.convs.append", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "u_net.ConvNTimes.norms.append"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ",", "kernel_size", ",", "conv_times", ",", "dropout_rate", ")", ":", "\n", "        ", "super", "(", "ConvNTimes", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "(", "conv_times", ">", "0", ")", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "norms", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "conv_times", "=", "conv_times", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout2d", "(", "p", "=", "dropout_rate", ")", "\n", "\n", "self", ".", "in_conv", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "kernel_size", ",", "padding", "=", "kernel_size", "//", "2", ")", "\n", "for", "_", "in", "range", "(", "conv_times", "-", "1", ")", ":", "\n", "            ", "conv", "=", "nn", ".", "Conv2d", "(", "out_ch", ",", "out_ch", ",", "kernel_size", ",", "padding", "=", "kernel_size", "//", "2", ")", "\n", "self", ".", "convs", ".", "append", "(", "conv", ")", "\n", "", "for", "_", "in", "range", "(", "conv_times", ")", ":", "\n", "            ", "norm", "=", "nn", ".", "InstanceNorm2d", "(", "out_ch", ")", "\n", "self", ".", "norms", ".", "append", "(", "norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.ConvNTimes.forward": [[139, 151], ["u_net.ConvNTimes.in_conv", "zip", "conv", "u_net.ConvNTimes.dropout", "torch.relu", "torch.relu", "torch.relu", "norm"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "inp", "=", "self", ".", "in_conv", "(", "inp", ")", "\n", "x", "=", "inp", "\n", "for", "conv", ",", "norm", "in", "zip", "(", "self", ".", "convs", ",", "self", ".", "norms", ")", ":", "\n", "            ", "x", "=", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "if", "self", ".", "dropout", ".", "p", "==", "0.", ":", "\n", "                ", "x", "=", "norm", "(", "x", ")", "\n", "", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "", "x", "=", "(", "x", "+", "inp", ")", "/", "2", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.DownConv.__init__": [[155, 161], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "u_net.ConvNTimes"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "kernel_size", ",", "conv_times", ",", "dropout_rate", ")", ":", "\n", "        ", "out_ch", "=", "in_ch", "*", "2", "\n", "super", "(", "DownConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mpconv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "\n", "ConvNTimes", "(", "in_ch", ",", "out_ch", ",", "kernel_size", ",", "conv_times", ",", "dropout_rate", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.DownConv.forward": [[163, 166], ["u_net.DownConv.mpconv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "mpconv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UpConv.__init__": [[170, 181], ["torch.Module.__init__", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "u_net.ConvNTimes"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "kernel_size", ",", "conv_times", ",", "dropout_rate", ")", ":", "\n", "        ", "super", "(", "UpConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "out_ch", "=", "in_ch", "//", "2", "\n", "self", ".", "conv_transpose", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "in_ch", ",", "\n", "out_ch", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "kernel_size", "//", "2", ",", "\n", "stride", "=", "2", ",", "\n", ")", "\n", "self", ".", "conv", "=", "ConvNTimes", "(", "in_ch", ",", "out_ch", ",", "kernel_size", ",", "conv_times", ",", "dropout_rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.UpConv.forward": [[182, 190], ["u_net.UpConv.conv_transpose", "torch.pad", "torch.pad", "torch.pad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "u_net.UpConv.conv", "x_up.size", "torch.pad.size", "x_up.size", "torch.pad.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_down", ",", "x_up", ")", ":", "\n", "        ", "x_down", "=", "self", ".", "conv_transpose", "(", "x_down", ")", "\n", "diff_x", "=", "x_up", ".", "size", "(", ")", "[", "2", "]", "-", "x_down", ".", "size", "(", ")", "[", "2", "]", "\n", "diff_y", "=", "x_up", ".", "size", "(", ")", "[", "3", "]", "-", "x_down", ".", "size", "(", ")", "[", "3", "]", "\n", "x_down", "=", "F", ".", "pad", "(", "x_down", ",", "[", "0", ",", "diff_x", ",", "0", ",", "diff_y", "]", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x_down", ",", "x_up", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.AttentionUpConv.__init__": [[194, 221], ["torch.Module.__init__", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "u_net.ConvNTimes"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "kernel_size", ",", "conv_times", ",", "dropout_rate", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_ch", "=", "in_ch", "//", "2", "\n", "self", ".", "conv_transpose", "=", "nn", ".", "ConvTranspose2d", "(", "\n", "in_ch", ",", "\n", "out_ch", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "kernel_size", "//", "2", ",", "\n", "stride", "=", "2", ",", "\n", ")", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "out_ch", ",", "\n", "out_channels", "=", "out_ch", ",", "\n", "kernel_size", "=", "1", ",", "\n", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "out_ch", ",", "\n", "out_channels", "=", "out_ch", ",", "\n", "kernel_size", "=", "1", ",", "\n", ")", "\n", "self", ".", "attention_conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "out_ch", ",", "\n", "out_channels", "=", "1", ",", "\n", "kernel_size", "=", "1", ",", "\n", ")", "\n", "self", ".", "n_conv", "=", "ConvNTimes", "(", "\n", "in_ch", ",", "out_ch", ",", "kernel_size", ",", "conv_times", ",", "dropout_rate", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.AttentionUpConv.forward": [[223, 236], ["u_net.AttentionUpConv.conv_transpose", "torch.pad", "torch.pad", "torch.pad", "u_net.AttentionUpConv.query_conv", "u_net.AttentionUpConv.key_conv", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "u_net.AttentionUpConv.n_conv", "u_net.AttentionUpConv.attention_conv", "x_down.size", "torch.pad.size", "x_down.size", "torch.pad.size", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "x_down", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv_transpose", "(", "x", ")", "\n", "diff_x", "=", "x_down", ".", "size", "(", ")", "[", "2", "]", "-", "x", ".", "size", "(", ")", "[", "2", "]", "\n", "diff_y", "=", "x_down", ".", "size", "(", ")", "[", "3", "]", "-", "x", ".", "size", "(", ")", "[", "3", "]", "\n", "x", "=", "F", ".", "pad", "(", "x", ",", "[", "0", ",", "diff_x", ",", "0", ",", "diff_y", "]", ")", "\n", "\n", "q", "=", "self", ".", "query_conv", "(", "x", ")", "\n", "k", "=", "self", ".", "key_conv", "(", "x_down", ")", "\n", "attention", "=", "torch", ".", "sigmoid", "(", "self", ".", "attention_conv", "(", "F", ".", "relu", "(", "q", "+", "k", ")", ")", ")", "\n", "value", "=", "x_down", "*", "attention", "\n", "concat", "=", "torch", ".", "cat", "(", "[", "x", ",", "value", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "n_conv", "(", "concat", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.SelfAttention.__init__": [[244, 252], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "chanel_in", "=", "in_dim", "\n", "self", ".", "query_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", "//", "8", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.u_net.SelfAttention.forward": [[253, 277], ["x.size", "u_net.SelfAttention.query_conv().view().permute", "u_net.SelfAttention.key_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "u_net.SelfAttention.softmax", "u_net.SelfAttention.value_conv().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.view.view.view", "u_net.SelfAttention.permute", "u_net.SelfAttention.query_conv().view", "u_net.SelfAttention.key_conv", "u_net.SelfAttention.value_conv", "u_net.SelfAttention.query_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X W X H)\n            returns :\n                out : self attention value + input feature\n                attention: B X N X N (N is Width*Height)\n        \"\"\"", "\n", "m_batchsize", ",", "C", ",", "width", ",", "height", "=", "x", ".", "size", "(", ")", "\n", "proj_query", "=", "self", ".", "query_conv", "(", "x", ")", ".", "view", "(", "\n", "m_batchsize", ",", "\n", "-", "1", ",", "\n", "width", "*", "height", "\n", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "# B X CX(N)", "\n", "proj_key", "=", "self", ".", "key_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", "# B X C x (*W*H)", "\n", "energy", "=", "torch", ".", "bmm", "(", "proj_query", ",", "proj_key", ")", "# transpose check", "\n", "attention", "=", "self", ".", "softmax", "(", "energy", ")", "# BX (N) X (N)", "\n", "proj_value", "=", "self", ".", "value_conv", "(", "x", ")", ".", "view", "(", "m_batchsize", ",", "-", "1", ",", "width", "*", "height", ")", "# B X C X N", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "proj_value", ",", "attention", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "m_batchsize", ",", "C", ",", "width", ",", "height", ")", "\n", "\n", "out", "=", "self", ".", "gamma", "*", "out", "+", "x", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.loss_functions.dice.naive_soft_dice_score": [[10, 33], ["torch.softmax", "utils.get_tensor_from_array", "F.softmax.view", "utils.get_tensor_from_array.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "ValueError", "ValueError", "torch.mean.item"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array"], ["def", "naive_soft_dice_score", "(", "logits", ":", "torch", ".", "Tensor", ",", "onehot_tar", ":", "np", ".", "array", ")", ":", "\n", "    ", "pred", "=", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "if", "not", "pred", ".", "shape", "==", "onehot_tar", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "f'Shape mismatch in pred and tar, got {pred.shape} and {onehot_tar.shape}'", ")", "\n", "", "if", "not", "pred", ".", "shape", "[", "1", "]", ">", "1", ":", "\n", "        ", "raise", "ValueError", "(", "f'Number of channels should be greater than 1, '", "\n", "f'got data with shape {pred.shape}'", ")", "\n", "", "onehot_tar", "=", "get_tensor_from_array", "(", "onehot_tar", ")", "\n", "\n", "# Strip background", "\n", "pred", "=", "pred", "[", ":", ",", "1", ":", "]", "\n", "onehot_tar", "=", "onehot_tar", "[", ":", ",", "1", ":", "]", "\n", "\n", "m1", "=", "pred", ".", "view", "(", "pred", ".", "shape", "[", "0", "]", ",", "pred", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "m2", "=", "onehot_tar", ".", "view", "(", "onehot_tar", ".", "shape", "[", "0", "]", ",", "onehot_tar", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "intersection", "=", "m1", "*", "m2", "\n", "\n", "m1", "=", "torch", ".", "sum", "(", "m1", "**", "2", ",", "dim", "=", "2", ")", "\n", "m2", "=", "torch", ".", "sum", "(", "m2", "**", "2", ",", "dim", "=", "2", ")", "\n", "intersection", "=", "torch", ".", "sum", "(", "intersection", ",", "dim", "=", "2", ")", "\n", "dice_score", "=", "(", "2.", "*", "intersection", "+", "epsilon", ")", "/", "(", "m1", "+", "m2", "+", "epsilon", ")", "\n", "dice_score", "=", "torch", ".", "mean", "(", "dice_score", ")", "\n", "return", "dice_score", ",", "{", "'soft_dice'", ":", "dice_score", ".", "item", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.loss_functions.dice.generalized_soft_dice_score": [[35, 60], ["torch.softmax", "utils.get_tensor_from_array", "utils.get_tensor_from_array", "F.softmax.view", "utils.get_tensor_from_array.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "ValueError", "ValueError", "utils.GetClassWeights", "torch.mean.item"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array"], ["", "def", "generalized_soft_dice_score", "(", "logits", ":", "torch", ".", "Tensor", ",", "onehot_tar", ":", "np", ".", "array", ")", ":", "\n", "    ", "pred", "=", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "if", "not", "pred", ".", "shape", "==", "onehot_tar", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "f'Shape mismatch in pred and tar, got {pred.shape} and {onehot_tar.shape}'", ")", "\n", "", "if", "not", "pred", ".", "shape", "[", "1", "]", ">", "1", ":", "\n", "        ", "raise", "ValueError", "(", "f'Number of channels should be greater than 1, '", "\n", "f'got data with shape {pred.shape}'", ")", "\n", "\n", "", "class_weights", "=", "GetClassWeights", "(", ")", "(", "onehot_tar", ",", "onehot", "=", "True", ")", "**", "2", "\n", "class_weights", "=", "get_tensor_from_array", "(", "class_weights", ")", "\n", "onehot_tar", "=", "get_tensor_from_array", "(", "onehot_tar", ")", "\n", "\n", "m1", "=", "pred", ".", "view", "(", "pred", ".", "shape", "[", "0", "]", ",", "pred", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "m2", "=", "onehot_tar", ".", "view", "(", "onehot_tar", ".", "shape", "[", "0", "]", ",", "onehot_tar", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "intersection", "=", "m1", "*", "m2", "\n", "\n", "m1", "=", "torch", ".", "sum", "(", "m1", "**", "2", ",", "dim", "=", "2", ")", "\n", "m2", "=", "torch", ".", "sum", "(", "m2", "**", "2", ",", "dim", "=", "2", ")", "\n", "intersection", "=", "torch", ".", "sum", "(", "intersection", ",", "dim", "=", "2", ")", "\n", "\n", "num", "=", "torch", ".", "sum", "(", "2.", "*", "intersection", "*", "class_weights", "+", "epsilon", ",", "dim", "=", "-", "1", ")", "\n", "denom", "=", "torch", ".", "sum", "(", "(", "m1", "+", "m2", ")", "*", "class_weights", "+", "epsilon", ",", "dim", "=", "-", "1", ")", "\n", "\n", "dice_score", "=", "torch", ".", "mean", "(", "num", "/", "denom", ")", "\n", "return", "dice_score", ",", "{", "'soft_dice'", ":", "dice_score", ".", "item", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.loss_functions.dice.my_soft_dice_score": [[62, 85], ["torch.softmax", "utils.get_tensor_from_array", "F.softmax.view", "utils.get_tensor_from_array.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "ValueError", "ValueError", "torch.mean.item"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array"], ["", "def", "my_soft_dice_score", "(", "logits", ":", "torch", ".", "Tensor", ",", "onehot_tar", ":", "np", ".", "array", ")", ":", "\n", "    ", "pred", "=", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "if", "not", "pred", ".", "shape", "==", "onehot_tar", ".", "shape", ":", "\n", "        ", "raise", "ValueError", "(", "f'Shape mismatch in pred and tar, got {pred.shape} and {onehot_tar.shape}'", ")", "\n", "", "if", "not", "pred", ".", "shape", "[", "1", "]", ">", "1", ":", "\n", "        ", "raise", "ValueError", "(", "f'Number of channels should be greater than 1, '", "\n", "f'got data with shape {pred.shape}'", ")", "\n", "", "onehot_tar", "=", "get_tensor_from_array", "(", "onehot_tar", ")", "\n", "\n", "# Strip background", "\n", "pred", "=", "pred", "[", ":", ",", "1", ":", "]", "\n", "onehot_tar", "=", "onehot_tar", "[", ":", ",", "1", ":", "]", "\n", "\n", "m1", "=", "pred", ".", "view", "(", "pred", ".", "shape", "[", "0", "]", ",", "pred", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "m2", "=", "onehot_tar", ".", "view", "(", "onehot_tar", ".", "shape", "[", "0", "]", ",", "onehot_tar", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "intersection", "=", "m1", "*", "m2", "\n", "\n", "m1", "=", "torch", ".", "sum", "(", "m1", "**", "2", ")", "\n", "m2", "=", "torch", ".", "sum", "(", "m2", "**", "2", ")", "\n", "intersection", "=", "torch", ".", "sum", "(", "intersection", ")", "\n", "\n", "dice_score", "=", "torch", ".", "mean", "(", "(", "2.", "*", "intersection", "+", "epsilon", ")", "/", "(", "m1", "+", "m2", "+", "epsilon", ")", ")", "\n", "return", "dice_score", ",", "{", "'soft_dice'", ":", "dice_score", ".", "item", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.loss_functions.misc.ce_minus_log_dice": [[11, 20], ["misc.weighted_cross_entropy", "utils.to_one_hot_label", "dice_fn", "torch.log"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.loss_functions.misc.weighted_cross_entropy", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.to_one_hot_label"], ["def", "ce_minus_log_dice", "(", "logits", ":", "torch", ".", "Tensor", ",", "tar", ":", "np", ".", "array", ",", "dice_type", ":", "str", "=", "'my'", ")", ":", "\n", "    ", "crossentropy_loss", ",", "log_1", "=", "weighted_cross_entropy", "(", "logits", ",", "tar", ")", "\n", "\n", "dice_fn", "=", "dice_score_hub", "[", "dice_type", "]", "\n", "onehot_tar", "=", "to_one_hot_label", "(", "tar", ",", "class_num", "=", "logits", ".", "shape", "[", "1", "]", ")", "\n", "dice_score", ",", "log_2", "=", "dice_fn", "(", "logits", ",", "onehot_tar", ")", "\n", "\n", "total_loss", "=", "crossentropy_loss", "-", "torch", ".", "log", "(", "dice_score", ")", "\n", "return", "total_loss", ",", "{", "**", "log_1", ",", "**", "log_2", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.loss_functions.misc.weighted_cross_entropy": [[22, 28], ["models.utils.get_tensor_from_array", "models.utils.get_tensor_from_array().long", "utils.GetClassWeights", "torch.nn.CrossEntropyLoss", "models.utils.get_tensor_from_array", "loss.item"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.get_tensor_from_array"], ["", "def", "weighted_cross_entropy", "(", "logits", ":", "torch", ".", "Tensor", ",", "target", ":", "np", ".", "array", ")", ":", "\n", "    ", "weights", "=", "GetClassWeights", "(", ")", "(", "target", ",", "class_num", "=", "logits", ".", "shape", "[", "1", "]", ")", "\n", "weights", "=", "get_tensor_from_array", "(", "weights", ")", "\n", "target", "=", "get_tensor_from_array", "(", "target", ")", ".", "long", "(", ")", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", "weight", "=", "weights", ")", "(", "logits", ",", "target", ")", "\n", "return", "loss", ",", "{", "'crossentropy_loss'", ":", "loss", ".", "item", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.loss_functions.misc.minus_dice": [[30, 35], ["utils.to_one_hot_label", "dice_fn"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.to_one_hot_label"], ["", "def", "minus_dice", "(", "logits", ":", "torch", ".", "Tensor", ",", "tar", ":", "np", ".", "array", ",", "dice_type", ":", "str", "=", "'my'", ")", ":", "\n", "    ", "onehot_tar", "=", "to_one_hot_label", "(", "tar", ",", "class_num", "=", "logits", ".", "shape", "[", "1", "]", ")", "\n", "dice_fn", "=", "dice_score_hub", "[", "dice_type", "]", "\n", "dice_score", ",", "log", "=", "dice_fn", "(", "logits", ",", "onehot_tar", ")", "\n", "return", "-", "dice_score", ",", "log", "\n", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.loss_functions.utils.GetClassWeights.__call__": [[8, 32], ["numpy.divide", "numpy.unique", "numpy.zeros", "zip", "numpy.swapaxes().reshape().mean", "numpy.ones", "numpy.swapaxes().reshape", "numpy.swapaxes"], "methods", ["None"], ["\n", "def", "highlight_print", "(", "msg", ",", "highlight_len", "=", "30", ")", ":", "\n", "    ", "print", "(", "'#'", "*", "highlight_len", ")", "\n", "print", "(", "msg", ")", "\n", "print", "(", "'#'", "*", "highlight_len", ")", "\n", "\n", "\n", "", "def", "get_2d_from_3d", "(", "batch_volume", ")", ":", "\n", "    ", "assert", "(", "batch_volume", ".", "ndim", "==", "4", "or", "batch_volume", ".", "ndim", "==", "5", ")", "\n", "if", "batch_volume", ".", "ndim", "==", "5", ":", "\n", "        ", "batch_volume", "=", "np", ".", "transpose", "(", "batch_volume", ",", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ")", "\n", "batch_image", "=", "batch_volume", ".", "reshape", "(", "-", "1", ",", "*", "batch_volume", ".", "shape", "[", "-", "3", ":", "]", ")", "\n", "", "else", ":", "\n", "        ", "batch_image", "=", "batch_volume", ".", "reshape", "(", "-", "1", ",", "*", "batch_volume", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "", "return", "batch_image", "\n", "\n", "\n", "", "def", "get_3d_from_2d", "(", "batch_image", ",", "data_depth", ")", ":", "\n", "    ", "assert", "(", "batch_image", ".", "ndim", "==", "3", "or", "batch_image", ".", "ndim", "==", "4", ")", "\n", "if", "batch_image", ".", "ndim", "==", "3", ":", "\n", "        ", "batch_volume", "=", "batch_image", ".", "reshape", "(", "-", "1", ",", "data_depth", ",", "*", "batch_image", ".", "shape", "[", "-", "2", ":", "]", ")", "\n", "", "else", ":", "\n", "        ", "batch_volume", "=", "batch_image", ".", "reshape", "(", "-", "1", ",", "data_depth", ",", "*", "batch_image", ".", "shape", "[", "-", "3", ":", "]", ")", "\n", "batch_volume", "=", "batch_volume", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", ",", "4", "]", ")", "\n", "", "return", "batch_volume", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test.LossFunctionTestCase.setUp": [[16, 27], ["numpy.random.random", "torch.softmax().data.numpy", "torch.softmax().data.numpy", "numpy.random.choice", "utils.to_one_hot_label", "torch.softmax", "torch.softmax", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.to_one_hot_label"], ["    ", "def", "setUp", "(", "self", ")", ":", "\n", "        ", "N", ",", "C", ",", "D", ",", "H", ",", "W", "=", "1", ",", "3", ",", "5", ",", "7", ",", "9", "\n", "self", ".", "class_num", "=", "C", "\n", "self", ".", "logits", "=", "np", ".", "random", ".", "random", "(", "(", "N", ",", "C", ",", "D", ",", "H", ",", "W", ")", ")", "\n", "self", ".", "pred", "=", "F", ".", "softmax", "(", "torch", ".", "Tensor", "(", "self", ".", "logits", ")", ",", "dim", "=", "1", ")", ".", "data", ".", "numpy", "(", ")", "\n", "self", ".", "tar_ids", "=", "np", ".", "random", ".", "choice", "(", "\n", "[", "0", ",", "1", ",", "2", "]", ",", "\n", "size", "=", "(", "N", ",", "D", ",", "H", ",", "W", ")", ",", "\n", "p", "=", "[", "0.5", ",", "0.4", ",", "0.1", "]", ",", "\n", ")", "\n", "self", ".", "tar", "=", "to_one_hot_label", "(", "self", ".", "tar_ids", ",", "class_num", "=", "C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test.LossFunctionTestCase.test_naive_dice": [[28, 38], ["zip", "numpy.mean", "dice.naive_soft_dice_score", "torch_dice.item.item.item", "test.LossFunctionTestCase.assertAlmostEqual", "range", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "metric_dices.append", "metrics.soft_dice"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.loss_functions.dice.naive_soft_dice_score", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.soft_dice"], ["", "def", "test_naive_dice", "(", "self", ")", ":", "\n", "        ", "metric_dices", "=", "[", "]", "\n", "for", "p", ",", "t", "in", "zip", "(", "self", ".", "pred", ",", "self", ".", "tar", ")", ":", "\n", "            ", "for", "class_idx", "in", "range", "(", "1", ",", "self", ".", "class_num", ")", ":", "\n", "                ", "metric_dices", ".", "append", "(", "soft_dice_metric", "(", "p", "[", "class_idx", "]", ",", "t", "[", "class_idx", "]", ")", ")", "\n", "\n", "", "", "metric_dice", "=", "np", ".", "mean", "(", "metric_dices", ")", "\n", "torch_dice", ",", "_", "=", "naive_soft_dice_score", "(", "torch", ".", "Tensor", "(", "self", ".", "logits", ")", ",", "self", ".", "tar", ")", "\n", "torch_dice", "=", "torch_dice", ".", "item", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "metric_dice", ",", "torch_dice", ",", "places", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test.LossFunctionTestCase.test_crossentropy": [[39, 44], ["metrics.cross_entropy", "misc.weighted_cross_entropy", "torch_crossentropy.item.item.item", "test.LossFunctionTestCase.assertAlmostEqual", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.cross_entropy", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.loss_functions.misc.weighted_cross_entropy"], ["", "def", "test_crossentropy", "(", "self", ")", ":", "\n", "        ", "metric_crossentropy", "=", "crossentropy_metric", "(", "self", ".", "pred", ",", "self", ".", "tar_ids", ")", "\n", "torch_crossentropy", ",", "_", "=", "weighted_cross_entropy", "(", "torch", ".", "Tensor", "(", "self", ".", "logits", ")", ",", "self", ".", "tar_ids", ")", "\n", "torch_crossentropy", "=", "torch_crossentropy", ".", "item", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "metric_crossentropy", ",", "torch_crossentropy", ",", "places", "=", "2", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test.TwoDimBatchSamplerTestCase.setUp": [[12, 25], ["numpy.random.random", "numpy.random.randint", "two_dim.TwoDimBatchSampler"], "methods", ["None"], ["\n", "\n", "class", "LossFunctionTestCase", "(", "unittest", ".", "TestCase", ")", ":", "\n", "\n", "    ", "def", "setUp", "(", "self", ")", ":", "\n", "        ", "N", ",", "C", ",", "D", ",", "H", ",", "W", "=", "1", ",", "3", ",", "5", ",", "7", ",", "9", "\n", "self", ".", "class_num", "=", "C", "\n", "self", ".", "logits", "=", "np", ".", "random", ".", "random", "(", "(", "N", ",", "C", ",", "D", ",", "H", ",", "W", ")", ")", "\n", "self", ".", "pred", "=", "F", ".", "softmax", "(", "torch", ".", "Tensor", "(", "self", ".", "logits", ")", ",", "dim", "=", "1", ")", ".", "data", ".", "numpy", "(", ")", "\n", "self", ".", "tar_ids", "=", "np", ".", "random", ".", "choice", "(", "\n", "[", "0", ",", "1", ",", "2", "]", ",", "\n", "size", "=", "(", "N", ",", "D", ",", "H", ",", "W", ")", ",", "\n", "p", "=", "[", "0.5", ",", "0.4", ",", "0.1", "]", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test.TwoDimBatchSamplerTestCase.test_reverse": [[26, 34], ["test.TwoDimBatchSamplerTestCase.sampler.convert_to_feedable", "test.TwoDimBatchSamplerTestCase.sampler.reassemble", "test.TwoDimBatchSamplerTestCase.assertTrue", "numpy.all"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.convert_to_feedable", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.reassemble"], ["self", ".", "tar", "=", "to_one_hot_label", "(", "self", ".", "tar_ids", ",", "class_num", "=", "C", ")", "\n", "\n", "", "def", "test_naive_dice", "(", "self", ")", ":", "\n", "        ", "metric_dices", "=", "[", "]", "\n", "for", "p", ",", "t", "in", "zip", "(", "self", ".", "pred", ",", "self", ".", "tar", ")", ":", "\n", "            ", "for", "class_idx", "in", "range", "(", "1", ",", "self", ".", "class_num", ")", ":", "\n", "                ", "metric_dices", ".", "append", "(", "soft_dice_metric", "(", "p", "[", "class_idx", "]", ",", "t", "[", "class_idx", "]", ")", ")", "\n", "\n", "", "", "metric_dice", "=", "np", ".", "mean", "(", "metric_dices", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test.Patch3DBatchSamplerTestCase.setUp": [[39, 71], ["numpy.random.random", "numpy.random.choice", "uniform_patch3d.UniformPatch3DBatchSampler", "center_patch3d.CenterPatch3DBatchSampler"], "methods", ["None"], ["", "def", "test_crossentropy", "(", "self", ")", ":", "\n", "        ", "metric_crossentropy", "=", "crossentropy_metric", "(", "self", ".", "pred", ",", "self", ".", "tar_ids", ")", "\n", "torch_crossentropy", ",", "_", "=", "weighted_cross_entropy", "(", "torch", ".", "Tensor", "(", "self", ".", "logits", ")", ",", "self", ".", "tar_ids", ")", "\n", "torch_crossentropy", "=", "torch_crossentropy", ".", "item", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "metric_crossentropy", ",", "torch_crossentropy", ",", "places", "=", "2", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test.Patch3DBatchSamplerTestCase.test_uniform_reverse": [[72, 86], ["test.Patch3DBatchSamplerTestCase.uniform_sampler.convert_to_feedable", "test.Patch3DBatchSamplerTestCase.uniform_sampler.reassemble", "test.Patch3DBatchSamplerTestCase.assertTrue", "numpy.all"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.convert_to_feedable", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.reassemble"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test.Patch3DBatchSamplerTestCase.test_center_reverse": [[88, 104], ["test.Patch3DBatchSamplerTestCase.center_sampler.convert_to_feedable", "test.Patch3DBatchSamplerTestCase.assertTrue", "test.Patch3DBatchSamplerTestCase.center_sampler.reassemble", "test.Patch3DBatchSamplerTestCase.assertTrue", "numpy.all", "numpy.all"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.convert_to_feedable", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.reassemble"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test_utils.DiceLossTestCase.setUp": [[7, 17], ["numpy.array", "numpy.array"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", ":", "\n", "        ", "self", ".", "test_pred", "=", "np", ".", "array", "(", "[", "\n", "[", "[", "0.1", ",", "0.2", ",", "0.3", "]", ",", "\n", "[", "0.4", ",", "0.5", ",", "0.6", "]", ",", "\n", "[", "0.7", ",", "0.8", ",", "0.9", "]", "]", ",", "\n", "]", ")", "\n", "self", ".", "test_tar", "=", "np", ".", "array", "(", "[", "\n", "[", "[", "1.", ",", "0.", ",", "1.", "]", ",", "\n", "[", "0.", ",", "1.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "1.", ",", "0.", "]", "]", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test_modules.ModuleTests.setUp": [[10, 15], ["None"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "in_chns", "=", "3", "\n", "self", ".", "out_chns", "=", "self", ".", "in_chns", "\n", "self", ".", "kernel_size", "=", "3", "\n", "self", ".", "repeats", "=", "4", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test_modules.ModuleTests.test_custom_conv": [[16, 30], ["torch.ones", "high_resolution_compact_network.CustomConv.", "test_modules.ModuleTests.assertTrue", "high_resolution_compact_network.CustomConv", "torch.ones.size", "high_resolution_compact_network.CustomConv.size"], "methods", ["None"], ["", "def", "test_custom_conv", "(", "self", ")", ":", "\n", "        ", "for", "dilation", "in", "[", "2", ",", "4", "]", ":", "\n", "            ", "layer", "=", "CustomConv", "(", "\n", "self", ".", "in_chns", ",", "\n", "self", ".", "out_chns", ",", "\n", "dilation", ",", "\n", "self", ".", "kernel_size", ",", "\n", "self", ".", "repeats", ",", "\n", "batch_norm", "=", "False", ",", "\n", ")", "\n", "\n", "", "x", "=", "torch", ".", "ones", "(", "[", "1", ",", "self", ".", "in_chns", ",", "17", ",", "18", ",", "19", "]", ")", "# N, C, D, H, W", "\n", "y", "=", "layer", "(", "x", ")", "\n", "self", ".", "assertTrue", "(", "x", ".", "size", "(", ")", "==", "y", ".", "size", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test_utils.DimensionConvertTestCase.setUp": [[13, 17], ["numpy.random.random", "utils.get_2d_from_3d", "utils.get_3d_from_2d"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_2d_from_3d", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_3d_from_2d"], ["self", ".", "test_tar", "=", "np", ".", "array", "(", "[", "\n", "[", "[", "1.", ",", "0.", ",", "1.", "]", ",", "\n", "[", "0.", ",", "1.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "1.", ",", "0.", "]", "]", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test_utils.DimensionConvertTestCase.test_reverse": [[18, 22], ["test_utils.DimensionConvertTestCase.assertEqual", "numpy.all"], "methods", ["None"], ["", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test_utils.DimensionConvertTestCase.test_two_d_shape": [[24, 28], ["test_utils.DimensionConvertTestCase.assertEqual", "numpy.all", "numpy.array"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test_utils.DimensionConvertTestCase.test_reverse_shape": [[30, 34], ["test_utils.DimensionConvertTestCase.assertEqual", "numpy.all"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test_metrics.MetricTestCase.setUp": [[10, 15], ["numpy.array"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", ":", "\n", "        ", "self", ".", "x", "=", "np", ".", "array", "(", "\n", "[", "[", "\n", "[", "0.1", ",", "0.5", ",", "0.7", "]", ",", "\n", "[", "0.9", ",", "0.5", ",", "0.3", "]", ",", "\n", "]", "]", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.test_metrics.MetricTestCase.test_hard_max": [[18, 30], ["metrics.hard_max", "test_metrics.MetricTestCase.assertEqual", "numpy.all", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.metrics.hard_max"], ["", "def", "test_hard_max", "(", "self", ")", ":", "\n", "        ", "hard_max_x", "=", "hard_max", "(", "self", ".", "x", ")", "\n", "self", ".", "assertEqual", "(", "\n", "np", ".", "all", "(", "\n", "hard_max_x", "==", "np", ".", "array", "(", "\n", "[", "[", "\n", "[", "0.", ",", "1.", ",", "1.", "]", ",", "\n", "[", "1.", ",", "0.", ",", "0.", "]", ",", "\n", "]", "]", "\n", ")", "\n", ")", ",", "\n", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.tests.AugmentationTestCase.setUp": [[9, 33], ["numpy.random.random", "numpy.random.random", "volume_augmentation.VolumeAugmentor", "volume_augmentation.VolumeAugmentor"], "methods", ["None"], ["    ", "def", "setUp", "(", "self", ")", ":", "\n", "        ", "data_format", "=", "{", "\n", "'channels'", ":", "1", ",", "\n", "'depth'", ":", "200", ",", "\n", "'height'", ":", "199", ",", "\n", "'width'", ":", "198", ",", "\n", "}", "\n", "data_shape", "=", "[", "\n", "1", ",", "\n", "data_format", "[", "'channels'", "]", ",", "\n", "data_format", "[", "'depth'", "]", ",", "\n", "data_format", "[", "'height'", "]", ",", "\n", "data_format", "[", "'width'", "]", ",", "\n", "]", "\n", "label_shape", "=", "[", "\n", "1", ",", "\n", "data_format", "[", "'depth'", "]", ",", "\n", "data_format", "[", "'height'", "]", ",", "\n", "data_format", "[", "'width'", "]", ",", "\n", "]", "\n", "self", ".", "volume", "=", "np", ".", "random", ".", "random", "(", "data_shape", ")", "\n", "self", ".", "label", "=", "np", ".", "random", ".", "random", "(", "label_shape", ")", "\n", "self", ".", "identity_augmentor", "=", "VolumeAugmentor", "(", "data_format", "=", "data_format", ",", "mode", "=", "'identity'", ")", "\n", "self", ".", "nontrivial_augmentor", "=", "VolumeAugmentor", "(", "data_format", "=", "data_format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.tests.AugmentationTestCase.test_identity_transform": [[34, 42], ["tests.AugmentationTestCase.identity_augmentor.co_transform", "tests.AugmentationTestCase.assertEqual", "tests.AugmentationTestCase.assertEqual", "tests.AugmentationTestCase.assertAlmostEqual", "numpy.all", "numpy.all", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.co_transform"], ["", "def", "test_identity_transform", "(", "self", ")", ":", "\n", "        ", "transformed_volume", ",", "transformed_label", "=", "self", ".", "identity_augmentor", ".", "co_transform", "(", "\n", "volume", "=", "self", ".", "volume", ",", "label", "=", "self", ".", "label", "\n", ")", "\n", "self", ".", "assertEqual", "(", "np", ".", "all", "(", "transformed_volume", ".", "shape", "==", "self", ".", "volume", ".", "shape", ")", ",", "True", ")", "\n", "self", ".", "assertEqual", "(", "np", ".", "all", "(", "transformed_label", ".", "shape", "==", "self", ".", "label", ".", "shape", ")", ",", "True", ")", "\n", "\n", "self", ".", "assertAlmostEqual", "(", "np", ".", "sum", "(", "transformed_volume", "-", "self", ".", "volume", ")", ",", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.tests.tests.AugmentationTestCase.test_nontrivial_transform": [[43, 50], ["range", "tests.AugmentationTestCase.nontrivial_augmentor.co_transform", "tests.AugmentationTestCase.assertEqual", "tests.AugmentationTestCase.assertEqual", "numpy.all", "numpy.all"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.co_transform"], ["", "def", "test_nontrivial_transform", "(", "self", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "10", ")", ":", "\n", "            ", "transformed_volume", ",", "transformed_label", "=", "self", ".", "nontrivial_augmentor", ".", "co_transform", "(", "\n", "volume", "=", "self", ".", "volume", ",", "label", "=", "self", ".", "label", "\n", ")", "\n", "self", ".", "assertEqual", "(", "np", ".", "all", "(", "transformed_volume", ".", "shape", "==", "self", ".", "volume", ".", "shape", ")", ",", "True", ")", "\n", "self", ".", "assertEqual", "(", "np", ".", "all", "(", "transformed_label", ".", "shape", "==", "self", ".", "label", ".", "shape", ")", ",", "True", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.uniform_patch3d.UniformPatch3DBatchSampler.__init__": [[14, 16], ["base.BatchSamplerBase.__init__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.uniform_patch3d.UniformPatch3DBatchSampler.convert_to_feedable": [[17, 34], ["uniform_patch3d.UniformPatch3DBatchSampler._generate_index_lists", "numpy.array_split", "math.ceil", "uniform_patch3d.UniformPatch3DBatchSampler._sample_by_batch_lists", "feedable_data_list.append", "feedable_label_list.append", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.uniform_patch3d.UniformPatch3DBatchSampler._generate_index_lists", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._sample_by_batch_lists"], ["", "def", "convert_to_feedable", "(", "self", ",", "batch_data", ",", "batch_size", ",", "training", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "batch_volume", "=", "batch_data", "[", "'volume'", "]", "\n", "batch_label", "=", "batch_data", "[", "'label'", "]", "\n", "\n", "feedable_data_list", "=", "[", "]", "\n", "feedable_label_list", "=", "[", "]", "\n", "\n", "index_lists", "=", "self", ".", "_generate_index_lists", "(", "batch_volume", ".", "shape", ",", "random", "=", "training", ")", "\n", "batch_index_lists", "=", "np", ".", "array_split", "(", "index_lists", ",", "ceil", "(", "len", "(", "index_lists", ")", "/", "batch_size", ")", ")", "\n", "\n", "for", "batch_indexes", "in", "batch_index_lists", ":", "\n", "            ", "batch_patch_volume", ",", "batch_patch_label", "=", "self", ".", "_sample_by_batch_lists", "(", "batch_volume", ",", "batch_label", ",", "batch_indexes", ")", "\n", "feedable_data_list", ".", "append", "(", "batch_patch_volume", ")", "\n", "feedable_label_list", ".", "append", "(", "batch_patch_label", ")", "\n", "\n", "", "return", "feedable_data_list", ",", "feedable_label_list", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.uniform_patch3d.UniformPatch3DBatchSampler._sample_by_batch_lists": [[35, 44], ["numpy.zeros", "numpy.zeros", "enumerate", "uniform_patch3d.UniformPatch3DBatchSampler._sample_by_index", "uniform_patch3d.UniformPatch3DBatchSampler._sample_by_index", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._sample_by_index", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._sample_by_index"], ["", "def", "_sample_by_batch_lists", "(", "self", ",", "batch_volume", ",", "batch_label", ",", "batch_indexes", ")", ":", "\n", "        ", "batch_patch_volume", "=", "np", ".", "zeros", "(", "[", "len", "(", "batch_indexes", ")", ",", "batch_volume", ".", "shape", "[", "1", "]", ",", "*", "self", ".", "patch_size", "]", ")", "\n", "batch_patch_label", "=", "np", ".", "zeros", "(", "[", "len", "(", "batch_indexes", ")", ",", "*", "self", ".", "patch_size", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "for", "idx", ",", "index", "in", "enumerate", "(", "batch_indexes", ")", ":", "\n", "            ", "batch_patch_volume", "[", "idx", "]", "=", "self", ".", "_sample_by_index", "(", "batch_volume", ",", "index", ")", "\n", "batch_patch_label", "[", "idx", "]", "=", "self", ".", "_sample_by_index", "(", "batch_label", ",", "index", ")", "\n", "\n", "", "return", "batch_patch_volume", ",", "batch_patch_label", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.uniform_patch3d.UniformPatch3DBatchSampler._sample_by_index": [[45, 65], ["preprocess_tools.image_utils.crop_or_pad_to_shape", "preprocess_tools.image_utils.crop_or_pad_to_shape", "ValueError", "uniform_patch3d.UniformPatch3DBatchSampler.patch_size.tolist"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_to_shape", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_to_shape"], ["", "def", "_sample_by_index", "(", "self", ",", "batch_data", ",", "index_list", ")", ":", "\n", "        ", "if", "batch_data", ".", "ndim", "==", "5", ":", "\n", "            ", "patch", "=", "batch_data", "[", "\n", "index_list", "[", "0", "]", ",", ":", ",", "\n", "index_list", "[", "1", "]", ":", "index_list", "[", "1", "]", "+", "self", ".", "patch_size", "[", "0", "]", ",", "\n", "index_list", "[", "2", "]", ":", "index_list", "[", "2", "]", "+", "self", ".", "patch_size", "[", "1", "]", ",", "\n", "index_list", "[", "3", "]", ":", "index_list", "[", "3", "]", "+", "self", ".", "patch_size", "[", "2", "]", ",", "\n", "]", "\n", "patch", "=", "crop_or_pad_to_shape", "(", "patch", ",", "[", "patch", ".", "shape", "[", "0", "]", ",", "*", "self", ".", "patch_size", "]", ")", "\n", "", "elif", "batch_data", ".", "ndim", "==", "4", ":", "\n", "            ", "patch", "=", "batch_data", "[", "\n", "index_list", "[", "0", "]", ",", "\n", "index_list", "[", "1", "]", ":", "index_list", "[", "1", "]", "+", "self", ".", "patch_size", "[", "0", "]", ",", "\n", "index_list", "[", "2", "]", ":", "index_list", "[", "2", "]", "+", "self", ".", "patch_size", "[", "1", "]", ",", "\n", "index_list", "[", "3", "]", ":", "index_list", "[", "3", "]", "+", "self", ".", "patch_size", "[", "2", "]", ",", "\n", "]", "\n", "patch", "=", "crop_or_pad_to_shape", "(", "patch", ",", "self", ".", "patch_size", ".", "tolist", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f'Invalid shape {batch_data.shape}'", ")", "\n", "", "return", "patch", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.uniform_patch3d.UniformPatch3DBatchSampler._generate_index_lists": [[66, 90], ["numpy.asarray", "numpy.array", "numpy.floor().astype", "range", "math.ceil", "range", "math.ceil", "numpy.floor", "math.ceil", "range", "math.ceil", "math.ceil", "range", "numpy.random.rand", "math.ceil", "numpy.floor().astype.append"], "methods", ["None"], ["", "def", "_generate_index_lists", "(", "self", ",", "volume_shape", ",", "random", ")", ":", "\n", "        ", "volume_shape", "=", "np", ".", "asarray", "(", "volume_shape", ")", "\n", "if", "random", ":", "\n", "            ", "num_patches", "=", "volume_shape", "[", "0", "]", "*", "ceil", "(", "volume_shape", "[", "1", "]", "/", "self", ".", "patch_size", "[", "0", "]", ")", "*", "ceil", "(", "volume_shape", "[", "2", "]", "/", "self", ".", "patch_size", "[", "1", "]", ")", "*", "ceil", "(", "volume_shape", "[", "3", "]", "/", "self", ".", "patch_size", "[", "2", "]", ")", "\n", "\n", "random_range", "=", "np", ".", "array", "(", "[", "volume_shape", "[", "0", "]", ",", "*", "(", "volume_shape", "[", "2", ":", "]", "-", "self", ".", "patch_size", ")", "]", ")", "\n", "lists", "=", "np", ".", "floor", "(", "np", ".", "random", ".", "rand", "(", "num_patches", ",", "4", ")", "*", "random_range", ")", ".", "astype", "(", "int", ")", "\n", "return", "lists", "\n", "", "else", ":", "\n", "            ", "lists", "=", "[", "]", "\n", "for", "n", "in", "range", "(", "volume_shape", "[", "0", "]", ")", ":", "\n", "                ", "for", "d", "in", "range", "(", "ceil", "(", "volume_shape", "[", "2", "]", "/", "self", ".", "patch_size", "[", "0", "]", ")", ")", ":", "\n", "                    ", "for", "h", "in", "range", "(", "ceil", "(", "volume_shape", "[", "3", "]", "/", "self", ".", "patch_size", "[", "1", "]", ")", ")", ":", "\n", "                        ", "for", "w", "in", "range", "(", "ceil", "(", "volume_shape", "[", "4", "]", "/", "self", ".", "patch_size", "[", "2", "]", ")", ")", ":", "\n", "                            ", "lists", ".", "append", "(", "[", "\n", "n", ",", "\n", "d", "*", "self", ".", "patch_size", "[", "0", "]", ",", "\n", "h", "*", "self", ".", "patch_size", "[", "1", "]", ",", "\n", "w", "*", "self", ".", "patch_size", "[", "2", "]", ",", "\n", "]", ")", "\n", "", "", "", "", "", "return", "lists", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.uniform_patch3d.UniformPatch3DBatchSampler.reassemble": [[91, 118], ["numpy.zeros", "uniform_patch3d.UniformPatch3DBatchSampler._generate_index_lists", "utils.flatten", "zip", "preprocess_tools.image_utils.crop_or_pad_to_shape"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.uniform_patch3d.UniformPatch3DBatchSampler._generate_index_lists", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.utils.flatten", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_to_shape"], ["", "def", "reassemble", "(", "self", ",", "prediction", ":", "list", ",", "test_data", ":", "dict", ",", "**", "kwargs", ")", ":", "\n", "        ", "test_volume", "=", "test_data", "[", "'volume'", "]", "\n", "reassembled_prediction", "=", "np", ".", "zeros", "(", "[", "\n", "test_volume", ".", "shape", "[", "0", "]", ",", "\n", "prediction", "[", "0", "]", ".", "shape", "[", "1", "]", ",", "\n", "*", "test_volume", ".", "shape", "[", "2", ":", "]", ",", "\n", "]", ")", "\n", "index_lists", "=", "self", ".", "_generate_index_lists", "(", "test_volume", ".", "shape", ",", "random", "=", "False", ")", "\n", "prediction", "=", "flatten", "(", "prediction", ")", "\n", "\n", "for", "pred_patch", ",", "index_list", "in", "zip", "(", "prediction", ",", "index_lists", ")", ":", "\n", "            ", "target_shape", "=", "test_volume", "[", "\n", "0", ",", "0", ",", "\n", "index_list", "[", "1", "]", ":", "index_list", "[", "1", "]", "+", "self", ".", "patch_size", "[", "0", "]", ",", "\n", "index_list", "[", "2", "]", ":", "index_list", "[", "2", "]", "+", "self", ".", "patch_size", "[", "1", "]", ",", "\n", "index_list", "[", "3", "]", ":", "index_list", "[", "3", "]", "+", "self", ".", "patch_size", "[", "2", "]", ",", "\n", "]", ".", "shape", "\n", "cropped_pred_patch", "=", "crop_or_pad_to_shape", "(", "\n", "pred_patch", ",", "[", "pred_patch", ".", "shape", "[", "0", "]", ",", "*", "target_shape", "]", "\n", ")", "\n", "reassembled_prediction", "[", "\n", "index_list", "[", "0", "]", ",", ":", ",", "\n", "index_list", "[", "1", "]", ":", "index_list", "[", "1", "]", "+", "self", ".", "patch_size", "[", "0", "]", ",", "\n", "index_list", "[", "2", "]", ":", "index_list", "[", "2", "]", "+", "self", ".", "patch_size", "[", "1", "]", ",", "\n", "index_list", "[", "3", "]", ":", "index_list", "[", "3", "]", "+", "self", ".", "patch_size", "[", "2", "]", ",", "\n", "]", "=", "cropped_pred_patch", "\n", "", "return", "reassembled_prediction", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.base.BatchSamplerBase.__init__": [[7, 9], ["None"], "methods", ["None"], ["def", "fit_generator", "(", "self", ",", "training_data_generator", ",", "validation_data_generator", ",", "metric", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.base.BatchSamplerBase.convert_to_feedable": [[10, 13], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "save", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.base.BatchSamplerBase.reassemble": [[14, 17], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "load", "(", "self", ",", "checkpoint_path", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler.__init__": [[13, 16], ["base.BatchSamplerBase.__init__", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "patch_size", "=", "(", "64", ",", "64", ",", "64", ")", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "patch_size", "=", "np", ".", "array", "(", "patch_size", ",", "dtype", "=", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler.convert_to_feedable": [[17, 37], ["center_patch3d.CenterPatch3DBatchSampler._generate_index_list", "len", "numpy.array_split", "center_patch3d.CenterPatch3DBatchSampler._sample_by_batch_lists", "feedable_data_list.append", "feedable_label_list.append", "math.ceil", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._generate_index_list", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._sample_by_batch_lists"], ["", "def", "convert_to_feedable", "(", "self", ",", "batch_data", ",", "batch_size", ",", "training", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "batch_volume", "=", "batch_data", "[", "'volume'", "]", "\n", "batch_label", "=", "batch_data", "[", "'label'", "]", "\n", "\n", "feedable_data_list", "=", "[", "]", "\n", "feedable_label_list", "=", "[", "]", "\n", "\n", "index_list", "=", "self", ".", "_generate_index_list", "(", "batch_label", ",", "random", "=", "training", ")", "\n", "if", "len", "(", "index_list", ")", "!=", "0", ":", "\n", "            ", "index_lists", "=", "np", ".", "array_split", "(", "index_list", ",", "ceil", "(", "len", "(", "index_list", ")", "/", "batch_size", ")", ")", "\n", "", "else", ":", "\n", "            ", "index_lists", "=", "[", "]", "\n", "\n", "", "for", "batch_indexes", "in", "index_lists", ":", "\n", "            ", "batch_patch_volume", ",", "batch_patch_label", "=", "self", ".", "_sample_by_batch_lists", "(", "batch_volume", ",", "batch_label", ",", "batch_indexes", ")", "\n", "feedable_data_list", ".", "append", "(", "batch_patch_volume", ")", "\n", "feedable_label_list", ".", "append", "(", "batch_patch_label", ")", "\n", "\n", "", "return", "feedable_data_list", ",", "feedable_label_list", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._sample_by_batch_lists": [[38, 47], ["numpy.zeros", "numpy.zeros", "enumerate", "center_patch3d.CenterPatch3DBatchSampler._sample_by_index", "center_patch3d.CenterPatch3DBatchSampler._sample_by_index", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._sample_by_index", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._sample_by_index"], ["", "def", "_sample_by_batch_lists", "(", "self", ",", "batch_volume", ",", "batch_label", ",", "batch_indexes", ")", ":", "\n", "        ", "batch_patch_volume", "=", "np", ".", "zeros", "(", "[", "len", "(", "batch_indexes", ")", ",", "batch_volume", ".", "shape", "[", "1", "]", ",", "*", "self", ".", "patch_size", "]", ")", "\n", "batch_patch_label", "=", "np", ".", "zeros", "(", "[", "len", "(", "batch_indexes", ")", ",", "*", "self", ".", "patch_size", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "for", "idx", ",", "index", "in", "enumerate", "(", "batch_indexes", ")", ":", "\n", "            ", "batch_patch_volume", "[", "idx", "]", "=", "self", ".", "_sample_by_index", "(", "batch_volume", ",", "index", ")", "\n", "batch_patch_label", "[", "idx", "]", "=", "self", ".", "_sample_by_index", "(", "batch_label", ",", "index", ")", "\n", "\n", "", "return", "batch_patch_volume", ",", "batch_patch_label", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._sample_by_index": [[48, 68], ["preprocess_tools.image_utils.crop_or_pad_to_shape", "preprocess_tools.image_utils.crop_or_pad_to_shape", "ValueError", "center_patch3d.CenterPatch3DBatchSampler.patch_size.tolist"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_to_shape", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_to_shape"], ["", "def", "_sample_by_index", "(", "self", ",", "batch_data", ",", "index_list", ")", ":", "\n", "        ", "if", "batch_data", ".", "ndim", "==", "5", ":", "\n", "            ", "patch", "=", "batch_data", "[", "\n", "index_list", "[", "0", "]", ",", ":", ",", "\n", "index_list", "[", "1", "]", ":", "index_list", "[", "1", "]", "+", "self", ".", "patch_size", "[", "0", "]", ",", "\n", "index_list", "[", "2", "]", ":", "index_list", "[", "2", "]", "+", "self", ".", "patch_size", "[", "1", "]", ",", "\n", "index_list", "[", "3", "]", ":", "index_list", "[", "3", "]", "+", "self", ".", "patch_size", "[", "2", "]", ",", "\n", "]", "\n", "patch", "=", "crop_or_pad_to_shape", "(", "patch", ",", "[", "patch", ".", "shape", "[", "0", "]", ",", "*", "self", ".", "patch_size", "]", ")", "\n", "", "elif", "batch_data", ".", "ndim", "==", "4", ":", "\n", "            ", "patch", "=", "batch_data", "[", "\n", "index_list", "[", "0", "]", ",", "\n", "index_list", "[", "1", "]", ":", "index_list", "[", "1", "]", "+", "self", ".", "patch_size", "[", "0", "]", ",", "\n", "index_list", "[", "2", "]", ":", "index_list", "[", "2", "]", "+", "self", ".", "patch_size", "[", "1", "]", ",", "\n", "index_list", "[", "3", "]", ":", "index_list", "[", "3", "]", "+", "self", ".", "patch_size", "[", "2", "]", ",", "\n", "]", "\n", "patch", "=", "crop_or_pad_to_shape", "(", "patch", ",", "self", ".", "patch_size", ".", "tolist", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f'Invalid shape {batch_data.shape}'", ")", "\n", "", "return", "patch", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._generate_index_list": [[69, 90], ["center_patch3d.CenterPatch3DBatchSampler._generate_index_list_around_label", "range", "math.ceil", "range", "math.ceil", "math.ceil", "range", "math.ceil", "math.ceil", "range", "math.ceil", "lists.append"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._generate_index_list_around_label"], ["", "def", "_generate_index_list", "(", "self", ",", "batch_label", ",", "random", ")", ":", "\n", "        ", "volume_shape", "=", "batch_label", ".", "shape", "\n", "if", "random", ":", "\n", "            ", "num_patches", "=", "volume_shape", "[", "0", "]", "*", "ceil", "(", "volume_shape", "[", "1", "]", "/", "self", ".", "patch_size", "[", "0", "]", ")", "*", "ceil", "(", "volume_shape", "[", "2", "]", "/", "self", ".", "patch_size", "[", "1", "]", ")", "*", "ceil", "(", "volume_shape", "[", "3", "]", "/", "self", ".", "patch_size", "[", "2", "]", ")", "\n", "return", "self", ".", "_generate_index_list_around_label", "(", "batch_label", ",", "num_patches", ")", "\n", "", "else", ":", "\n", "            ", "lists", "=", "[", "]", "\n", "for", "n", "in", "range", "(", "volume_shape", "[", "0", "]", ")", ":", "\n", "                ", "for", "d", "in", "range", "(", "ceil", "(", "volume_shape", "[", "1", "]", "/", "self", ".", "patch_size", "[", "0", "]", ")", ")", ":", "\n", "                    ", "for", "h", "in", "range", "(", "ceil", "(", "volume_shape", "[", "2", "]", "/", "self", ".", "patch_size", "[", "1", "]", ")", ")", ":", "\n", "                        ", "for", "w", "in", "range", "(", "ceil", "(", "volume_shape", "[", "3", "]", "/", "self", ".", "patch_size", "[", "2", "]", ")", ")", ":", "\n", "                            ", "lists", ".", "append", "(", "[", "\n", "n", ",", "\n", "d", "*", "self", ".", "patch_size", "[", "0", "]", ",", "\n", "h", "*", "self", ".", "patch_size", "[", "1", "]", ",", "\n", "w", "*", "self", ".", "patch_size", "[", "2", "]", ",", "\n", "]", ")", "\n", "", "", "", "", "return", "lists", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._generate_index_list_around_label": [[91, 113], ["numpy.random.randint", "len", "numpy.stack", "len", "random.choice", "center_patch3d.CenterPatch3DBatchSampler._get_patch_position", "lists.append", "numpy.where"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._get_patch_position"], ["", "", "def", "_generate_index_list_around_label", "(", "self", ",", "batch_label", ",", "num_patches", ")", ":", "\n", "        ", "lists", "=", "[", "]", "\n", "random_n_list", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "batch_label", ")", ",", "size", "=", "num_patches", ")", "\n", "indexes_dict", "=", "{", "}", "\n", "for", "random_n", "in", "random_n_list", ":", "\n", "            ", "if", "random_n", "not", "in", "indexes_dict", ":", "\n", "                ", "selected_label", "=", "batch_label", "[", "random_n", "]", "\n", "\n", "# find label except background", "\n", "selected_label", "=", "(", "selected_label", "!=", "0", ")", "\n", "indexes", "=", "np", ".", "stack", "(", "np", ".", "where", "(", "selected_label", ")", ",", "axis", "=", "-", "1", ")", "\n", "indexes_dict", "[", "random_n", "]", "=", "indexes", "\n", "", "else", ":", "\n", "                ", "indexes", "=", "indexes_dict", "[", "random_n", "]", "\n", "\n", "", "if", "len", "(", "indexes", ")", "!=", "0", ":", "\n", "                ", "selected_label_position", "=", "random", ".", "choice", "(", "indexes", ")", "\n", "patch_position", "=", "self", ".", "_get_patch_position", "(", "selected_label_position", ")", "\n", "selected_label_position", "=", "[", "random_n", ",", "*", "patch_position", "]", "\n", "lists", ".", "append", "(", "selected_label_position", ")", "\n", "\n", "", "", "return", "lists", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._get_patch_position": [[114, 123], ["zip", "numpy.clip", "pos.append", "numpy.random.randint"], "methods", ["None"], ["", "def", "_get_patch_position", "(", "self", ",", "selected_label_position", ")", ":", "\n", "        ", "pos", "=", "[", "]", "\n", "for", "patch_l", ",", "label_pos", ",", "data_l", "in", "zip", "(", "\n", "self", ".", "patch_size", ",", "selected_label_position", ",", "self", ".", "data_format", "\n", ")", ":", "\n", "            ", "x", "=", "label_pos", "-", "np", ".", "random", ".", "randint", "(", "0", ",", "patch_l", ")", "\n", "x", "=", "np", ".", "clip", "(", "x", ",", "a_min", "=", "0", ",", "a_max", "=", "data_l", "-", "patch_l", ")", "\n", "pos", ".", "append", "(", "x", ")", "\n", "", "return", "pos", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler.reassemble": [[124, 151], ["numpy.zeros", "center_patch3d.CenterPatch3DBatchSampler._generate_index_list", "utils.flatten", "zip", "preprocess_tools.image_utils.crop_or_pad_to_shape"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.center_patch3d.CenterPatch3DBatchSampler._generate_index_list", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.utils.flatten", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_to_shape"], ["", "def", "reassemble", "(", "self", ",", "prediction", ":", "list", ",", "test_data", ":", "dict", ",", "**", "kwargs", ")", ":", "\n", "        ", "test_volume", "=", "test_data", "[", "'volume'", "]", "\n", "reassembled_prediction", "=", "np", ".", "zeros", "(", "[", "\n", "test_volume", ".", "shape", "[", "0", "]", ",", "\n", "prediction", "[", "0", "]", ".", "shape", "[", "1", "]", ",", "\n", "*", "test_volume", ".", "shape", "[", "2", ":", "]", ",", "\n", "]", ")", "\n", "index_lists", "=", "self", ".", "_generate_index_list", "(", "test_volume", ",", "random", "=", "False", ")", "\n", "prediction", "=", "flatten", "(", "prediction", ")", "\n", "\n", "for", "pred_patch", ",", "index_list", "in", "zip", "(", "prediction", ",", "index_lists", ")", ":", "\n", "            ", "target_shape", "=", "test_volume", "[", "\n", "0", ",", "0", ",", "\n", "index_list", "[", "1", "]", ":", "index_list", "[", "1", "]", "+", "self", ".", "patch_size", "[", "0", "]", ",", "\n", "index_list", "[", "2", "]", ":", "index_list", "[", "2", "]", "+", "self", ".", "patch_size", "[", "1", "]", ",", "\n", "index_list", "[", "3", "]", ":", "index_list", "[", "3", "]", "+", "self", ".", "patch_size", "[", "2", "]", ",", "\n", "]", ".", "shape", "\n", "cropped_pred_patch", "=", "crop_or_pad_to_shape", "(", "\n", "pred_patch", ",", "[", "pred_patch", ".", "shape", "[", "0", "]", ",", "*", "target_shape", "]", "\n", ")", "\n", "reassembled_prediction", "[", "\n", "index_list", "[", "0", "]", ",", ":", ",", "\n", "index_list", "[", "1", "]", ":", "index_list", "[", "1", "]", "+", "self", ".", "patch_size", "[", "0", "]", ",", "\n", "index_list", "[", "2", "]", ":", "index_list", "[", "2", "]", "+", "self", ".", "patch_size", "[", "1", "]", ",", "\n", "index_list", "[", "3", "]", ":", "index_list", "[", "3", "]", "+", "self", ".", "patch_size", "[", "2", "]", ",", "\n", "]", "=", "cropped_pred_patch", "\n", "", "return", "reassembled_prediction", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.three_dim.ThreeDimBatchSampler.__init__": [[6, 8], ["base.BatchSamplerBase.__init__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.three_dim.ThreeDimBatchSampler.convert_to_feedable": [[9, 18], ["None"], "methods", ["None"], ["", "def", "convert_to_feedable", "(", "self", ",", "batch_data", ",", "batch_size", ",", "training", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "\n", "        ", "volume", "=", "batch_data", "[", "'volume'", "]", "\n", "label", "=", "batch_data", "[", "'label'", "]", "\n", "\n", "feedable_data_list", "=", "[", "volume", "]", "\n", "feedable_label_list", "=", "[", "label", "]", "\n", "\n", "return", "feedable_data_list", ",", "feedable_label_list", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.three_dim.ThreeDimBatchSampler.reassemble": [[19, 22], ["None"], "methods", ["None"], ["", "def", "reassemble", "(", "self", ",", "preds", ":", "list", ",", "test_data", ":", "dict", ",", "**", "kwargs", ")", ":", "\n", "        ", "volume_segmentations", "=", "preds", "[", "0", "]", "\n", "return", "volume_segmentations", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.__init__": [[12, 14], ["base.BatchSamplerBase.__init__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.convert_to_feedable": [[15, 38], ["utils.get_2d_from_3d", "utils.get_2d_from_3d", "math.ceil", "range", "numpy.arange", "len", "utils.co_shuffle", "min", "feedable_data_list.append", "feedable_label_list.append", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_2d_from_3d", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_2d_from_3d", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.models.utils.co_shuffle"], ["", "def", "convert_to_feedable", "(", "self", ",", "batch_data", ",", "batch_size", ",", "training", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "volume", "=", "batch_data", "[", "'volume'", "]", "\n", "label", "=", "batch_data", "[", "'label'", "]", "\n", "two_dim_volume", "=", "get_2d_from_3d", "(", "volume", ")", "\n", "two_dim_label", "=", "get_2d_from_3d", "(", "label", ")", "\n", "\n", "position", "=", "np", ".", "arange", "(", "len", "(", "two_dim_volume", ")", ")", "/", "len", "(", "two_dim_volume", ")", "\n", "if", "training", ":", "\n", "            ", "two_dim_volume", ",", "two_dim_label", ",", "position", "=", "co_shuffle", "(", "two_dim_volume", ",", "two_dim_label", ",", "position", ")", "\n", "\n", "", "feedable_data_list", "=", "[", "]", "\n", "feedable_label_list", "=", "[", "]", "\n", "num_batch", "=", "ceil", "(", "len", "(", "two_dim_volume", ")", "/", "batch_size", ")", "\n", "for", "i_batch", "in", "range", "(", "num_batch", ")", ":", "\n", "            ", "end_idx", "=", "min", "(", "len", "(", "two_dim_volume", ")", ",", "(", "i_batch", "+", "1", ")", "*", "batch_size", ")", "\n", "feedable_data_list", ".", "append", "(", "{", "\n", "'slice'", ":", "two_dim_volume", "[", "i_batch", "*", "batch_size", ":", "end_idx", "]", ",", "\n", "'position'", ":", "position", "[", "i_batch", "*", "batch_size", ":", "end_idx", "]", ",", "\n", "}", ")", "\n", "feedable_label_list", ".", "append", "(", "two_dim_label", "[", "i_batch", "*", "batch_size", ":", "end_idx", "]", ")", "\n", "\n", "", "return", "feedable_data_list", ",", "feedable_label_list", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.two_dim.TwoDimBatchSampler.reassemble": [[39, 44], ["numpy.concatenate", "utils.get_3d_from_2d"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_3d_from_2d"], ["", "def", "reassemble", "(", "self", ",", "preds", ":", "list", ",", "test_data", ":", "dict", ",", "**", "kwargs", ")", ":", "\n", "        ", "all_segmentations", "=", "np", ".", "concatenate", "(", "preds", ",", "axis", "=", "0", ")", "\n", "data_depth", "=", "test_data", "[", "'volume'", "]", ".", "shape", "[", "2", "]", "\n", "volume_segmentations", "=", "get_3d_from_2d", "(", "all_segmentations", ",", "data_depth", ")", "\n", "return", "volume_segmentations", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.batch_samplers.utils.flatten": [[4, 7], ["list", "itertools.chain.from_iterable"], "function", ["None"], ["\n", "\n", "epsilon", "=", "1e-8", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.__init__": [[98, 106], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "target_shape", ":", "[", "int", "]", "=", "(", "200", ",", "200", ",", "200", ")", ",", "\n", ")", ":", "\n", "        ", "self", ".", "target_shape", "=", "target_shape", "\n", "self", ".", "all_standard_shapes", "=", "{", "}", "\n", "self", ".", "all_cropped_shapes", "=", "{", "}", "\n", "self", ".", "all_dims", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.preprocess": [[107, 128], ["image_utils.load_nii", "os.path.isfile", "image_utils.load_nii", "header.get_zooms", "image_utils.crop_image_and_label_with_mask", "image_utils.zoom_image", "image_utils.zoom_image", "image_utils.crop_or_pad_to_shape", "image_utils.crop_or_pad_to_shape", "image_utils.load_nii", "numpy.zeros_like"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.load_nii", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.load_nii", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_image_and_label_with_mask", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.zoom_image", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.zoom_image", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_to_shape", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_to_shape", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.load_nii"], ["", "def", "preprocess", "(", "self", ",", "image_path", ",", "label_path", ",", "mask_path", ",", "file_id", ")", ":", "\n", "        ", "image_obj", ",", "image", "=", "load_nii", "(", "image_path", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "label_path", ")", ":", "\n", "            ", "label_obj", ",", "label", "=", "load_nii", "(", "label_path", ")", "\n", "", "else", ":", "\n", "            ", "label_obj", ",", "label", "=", "image_obj", ",", "np", ".", "zeros_like", "(", "image", ")", "\n", "", "mask_obj", ",", "mask", "=", "load_nii", "(", "mask_path", ")", "\n", "header", "=", "image_obj", ".", "header", "\n", "zooms", "=", "header", ".", "get_zooms", "(", ")", "\n", "\n", "image", ",", "label", ",", "dims", "=", "crop_image_and_label_with_mask", "(", "image", ",", "label", ",", "mask", ")", "\n", "self", ".", "all_cropped_shapes", "[", "file_id", "]", "=", "image", ".", "shape", "\n", "self", ".", "all_dims", "[", "file_id", "]", "=", "dims", "\n", "\n", "image", "=", "zoom_image", "(", "image", ",", "zooms", ",", "binary", "=", "False", ")", "\n", "label", "=", "zoom_image", "(", "label", ",", "zooms", ",", "binary", "=", "True", ")", "\n", "self", ".", "all_standard_shapes", "[", "file_id", "]", "=", "image", ".", "shape", "\n", "\n", "image", "=", "crop_or_pad_to_shape", "(", "image", ",", "self", ".", "target_shape", ")", "\n", "label", "=", "crop_or_pad_to_shape", "(", "label", ",", "self", ".", "target_shape", ")", "\n", "return", "(", "image", ",", "image_obj", ")", ",", "(", "label", ",", "label_obj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.postprocess": [[129, 143], ["image_utils.load_nii", "image_utils.crop_or_pad_to_shape", "numpy.array", "image_utils.zoom_image", "image_utils.pad_label_with_dims", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.load_nii", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_to_shape", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.zoom_image", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.pad_label_with_dims"], ["", "def", "postprocess", "(", "self", ",", "label_path", ",", "file_id", ")", ":", "\n", "        ", "label_obj", ",", "label", "=", "load_nii", "(", "label_path", ")", "\n", "\n", "standard_shape", "=", "self", ".", "all_standard_shapes", "[", "file_id", "]", "\n", "label", "=", "crop_or_pad_to_shape", "(", "label", ",", "standard_shape", ")", "\n", "\n", "cropped_shape", "=", "self", ".", "all_cropped_shapes", "[", "file_id", "]", "\n", "cropped_shape", "=", "np", ".", "array", "(", "cropped_shape", ")", "\n", "zooms", "=", "cropped_shape", "/", "np", ".", "array", "(", "label", ".", "shape", ")", "\n", "label", "=", "zoom_image", "(", "label", ",", "zooms", ",", "binary", "=", "True", ")", "\n", "\n", "dims", "=", "self", ".", "all_dims", "[", "file_id", "]", "\n", "label", "=", "pad_label_with_dims", "(", "label", ",", "dims", ")", "\n", "return", "label", ",", "label_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.save": [[144, 157], ["os.path.join", "print", "open", "pickle.dump"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "result_dir", ")", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "result_dir", ",", "'image_processor.pkl'", ")", "\n", "with", "open", "(", "file_path", ",", "'wb+'", ")", "as", "file", ":", "\n", "            ", "pickle", ".", "dump", "(", "\n", "(", "\n", "self", ".", "target_shape", ",", "\n", "self", ".", "all_standard_shapes", ",", "\n", "self", ".", "all_cropped_shapes", ",", "\n", "self", ".", "all_dims", "\n", ")", ",", "\n", "file", ",", "\n", ")", "\n", "", "print", "(", "f'ImageProcessor saved to {file_path}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load": [[158, 167], ["print", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load"], ["", "def", "load", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "with", "open", "(", "file_path", ",", "'rb'", ")", "as", "file", ":", "\n", "            ", "(", "\n", "self", ".", "target_shape", ",", "\n", "self", ".", "all_standard_shapes", ",", "\n", "self", ".", "all_cropped_shapes", ",", "\n", "self", ".", "all_dims", "\n", ")", "=", "pickle", ".", "load", "(", "file", ")", "\n", "", "print", "(", "f'ImageProcessor loaded from {file_path}'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.save_array_to_nii": [[8, 14], ["nibabel.Nifti1Header", "nibabel.Nifti1Image", "nibabel.save", "numpy.diag"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.save"], ["def", "save_array_to_nii", "(", "np_array", ",", "save_path", ",", "affine", "=", "None", ")", ":", "\n", "    ", "empty_header", "=", "nib", ".", "Nifti1Header", "(", ")", "\n", "if", "affine", "is", "None", ":", "\n", "        ", "affine", "=", "np", ".", "diag", "(", "[", "1", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "", "new_nii", "=", "nib", ".", "Nifti1Image", "(", "np_array", ",", "affine", ",", "empty_header", ")", "\n", "nib", ".", "save", "(", "new_nii", ",", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.get_boundaries": [[16, 20], ["vector.astype.astype", "len", "numpy.argmax", "numpy.argmax"], "function", ["None"], ["", "def", "get_boundaries", "(", "vector", ")", ":", "\n", "    ", "assert", "(", "len", "(", "vector", ".", "shape", ")", "==", "1", ")", "\n", "vector", "=", "vector", ".", "astype", "(", "int", ")", "\n", "return", "np", ".", "argmax", "(", "vector", ")", ",", "np", ".", "argmax", "(", "vector", "[", ":", ":", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.get_dims": [[22, 28], ["image_utils.get_boundaries", "image_utils.get_boundaries", "len", "len", "numpy.any", "numpy.any", "numpy.unique"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.get_boundaries", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.get_boundaries"], ["", "def", "get_dims", "(", "mask", ")", ":", "\n", "    ", "assert", "(", "len", "(", "mask", ".", "shape", ")", "==", "3", ")", "\n", "assert", "(", "len", "(", "np", ".", "unique", "(", "mask", ")", ")", "==", "2", ")", "\n", "left", ",", "right", "=", "get_boundaries", "(", "np", ".", "any", "(", "mask", ",", "axis", "=", "(", "1", ",", "2", ")", ")", ")", "\n", "front", ",", "back", "=", "get_boundaries", "(", "np", ".", "any", "(", "mask", ",", "axis", "=", "(", "0", ",", "2", ")", ")", ")", "\n", "return", "(", "left", ",", "right", ")", ",", "(", "front", ",", "back", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_image_and_label_with_mask": [[30, 42], ["numpy.logical_or().astype", "image_utils.get_dims", "numpy.logical_or"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.get_dims"], ["", "def", "crop_image_and_label_with_mask", "(", "image", ",", "label", ",", "mask", ")", ":", "\n", "    ", "mask_or_label", "=", "np", ".", "logical_or", "(", "label", "!=", "0", ",", "mask", "!=", "0", ")", ".", "astype", "(", "int", ")", "\n", "dims", "=", "get_dims", "(", "mask_or_label", ")", "\n", "(", "left", ",", "right", ")", ",", "(", "front", ",", "back", ")", "=", "dims", "\n", "if", "right", "==", "0", ":", "\n", "        ", "right", "=", "-", "image", ".", "shape", "[", "0", "]", "\n", "", "if", "back", "==", "0", ":", "\n", "        ", "back", "=", "-", "image", ".", "shape", "[", "1", "]", "\n", "\n", "", "cropped_image", "=", "image", "[", "left", ":", "-", "right", ",", "front", ":", "-", "back", ",", ":", "]", "\n", "cropped_label", "=", "label", "[", "left", ":", "-", "right", ",", "front", ":", "-", "back", ",", ":", "]", "\n", "return", "cropped_image", ",", "cropped_label", ",", "dims", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.zoom_image": [[44, 50], ["scipy.ndimage.zoom", "image.astype.astype"], "function", ["None"], ["", "def", "zoom_image", "(", "image", ",", "zooms", ",", "binary", "=", "False", ")", ":", "\n", "    ", "image", "=", "nd", ".", "zoom", "(", "image", ",", "zoom", "=", "zooms", ")", "\n", "if", "binary", ":", "\n", "        ", "image", "=", "image", ">", "0.5", "\n", "image", "=", "image", ".", "astype", "(", "float", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_single_dim": [[52, 67], ["numpy.zeros", "int", "int", "numpy.pad", "numpy.array", "numpy.zeros", "int", "range", "numpy.take", "numpy.ceil", "numpy.floor", "numpy.ceil", "int", "numpy.floor"], "function", ["None"], ["", "def", "crop_or_pad_single_dim", "(", "image", ",", "dim", ",", "target_len", ")", ":", "\n", "    ", "if", "target_len", ">", "image", ".", "shape", "[", "dim", "]", ":", "\n", "        ", "pad_width", "=", "np", ".", "zeros", "(", "(", "image", ".", "ndim", ",", "2", ")", ",", "dtype", "=", "int", ")", "\n", "pad_width", "[", "dim", "]", "[", "0", "]", "=", "int", "(", "np", ".", "ceil", "(", "(", "target_len", "-", "image", ".", "shape", "[", "dim", "]", ")", "/", "2", ")", ")", "\n", "pad_width", "[", "dim", "]", "[", "1", "]", "=", "int", "(", "np", ".", "floor", "(", "(", "target_len", "-", "image", ".", "shape", "[", "dim", "]", ")", "/", "2", ")", ")", "\n", "return", "np", ".", "pad", "(", "image", ",", "pad_width", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0.", ")", "\n", "", "else", ":", "\n", "        ", "new_shape", "=", "np", ".", "array", "(", "image", ".", "shape", ")", "\n", "new_shape", "[", "dim", "]", "=", "target_len", "\n", "new_image", "=", "np", ".", "zeros", "(", "new_shape", ")", "\n", "left_index", "=", "int", "(", "np", ".", "ceil", "(", "(", "image", ".", "shape", "[", "dim", "]", "-", "target_len", ")", "/", "2", ")", ")", "\n", "right_index", "=", "image", ".", "shape", "[", "dim", "]", "-", "int", "(", "np", ".", "floor", "(", "(", "image", ".", "shape", "[", "dim", "]", "-", "target_len", ")", "/", "2", ")", ")", "\n", "take_indices", "=", "range", "(", "left_index", ",", "right_index", ")", "\n", "new_image", "=", "np", ".", "take", "(", "image", ",", "take_indices", ",", "axis", "=", "dim", ")", "\n", "return", "new_image", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_to_shape": [[69, 80], ["numpy.array", "range", "numpy.all", "len", "ValueError", "image_utils.crop_or_pad_single_dim"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.crop_or_pad_single_dim"], ["", "", "def", "crop_or_pad_to_shape", "(", "image", ",", "target_shape", ")", ":", "\n", "    ", "if", "image", ".", "ndim", "!=", "len", "(", "target_shape", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f'Incompatible shapes: image: {image.shape}, target_shape: {target_shape}'", "\n", ")", "\n", "", "target_shape", "=", "np", ".", "array", "(", "target_shape", ")", "\n", "for", "i_dim", "in", "range", "(", "image", ".", "ndim", ")", ":", "\n", "        ", "image", "=", "crop_or_pad_single_dim", "(", "image", ",", "i_dim", ",", "target_shape", "[", "i_dim", "]", ")", "\n", "\n", "", "assert", "(", "np", ".", "all", "(", "image", ".", "shape", "==", "target_shape", ")", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.pad_label_with_dims": [[82, 89], ["numpy.zeros", "numpy.pad", "len"], "function", ["None"], ["", "def", "pad_label_with_dims", "(", "label", ",", "dims", ")", ":", "\n", "    ", "assert", "(", "label", ".", "ndim", ">=", "2", ")", "\n", "assert", "(", "len", "(", "dims", ")", "==", "2", ")", "\n", "pad_width", "=", "np", ".", "zeros", "(", "(", "label", ".", "ndim", ",", "2", ")", ",", "dtype", "=", "int", ")", "\n", "pad_width", "[", "0", "]", "=", "dims", "[", "0", "]", "\n", "pad_width", "[", "1", "]", "=", "dims", "[", "1", "]", "\n", "return", "np", ".", "pad", "(", "label", ",", "pad_width", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.load_nii": [[91, 95], ["nibabel.load", "nib.load.get_fdata"], "function", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load"], ["", "def", "load_nii", "(", "file_path", ")", ":", "\n", "    ", "image_obj", "=", "nib", ".", "load", "(", "file_path", ")", "\n", "image", "=", "image_obj", ".", "get_fdata", "(", ")", "\n", "return", "image_obj", ",", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.wrappers.AsyncDataGeneratorWrapper.__init__": [[12, 19], ["base.DataGeneratorWrapperBase.__init__", "multiprocessing.Queue", "multiprocessing.Process", "wrappers.AsyncDataGeneratorWrapper.process.start"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_generator", ",", "max_q_size", "=", "10", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_generator", ")", "\n", "\n", "self", ".", "max_q_size", "=", "max_q_size", "\n", "self", ".", "data_queue", "=", "mp", ".", "Queue", "(", "maxsize", "=", "max_q_size", ")", "\n", "self", ".", "process", "=", "mp", ".", "Process", "(", "target", "=", "self", ".", "_put_data_into_queue", ",", "daemon", "=", "True", ")", "\n", "self", ".", "process", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.wrappers.AsyncDataGeneratorWrapper.__call__": [[20, 38], ["data_list[].keys", "ValueError", "wrappers.AsyncDataGeneratorWrapper.data_queue.qsize", "time.sleep", "wrappers.AsyncDataGeneratorWrapper.data_queue.get", "numpy.concatenate", "range"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "if", "batch_size", ">", "self", ".", "max_q_size", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f'batch size too large, should be <= {self.max_q_size}, got {batch_size}'", "\n", ")", "\n", "\n", "", "while", "self", ".", "data_queue", ".", "qsize", "(", ")", "<", "batch_size", ":", "\n", "            ", "time", ".", "sleep", "(", "0.1", ")", "\n", "\n", "", "data_list", "=", "[", "self", ".", "data_queue", ".", "get", "(", ")", "for", "_", "in", "range", "(", "batch_size", ")", "]", "\n", "batch_data", "=", "{", "}", "\n", "for", "key", "in", "data_list", "[", "0", "]", ".", "keys", "(", ")", ":", "\n", "            ", "batch_value", "=", "np", ".", "concatenate", "(", "[", "\n", "data", "[", "key", "]", "for", "data", "in", "data_list", "\n", "]", ",", "axis", "=", "0", ")", "\n", "batch_data", "[", "key", "]", "=", "batch_value", "\n", "\n", "", "return", "batch_data", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.wrappers.AsyncDataGeneratorWrapper._put_data_into_queue": [[39, 44], ["wrappers.AsyncDataGeneratorWrapper.data_queue.full", "wrappers.AsyncDataGeneratorWrapper.data_generator", "wrappers.AsyncDataGeneratorWrapper.data_queue.put"], "methods", ["None"], ["", "def", "_put_data_into_queue", "(", "self", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "if", "not", "self", ".", "data_queue", ".", "full", "(", ")", ":", "\n", "                ", "data", "=", "self", ".", "data_generator", "(", "batch_size", "=", "1", ")", "\n", "self", ".", "data_queue", ".", "put", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.wrappers.AugmentedDataGeneratorWrapper.__init__": [[48, 51], ["base.DataGeneratorWrapperBase.__init__", "augmentations.volume_augmentation.VolumeAugmentor"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_generator", ":", "DataGeneratorBase", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_generator", ")", "\n", "self", ".", "augmentor", "=", "VolumeAugmentor", "(", "data_generator", ".", "data_format", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.wrappers.AugmentedDataGeneratorWrapper.__call__": [[52, 59], ["wrappers.AugmentedDataGeneratorWrapper.data_generator", "wrappers.AugmentedDataGeneratorWrapper.augmentor.co_transform"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.co_transform"], ["", "def", "__call__", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "batch_data", "=", "self", ".", "data_generator", "(", "batch_size", ")", "\n", "batch_volume", ",", "batch_label", "=", "batch_data", "[", "'volume'", "]", ",", "batch_data", "[", "'label'", "]", "\n", "augmented_batch_volume", ",", "augmented_batch_label", "=", "self", ".", "augmentor", ".", "co_transform", "(", "batch_volume", ",", "batch_label", ")", "\n", "batch_data", "[", "'volume'", "]", ",", "batch_data", "[", "'label'", "]", "=", "augmented_batch_volume", ",", "augmented_batch_label", "\n", "return", "batch_data", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.wrappers.NormalizedDataGeneratorWrapper.__init__": [[63, 65], ["base.DataGeneratorWrapperBase.__init__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_generator", ":", "DataGeneratorBase", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_generator", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.wrappers.NormalizedDataGeneratorWrapper.__call__": [[66, 70], ["wrappers.NormalizedDataGeneratorWrapper.data_generator", "wrappers.NormalizedDataGeneratorWrapper._normalize_volume"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.wrappers.NormalizedDataGeneratorWrapper._normalize_volume"], ["", "def", "__call__", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "batch_data", "=", "self", ".", "data_generator", "(", "batch_size", ")", "\n", "batch_data", "[", "'volume'", "]", "=", "self", ".", "_normalize_volume", "(", "batch_data", "[", "'volume'", "]", ")", "\n", "return", "batch_data", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.wrappers.NormalizedDataGeneratorWrapper._normalize_volume": [[71, 78], ["numpy.mean", "numpy.std", "ValueError", "tuple", "tuple", "range", "range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_normalize_volume", "(", "batch_volume", ")", ":", "\n", "        ", "if", "not", "batch_volume", ".", "ndim", "==", "5", ":", "\n", "            ", "raise", "ValueError", "(", "'input is not a volume'", ")", "\n", "", "mean", "=", "np", ".", "mean", "(", "batch_volume", ",", "axis", "=", "tuple", "(", "range", "(", "2", ",", "batch_volume", ".", "ndim", ")", ")", ",", "keepdims", "=", "True", ")", "\n", "std", "=", "np", ".", "std", "(", "batch_volume", ",", "axis", "=", "tuple", "(", "range", "(", "2", ",", "batch_volume", ".", "ndim", ")", ")", ",", "keepdims", "=", "True", ")", "\n", "return", "(", "batch_volume", "-", "mean", ")", "/", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.wrappers.NormalizedDataGeneratorWrapper.__len__": [[79, 81], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_generator", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.base.DataGeneratorBase.__init__": [[8, 13], ["None"], "methods", ["None"], ["        ", "pass", "\n", "\n", "", "@", "abstractmethod", "\n", "def", "save", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.base.DataGeneratorBase.__call__": [[14, 28], ["base.DataGeneratorBase._get_data", "numpy.random.choice", "base.DataGeneratorBase.__len__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataGenerator._get_data", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.__len__"], ["", "@", "abstractmethod", "\n", "def", "load", "(", "self", ",", "checkpoint_path", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.base.DataGeneratorBase.__len__": [[29, 31], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.base.DataGeneratorBase._get_data": [[32, 35], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.base.DataGeneratorBase.data_format": [[36, 39], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.base.DataGeneratorWrapperBase.__init__": [[43, 45], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.base.DataGeneratorWrapperBase.__len__": [[46, 48], ["print", "len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.base.DataGeneratorWrapperBase.data_format": [[49, 52], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_mri.NtuMriDataProvider.__init__": [[51, 58], ["os.path.join", "os.path.join", "os.listdir", "len", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "data_dir", ",", "self", ".", "_data_format", "=", "self", ".", "DIR_HUB", "[", "args", "]", "\n", "self", ".", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "'image'", ")", "\n", "self", ".", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "'label'", ")", "\n", "self", ".", "all_ids", "=", "os", ".", "listdir", "(", "self", ".", "image_path", ")", "\n", "self", ".", "train_ids", "=", "self", ".", "all_ids", "[", ":", "-", "len", "(", "self", ".", "all_ids", ")", "//", "10", "]", "\n", "self", ".", "test_ids", "=", "self", ".", "all_ids", "[", "-", "len", "(", "self", ".", "all_ids", ")", "//", "10", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_mri.NtuMriDataProvider._get_raw_data_generator": [[59, 61], ["ntu_mri.NtuMriDataGenerator"], "methods", ["None"], ["", "def", "_get_raw_data_generator", "(", "self", ",", "data_ids", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "NtuMriDataGenerator", "(", "data_ids", ",", "self", ".", "data_format", ",", "data_dir", "=", "self", ".", "data_dir", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_mri.NtuMriDataProvider.data_format": [[62, 65], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "data_format", "(", "self", ")", "->", "dict", ":", "\n", "        ", "return", "self", ".", "_data_format", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_mri.NtuMriDataGenerator.__init__": [[71, 79], ["base.DataGeneratorBase.__init__", "ntu_mri.NtuMriDataGenerator._read_diagnosis_file", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_mri.NtuMriDataGenerator._read_diagnosis_file"], ["def", "__init__", "(", "self", ",", "data_ids", ",", "data_format", ",", "data_dir", ",", "random", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_ids", ",", "data_format", ",", "random", ")", "\n", "\n", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "diagnosis_dict", "=", "self", ".", "_read_diagnosis_file", "(", "NTU_DIAGNOSIS_DIR", ")", "\n", "\n", "self", ".", "image_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'image'", ")", "\n", "self", ".", "label_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "'label'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_mri.NtuMriDataGenerator._read_diagnosis_file": [[80, 93], ["collections.defaultdict", "print", "open", "csv.DictReader"], "methods", ["None"], ["", "def", "_read_diagnosis_file", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "diagnosis_dict", "=", "defaultdict", "(", "str", ")", "\n", "if", "file_path", "is", "None", ":", "\n", "            ", "print", "(", "'NTU_DIAGNOSIS_PATH not set. Please configure .env file.'", ")", "\n", "return", "diagnosis_dict", "\n", "", "with", "open", "(", "file_path", ",", "'r'", ")", "as", "file", ":", "\n", "            ", "reader", "=", "csv", ".", "DictReader", "(", "file", ")", "\n", "for", "row", "in", "reader", ":", "\n", "                ", "diagnosis", "=", "row", "[", "'2_diagnosis'", "]", "\n", "if", "diagnosis", "not", "in", "self", ".", "valid_diagnosis", ":", "\n", "                    ", "diagnosis", "=", "''", "\n", "", "diagnosis_dict", "[", "row", "[", "'0_medical_records'", "]", "]", "=", "diagnosis", "\n", "", "", "return", "diagnosis_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_mri.NtuMriDataGenerator._get_data": [[94, 123], ["numpy.empty", "numpy.empty", "enumerate", "ntu_mri.NtuMriDataGenerator._get_image_and_label", "utils.strip_file_extension", "batch_diagnosis.append", "affines.append", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataGenerator._get_image_and_label", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.strip_file_extension"], ["", "def", "_get_data", "(", "self", ",", "data_ids", ")", ":", "\n", "        ", "batch_volume", "=", "np", ".", "empty", "(", "(", "\n", "len", "(", "data_ids", ")", ",", "\n", "self", ".", "data_format", "[", "'channels'", "]", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", "self", ".", "data_format", "[", "'width'", "]", ",", "\n", ")", ")", "\n", "batch_label", "=", "np", ".", "empty", "(", "(", "\n", "len", "(", "data_ids", ")", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", "self", ".", "data_format", "[", "'width'", "]", ",", "\n", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "batch_diagnosis", "=", "[", "]", "\n", "affines", "=", "[", "]", "\n", "for", "idx", ",", "data_id", "in", "enumerate", "(", "data_ids", ")", ":", "\n", "            ", "batch_volume", "[", "idx", "]", ",", "batch_label", "[", "idx", "]", ",", "affine", "=", "self", ".", "_get_image_and_label", "(", "data_id", ")", "\n", "data_id_strip_file_ext", "=", "strip_file_extension", "(", "data_id", ")", "\n", "diag", "=", "self", ".", "diagnosis_dict", "[", "data_id_strip_file_ext", "]", "\n", "batch_diagnosis", ".", "append", "(", "diag", ")", "\n", "affines", ".", "append", "(", "affine", ")", "\n", "\n", "", "return", "{", "\n", "'volume'", ":", "batch_volume", ",", "\n", "'label'", ":", "batch_label", ",", "\n", "'data_ids'", ":", "data_ids", ",", "\n", "'affines'", ":", "affines", ",", "\n", "'diagnosis'", ":", "batch_diagnosis", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_mri.NtuMriDataGenerator._get_image_and_label": [[125, 141], ["os.path.join", "nibabel.load", "nibabel.load.get_fdata", "numpy.transpose", "os.path.join", "os.path.exists", "nibabel.load().get_fdata", "numpy.transpose", "nibabel.load"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load"], ["", "def", "_get_image_and_label", "(", "self", ",", "data_id", ")", ":", "\n", "# Dims: (N, C, D, H, W)", "\n", "        ", "img_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_path", ",", "data_id", ")", "\n", "image_obj", "=", "nib", ".", "load", "(", "img_path", ")", "\n", "affine", "=", "image_obj", ".", "affine", "\n", "image", "=", "image_obj", ".", "get_fdata", "(", ")", "\n", "image", "=", "np", ".", "transpose", "(", "image", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_path", ",", "data_id", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "label_path", ")", ":", "\n", "            ", "label", "=", "nib", ".", "load", "(", "label_path", ")", ".", "get_fdata", "(", ")", "\n", "label", "=", "np", ".", "transpose", "(", "label", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "label", "=", "None", "\n", "\n", "", "return", "image", ",", "label", ",", "affine", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.tcia_ct.TciaCtDataProvider.__init__": [[32, 52], ["os.listdir", "tcia_ct.TciaCtDataProvider.train_ids.extend", "os.listdir", "tcia_ct.TciaCtDataProvider.test_ids.extend", "ValueError", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "mode", "=", "''", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        :param mode: ['oncologist', 'radiographer', '']\n        empty string for mode means both\n        \"\"\"", "\n", "if", "mode", "==", "'oncologist'", "or", "mode", "==", "'radiographer'", ":", "\n", "            ", "self", ".", "modes", "=", "[", "mode", "]", "\n", "", "elif", "mode", "==", "''", ":", "\n", "            ", "self", ".", "modes", "=", "[", "'oncologist'", ",", "'radiographer'", "]", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f'Unsupported mode {mode}'", ")", "\n", "\n", "", "self", ".", "train_ids", "=", "[", "]", "\n", "self", ".", "test_ids", "=", "[", "]", "\n", "\n", "for", "m", "in", "self", ".", "modes", ":", "\n", "            ", "train_ids", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "TEST_DIR", ",", "m", ")", ")", "\n", "self", ".", "train_ids", ".", "extend", "(", "[", "os", ".", "path", ".", "join", "(", "TEST_DIR", ",", "m", ",", "idx", ")", "for", "idx", "in", "train_ids", "]", ")", "\n", "test_ids", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "VAL_DIR", ",", "m", ")", ")", "\n", "self", ".", "test_ids", ".", "extend", "(", "[", "os", ".", "path", ".", "join", "(", "VAL_DIR", ",", "m", ",", "idx", ")", "for", "idx", "in", "test_ids", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.tcia_ct.TciaCtDataProvider._get_raw_data_generator": [[53, 55], ["tcia_ct.TciaCtDataGenerator"], "methods", ["None"], ["", "", "def", "_get_raw_data_generator", "(", "self", ",", "data_ids", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "TciaCtDataGenerator", "(", "data_ids", ",", "self", ".", "data_format", ",", "self", ".", "modes", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.tcia_ct.TciaCtDataProvider.data_format": [[56, 59], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "data_format", "(", "self", ")", "->", "dict", ":", "\n", "        ", "return", "self", ".", "_data_format", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.tcia_ct.TciaCtDataGenerator.__init__": [[63, 72], ["base.DataGeneratorBase.__init__", "tcia_ct.TciaCtDataGenerator._preload"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.structseg.StructSegDataGenerator._preload"], ["    ", "def", "__init__", "(", "self", ",", "data_ids", ",", "data_format", ",", "mode", ",", "random", "=", "True", ",", "preload", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_ids", ",", "data_format", ",", "random", ")", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "preload", "=", "preload", "\n", "if", "preload", ":", "\n", "            ", "self", ".", "all_volumes", "=", "{", "}", "\n", "self", ".", "all_labels", "=", "{", "}", "\n", "self", ".", "all_headers", "=", "{", "}", "\n", "self", ".", "_preload", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.tcia_ct.TciaCtDataGenerator._get_data": [[73, 106], ["numpy.zeros", "numpy.zeros", "enumerate", "headers.append", "len", "len", "tcia_ct.TciaCtDataGenerator._preload_get_image_and_label", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataGenerator._preload_get_image_and_label"], ["", "", "def", "_get_data", "(", "self", ",", "data_ids", ")", ":", "\n", "        ", "batch_volume", "=", "np", ".", "zeros", "(", "(", "\n", "len", "(", "data_ids", ")", ",", "\n", "self", ".", "data_format", "[", "'channels'", "]", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", "self", ".", "data_format", "[", "'width'", "]", ",", "\n", ")", ")", "\n", "batch_label", "=", "np", ".", "zeros", "(", "(", "\n", "len", "(", "data_ids", ")", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", "self", ".", "data_format", "[", "'width'", "]", ",", "\n", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "headers", "=", "[", "]", "\n", "for", "idx", ",", "data_id", "in", "enumerate", "(", "data_ids", ")", ":", "\n", "            ", "if", "self", ".", "preload", ":", "\n", "                ", "volume", "=", "self", ".", "all_volumes", "[", "data_id", "]", "\n", "label", "=", "self", ".", "all_labels", "[", "data_id", "]", "\n", "header", "=", "self", ".", "all_headers", "[", "data_id", "]", "\n", "", "else", ":", "\n", "                ", "volume", ",", "label", ",", "header", "=", "self", ".", "_preload_get_image_and_label", "(", "data_id", ")", "\n", "\n", "", "batch_volume", "[", "idx", ",", ":", ",", ":", "len", "(", "volume", ")", "]", "=", "volume", "[", ":", "self", ".", "data_format", "[", "'depth'", "]", "]", "\n", "batch_label", "[", "idx", ",", ":", "len", "(", "volume", ")", "]", "=", "label", "[", ":", "self", ".", "data_format", "[", "'depth'", "]", "]", "\n", "headers", ".", "append", "(", "header", ")", "\n", "\n", "", "return", "{", "\n", "'volume'", ":", "batch_volume", ",", "\n", "'label'", ":", "batch_label", ",", "\n", "'data_ids'", ":", "data_ids", ",", "\n", "'headers'", ":", "headers", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.tcia_ct.TciaCtDataGenerator._preload": [[108, 113], ["print", "tqdm.tqdm.tqdm", "tcia_ct.TciaCtDataGenerator._preload_get_image_and_label"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataGenerator._preload_get_image_and_label"], ["", "def", "_preload", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Preloading Data-Generator'", ")", "\n", "for", "data_id", "in", "tqdm", "(", "self", ".", "data_ids", ")", ":", "\n", "            ", "self", ".", "all_volumes", "[", "data_id", "]", ",", "self", ".", "all_labels", "[", "data_id", "]", ",", "self", ".", "all_headers", "[", "data_id", "]", "=", "self", ".", "_preload_get_image_and_label", "(", "data_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.tcia_ct.TciaCtDataGenerator._preload_get_image_and_label": [[114, 131], ["os.path.join", "nrrd.read", "sorted", "numpy.zeros_like", "enumerate", "data.transpose.transpose.transpose", "label.transpose.transpose.transpose", "os.listdir", "os.path.join", "nrrd.read", "os.path.join"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_preload_get_image_and_label", "(", "data_id", ")", ":", "\n", "# Dims: (N, C, D, H, W)", "\n", "        ", "img_path", "=", "os", ".", "path", ".", "join", "(", "data_id", ",", "'CT_IMAGE.nrrd'", ")", "\n", "data", ",", "header", "=", "nrrd", ".", "read", "(", "img_path", ")", "\n", "\n", "segmentations", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "data_id", ",", "'segmentations'", ")", ")", ")", "\n", "label", "=", "np", ".", "zeros_like", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "for", "class_idx", ",", "seg", "in", "enumerate", "(", "segmentations", ")", ":", "\n", "            ", "one_class_label_path", "=", "os", ".", "path", ".", "join", "(", "data_id", ",", "'segmentations'", ",", "seg", ")", "\n", "one_class_label", ",", "_", "=", "nrrd", ".", "read", "(", "one_class_label_path", ")", "\n", "label", "+=", "one_class_label", "*", "(", "class_idx", "+", "1", ")", "*", "(", "label", "==", "0", ")", "\n", "# TODO, handle overlapping labels", "\n", "\n", "", "data", "=", "data", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "label", "=", "label", ".", "transpose", "(", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "return", "data", ",", "label", ",", "header", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.structseg.StructSeg2019DataProvider.__init__": [[82, 94], ["args.endswith", "os.listdir", "len", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "args", ":", "str", ")", ":", "\n", "        ", "is_test", "=", "False", "\n", "if", "args", ".", "endswith", "(", "'_test'", ")", ":", "\n", "            ", "args", "=", "args", "[", ":", "-", "5", "]", "\n", "is_test", "=", "True", "\n", "\n", "", "self", ".", "data_dir", ",", "self", ".", "_data_format", ",", "self", ".", "_metric", "=", "self", ".", "DIR_HUB", "[", "args", "]", "\n", "if", "is_test", ":", "\n", "            ", "self", ".", "data_dir", "=", "'/input'", "\n", "", "self", ".", "all_ids", "=", "os", ".", "listdir", "(", "self", ".", "data_dir", ")", "\n", "self", ".", "train_ids", "=", "self", ".", "all_ids", "[", ":", "-", "len", "(", "self", ".", "all_ids", ")", "//", "10", "]", "\n", "self", ".", "test_ids", "=", "self", ".", "all_ids", "[", "-", "len", "(", "self", ".", "all_ids", ")", "//", "10", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.structseg.StructSeg2019DataProvider._get_raw_data_generator": [[95, 97], ["structseg.StructSegDataGenerator"], "methods", ["None"], ["", "def", "_get_raw_data_generator", "(", "self", ",", "data_ids", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "StructSegDataGenerator", "(", "data_ids", ",", "self", ".", "data_format", ",", "data_dir", "=", "self", ".", "data_dir", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.structseg.StructSeg2019DataProvider.data_format": [[98, 101], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "data_format", "(", "self", ")", "->", "dict", ":", "\n", "        ", "return", "self", ".", "_data_format", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.structseg.StructSegDataGenerator.__init__": [[105, 114], ["base.DataGeneratorBase.__init__", "structseg.StructSegDataGenerator._preload"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.structseg.StructSegDataGenerator._preload"], ["    ", "def", "__init__", "(", "self", ",", "data_ids", ",", "data_format", ",", "data_dir", ",", "random", "=", "True", ",", "preload", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_ids", ",", "data_format", ",", "random", ")", "\n", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "preload", "=", "preload", "\n", "if", "preload", ":", "\n", "            ", "self", ".", "all_volumes", "=", "{", "}", "\n", "self", ".", "all_labels", "=", "{", "}", "\n", "self", ".", "all_affines", "=", "{", "}", "\n", "self", ".", "_preload", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.structseg.StructSegDataGenerator._get_data": [[115, 148], ["numpy.zeros", "numpy.zeros", "enumerate", "affines.append", "len", "len", "structseg.StructSegDataGenerator._preload_get_image_and_label", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataGenerator._preload_get_image_and_label"], ["", "", "def", "_get_data", "(", "self", ",", "data_ids", ")", ":", "\n", "        ", "batch_volume", "=", "np", ".", "zeros", "(", "(", "\n", "len", "(", "data_ids", ")", ",", "\n", "self", ".", "data_format", "[", "'channels'", "]", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", "self", ".", "data_format", "[", "'width'", "]", ",", "\n", ")", ")", "\n", "batch_label", "=", "np", ".", "zeros", "(", "(", "\n", "len", "(", "data_ids", ")", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", "self", ".", "data_format", "[", "'width'", "]", ",", "\n", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "affines", "=", "[", "]", "\n", "for", "idx", ",", "data_id", "in", "enumerate", "(", "data_ids", ")", ":", "\n", "            ", "if", "self", ".", "preload", ":", "\n", "                ", "volume", "=", "self", ".", "all_volumes", "[", "data_id", "]", "\n", "label", "=", "self", ".", "all_labels", "[", "data_id", "]", "\n", "affine", "=", "self", ".", "all_affines", "[", "data_id", "]", "\n", "", "else", ":", "\n", "                ", "volume", ",", "label", ",", "affine", "=", "self", ".", "_preload_get_image_and_label", "(", "data_id", ")", "\n", "\n", "", "batch_volume", "[", "idx", ",", ":", ",", ":", "len", "(", "volume", ")", "]", "=", "volume", "[", ":", "self", ".", "data_format", "[", "'depth'", "]", "]", "\n", "batch_label", "[", "idx", ",", ":", "len", "(", "volume", ")", "]", "=", "label", "[", ":", "self", ".", "data_format", "[", "'depth'", "]", "]", "\n", "affines", ".", "append", "(", "affine", ")", "\n", "\n", "", "return", "{", "\n", "'volume'", ":", "batch_volume", ",", "\n", "'label'", ":", "batch_label", ",", "\n", "'data_ids'", ":", "data_ids", ",", "\n", "'affines'", ":", "affines", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.structseg.StructSegDataGenerator._preload": [[150, 155], ["print", "tqdm.tqdm.tqdm", "structseg.StructSegDataGenerator._preload_get_image_and_label"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataGenerator._preload_get_image_and_label"], ["", "def", "_preload", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Preloading Data-Generator'", ")", "\n", "for", "data_id", "in", "tqdm", "(", "self", ".", "data_ids", ")", ":", "\n", "            ", "self", ".", "all_volumes", "[", "data_id", "]", ",", "self", ".", "all_labels", "[", "data_id", "]", ",", "self", ".", "all_affines", "[", "data_id", "]", "=", "self", ".", "_preload_get_image_and_label", "(", "data_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.structseg.StructSegDataGenerator._preload_get_image_and_label": [[156, 171], ["os.path.join", "nibabel.load", "nibabel.load.get_fdata", "numpy.transpose", "os.path.join", "os.path.exists", "nibabel.load().get_fdata", "numpy.transpose", "nibabel.load"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load"], ["", "", "def", "_preload_get_image_and_label", "(", "self", ",", "data_id", ")", ":", "\n", "# Dims: (N, C, D, H, W)", "\n", "        ", "img_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "f\"{data_id}/data.nii.gz\"", ")", "\n", "image_obj", "=", "nib", ".", "load", "(", "img_path", ")", "\n", "affine", "=", "image_obj", ".", "affine", "\n", "image", "=", "image_obj", ".", "get_fdata", "(", ")", "\n", "image", "=", "np", ".", "transpose", "(", "image", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "f\"{data_id}/label.nii.gz\"", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "label_path", ")", ":", "\n", "            ", "label", "=", "nib", ".", "load", "(", "label_path", ")", ".", "get_fdata", "(", ")", "\n", "label", "=", "np", ".", "transpose", "(", "label", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "label", "=", "None", "\n", "", "return", "image", ",", "label", ",", "affine", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataProvider.__init__": [[27, 31], ["os.listdir", "len", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "all_ids", "=", "os", ".", "listdir", "(", "NTU_CT_DIR", ")", "\n", "self", ".", "train_ids", "=", "self", ".", "all_ids", "[", ":", "-", "len", "(", "self", ".", "all_ids", ")", "//", "10", "]", "\n", "self", ".", "test_ids", "=", "self", ".", "all_ids", "[", "-", "len", "(", "self", ".", "all_ids", ")", "//", "10", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataProvider._get_raw_data_generator": [[32, 34], ["ntu_ct.NtuCtDataGenerator"], "methods", ["None"], ["", "def", "_get_raw_data_generator", "(", "self", ",", "data_ids", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "NtuCtDataGenerator", "(", "data_ids", ",", "self", ".", "data_format", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataProvider.data_format": [[35, 38], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "data_format", "(", "self", ")", "->", "dict", ":", "\n", "        ", "return", "self", ".", "_data_format", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataGenerator.__init__": [[42, 45], ["base.DataGeneratorBase.__init__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_ids", ",", "data_format", ",", "random", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_ids", ",", "data_format", ",", "random", ")", "\n", "self", ".", "data_dir", "=", "NTU_CT_DIR", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataGenerator._get_data": [[46, 81], ["numpy.zeros", "numpy.zeros", "enumerate", "ntu_ct.NtuCtDataGenerator._preload_get_image_and_label", "affines.append", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataGenerator._preload_get_image_and_label"], ["", "def", "_get_data", "(", "self", ",", "data_ids", ")", ":", "\n", "        ", "batch_volume", "=", "np", ".", "zeros", "(", "(", "\n", "len", "(", "data_ids", ")", ",", "\n", "self", ".", "data_format", "[", "'channels'", "]", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", "self", ".", "data_format", "[", "'width'", "]", ",", "\n", ")", ")", "\n", "batch_label", "=", "np", ".", "zeros", "(", "(", "\n", "len", "(", "data_ids", ")", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", "self", ".", "data_format", "[", "'width'", "]", ",", "\n", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "affines", "=", "[", "]", "\n", "for", "idx", ",", "data_id", "in", "enumerate", "(", "data_ids", ")", ":", "\n", "            ", "volume", ",", "label", ",", "affine", "=", "self", ".", "_preload_get_image_and_label", "(", "data_id", ")", "\n", "batch_volume", "[", "idx", ",", ":", ",", ":", "volume", ".", "shape", "[", "-", "3", "]", ",", ":", "volume", ".", "shape", "[", "-", "2", "]", ",", ":", "volume", ".", "shape", "[", "-", "1", "]", "]", "=", "volume", "[", "\n", ":", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", ":", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", ":", "self", ".", "data_format", "[", "'width'", "]", "]", "\n", "batch_label", "[", "idx", ",", ":", "volume", ".", "shape", "[", "-", "3", "]", ",", ":", "volume", ".", "shape", "[", "-", "2", "]", ",", ":", "volume", ".", "shape", "[", "-", "1", "]", "]", "=", "label", "[", "\n", ":", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", ":", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", ":", "self", ".", "data_format", "[", "'width'", "]", "]", "\n", "affines", ".", "append", "(", "affine", ")", "\n", "\n", "", "return", "{", "\n", "'volume'", ":", "batch_volume", ",", "\n", "'label'", ":", "batch_label", ",", "\n", "'data_ids'", ":", "data_ids", ",", "\n", "'affines'", ":", "affines", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.ntu_ct.NtuCtDataGenerator._preload_get_image_and_label": [[83, 99], ["os.path.join", "nibabel.load", "nibabel.load.get_fdata", "numpy.clip", "numpy.transpose", "os.path.join", "os.path.exists", "nibabel.load().get_fdata", "numpy.transpose", "nibabel.load"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.preprocess_tools.image_utils.ImageProcessor.load"], ["", "def", "_preload_get_image_and_label", "(", "self", ",", "data_id", ")", ":", "\n", "# Dims: (N, C, D, H, W)", "\n", "        ", "img_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "f\"{data_id}/data.nii.gz\"", ")", "\n", "image_obj", "=", "nib", ".", "load", "(", "img_path", ")", "\n", "affine", "=", "image_obj", ".", "affine", "\n", "image", "=", "image_obj", ".", "get_fdata", "(", ")", "\n", "image", "=", "np", ".", "clip", "(", "image", ",", "a_min", "=", "-", "1000.", ",", "a_max", "=", "None", ")", "\n", "image", "=", "np", ".", "transpose", "(", "image", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "f\"{data_id}/label.nii.gz\"", ")", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "label_path", ")", ":", "\n", "            ", "label", "=", "nib", ".", "load", "(", "label_path", ")", ".", "get_fdata", "(", ")", "\n", "label", "=", "np", ".", "transpose", "(", "label", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "label", "=", "None", "\n", "", "return", "image", ",", "label", ",", "affine", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataProvider.__init__": [[25, 37], ["brats2015.Brats2015DataProvider._get_dirs", "brats2015.Brats2015DataProvider._get_modal_bases", "brats2015.Brats2015DataProvider._get_all_ids", "print", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataProvider._get_dirs", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataProvider._get_modal_bases", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataProvider._get_all_ids"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "_metric", "=", "BRATSMetric", "\n", "\n", "self", ".", "data_dirs", "=", "self", ".", "_get_dirs", "(", "args", ")", "\n", "\n", "self", ".", "modal_bases", "=", "self", ".", "_get_modal_bases", "(", "args", ")", "\n", "\n", "self", ".", "all_ids", "=", "self", ".", "_get_all_ids", "(", ")", "\n", "\n", "self", ".", "train_ids", "=", "self", ".", "all_ids", "[", ":", "-", "len", "(", "self", ".", "all_ids", ")", "//", "10", "]", "\n", "self", ".", "test_ids", "=", "self", ".", "all_ids", "[", "-", "len", "(", "self", ".", "all_ids", ")", "//", "10", ":", "]", "\n", "print", "(", "f'training on {len(self.train_ids)} samples, '", "\n", "f'validating on {len(self.test_ids)} samples'", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataProvider._get_all_ids": [[39, 46], ["os.listdir", "all_ids.extend", "os.path.join"], "methods", ["None"], ["", "def", "_get_all_ids", "(", "self", ")", ":", "\n", "        ", "all_ids", "=", "[", "]", "\n", "for", "data_dir", "in", "self", ".", "data_dirs", ":", "\n", "            ", "folder_names", "=", "os", ".", "listdir", "(", "data_dir", ")", "\n", "folder_dirs", "=", "[", "os", ".", "path", ".", "join", "(", "data_dir", ",", "foldername", ")", "for", "foldername", "in", "folder_names", "]", "\n", "all_ids", ".", "extend", "(", "folder_dirs", ")", "\n", "", "return", "all_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataProvider._get_raw_data_generator": [[47, 49], ["brats2015.Brats2015DataGenerator"], "methods", ["None"], ["", "def", "_get_raw_data_generator", "(", "self", ",", "data_ids", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "Brats2015DataGenerator", "(", "data_ids", ",", "self", ".", "data_format", ",", "self", ".", "modal_bases", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataProvider._get_dirs": [[50, 60], ["data_dirs.append", "data_dirs.append"], "methods", ["None"], ["", "def", "_get_dirs", "(", "self", ",", "args", ")", ":", "\n", "        ", "data_dirs", "=", "[", "]", "\n", "if", "'hgg'", "in", "args", ":", "\n", "            ", "data_dirs", ".", "append", "(", "BRATS2015_HGG_DIR", ")", "\n", "", "if", "'lgg'", "in", "args", ":", "\n", "            ", "data_dirs", ".", "append", "(", "BRATS2015_LGG_DIR", ")", "\n", "#   default", "\n", "", "if", "not", "data_dirs", ":", "\n", "            ", "data_dirs", "=", "[", "BRATS2015_HGG_DIR", ",", "BRATS2015_LGG_DIR", "]", "\n", "", "return", "data_dirs", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataProvider._get_modal_bases": [[61, 75], ["modal_bases.append", "modal_bases.append", "modal_bases.append", "modal_bases.append"], "methods", ["None"], ["", "def", "_get_modal_bases", "(", "self", ",", "args", ")", ":", "\n", "        ", "modal_bases", "=", "[", "]", "\n", "if", "'Flair'", "in", "args", ":", "\n", "            ", "modal_bases", ".", "append", "(", "'Flair.'", ")", "\n", "", "if", "'T1'", "in", "args", ":", "\n", "            ", "modal_bases", ".", "append", "(", "'T1.'", ")", "\n", "", "if", "'T1c'", "in", "args", ":", "\n", "            ", "modal_bases", ".", "append", "(", "'T1c.'", ")", "\n", "", "if", "'T2c'", "in", "args", ":", "\n", "            ", "modal_bases", ".", "append", "(", "'T2.'", ")", "\n", "#   default", "\n", "", "if", "not", "modal_bases", ":", "\n", "            ", "modal_bases", "=", "[", "'Flair.'", ",", "'T1.'", ",", "'T1c.'", ",", "'T2.'", "]", "\n", "", "return", "modal_bases", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataProvider.data_format": [[76, 84], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "data_format", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "\"channels\"", ":", "len", "(", "self", ".", "modal_bases", ")", ",", "\n", "\"depth\"", ":", "155", ",", "\n", "\"height\"", ":", "240", ",", "\n", "\"width\"", ":", "240", ",", "\n", "\"class_num\"", ":", "5", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataGenerator.__init__": [[89, 92], ["base.DataGeneratorBase.__init__"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_ids", ",", "data_format", ",", "modal_bases", ",", "random", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "data_ids", ",", "data_format", ",", "random", ")", "\n", "self", ".", "modal_bases", "=", "modal_bases", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataGenerator._get_image_and_label": [[93, 98], ["numpy.asarray", "brats2015.Brats2015DataGenerator._get_image_from_folder", "brats2015.Brats2015DataGenerator._get_image_from_folder"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataGenerator._get_image_from_folder", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataGenerator._get_image_from_folder"], ["", "def", "_get_image_and_label", "(", "self", ",", "data_id", ")", ":", "\n", "        ", "image", "=", "[", "self", ".", "_get_image_from_folder", "(", "data_id", ",", "base", ")", "for", "base", "in", "self", ".", "modal_bases", "]", "\n", "image", "=", "np", ".", "asarray", "(", "image", ")", "\n", "label", "=", "self", ".", "_get_image_from_folder", "(", "data_id", ",", "label_base", ")", "\n", "return", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataGenerator._get_image_from_folder": [[99, 112], ["os.path.join", "os.path.join", "SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "len", "len", "os.listdir", "os.listdir"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_get_image_from_folder", "(", "folder_dir", ",", "match_string", ")", ":", "\n", "        ", "modal_folder", "=", "[", "f", "for", "f", "in", "os", ".", "listdir", "(", "folder_dir", ")", "if", "match_string", "in", "f", "]", "\n", "assert", "(", "len", "(", "modal_folder", ")", "==", "1", ")", "\n", "modal_folder_dir", "=", "os", ".", "path", ".", "join", "(", "folder_dir", ",", "modal_folder", "[", "0", "]", ")", "\n", "\n", "data_filename", "=", "[", "f", "for", "f", "in", "os", ".", "listdir", "(", "modal_folder_dir", ")", "if", "data_extension", "in", "f", "]", "\n", "assert", "(", "len", "(", "data_filename", ")", "==", "1", ")", "\n", "data_dir", "=", "os", ".", "path", ".", "join", "(", "modal_folder_dir", ",", "data_filename", "[", "0", "]", ")", "\n", "\n", "image", "=", "sitk", ".", "ReadImage", "(", "data_dir", ")", "\n", "image_array", "=", "sitk", ".", "GetArrayFromImage", "(", "image", ")", "\n", "return", "image_array", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataGenerator._get_data": [[113, 131], ["numpy.empty", "numpy.empty", "enumerate", "brats2015.Brats2015DataGenerator._get_image_and_label", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.brats2015.Brats2015DataGenerator._get_image_and_label"], ["", "def", "_get_data", "(", "self", ",", "data_ids", ")", ":", "\n", "        ", "batch_volume", "=", "np", ".", "empty", "(", "(", "\n", "len", "(", "data_ids", ")", ",", "\n", "self", ".", "data_format", "[", "'channels'", "]", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", "self", ".", "data_format", "[", "'width'", "]", ",", "\n", ")", ")", "\n", "batch_label", "=", "np", ".", "empty", "(", "(", "\n", "len", "(", "data_ids", ")", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", "self", ".", "data_format", "[", "'width'", "]", ",", "\n", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "for", "idx", ",", "data_id", "in", "enumerate", "(", "data_ids", ")", ":", "\n", "            ", "batch_volume", "[", "idx", "]", ",", "batch_label", "[", "idx", "]", "=", "self", ".", "_get_image_and_label", "(", "data_id", ")", "\n", "", "return", "{", "'volume'", ":", "batch_volume", ",", "'label'", ":", "batch_label", ",", "'data_ids'", ":", "data_ids", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.get_full_data_generator": [[15, 19], ["data_provider_base.DataProviderBase._get_data_generator"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase._get_data_generator"], ["def", "get_full_data_generator", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "_get_data_generator", "(", "\n", "self", ".", "train_ids", "+", "self", ".", "test_ids", ",", "\n", "**", "{", "**", "kwargs", ",", "'augmentation'", ":", "False", "}", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.get_testing_data_generator": [[21, 25], ["data_provider_base.DataProviderBase._get_data_generator"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase._get_data_generator"], ["", "def", "get_testing_data_generator", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "_get_data_generator", "(", "\n", "self", ".", "test_ids", ",", "\n", "**", "{", "**", "kwargs", ",", "'augmentation'", ":", "False", ",", "'random'", ":", "False", "}", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.get_training_data_generator": [[27, 29], ["data_provider_base.DataProviderBase._get_data_generator"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase._get_data_generator"], ["", "def", "get_training_data_generator", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "_get_data_generator", "(", "self", ".", "train_ids", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase._get_data_generator": [[30, 38], ["data_provider_base.DataProviderBase._get_raw_data_generator", "wrappers.NormalizedDataGeneratorWrapper", "wrappers.AugmentedDataGeneratorWrapper", "wrappers.AsyncDataGeneratorWrapper"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase._get_raw_data_generator"], ["", "def", "_get_data_generator", "(", "self", ",", "data_ids", ",", "augmentation", "=", "False", ",", "async_load", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "data_generator", "=", "self", ".", "_get_raw_data_generator", "(", "data_ids", ",", "**", "kwargs", ")", "\n", "data_generator", "=", "NormalizedDataGeneratorWrapper", "(", "data_generator", ")", "\n", "if", "augmentation", ":", "\n", "            ", "data_generator", "=", "AugmentedDataGeneratorWrapper", "(", "data_generator", ")", "\n", "", "if", "async_load", ":", "\n", "            ", "data_generator", "=", "AsyncDataGeneratorWrapper", "(", "data_generator", ")", "\n", "", "return", "data_generator", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase._get_raw_data_generator": [[39, 42], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_raw_data_generator", "(", "self", ",", "data_ids", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.metric": [[43, 46], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "metric", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_metric", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.data_format": [[47, 51], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "abstractmethod", "\n", "def", "data_format", "(", "self", ")", "->", "dict", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_provider_base.DataProviderBase.__len__": [[52, 54], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "train_ids", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_providers.DataProviderHub.__init__": [[10, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "ProviderHub", "=", "{", "\n", "'ntu'", ":", "NtuMriDataProvider", ",", "\n", "'brats2015'", ":", "Brats2015DataProvider", ",", "\n", "'struct'", ":", "StructSeg2019DataProvider", ",", "\n", "'tciact'", ":", "TciaCtDataProvider", ",", "\n", "'ntuct'", ":", "NtuCtDataProvider", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.data.data_providers.DataProviderHub.__getitem__": [[19, 24], ["key.split.split.split"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "        ", "key", "=", "key", ".", "split", "(", "'_'", ")", "\n", "data_source", ",", "args", "=", "key", "[", "0", "]", ",", "key", "[", "1", ":", "]", "\n", "args", "=", "'_'", ".", "join", "(", "args", ")", "\n", "return", "self", ".", "ProviderHub", "[", "data_source", "]", ",", "args", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.base.AugmentorBase.co_transform": [[6, 9], ["None"], "methods", ["None"], ["    ", "@", "abstractmethod", "\n", "def", "fit_generator", "(", "self", ",", "training_data_generator", ",", "validation_data_generator", ",", "metric", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.volume_augmentation.VolumeAugmentor.__init__": [[8, 16], ["image_augmentation.ImageAugmentor", "image_augmentation.ImageAugmentor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_format", ":", "dict", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "data_format", "=", "data_format", "\n", "self", ".", "image_augmentor_1", "=", "ImageAugmentor", "(", "data_format", ",", "**", "kwargs", ")", "\n", "self", ".", "image_augmentor_2", "=", "ImageAugmentor", "(", "{", "\n", "**", "data_format", ",", "\n", "'height'", ":", "data_format", "[", "'depth'", "]", ",", "\n", "'depth'", ":", "data_format", "[", "'height'", "]", ",", "\n", "}", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.volume_augmentation.VolumeAugmentor._single_transform": [[17, 27], ["utils.get_2d_from_3d", "utils.get_2d_from_3d", "augmentor.co_transform", "utils.get_3d_from_2d", "utils.get_3d_from_2d"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_2d_from_3d", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_2d_from_3d", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.co_transform", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_3d_from_2d", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.None.utils.get_3d_from_2d"], ["", "@", "staticmethod", "\n", "def", "_single_transform", "(", "volume", ",", "label", ",", "augmentor", ",", "data_depth", ")", ":", "\n", "        ", "volume_2d", "=", "get_2d_from_3d", "(", "volume", ")", "\n", "label_2d", "=", "get_2d_from_3d", "(", "label", ")", "\n", "augmented_volume_2d", ",", "augmented_label_2d", "=", "augmentor", ".", "co_transform", "(", "volume_2d", ",", "label_2d", ")", "\n", "\n", "augmented_volume", "=", "get_3d_from_2d", "(", "augmented_volume_2d", ",", "data_depth", "=", "data_depth", ")", "\n", "augmented_label", "=", "get_3d_from_2d", "(", "augmented_label_2d", ",", "data_depth", "=", "data_depth", ")", "\n", "return", "augmented_volume", ",", "augmented_label", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.volume_augmentation.VolumeAugmentor.co_transform": [[28, 55], ["volume_augmentation.VolumeAugmentor._single_transform", "augmented_volume.transpose.transpose.transpose", "augmented_label.transpose.transpose.transpose", "volume_augmentation.VolumeAugmentor._single_transform", "augmented_volume.transpose.transpose.transpose", "augmented_label.transpose.transpose.transpose", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.volume_augmentation.VolumeAugmentor._single_transform", "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.volume_augmentation.VolumeAugmentor._single_transform"], ["", "def", "co_transform", "(", "self", ",", "volume", ",", "label", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "volume", ".", "ndim", "!=", "5", ":", "\n", "            ", "raise", "ValueError", "(", "f'batch_data is not a valid volume. shape: {volume.shape}'", ")", "\n", "\n", "", "if", "label", ".", "ndim", "!=", "4", ":", "\n", "            ", "raise", "ValueError", "(", "f'batch_label is not a valid label. shape: {label.shape}'", ")", "\n", "\n", "", "augmented_volume", ",", "augmented_label", "=", "self", ".", "_single_transform", "(", "\n", "volume", ",", "\n", "label", ",", "\n", "self", ".", "image_augmentor_1", ",", "\n", "self", ".", "data_format", "[", "'depth'", "]", ",", "\n", ")", "\n", "\n", "augmented_volume", "=", "augmented_volume", ".", "transpose", "(", "[", "0", ",", "1", ",", "3", ",", "2", ",", "4", "]", ")", "\n", "augmented_label", "=", "augmented_label", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "\n", "augmented_volume", ",", "augmented_label", "=", "self", ".", "_single_transform", "(", "\n", "augmented_volume", ",", "\n", "augmented_label", ",", "\n", "self", ".", "image_augmentor_2", ",", "\n", "self", ".", "data_format", "[", "'height'", "]", ",", "\n", ")", "\n", "\n", "augmented_volume", "=", "augmented_volume", ".", "transpose", "(", "[", "0", ",", "1", ",", "3", ",", "2", ",", "4", "]", ")", "\n", "augmented_label", "=", "augmented_label", ".", "transpose", "(", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "return", "augmented_volume", ",", "augmented_label", "\n", "", "", ""]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.__init__": [[15, 28], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "data_format", ":", "dict", ",", "\n", "mode", "=", "'albumentations'", ",", "\n", ")", ":", "\n", "        ", "self", ".", "data_channels", "=", "data_format", "[", "'channels'", "]", "\n", "self", ".", "data_height", "=", "data_format", "[", "'height'", "]", "\n", "self", ".", "data_width", "=", "data_format", "[", "'width'", "]", "\n", "self", ".", "mode", "=", "mode", "\n", "\n", "self", ".", "transform_fns", "=", "{", "\n", "'albumentations'", ":", "self", ".", "_albumentations_transform", ",", "\n", "'identity'", ":", "self", ".", "_identity_transform", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor.co_transform": [[30, 36], ["transform_fn", "len", "len"], "methods", ["None"], ["", "def", "co_transform", "(", "self", ",", "batch_image", ",", "batch_label", ",", "**", "kwargs", ")", ":", "\n", "        ", "assert", "(", "batch_image", ".", "shape", "[", "-", "3", ":", "]", "==", "(", "self", ".", "data_channels", ",", "self", ".", "data_height", ",", "self", ".", "data_width", ")", ")", "\n", "assert", "(", "len", "(", "batch_label", ")", "==", "len", "(", "batch_image", ")", ")", "\n", "\n", "transform_fn", "=", "self", ".", "transform_fns", "[", "self", ".", "mode", "]", "\n", "return", "transform_fn", "(", "batch_image", ",", "batch_label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor._albumentations_transform": [[37, 63], ["numpy.transpose", "enumerate", "image_augmentation.ImageAugmentor._albumentations_strong_aug", "image_augmentation.ImageAugmentor.add_targets", "image_augmentation.ImageAugmentor.", "numpy.asarray", "numpy.asarray", "numpy.transpose", "zip", "range", "range", "len", "len"], "methods", ["home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor._albumentations_strong_aug"], ["", "def", "_albumentations_transform", "(", "self", ",", "batch_image", ":", "np", ".", "array", ",", "batch_label", ":", "np", ".", "array", ")", ":", "\n", "        ", "batch_image", "=", "np", ".", "transpose", "(", "batch_image", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "\n", "data_dict", "=", "{", "'image'", ":", "batch_image", "[", "0", "]", ",", "'mask'", ":", "batch_label", "[", "0", "]", "}", "\n", "header_dict", "=", "{", "}", "\n", "for", "idx", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "zip", "(", "batch_image", ",", "batch_label", ")", ")", ":", "\n", "            ", "data_dict", "[", "f'image_{idx}'", "]", "=", "image", "\n", "data_dict", "[", "f'mask_{idx}'", "]", "=", "label", "\n", "header_dict", "[", "f'image_{idx}'", "]", "=", "'image'", "\n", "header_dict", "[", "f'mask_{idx}'", "]", "=", "'mask'", "\n", "\n", "", "augmentation", "=", "self", ".", "_albumentations_strong_aug", "(", ")", "\n", "augmentation", ".", "add_targets", "(", "header_dict", ")", "\n", "augmented_data", "=", "augmentation", "(", "**", "data_dict", ")", "\n", "\n", "transformed_image", "=", "[", "\n", "augmented_data", "[", "f'image_{idx}'", "]", "for", "idx", "in", "range", "(", "len", "(", "batch_image", ")", ")", "\n", "]", "\n", "transformed_label", "=", "[", "\n", "augmented_data", "[", "f'mask_{idx}'", "]", "for", "idx", "in", "range", "(", "len", "(", "batch_label", ")", ")", "\n", "]", "\n", "\n", "transformed_image", "=", "np", ".", "asarray", "(", "transformed_image", ")", "\n", "transformed_label", "=", "np", ".", "asarray", "(", "transformed_label", ")", "\n", "transformed_image", "=", "np", ".", "transpose", "(", "transformed_image", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "return", "transformed_image", ",", "transformed_label", "\n", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor._albumentations_strong_aug": [[64, 69], ["albumentations.Compose", "albumentations.ShiftScaleRotate", "albumentations.Flip"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_albumentations_strong_aug", "(", ")", "->", "Compose", ":", "\n", "        ", "return", "Compose", "(", "[", "\n", "ShiftScaleRotate", "(", "shift_limit", "=", "0.1", ",", "scale_limit", "=", "0.1", ",", "rotate_limit", "=", "20", ")", ",", "\n", "Flip", "(", ")", ",", "\n", "# ElasticTransform(alpha=720, sigma=24, approximate=False),", "\n"]], "home.repos.pwc.inspect_result.raywu0123_Brain-Tumor-Segmentation.augmentations.image_augmentation.ImageAugmentor._identity_transform": [[73, 76], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_identity_transform", "(", "batch_image", ",", "batch_label", ")", ":", "\n", "        ", "return", "batch_image", ",", "batch_label", "\n", "", "", ""]]}