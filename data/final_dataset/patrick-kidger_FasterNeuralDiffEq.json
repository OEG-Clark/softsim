{"home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.None.histogram.main": [[13, 59], ["os.listdir", "matplotlib.figure", "zip", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.show", "all", "list", "len", "len", "results.items", "matplotlib.hist", "os.listdir", "min", "itertools.chain", "results.items", "results[].append", "len", "open", "json.load", "ts.extend"], "function", ["None"], ["def", "main", "(", "dataset", ",", "models", ",", "forward", ",", "accepts", ",", "rejects", ")", ":", "\n", "    ", "assert", "not", "(", "accepts", "and", "rejects", ")", "\n", "if", "forward", ":", "\n", "        ", "if", "accepts", ":", "\n", "            ", "string", "=", "'forward_accept_ts'", "\n", "", "elif", "rejects", ":", "\n", "            ", "string", "=", "'forward_reject_ts'", "\n", "", "else", ":", "\n", "            ", "string", "=", "'forward_ts'", "\n", "", "", "else", ":", "\n", "        ", "if", "accepts", ":", "\n", "            ", "string", "=", "'backward_accept_ts'", "\n", "", "elif", "rejects", ":", "\n", "            ", "string", "=", "'backward_reject_ts'", "\n", "", "else", ":", "\n", "            ", "string", "=", "'backward_ts'", "\n", "", "", "loc", "=", "_here", "/", "'results'", "/", "dataset", "\n", "results", "=", "{", "}", "\n", "num_results", "=", "math", ".", "inf", "\n", "for", "folder", "in", "os", ".", "listdir", "(", "loc", ")", ":", "\n", "        ", "if", "all", "(", "model_spec", "in", "folder", "for", "model_spec", "in", "models", ")", ":", "\n", "            ", "results", "[", "folder", "]", "=", "[", "]", "\n", "for", "run", "in", "os", ".", "listdir", "(", "loc", "/", "folder", ")", ":", "\n", "                ", "with", "open", "(", "loc", "/", "folder", "/", "run", ",", "'r'", ")", "as", "f", ":", "\n", "                    ", "content", "=", "json", ".", "load", "(", "f", ")", "\n", "", "ts", "=", "[", "]", "\n", "for", "info", "in", "content", "[", "'history'", "]", ":", "\n", "                    ", "ts", ".", "extend", "(", "info", "[", "'train_metrics'", "]", "[", "string", "]", ")", "\n", "", "results", "[", "folder", "]", ".", "append", "(", "ts", ")", "\n", "", "num_results", "=", "min", "(", "num_results", ",", "len", "(", "results", "[", "folder", "]", ")", ")", "\n", "", "", "results", "=", "{", "folder", ":", "list", "(", "it", ".", "chain", "(", "*", "result", "[", ":", "num_results", "]", ")", ")", "for", "folder", ",", "result", "in", "results", ".", "items", "(", ")", "}", "\n", "\n", "colours", "=", "[", "'tab:red'", ",", "'tab:blue'", "]", "\n", "assert", "len", "(", "colours", ")", ">=", "len", "(", "results", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "7", ",", "2", ")", ")", "\n", "for", "c", ",", "(", "folder", ",", "ts", ")", "in", "(", "zip", "(", "colours", ",", "results", ".", "items", "(", ")", ")", ")", ":", "\n", "        ", "if", "'True'", "in", "folder", ":", "\n", "            ", "folder", "=", "'Seminorm'", "\n", "", "else", ":", "\n", "            ", "folder", "=", "'Default norm'", "\n", "", "plt", ".", "hist", "(", "ts", ",", "alpha", "=", "0.8", ",", "label", "=", "folder", ",", "bins", "=", "200", ",", "color", "=", "c", ")", "\n", "", "plt", ".", "xlabel", "(", "'t'", ")", "\n", "plt", ".", "ylabel", "(", "'# Steps'", "if", "accepts", "or", "rejects", "else", "'# NFE'", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.None.metrics.main": [[13, 54], ["os.listdir", "max", "matplotlib.figure", "zip", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.xlim", "matplotlib.legend", "matplotlib.tight_layout", "matplotlib.show", "all", "len", "len", "results.items", "slice", "range", "matplotlib.fill_between", "matplotlib.plot", "matplotlib.ylim", "os.listdir", "min", "results.items", "len", "statistics.mean", "statistics.stdev", "results[].append", "len", "results.values", "range", "range", "zip", "zip", "open", "json.load", "sorted", "sorted", "len", "len"], "function", ["None"], ["def", "main", "(", "dataset", ",", "models", ",", "nfe", ")", ":", "\n", "    ", "loc", "=", "_here", "/", "'results'", "/", "dataset", "\n", "results", "=", "{", "}", "\n", "num_results", "=", "math", ".", "inf", "\n", "for", "folder", "in", "os", ".", "listdir", "(", "loc", ")", ":", "\n", "        ", "if", "all", "(", "model_spec", "in", "folder", "for", "model_spec", "in", "models", ")", ":", "\n", "            ", "results", "[", "folder", "]", "=", "[", "]", "\n", "for", "run", "in", "os", ".", "listdir", "(", "loc", "/", "folder", ")", ":", "\n", "                ", "with", "open", "(", "loc", "/", "folder", "/", "run", ",", "'r'", ")", "as", "f", ":", "\n", "                    ", "content", "=", "json", ".", "load", "(", "f", ")", "\n", "", "results", "[", "folder", "]", ".", "append", "(", "[", "info", "[", "'val_metrics'", "]", "[", "'backward_nfe'", "if", "nfe", "else", "'accuracy'", "]", "\n", "for", "info", "in", "content", "[", "'history'", "]", "]", ")", "\n", "", "num_results", "=", "min", "(", "num_results", ",", "len", "(", "results", "[", "folder", "]", ")", ")", "\n", "", "", "results", "=", "{", "folder", ":", "result", "[", ":", "num_results", "]", "for", "folder", ",", "result", "in", "results", ".", "items", "(", ")", "}", "\n", "\n", "colours", "=", "[", "'tab:blue'", ",", "'tab:red'", "]", "\n", "assert", "len", "(", "colours", ")", ">=", "len", "(", "results", ")", "\n", "max_length", "=", "max", "(", "len", "(", "l", ")", "for", "ll", "in", "results", ".", "values", "(", ")", "for", "l", "in", "ll", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "7", ",", "2", ")", ")", "\n", "for", "c", ",", "(", "folder", ",", "losses", ")", "in", "zip", "(", "colours", ",", "results", ".", "items", "(", ")", ")", ":", "\n", "        ", "if", "'True'", "in", "folder", ":", "\n", "            ", "folder", "=", "'Seminorm'", "\n", "", "else", ":", "\n", "            ", "folder", "=", "'Default norm'", "\n", "# [1:] to remove outlier", "\n", "", "slic", "=", "slice", "(", "None", "if", "nfe", "else", "1", ",", "None", ")", "\n", "mean_losses", "=", "[", "statistics", ".", "mean", "(", "sorted", "(", "[", "l", "[", "i", "]", "for", "l", "in", "losses", "if", "len", "(", "l", ")", ">", "i", "]", ")", "[", "slic", "]", ")", "for", "i", "in", "range", "(", "max_length", ")", "]", "\n", "std_losses", "=", "[", "statistics", ".", "stdev", "(", "sorted", "(", "[", "l", "[", "i", "]", "for", "l", "in", "losses", "if", "len", "(", "l", ")", ">", "i", "]", ")", "[", "slic", "]", ")", "for", "i", "in", "range", "(", "max_length", ")", "]", "\n", "upper", "=", "[", "m", "+", "std", "for", "m", ",", "std", "in", "zip", "(", "mean_losses", ",", "std_losses", ")", "]", "\n", "lower", "=", "[", "m", "-", "std", "for", "m", ",", "std", "in", "zip", "(", "mean_losses", ",", "std_losses", ")", "]", "\n", "t", "=", "range", "(", "0", ",", "10", "*", "max_length", ",", "10", ")", "\n", "plt", ".", "fill_between", "(", "t", ",", "lower", ",", "upper", ",", "alpha", "=", "0.5", ",", "color", "=", "c", ")", "\n", "plt", ".", "plot", "(", "t", ",", "mean_losses", ",", "label", "=", "folder", ",", "color", "=", "c", ",", "zorder", "=", "1", ")", "\n", "", "plt", ".", "xlabel", "(", "'Epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'Backward NFE'", "if", "nfe", "else", "'Accuracy'", ")", "\n", "if", "not", "nfe", ":", "\n", "        ", "plt", ".", "ylim", "(", "[", "0.", ",", "1.", "]", ")", "\n", "", "plt", ".", "xlim", "(", "[", "0", ",", "200", "]", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.None.acrobot.main": [[6, 20], ["datasets.acrobot", "models.SymODE", "train.main", "map"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.acrobot", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train.main"], ["def", "main", "(", "device", ",", "norm", ",", "rtol", "=", "1e-4", ",", "atol", "=", "1e-4", ")", ":", "\n", "    ", "batch_size", "=", "256", "\n", "name", "=", "'acrobot/'", "+", "'-'", ".", "join", "(", "map", "(", "str", ",", "[", "norm", ",", "rtol", ",", "atol", "]", ")", ")", ".", "replace", "(", "'.'", ",", "'-'", ")", "\n", "save", "=", "True", "\n", "max_epochs", "=", "50", "\n", "lr", "=", "1e-3", "\n", "weight_decay", "=", "0.01", "\n", "\n", "times", ",", "train_dataloader", ",", "val_dataloader", ",", "test_dataloader", "=", "datasets", ".", "acrobot", "(", "batch_size", ")", "\n", "\n", "model", "=", "models", ".", "SymODE", "(", "times", ",", "norm", ",", "rtol", ",", "atol", ")", "\n", "\n", "return", "train", ".", "main", "(", "name", ",", "train_dataloader", ",", "val_dataloader", ",", "test_dataloader", ",", "device", ",", "model", ",", "save", ",", "max_epochs", ",", "lr", ",", "\n", "weight_decay", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.None.acrobot.full": [[22, 25], ["range", "acrobot.main"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train.main"], ["", "def", "full", "(", "device", ",", "norm", ")", ":", "\n", "    ", "for", "_", "in", "range", "(", "5", ")", ":", "\n", "        ", "main", "(", "device", ",", "norm", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.None.acrobot_imgs.main": [[16, 160], ["datasets.AcrobotEnv", "gym.wrappers.Monitor", "gym.wrappers.Monitor", "gym.wrappers.Monitor.reset", "numpy.array", "gym.wrappers.Monitor.env._get_ob", "torch.tensor().unsqueeze", "range", "gym.wrappers.Monitor.close", "imageio.mimsave", "torch.cat().detach().cpu().numpy", "torch.linspace", "matplotlib.figure", "matplotlib.subplot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.legend", "matplotlib.subplot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.legend", "matplotlib.subplot", "matplotlib.plot", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.subplot", "matplotlib.plot", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.subplot", "matplotlib.plot", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.subplot", "matplotlib.plot", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.tight_layout", "plt.figure.savefig", "gym.wrappers.Monitor.render", "torch.split", "model.V_net", "torch.chunk", "torch.chunk", "model.g_net", "torch.transpose", "torch.inverse", "torch.matmul", "torch.matmul", "u.squeeze().detach().cpu().numpy.squeeze().detach().cpu().numpy", "gym.wrappers.Monitor.step", "torch.tensor().unsqueeze", "torch.cat().detach().cpu().numpy.append", "frames.append", "matplotlib.style.context", "matplotlib.figure", "matplotlib.subplot", "plt.subplot.imshow", "matplotlib.setp", "matplotlib.setp", "matplotlib.subplot", "plt.subplot.imshow", "matplotlib.setp", "matplotlib.setp", "matplotlib.subplot", "plt.subplot.imshow", "matplotlib.setp", "matplotlib.setp", "matplotlib.subplot", "plt.subplot.imshow", "matplotlib.setp", "matplotlib.setp", "matplotlib.subplot", "plt.subplot.imshow", "matplotlib.setp", "matplotlib.setp", "matplotlib.subplot", "plt.subplot.imshow", "matplotlib.setp", "matplotlib.setp", "matplotlib.subplot", "plt.subplot.imshow", "matplotlib.setp", "matplotlib.setp", "matplotlib.subplot", "plt.subplot.imshow", "matplotlib.setp", "matplotlib.setp", "matplotlib.subplot", "plt.subplot.imshow", "matplotlib.setp", "matplotlib.setp", "matplotlib.subplot", "plt.subplot.imshow", "matplotlib.setp", "matplotlib.setp", "matplotlib.tight_layout", "plt.figure.subplots_adjust", "plt.figure.savefig", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.tensor", "torch.autograd.grad", "torch.matmul", "gym.wrappers.Monitor.render", "torch.cat().detach().cpu", "plt.subplot.get_xticklabels", "plt.subplot.get_yticklabels", "plt.subplot.get_xticklabels", "plt.subplot.get_yticklabels", "plt.subplot.get_xticklabels", "plt.subplot.get_yticklabels", "plt.subplot.get_xticklabels", "plt.subplot.get_yticklabels", "plt.subplot.get_xticklabels", "plt.subplot.get_yticklabels", "plt.subplot.get_xticklabels", "plt.subplot.get_yticklabels", "plt.subplot.get_xticklabels", "plt.subplot.get_yticklabels", "plt.subplot.get_xticklabels", "plt.subplot.get_yticklabels", "plt.subplot.get_xticklabels", "plt.subplot.get_yticklabels", "plt.subplot.get_xticklabels", "plt.subplot.get_yticklabels", "numpy.ones_like", "numpy.ones_like", "numpy.ones_like", "numpy.ones_like", "numpy.ones_like", "numpy.ones_like", "numpy.ones_like", "numpy.ones_like", "u.squeeze().detach().cpu().numpy.squeeze().detach().cpu", "torch.tensor", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.linspace.numpy", "torch.cat().detach", "u.squeeze().detach().cpu().numpy.squeeze().detach", "torch.cat", "u.squeeze().detach().cpu().numpy.squeeze"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.reset", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv._get_ob", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.close", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.render", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.step", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.render"], ["def", "main", "(", "name", ",", "model", ",", "device", ")", ":", "\n", "# name is some string to identify the saved outputs of this function", "\n", "# model should be a model as given by acrobot.main(...).model", "\n", "# device is a device for PyTorch, like 'cpu' or 0.", "\n", "\n", "    ", "model", "=", "model", ".", "func", "\n", "n_eval", "=", "400", "\n", "\n", "env", "=", "datasets", ".", "AcrobotEnv", "(", ")", "\n", "env", "=", "gym", ".", "wrappers", ".", "Monitor", "(", "env", ",", "_out", ",", "force", "=", "True", ")", "\n", "\n", "env", ".", "reset", "(", ")", "\n", "env", ".", "env", ".", "state", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "obs", "=", "env", ".", "env", ".", "_get_ob", "(", ")", "\n", "y", "=", "torch", ".", "tensor", "(", "[", "obs", "[", "0", "]", ",", "obs", "[", "2", "]", ",", "obs", "[", "1", "]", ",", "obs", "[", "3", "]", ",", "obs", "[", "4", "]", ",", "obs", "[", "5", "]", ",", "0.0", ",", "0.0", "]", ",", "\n", "device", "=", "device", ",", "dtype", "=", "torch", ".", "float32", ",", "requires_grad", "=", "True", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "y_traj", "=", "[", "y", "]", "\n", "frames", "=", "[", "env", ".", "render", "(", "mode", "=", "'rgb_array'", ")", "]", "\n", "for", "i", "in", "range", "(", "n_eval", "-", "1", ")", ":", "\n", "        ", "cos_q_sin_q", ",", "q_dot", ",", "u", "=", "torch", ".", "split", "(", "y", ",", "[", "4", ",", "2", ",", "2", "]", ",", "dim", "=", "1", ")", "\n", "V_q", "=", "model", ".", "V_net", "(", "cos_q_sin_q", ")", "\n", "dV", "=", "torch", ".", "autograd", ".", "grad", "(", "V_q", ",", "cos_q_sin_q", ")", "[", "0", "]", "\n", "dVdcos_q", ",", "dVdsin_q", "=", "torch", ".", "chunk", "(", "dV", ",", "2", ",", "dim", "=", "1", ")", "\n", "cos_q", ",", "sin_q", "=", "torch", ".", "chunk", "(", "cos_q_sin_q", ",", "2", ",", "dim", "=", "1", ")", "\n", "dV_q", "=", "-", "dVdcos_q", "*", "sin_q", "+", "dVdsin_q", "*", "cos_q", "# (1, 2)", "\n", "g_q", "=", "model", ".", "g_net", "(", "cos_q_sin_q", ")", "# (1, 2, 2)", "\n", "\n", "g_q_T", "=", "torch", ".", "transpose", "(", "g_q", ",", "1", ",", "2", ")", "\n", "inv_g_g_T", "=", "torch", ".", "inverse", "(", "torch", ".", "matmul", "(", "g_q", ",", "g_q_T", ")", ")", "\n", "g_T_inv_g_g_T", "=", "torch", ".", "matmul", "(", "g_q_T", ",", "inv_g_g_T", ")", "\n", "\n", "energy_shaping", "=", "2", "*", "dV_q", ".", "T", "\n", "damping_injection", "=", "-", "1", "*", "q_dot", ".", "T", "\n", "\n", "u", "=", "torch", ".", "matmul", "(", "g_T_inv_g_g_T", ",", "energy_shaping", "+", "damping_injection", ")", "\n", "u", "=", "u", ".", "squeeze", "(", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "obs", ",", "_", ",", "_", ",", "_", "=", "env", ".", "step", "(", "u", ")", "\n", "y", "=", "torch", ".", "tensor", "(", "[", "obs", "[", "0", "]", ",", "obs", "[", "2", "]", ",", "obs", "[", "1", "]", ",", "obs", "[", "3", "]", ",", "obs", "[", "4", "]", ",", "obs", "[", "5", "]", ",", "u", "[", "0", "]", ",", "u", "[", "1", "]", "]", ",", "\n", "device", "=", "device", ",", "dtype", "=", "torch", ".", "float32", ",", "requires_grad", "=", "True", ")", ".", "unsqueeze", "(", "0", ")", "\n", "y_traj", ".", "append", "(", "y", ")", "\n", "frames", ".", "append", "(", "env", ".", "render", "(", "mode", "=", "'rgb_array'", ")", ")", "\n", "\n", "", "env", ".", "close", "(", ")", "\n", "imageio", ".", "mimsave", "(", "_out", "+", "'/'", "+", "name", "+", "'-motion.gif'", ",", "frames", ",", "duration", "=", "0.02", ")", "\n", "\n", "y_traj", "=", "torch", ".", "cat", "(", "y_traj", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "with", "plt", ".", "style", ".", "context", "(", "\"seaborn-white\"", ")", ":", "\n", "        ", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "12", ",", "1.3", ")", ",", "dpi", "=", "600", ")", "\n", "plt", ".", "rcParams", "[", "\"axes.grid\"", "]", "=", "False", "\n", "ax", "=", "plt", ".", "subplot", "(", "1", ",", "10", ",", "1", ")", "\n", "ax", ".", "imshow", "(", "frames", "[", "0", "]", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "1", ",", "10", ",", "2", ")", "\n", "ax", ".", "imshow", "(", "frames", "[", "20", "]", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "1", ",", "10", ",", "3", ")", "\n", "ax", ".", "imshow", "(", "frames", "[", "40", "]", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "1", ",", "10", ",", "4", ")", "\n", "ax", ".", "imshow", "(", "frames", "[", "60", "]", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "1", ",", "10", ",", "5", ")", "\n", "ax", ".", "imshow", "(", "frames", "[", "80", "]", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "1", ",", "10", ",", "6", ")", "\n", "ax", ".", "imshow", "(", "frames", "[", "100", "]", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "1", ",", "10", ",", "7", ")", "\n", "ax", ".", "imshow", "(", "frames", "[", "120", "]", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "1", ",", "10", ",", "8", ")", "\n", "ax", ".", "imshow", "(", "frames", "[", "140", "]", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "1", ",", "10", ",", "9", ")", "\n", "ax", ".", "imshow", "(", "frames", "[", "160", "]", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "1", ",", "10", ",", "10", ")", "\n", "ax", ".", "imshow", "(", "frames", "[", "180", "]", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "visible", "=", "False", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "fig", ".", "subplots_adjust", "(", "hspace", "=", "0", ",", "wspace", "=", "0", ")", "\n", "fig", ".", "savefig", "(", "_out", "+", "'/'", "+", "name", "+", "'-frames.png'", ")", "\n", "\n", "", "t_eval", "=", "torch", ".", "linspace", "(", "0", ",", "(", "n_eval", "-", "1", ")", "*", "0.05", ",", "n_eval", ",", "device", "=", "device", ")", "\n", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "[", "12", ",", "4", "]", ",", "dpi", "=", "600", ")", "\n", "plt", ".", "subplot", "(", "2", ",", "3", ",", "1", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "-", "1", "*", "np", ".", "ones_like", "(", "t_eval", ".", "numpy", "(", ")", ")", ",", "'k--'", ",", "linewidth", "=", "0.5", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "0", "*", "np", ".", "ones_like", "(", "t_eval", ".", "numpy", "(", ")", ")", ",", "'k-'", ",", "linewidth", "=", "0.5", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "y_traj", "[", ":", ",", "0", "]", ",", "'b--'", ",", "label", "=", "r\"$\\cos(q_1)$\"", ",", "linewidth", "=", "2", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "y_traj", "[", ":", ",", "2", "]", ",", "'b-'", ",", "label", "=", "r\"$\\sin(q_1)$\"", ",", "linewidth", "=", "2", ")", "\n", "plt", ".", "title", "(", "\"$q_1$\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "xlabel", "(", "'t'", ")", "\n", "plt", ".", "legend", "(", "fontsize", "=", "9", ")", "\n", "\n", "plt", ".", "subplot", "(", "2", ",", "3", ",", "4", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "1", "*", "np", ".", "ones_like", "(", "t_eval", ".", "numpy", "(", ")", ")", ",", "'k--'", ",", "linewidth", "=", "0.5", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "0", "*", "np", ".", "ones_like", "(", "t_eval", ".", "numpy", "(", ")", ")", ",", "'k-'", ",", "linewidth", "=", "0.5", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "y_traj", "[", ":", ",", "1", "]", ",", "'b--'", ",", "label", "=", "r\"$\\cos(q_2)$\"", ",", "linewidth", "=", "2", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "y_traj", "[", ":", ",", "3", "]", ",", "'b-'", ",", "label", "=", "r\"$\\sin(q_2)$\"", ",", "linewidth", "=", "2", ")", "\n", "plt", ".", "title", "(", "\"$q_2$\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "xlabel", "(", "'t'", ")", "\n", "plt", ".", "legend", "(", "fontsize", "=", "9", ")", "\n", "\n", "plt", ".", "subplot", "(", "2", ",", "3", ",", "2", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "0", "*", "np", ".", "ones_like", "(", "t_eval", ".", "numpy", "(", ")", ")", ",", "'k-'", ",", "linewidth", "=", "0.5", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "y_traj", "[", ":", ",", "4", "]", ",", "color", "=", "'b'", ",", "linewidth", "=", "2", ")", "\n", "plt", ".", "title", "(", "\"$\\dot{q}_1$\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "xlabel", "(", "'t'", ")", "\n", "\n", "plt", ".", "subplot", "(", "2", ",", "3", ",", "5", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "0", "*", "np", ".", "ones_like", "(", "t_eval", ".", "numpy", "(", ")", ")", ",", "'k-'", ",", "linewidth", "=", "0.5", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "y_traj", "[", ":", ",", "5", "]", ",", "color", "=", "'b'", ",", "linewidth", "=", "2", ")", "\n", "plt", ".", "title", "(", "\"$\\dot{q}_2$\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "xlabel", "(", "'t'", ")", "\n", "\n", "plt", ".", "subplot", "(", "2", ",", "3", ",", "3", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "0", "*", "np", ".", "ones_like", "(", "t_eval", ".", "numpy", "(", ")", ")", ",", "'k-'", ",", "linewidth", "=", "0.5", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "y_traj", "[", ":", ",", "6", "]", ",", "color", "=", "'b'", ",", "linewidth", "=", "2", ")", "\n", "plt", ".", "title", "(", "\"$u_1$\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "xlabel", "(", "'t'", ")", "\n", "\n", "plt", ".", "subplot", "(", "2", ",", "3", ",", "6", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "0", "*", "np", ".", "ones_like", "(", "t_eval", ".", "numpy", "(", ")", ")", ",", "'k-'", ",", "linewidth", "=", "0.5", ")", "\n", "plt", ".", "plot", "(", "t_eval", ".", "numpy", "(", ")", ",", "y_traj", "[", ":", ",", "7", "]", ",", "color", "=", "'b'", ",", "linewidth", "=", "2", ")", "\n", "plt", ".", "title", "(", "\"$u_2$\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "xlabel", "(", "'t'", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "fig", ".", "savefig", "(", "_out", "+", "'/'", "+", "name", "+", "'-graph.png'", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.None.speech_commands.main": [[6, 23], ["datasets.speech_commands", "models.NeuralCDE", "train.main", "map"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.speech_commands.speech_commands", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train.main"], ["def", "main", "(", "device", ",", "norm", ",", "rtol", ",", "atol", ",", "hidden_channels", "=", "90", ",", "hidden_hidden_channels", "=", "40", ",", "num_hidden_layers", "=", "4", ")", ":", "\n", "    ", "batch_size", "=", "1024", "\n", "name", "=", "'speech_commands/'", "+", "'-'", ".", "join", "(", "map", "(", "str", ",", "[", "norm", ",", "rtol", ",", "atol", ",", "hidden_channels", ",", "hidden_hidden_channels", ",", "\n", "num_hidden_layers", "]", ")", ")", ".", "replace", "(", "'.'", ",", "'-'", ")", "\n", "save", "=", "False", "\n", "max_epochs", "=", "0", "\n", "lr", "=", "1.6e-3", "\n", "weight_decay", "=", "0.01", "\n", "\n", "(", "times", ",", "train_dataloader", ",", "val_dataloader", ",", "\n", "test_dataloader", ",", "input_channels", ",", "output_channels", ")", "=", "datasets", ".", "speech_commands", "(", "batch_size", ")", "\n", "\n", "model", "=", "models", ".", "NeuralCDE", "(", "times", ",", "input_channels", ",", "hidden_channels", ",", "hidden_hidden_channels", ",", "num_hidden_layers", ",", "\n", "output_channels", ",", "norm", ",", "rtol", ",", "atol", ")", "\n", "\n", "return", "train", ".", "main", "(", "name", ",", "train_dataloader", ",", "val_dataloader", ",", "test_dataloader", ",", "device", ",", "model", ",", "save", ",", "max_epochs", ",", "lr", ",", "\n", "weight_decay", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.None.speech_commands.full": [[25, 31], ["zip", "range", "speech_commands.main"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train.main"], ["", "def", "full", "(", "device", ",", "norm", ")", ":", "\n", "    ", "rtols", "=", "(", "1e-3", ",", "1e-4", ",", "1e-5", ")", "\n", "atols", "=", "(", "1e-6", ",", "1e-7", ",", "1e-8", ")", "\n", "for", "rtol", ",", "atol", "in", "zip", "(", "rtols", ",", "atols", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "5", ")", ":", "\n", "            ", "main", "(", "device", ",", "norm", ",", "rtol", ",", "atol", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.None.parse_results.main": [[11, 28], ["os.listdir", "results.items", "os.listdir", "print", "folder_results[].append", "folder_results[].append", "torch.tensor", "torch.tensor", "open", "json.load", "sum", "len", "metric.capitalize", "folder_results[].mean", "metric.capitalize", "folder_results[].std", "folder_results[].mean", "folder_results[].std"], "function", ["None"], ["def", "main", "(", "name", ",", "metric", ")", ":", "\n", "    ", "loc", "=", "_here", "/", "'results'", "/", "name", "\n", "results", "=", "{", "}", "\n", "for", "folder", "in", "os", ".", "listdir", "(", "loc", ")", ":", "\n", "        ", "folder_results", "=", "{", "metric", ":", "[", "]", ",", "\n", "'backward_nfe'", ":", "[", "]", "}", "\n", "for", "run", "in", "os", ".", "listdir", "(", "loc", "/", "folder", ")", ":", "\n", "            ", "with", "open", "(", "loc", "/", "folder", "/", "run", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "content", "=", "json", ".", "load", "(", "f", ")", "\n", "", "folder_results", "[", "metric", "]", ".", "append", "(", "content", "[", "'test_metrics'", "]", "[", "metric", "]", ")", "\n", "folder_results", "[", "'backward_nfe'", "]", ".", "append", "(", "sum", "(", "info", "[", "'train_metrics'", "]", "[", "'backward_nfe'", "]", "\n", "for", "info", "in", "content", "[", "'history'", "]", ")", "/", "(", "10", "**", "5", ")", ")", "\n", "", "results", "[", "folder", "]", "=", "{", "metric", ":", "torch", ".", "tensor", "(", "folder_results", "[", "metric", "]", ",", "dtype", "=", "torch", ".", "float", ")", ",", "\n", "'backward_nfe'", ":", "torch", ".", "tensor", "(", "folder_results", "[", "'backward_nfe'", "]", ",", "dtype", "=", "torch", ".", "float", ")", "}", "\n", "\n", "", "for", "folder", ",", "folder_results", "in", "results", ".", "items", "(", ")", ":", "\n", "        ", "print", "(", "f\"{folder}: \"", "\n", "f\"Len: {len(folder_results[metric])} \"", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.common.dataloader": [[4, 6], ["torch.utils.data.DataLoader"], "function", ["None"], ["def", "dataloader", "(", "dataset", ",", "batch_size", ")", ":", "\n", "    ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "6", ",", "pin_memory", "=", "True", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.__init__": [[45, 56], ["numpy.array", "numpy.array", "warnings.simplefilter", "gym.spaces.Box", "gym.spaces.Box", "acrobot.AcrobotEnv.seed"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.seed"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.seed": [[57, 60], ["gym.utils.seeding.np_random"], "methods", ["None"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.reset": [[61, 64], ["acrobot.AcrobotEnv.np_random.uniform", "acrobot.AcrobotEnv._get_ob"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv._get_ob"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.step": [[65, 73], ["scipy.integrate.solve_ivp", "acrobot.AcrobotEnv._terminal", "acrobot.AcrobotEnv._get_ob", "acrobot.AcrobotEnv.dyna_wrapper"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv._terminal", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv._get_ob", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.dyna_wrapper"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv._get_ob": [[74, 77], ["numpy.array", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "methods", ["None"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv._terminal": [[78, 81], ["bool", "numpy.cos", "numpy.cos"], "methods", ["None"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.dyna_wrapper": [[82, 86], ["numpy.zeros_like", "acrobot.AcrobotEnv._dsdt", "numpy.concatenate", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv._dsdt"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv._dsdt": [[87, 121], ["numpy.cos", "numpy.cos", "numpy.cos", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.cos"], "methods", ["None"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.render": [[122, 156], ["acrobot.AcrobotEnv.viewer.draw_line", "zip", "acrobot.AcrobotEnv.viewer.render", "rendering.Viewer", "acrobot.AcrobotEnv.viewer.set_bounds", "numpy.array", "rendering.Transform", "acrobot.AcrobotEnv.viewer.draw_polygon", "acrobot.AcrobotEnv.add_attr", "acrobot.AcrobotEnv.set_color", "acrobot.AcrobotEnv.viewer.draw_circle", "acrobot.AcrobotEnv.set_color", "acrobot.AcrobotEnv.add_attr", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.render"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.close": [[157, 161], ["acrobot.AcrobotEnv.viewer.close"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.close"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.sample_gym": [[163, 186], ["acrobot.AcrobotEnv", "acrobot.AcrobotEnv.seed", "range", "numpy.stack", "numpy.transpose", "np.transpose.append", "numpy.arange", "acrobot.AcrobotEnv.reset", "range", "numpy.stack", "acrobot.AcrobotEnv.step", "numpy.array", "np.stack.append", "numpy.amax", "numpy.amin", "numpy.amax", "numpy.amin"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.seed", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.reset", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.step"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.get_dataset": [[188, 199], ["numpy.stack", "int", "int", "acrobot.sample_gym", "trajs_force.append"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.sample_gym"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.arrange_data": [[201, 217], ["range", "numpy.stack", "numpy.reshape", "torch.tensor().transpose().reshape", "torch.tensor", "len", "torch.tensor().transpose().reshape.append", "torch.tensor().transpose().reshape.append", "torch.tensor().transpose", "torch.tensor"], "function", ["None"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.acrobot": [[219, 241], ["acrobot.get_dataset", "acrobot.arrange_data", "acrobot.arrange_data", "acrobot.arrange_data", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "common.dataloader", "common.dataloader", "common.dataloader"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.get_dataset", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.arrange_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.arrange_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.arrange_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.common.dataloader", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.common.dataloader", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.common.dataloader"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.speech_commands._download": [[13, 21], ["time_series.raw_data_folder", "os.path.exists", "urllib.request.urlretrieve", "tarfile.open", "f.extractall"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series.raw_data_folder"], ["weight_decay", "=", "0.01", "\n", "\n", "(", "times", ",", "train_dataloader", ",", "val_dataloader", ",", "\n", "test_dataloader", ",", "input_channels", ",", "output_channels", ")", "=", "datasets", ".", "speech_commands", "(", "batch_size", ")", "\n", "\n", "model", "=", "models", ".", "NeuralCDE", "(", "times", ",", "input_channels", ",", "hidden_channels", ",", "hidden_hidden_channels", ",", "num_hidden_layers", ",", "\n", "output_channels", ",", "norm", ",", "rtol", ",", "atol", ")", "\n", "\n", "return", "train", ".", "main", "(", "name", ",", "train_dataloader", ",", "val_dataloader", ",", "test_dataloader", ",", "device", ",", "model", ",", "save", ",", "max_epochs", ",", "lr", ",", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.speech_commands._process_data": [[23, 58], ["time_series.raw_data_folder", "torch.empty", "torch.empty", "torch.linspace", "os.listdir", "torch.empty.size", "torchaudio.load_wav", "torch.empty.size", "len", "torchaudio.transforms.MFCC", "torch.empty.squeeze", "dict"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series.raw_data_folder"], ["\n", "\n", "", "def", "full", "(", "device", ",", "norm", ")", ":", "\n", "    ", "rtols", "=", "(", "1e-3", ",", "1e-4", ",", "1e-5", ")", "\n", "atols", "=", "(", "1e-6", ",", "1e-7", ",", "1e-8", ")", "\n", "for", "rtol", ",", "atol", "in", "zip", "(", "rtols", ",", "atols", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "5", ")", ":", "\n", "            ", "main", "(", "device", ",", "norm", ",", "rtol", ",", "atol", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.speech_commands.speech_commands": [[60, 62], ["time_series.process_data"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series.process_data"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._get_data_folder": [[16, 24], ["os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir"], "function", ["None"], ["def", "_get_data_folder", "(", "name", ",", "base_data_folder", ")", ":", "\n", "# We don't assume they're there by default because we might want to symlink them", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "base_data_folder", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "base_data_folder", ")", "\n", "", "data_folder", "=", "base_data_folder", "/", "name", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "data_folder", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "data_folder", ")", "\n", "", "return", "data_folder", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series.raw_data_folder": [[26, 28], ["time_series._get_data_folder"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._get_data_folder"], ["", "def", "raw_data_folder", "(", "name", ")", ":", "\n", "    ", "return", "_get_data_folder", "(", "name", ",", "_base_raw_data_folder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._processed_data_folder": [[30, 32], ["time_series._get_data_folder"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._get_data_folder"], ["", "def", "_processed_data_folder", "(", "name", ")", ":", "\n", "    ", "return", "_get_data_folder", "(", "name", ",", "_base_processed_data_folder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._split_data": [[34, 64], ["sklearn.model_selection.train_test_split", "sklearn.model_selection.train_test_split", "tensors.append", "tensors.append", "tensors.append", "tensors.append", "torch.empty", "torch.empty", "X.size", "X.size"], "function", ["None"], ["", "def", "_split_data", "(", "X", ",", "y", ",", "final_index", ",", "static", ")", ":", "\n", "# 0.7/0.15/0.15 train/val/test split", "\n", "    ", "tensors", "=", "[", "X", ",", "y", "]", "\n", "if", "final_index", "is", "None", ":", "\n", "        ", "tensors", ".", "append", "(", "torch", ".", "empty", "(", "X", ".", "size", "(", "0", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "tensors", ".", "append", "(", "final_index", ")", "\n", "", "if", "static", "is", "None", ":", "\n", "        ", "tensors", ".", "append", "(", "torch", ".", "empty", "(", "X", ".", "size", "(", "0", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "tensors", ".", "append", "(", "static", ")", "\n", "\n", "", "train_valtest_tensors", "=", "sklearn", ".", "model_selection", ".", "train_test_split", "(", "*", "tensors", ",", "\n", "train_size", "=", "0.7", ",", "\n", "random_state", "=", "0", ",", "\n", "shuffle", "=", "True", ",", "\n", "stratify", "=", "y", ")", "\n", "\n", "(", "train_X", ",", "valtest_X", ",", "train_y", ",", "valtest_y", ",", "train_final_index", ",", "valtest_final_index", ",", "\n", "train_static", ",", "valtest_static", ")", "=", "train_valtest_tensors", "\n", "valtest_tensors", "=", "[", "valtest_X", ",", "valtest_y", ",", "valtest_final_index", ",", "valtest_static", "]", "\n", "\n", "val_test_tensors", "=", "sklearn", ".", "model_selection", ".", "train_test_split", "(", "*", "valtest_tensors", ",", "\n", "train_size", "=", "0.5", ",", "\n", "random_state", "=", "1", ",", "\n", "shuffle", "=", "True", ",", "\n", "stratify", "=", "valtest_y", ")", "\n", "val_X", ",", "test_X", ",", "val_y", ",", "test_y", ",", "val_final_index", ",", "test_final_index", ",", "val_static", ",", "test_static", "=", "val_test_tensors", "\n", "return", "(", "train_X", ",", "val_X", ",", "test_X", ",", "train_y", ",", "val_y", ",", "test_y", ",", "train_final_index", ",", "val_final_index", ",", "\n", "test_final_index", ",", "train_static", ",", "val_static", ",", "test_static", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._normalise_data": [[66, 75], ["zip", "torch.stack", "X.unbind", "train_X.unbind", "train_Xi.masked_select", "train_Xi.masked_select.mean", "train_Xi.masked_select.std", "torch.stack.append", "torch.isnan"], "function", ["None"], ["", "def", "_normalise_data", "(", "X", ",", "train_X", ")", ":", "\n", "    ", "out", "=", "[", "]", "\n", "for", "Xi", ",", "train_Xi", "in", "zip", "(", "X", ".", "unbind", "(", "dim", "=", "-", "1", ")", ",", "train_X", ".", "unbind", "(", "dim", "=", "-", "1", ")", ")", ":", "\n", "        ", "train_Xi_nonan", "=", "train_Xi", ".", "masked_select", "(", "~", "torch", ".", "isnan", "(", "train_Xi", ")", ")", "\n", "mean", "=", "train_Xi_nonan", ".", "mean", "(", ")", "# compute statistics using only training data.", "\n", "std", "=", "train_Xi_nonan", ".", "std", "(", ")", "\n", "out", ".", "append", "(", "(", "Xi", "-", "mean", ")", "/", "(", "std", "+", "1e-5", ")", ")", "\n", "", "out", "=", "torch", ".", "stack", "(", "out", ",", "dim", "=", "-", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._append_extra": [[77, 87], ["torch.cat", "times.unsqueeze().repeat().unsqueeze", "intensity.to.to", "augmented_X.append", "torch.isnan", "times.unsqueeze().repeat", "X.size", "times.unsqueeze"], "function", ["None"], ["", "def", "_append_extra", "(", "X", ",", "times", ",", "append_intensity", ")", ":", "\n", "#####################################################", "\n", "# VERY IMPORTANT: ALWAYS APPEND TIME TO THE CONTROL #", "\n", "#####################################################", "\n", "    ", "augmented_X", "=", "[", "times", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "X", ".", "size", "(", "0", ")", ",", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "X", "]", "\n", "if", "append_intensity", ":", "\n", "        ", "intensity", "=", "~", "torch", ".", "isnan", "(", "X", ")", "# of size (batch, stream, channels)", "\n", "intensity", "=", "intensity", ".", "to", "(", "X", ".", "dtype", ")", "\n", "augmented_X", ".", "append", "(", "intensity", ")", "\n", "", "return", "torch", ".", "cat", "(", "augmented_X", ",", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._preprocess_data": [[89, 143], ["time_series._split_data", "time_series._normalise_data", "time_series._normalise_data", "time_series._normalise_data", "time_series._append_extra", "time_series._append_extra", "time_series._append_extra", "torchcde.linear_interpolation_coeffs", "torchcde.linear_interpolation_coeffs", "torchcde.linear_interpolation_coeffs", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "torch.tensor", "torch.tensor", "time_series._normalise_data", "time_series._normalise_data", "time_series._normalise_data", "_append_extra.size"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._split_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._normalise_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._normalise_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._normalise_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._append_extra", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._append_extra", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._append_extra", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._normalise_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._normalise_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._normalise_data"], ["", "def", "_preprocess_data", "(", "times", ",", "X", ",", "y", ",", "final_index", ",", "static", ",", "output_channels", ",", "append_intensity", ")", ":", "\n", "\n", "# Split data", "\n", "\n", "    ", "(", "train_X", ",", "val_X", ",", "test_X", ",", "train_y", ",", "val_y", ",", "test_y", ",", "train_final_index", ",", "val_final_index", ",", "\n", "test_final_index", ",", "train_static", ",", "val_static", ",", "test_static", ")", "=", "_split_data", "(", "X", ",", "y", ",", "final_index", ",", "static", ")", "\n", "\n", "# Normalise and preprocess data", "\n", "\n", "test_X", "=", "_normalise_data", "(", "test_X", ",", "train_X", ")", "\n", "val_X", "=", "_normalise_data", "(", "val_X", ",", "train_X", ")", "\n", "train_X", "=", "_normalise_data", "(", "train_X", ",", "train_X", ")", "\n", "\n", "test_X", "=", "_append_extra", "(", "test_X", ",", "times", ",", "append_intensity", ")", "\n", "val_X", "=", "_append_extra", "(", "val_X", ",", "times", ",", "append_intensity", ")", "\n", "train_X", "=", "_append_extra", "(", "train_X", ",", "times", ",", "append_intensity", ")", "\n", "\n", "train_coeffs", "=", "torchcde", ".", "linear_interpolation_coeffs", "(", "train_X", ",", "times", ")", "\n", "val_coeffs", "=", "torchcde", ".", "linear_interpolation_coeffs", "(", "val_X", ",", "times", ")", "\n", "test_coeffs", "=", "torchcde", ".", "linear_interpolation_coeffs", "(", "test_X", ",", "times", ")", "\n", "\n", "if", "static", "is", "not", "None", ":", "\n", "        ", "test_static", "=", "_normalise_data", "(", "test_static", ",", "train_static", ")", "\n", "val_static", "=", "_normalise_data", "(", "val_static", ",", "train_static", ")", "\n", "train_static", "=", "_normalise_data", "(", "train_static", ",", "train_static", ")", "\n", "\n", "# Return data", "\n", "\n", "", "train_tensors", "=", "co", ".", "OrderedDict", "(", ")", "\n", "train_tensors", "[", "'train_coeffs'", "]", "=", "train_coeffs", "\n", "train_tensors", "[", "'train_y'", "]", "=", "train_y", "\n", "\n", "val_tensors", "=", "co", ".", "OrderedDict", "(", ")", "\n", "val_tensors", "[", "'val_coeffs'", "]", "=", "val_coeffs", "\n", "val_tensors", "[", "'val_y'", "]", "=", "val_y", "\n", "\n", "test_tensors", "=", "co", ".", "OrderedDict", "(", ")", "\n", "test_tensors", "[", "'test_coeffs'", "]", "=", "test_coeffs", "\n", "test_tensors", "[", "'test_y'", "]", "=", "test_y", "\n", "\n", "if", "final_index", "is", "not", "None", ":", "\n", "        ", "train_tensors", "[", "'train_final_index'", "]", "=", "train_final_index", "\n", "val_tensors", "[", "'val_final_index'", "]", "=", "val_final_index", "\n", "test_tensors", "[", "'test_final_index'", "]", "=", "test_final_index", "\n", "\n", "", "if", "static", "is", "not", "None", ":", "\n", "        ", "train_tensors", "[", "'train_static'", "]", "=", "train_static", "\n", "val_tensors", "[", "'val_static'", "]", "=", "val_static", "\n", "test_tensors", "[", "'test_static'", "]", "=", "test_static", "\n", "\n", "", "input_channels", "=", "torch", ".", "tensor", "(", "train_X", ".", "size", "(", "-", "1", ")", ")", "\n", "output_channels", "=", "torch", ".", "tensor", "(", "output_channels", ")", "\n", "\n", "return", "times", ",", "train_tensors", ",", "val_tensors", ",", "test_tensors", ",", "input_channels", ",", "output_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._load_data": [[145, 154], ["collections.OrderedDict", "sorted", "filename.endswith", "torch.load", "os.listdir", "[].split", "str", "filename.split"], "function", ["None"], ["", "def", "_load_data", "(", "dir", ")", ":", "\n", "    ", "tensors", "=", "co", ".", "OrderedDict", "(", ")", "\n", "filenames", "=", "sorted", "(", "filename", "for", "filename", "in", "os", ".", "listdir", "(", "dir", ")", ")", "\n", "for", "filename", "in", "filenames", ":", "\n", "        ", "if", "filename", ".", "endswith", "(", "'.pt'", ")", ":", "\n", "            ", "tensor_name", "=", "filename", ".", "split", "(", "'.'", ")", "[", "0", "]", ".", "split", "(", "'__'", ")", "[", "1", "]", "\n", "tensor_value", "=", "torch", ".", "load", "(", "str", "(", "dir", "/", "filename", ")", ")", "\n", "tensors", "[", "tensor_name", "]", "=", "tensor_value", "\n", "", "", "return", "tensors", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._save_data": [[156, 160], ["enumerate", "len", "tensors.items", "torch.save", "str", "len", "str", "f.format"], "function", ["None"], ["", "def", "_save_data", "(", "dir", ",", "tensors", ")", ":", "\n", "    ", "f", "=", "'{{:0{}}}__'", ".", "format", "(", "len", "(", "str", "(", "len", "(", "tensors", ")", ")", ")", ")", "\n", "for", "i", ",", "(", "tensor_name", ",", "tensor_value", ")", "in", "enumerate", "(", "tensors", ".", "items", "(", ")", ")", ":", "\n", "        ", "torch", ".", "save", "(", "tensor_value", ",", "str", "(", "dir", "/", "(", "f", ".", "format", "(", "i", ")", "+", "tensor_name", ")", ")", "+", "'.pt'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series.process_data": [[162, 194], ["time_series._processed_data_folder", "len", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "common.dataloader", "common.dataloader", "common.dataloader", "os.listdir", "time_series._load_data", "time_series._load_data", "time_series._load_data", "time_series._load_data", "download", "time_series._preprocess_data", "time_series._save_data", "os.mkdir", "os.mkdir", "os.mkdir", "time_series._save_data", "time_series._save_data", "time_series._save_data", "input_channels.item", "output_channels.item", "dict", "_load_data.values", "_load_data.values", "_load_data.values", "time_series.process_data"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._processed_data_folder", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.common.dataloader", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.common.dataloader", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.common.dataloader", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._load_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._load_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._load_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._load_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._preprocess_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._save_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._save_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._save_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series._save_data", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.time_series.process_data"], ["", "", "def", "process_data", "(", "name", ",", "batch_size", ",", "download", ",", "process_data", ")", ":", "\n", "    ", "processed_data_folder", "=", "_processed_data_folder", "(", "name", ")", "\n", "if", "len", "(", "os", ".", "listdir", "(", "processed_data_folder", ")", ")", ":", "\n", "        ", "general_tensors", "=", "_load_data", "(", "processed_data_folder", ")", "\n", "times", "=", "general_tensors", "[", "'times'", "]", "\n", "input_channels", "=", "general_tensors", "[", "'input_channels'", "]", "\n", "output_channels", "=", "general_tensors", "[", "'output_channels'", "]", "\n", "train_tensors", "=", "_load_data", "(", "processed_data_folder", "/", "'train'", ")", "\n", "val_tensors", "=", "_load_data", "(", "processed_data_folder", "/", "'val'", ")", "\n", "test_tensors", "=", "_load_data", "(", "processed_data_folder", "/", "'test'", ")", "\n", "", "else", ":", "\n", "        ", "download", "(", ")", "\n", "(", "times", ",", "train_tensors", ",", "val_tensors", ",", "\n", "test_tensors", ",", "input_channels", ",", "output_channels", ")", "=", "_preprocess_data", "(", "*", "process_data", "(", ")", ")", "\n", "_save_data", "(", "processed_data_folder", ",", "dict", "(", "times", "=", "times", ",", "input_channels", "=", "input_channels", ",", "\n", "output_channels", "=", "output_channels", ")", ")", "\n", "os", ".", "mkdir", "(", "processed_data_folder", "/", "'train'", ")", "\n", "os", ".", "mkdir", "(", "processed_data_folder", "/", "'val'", ")", "\n", "os", ".", "mkdir", "(", "processed_data_folder", "/", "'test'", ")", "\n", "_save_data", "(", "processed_data_folder", "/", "'train'", ",", "train_tensors", ")", "\n", "_save_data", "(", "processed_data_folder", "/", "'val'", ",", "val_tensors", ")", "\n", "_save_data", "(", "processed_data_folder", "/", "'test'", ",", "test_tensors", ")", "\n", "\n", "", "train_dataset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "*", "train_tensors", ".", "values", "(", ")", ")", "\n", "val_dataset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "*", "val_tensors", ".", "values", "(", ")", ")", "\n", "test_dataset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "*", "test_tensors", ".", "values", "(", ")", ")", "\n", "\n", "train_dataloader", "=", "common", ".", "dataloader", "(", "train_dataset", ",", "batch_size", ")", "\n", "val_dataloader", "=", "common", ".", "dataloader", "(", "val_dataset", ",", "batch_size", ")", "\n", "test_dataloader", "=", "common", ".", "dataloader", "(", "test_dataset", ",", "batch_size", ")", "\n", "\n", "return", "times", ",", "train_dataloader", ",", "val_dataloader", ",", "test_dataloader", ",", "input_channels", ".", "item", "(", ")", ",", "output_channels", ".", "item", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common.NFECounter.__init__": [[24, 28], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common.NFECounter.reset_nfe_ts": [[29, 32], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common.NFECounter.__call__": [[33, 37], ["common.NFECounter.ts.append", "super().__call__", "t.item"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common.NFECounter.__call__"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common._rms_norm": [[4, 6], ["tensor.pow().mean().sqrt", "tensor.pow().mean", "tensor.pow"], "function", ["None"], ["def", "dataloader", "(", "dataset", ",", "batch_size", ")", ":", "\n", "    ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "6", ",", "pin_memory", "=", "True", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common.make_norm": [[8, 20], ["state.numel", "max", "common._rms_norm", "common._rms_norm"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common._rms_norm", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common._rms_norm"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.ode._CNNFunc.__init__": [[9, 23], ["common.NFECounter.__init__", "torch.nn.ModuleList", "range", "torch.nn.Sequential", "ode._CNNFunc.convs.append", "torch.nn.Conv2d", "torch.nn.Softplus", "torch.nn.Conv2d", "torch.nn.Softplus", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_channels", ",", "hidden_hidden_channels", ",", "num_pieces", ",", "tanh", ")", ":", "\n", "        ", "super", "(", "_CNNFunc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_pieces", "=", "num_pieces", "\n", "self", ".", "tanh", "=", "tanh", "\n", "\n", "self", ".", "convs", "=", "torch", ".", "nn", ".", "ModuleList", "(", ")", "\n", "for", "_", "in", "range", "(", "num_pieces", ")", ":", "\n", "            ", "piece", "=", "torch", ".", "nn", ".", "Sequential", "(", "torch", ".", "nn", ".", "Conv2d", "(", "1", "+", "hidden_channels", ",", "hidden_hidden_channels", ",", "1", ")", ",", "\n", "torch", ".", "nn", ".", "Softplus", "(", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "hidden_hidden_channels", ",", "hidden_hidden_channels", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "torch", ".", "nn", ".", "Softplus", "(", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "hidden_hidden_channels", ",", "hidden_channels", ",", "1", ")", ")", "\n", "self", ".", "convs", ".", "append", "(", "piece", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.ode._CNNFunc.forward": [[24, 38], ["max", "t.unsqueeze().unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze().unsqueeze().repeat", "torch.cat", "conv", "bisect.bisect", "min", "torch.cat.size", "torch.cat.size", "torch.cat.size", "out.tanh.tanh.tanh", "range", "t.unsqueeze().unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze().unsqueeze", "t.unsqueeze().unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze", "t.unsqueeze().unsqueeze().unsqueeze().repeat.unsqueeze().unsqueeze().unsqueeze().repeat.unsqueeze"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "t", ",", "x", ")", ":", "\n", "# t is of shape ()", "\n", "# x is of shape (batch, hidden_channels, height, width)", "\n", "\n", "        ", "index", "=", "bisect", ".", "bisect", "(", "range", "(", "self", ".", "num_pieces", "+", "1", ")", ",", "t", ")", "-", "1", "\n", "index", "=", "max", "(", "0", ",", "min", "(", "index", ",", "self", ".", "num_pieces", "-", "1", ")", ")", "\n", "conv", "=", "self", ".", "convs", "[", "index", "]", "\n", "\n", "t", "=", "t", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "t", ",", "x", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "conv", "(", "x", ")", "\n", "if", "self", ".", "tanh", ":", "\n", "            ", "out", "=", "out", ".", "tanh", "(", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.ode.NeuralODECNN.__init__": [[41, 56], ["super().__init__", "torch.nn.Linear", "ode._CNNFunc", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_size", ",", "num_classes", ",", "hidden_channels", ",", "hidden_hidden_channels", ",", "num_pieces", ",", "norm", ",", "rtol", ",", "atol", ",", "\n", "tanh", ")", ":", "\n", "        ", "super", "(", "NeuralODECNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "input_channels", ",", "height", ",", "width", "=", "img_size", "\n", "\n", "self", ".", "num_pieces", "=", "num_pieces", "\n", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "rtol", "=", "rtol", "\n", "self", ".", "atol", "=", "atol", "\n", "\n", "self", ".", "augment", "=", "torch", ".", "nn", ".", "Linear", "(", "input_channels", ",", "hidden_channels", ")", "\n", "self", ".", "func", "=", "_CNNFunc", "(", "hidden_channels", ",", "hidden_hidden_channels", ",", "num_pieces", ",", "tanh", ")", "\n", "self", ".", "readout", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_channels", "*", "height", "*", "width", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.ode.NeuralODECNN.nfe": [[57, 60], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "nfe", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "func", ".", "nfe", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.ode.NeuralODECNN.ts": [[61, 64], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "ts", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "func", ".", "ts", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.ode.NeuralODECNN.reset_nfe_ts": [[65, 67], ["ode.NeuralODECNN.func.reset_nfe_ts"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.reset_nfe_ts"], ["", "def", "reset_nfe_ts", "(", "self", ")", ":", "\n", "        ", "self", ".", "func", ".", "reset_nfe_ts", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.ode.NeuralODECNN.forward": [[68, 89], ["ode.NeuralODECNN.augment().transpose", "torch.tensor", "torch.linspace", "dict", "dict.copy", "torchdiffeq.odeint_adjoint", "ode.NeuralODECNN.readout", "torch.nn.functional.cross_entropy", "torch.argmax", "common.make_norm", "z_T.flatten", "ode.NeuralODECNN.augment", "ode.NeuralODECNN.transpose"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common.make_norm"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "x", "=", "self", ".", "augment", "(", "x", ".", "transpose", "(", "1", ",", "3", ")", ")", ".", "transpose", "(", "1", ",", "3", ")", "\n", "t", "=", "torch", ".", "tensor", "(", "[", "0.", ",", "self", ".", "num_pieces", "]", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "\n", "# Tell the solver about the discontinuities", "\n", "grid_points", "=", "torch", ".", "linspace", "(", "0", ",", "self", ".", "num_pieces", ",", "self", ".", "num_pieces", "+", "1", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "options", "=", "dict", "(", "grid_points", "=", "grid_points", ",", "eps", "=", "1e-5", ")", "\n", "adjoint_options", "=", "options", ".", "copy", "(", ")", "\n", "\n", "if", "self", ".", "norm", ":", "\n", "            ", "adjoint_options", "[", "'norm'", "]", "=", "common", ".", "make_norm", "(", "x", ")", "\n", "\n", "", "z_t", "=", "torchdiffeq", ".", "odeint_adjoint", "(", "self", ".", "func", ",", "x", ",", "t", ",", "rtol", "=", "self", ".", "rtol", ",", "atol", "=", "self", ".", "atol", ",", "options", "=", "options", ",", "\n", "adjoint_options", "=", "adjoint_options", ")", "\n", "z_T", "=", "z_t", "[", "1", "]", "\n", "pred_y", "=", "self", ".", "readout", "(", "z_T", ".", "flatten", "(", "1", ",", "-", "1", ")", ")", "\n", "\n", "loss", "=", "torch", ".", "nn", ".", "functional", ".", "cross_entropy", "(", "pred_y", ",", "y", ")", "\n", "thresholded_y", "=", "torch", ".", "argmax", "(", "pred_y", ",", "dim", "=", "1", ")", "\n", "accuracy", "=", "(", "thresholded_y", "==", "y", ")", ".", "sum", "(", ")", ".", "to", "(", "pred_y", ".", "dtype", ")", "\n", "return", "loss", ",", "accuracy", "\n", "", "", ""]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.MLP.__init__": [[13, 18], ["super().__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "hidden_dim", ",", "output_dim", ")", ":", "\n", "        ", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear1", "=", "torch", ".", "nn", ".", "Linear", "(", "input_dim", ",", "hidden_dim", ")", "\n", "self", ".", "linear2", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", "\n", "self", ".", "linear3", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_dim", ",", "output_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.MLP.forward": [[19, 23], ["torch.nn.functional.softplus", "torch.nn.functional.softplus", "symode.MLP.linear3", "symode.MLP.linear1", "symode.MLP.linear2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "self", ".", "linear1", "(", "x", ")", ")", "\n", "h", "=", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "self", ".", "linear2", "(", "h", ")", ")", "\n", "return", "self", ".", "linear3", "(", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.PSD.__init__": [[28, 37], ["super().__init__", "int", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__"], ["def", "__init__", "(", "self", ",", "input_dim", ",", "hidden_dim", ",", "diag_dim", ")", ":", "\n", "        ", "super", "(", "PSD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "diag_dim", ">", "1", "\n", "self", ".", "diag_dim", "=", "diag_dim", "\n", "self", ".", "off_diag_dim", "=", "int", "(", "diag_dim", "*", "(", "diag_dim", "-", "1", ")", "/", "2", ")", "\n", "self", ".", "linear1", "=", "torch", ".", "nn", ".", "Linear", "(", "input_dim", ",", "hidden_dim", ")", "\n", "self", ".", "linear2", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", "\n", "self", ".", "linear3", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", "\n", "self", ".", "linear4", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_dim", ",", "self", ".", "diag_dim", "+", "self", ".", "off_diag_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.PSD.forward": [[38, 57], ["torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.nn.functional.softplus", "torch.split", "torch.diag_embed", "numpy.tril_indices", "numpy.ravel_multi_index", "torch.flatten", "torch.reshape", "torch.bmm", "symode.PSD.linear1", "symode.PSD.linear2", "symode.PSD.linear3", "symode.PSD.linear4", "torch.reshape.permute"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "q", ")", ":", "\n", "        ", "bs", "=", "q", ".", "shape", "[", "0", "]", "\n", "h", "=", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "self", ".", "linear1", "(", "q", ")", ")", "\n", "h", "=", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "self", ".", "linear2", "(", "h", ")", ")", "\n", "h", "=", "torch", ".", "nn", ".", "functional", ".", "softplus", "(", "self", ".", "linear3", "(", "h", ")", ")", "\n", "diag", ",", "off_diag", "=", "torch", ".", "split", "(", "self", ".", "linear4", "(", "h", ")", ",", "[", "self", ".", "diag_dim", ",", "self", ".", "off_diag_dim", "]", ",", "dim", "=", "1", ")", "\n", "\n", "L", "=", "torch", ".", "diag_embed", "(", "diag", ")", "\n", "\n", "ind", "=", "np", ".", "tril_indices", "(", "self", ".", "diag_dim", ",", "k", "=", "-", "1", ")", "\n", "flat_ind", "=", "np", ".", "ravel_multi_index", "(", "ind", ",", "(", "self", ".", "diag_dim", ",", "self", ".", "diag_dim", ")", ")", "\n", "L", "=", "torch", ".", "flatten", "(", "L", ",", "start_dim", "=", "1", ")", "\n", "L", "[", ":", ",", "flat_ind", "]", "=", "off_diag", "\n", "L", "=", "torch", ".", "reshape", "(", "L", ",", "(", "bs", ",", "self", ".", "diag_dim", ",", "self", ".", "diag_dim", ")", ")", "\n", "\n", "D", "=", "torch", ".", "bmm", "(", "L", ",", "L", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "D", "[", ":", ",", "0", ",", "0", "]", "=", "D", "[", ":", ",", "0", ",", "0", "]", "+", "0.1", "\n", "D", "[", ":", ",", "1", ",", "1", "]", "=", "D", "[", ":", ",", "1", ",", "1", "]", "+", "0.1", "\n", "return", "D", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.MatrixNet.__init__": [[62, 66], ["super().__init__", "symode.MLP"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__"], ["def", "__init__", "(", "self", ",", "input_dim", ",", "hidden_dim", ",", "output_dim", ",", "shape", "=", "(", "2", ",", "2", ")", ")", ":", "\n", "        ", "super", "(", "MatrixNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp", "=", "MLP", "(", "input_dim", ",", "hidden_dim", ",", "output_dim", ")", "\n", "self", ".", "shape", "=", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.MatrixNet.forward": [[67, 70], ["symode.MatrixNet.mlp", "symode.MatrixNet.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "flatten", "=", "self", ".", "mlp", "(", "x", ")", "\n", "return", "flatten", ".", "view", "(", "-", "1", ",", "*", "self", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.SymODEN_T.__init__": [[80, 88], ["common.NFECounter.__init__"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__"], ["def", "__init__", "(", "self", ",", "input_dim", ",", "M_net", "=", "None", ",", "V_net", "=", "None", ",", "g_net", "=", "None", ",", "u_dim", "=", "1", ")", ":", "\n", "        ", "super", "(", "SymODEN_T", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "M_net", "=", "M_net", "\n", "self", ".", "u_dim", "=", "u_dim", "\n", "self", ".", "V_net", "=", "V_net", "\n", "self", ".", "g_net", "=", "g_net", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.SymODEN_T.forward": [[89, 125], ["torch.enable_grad", "torch.zeros", "torch.split", "symode.SymODEN_T.M_net", "torch.unsqueeze", "torch.squeeze", "torch.cat", "torch.split", "symode.SymODEN_T.M_net", "torch.chunk", "symode.SymODEN_T.V_net", "torch.unsqueeze", "torch.split", "symode.SymODEN_T.g_net", "torch.squeeze", "torch.zeros_like", "range", "torch.cat", "torch.matmul", "torch.squeeze", "torch.autograd.grad", "torch.matmul", "range", "torch.squeeze", "torch.squeeze", "torch.inverse", "torch.squeeze", "H.sum", "torch.unsqueeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.autograd.grad", "torch.unsqueeze", "torch.unsqueeze", "torch.transpose", "torch.matmul", "M_q_inv[].sum", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "t", ",", "x", ")", ":", "\n", "        ", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "bs", "=", "x", ".", "shape", "[", "0", "]", "\n", "zero_vec", "=", "torch", ".", "zeros", "(", "bs", ",", "self", ".", "u_dim", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "x", ".", "device", ")", "\n", "\n", "cos_q_sin_q", ",", "q_dot", ",", "u", "=", "torch", ".", "split", "(", "x", ",", "[", "2", "*", "self", ".", "input_dim", ",", "self", ".", "input_dim", ",", "self", ".", "u_dim", "]", ",", "dim", "=", "1", ")", "\n", "M_q_inv", "=", "self", ".", "M_net", "(", "cos_q_sin_q", ")", "\n", "q_dot_aug", "=", "torch", ".", "unsqueeze", "(", "q_dot", ",", "dim", "=", "2", ")", "\n", "p", "=", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "torch", ".", "inverse", "(", "M_q_inv", ")", ",", "q_dot_aug", ")", ",", "dim", "=", "2", ")", "\n", "cos_q_sin_q_p", "=", "torch", ".", "cat", "(", "(", "cos_q_sin_q", ",", "p", ")", ",", "dim", "=", "1", ")", "\n", "cos_q_sin_q", ",", "p", "=", "torch", ".", "split", "(", "cos_q_sin_q_p", ",", "[", "2", "*", "self", ".", "input_dim", ",", "1", "*", "self", ".", "input_dim", "]", ",", "dim", "=", "1", ")", "\n", "M_q_inv", "=", "self", ".", "M_net", "(", "cos_q_sin_q", ")", "\n", "cos_q", ",", "sin_q", "=", "torch", ".", "chunk", "(", "cos_q_sin_q", ",", "2", ",", "dim", "=", "1", ")", "\n", "\n", "V_q", "=", "self", ".", "V_net", "(", "cos_q_sin_q", ")", "\n", "p_aug", "=", "torch", ".", "unsqueeze", "(", "p", ",", "dim", "=", "2", ")", "\n", "H", "=", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "torch", ".", "transpose", "(", "p_aug", ",", "1", ",", "2", ")", ",", "\n", "torch", ".", "matmul", "(", "M_q_inv", ",", "p_aug", ")", ")", ")", "/", "2.0", "+", "torch", ".", "squeeze", "(", "V_q", ")", "\n", "dH", "=", "torch", ".", "autograd", ".", "grad", "(", "H", ".", "sum", "(", ")", ",", "cos_q_sin_q_p", ",", "create_graph", "=", "True", ")", "[", "0", "]", "\n", "dHdcos_q", ",", "dHdsin_q", ",", "dHdp", "=", "torch", ".", "split", "(", "dH", ",", "[", "self", ".", "input_dim", ",", "self", ".", "input_dim", ",", "self", ".", "input_dim", "]", ",", "dim", "=", "1", ")", "\n", "g_q", "=", "self", ".", "g_net", "(", "cos_q_sin_q", ")", "\n", "F", "=", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "g_q", ",", "torch", ".", "unsqueeze", "(", "u", ",", "dim", "=", "2", ")", ")", ")", "\n", "\n", "dq", "=", "dHdp", "\n", "dp", "=", "sin_q", "*", "dHdcos_q", "-", "cos_q", "*", "dHdsin_q", "+", "F", "\n", "\n", "dM_inv_dt", "=", "torch", ".", "zeros_like", "(", "M_q_inv", ")", "\n", "for", "row_ind", "in", "range", "(", "self", ".", "input_dim", ")", ":", "\n", "                ", "for", "col_ind", "in", "range", "(", "self", ".", "input_dim", ")", ":", "\n", "                    ", "dM_inv", "=", "torch", ".", "autograd", ".", "grad", "(", "M_q_inv", "[", ":", ",", "row_ind", ",", "col_ind", "]", ".", "sum", "(", ")", ",", "cos_q_sin_q", ",", "create_graph", "=", "True", ")", "[", "0", "]", "\n", "dM_inv_dt", "[", ":", ",", "row_ind", ",", "col_ind", "]", "=", "(", "dM_inv", "*", "torch", ".", "cat", "(", "(", "-", "sin_q", "*", "dq", ",", "cos_q", "*", "dq", ")", ",", "dim", "=", "1", ")", ")", ".", "sum", "(", "-", "1", ")", "\n", "", "", "ddq", "=", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "M_q_inv", ",", "torch", ".", "unsqueeze", "(", "dp", ",", "dim", "=", "2", ")", ")", ",", "dim", "=", "2", ")", "+", "torch", ".", "squeeze", "(", "torch", ".", "matmul", "(", "dM_inv_dt", ",", "torch", ".", "unsqueeze", "(", "p", ",", "dim", "=", "2", ")", ")", ",", "dim", "=", "2", ")", "\n", "\n", "return", "torch", ".", "cat", "(", "(", "-", "sin_q", "*", "dq", ",", "cos_q", "*", "dq", ",", "ddq", ",", "zero_vec", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.SymODE.__init__": [[128, 141], ["super().__init__", "symode.SymODE.register_buffer", "symode.PSD", "symode.MLP", "symode.MatrixNet", "symode.SymODEN_T"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__"], ["    ", "def", "__init__", "(", "self", ",", "times", ",", "norm", ",", "rtol", ",", "atol", ")", ":", "\n", "        ", "super", "(", "SymODE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'times'", ",", "times", ")", "\n", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "rtol", "=", "rtol", "\n", "self", ".", "atol", "=", "atol", "\n", "\n", "M_net", "=", "PSD", "(", "4", ",", "400", ",", "2", ")", "\n", "V_net", "=", "MLP", "(", "4", ",", "300", ",", "1", ")", "\n", "g_net", "=", "MatrixNet", "(", "4", ",", "300", ",", "4", ",", "shape", "=", "(", "2", ",", "2", ")", ")", "\n", "self", ".", "func", "=", "SymODEN_T", "(", "2", ",", "M_net", "=", "M_net", ",", "V_net", "=", "V_net", ",", "g_net", "=", "g_net", ",", "u_dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.SymODE.nfe": [[142, 145], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "nfe", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "func", ".", "nfe", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.SymODE.ts": [[146, 149], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "ts", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "func", ".", "ts", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.SymODE.reset_nfe_ts": [[150, 152], ["symode.SymODE.func.reset_nfe_ts"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.reset_nfe_ts"], ["", "def", "reset_nfe_ts", "(", "self", ")", ":", "\n", "        ", "self", ".", "func", ".", "reset_nfe_ts", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.symode.SymODE.forward": [[153, 164], ["torchdiffeq.odeint_adjoint", "torch.nn.functional.mse_loss", "dict", "torchdiffeq.odeint_adjoint.transpose", "common.make_norm"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common.make_norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "norm", ":", "\n", "            ", "adjoint_options", "=", "dict", "(", "norm", "=", "common", ".", "make_norm", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "adjoint_options", "=", "None", "\n", "\n", "", "z", "=", "torchdiffeq", ".", "odeint_adjoint", "(", "self", ".", "func", ",", "x", "[", ":", ",", "0", "]", ",", "self", ".", "times", ",", "rtol", "=", "self", ".", "rtol", ",", "atol", "=", "self", ".", "atol", ",", "\n", "adjoint_options", "=", "adjoint_options", ")", "\n", "\n", "loss", "=", "torch", ".", "nn", ".", "functional", ".", "mse_loss", "(", "x", ",", "z", ".", "transpose", "(", "0", ",", "1", ")", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde._CDEFunc.__init__": [[9, 19], ["common.NFECounter.__init__", "torch.nn.Linear", "torch.nn.ModuleList", "torch.nn.Linear", "torch.nn.Linear", "range"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "hidden_channels", ",", "hidden_hidden_channels", ",", "num_hidden_layers", ")", ":", "\n", "        ", "super", "(", "_CDEFunc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input_channels", "=", "input_channels", "\n", "self", ".", "hidden_channels", "=", "hidden_channels", "\n", "\n", "self", ".", "linear_in", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_channels", ",", "hidden_hidden_channels", ")", "\n", "self", ".", "linears", "=", "torch", ".", "nn", ".", "ModuleList", "(", "torch", ".", "nn", ".", "Linear", "(", "hidden_hidden_channels", ",", "hidden_hidden_channels", ")", "\n", "for", "_", "in", "range", "(", "num_hidden_layers", "-", "1", ")", ")", "\n", "self", ".", "linear_out", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_hidden_channels", ",", "input_channels", "*", "hidden_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde._CDEFunc.forward": [[20, 35], ["cde._CDEFunc.linear_in", "f_hidden.relu.relu.relu", "cde._CDEFunc.linear_out().view", "f_hidden.relu.relu.tanh", "linear", "f_hidden.relu.relu.relu", "cde._CDEFunc.linear_out"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "t", ",", "z", ")", ":", "\n", "# t is of shape ()", "\n", "# z is of shape (batch, hidden_channels)", "\n", "\n", "        ", "hidden", "=", "z", "\n", "\n", "f_hidden", "=", "self", ".", "linear_in", "(", "hidden", ")", "\n", "f_hidden", "=", "f_hidden", ".", "relu", "(", ")", "\n", "for", "linear", "in", "self", ".", "linears", ":", "\n", "            ", "f_hidden", "=", "linear", "(", "f_hidden", ")", "\n", "f_hidden", "=", "f_hidden", ".", "relu", "(", ")", "\n", "", "f_hidden", "=", "self", ".", "linear_out", "(", "f_hidden", ")", ".", "view", "(", "*", "f_hidden", ".", "shape", "[", ":", "-", "1", "]", ",", "self", ".", "hidden_channels", ",", "self", ".", "input_channels", ")", "\n", "f_hidden", "=", "f_hidden", ".", "tanh", "(", ")", "\n", "\n", "return", "f_hidden", "# shape (batch, hidden_channels, input_channels)", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__": [[38, 51], ["super().__init__", "cde.NeuralCDE.register_buffer", "cde._CDEFunc", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.__init__"], ["    ", "def", "__init__", "(", "self", ",", "times", ",", "input_channels", ",", "hidden_channels", ",", "hidden_hidden_channels", ",", "num_hidden_layers", ",", "\n", "output_channels", ",", "norm", ",", "rtol", ",", "atol", ")", ":", "\n", "        ", "super", "(", "NeuralCDE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'times'", ",", "times", ")", "\n", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "rtol", "=", "rtol", "\n", "self", ".", "atol", "=", "atol", "\n", "\n", "self", ".", "func", "=", "_CDEFunc", "(", "input_channels", ",", "hidden_channels", ",", "hidden_hidden_channels", ",", "num_hidden_layers", ")", "\n", "self", ".", "initial", "=", "torch", ".", "nn", ".", "Linear", "(", "input_channels", ",", "hidden_channels", ")", "\n", "self", ".", "readout", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_channels", ",", "output_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.nfe": [[52, 55], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "nfe", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "func", ".", "nfe", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.ts": [[56, 59], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "ts", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "func", ".", "ts", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.reset_nfe_ts": [[60, 62], ["cde.NeuralCDE.func.reset_nfe_ts"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.reset_nfe_ts"], ["", "def", "reset_nfe_ts", "(", "self", ")", ":", "\n", "        ", "self", ".", "func", ".", "reset_nfe_ts", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.forward": [[63, 88], ["torchcde.LinearInterpolation", "cde.NeuralCDE.initial", "dict", "dict.copy", "torchcde.cdeint", "cde.NeuralCDE.readout", "torch.nn.functional.cross_entropy", "torch.argmax", "torchcde.LinearInterpolation.evaluate", "common.make_norm"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.common.make_norm"], ["", "def", "forward", "(", "self", ",", "coeffs", ",", "y", ")", ":", "\n", "# coeffs is of shape (batch, length, input_channels) if using any linear interpolation", "\n", "# y is of shape (batch,)", "\n", "\n", "        ", "X", "=", "torchcde", ".", "LinearInterpolation", "(", "coeffs", ",", "self", ".", "times", ")", "\n", "z0", "=", "self", ".", "initial", "(", "X", ".", "evaluate", "(", "self", ".", "times", "[", "0", "]", ")", ")", "\n", "options", "=", "dict", "(", "grid_points", "=", "X", ".", "grid_points", ",", "eps", "=", "1e-5", ")", "\n", "adjoint_options", "=", "options", ".", "copy", "(", ")", "\n", "if", "self", ".", "norm", ":", "\n", "            ", "adjoint_options", "[", "'norm'", "]", "=", "common", ".", "make_norm", "(", "z0", ")", "\n", "", "z_t", "=", "torchcde", ".", "cdeint", "(", "X", "=", "X", ",", "\n", "z0", "=", "z0", ",", "\n", "func", "=", "self", ".", "func", ",", "\n", "t", "=", "self", ".", "times", "[", "[", "0", ",", "-", "1", "]", "]", ",", "\n", "rtol", "=", "self", ".", "rtol", ",", "\n", "atol", "=", "self", ".", "atol", ",", "\n", "options", "=", "options", ",", "\n", "adjoint_options", "=", "adjoint_options", ")", "\n", "z_T", "=", "z_t", "[", ":", ",", "-", "1", "]", "\n", "pred_y", "=", "self", ".", "readout", "(", "z_T", ")", "\n", "\n", "loss", "=", "torch", ".", "nn", ".", "functional", ".", "cross_entropy", "(", "pred_y", ",", "y", ")", "\n", "thresholded_y", "=", "torch", ".", "argmax", "(", "pred_y", ",", "dim", "=", "1", ")", "\n", "accuracy", "=", "(", "thresholded_y", "==", "y", ")", ".", "sum", "(", ")", ".", "to", "(", "pred_y", ".", "dtype", ")", "\n", "return", "loss", ",", "accuracy", "\n", "", "", ""]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.common.AttrDict.__setattr__": [[7, 9], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.common.AttrDict.__getattr__": [[10, 12], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.common.count_parameters": [[1, 4], ["sum", "param.numel", "model.parameters"], "function", ["None"], ["import", "torch", "\n", "\n", "\n", "def", "dataloader", "(", "dataset", ",", "batch_size", ")", ":", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._TensorEncoder.default": [[163, 168], ["isinstance", "o.tolist", "super().default"], "methods", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._TensorEncoder.default"], ["    ", "def", "default", "(", "self", ",", "o", ")", ":", "\n", "        ", "if", "isinstance", "(", "o", ",", "(", "torch", ".", "Tensor", ",", "np", ".", "ndarray", ")", ")", ":", "\n", "            ", "return", "o", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "            ", "super", "(", "_TensorEncoder", ",", "self", ")", ".", "default", "(", "o", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._call_model": [[17, 26], ["tuple", "model", "isinstance", "b.to", "torch.tensor", "float"], "function", ["None"], ["def", "_call_model", "(", "model", ",", "batch", ",", "device", ")", ":", "\n", "    ", "batch", "=", "tuple", "(", "b", ".", "to", "(", "device", ")", "for", "b", "in", "batch", ")", "\n", "\n", "ret", "=", "model", "(", "*", "batch", ")", "\n", "# Normalise between models that also return accuracy, and those that don't", "\n", "if", "isinstance", "(", "ret", ",", "tuple", ")", ":", "\n", "        ", "return", "ret", "\n", "", "else", ":", "\n", "        ", "return", "ret", ",", "torch", ".", "tensor", "(", "float", "(", "'nan'", ")", ",", "dtype", "=", "ret", ".", "dtype", ",", "device", "=", "ret", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._evaluate_metrics": [[28, 75], ["model.eval", "time.time", "common.AttrDict", "model.reset_nfe_ts", "train._call_model", "forward_ts.extend", "train._count_accept_rejects", "forward_accept_ts.extend", "forward_reject_ts.extend", "model.reset_nfe_ts", "loss.backward", "backward_ts.extend", "train._count_accept_rejects", "backward_accept_ts.extend", "backward_reject_ts.extend", "model.zero_grad", "model.reset_nfe_ts", "batch[].size", "correct.item", "time.time", "loss.item"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.reset_nfe_ts", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._call_model", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._count_accept_rejects", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.reset_nfe_ts", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._count_accept_rejects", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.models.cde.NeuralCDE.reset_nfe_ts"], ["", "", "def", "_evaluate_metrics", "(", "dataloader", ",", "model", ",", "device", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "total_correct", "=", "0", "\n", "total_dataset_size", "=", "0", "\n", "total_loss", "=", "0", "\n", "forward_nfe", "=", "0", "\n", "backward_nfe", "=", "0", "\n", "forward_ts", "=", "[", "]", "\n", "backward_ts", "=", "[", "]", "\n", "forward_accept_ts", "=", "[", "]", "\n", "forward_reject_ts", "=", "[", "]", "\n", "backward_accept_ts", "=", "[", "]", "\n", "backward_reject_ts", "=", "[", "]", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "batch", "in", "dataloader", ":", "\n", "        ", "model", ".", "reset_nfe_ts", "(", ")", "\n", "loss", ",", "correct", "=", "_call_model", "(", "model", ",", "batch", ",", "device", ")", "\n", "forward_nfe", "+=", "model", ".", "nfe", "\n", "forward_ts", ".", "extend", "(", "model", ".", "ts", ")", "\n", "accs", ",", "rejs", "=", "_count_accept_rejects", "(", "model", ".", "ts", ")", "\n", "forward_accept_ts", ".", "extend", "(", "accs", ")", "\n", "forward_reject_ts", ".", "extend", "(", "rejs", ")", "\n", "model", ".", "reset_nfe_ts", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "backward_nfe", "+=", "model", ".", "nfe", "\n", "backward_ts", ".", "extend", "(", "model", ".", "ts", ")", "\n", "accs", ",", "rejs", "=", "_count_accept_rejects", "(", "model", ".", "ts", ",", "reverse_time", "=", "True", ")", "\n", "backward_accept_ts", ".", "extend", "(", "accs", ")", "\n", "backward_reject_ts", ".", "extend", "(", "rejs", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "model", ".", "reset_nfe_ts", "(", ")", "\n", "\n", "batch_size", "=", "batch", "[", "0", "]", ".", "size", "(", "0", ")", "\n", "total_correct", "+=", "correct", ".", "item", "(", ")", "\n", "total_dataset_size", "+=", "batch_size", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "*", "batch_size", "\n", "", "timespan", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n", "total_loss", "/=", "total_dataset_size", "# assume 'mean' reduction in the loss function", "\n", "total_accuracy", "=", "total_correct", "/", "total_dataset_size", "\n", "metrics", "=", "common", ".", "AttrDict", "(", "accuracy", "=", "total_accuracy", ",", "dataset_size", "=", "total_dataset_size", ",", "\n", "loss", "=", "total_loss", ",", "timestamp", "=", "start_time", ",", "timespan", "=", "timespan", ",", "forward_nfe", "=", "forward_nfe", ",", "\n", "backward_nfe", "=", "backward_nfe", ",", "forward_ts", "=", "forward_ts", ",", "backward_ts", "=", "backward_ts", ",", "\n", "forward_accept_ts", "=", "forward_accept_ts", ",", "forward_reject_ts", "=", "forward_reject_ts", ",", "\n", "backward_accept_ts", "=", "backward_accept_ts", ",", "backward_reject_ts", "=", "backward_reject_ts", ")", "\n", "return", "metrics", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._count_accept_rejects": [[77, 96], ["zip", "accepts.append", "ineq", "rejects.append", "accepts.append"], "function", ["None"], ["", "def", "_count_accept_rejects", "(", "ts", ",", "first_step_given", "=", "False", ",", "evals_per_step", "=", "6", ",", "reverse_time", "=", "False", ")", ":", "\n", "    ", "if", "first_step_given", ":", "\n", "        ", "offset", "=", "evals_per_step", "-", "1", "\n", "", "else", ":", "\n", "        ", "offset", "=", "evals_per_step", "+", "1", "\n", "\n", "", "ineq", "=", "lambda", "t0", ",", "t1", ":", "t0", "<", "t1", "if", "reverse_time", "else", "t1", "<", "t0", "\n", "\n", "step_times", "=", "ts", "[", "offset", ":", ":", "evals_per_step", "]", "\n", "accepts", "=", "[", "]", "\n", "rejects", "=", "[", "]", "\n", "for", "t", ",", "next_t", "in", "zip", "(", "step_times", "[", ":", "-", "1", "]", ",", "step_times", "[", "1", ":", "]", ")", ":", "\n", "        ", "if", "ineq", "(", "t", ",", "next_t", ")", ":", "\n", "            ", "rejects", ".", "append", "(", "t", ")", "\n", "", "else", ":", "\n", "            ", "accepts", ".", "append", "(", "t", ")", "\n", "", "", "accepts", ".", "append", "(", "step_times", "[", "-", "1", "]", ")", "\n", "\n", "return", "accepts", ",", "rejects", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._train_loop": [[98, 160], ["model.train", "model.state_dict", "torch.optim.lr_scheduler.ReduceLROnPlateau", "tqdm.tqdm", "tqdm.tqdm.write", "time.time", "model.load_state_dict", "range", "time.time", "train._call_model", "loss.backward", "optimizer.step", "optimizer.zero_grad", "train._evaluate_metrics", "train._evaluate_metrics", "model.train", "math.isnan", "torch.optim.lr_scheduler.ReduceLROnPlateau.step", "history.append", "str", "copy.deepcopy", "tqdm.tqdm.write", "tqdm.tqdm.write", "common.AttrDict", "tqdm.tqdm.write", "model.state_dict"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._call_model", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.step", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._evaluate_metrics", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._evaluate_metrics", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.datasets.acrobot.AcrobotEnv.step"], ["", "def", "_train_loop", "(", "train_dataloader", ",", "val_dataloader", ",", "model", ",", "optimizer", ",", "max_epochs", ",", "device", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "best_model", "=", "model", ".", "state_dict", "(", ")", "\n", "best_train_loss", "=", "math", ".", "inf", "\n", "best_train_loss_epoch", "=", "0", "\n", "history", "=", "[", "]", "\n", "\n", "epoch_per_metric", "=", "10", "\n", "plateau_terminate", "=", "100", "\n", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "patience", "=", "2", ")", "\n", "\n", "tqdm_range", "=", "tqdm", ".", "tqdm", "(", "range", "(", "max_epochs", ")", ")", "\n", "tqdm_range", ".", "write", "(", "'Starting training for model:\\n\\n'", "+", "str", "(", "model", ")", "+", "'\\n\\n'", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "tqdm_range", ":", "\n", "        ", "for", "batch", "in", "train_dataloader", ":", "\n", "            ", "loss", ",", "_", "=", "_call_model", "(", "model", ",", "batch", ",", "device", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "", "if", "epoch", "%", "epoch_per_metric", "==", "0", "or", "epoch", "==", "max_epochs", "-", "1", ":", "\n", "# Don't measure backward for speed?", "\n", "            ", "train_metrics", "=", "_evaluate_metrics", "(", "train_dataloader", ",", "model", ",", "device", ")", "\n", "val_metrics", "=", "_evaluate_metrics", "(", "val_dataloader", ",", "model", ",", "device", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "if", "train_metrics", ".", "loss", "*", "1.0001", "<", "best_train_loss", ":", "\n", "                ", "best_train_loss", "=", "train_metrics", ".", "loss", "\n", "best_train_loss_epoch", "=", "epoch", "\n", "del", "best_model", "# so that we don't have three copies of a model simultaneously", "\n", "best_model", "=", "copy", ".", "deepcopy", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "\n", "", "if", "math", ".", "isnan", "(", "train_metrics", ".", "accuracy", ")", ":", "\n", "                ", "tqdm_range", ".", "write", "(", "f'Epoch: {epoch}  '", "\n", "f'Train loss: {train_metrics.loss:.3}  '", "\n", "f'Train Forward NFE: {train_metrics.forward_nfe}  '", "\n", "f'Train Backward NFE: {train_metrics.backward_nfe}  '", "\n", "f'Val loss: {val_metrics.loss:.3}  '", "\n", "f'Val Forward NFE: {val_metrics.forward_nfe}  '", "\n", "f'Val Backward NFE: {val_metrics.backward_nfe}'", ")", "\n", "", "else", ":", "\n", "                ", "tqdm_range", ".", "write", "(", "f'Epoch: {epoch}  '", "\n", "f'Train loss: {train_metrics.loss:.3}  '", "\n", "f'Train accuracy: {train_metrics.accuracy:.3}  '", "\n", "f'Train Forward NFE: {train_metrics.forward_nfe}  '", "\n", "f'Train Backward NFE: {train_metrics.backward_nfe}  '", "\n", "f'Val loss: {val_metrics.loss:.3}  '", "\n", "f'Val accuracy: {val_metrics.accuracy:.3}  '", "\n", "f'Val Forward NFE: {val_metrics.forward_nfe}  '", "\n", "f'Val Backward NFE: {val_metrics.backward_nfe}'", ")", "\n", "", "scheduler", ".", "step", "(", "train_metrics", ".", "loss", ")", "\n", "history", ".", "append", "(", "common", ".", "AttrDict", "(", "epoch", "=", "epoch", ",", "train_metrics", "=", "train_metrics", ",", "val_metrics", "=", "val_metrics", ")", ")", "\n", "\n", "if", "epoch", ">", "best_train_loss_epoch", "+", "plateau_terminate", ":", "\n", "                ", "tqdm_range", ".", "write", "(", "'Breaking because of no improvement in training loss for {} epochs.'", "\n", "''", ".", "format", "(", "plateau_terminate", ")", ")", "\n", "break", "\n", "", "", "", "timespan", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n", "model", ".", "load_state_dict", "(", "best_model", ")", "\n", "return", "history", ",", "start_time", ",", "timespan", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._save_results": [[170, 188], ["os.makedirs", "os.listdir", "result.copy", "str", "open", "json.dump", "max", "int", "str"], "function", ["None"], ["", "", "", "def", "_save_results", "(", "name", ",", "result", ")", ":", "\n", "    ", "loc", "=", "_here", "/", "'../results'", "/", "name", "\n", "os", ".", "makedirs", "(", "loc", ",", "exist_ok", "=", "True", ")", "\n", "num", "=", "-", "1", "\n", "for", "filename", "in", "os", ".", "listdir", "(", "loc", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "num", "=", "max", "(", "num", ",", "int", "(", "filename", ")", ")", "\n", "", "except", "ValueError", ":", "\n", "            ", "pass", "\n", "", "", "result_to_save", "=", "result", ".", "copy", "(", ")", "\n", "del", "result_to_save", "[", "'train_dataloader'", "]", "\n", "del", "result_to_save", "[", "'val_dataloader'", "]", "\n", "del", "result_to_save", "[", "'test_dataloader'", "]", "\n", "result_to_save", "[", "'model'", "]", "=", "str", "(", "result_to_save", "[", "'model'", "]", ")", "\n", "\n", "num", "+=", "1", "\n", "with", "open", "(", "loc", "/", "str", "(", "num", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "json", ".", "dump", "(", "result_to_save", ",", "f", ",", "cls", "=", "_TensorEncoder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train.main": [[190, 233], ["common.AttrDict", "model.to", "torch.optim.AdamW", "train._train_loop", "model.eval", "train._evaluate_metrics", "train._evaluate_metrics", "train._evaluate_metrics", "train._save_results", "torch.cuda.device", "contextlib.nullcontext", "torch.cuda.reset_peak_memory_stats", "torch.cuda.memory_allocated", "model.parameters", "model.to", "common.count_parameters", "torch.cuda.max_memory_allocated"], "function", ["home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._train_loop", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._evaluate_metrics", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._evaluate_metrics", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._evaluate_metrics", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.train._save_results", "home.repos.pwc.inspect_result.patrick-kidger_FasterNeuralDiffEq.train.common.count_parameters"], ["", "", "def", "main", "(", "name", ",", "train_dataloader", ",", "val_dataloader", ",", "test_dataloader", ",", "device", ",", "model", ",", "save", ",", "max_epochs", ",", "lr", ",", "weight_decay", ")", ":", "\n", "# makes pin_memory work and reset_peak_memory_stats not segfault", "\n", "    ", "with", "torch", ".", "cuda", ".", "device", "(", "device", ")", "if", "device", "!=", "'cpu'", "else", "contextlib", ".", "nullcontext", "(", ")", ":", "\n", "\n", "        ", "if", "device", "!=", "'cpu'", ":", "\n", "            ", "torch", ".", "cuda", ".", "reset_peak_memory_stats", "(", "device", ")", "\n", "baseline_memory", "=", "torch", ".", "cuda", ".", "memory_allocated", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "baseline_memory", "=", "None", "\n", "\n", "", "model", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "AdamW", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", ")", "\n", "\n", "history", ",", "start_time", ",", "timespan", "=", "_train_loop", "(", "train_dataloader", ",", "val_dataloader", ",", "model", ",", "optimizer", ",", "max_epochs", ",", "\n", "device", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "train_metrics", "=", "_evaluate_metrics", "(", "train_dataloader", ",", "model", ",", "device", ")", "\n", "val_metrics", "=", "_evaluate_metrics", "(", "val_dataloader", ",", "model", ",", "device", ")", "\n", "test_metrics", "=", "_evaluate_metrics", "(", "test_dataloader", ",", "model", ",", "device", ")", "\n", "\n", "if", "device", "!=", "'cpu'", ":", "\n", "            ", "memory_usage", "=", "torch", ".", "cuda", ".", "max_memory_allocated", "(", "device", ")", "-", "baseline_memory", "\n", "", "else", ":", "\n", "            ", "memory_usage", "=", "None", "\n", "\n", "", "", "result", "=", "common", ".", "AttrDict", "(", "memory_usage", "=", "memory_usage", ",", "\n", "baseline_memory", "=", "baseline_memory", ",", "\n", "start_time", "=", "start_time", ",", "\n", "timespan", "=", "timespan", ",", "\n", "model", "=", "model", ".", "to", "(", "'cpu'", ")", ",", "\n", "parameters", "=", "common", ".", "count_parameters", "(", "model", ")", ",", "\n", "history", "=", "history", ",", "\n", "train_dataloader", "=", "train_dataloader", ",", "\n", "val_dataloader", "=", "val_dataloader", ",", "\n", "test_dataloader", "=", "test_dataloader", ",", "\n", "train_metrics", "=", "train_metrics", ",", "\n", "val_metrics", "=", "val_metrics", ",", "\n", "test_metrics", "=", "test_metrics", ")", "\n", "if", "save", ":", "\n", "        ", "_save_results", "(", "name", ",", "result", ")", "\n", "", "return", "result", "\n", "", ""]]}