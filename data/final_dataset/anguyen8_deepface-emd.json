{"home.repos.pwc.inspect_result.anguyen8_deepface-emd.None.test_face.main": [[35, 135], ["print", "os.path.join", "print", "print", "data_loader.facedata_loader.get_face_dataloader", "face_models.facenet.InceptionResnetV1.eval", "nn.DataParallel", "face_models.facenet.InceptionResnetV1.cuda", "utils.extract_features.extract_embedding", "utils.extract_features.extract_embedding", "feature_bank_query.size", "tqdm.trange", "enumerate", "os.getcwd", "print", "face_models.resnet.resnet_face18", "torch.load", "torch.load", "OrderedDict", "torch.load.items", "face_models.facenet.InceptionResnetV1.load_state_dict", "len", "utils.emd.emd_similarity", "torch.argsort", "torch.argsort", "float", "float", "float", "print", "face_models.net_cos.sphere", "face_models.facenet.InceptionResnetV1.load_state_dict", "max", "utils.emd.emd_similarity", "utils.metrics.get_metrics_rank", "print", "exit", "torch.device", "torch.device", "torch.load", "torch.load", "face_models.facenet.InceptionResnetV1", "face_models.facenet.InceptionResnetV1.load_state_dict", "torch.argsort", "torch.argsort", "torch.argsort", "torch.argsort", "torch.cat", "torch.cat", "torch.cat.data.cpu", "torch.load", "torch.load", "max"], "function", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.data_loader.facedata_loader.get_face_dataloader", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.extract_features.extract_embedding", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.extract_features.extract_embedding", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.resnet_face18", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.emd.emd_similarity", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.emd.emd_similarity", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.metrics.get_metrics_rank"], ["def", "main", "(", ")", ":", "\n", "    ", "print", "(", "\"args = {}\"", ".", "format", "(", "args", ")", ")", "\n", "data_dir", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "args", ".", "data_folder", ")", "\n", "\n", "print", "(", "'dataset dir: {}'", ".", "format", "(", "data_dir", ")", ")", "\n", "if", "args", ".", "fm", "==", "'arcface'", ":", "\n", "        ", "size", "=", "(", "128", ",", "128", ")", "\n", "datasets", "=", "{", "'lfw'", ":", "[", "'lfw128'", ",", "'lfw128_masked'", ",", "'lfw128_glass'", ",", "'lfw128_crop'", "]", ",", "\n", "'lfw_1680'", ":", "[", "'lfw128_1680'", "]", "}", "\n", "", "elif", "args", ".", "fm", "==", "'cosface'", ":", "\n", "        ", "size", "=", "(", "112", ",", "96", ")", "\n", "datasets", "=", "{", "'lfw'", ":", "[", "'lfw'", ",", "'lfw96_mask'", ",", "'lfw96_glass'", ",", "'lfw96_crop'", "]", "\n", "}", "\n", "", "elif", "args", ".", "fm", "==", "'facenet'", ":", "\n", "        ", "size", "=", "(", "160", ",", "160", ")", "\n", "datasets", "=", "{", "'lfw'", ":", "[", "'lfw128'", ",", "'lfw128_masked'", ",", "'lfw128_glass'", ",", "'lfw128_crop'", "]", "}", "\n", "", "else", ":", "\n", "        ", "print", "(", "'No face model found'", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "\n", "", "if", "args", ".", "mask", ":", "\n", "        ", "query_data", "=", "datasets", "[", "args", ".", "d", "]", "[", "1", "]", "\n", "", "elif", "args", ".", "crop", ":", "\n", "        ", "query_data", "=", "datasets", "[", "args", ".", "d", "]", "[", "3", "]", "\n", "", "elif", "args", ".", "sunglass", ":", "\n", "        ", "query_data", "=", "datasets", "[", "args", ".", "d", "]", "[", "2", "]", "\n", "", "else", ":", "\n", "        ", "query_data", "=", "datasets", "[", "args", ".", "d", "]", "[", "0", "]", "\n", "\n", "", "gallery_data", "=", "datasets", "[", "args", ".", "d", "]", "[", "0", "]", "\n", "print", "(", "'query data: {} - gallery: {}'", ".", "format", "(", "query_data", ",", "gallery_data", ")", ")", "\n", "_", ",", "data_loaders", "=", "get_face_dataloader", "(", "16", ",", "data_dir", "=", "data_dir", ",", "folder", "=", "args", ".", "data_folder", ",", "fm", "=", "args", ".", "fm", ",", "num_workers", "=", "64", ",", "level", "=", "args", ".", "l", ",", "size", "=", "size", "[", "0", "]", ")", "\n", "if", "args", ".", "fm", "==", "'arcface'", ":", "\n", "        ", "model_path", "=", "'pretrained/resnet18_110.pth'", "\n", "print", "(", "'model : {}'", ".", "format", "(", "model_path", ")", ")", "\n", "model", "=", "resnet_face18", "(", "False", ",", "use_reduce_pool", "=", "False", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "model_path", ",", "map_location", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", "\n", "\n", "from", "collections", "import", "OrderedDict", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove module.", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "", "elif", "args", ".", "fm", "==", "'cosface'", ":", "\n", "        ", "model_path", "=", "'pretrained/ACC99.28.pth'", "\n", "model", "=", "sphere", "(", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_path", ")", ")", "\n", "", "elif", "args", ".", "fm", "==", "'facenet'", ":", "\n", "        ", "model_path", "=", "'pretrained/20180402-114759-vggface2.pt'", "\n", "model", "=", "InceptionResnetV1", "(", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_path", ")", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "feature_bank_query", ",", "feature_bank_center_query", ",", "avgpool_bank_center_query", ",", "labels_query", ",", "_", "=", "extract_embedding", "(", "data_loaders", ",", "query_data", ",", "model", ",", "fm", "=", "args", ".", "fm", ",", "level", "=", "args", ".", "l", ")", "\n", "feature_bank_gallery", ",", "feature_bank_center_gallery", ",", "avgpool_bank_center_gallery", ",", "labels_gallery", ",", "_", "=", "extract_embedding", "(", "data_loaders", ",", "gallery_data", ",", "model", ",", "fm", "=", "args", ".", "fm", ",", "level", "=", "args", ".", "l", ")", "\n", "stages", "=", "[", "0", ",", "100", "]", "\n", "overall_r1", "=", "{", "k", ":", "0.0", "for", "k", "in", "stages", "}", "\n", "overall_rp", "=", "{", "k", ":", "0.0", "for", "k", "in", "stages", "}", "\n", "overall_mapr", "=", "{", "k", ":", "0.0", "for", "k", "in", "stages", "}", "\n", "\n", "N", ",", "C", ",", "_", "=", "feature_bank_query", ".", "size", "(", ")", "\n", "alpha", "=", "args", ".", "a", "\n", "for", "idx", "in", "trange", "(", "len", "(", "feature_bank_query", ")", ")", ":", "\n", "        ", "anchor_center", "=", "feature_bank_center_query", "[", "idx", "]", "\n", "approx_sim", ",", "_", ",", "_", ",", "_", "=", "emd_similarity", "(", "None", ",", "anchor_center", ",", "None", ",", "feature_bank_center_gallery", ",", "0", ")", "\n", "if", "query_data", "==", "gallery_data", ":", "\n", "            ", "approx_sim", "[", "idx", "]", "=", "-", "100", "\n", "", "approx_tops", "=", "torch", ".", "argsort", "(", "approx_sim", ",", "descending", "=", "True", ")", "\n", "if", "max", "(", "stages", ")", ">", "0", ":", "\n", "            ", "top_inds", "=", "approx_tops", "[", ":", "max", "(", "stages", ")", "]", "\n", "anchor", "=", "feature_bank_query", "[", "idx", "]", "\n", "feature_query", "=", "avgpool_bank_center_query", "[", "idx", "]", "\n", "feature_gallery", "=", "avgpool_bank_center_gallery", "[", "top_inds", "]", "\n", "sim_avg", ",", "_", ",", "_", ",", "_", "=", "emd_similarity", "(", "anchor", ",", "feature_query", ",", "feature_bank_gallery", "[", "top_inds", "]", ",", "feature_gallery", ",", "1", ",", "method", "=", "args", ".", "method", ")", "\n", "if", "alpha", "<", "0", ":", "\n", "                ", "rank_in_tops", "=", "torch", ".", "argsort", "(", "sim_avg", "+", "approx_sim", "[", "top_inds", "]", ",", "descending", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "rank_in_tops", "=", "torch", ".", "argsort", "(", "alpha", "*", "sim_avg", "+", "(", "1.0", "-", "alpha", ")", "*", "approx_sim", "[", "top_inds", "]", ",", "descending", "=", "True", ")", "\n", "\n", "", "", "for", "stage", "in", "stages", ":", "\n", "            ", "if", "stage", "==", "0", ":", "\n", "                ", "final_tops", "=", "approx_tops", "\n", "", "else", ":", "\n", "                ", "rank_in_tops_real", "=", "top_inds", "[", "rank_in_tops", "]", "[", ":", "stage", "]", "\n", "final_tops", "=", "torch", ".", "cat", "(", "[", "rank_in_tops_real", ",", "approx_tops", "[", "stage", ":", "]", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "r1", ",", "rp", ",", "mapr", "=", "get_metrics_rank", "(", "final_tops", ".", "data", ".", "cpu", "(", ")", ",", "labels_query", "[", "idx", "]", ",", "labels_gallery", ")", "\n", "overall_r1", "[", "stage", "]", "+=", "r1", "\n", "overall_rp", "[", "stage", "]", "+=", "rp", "\n", "overall_mapr", "[", "stage", "]", "+=", "mapr", "\n", "\n", "", "", "for", "i", ",", "stage", "in", "enumerate", "(", "stages", ")", ":", "\n", "        ", "overall_r1", "[", "stage", "]", "/=", "float", "(", "N", "/", "100", ")", "\n", "overall_rp", "[", "stage", "]", "/=", "float", "(", "N", "/", "100", ")", "\n", "overall_mapr", "[", "stage", "]", "/=", "float", "(", "N", "/", "100", ")", "\n", "print", "(", "'[stage %d] acc=%f, RP=%f, MAP@R=%f'", "%", "(", "i", "+", "1", ",", "overall_r1", "[", "stage", "]", ",", "overall_rp", "[", "stage", "]", ",", "overall_mapr", "[", "stage", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.None.visualize_faces.main": [[26, 106], ["face_models.resnet.resnet_face18", "torch.load", "torch.load", "torch.load", "OrderedDict", "torch.load.items", "face_models.resnet.resnet_face18.load_state_dict", "face_models.resnet.resnet_face18.eval", "face_models.resnet.resnet_face18.cuda", "utils.image.preprocessing().unsqueeze", "utils.image.preprocessing().unsqueeze", "face_models.resnet.resnet_face18.", "face_models.resnet.resnet_face18.", "torchvision.transforms.Compose", "PIL.Image.open().convert().resize", "PIL.Image.open().convert().resize", "out1[].squeeze().squeeze", "out2[].squeeze().squeeze", "torch.nn.functional.normalize.size", "torch.nn.functional.normalize.view", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize.view", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "utils.emd.emd_similarity", "print", "Image.new.save", "preprocessing().unsqueeze.cuda", "preprocessing().unsqueeze.cuda", "PIL.Image.new", "torch.interpolate().view", "torch.interpolate().view", "utils.heatmap.combine_img_heatmap", "utils.heatmap.combine_img_heatmap", "Image.new.paste", "Image.new.paste", "PIL.Image.new", "transforms.Compose.", "flow.sum", "range", "torch.stack", "torch.stack", "torch.stack", "torchvision.utils.make_grid", "PIL.Image.fromarray", "Image.new.paste", "Image.new.paste", "Image.new.paste", "utils.image.preprocessing", "utils.image.preprocessing", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "PIL.Image.open().convert", "PIL.Image.open().convert", "out1[].squeeze", "out2[].squeeze", "F.interpolate().view.view", "F.interpolate().view.view", "F.interpolate().view.view", "F.interpolate().view.view", "F.interpolate().view.cpu().detach().numpy", "F.interpolate().view.cpu().detach().numpy", "torch.argmax().item", "torch.argmax().item", "torch.argmax().item", "utils.heatmap.get_patch_location", "right_img_transform[].cuda", "torch.stack.append", "torchvision.utils.make_grid.permute().cpu().detach().numpy", "torchvision.utils.make_grid.astype", "torch.interpolate", "torch.interpolate", "flow.sum.min", "flow.sum.max", "flow.sum.min", "PIL.Image.open", "PIL.Image.open", "F.interpolate().view.cpu().detach", "F.interpolate().view.cpu().detach", "torch.argmax", "torch.argmax", "torch.argmax", "torchvision.utils.make_grid.permute().cpu().detach", "F.interpolate().view.cpu", "F.interpolate().view.cpu", "torchvision.utils.make_grid.permute().cpu", "torchvision.utils.make_grid.permute"], "function", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.resnet_face18", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.emd.emd_similarity", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.heatmap.combine_img_heatmap", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.heatmap.combine_img_heatmap", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.image.preprocessing", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.image.preprocessing", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.heatmap.get_patch_location"], ["def", "main", "(", ")", ":", "\n", "    ", "model_path", "=", "args", ".", "model_path", "\n", "size", "=", "(", "128", ",", "128", ")", "\n", "model", "=", "resnet_face18", "(", "False", ",", "use_reduce_pool", "=", "True", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "model_path", ")", "\n", "from", "collections", "import", "OrderedDict", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "# remove module.", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "model", ".", "eval", "(", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "embed_key", "=", "'embedding_44'", "\n", "avg_pool_key", "=", "'adpt_pooling_44'", "\n", "level", "=", "args", ".", "l", "\n", "method", "=", "args", ".", "method", "\n", "shape", "=", "[", "(", "0", ",", "0", ")", ",", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", "]", "\n", "img_path_1", "=", "args", ".", "in1", "\n", "img_path_2", "=", "args", ".", "in2", "\n", "img1", "=", "preprocessing", "(", "img_path_1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "img2", "=", "preprocessing", "(", "img_path_2", ")", ".", "unsqueeze", "(", "0", ")", "\n", "out1", "=", "model", "(", "img1", ".", "cuda", "(", ")", ")", "\n", "out2", "=", "model", "(", "img2", ".", "cuda", "(", ")", ")", "\n", "\n", "transformRaw", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "[", "size", "[", "0", "]", ",", "size", "[", "1", "]", "]", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "query_img", "=", "Image", ".", "open", "(", "img_path_1", ")", ".", "convert", "(", "'RGB'", ")", ".", "resize", "(", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ")", "\n", "right_img", "=", "Image", ".", "open", "(", "img_path_2", ")", ".", "convert", "(", "'RGB'", ")", ".", "resize", "(", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ")", "\n", "anchor", "=", "out1", "[", "embed_key", "]", "\n", "avgpool_bank_center_query", "=", "out1", "[", "avg_pool_key", "]", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "feature_bank_gallery", "=", "out2", "[", "embed_key", "]", "\n", "avgpool_bank_center_gallery", "=", "out2", "[", "avg_pool_key", "]", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "N", ",", "C", ",", "_", ",", "_", "=", "anchor", ".", "size", "(", ")", "\n", "anchor", "=", "anchor", ".", "view", "(", "N", ",", "C", ",", "-", "1", ")", "\n", "anchor", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "anchor", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "feature_bank_gallery", "=", "feature_bank_gallery", ".", "view", "(", "N", ",", "C", ",", "-", "1", ")", "\n", "feature_bank_gallery", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "feature_bank_gallery", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "\n", "_", ",", "flows", ",", "u", ",", "v", "=", "emd_similarity", "(", "anchor", "[", "0", "]", ",", "avgpool_bank_center_query", "[", "0", "]", ",", "feature_bank_gallery", ",", "avgpool_bank_center_gallery", ",", "1", ",", "method", "=", "method", ")", "\n", "if", "args", ".", "weight", ":", "\n", "        ", "image", "=", "Image", ".", "new", "(", "'RGB'", ",", "(", "2", "*", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ")", "\n", "u", ",", "v", "=", "u", ".", "view", "(", "level", ",", "level", ")", ",", "v", ".", "view", "(", "level", ",", "level", ")", "\n", "u", ",", "v", "=", "u", ".", "view", "(", "1", ",", "1", ",", "level", ",", "level", ")", ",", "v", ".", "view", "(", "1", ",", "1", ",", "level", ",", "level", ")", "\n", "u", "=", "F", ".", "interpolate", "(", "u", ",", "shape", "[", "1", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ".", "view", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", "\n", "v", "=", "F", ".", "interpolate", "(", "v", ",", "shape", "[", "1", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ".", "view", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", "\n", "q_img_heatmap", "=", "combine_img_heatmap", "(", "query_img", ",", "u", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "right_img_heatmap", "=", "combine_img_heatmap", "(", "right_img", ",", "v", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "image", ".", "paste", "(", "q_img_heatmap", ",", "(", "(", "0", ",", "0", ")", ")", ")", "\n", "image", ".", "paste", "(", "right_img_heatmap", ",", "(", "(", "1", "*", "size", "[", "0", "]", ",", "0", ")", ")", ")", "\n", "imgname", "=", "'results/heatmap/heatmap_face.jpg'", "\n", "", "else", ":", "\n", "        ", "image", "=", "Image", ".", "new", "(", "'RGB'", ",", "(", "3", "*", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ")", "\n", "right_img_transform", "=", "transformRaw", "(", "right_img", ")", "\n", "flow", "=", "flows", "[", "0", "]", "\n", "patch_list", "=", "[", "]", "\n", "weight", "=", "flow", ".", "sum", "(", "-", "1", ")", "\n", "nums", "=", "flow", ".", "shape", "[", "0", "]", "\n", "weight", "=", "(", "weight", "-", "weight", ".", "min", "(", ")", ")", "/", "(", "weight", ".", "max", "(", ")", "-", "weight", ".", "min", "(", ")", ")", "\n", "for", "index_grid", "in", "range", "(", "nums", ")", ":", "\n", "            ", "index_patch", "=", "torch", ".", "argmax", "(", "flow", "[", "index_grid", "]", ")", ".", "item", "(", ")", "\n", "row_location", ",", "col_location", ",", "_", ",", "_", "=", "get_patch_location", "(", "index_patch", ",", "size", "[", "0", "]", ",", "args", ".", "fm", ",", "level", "=", "level", ")", "\n", "patch", "=", "right_img_transform", "[", ":", ",", "row_location", "[", "0", "]", ":", "row_location", "[", "1", "]", ",", "col_location", "[", "0", "]", ":", "col_location", "[", "1", "]", "]", ".", "cuda", "(", ")", "\n", "patch", "=", "patch", "*", "weight", "[", "index_grid", "]", "\n", "patch_list", ".", "append", "(", "patch", ")", "\n", "\n", "", "patch_list", "=", "torch", ".", "stack", "(", "patch_list", ",", "dim", "=", "0", ")", "\n", "grids", "=", "torchvision", ".", "utils", ".", "make_grid", "(", "patch_list", ",", "nrow", "=", "level", ",", "padding", "=", "0", ")", "\n", "grids", "=", "grids", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "*", "255.0", "\n", "grid_img", "=", "Image", ".", "fromarray", "(", "grids", ".", "astype", "(", "'uint8'", ")", ")", "\n", "image", ".", "paste", "(", "query_img", ",", "(", "(", "0", ",", "0", ")", ")", ")", "\n", "image", ".", "paste", "(", "grid_img", ",", "(", "1", "*", "size", "[", "0", "]", ",", "0", ")", ")", "\n", "image", ".", "paste", "(", "right_img", ",", "(", "2", "*", "size", "[", "0", "]", ",", "0", ")", ")", "\n", "imgname", "=", "'results/flows/flow_face.jpg'", "\n", "\n", "\n", "", "print", "(", "'img: {}'", ".", "format", "(", "imgname", ")", ")", "\n", "image", ".", "save", "(", "imgname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.None.face_demo.find_query_img": [[32, 43], ["enumerate", "img_path.split"], "function", ["None"], ["def", "find_query_img", "(", "face_dataset", ",", "query_person", ")", ":", "\n", "# query_name = query.split('/')[-1].split('.')[0]", "\n", "    ", "img_query", "=", "None", "\n", "pos", "=", "-", "1", "\n", "for", "idx", ",", "img_path", "in", "enumerate", "(", "face_dataset", ".", "image_paths", ")", ":", "\n", "        ", "name", "=", "img_path", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "#img_path.split('/')[-1].split('.')[0]", "\n", "if", "query_person", "in", "name", ":", "\n", "            ", "img_query", "=", "img_path", "\n", "pos", "=", "idx", "\n", "break", "\n", "", "", "return", "img_query", ",", "pos", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.None.face_demo.main": [[45, 182], ["os.path.join", "data_loader.facedata_loader.get_face_dataloader", "face_models.net_cos.sphere.eval", "nn.DataParallel", "face_models.net_cos.sphere.cuda", "utils.image.preprocessing().unsqueeze", "face_models.net_cos.sphere.", "torchvision.transforms.Compose", "print", "PIL.Image.open().convert().resize", "utils.extract_features.extract_embedding", "torch.nn.functional.normalize.size", "out[].squeeze().squeeze", "torch.nn.functional.normalize.view", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "utils.emd.emd_similarity", "torch.argsort", "torch.argsort", "utils.emd.emd_similarity", "torch.argsort", "torch.argsort", "PIL.Image.new", "Image.new.paste", "Image.new.paste", "enumerate", "print", "Image.new.save", "os.getcwd", "[].split", "face_demo.find_query_img", "print", "exit", "face_models.resnet.resnet_face18", "torch.load", "torch.load", "OrderedDict", "torch.load.items", "face_models.net_cos.sphere.load_state_dict", "img_path_query.split", "preprocessing().unsqueeze.cuda", "rank_in_tops_real.data.cpu", "PIL.Image.open().convert().resize", "PIL.Image.open().convert().resize", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "transforms.Compose.", "utils.image.draw_grid_img", "Image.new.paste", "Image.new.paste", "Image.new.paste", "print", "exit", "face_models.net_cos.sphere", "face_models.net_cos.sphere.load_state_dict", "print", "exit", "utils.image.preprocessing", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "PIL.Image.open().convert", "out[].squeeze", "topPersonsStage1[].split", "topPersons[].split", "ImageDraw.Draw.rectangle", "ImageDraw.Draw.rectangle", "ImageDraw.Draw.rectangle", "ImageDraw.Draw.rectangle", "torch.load", "torch.load", "top_inds.cpu().numpy", "final_tops.numpy", "int", "PIL.Image.open().convert", "PIL.Image.open().convert", "args.query.split", "PIL.Image.open", "top_inds.cpu", "PIL.Image.open", "PIL.Image.open"], "function", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.data_loader.facedata_loader.get_face_dataloader", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.extract_features.extract_embedding", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.emd.emd_similarity", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.emd.emd_similarity", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.None.face_demo.find_query_img", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.resnet_face18", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.image.draw_grid_img", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.image.preprocessing"], ["", "def", "main", "(", ")", ":", "\n", "    ", "model_path", "=", "args", ".", "model_path", "\n", "data_dir", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "args", ".", "data_folder", ")", "\n", "if", "args", ".", "fm", "==", "'arcface'", ":", "\n", "        ", "size", "=", "(", "128", ",", "128", ")", "\n", "datasets", "=", "{", "'lfw'", ":", "[", "'lfw128'", ",", "'lfw128_masked'", ",", "'lfw128_glass'", ",", "'lfw128_crop'", "]", "}", "\n", "", "elif", "args", ".", "fm", "==", "'cosface'", ":", "\n", "        ", "size", "=", "(", "96", ",", "112", ")", "\n", "datasets", "=", "{", "'lfw'", ":", "[", "'lfw'", ",", "'lfw96_mask'", ",", "'lfw96_glass'", ",", "'lfw96_crop'", "]", "}", "\n", "", "else", ":", "\n", "        ", "print", "(", "'No face model found'", ")", "\n", "exit", "(", "0", ")", "\n", "", "isNormal", "=", "args", ".", "mask", "!=", "1", "and", "args", ".", "sunglass", "!=", "1", "and", "args", ".", "crop", "!=", "1", "\n", "query_person", "=", "args", ".", "query_person", "\n", "query_name", "=", "args", ".", "query", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "if", "args", ".", "mask", ":", "\n", "        ", "query_data", "=", "datasets", "[", "args", ".", "gallery", "]", "[", "1", "]", "# 'lfw128_masked' #'cfp128_frontal_masked' 'agedb128_masked'", "\n", "imgname", "=", "'results/demo/{}_{}_mask.jpg'", ".", "format", "(", "query_name", ",", "args", ".", "fm", ")", "\n", "", "elif", "args", ".", "crop", ":", "\n", "        ", "query_data", "=", "datasets", "[", "args", ".", "gallery", "]", "[", "3", "]", "\n", "imgname", "=", "'results/demo/{}_{}_crop.jpg'", ".", "format", "(", "query_name", ",", "args", ".", "fm", ")", "\n", "", "elif", "args", ".", "sunglass", ":", "\n", "        ", "query_data", "=", "datasets", "[", "args", ".", "gallery", "]", "[", "2", "]", "\n", "imgname", "=", "'results/demo/{}_{}_sunglass.jpg'", ".", "format", "(", "query_name", ",", "args", ".", "fm", ")", "\n", "", "else", ":", "\n", "        ", "query_data", "=", "datasets", "[", "args", ".", "gallery", "]", "[", "0", "]", "#'cfp128_profile' #'agedb128' #", "\n", "imgname", "=", "'results/demo/{}_{}_normal.jpg'", ".", "format", "(", "query_name", ",", "args", ".", "fm", ")", "\n", "\n", "", "face_datasets", ",", "data_loaders", "=", "get_face_dataloader", "(", "16", ",", "data_dir", "=", "data_dir", ",", "folder", "=", "args", ".", "data_folder", ",", "fm", "=", "args", ".", "fm", ",", "num_workers", "=", "64", ",", "level", "=", "args", ".", "l", ",", "size", "=", "size", "[", "0", "]", ")", "\n", "if", "isNormal", "==", "False", ":", "\n", "        ", "img_path_query", ",", "idx", "=", "find_query_img", "(", "face_datasets", "[", "query_data", "]", ",", "query_person", ")", "#args.query", "\n", "", "else", ":", "\n", "        ", "img_path_query", "=", "args", ".", "query", "\n", "\n", "", "if", "img_path_query", "==", "None", ":", "\n", "        ", "print", "(", "'No found query image'", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "", "gallery", "=", "datasets", "[", "args", ".", "gallery", "]", "[", "0", "]", "\n", "if", "args", ".", "fm", "==", "'arcface'", ":", "\n", "        ", "embed_key", "=", "'embedding_44'", "\n", "avg_pool_key", "=", "'adpt_pooling_44'", "\n", "model", "=", "resnet_face18", "(", "False", ",", "use_reduce_pool", "=", "True", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "model_path", ")", "\n", "from", "collections", "import", "OrderedDict", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove module.", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "", "elif", "args", ".", "fm", "==", "'cosface'", ":", "\n", "        ", "embed_key", "=", "'embedding'", "\n", "avg_pool_key", "=", "'adpt_pooling'", "\n", "model_path", "=", "'pretrained/ACC99.28.pth'", "\n", "model", "=", "sphere", "(", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_path", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'No found face model!!!'", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "fea_key", "=", "'fea'", "\n", "topK", "=", "100", "\n", "tops", "=", "5", "\n", "alpha", "=", "0.7", "\n", "if", "isNormal", ":", "\n", "        ", "alpha", "=", "0.3", "\n", "", "level", "=", "args", ".", "l", "\n", "method", "=", "args", ".", "method", "\n", "shape", "=", "[", "(", "0", ",", "0", ")", ",", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", "]", "\n", "\n", "query_person", "=", "img_path_query", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "\n", "img", "=", "preprocessing", "(", "img_path_query", ",", "size", ",", "fm", "=", "args", ".", "fm", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "out", "=", "model", "(", "img", ".", "cuda", "(", ")", ")", "\n", "\n", "transformRaw", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "[", "size", "[", "0", "]", ",", "size", "[", "1", "]", "]", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "print", "(", "'query img: {}'", ".", "format", "(", "img_path_query", ")", ")", "\n", "\n", "face_dataset_gallery", "=", "face_datasets", "[", "gallery", "]", "\n", "query_img", "=", "Image", ".", "open", "(", "img_path_query", ")", ".", "convert", "(", "'RGB'", ")", ".", "resize", "(", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ")", "\n", "feature_bank_gallery", ",", "feature_bank_center_gallery", ",", "avgpool_bank_center_gallery", ",", "_", ",", "_", "=", "extract_embedding", "(", "data_loaders", ",", "gallery", ",", "model", ",", "fm", "=", "args", ".", "fm", ",", "level", "=", "args", ".", "l", ")", "\n", "anchor", "=", "out", "[", "embed_key", "]", "\n", "N", ",", "C", ",", "_", ",", "_", "=", "anchor", ".", "size", "(", ")", "\n", "anchor_center", "=", "out", "[", "fea_key", "]", "\n", "avgpool_bank_center_query", "=", "out", "[", "avg_pool_key", "]", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "anchor", "=", "anchor", ".", "view", "(", "N", ",", "C", ",", "-", "1", ")", "\n", "anchor", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "anchor", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "avgpool_bank_center_query", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "avgpool_bank_center_query", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "anchor_center", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "anchor_center", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "approx_sim", ",", "_", ",", "_", ",", "_", "=", "emd_similarity", "(", "None", ",", "anchor_center", "[", "0", "]", ",", "None", ",", "feature_bank_center_gallery", ",", "0", ")", "\n", "if", "isNormal", ":", "\n", "        ", "approx_sim", "[", "idx", "]", "=", "-", "100", "\n", "\n", "", "approx_tops", "=", "torch", ".", "argsort", "(", "approx_sim", ",", "descending", "=", "True", ")", "\n", "top_inds", "=", "approx_tops", "[", ":", "topK", "]", "\n", "sim_avg", ",", "flows", ",", "_", ",", "_", "=", "emd_similarity", "(", "anchor", "[", "0", "]", ",", "avgpool_bank_center_query", "[", "0", "]", ",", "feature_bank_gallery", "[", "top_inds", "]", ",", "avgpool_bank_center_gallery", "[", "top_inds", "]", ",", "1", ",", "method", "=", "method", ")", "\n", "rank_in_tops", "=", "torch", ".", "argsort", "(", "alpha", "*", "sim_avg", "+", "(", "1.0", "-", "alpha", ")", "*", "approx_sim", "[", "top_inds", "]", ",", "descending", "=", "True", ")", "\n", "# rank_in_tops = torch.argsort(sim_avg + approx_sim[top_inds], descending=True)", "\n", "rank_in_tops_real", "=", "top_inds", "[", "rank_in_tops", "]", "[", ":", "topK", "]", "\n", "final_tops", "=", "rank_in_tops_real", ".", "data", ".", "cpu", "(", ")", "[", ":", "tops", "]", "#torch.cat([rank_in_tops_real, approx_tops[topK:]], dim=0).data.cpu()[:tops]", "\n", "topFlows", "=", "flows", "[", "rank_in_tops", "]", "[", ":", "tops", "]", "#flows[final_tops][:tops]", "\n", "topPersonsStage1", "=", "[", "face_dataset_gallery", ".", "image_paths", "[", "idx", "]", "for", "idx", "in", "top_inds", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", "tops", "]", "]", "\n", "topPersons", "=", "[", "face_dataset_gallery", ".", "image_paths", "[", "idx", "]", "for", "idx", "in", "final_tops", ".", "numpy", "(", ")", "[", ":", "tops", "]", "]", "\n", "img_rerank", "=", "Image", ".", "new", "(", "'RGB'", ",", "(", "3", "*", "size", "[", "0", "]", ",", "int", "(", "tops", "*", "1", "+", "1", ")", "*", "size", "[", "1", "]", ")", ")", "\n", "img_rerank", ".", "paste", "(", "query_img", ",", "(", "0", "*", "size", "[", "0", "]", ",", "0", "*", "size", "[", "1", "]", ")", ")", "\n", "img_rerank", ".", "paste", "(", "query_img", ",", "(", "1", "*", "size", "[", "0", "]", ",", "0", "*", "size", "[", "1", "]", ")", ")", "\n", "for", "j", ",", "flow", "in", "enumerate", "(", "topFlows", ")", ":", "\n", "        ", "right_img", "=", "Image", ".", "open", "(", "topPersons", "[", "j", "]", ")", ".", "convert", "(", "'RGB'", ")", ".", "resize", "(", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ")", "\n", "stage1Img", "=", "Image", ".", "open", "(", "topPersonsStage1", "[", "j", "]", ")", ".", "convert", "(", "'RGB'", ")", ".", "resize", "(", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ")", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "right_img", ")", "\n", "draw_stage1", "=", "ImageDraw", ".", "Draw", "(", "stage1Img", ")", "\n", "right_img_transform", "=", "transformRaw", "(", "right_img", ")", "\n", "stage1Person", "=", "topPersonsStage1", "[", "j", "]", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "\n", "right_person", "=", "topPersons", "[", "j", "]", ".", "split", "(", "'/'", ")", "[", "-", "2", "]", "\n", "if", "query_person", "==", "stage1Person", ":", "\n", "            ", "draw_stage1", ".", "rectangle", "(", "shape", ",", "width", "=", "5", ",", "outline", "=", "\"green\"", ")", "\n", "", "else", ":", "\n", "            ", "draw_stage1", ".", "rectangle", "(", "shape", ",", "width", "=", "5", ",", "outline", "=", "\"red\"", ")", "\n", "\n", "", "if", "query_person", "==", "right_person", ":", "\n", "            ", "draw", ".", "rectangle", "(", "shape", ",", "width", "=", "5", ",", "outline", "=", "\"green\"", ")", "\n", "", "else", ":", "\n", "            ", "draw", ".", "rectangle", "(", "shape", ",", "width", "=", "5", ",", "outline", "=", "\"red\"", ")", "\n", "\n", "", "grid_img", "=", "draw_grid_img", "(", "flow", ",", "right_img_transform", ",", "size", ",", "fm", "=", "args", ".", "fm", ",", "level", "=", "level", ")", "\n", "img_rerank", ".", "paste", "(", "stage1Img", ",", "(", "0", "*", "size", "[", "0", "]", ",", "(", "j", "+", "1", ")", "*", "size", "[", "1", "]", ")", ")", "\n", "img_rerank", ".", "paste", "(", "grid_img", ",", "(", "1", "*", "size", "[", "0", "]", ",", "(", "j", "+", "1", ")", "*", "size", "[", "1", "]", ")", ")", "\n", "img_rerank", ".", "paste", "(", "right_img", ",", "(", "2", "*", "size", "[", "0", "]", ",", "(", "j", "+", "1", ")", "*", "size", "[", "1", "]", ")", ")", "\n", "\n", "", "print", "(", "'img: {}'", ".", "format", "(", "imgname", ")", ")", "\n", "img_rerank", ".", "save", "(", "imgname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.metrics.get_metrics_rank": [[3, 28], ["torch.sum().item", "equality.float.float", "torch.cumsum", "rp.item.item", "torch.mean().item", "torch.sum().float", "float", "torch.arange", "torch.sum", "torch.mean", "torch.sum"], "function", ["None"], ["def", "get_metrics_rank", "(", "tops", ",", "query_label", ",", "gallery_label", ")", ":", "\n", "\n", "# tops = torch.argsort(sim, descending=True)", "\n", "    ", "top1", "=", "tops", "[", "0", "]", "\n", "r1", "=", "0.0", "\n", "if", "query_label", "==", "gallery_label", "[", "top1", "]", ":", "\n", "        ", "r1", "=", "1.0", "\n", "\n", "", "num_pos", "=", "torch", ".", "sum", "(", "gallery_label", "==", "query_label", ")", ".", "item", "(", ")", "\n", "\n", "if", "num_pos", ">", "tops", ".", "shape", "[", "0", "]", ":", "\n", "        ", "num_pos", "=", "tops", ".", "shape", "[", "0", "]", "\n", "\n", "", "rp", "=", "torch", ".", "sum", "(", "gallery_label", "[", "tops", "[", "0", ":", "num_pos", "]", "]", "==", "query_label", ")", ".", "float", "(", ")", "/", "float", "(", "num_pos", ")", "\n", "\n", "equality", "=", "gallery_label", "[", "tops", "[", "0", ":", "num_pos", "]", "]", "==", "query_label", "\n", "equality", "=", "equality", ".", "float", "(", ")", "\n", "cumulative_correct", "=", "torch", ".", "cumsum", "(", "equality", ",", "dim", "=", "0", ")", "\n", "k_idx", "=", "torch", ".", "arange", "(", "num_pos", ")", "+", "1", "\n", "precision_at_ks", "=", "(", "cumulative_correct", "*", "equality", ")", "/", "k_idx", "\n", "\n", "rp", "=", "rp", ".", "item", "(", ")", "\n", "mapr", "=", "torch", ".", "mean", "(", "precision_at_ks", ")", ".", "item", "(", ")", "\n", "\n", "return", "r1", ",", "rp", ",", "mapr", "", "", ""]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.emd.Sinkhorn": [[4, 17], ["torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "range", "torch.matmul", "torch.matmul", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "err.item", "torch.ones_like.unsqueeze", "torch.ones_like.unsqueeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.ones_like.unsqueeze", "K.permute().contiguous", "torch.ones_like.unsqueeze", "K.permute"], "function", ["None"], ["def", "Sinkhorn", "(", "K", ",", "u", ",", "v", ")", ":", "\n", "    ", "r", "=", "torch", ".", "ones_like", "(", "u", ")", "\n", "c", "=", "torch", ".", "ones_like", "(", "v", ")", "\n", "thresh", "=", "1e-1", "\n", "for", "_", "in", "range", "(", "100", ")", ":", "\n", "        ", "r0", "=", "r", "\n", "r", "=", "u", "/", "torch", ".", "matmul", "(", "K", ",", "c", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "c", "=", "v", "/", "torch", ".", "matmul", "(", "K", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ".", "contiguous", "(", ")", ",", "r", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "err", "=", "(", "r", "-", "r0", ")", ".", "abs", "(", ")", ".", "mean", "(", ")", "\n", "if", "err", ".", "item", "(", ")", "<", "thresh", ":", "\n", "            ", "break", "\n", "", "", "T", "=", "torch", ".", "matmul", "(", "r", ".", "unsqueeze", "(", "-", "1", ")", ",", "c", ".", "unsqueeze", "(", "-", "2", ")", ")", "*", "K", "\n", "return", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.emd.emd_similarity": [[18, 61], ["torch.einsum", "torch.einsum", "fb.size", "torch.einsum().contiguous().view", "torch.einsum().contiguous().view", "torch.exp", "torch.exp", "emd.Sinkhorn", "torch.sum", "torch.sum", "torch.nan_to_num", "torch.nan_to_num", "torch.zeros().fill_", "torch.zeros().fill_", "torch.zeros().fill_", "torch.zeros().fill_", "torch.einsum().contiguous", "torch.einsum().contiguous", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.relu().view", "torch.relu().view", "torch.einsum", "torch.einsum", "torch.sum.sum", "torch.sum.sum", "torch.relu().view", "torch.relu().view", "print", "exit", "torch.relu", "F.relu().view.sum", "torch.relu", "F.relu().view.sum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.relu", "torch.relu", "F.relu().view.sum", "F.relu().view.sum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum"], "function", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.emd.Sinkhorn"], ["", "def", "emd_similarity", "(", "anchor", ",", "anchor_center", ",", "fb", ",", "fb_center", ",", "stage", ",", "method", "=", "''", ")", ":", "\n", "    ", "flows", "=", "None", "\n", "u", "=", "v", "=", "None", "\n", "if", "stage", "==", "0", ":", "# stage 1: Cosine similarity", "\n", "        ", "sim", "=", "torch", ".", "einsum", "(", "'c,nc->n'", ",", "anchor_center", ",", "fb_center", ")", "\n", "", "else", ":", "# stage 2: re-ranking with EMD", "\n", "        ", "N", ",", "_", ",", "R", "=", "fb", ".", "size", "(", ")", "\n", "\n", "sim", "=", "torch", ".", "einsum", "(", "'cm,ncs->nsm'", ",", "anchor", ",", "fb", ")", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "R", ",", "R", ")", "\n", "dis", "=", "1.0", "-", "sim", "\n", "K", "=", "torch", ".", "exp", "(", "-", "dis", "/", "0.05", ")", "\n", "\n", "if", "method", "==", "'uniform'", ":", "\n", "            ", "u", "=", "torch", ".", "zeros", "(", "N", ",", "R", ",", "dtype", "=", "sim", ".", "dtype", ",", "device", "=", "sim", ".", "device", ")", ".", "fill_", "(", "1.", "/", "R", ")", "\n", "v", "=", "torch", ".", "zeros", "(", "N", ",", "R", ",", "dtype", "=", "sim", ".", "dtype", ",", "device", "=", "sim", ".", "device", ")", ".", "fill_", "(", "1.", "/", "R", ")", "\n", "", "elif", "method", "==", "'sc'", ":", "\n", "            ", "u", "=", "torch", ".", "sum", "(", "dis", ",", "2", ")", "\n", "u", "=", "u", "/", "(", "u", ".", "sum", "(", "dim", "=", "1", ",", "keepdims", "=", "True", ")", "+", "1e-7", ")", "\n", "v", "=", "torch", ".", "sum", "(", "dis", ",", "1", ")", "\n", "v", "=", "v", "/", "(", "v", ".", "sum", "(", "dim", "=", "1", ",", "keepdims", "=", "True", ")", "+", "1e-7", ")", "\n", "", "elif", "method", "==", "'apc'", ":", "\n", "            ", "att", "=", "F", ".", "relu", "(", "torch", ".", "einsum", "(", "\"c,ncr->nr\"", ",", "anchor_center", ",", "fb", ")", ")", ".", "view", "(", "N", ",", "R", ")", "\n", "u", "=", "att", "/", "(", "att", ".", "sum", "(", "dim", "=", "1", ",", "keepdims", "=", "True", ")", "+", "1e-7", ")", "\n", "\n", "att", "=", "F", ".", "relu", "(", "torch", ".", "einsum", "(", "\"cr,nc->nr\"", ",", "anchor", ",", "fb_center", ")", ")", ".", "view", "(", "N", ",", "R", ")", "\n", "v", "=", "att", "/", "(", "att", ".", "sum", "(", "dim", "=", "1", ",", "keepdims", "=", "True", ")", "+", "1e-7", ")", "\n", "", "elif", "method", "==", "'uew'", ":", "\n", "            ", "att1", "=", "F", ".", "relu", "(", "torch", ".", "einsum", "(", "\"c,ncr->nr\"", ",", "anchor_center", ",", "fb", ")", ")", ".", "view", "(", "N", ",", "R", ")", "\n", "att2", "=", "F", ".", "relu", "(", "torch", ".", "einsum", "(", "\"cr,nc->nr\"", ",", "anchor", ",", "fb_center", ")", ")", ".", "view", "(", "N", ",", "R", ")", "\n", "s", "=", "att1", ".", "sum", "(", "dim", "=", "1", ",", "keepdims", "=", "True", ")", "+", "att2", ".", "sum", "(", "dim", "=", "1", ",", "keepdims", "=", "True", ")", "+", "1e-7", "\n", "u", "=", "att1", "/", "s", "\n", "v", "=", "att2", "/", "s", "\n", "", "else", ":", "\n", "            ", "print", "(", "'No found method.'", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "\n", "", "T", "=", "Sinkhorn", "(", "K", ",", "u", ",", "v", ")", "\n", "sim", "=", "torch", ".", "sum", "(", "T", "*", "sim", ",", "dim", "=", "(", "1", ",", "2", ")", ")", "\n", "sim", "=", "torch", ".", "nan_to_num", "(", "sim", ")", "\n", "flows", "=", "T", "\n", "\n", "", "return", "sim", ",", "flows", ",", "u", ",", "v", "\n", "", ""]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.extract_features.extract_embedding": [[4, 53], ["model.eval", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.no_grad", "tqdm.tqdm", "enumerate", "torch.cat", "labels.squeeze.squeeze", "torch.cat", "feature_bank.view.size", "feature_bank.view.view", "torch.cat", "torch.cat().squeeze().squeeze", "model", "torch.cat().squeeze().squeeze.append", "feature_bank.view.append", "torch.cat.append", "labels.squeeze.append", "len", "torch.cat", "input_img.cuda", "torch.cat().squeeze", "torch.cat"], "function", ["None"], ["def", "extract_embedding", "(", "data_loaders", ",", "dataset", ",", "model", ",", "fm", "=", "'arcface'", ",", "level", "=", "4", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "dataloader", "=", "data_loaders", "[", "dataset", "]", "\n", "labels", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "feature_bank", "=", "[", "]", "\n", "feature_bank_center", "=", "[", "]", "\n", "avgpool_bank_center", "=", "[", "]", "\n", "weights", "=", "[", "]", "\n", "final_iter", "=", "tqdm", "(", "dataloader", ",", "desc", "=", "'Embedding Data...'", ")", "\n", "for", "idx", ",", "inp", "in", "enumerate", "(", "final_iter", ")", ":", "\n", "            ", "input_img", ",", "target", "=", "inp", "[", "0", "]", ",", "inp", "[", "1", "]", "\n", "out", "=", "model", "(", "input_img", ".", "cuda", "(", ")", ")", "\n", "fea", "=", "out", "[", "'fea'", "]", "\n", "if", "fm", "==", "'arcface'", ":", "\n", "                ", "if", "level", "==", "4", ":", "\n", "                    ", "aux_f", "=", "out", "[", "'embedding_44'", "]", "\n", "avg_pool", "=", "out", "[", "'adpt_pooling_44'", "]", "\n", "", "elif", "level", "==", "8", ":", "\n", "                    ", "aux_f", "=", "out", "[", "'embedding_88'", "]", "\n", "avg_pool", "=", "out", "[", "'adpt_pooling_88'", "]", "\n", "", "else", ":", "\n", "                    ", "aux_f", "=", "out", "[", "'embedding_16'", "]", "\n", "avg_pool", "=", "out", "[", "'adpt_pooling_16'", "]", "\n", "", "", "elif", "fm", "==", "'sphereface'", "or", "fm", "==", "'cosface'", "or", "fm", "==", "'facenet'", ":", "\n", "                ", "aux_f", "=", "out", "[", "'embedding'", "]", "\n", "avg_pool", "=", "out", "[", "'adpt_pooling'", "]", "\n", "", "no_avg_feat", "=", "aux_f", "\n", "\n", "avgpool_bank_center", ".", "append", "(", "avg_pool", ".", "data", ")", "\n", "feature_bank", ".", "append", "(", "no_avg_feat", ".", "data", ")", "\n", "feature_bank_center", ".", "append", "(", "fea", ".", "data", ")", "\n", "labels", ".", "append", "(", "target", ")", "\n", "", "if", "len", "(", "weights", ")", ">", "0", ":", "\n", "            ", "weights", "=", "torch", ".", "cat", "(", "weights", ",", "dim", "=", "0", ")", "\n", "\n", "", "labels", "=", "torch", ".", "cat", "(", "labels", ",", "dim", "=", "0", ")", "\n", "labels", "=", "labels", ".", "squeeze", "(", "-", "1", ")", "\n", "feature_bank", "=", "torch", ".", "cat", "(", "feature_bank", ",", "dim", "=", "0", ")", "\n", "N", ",", "C", ",", "_", ",", "_", "=", "feature_bank", ".", "size", "(", ")", "\n", "feature_bank", "=", "feature_bank", ".", "view", "(", "N", ",", "C", ",", "-", "1", ")", "\n", "feature_bank_center", "=", "torch", ".", "cat", "(", "feature_bank_center", ",", "dim", "=", "0", ")", "\n", "avgpool_bank_center", "=", "torch", ".", "cat", "(", "avgpool_bank_center", ",", "dim", "=", "0", ")", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "", "feature_bank", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "feature_bank", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "feature_bank_center", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "feature_bank_center", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "avgpool_bank_center", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "avgpool_bank_center", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "\n", "return", "feature_bank", ",", "feature_bank_center", ",", "avgpool_bank_center", ",", "labels", ",", "weights", "", "", ""]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.heatmap.get_patch_location": [[5, 20], ["int", "int", "int", "int", "int", "print", "exit"], "function", ["None"], ["def", "get_patch_location", "(", "index", ",", "sc_max", ",", "face_model", ",", "level", "=", "4", ")", ":", "\n", "    ", "patch_size", "=", "16", "\n", "if", "face_model", "==", "'arcface'", ":", "\n", "        ", "patch_size", "=", "int", "(", "sc_max", "/", "level", ")", "\n", "row", "=", "int", "(", "index", "/", "level", ")", "\n", "col", "=", "int", "(", "index", "%", "level", ")", "\n", "", "elif", "face_model", "==", "'cosface'", ":", "\n", "        ", "row", "=", "int", "(", "index", "/", "7", ")", "\n", "col", "=", "int", "(", "index", "%", "6", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'No face model found!!'", ")", "\n", "exit", "(", "0", ")", "\n", "", "row_location", "=", "(", "row", "*", "patch_size", ",", "(", "row", "+", "1", ")", "*", "patch_size", ")", "\n", "col_location", "=", "(", "col", "*", "patch_size", ",", "(", "col", "+", "1", ")", "*", "patch_size", ")", "\n", "return", "row_location", ",", "col_location", ",", "row", ",", "col", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.heatmap.combine_img_heatmap": [[21, 33], ["matplotlib.get_cmap", "numpy.max", "plt.get_cmap.", "PIL.Image.fromarray().convert", "img.convert.convert", "PIL.Image.blend", "numpy.min", "numpy.max", "PIL.Image.fromarray", "cmap.astype"], "function", ["None"], ["", "def", "combine_img_heatmap", "(", "img", ",", "heatmap", ")", ":", "\n", "    ", "cmap", "=", "plt", ".", "get_cmap", "(", "'jet'", ")", "# colormap for the heatmap", "\n", "heatmap", "=", "heatmap", "-", "np", ".", "min", "(", "heatmap", ")", "\n", "heatmap", "/=", "np", ".", "max", "(", "heatmap", ")", "\n", "heatmap", "=", "cmap", "(", "heatmap", ")", "\n", "if", "np", ".", "max", "(", "heatmap", ")", "<", "255.", ":", "\n", "        ", "heatmap", "*=", "255", "\n", "\n", "", "fg", "=", "Image", ".", "fromarray", "(", "heatmap", ".", "astype", "(", "'uint8'", ")", ")", ".", "convert", "(", "'RGBA'", ")", "\n", "img", "=", "img", ".", "convert", "(", "'RGBA'", ")", "\n", "outIm", "=", "Image", ".", "blend", "(", "img", ",", "fg", ",", "alpha", "=", "0.5", ")", "\n", "return", "outIm", "", "", ""]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.image.preprocessing": [[9, 30], ["torch.from_numpy().float", "cv2.imread", "cv2.resize", "transform.reshape", "transform.transpose", "transform.astype", "torchvision.transforms.Compose", "PIL.Image.open().convert", "transforms.Compose.", "print", "exit", "torch.from_numpy", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "PIL.Image.open"], "function", ["None"], ["def", "preprocessing", "(", "img_path", ",", "shape", ",", "fm", "=", "'arcface'", ")", ":", "\n", "    ", "if", "fm", "==", "'arcface'", ":", "\n", "        ", "img", "=", "cv2", ".", "imread", "(", "img_path", ",", "0", ")", "\n", "img", "=", "cv2", ".", "resize", "(", "img", ",", "shape", ")", "\n", "img", "=", "img", ".", "reshape", "(", "(", "128", ",", "128", ",", "1", ")", ")", "\n", "img", "=", "img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ",", "copy", "=", "False", ")", "\n", "img", "-=", "127.5", "\n", "img", "/=", "127.5", "\n", "", "elif", "fm", "==", "'cosface'", ":", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "# range [0, 255] -> [0.0,1.0]", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "std", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "# range [0.0, 1.0] -> [-1.0,1.0]", "\n", "]", ")", "\n", "img", "=", "Image", ".", "open", "(", "img_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "img", "=", "transform", "(", "img", ")", "\n", "return", "img", "\n", "", "else", ":", "\n", "        ", "print", "(", "'No face model found!!'", ")", "\n", "exit", "(", "0", ")", "\n", "", "return", "torch", ".", "from_numpy", "(", "img", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.image.draw_grid_img": [[31, 52], ["flow.sum", "range", "torch.stack", "PIL.Image.fromarray", "flow.sum.max", "torch.argmax().item", "utils.heatmap.get_patch_location", "image_transform[].cuda", "torch.stack.append", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid.permute().cpu().detach().numpy", "torchvision.utils.make_grid.astype", "torch.argmax", "torchvision.utils.make_grid.permute().cpu().detach", "torchvision.utils.make_grid.permute().cpu", "torchvision.utils.make_grid.permute"], "function", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.utils.heatmap.get_patch_location"], ["", "def", "draw_grid_img", "(", "flow", ",", "image_transform", ",", "size", ",", "fm", "=", "'arcface'", ",", "level", "=", "4", ")", ":", "\n", "    ", "patch_list", "=", "[", "]", "\n", "weight", "=", "flow", ".", "sum", "(", "-", "1", ")", "\n", "nums", "=", "flow", ".", "shape", "[", "0", "]", "\n", "# weight=(weight-weight.min())/(weight.max()-weight.min())", "\n", "weight", "=", "weight", "/", "weight", ".", "max", "(", ")", "\n", "for", "index_grid", "in", "range", "(", "nums", ")", ":", "\n", "        ", "index_patch", "=", "torch", ".", "argmax", "(", "flow", "[", "index_grid", "]", ")", ".", "item", "(", ")", "\n", "row_location", ",", "col_location", ",", "_", ",", "_", "=", "get_patch_location", "(", "index_patch", ",", "size", "[", "0", "]", ",", "fm", ",", "level", "=", "level", ")", "\n", "patch", "=", "image_transform", "[", ":", ",", "row_location", "[", "0", "]", ":", "row_location", "[", "1", "]", ",", "col_location", "[", "0", "]", ":", "col_location", "[", "1", "]", "]", ".", "cuda", "(", ")", "\n", "patch", "=", "patch", "*", "weight", "[", "index_grid", "]", "\n", "patch_list", ".", "append", "(", "patch", ")", "\n", "\n", "", "patch_list", "=", "torch", ".", "stack", "(", "patch_list", ",", "dim", "=", "0", ")", "\n", "if", "fm", "==", "'arcface'", ":", "\n", "        ", "grids", "=", "torchvision", ".", "utils", ".", "make_grid", "(", "patch_list", ",", "nrow", "=", "level", ",", "padding", "=", "0", ")", "\n", "", "else", ":", "\n", "        ", "grids", "=", "torchvision", ".", "utils", ".", "make_grid", "(", "patch_list", ",", "nrow", "=", "7", ",", "padding", "=", "0", ")", "\n", "", "grids", "=", "grids", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "*", "255.0", "\n", "grid_img", "=", "Image", ".", "fromarray", "(", "grids", ".", "astype", "(", "'uint8'", ")", ")", "\n", "return", "grid_img", "", "", ""]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.MatlabCp2tormException.__str__": [[15, 18], ["super.__str__"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.MatlabCp2tormException.__str__"], ["    ", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'In File {}:{}'", ".", "format", "(", "\n", "__file__", ",", "super", ".", "__str__", "(", "self", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.tformfwd": [[19, 26], ["numpy.hstack", "numpy.dot", "numpy.ones"], "function", ["None"], ["", "", "def", "tformfwd", "(", "trans", ",", "uv", ")", ":", "\n", "    ", "uv", "=", "np", ".", "hstack", "(", "(", "\n", "uv", ",", "np", ".", "ones", "(", "(", "uv", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "\n", ")", ")", "\n", "xy", "=", "np", ".", "dot", "(", "uv", ",", "trans", ")", "\n", "xy", "=", "xy", "[", ":", ",", "0", ":", "-", "1", "]", "\n", "return", "xy", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.tforminv": [[28, 33], ["numpy.linalg.inv", "matlab_cp2tform.tformfwd"], "function", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.tformfwd"], ["", "def", "tforminv", "(", "trans", ",", "uv", ")", ":", "\n", "\n", "    ", "Tinv", "=", "inv", "(", "trans", ")", "\n", "xy", "=", "tformfwd", "(", "Tinv", ",", "uv", ")", "\n", "return", "xy", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.findNonreflectiveSimilarity": [[35, 84], ["xy[].reshape", "xy[].reshape", "numpy.hstack", "numpy.hstack", "numpy.vstack", "uv[].reshape", "uv[].reshape", "numpy.vstack", "numpy.array", "numpy.linalg.inv", "numpy.array", "numpy.linalg.matrix_rank", "numpy.linalg.lstsq", "numpy.squeeze", "Exception", "numpy.ones", "numpy.zeros", "numpy.zeros", "numpy.ones"], "function", ["None"], ["", "def", "findNonreflectiveSimilarity", "(", "uv", ",", "xy", ",", "options", "=", "None", ")", ":", "\n", "    ", "options", "=", "{", "'K'", ":", "2", "}", "\n", "\n", "K", "=", "options", "[", "'K'", "]", "\n", "M", "=", "xy", ".", "shape", "[", "0", "]", "\n", "x", "=", "xy", "[", ":", ",", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "# use reshape to keep a column vector", "\n", "y", "=", "xy", "[", ":", ",", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "# use reshape to keep a column vector", "\n", "# print '--->x, y:\\n', x, y", "\n", "\n", "tmp1", "=", "np", ".", "hstack", "(", "(", "x", ",", "y", ",", "np", ".", "ones", "(", "(", "M", ",", "1", ")", ")", ",", "np", ".", "zeros", "(", "(", "M", ",", "1", ")", ")", ")", ")", "\n", "tmp2", "=", "np", ".", "hstack", "(", "(", "y", ",", "-", "x", ",", "np", ".", "zeros", "(", "(", "M", ",", "1", ")", ")", ",", "np", ".", "ones", "(", "(", "M", ",", "1", ")", ")", ")", ")", "\n", "X", "=", "np", ".", "vstack", "(", "(", "tmp1", ",", "tmp2", ")", ")", "\n", "# print '--->X.shape: ', X.shape", "\n", "# print 'X:\\n', X", "\n", "\n", "u", "=", "uv", "[", ":", ",", "0", "]", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "# use reshape to keep a column vector", "\n", "v", "=", "uv", "[", ":", ",", "1", "]", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "# use reshape to keep a column vector", "\n", "U", "=", "np", ".", "vstack", "(", "(", "u", ",", "v", ")", ")", "\n", "# print '--->U.shape: ', U.shape", "\n", "# print 'U:\\n', U", "\n", "\n", "# We know that X * r = U", "\n", "if", "rank", "(", "X", ")", ">=", "2", "*", "K", ":", "\n", "        ", "r", ",", "_", ",", "_", ",", "_", "=", "lstsq", "(", "X", ",", "U", ")", "\n", "r", "=", "np", ".", "squeeze", "(", "r", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'cp2tform:twoUniquePointsReq'", ")", "\n", "\n", "# print '--->r:\\n', r", "\n", "\n", "", "sc", "=", "r", "[", "0", "]", "\n", "ss", "=", "r", "[", "1", "]", "\n", "tx", "=", "r", "[", "2", "]", "\n", "ty", "=", "r", "[", "3", "]", "\n", "\n", "Tinv", "=", "np", ".", "array", "(", "[", "\n", "[", "sc", ",", "-", "ss", ",", "0", "]", ",", "\n", "[", "ss", ",", "sc", ",", "0", "]", ",", "\n", "[", "tx", ",", "ty", ",", "1", "]", "\n", "]", ")", "\n", "\n", "# print '--->Tinv:\\n', Tinv", "\n", "\n", "T", "=", "inv", "(", "Tinv", ")", "\n", "# print '--->T:\\n', T", "\n", "\n", "T", "[", ":", ",", "2", "]", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "1", "]", ")", "\n", "\n", "return", "T", ",", "Tinv", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.findSimilarity": [[86, 124], ["matlab_cp2tform.findNonreflectiveSimilarity", "matlab_cp2tform.findNonreflectiveSimilarity", "numpy.array", "numpy.dot", "matlab_cp2tform.tformfwd", "numpy.linalg.norm", "matlab_cp2tform.tformfwd", "numpy.linalg.norm", "numpy.linalg.inv"], "function", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.findNonreflectiveSimilarity", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.findNonreflectiveSimilarity", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.tformfwd", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.tformfwd"], ["", "def", "findSimilarity", "(", "uv", ",", "xy", ",", "options", "=", "None", ")", ":", "\n", "    ", "options", "=", "{", "'K'", ":", "2", "}", "\n", "\n", "#    uv = np.array(uv)", "\n", "#    xy = np.array(xy)", "\n", "\n", "# Solve for trans1", "\n", "trans1", ",", "trans1_inv", "=", "findNonreflectiveSimilarity", "(", "uv", ",", "xy", ",", "options", ")", "\n", "\n", "# Solve for trans2", "\n", "\n", "# manually reflect the xy data across the Y-axis", "\n", "xyR", "=", "xy", "\n", "xyR", "[", ":", ",", "0", "]", "=", "-", "1", "*", "xyR", "[", ":", ",", "0", "]", "\n", "\n", "trans2r", ",", "trans2r_inv", "=", "findNonreflectiveSimilarity", "(", "uv", ",", "xyR", ",", "options", ")", "\n", "\n", "# manually reflect the tform to undo the reflection done on xyR", "\n", "TreflectY", "=", "np", ".", "array", "(", "[", "\n", "[", "-", "1", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "\n", "]", ")", "\n", "\n", "trans2", "=", "np", ".", "dot", "(", "trans2r", ",", "TreflectY", ")", "\n", "\n", "# Figure out if trans1 or trans2 is better", "\n", "xy1", "=", "tformfwd", "(", "trans1", ",", "uv", ")", "\n", "norm1", "=", "norm", "(", "xy1", "-", "xy", ")", "\n", "\n", "xy2", "=", "tformfwd", "(", "trans2", ",", "uv", ")", "\n", "norm2", "=", "norm", "(", "xy2", "-", "xy", ")", "\n", "\n", "if", "norm1", "<=", "norm2", ":", "\n", "        ", "return", "trans1", ",", "trans1_inv", "\n", "", "else", ":", "\n", "        ", "trans2_inv", "=", "inv", "(", "trans2", ")", "\n", "return", "trans2", ",", "trans2_inv", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.get_similarity_transform": [[126, 134], ["matlab_cp2tform.findSimilarity", "matlab_cp2tform.findNonreflectiveSimilarity"], "function", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.findSimilarity", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.findNonreflectiveSimilarity"], ["", "", "def", "get_similarity_transform", "(", "src_pts", ",", "dst_pts", ",", "reflective", "=", "True", ")", ":", "\n", "\n", "    ", "if", "reflective", ":", "\n", "        ", "trans", ",", "trans_inv", "=", "findSimilarity", "(", "src_pts", ",", "dst_pts", ")", "\n", "", "else", ":", "\n", "        ", "trans", ",", "trans_inv", "=", "findNonreflectiveSimilarity", "(", "src_pts", ",", "dst_pts", ")", "\n", "\n", "", "return", "trans", ",", "trans_inv", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.cvt_tform_mat_for_cv2": [[136, 140], ["None"], "function", ["None"], ["", "def", "cvt_tform_mat_for_cv2", "(", "trans", ")", ":", "\n", "    ", "cv2_trans", "=", "trans", "[", ":", ",", "0", ":", "2", "]", ".", "T", "\n", "\n", "return", "cv2_trans", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.get_similarity_transform_for_cv2": [[142, 147], ["matlab_cp2tform.get_similarity_transform", "matlab_cp2tform.cvt_tform_mat_for_cv2"], "function", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.get_similarity_transform", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.cvt_tform_mat_for_cv2"], ["", "def", "get_similarity_transform_for_cv2", "(", "src_pts", ",", "dst_pts", ",", "reflective", "=", "True", ")", ":", "\n", "    ", "trans", ",", "trans_inv", "=", "get_similarity_transform", "(", "src_pts", ",", "dst_pts", ",", "reflective", ")", "\n", "cv2_trans", "=", "cvt_tform_mat_for_cv2", "(", "trans", ")", "\n", "\n", "return", "cv2_trans", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.align_face.alignment": [[22, 38], ["numpy.array().reshape", "numpy.array().astype", "numpy.array().astype", "matlab_cp2tform.get_similarity_transform_for_cv2", "cv2.warpAffine", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.alignment.matlab_cp2tform.get_similarity_transform_for_cv2"], ["def", "alignment", "(", "src_img", ",", "src_pts", ")", ":", "\n", "# For 96x112", "\n", "    ", "ref_pts", "=", "[", "[", "30.2946", ",", "51.6963", "]", ",", "[", "65.5318", ",", "51.5014", "]", ",", "[", "48.0252", ",", "71.7366", "]", ",", "[", "33.5493", ",", "92.3655", "]", ",", "[", "62.7299", ",", "92.2041", "]", "]", "\n", "crop_size", "=", "(", "96", ",", "112", ")", "\n", "\n", "# For 160x160", "\n", "# ref_pts = [ [61.4356, 54.6963],[118.5318, 54.6963], [93.5252, 90.7366],[68.5493, 122.3655],[110.7299, 122.3641]]", "\n", "# crop_size = (160, 160)", "\n", "src_pts", "=", "np", ".", "array", "(", "src_pts", ")", ".", "reshape", "(", "5", ",", "2", ")", "\n", "\n", "s", "=", "np", ".", "array", "(", "src_pts", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "r", "=", "np", ".", "array", "(", "ref_pts", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "tfm", "=", "get_similarity_transform_for_cv2", "(", "s", ",", "r", ")", "\n", "face_img", "=", "cv2", ".", "warpAffine", "(", "src_img", ",", "tfm", ",", "crop_size", ")", "\n", "return", "face_img", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.data_loader.facedata_loader.FaceDataset.__init__": [[20, 47], ["torchvision.transforms.Compose", "open", "enumerate", "torchvision.transforms.Compose", "line.strip().split", "os.path.join", "int", "facedata_loader.FaceDataset.image_paths.append", "facedata_loader.FaceDataset.image_labels.append", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Resize", "line.strip"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_file", ",", "data_dir", "=", "''", ",", "lmk_file", "=", "None", ",", "fm", "=", "'arcface'", ",", "resize", "=", "False", ",", "level", "=", "4", ",", "size", "=", "128", ")", ":", "\n", "        ", "self", ".", "image_paths", "=", "[", "]", "\n", "self", ".", "image_labels", "=", "[", "]", "\n", "self", ".", "index", "=", "{", "}", "\n", "self", ".", "resize", "=", "resize", "\n", "self", ".", "lmk_file", "=", "lmk_file", "\n", "self", ".", "lmks", "=", "[", "]", "\n", "self", ".", "fm", "=", "fm", "\n", "if", "fm", "==", "'cosface'", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "# range [0, 255] -> [0.0,1.0]", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ",", "std", "=", "(", "0.5", ",", "0.5", ",", "0.5", ")", ")", "# range [0.0, 1.0] -> [-1.0,1.0]", "\n", "]", ")", "\n", "", "elif", "fm", "==", "'facenet'", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "# range [0, 255] -> [0.0,1.0]", "\n", "transforms", ".", "Resize", "(", "(", "160", ",", "160", ")", ")", "\n", "]", ")", "\n", "\n", "", "with", "open", "(", "img_file", ",", "'r'", ")", "as", "ifd", ":", "\n", "            ", "for", "i", ",", "line", "in", "enumerate", "(", "ifd", ")", ":", "\n", "                ", "parts", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "img_path", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "parts", "[", "0", "]", ")", "\n", "self", ".", "index", "[", "img_path", "]", "=", "i", "\n", "label", "=", "int", "(", "parts", "[", "1", "]", ")", "\n", "self", ".", "image_paths", ".", "append", "(", "img_path", ")", "\n", "self", ".", "image_labels", ".", "append", "(", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.data_loader.facedata_loader.FaceDataset.__len__": [[48, 50], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "image_paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.data_loader.facedata_loader.FaceDataset.__getitem__": [[51, 74], ["numpy.zeros", "isinstance", "cv2.imread", "cv2.resize.reshape", "cv2.resize.transpose", "cv2.resize.astype", "PIL.Image.open().convert", "facedata_loader.FaceDataset.transform", "torch.from_numpy().float", "torch.from_numpy().long", "cv2.resize", "PIL.Image.open", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img_path", "=", "self", ".", "image_paths", "[", "idx", "]", "\n", "classid", "=", "self", ".", "image_labels", "[", "idx", "]", "\n", "if", "self", ".", "fm", "==", "'arcface'", ":", "\n", "            ", "img", "=", "cv2", ".", "imread", "(", "img_path", ",", "0", ")", "\n", "if", "self", ".", "resize", ":", "\n", "                ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "128", ",", "128", ")", ")", "\n", "", "img", "=", "img", ".", "reshape", "(", "(", "128", ",", "128", ",", "1", ")", ")", "\n", "img", "=", "img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ",", "copy", "=", "False", ")", "\n", "img", "-=", "127.5", "\n", "img", "/=", "127.5", "\n", "", "else", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "img_path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "label", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ")", ",", "np", ".", "float32", ")", "\n", "label", "[", "0", ",", "0", "]", "=", "classid", "\n", "\n", "if", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "img", "=", "torch", ".", "from_numpy", "(", "img", ")", ".", "float", "(", ")", "\n", "\n", "", "return", "(", "img", ",", "torch", ".", "from_numpy", "(", "label", "[", ":", ",", "0", "]", ")", ".", "long", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.data_loader.facedata_loader.get_datadir": [[9, 18], ["img_path.split", "os.path.join"], "function", ["None"], ["def", "get_datadir", "(", "img_path", ")", ":", "\n", "    ", "parts", "=", "img_path", ".", "split", "(", "'/'", ")", "\n", "del", "parts", "[", "-", "1", "]", "\n", "del", "parts", "[", "-", "1", "]", "\n", "path", "=", "'/'", "+", "parts", "[", "0", "]", "\n", "del", "parts", "[", "0", "]", "\n", "for", "p", "in", "parts", ":", "\n", "        ", "path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "p", ")", "\n", "", "return", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.data_loader.facedata_loader.get_face_dataloader": [[76, 127], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch.utils.data.DataLoader", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset", "facedata_loader.FaceDataset"], "function", ["None"], ["", "", "def", "get_face_dataloader", "(", "batch_size", ",", "data_dir", "=", "''", ",", "folder", "=", "''", ",", "fm", "=", "'arcface'", ",", "num_workers", "=", "4", ",", "level", "=", "4", ",", "size", "=", "128", ")", ":", "\n", "    ", "if", "folder", "==", "'data_small'", ":", "\n", "        ", "filedir", "=", "'data_files/small'", "\n", "lfw_128_File", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_128.txt'", ")", "\n", "lfw_128_mask_File", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_128_mask.txt'", ")", "\n", "lfw_128_glass_File", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_128_glass.txt'", ")", "\n", "lfw_128_crop_File", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_128_crop.txt'", ")", "\n", "\n", "face_dataset", "=", "{", "\n", "'lfw128'", ":", "FaceDataset", "(", "lfw_128_File", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "'lfw128_masked'", ":", "FaceDataset", "(", "lfw_128_mask_File", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "'lfw128_glass'", ":", "FaceDataset", "(", "lfw_128_glass_File", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "'lfw128_crop'", ":", "FaceDataset", "(", "lfw_128_crop_File", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "}", "\n", "\n", "data_list", "=", "[", "'lfw128'", ",", "'lfw128_masked'", ",", "'lfw128_glass'", ",", "'lfw128_crop'", "]", "\n", "", "else", ":", "\n", "        ", "filedir", "=", "'data_files/full'", "\n", "lfw_128_File", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_128.txt'", ")", "\n", "lfw_128_1680_File", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_128x128_1680.txt'", ")", "\n", "lfw_128_mask_File", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_128_masked_label.txt'", ")", "\n", "lfw_128_glass_File", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_128_glass.txt'", ")", "\n", "lfw_128_crop_File", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_128_crop70.txt'", ")", "\n", "\n", "lfwFile", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_96x112.txt'", ")", "\n", "lfw_96_mask", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_112x96_masked.txt'", ")", "\n", "lfw_96_glass", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_112x96_glass.txt'", ")", "\n", "lfw_96_crop", "=", "os", ".", "path", ".", "join", "(", "filedir", ",", "'lfw_112x96_crop70.txt'", ")", "\n", "\n", "\n", "face_dataset", "=", "{", "\n", "'lfw128'", ":", "FaceDataset", "(", "lfw_128_File", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "'lfw128_1680'", ":", "FaceDataset", "(", "lfw_128_1680_File", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "'lfw128_masked'", ":", "FaceDataset", "(", "lfw_128_mask_File", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "'lfw128_glass'", ":", "FaceDataset", "(", "lfw_128_glass_File", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "'lfw128_crop'", ":", "FaceDataset", "(", "lfw_128_crop_File", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "\n", "'lfw'", ":", "FaceDataset", "(", "lfwFile", ",", "fm", "=", "fm", ")", ",", "\n", "'lfw96_mask'", ":", "FaceDataset", "(", "lfw_96_mask", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "'lfw96_glass'", ":", "FaceDataset", "(", "lfw_96_glass", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "'lfw96_crop'", ":", "FaceDataset", "(", "lfw_96_crop", ",", "data_dir", "=", "data_dir", ",", "fm", "=", "fm", ",", "level", "=", "level", ",", "size", "=", "size", ",", "resize", "=", "True", ")", ",", "\n", "}", "\n", "\n", "data_list", "=", "[", "'lfw'", ",", "'lfw128'", ",", "'lfw128_1680'", ",", "'lfw128_masked'", ",", "'lfw128_glass'", ",", "'lfw128_crop'", ",", "'lfw96_mask'", ",", "'lfw96_glass'", ",", "'lfw96_crop'", "]", "\n", "\n", "", "dataloaders", "=", "{", "\n", "x", ":", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "face_dataset", "[", "x", "]", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "num_workers", ")", "\n", "for", "x", "in", "data_list", "\n", "}", "\n", "\n", "return", "face_dataset", ",", "dataloaders", "", "", ""]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.Block.__init__": [[8, 14], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["    ", "def", "__init__", "(", "self", ",", "planes", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "prelu1", "=", "nn", ".", "PReLU", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "prelu2", "=", "nn", ".", "PReLU", "(", "planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.Block.forward": [[15, 17], ["net_cos.Block.prelu2", "net_cos.Block.conv2", "net_cos.Block.prelu1", "net_cos.Block.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "+", "self", ".", "prelu2", "(", "self", ".", "conv2", "(", "self", ".", "prelu1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.sphere.__init__": [[20, 47], ["torch.Module.__init__", "net_cos.sphere._make_layer", "net_cos.sphere._make_layer", "net_cos.sphere._make_layer", "net_cos.sphere._make_layer", "torch.Linear", "torch.Linear", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "net_cos.sphere.modules", "ValueError", "isinstance", "isinstance", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.constant_", "torch.init.constant_", "torch.init.normal_", "torch.init.normal_", "str"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "type", "=", "20", ",", "is_gray", "=", "False", ")", ":", "\n", "        ", "super", "(", "sphere", ",", "self", ")", ".", "__init__", "(", ")", "\n", "block", "=", "Block", "\n", "if", "type", "is", "20", ":", "\n", "            ", "layers", "=", "[", "1", ",", "2", ",", "4", ",", "1", "]", "\n", "", "elif", "type", "is", "64", ":", "\n", "            ", "layers", "=", "[", "3", ",", "7", ",", "16", ",", "3", "]", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'sphere'", "+", "str", "(", "type", ")", "+", "\" IS NOT SUPPORTED! (sphere20 or sphere64)\"", ")", "\n", "", "filter_list", "=", "[", "3", ",", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "if", "is_gray", ":", "\n", "            ", "filter_list", "[", "0", "]", "=", "1", "\n", "\n", "", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "filter_list", "[", "0", "]", ",", "filter_list", "[", "1", "]", ",", "layers", "[", "0", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "filter_list", "[", "1", "]", ",", "filter_list", "[", "2", "]", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "filter_list", "[", "2", "]", ",", "filter_list", "[", "3", "]", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "filter_list", "[", "3", "]", ",", "filter_list", "[", "4", "]", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "7", "*", "6", ",", "512", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "# Weight initialization", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0.0", ")", "\n", "", "else", ":", "\n", "                    ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.sphere._make_layer": [[49, 57], ["layers.append", "layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "layers.append", "block"], "methods", ["None"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "inplanes", ",", "planes", ",", "blocks", ",", "stride", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "3", ",", "stride", ",", "1", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "PReLU", "(", "planes", ")", ")", "\n", "for", "i", "in", "range", "(", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.sphere.forward": [[58, 74], ["net_cos.sphere.layer1", "net_cos.sphere.layer2", "net_cos.sphere.layer3", "net_cos.sphere.layer4", "net_cos.sphere.avgpool", "net_cos.sphere.view", "net_cos.sphere.fc", "net_cos.sphere.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "embedding", "=", "x", "\n", "adpt_pooling", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "out", "=", "{", "\n", "'fea'", ":", "x", ",", "\n", "'embedding'", ":", "embedding", ",", "\n", "'adpt_pooling'", ":", "adpt_pooling", "\n", "}", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.sphere.save": [[75, 78], ["open", "torch.save", "torch.save", "torch.save", "torch.save", "net_cos.sphere.state_dict"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save"], ["", "def", "save", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.BlockIR.__init__": [[85, 100], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", ",", "dim_match", ")", ":", "\n", "        ", "super", "(", "BlockIR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "prelu1", "=", "nn", ".", "PReLU", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "if", "dim_match", ":", "\n", "            ", "self", ".", "downsample", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.BlockIR.forward": [[102, 118], ["net_cos.BlockIR.bn1", "net_cos.BlockIR.conv1", "net_cos.BlockIR.bn2", "net_cos.BlockIR.prelu1", "net_cos.BlockIR.conv2", "net_cos.BlockIR.bn3", "net_cos.BlockIR.downsample"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "bn1", "(", "x", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "prelu1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.__init__": [[122, 153], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "net_cos.LResNet._make_layer", "net_cos.LResNet._make_layer", "net_cos.LResNet._make_layer", "net_cos.LResNet._make_layer", "torch.Sequential", "torch.Sequential", "net_cos.LResNet.modules", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "isinstance", "isinstance", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.constant_", "torch.init.constant_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "filter_list", ",", "is_gray", "=", "False", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "LResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# input is (mini-batch,3 or 1,112,96)", "\n", "# use (conv3x3, stride=1, padding=1) instead of (conv7x7, stride=2, padding=3)", "\n", "if", "is_gray", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "filter_list", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "# gray", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "filter_list", "[", "0", "]", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "filter_list", "[", "0", "]", ")", "\n", "self", ".", "prelu1", "=", "nn", ".", "PReLU", "(", "filter_list", "[", "0", "]", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "filter_list", "[", "0", "]", ",", "filter_list", "[", "1", "]", ",", "layers", "[", "0", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "filter_list", "[", "1", "]", ",", "filter_list", "[", "2", "]", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "filter_list", "[", "2", "]", ",", "filter_list", "[", "3", "]", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "filter_list", "[", "3", "]", ",", "filter_list", "[", "4", "]", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm1d", "(", "filter_list", "[", "4", "]", "*", "7", "*", "6", ")", ",", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.4", ")", ",", "\n", "nn", ".", "Linear", "(", "filter_list", "[", "4", "]", "*", "7", "*", "6", ",", "512", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "512", ")", ",", "# fix gamma ???", "\n", ")", "\n", "\n", "# Weight initialization", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0.0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet._make_layer": [[155, 162], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "inplanes", ",", "planes", ",", "blocks", ",", "stride", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", ",", "False", ")", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "planes", ",", "planes", ",", "stride", "=", "1", ",", "dim_match", "=", "True", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.forward": [[163, 177], ["net_cos.LResNet.conv1", "net_cos.LResNet.bn1", "net_cos.LResNet.prelu1", "net_cos.LResNet.layer1", "net_cos.LResNet.layer2", "net_cos.LResNet.layer3", "net_cos.LResNet.layer4", "net_cos.LResNet.view", "net_cos.LResNet.fc", "net_cos.LResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "prelu1", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save": [[178, 181], ["open", "torch.save", "torch.save", "torch.save", "torch.save", "net_cos.LResNet.state_dict"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet.save"], ["", "def", "save", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "torch", ".", "save", "(", "self", ".", "state_dict", "(", ")", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.net_cos.LResNet50E_IR": [[183, 187], ["net_cos.LResNet"], "function", ["None"], ["", "", "", "def", "LResNet50E_IR", "(", "is_gray", "=", "False", ")", ":", "\n", "    ", "filter_list", "=", "[", "64", ",", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "layers", "=", "[", "3", ",", "4", ",", "14", ",", "3", "]", "\n", "return", "LResNet", "(", "BlockIR", ",", "layers", ",", "filter_list", ",", "is_gray", ")", "\n", "# ---------------------------------- LResNet50E-IR network End ----------------------------------", ""]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.BasicBlock.__init__": [[36, 45], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.conv3x3", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.BasicBlock.forward": [[46, 63], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.IRBlock.__init__": [[68, 81], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.SEBlock"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.conv3x3", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "use_se", "=", "True", ")", ":", "\n", "        ", "super", "(", "IRBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn0", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "inplanes", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "inplanes", ")", "\n", "self", ".", "prelu", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "use_se", "=", "use_se", "\n", "if", "self", ".", "use_se", ":", "\n", "            ", "self", ".", "se", "=", "SEBlock", "(", "planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.IRBlock.forward": [[82, 101], ["resnet.IRBlock.bn0", "resnet.IRBlock.conv1", "resnet.IRBlock.bn1", "resnet.IRBlock.prelu", "resnet.IRBlock.conv2", "resnet.IRBlock.bn2", "resnet.IRBlock.prelu", "resnet.IRBlock.se", "resnet.IRBlock.downsample"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "bn0", "(", "x", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "prelu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "if", "self", ".", "use_se", ":", "\n", "            ", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "\n", "", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "prelu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.Bottleneck.__init__": [[106, 118], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.Bottleneck.forward": [[119, 140], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.SEBlock.__init__": [[143, 151], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "SEBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "channel", ",", "channel", "//", "reduction", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "channel", "//", "reduction", ",", "channel", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.SEBlock.forward": [[153, 158], ["x.size", "resnet.SEBlock.avg_pool().view", "resnet.SEBlock.fc().view", "resnet.SEBlock.avg_pool", "resnet.SEBlock.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "self", ".", "avg_pool", "(", "x", ")", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNetFace.__init__": [[161, 193], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNetFace._make_layer", "resnet.ResNetFace._make_layer", "resnet.ResNetFace._make_layer", "resnet.ResNetFace._make_layer", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "resnet.ResNetFace.modules", "isinstance", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.xavier_normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "use_se", "=", "True", ",", "use_reduce_pool", "=", "False", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "use_se", "=", "use_se", "\n", "super", "(", "ResNetFace", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "prelu", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "512", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "512", "*", "8", "*", "8", ",", "512", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "pooling", "=", "None", "\n", "# if use_reduce_pool:", "\n", "self", ".", "pooling", "=", "nn", ".", "AvgPool2d", "(", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", "# 4x4 # nn.AvgPool2d(2, stride=2, padding=1) 5x5", "\n", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "# self.filters = torch.ones(1, 512, 2, 2).cuda()", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNetFace._make_layer": [[194, 209], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "use_se", "=", "self", ".", "use_se", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "use_se", "=", "self", ".", "use_se", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNetFace.forward": [[210, 250], ["resnet.ResNetFace.conv1", "resnet.ResNetFace.bn1", "resnet.ResNetFace.prelu", "resnet.ResNetFace.maxpool", "resnet.ResNetFace.layer1", "resnet.ResNetFace.layer2", "resnet.ResNetFace.layer3", "resnet.ResNetFace.layer4", "resnet.ResNetFace.bn4", "resnet.ResNetFace.dropout", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "resnet.ResNetFace.avgpool", "resnet.ResNetFace.avgpool", "resnet.ResNetFace.avgpool", "resnet.ResNetFace.view", "resnet.ResNetFace.fc5", "resnet.ResNetFace.bn5", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool2d", "resnet.ResNetFace.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "prelu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "embedding_16", "=", "x", "#self.pooling(x)", "\n", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "bn4", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "embedding_88", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "x", ",", "output_size", "=", "(", "8", ",", "8", ")", ")", "#x", "\n", "embedding_44", "=", "None", "\n", "if", "self", ".", "pooling", ":", "\n", "# embedding_44 = self.pooling(x) #F.conv2d(x, self.filters, stride=2).squeeze(1)", "\n", "            ", "embedding_44", "=", "torch", ".", "nn", ".", "functional", ".", "adaptive_avg_pool2d", "(", "x", ",", "output_size", "=", "(", "4", ",", "4", ")", ")", "\n", "\n", "# x = torch.nn.functional.upsample(x, size=(16, 16), mode='bilinear', align_corners=True)", "\n", "# x = ", "\n", "\n", "", "adpt_pooling_44", "=", "self", ".", "avgpool", "(", "embedding_44", ")", "\n", "adpt_pooling_88", "=", "self", ".", "avgpool", "(", "embedding_88", ")", "\n", "adpt_pooling_16", "=", "self", ".", "avgpool", "(", "embedding_16", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc5", "(", "x", ")", "\n", "x", "=", "self", ".", "bn5", "(", "x", ")", "\n", "out", "=", "{", "'fea'", ":", "x", ",", "\n", "'embedding_16'", ":", "embedding_16", ",", "\n", "'embedding_88'", ":", "embedding_88", ",", "\n", "'embedding_44'", ":", "embedding_44", ",", "\n", "'adpt_pooling_44'", ":", "adpt_pooling_44", ",", "\n", "'adpt_pooling_88'", ":", "adpt_pooling_88", ",", "\n", "'adpt_pooling_16'", ":", "adpt_pooling_16", "}", "\n", "\n", "return", "out", "#x, embedding_16, embedding_88, embedding_44, adpt_pooling", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet.__init__": [[254, 280], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "resnet.ResNet.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.conv1 = nn.Conv2d(3, 64, kernel_size=7, stride=2, padding=3,", "\n", "#                        bias=False)", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "# self.maxpool = nn.MaxPool2d(kernel_size=3, stride=2, padding=1)", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "# self.avgpool = nn.AvgPool2d(8, stride=1)", "\n", "# self.fc = nn.Linear(512 * block.expansion, num_classes)", "\n", "# self.pooling = nn.AvgPool2d(2, stride=2, padding=1)", "\n", "self", ".", "pooling", "=", "nn", ".", "AvgPool2d", "(", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "512", "*", "8", "*", "8", ",", "512", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet._make_layer": [[281, 297], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.ResNet.forward": [[298, 315], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.pooling", "resnet.ResNet.view", "resnet.ResNet.fc5", "resnet.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "# x = self.maxpool(x)", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "embedding", "=", "self", ".", "pooling", "(", "x", ")", "#x", "\n", "# x = nn.AvgPool2d(kernel_size=x.size()[2:])(x)", "\n", "# x = self.avgpool(x)", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc5", "(", "x", ")", "\n", "\n", "return", "x", ",", "embedding", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.conv3x3": [[27, 31], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.resnet18": [[317, 326], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.resnet34": [[328, 337], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.resnet50": [[339, 348], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.resnet101": [[350, 359], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.resnet152": [[361, 370], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.resnet.resnet_face18": [[372, 375], ["resnet.ResNetFace"], "function", ["None"], ["", "def", "resnet_face18", "(", "use_se", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNetFace", "(", "IRBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "use_se", "=", "use_se", ",", "**", "kwargs", ")", "\n", "return", "model", "", "", ""]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.BasicConv2d.__init__": [[12, 26], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", ",", "padding", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "bias", "=", "False", "\n", ")", "# verify bias false", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "\n", "out_planes", ",", "\n", "eps", "=", "0.001", ",", "# value found in tensorflow", "\n", "momentum", "=", "0.1", ",", "# default pytorch value", "\n", "affine", "=", "True", "\n", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.BasicConv2d.forward": [[27, 32], ["facenet.BasicConv2d.conv", "facenet.BasicConv2d.bn", "facenet.BasicConv2d.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.Block35.__init__": [[36, 56], ["torch.nn.Module.__init__", "facenet.BasicConv2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.ReLU", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale", "=", "1.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "self", ".", "branch0", "=", "BasicConv2d", "(", "256", ",", "32", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "branch1", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "256", ",", "32", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", ")", "\n", "\n", "self", ".", "branch2", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "256", ",", "32", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", ")", "\n", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "96", ",", "256", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.Block35.forward": [[57, 66], ["facenet.Block35.branch0", "facenet.Block35.branch1", "facenet.Block35.branch2", "torch.cat", "facenet.Block35.conv2d", "facenet.Block35.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x0", "=", "self", ".", "branch0", "(", "x", ")", "\n", "x1", "=", "self", ".", "branch1", "(", "x", ")", "\n", "x2", "=", "self", ".", "branch2", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "x0", ",", "x1", ",", "x2", ")", ",", "1", ")", "\n", "out", "=", "self", ".", "conv2d", "(", "out", ")", "\n", "out", "=", "out", "*", "self", ".", "scale", "+", "x", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.Block17.__init__": [[70, 85], ["torch.nn.Module.__init__", "facenet.BasicConv2d", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.ReLU", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale", "=", "1.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "\n", "self", ".", "branch0", "=", "BasicConv2d", "(", "896", ",", "128", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "branch1", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "896", ",", "128", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "7", ")", ",", "stride", "=", "1", ",", "padding", "=", "(", "0", ",", "3", ")", ")", ",", "\n", "BasicConv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "7", ",", "1", ")", ",", "stride", "=", "1", ",", "padding", "=", "(", "3", ",", "0", ")", ")", "\n", ")", "\n", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "256", ",", "896", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.Block17.forward": [[86, 94], ["facenet.Block17.branch0", "facenet.Block17.branch1", "torch.cat", "facenet.Block17.conv2d", "facenet.Block17.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x0", "=", "self", ".", "branch0", "(", "x", ")", "\n", "x1", "=", "self", ".", "branch1", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "x0", ",", "x1", ")", ",", "1", ")", "\n", "out", "=", "self", ".", "conv2d", "(", "out", ")", "\n", "out", "=", "out", "*", "self", ".", "scale", "+", "x", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.Block8.__init__": [[98, 115], ["torch.nn.Module.__init__", "facenet.BasicConv2d", "torch.nn.Sequential", "torch.nn.Conv2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale", "=", "1.0", ",", "noReLU", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "noReLU", "=", "noReLU", "\n", "\n", "self", ".", "branch0", "=", "BasicConv2d", "(", "1792", ",", "192", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "branch1", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "1792", ",", "192", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "(", "1", ",", "3", ")", ",", "stride", "=", "1", ",", "padding", "=", "(", "0", ",", "1", ")", ")", ",", "\n", "BasicConv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "(", "3", ",", "1", ")", ",", "stride", "=", "1", ",", "padding", "=", "(", "1", ",", "0", ")", ")", "\n", ")", "\n", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "384", ",", "1792", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "if", "not", "self", ".", "noReLU", ":", "\n", "            ", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.Block8.forward": [[116, 125], ["facenet.Block8.branch0", "facenet.Block8.branch1", "torch.cat", "facenet.Block8.conv2d", "facenet.Block8.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x0", "=", "self", ".", "branch0", "(", "x", ")", "\n", "x1", "=", "self", ".", "branch1", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "x0", ",", "x1", ")", ",", "1", ")", "\n", "out", "=", "self", ".", "conv2d", "(", "out", ")", "\n", "out", "=", "out", "*", "self", ".", "scale", "+", "x", "\n", "if", "not", "self", ".", "noReLU", ":", "\n", "            ", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.Mixed_6a.__init__": [[129, 141], ["torch.nn.Module.__init__", "facenet.BasicConv2d", "torch.nn.Sequential", "torch.nn.MaxPool2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "branch0", "=", "BasicConv2d", "(", "256", ",", "384", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "branch1", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "256", ",", "192", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "192", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", ")", "\n", "\n", "self", ".", "branch2", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.Mixed_6a.forward": [[142, 148], ["facenet.Mixed_6a.branch0", "facenet.Mixed_6a.branch1", "facenet.Mixed_6a.branch2", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x0", "=", "self", ".", "branch0", "(", "x", ")", "\n", "x1", "=", "self", ".", "branch1", "(", "x", ")", "\n", "x2", "=", "self", ".", "branch2", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "x0", ",", "x1", ",", "x2", ")", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.Mixed_7a.__init__": [[152, 172], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.MaxPool2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "branch0", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "896", ",", "256", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "256", ",", "384", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", ")", "\n", "\n", "self", ".", "branch1", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "896", ",", "256", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", ")", "\n", "\n", "self", ".", "branch2", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "896", ",", "256", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", ")", "\n", "\n", "self", ".", "branch3", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.Mixed_7a.forward": [[173, 180], ["facenet.Mixed_7a.branch0", "facenet.Mixed_7a.branch1", "facenet.Mixed_7a.branch2", "facenet.Mixed_7a.branch3", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x0", "=", "self", ".", "branch0", "(", "x", ")", "\n", "x1", "=", "self", ".", "branch1", "(", "x", ")", "\n", "x2", "=", "self", ".", "branch2", "(", "x", ")", "\n", "x3", "=", "self", ".", "branch3", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "x0", ",", "x1", ",", "x2", ",", "x3", ")", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__": [[200, 259], ["torch.nn.Module.__init__", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "torch.nn.MaxPool2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "facenet.BasicConv2d", "torch.nn.Sequential", "facenet.Mixed_6a", "torch.nn.Sequential", "facenet.Mixed_7a", "torch.nn.Sequential", "facenet.Block8", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.Linear", "torch.device", "facenet.Block35", "facenet.Block35", "facenet.Block35", "facenet.Block35", "facenet.Block35", "facenet.Block17", "facenet.Block17", "facenet.Block17", "facenet.Block17", "facenet.Block17", "facenet.Block17", "facenet.Block17", "facenet.Block17", "facenet.Block17", "facenet.Block17", "facenet.Block8", "facenet.Block8", "facenet.Block8", "facenet.Block8", "facenet.Block8", "torch.nn.Linear", "facenet.InceptionResnetV1.to"], "methods", ["home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.__init__"], ["def", "__init__", "(", "self", ",", "classify", "=", "False", ",", "num_classes", "=", "None", ",", "dropout_prob", "=", "0.6", ",", "device", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "# Set simple attributes", "\n", "self", ".", "classify", "=", "classify", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "tmp_classes", "=", "8631", "\n", "\n", "# Define layers", "\n", "self", ".", "conv2d_1a", "=", "BasicConv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv2d_2a", "=", "BasicConv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv2d_2b", "=", "BasicConv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "maxpool_3a", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv2d_3b", "=", "BasicConv2d", "(", "64", ",", "80", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv2d_4a", "=", "BasicConv2d", "(", "80", ",", "192", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv2d_4b", "=", "BasicConv2d", "(", "192", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "repeat_1", "=", "nn", ".", "Sequential", "(", "\n", "Block35", "(", "scale", "=", "0.17", ")", ",", "\n", "Block35", "(", "scale", "=", "0.17", ")", ",", "\n", "Block35", "(", "scale", "=", "0.17", ")", ",", "\n", "Block35", "(", "scale", "=", "0.17", ")", ",", "\n", "Block35", "(", "scale", "=", "0.17", ")", ",", "\n", ")", "\n", "self", ".", "mixed_6a", "=", "Mixed_6a", "(", ")", "\n", "self", ".", "repeat_2", "=", "nn", ".", "Sequential", "(", "\n", "Block17", "(", "scale", "=", "0.10", ")", ",", "\n", "Block17", "(", "scale", "=", "0.10", ")", ",", "\n", "Block17", "(", "scale", "=", "0.10", ")", ",", "\n", "Block17", "(", "scale", "=", "0.10", ")", ",", "\n", "Block17", "(", "scale", "=", "0.10", ")", ",", "\n", "Block17", "(", "scale", "=", "0.10", ")", ",", "\n", "Block17", "(", "scale", "=", "0.10", ")", ",", "\n", "Block17", "(", "scale", "=", "0.10", ")", ",", "\n", "Block17", "(", "scale", "=", "0.10", ")", ",", "\n", "Block17", "(", "scale", "=", "0.10", ")", ",", "\n", ")", "\n", "self", ".", "mixed_7a", "=", "Mixed_7a", "(", ")", "\n", "self", ".", "repeat_3", "=", "nn", ".", "Sequential", "(", "\n", "Block8", "(", "scale", "=", "0.20", ")", ",", "\n", "Block8", "(", "scale", "=", "0.20", ")", ",", "\n", "Block8", "(", "scale", "=", "0.20", ")", ",", "\n", "Block8", "(", "scale", "=", "0.20", ")", ",", "\n", "Block8", "(", "scale", "=", "0.20", ")", ",", "\n", ")", "\n", "self", ".", "block8", "=", "Block8", "(", "noReLU", "=", "True", ")", "\n", "self", ".", "avgpool_1a", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout_prob", ")", "\n", "self", ".", "last_linear", "=", "nn", ".", "Linear", "(", "1792", ",", "512", ",", "bias", "=", "False", ")", "\n", "self", ".", "last_bn", "=", "nn", ".", "BatchNorm1d", "(", "512", ",", "eps", "=", "0.001", ",", "momentum", "=", "0.1", ",", "affine", "=", "True", ")", "\n", "\n", "self", ".", "logits", "=", "nn", ".", "Linear", "(", "512", ",", "tmp_classes", ")", "\n", "\n", "if", "self", ".", "classify", "and", "self", ".", "num_classes", "is", "not", "None", ":", "\n", "            ", "self", ".", "logits", "=", "nn", ".", "Linear", "(", "512", ",", "self", ".", "num_classes", ")", "\n", "\n", "", "self", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", "\n", "if", "device", "is", "not", "None", ":", "\n", "            ", "self", ".", "device", "=", "device", "\n", "self", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anguyen8_deepface-emd.face_models.facenet.InceptionResnetV1.forward": [[260, 296], ["facenet.InceptionResnetV1.conv2d_1a", "facenet.InceptionResnetV1.conv2d_2a", "facenet.InceptionResnetV1.conv2d_2b", "facenet.InceptionResnetV1.maxpool_3a", "facenet.InceptionResnetV1.conv2d_3b", "facenet.InceptionResnetV1.conv2d_4a", "facenet.InceptionResnetV1.conv2d_4b", "facenet.InceptionResnetV1.repeat_1", "facenet.InceptionResnetV1.mixed_6a", "facenet.InceptionResnetV1.repeat_2", "facenet.InceptionResnetV1.mixed_7a", "facenet.InceptionResnetV1.repeat_3", "facenet.InceptionResnetV1.block8", "facenet.InceptionResnetV1.avgpool_1a", "facenet.InceptionResnetV1.dropout", "facenet.InceptionResnetV1.last_linear", "facenet.InceptionResnetV1.last_bn", "torch.nn.functional.normalize", "torch.nn.functional.normalize.view"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"Calculate embeddings or logits given a batch of input image tensors.\n\n        Arguments:\n            x {torch.tensor} -- Batch of image tensors representing faces.\n\n        Returns:\n            torch.tensor -- Batch of embedding vectors or multinomial logits.\n        \"\"\"", "\n", "x", "=", "self", ".", "conv2d_1a", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2d_2a", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2d_2b", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool_3a", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2d_3b", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2d_4a", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2d_4b", "(", "x", ")", "\n", "x", "=", "self", ".", "repeat_1", "(", "x", ")", "\n", "x", "=", "self", ".", "mixed_6a", "(", "x", ")", "\n", "x", "=", "self", ".", "repeat_2", "(", "x", ")", "\n", "x", "=", "self", ".", "mixed_7a", "(", "x", ")", "\n", "x", "=", "self", ".", "repeat_3", "(", "x", ")", "\n", "x", "=", "self", ".", "block8", "(", "x", ")", "\n", "embedding", "=", "x", "\n", "x", "=", "self", ".", "avgpool_1a", "(", "x", ")", "\n", "adpt_pooling", "=", "x", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "last_linear", "(", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "x", "=", "self", ".", "last_bn", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "normalize", "(", "x", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "out", "=", "{", "\n", "'fea'", ":", "x", ",", "\n", "'embedding'", ":", "embedding", ",", "\n", "'adpt_pooling'", ":", "adpt_pooling", "\n", "}", "\n", "return", "out", "", "", "", ""]]}