{"home.repos.pwc.inspect_result.aniketde_ZeroShotDG.F-MNIST.main.load_rotated_fmnist": [[22, 74], ["range", "range", "random_perm.append", "torchvision.Compose", "torchvision.FashionMNIST", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "next", "range", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "numpy.random.permutation", "iter", "targets[].to", "data[].to", "train_x.append", "train_y.append", "torchvision.RandomRotation", "torchvision.ToTensor", "random.seed", "torch.cat().to.append", "torch.cat().to.append", "torch.cat().to.append", "torch.cat().to.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "function", ["None"], ["test_x", "=", "[", "]", "\n", "train_y", "=", "[", "]", "\n", "test_y", "=", "[", "]", "\n", "random", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "random", ".", "append", "(", "np", ".", "random", ".", "permutation", "(", "6000", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "7", ")", ":", "\n", "        ", "angle", "=", "360", "-", "15", "*", "i", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "RandomRotation", "(", "degrees", "=", "(", "angle", ",", "angle", ")", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "fmnist_train", "=", "datasets", ".", "FashionMNIST", "(", "root", "=", "'../../data/'", ",", "download", "=", "False", ",", "train", "=", "True", ",", "transform", "=", "transform", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "fmnist_train", ",", "batch_size", "=", "60000", ",", "shuffle", "=", "False", ")", "\n", "\n", "full_data", "=", "next", "(", "iter", "(", "train_loader", ")", ")", "\n", "\n", "targets", "=", "full_data", "[", "1", "]", "\n", "\n", "data", "=", "full_data", "[", "0", "]", "\n", "\n", "data_x", "=", "[", "]", "\n", "data_y", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "            ", "idx", "=", "targets", "==", "j", "\n", "jth_target", "=", "targets", "[", "idx", "]", ".", "to", "(", "device", ")", "\n", "jth_data", "=", "data", "[", "idx", "]", ".", "to", "(", "device", ")", "\n", "jth_data", "=", "jth_data", "[", "random", "[", "j", "]", "]", "\n", "\n", "\n", "sample_x", "=", "jth_data", "[", ":", "400", "]", "\n", "sample_y", "=", "jth_target", "[", ":", "400", "]", "\n", "\n", "if", "i", "!=", "left_out_idx", ":", "\n", "                ", "data_x", ".", "append", "(", "sample_x", ")", "\n", "data_y", ".", "append", "(", "sample_y", ")", "\n", "\n", "", "if", "i", "==", "left_out_idx", ":", "\n", "                ", "data_x", ".", "append", "(", "jth_data", ")", "\n", "data_y", ".", "append", "(", "jth_target", ")", "\n", "\n", "", "", "data_x", "=", "torch", ".", "cat", "(", "data_x", ")", ".", "to", "(", "device", ")", "\n", "data_y", "=", "torch", ".", "cat", "(", "data_y", ")", ".", "to", "(", "device", ")", "\n", "\n", "if", "i", "!=", "left_out_idx", ":", "\n", "            ", "train_x", ".", "append", "(", "data_x", ")", "\n", "train_y", ".", "append", "(", "data_y", ")", "\n", "", "else", ":", "\n", "            ", "test_x", "=", "data_x", "\n", "test_y", "=", "data_y", "\n", "\n", "", "", "return", "train_x", ",", "train_y", ",", "test_x", ",", "test_y", "\n", "\n", "\n", "", "def", "domain_specific_training", "(", "dom", ",", "clas", ")", ":", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.F-MNIST.main.domain_specific_training": [[76, 331], ["main.load_rotated_fmnist", "len", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "print", "models.FC.FeatureCritic", "range", "len", "zs_x.view.append", "zs_y.view().long.append", "numpy.random.permutation", "range", "random.sample", "range", "models.FC.FeatureCritic.train", "torch.cat().to", "torch.cat().to", "x_train.view.view", "torch.cat().to", "torch.cat().to", "torch.cat().to.view", "x_train.view.append", "torch.cat().to.append", "range", "D_x_trn.append", "D_y_trn.append", "print", "torch.MSELoss", "feature_extractor.eval", "classifier.eval", "D_x_val.append", "D_y_val.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.no_grad", "torch.no_grad", "x_train.view.view", "torch.cat().to.view().long", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "enumerate", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "range", "print", "train_ms_rst.append", "torch.max", "torch.max", "sum", "print", "train_rst.append", "torch.no_grad", "torch.no_grad", "zs_x.view.view", "zs_y.view().long.view().long", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "enumerate", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "range", "print", "range", "print", "print", "print", "zs_mse_rst.append", "torch.max", "torch.max", "sum", "print", "zs_rst.append", "torch.no_grad", "torch.no_grad", "test_x.view().to", "test_y.view().to", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "enumerate", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.max", "torch.max", "sum", "print", "test_rst.append", "range", "print", "test_mse_rst.append", "feature_extractor", "classifier", "torch.cat().to.append", "torch.cat().to.append", "torch.cat().to.append", "len", "range", "cost.index", "predicted.append", "len", "numpy.array", "len", "feature_extractor", "classifier", "torch.cat().to.append", "torch.cat().to.append", "torch.cat().to.append", "len", "range", "cost.index", "predicted.append", "len", "len", "predicted.append", "len", "numpy.array", "len", "feature_extractor", "torch.cat().to.append", "torch.cat().to.append", "torch.cat().to.append", "numpy.array", "len", "len", "range", "cost.index", "predicted.append", "len", "torch.cat().to.view", "random.seed", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cost.append", "min", "zs_y.view().long.view", "random.seed", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cost.append", "min", "cost.append", "test_x.view", "test_y.view", "random.seed", "classifier", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cost.append", "min", "nn.MSELoss.item", "nn.MSELoss.item", "nn.MSELoss.item", "cost.index", "nn.MSELoss.item", "min", "nn.MSELoss.", "nn.MSELoss.", "nn.MSELoss.", "nn.MSELoss."], "function", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.F-MNIST.main.load_rotated_fmnist", "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.FC.FeatureCritic.train"], ["length_of_domain", "=", "len", "(", "train_x", "[", "0", "]", ")", "\n", "\n", "train_rst", "=", "[", "]", "\n", "train_ms_rst", "=", "[", "]", "\n", "zs_rst", "=", "[", "]", "\n", "zs_mse_rst", "=", "[", "]", "\n", "test_rst", "=", "[", "]", "\n", "test_mse_rst", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "train_x", ")", ")", ":", "\n", "        ", "for", "k", "in", "clas", ":", "\n", "            ", "idx", "=", "train_y", "[", "i", "]", "!=", "k", "\n", "train_y", "[", "i", "]", "=", "train_y", "[", "i", "]", "[", "idx", "]", "\n", "train_x", "[", "i", "]", "=", "train_x", "[", "i", "]", "[", "idx", "]", "\n", "\n", "\n", "", "", "zs_y", "=", "[", "]", "\n", "zs_x", "=", "[", "]", "\n", "for", "k", "in", "clas", ":", "\n", "        ", "idx", "=", "test_y", "==", "k", "\n", "zs_x", ".", "append", "(", "test_x", "[", "idx", "]", ")", "\n", "zs_y", ".", "append", "(", "test_y", "[", "idx", "]", ")", "\n", "\n", "idx", "=", "test_y", "!=", "k", "\n", "test_y", "=", "test_y", "[", "idx", "]", "\n", "test_x", "=", "test_x", "[", "idx", "]", "\n", "\n", "", "zs_x", "=", "torch", ".", "cat", "(", "zs_x", ")", "\n", "zs_y", "=", "torch", ".", "cat", "(", "zs_y", ")", "\n", "\n", "train_x", "=", "torch", ".", "cat", "(", "train_x", ")", "\n", "train_y", "=", "torch", ".", "cat", "(", "train_y", ")", "\n", "\n", "train_x", "=", "train_x", ".", "view", "(", "6", ",", "length_of_domain", "-", "800", ",", "1", ",", "28", ",", "28", ")", "\n", "train_y", "=", "train_y", ".", "view", "(", "6", ",", "length_of_domain", "-", "800", ")", ".", "long", "(", ")", "\n", "\n", "length_of_domain", "-=", "800", "\n", "\n", "batch_size", "=", "50", "\n", "print", "(", "'------------------------'", ")", "\n", "\n", "model", "=", "AGG", "(", ")", "\n", "for", "epoch", "in", "range", "(", "200", ")", ":", "\n", "        ", "x_train", "=", "[", "]", "\n", "y_train", "=", "[", "]", "\n", "\n", "random", "=", "np", ".", "random", ".", "permutation", "(", "length_of_domain", ")", "\n", "\n", "for", "i", "in", "range", "(", "6", ")", ":", "\n", "            ", "x", "=", "train_x", "[", "i", "]", "\n", "x_permuted", "=", "x", "[", "random", "]", "\n", "\n", "y", "=", "train_y", "[", "i", "]", "\n", "y_permuted", "=", "y", "[", "random", "]", "\n", "\n", "x_train", ".", "append", "(", "x_permuted", ")", "\n", "y_train", ".", "append", "(", "y_permuted", ")", "\n", "\n", "", "x_train", "=", "torch", ".", "cat", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "x_train", "=", "x_train", ".", "view", "(", "6", ",", "length_of_domain", ",", "1", ",", "28", ",", "28", ")", "\n", "\n", "y_train", "=", "torch", ".", "cat", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "y_train", ".", "view", "(", "6", ",", "length_of_domain", ")", "\n", "\n", "for", "i", "in", "range", "(", "6", ")", ":", "\n", "            ", "avg_cost", "=", "0", "\n", "for", "k", "in", "range", "(", "0", ",", "length_of_domain", ",", "batch_size", ")", ":", "\n", "\n", "                ", "left_x", "=", "x_train", "[", "i", "]", "[", "k", ":", "k", "+", "batch_size", ",", ":", ",", ":", ",", ":", "]", "\n", "labels", "=", "y_train", "[", "i", "]", "[", "k", ":", "k", "+", "batch_size", "]", "\n", "\n", "avg_cost", "+=", "model", ".", "train", "(", "left_x", ",", "labels", ",", "i", ")", "\n", "\n", "", "avg_cost", "=", "avg_cost", "/", "(", "length_of_domain", "/", "batch_size", ")", "\n", "\n", "", "print", "(", "avg_cost", ")", "\n", "\n", "if", "(", "epoch", "+", "1", ")", "%", "25", "==", "0", ":", "\n", "            ", "print", "(", "'After {} epochs'", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "feature_extractor", "=", "model", ".", "feature_extractor", "\n", "feature_extractor", ".", "eval", "(", ")", "\n", "\n", "classifier", "=", "model", ".", "Classifier", "\n", "classifier", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "x_train", "=", "x_train", ".", "view", "(", "6", "*", "length_of_domain", ",", "1", ",", "28", ",", "28", ")", "\n", "y_train", "=", "y_train", ".", "view", "(", "6", "*", "length_of_domain", ")", ".", "long", "(", ")", "\n", "\n", "train_tensor", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "x_train", ",", "y_train", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "train_tensor", ",", "batch_size", "=", "500", ",", "shuffle", "=", "False", ")", "\n", "\n", "y_train", "=", "[", "]", "\n", "train_out", "=", "[", "]", "\n", "classifier_out", "=", "[", "]", "\n", "for", "i", ",", "(", "X", ",", "Y", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "                    ", "feat", "=", "feature_extractor", "(", "X", ")", "\n", "out", "=", "classifier", "(", "feat", ")", "\n", "train_out", ".", "append", "(", "feat", ")", "\n", "classifier_out", ".", "append", "(", "out", ")", "\n", "y_train", ".", "append", "(", "Y", ")", "\n", "\n", "", "train_out", "=", "torch", ".", "cat", "(", "train_out", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "cat", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "classifier_out", "=", "torch", ".", "cat", "(", "classifier_out", ")", ".", "to", "(", "device", ")", "\n", "\n", "# PCA_TSNE(np.array(train_out.cpu()),np.array(y_train.cpu()))", "\n", "\n", "predicted", "=", "[", "]", "\n", "correct", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "y_train", ")", ")", ":", "\n", "                    ", "cost", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "                        ", "cost", ".", "append", "(", "criterion", "(", "train_out", "[", "i", "]", ",", "w2v", "[", "j", "]", ")", ".", "item", "(", ")", ")", "\n", "\n", "", "pred", "=", "cost", ".", "index", "(", "min", "(", "cost", ")", ")", "\n", "predicted", ".", "append", "(", "pred", ")", "\n", "if", "pred", "==", "y_train", "[", "i", "]", ":", "\n", "                        ", "correct", "+=", "1", "\n", "\n", "", "", "accuracy", "=", "correct", "/", "len", "(", "y_train", ")", "\n", "print", "(", "'Train MSE Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "train_ms_rst", ".", "append", "(", "100", "*", "accuracy", ")", "\n", "\n", "_", ",", "predicted", "=", "torch", ".", "max", "(", "classifier_out", ",", "dim", "=", "1", ")", "\n", "correct", "=", "sum", "(", "np", ".", "array", "(", "(", "predicted", "==", "y_train", ")", ".", "cpu", "(", ")", ")", ")", "\n", "# print(correct)", "\n", "accuracy", "=", "correct", "/", "len", "(", "y_train", ")", "\n", "print", "(", "'Train Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "train_rst", ".", "append", "(", "100", "*", "accuracy", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "zs_x", "=", "zs_x", ".", "view", "(", "12000", ",", "1", ",", "28", ",", "28", ")", "\n", "zs_y", "=", "zs_y", ".", "view", "(", "12000", ")", ".", "long", "(", ")", "\n", "\n", "zs_tensor", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "zs_x", ",", "zs_y", ")", "\n", "zs_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "zs_tensor", ",", "batch_size", "=", "500", ",", "shuffle", "=", "False", ")", "\n", "\n", "y_zs", "=", "[", "]", "\n", "zs_out", "=", "[", "]", "\n", "zs_classifier_out", "=", "[", "]", "\n", "for", "i", ",", "(", "X", ",", "Y", ")", "in", "enumerate", "(", "zs_loader", ")", ":", "\n", "                    ", "feat", "=", "feature_extractor", "(", "X", ")", "\n", "out", "=", "classifier", "(", "feat", ")", "\n", "zs_out", ".", "append", "(", "feat", ")", "\n", "zs_classifier_out", ".", "append", "(", "out", ")", "\n", "y_zs", ".", "append", "(", "Y", ")", "\n", "\n", "", "zs_out", "=", "torch", ".", "cat", "(", "zs_out", ")", ".", "to", "(", "device", ")", "\n", "y_zs", "=", "torch", ".", "cat", "(", "y_zs", ")", ".", "to", "(", "device", ")", "\n", "zs_classifier_out", "=", "torch", ".", "cat", "(", "zs_classifier_out", ")", ".", "to", "(", "device", ")", "\n", "\n", "# PCA_TSNE(np.array(train_out.cpu()),np.array(y_train.cpu()))", "\n", "\n", "predicted", "=", "[", "]", "\n", "correct", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "y_zs", ")", ")", ":", "\n", "                    ", "cost", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "                        ", "cost", ".", "append", "(", "criterion", "(", "zs_out", "[", "i", "]", ",", "w2v", "[", "j", "]", ")", ".", "item", "(", ")", ")", "\n", "", "pred", "=", "cost", ".", "index", "(", "min", "(", "cost", ")", ")", "\n", "predicted", ".", "append", "(", "pred", ")", "\n", "if", "pred", "==", "y_zs", "[", "i", "]", ":", "\n", "                        ", "correct", "+=", "1", "\n", "# print(predicted)", "\n", "", "", "accuracy", "=", "correct", "/", "len", "(", "y_zs", ")", "\n", "print", "(", "'ZS MSE Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "\n", "predicted", "=", "[", "]", "\n", "correct", "=", "0", "\n", "correct1", "=", "0", "\n", "correct2", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "y_zs", ")", ")", ":", "\n", "                    ", "cost", "=", "[", "]", "\n", "for", "j", "in", "clas", ":", "\n", "                        ", "cost", ".", "append", "(", "criterion", "(", "zs_out", "[", "i", "]", ",", "w2v", "[", "j", "]", ")", ".", "item", "(", ")", ")", "\n", "", "pred", "=", "clas", "[", "cost", ".", "index", "(", "min", "(", "cost", ")", ")", "]", "\n", "predicted", ".", "append", "(", "pred", ")", "\n", "if", "pred", "==", "y_zs", "[", "i", "]", ":", "\n", "                        ", "correct", "+=", "1", "\n", "if", "y_zs", "[", "i", "]", "==", "clas", "[", "0", "]", ":", "\n", "                            ", "correct1", "+=", "1", "\n", "", "else", ":", "\n", "                            ", "correct2", "+=", "1", "\n", "\n", "# print(predicted)", "\n", "", "", "", "accuracy", "=", "correct", "/", "len", "(", "y_zs", ")", "\n", "print", "(", "'ZS MSE Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "print", "(", "'ZS MSE Accuracy of the model: {}.;;;{}:{} %'", ".", "format", "(", "accuracy", ",", "clas", "[", "0", "]", ",", "correct1", "/", "6000", ")", ")", "\n", "print", "(", "'ZS MSE Accuracy of the model: {},;;;{}:{} %'", ".", "format", "(", "accuracy", ",", "clas", "[", "1", "]", ",", "correct2", "/", "6000", ")", ")", "\n", "zs_mse_rst", ".", "append", "(", "accuracy", ")", "\n", "\n", "_", ",", "predicted", "=", "torch", ".", "max", "(", "zs_classifier_out", ",", "dim", "=", "1", ")", "\n", "correct", "=", "sum", "(", "np", ".", "array", "(", "(", "predicted", "==", "y_zs", ")", ".", "cpu", "(", ")", ")", ")", "\n", "# print(correct)", "\n", "accuracy", "=", "correct", "/", "len", "(", "y_zs", ")", "\n", "print", "(", "'ZS Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "zs_rst", ".", "append", "(", "100", "*", "accuracy", ")", "\n", "\n", "# PCA_TSNE(np.array(torch.cat((train_out, zs_out), 0).cpu()),(np.array(torch.cat((y_train, y_zs), 0).cpu())))", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "                ", "x_test", "=", "test_x", ".", "view", "(", "(", "48000", ",", "1", ",", "28", ",", "28", ")", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "test_y", ".", "view", "(", "48000", ")", ".", "to", "(", "device", ")", "\n", "\n", "test_tensor", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "x_test", ",", "y_test", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "test_tensor", ",", "batch_size", "=", "1000", ",", "shuffle", "=", "False", ")", "\n", "\n", "y_test", "=", "[", "]", "\n", "test_out", "=", "[", "]", "\n", "classifier_out", "=", "[", "]", "\n", "for", "i", ",", "(", "X", ",", "Y", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "                    ", "out", "=", "feature_extractor", "(", "X", ")", "\n", "test_out", ".", "append", "(", "out", ")", "\n", "classifier_out", ".", "append", "(", "classifier", "(", "out", ")", ")", "\n", "y_test", ".", "append", "(", "Y", ")", "\n", "\n", "", "test_out", "=", "torch", ".", "cat", "(", "test_out", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "cat", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "classifier_out", "=", "torch", ".", "cat", "(", "classifier_out", ")", ".", "to", "(", "device", ")", "\n", "\n", "_", ",", "predicted", "=", "torch", ".", "max", "(", "classifier_out", ",", "dim", "=", "1", ")", "\n", "correct", "=", "sum", "(", "np", ".", "array", "(", "(", "predicted", "==", "y_test", ")", ".", "cpu", "(", ")", ")", ")", "\n", "\n", "accuracy", "=", "correct", "/", "len", "(", "y_test", ")", "\n", "print", "(", "'Test Accuracy of the model {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "test_rst", ".", "append", "(", "100", "*", "accuracy", ")", "\n", "\n", "# PCA_TSNE(np.array(test_out.cpu()),np.array(y_test.cpu()))", "\n", "\n", "predicted", "=", "[", "]", "\n", "correct", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "y_test", ")", ")", ":", "\n", "                    ", "cost", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "                        ", "cost", ".", "append", "(", "criterion", "(", "test_out", "[", "i", "]", ",", "w2v", "[", "j", "]", ")", ".", "item", "(", ")", ")", "\n", "\n", "", "pred", "=", "cost", ".", "index", "(", "min", "(", "cost", ")", ")", "\n", "predicted", ".", "append", "(", "pred", ")", "\n", "if", "pred", "==", "y_test", "[", "i", "]", ":", "\n", "                        ", "correct", "+=", "1", "\n", "\n", "", "", "accuracy", "=", "correct", "/", "len", "(", "y_test", ")", "\n", "print", "(", "'Test MSE Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "test_mse_rst", ".", "append", "(", "100", "*", "accuracy", ")", "\n", "del", "test_out", "\n", "\n", "", "", "", "return", "train_rst", ",", "train_ms_rst", ",", "zs_rst", ",", "zs_mse_rst", ",", "test_rst", ",", "test_mse_rst", "\n", "\n", "\n", "", "classes", "=", "[", "'Tshirt'", ",", "'Trouser'", ",", "'Pullover'", ",", "'Dress'", ",", "'Coat'", ",", "'Sandal'", ",", "'Shirt'", ",", "'Sneaker'", ",", "'Bag'", ",", "'Boot'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.lib.utils.Flatten.forward": [[10, 13], ["x.size", "x.view"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "# read in N, C, H, W", "\n", "return", "x", ".", "view", "(", "N", ",", "-", "1", ")", "# \"flatten\" the C * H * W values into a single vector per image", "\n", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.lib.utils.Unflatten.__init__": [[21, 27], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.__init__"], ["        ", "super", "(", "Unflatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "N", "=", "N", "\n", "self", ".", "C", "=", "C", "\n", "self", ".", "H", "=", "H", "\n", "self", ".", "W", "=", "W", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.lib.utils.Unflatten.forward": [[28, 30], ["x.view"], "methods", ["None"], ["        ", "return", "x", ".", "view", "(", "self", ".", "N", ",", "self", ".", "C", ",", "self", ".", "H", ",", "self", ".", "W", ")", "\n", "\n", "", "", "def", "PCA_TSNE", "(", "output", ",", "y", ")", ":", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.lib.utils.PCA_TSNE": [[33, 61], ["sklearn.decomposition.PCA", "sklearn.decomposition.PCA.fit_transform", "print", "matplotlib.subplots", "numpy.unique", "ax.legend", "matplotlib.show", "sklearn.manifold.TSNE().fit_transform", "matplotlib.subplots", "numpy.unique", "ax.legend", "matplotlib.show", "numpy.where", "ax.scatter", "numpy.where", "ax.scatter", "sklearn.manifold.TSNE"], "function", ["None"], ["\n", "pca_model", "=", "PCA", "(", ")", "\n", "X_embedded", "=", "pca_model", ".", "fit_transform", "(", "output", ")", "\n", "print", "(", "'Variance Ratio:'", ",", "pca_model", ".", "explained_variance_ratio_", "[", ":", "2", "]", ")", "\n", "\n", "\n", "ix1", "=", "X_embedded", "[", ":", ",", "0", "]", "\n", "ix2", "=", "X_embedded", "[", ":", ",", "1", "]", "\n", "cmap", "=", "[", "'tab:blue'", ",", "'tab:orange'", ",", "'tab:green'", ",", "'tab:red'", ",", "'tab:purple'", ",", "'tab:brown'", ",", "'tab:pink'", ",", "'tab:gray'", ",", "\n", "'tab:olive'", ",", "'tab:cyan'", "]", "\n", "classes", "=", "[", "'airplane'", ",", "'car'", ",", "'bird'", ",", "'cat'", ",", "'deer'", ",", "'dog'", ",", "'frog'", ",", "'horse'", ",", "'ship'", ",", "'truck'", "]", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "for", "g", "in", "np", ".", "unique", "(", "y", ")", ":", "\n", "        ", "ix", "=", "np", ".", "where", "(", "y", "==", "g", ")", "\n", "ax", ".", "scatter", "(", "ix1", "[", "ix", "]", ",", "ix2", "[", "ix", "]", ",", "c", "=", "cmap", "[", "g", "]", ",", "label", "=", "classes", "[", "g", "]", ",", "s", "=", "1", ")", "\n", "", "ax", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n", "\n", "\n", "X_embedded", "=", "TSNE", "(", "n_components", "=", "2", ")", ".", "fit_transform", "(", "output", ")", "\n", "ix1", "=", "X_embedded", "[", ":", ",", "0", "]", "\n", "ix2", "=", "X_embedded", "[", ":", ",", "1", "]", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "for", "g", "in", "np", ".", "unique", "(", "y", ")", ":", "\n", "        ", "ix", "=", "np", ".", "where", "(", "y", "==", "g", ")", "\n", "ax", ".", "scatter", "(", "ix1", "[", "ix", "]", ",", "ix2", "[", "ix", "]", ",", "label", "=", "classes", "[", "g", "]", ",", "s", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.AGG.AGG.__init__": [[18, 38], ["super().__init__", "featureExtractor.featureExtractor.featureExtractor().to", "classifier.Classifier().to", "AGG.AGG.Classifier.apply", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.MSELoss", "torch.MSELoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "list", "list", "featureExtractor.featureExtractor.featureExtractor", "classifier.Classifier", "AGG.AGG.feature_extractor.parameters", "AGG.AGG.Classifier.parameters"], "methods", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.__init__", "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.featureExtractor.featureExtractor"], ["        ", "super", "(", "AGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "learning_rate", "=", "0.0001", "\n", "weight_decay", "=", "0.00005", "\n", "\n", "#RMSPROP", "\n", "# learning_rate = 0.0003", "\n", "# weight_decay = 5e-6", "\n", "\n", "self", ".", "feature_extractor", "=", "featureExtractor", "(", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "feature_extractor", ".", "apply", "(", "Xavier", ")", "\n", "\n", "self", ".", "epoch", "=", "0", "\n", "self", ".", "Classifier", "=", "Classifier", "(", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "Classifier", ".", "apply", "(", "Xavier", ")", "\n", "self", ".", "params", "=", "list", "(", "self", ".", "feature_extractor", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "Classifier", ".", "parameters", "(", ")", ")", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "Adamax", "(", "params", "=", "self", ".", "params", ",", "lr", "=", "learning_rate", ",", "weight_decay", "=", "weight_decay", ")", "\n", "\n", "\n", "self", ".", "criterion_mse", "=", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "criterion_ce", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.AGG.AGG.train": [[40, 57], ["AGG.AGG.optimizer.zero_grad", "AGG.AGG.feature_extractor", "AGG.AGG.criterion_mse", "AGG.AGG.Classifier", "AGG.AGG.criterion_ce", "cost.backward", "AGG.AGG.optimizer.step", "AGG.AGG.optimizer.zero_grad", "cost.data.item"], "methods", ["None"], ["\n", "\n", "", "def", "train", "(", "self", ",", "X", ",", "Y", ",", "domainId", ")", ":", "\n", "        ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "out1", "=", "self", ".", "feature_extractor", "(", "X", ")", "\n", "loss1", "=", "self", ".", "criterion_mse", "(", "out1", ",", "self", ".", "vector", "[", "Y", "]", ")", "\n", "\n", "out2", "=", "self", ".", "Classifier", "(", "out1", ")", "\n", "loss2", "=", "self", ".", "criterion_ce", "(", "out2", ",", "Y", ")", "\n", "\n", "cost", "=", "loss1", "+", "loss2", "\n", "\n", "cost", ".", "backward", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.AGG.Xavier": [[8, 15], ["m.weight.data.uniform_", "m.bias.data.fill_", "m.weight.data.size", "m.weight.data.size", "math.sqrt", "math.sqrt"], "function", ["None"], ["def", "Xavier", "(", "m", ")", ":", "\n", "    ", "if", "m", ".", "__class__", ".", "__name__", "==", "'Linear'", ":", "\n", "        ", "fan_in", ",", "fan_out", "=", "m", ".", "weight", ".", "data", ".", "size", "(", "1", ")", ",", "m", ".", "weight", ".", "data", ".", "size", "(", "0", ")", "\n", "std", "=", "1.0", "*", "math", ".", "sqrt", "(", "2.0", "/", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "a", "=", "math", ".", "sqrt", "(", "3.0", ")", "*", "std", "\n", "m", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "a", ",", "a", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.featureExtractor.FeatureExtractor.__init__": [[6, 55], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Dropout", "torch.Linear", "torch.ReLU", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.__init__"], ["class", "FeatureExtractor", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", ")", ":", "\n", "        ", "super", "(", "FeatureExtractor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv2d", "(", "1", ",", "32", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "\n", "# nn.MaxPool2d(kernel_size=2),", "\n", "\n", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", ")", "\n", "\n", "self", ".", "linear", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", "*", "7", "*", "7", ",", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "\n", "nn", ".", "Linear", "(", "4096", ",", "300", ")", ",", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.featureExtractor.FeatureExtractor.forward": [[57, 62], ["featureExtractor.FeatureExtractor.features", "featureExtractor.FeatureExtractor.view", "featureExtractor.FeatureExtractor.linear", "featureExtractor.FeatureExtractor.size"], "methods", ["None"], ["\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "linear", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.featureExtractor.featureExtractor": [[64, 67], ["featureExtractor.FeatureExtractor"], "function", ["None"], ["\n", "\n", "", "", "def", "featureExtractor", "(", "**", "kwargs", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Classifier.__init__": [[5, 10], ["torch.Module.__init__", "torch.Sequential", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Classifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "300", ",", "10", ")", ",", "\n", "nn", ".", "Softmax", "(", ")", ",", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Classifier.forward": [[12, 15], ["classifier.Classifier.classifier"], "methods", ["None"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "classifier", "(", "x", ")", ".", "to", "(", "device", ")", "\n", "return", "out", ""]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.encoder.Encoder.__init__": [[6, 51], ["torch.Module.__init__", "torch.Sequential().to", "torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "lib.utils.Flatten", "torch.Linear().to", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "32", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "\n", "nn", ".", "MaxPool2d", "(", "2", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ",", "padding_mode", "=", "'same'", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "\n", "Flatten", "(", ")", ",", "\n", "\n", "nn", ".", "Linear", "(", "12544", ",", "300", ",", "bias", "=", "True", ")", ".", "to", "(", "device", ")", ",", "\n", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.encoder.Encoder.forward": [[52, 56], ["encoder.Encoder.encoder().to", "encoder.Encoder.encoder"], "methods", ["None"], ["        ", "out", "=", "self", ".", "encoder", "(", "x", ")", ".", "to", "(", "device", ")", "\n", "\n", "return", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.decoder.Decoder.__init__": [[5, 47], ["torch.Module.__init__", "torch.Sequential().to", "torch.Sequential", "torch.Linear().to", "torch.ReLU", "lib.utils.Unflatten", "torch.ConvTranspose2d", "torch.ReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Upsample", "torch.ConvTranspose2d", "torch.ReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Upsample", "torch.ConvTranspose2d", "torch.ReLU", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Upsample", "torch.ConvTranspose2d", "torch.ReLU", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "300", ",", "12544", ",", "bias", "=", "True", ")", ".", "to", "(", "device", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "\n", "Unflatten", "(", "N", "=", "-", "1", ",", "C", "=", "256", ",", "H", "=", "7", ",", "W", "=", "7", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "256", ",", "128", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "128", ",", "128", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "128", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "64", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "64", ",", "32", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "32", ",", "1", ",", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "decoder", "(", "x", ")", ".", "to", "(", "device", ")", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.decoder.Decoder.forward": [[48, 51], ["decoder.Decoder.decoder().to", "decoder.Decoder.decoder"], "methods", ["None"], ["return", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.mtae.MTAE.__init__": [[17, 41], ["super().__init__", "encoder.Encoder().to", "mtae.MTAE.Encoder.apply", "range", "torch.MSELoss", "torch.MSELoss", "mtae.MTAE.decoders.append", "mtae.MTAE.decoders[].apply", "mtae.MTAE.optimizers.append", "encoder.Encoder", "decoder.Decoder().to", "list", "list", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "mtae.MTAE.Encoder.parameters", "mtae.MTAE.decoders[].parameters", "decoder.Decoder"], "methods", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MTAE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "learning_rate", "=", "0.0001", "\n", "weight_decay", "=", "5e-6", "\n", "\n", "self", ".", "Encoder", "=", "Encoder", "(", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "Encoder", ".", "apply", "(", "Xavier", ")", "\n", "\n", "self", ".", "decoders", "=", "[", "]", "\n", "self", ".", "optimizers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "            ", "self", ".", "decoders", ".", "append", "(", "Decoder", "(", ")", ".", "to", "(", "device", ")", ")", "\n", "self", ".", "decoders", "[", "i", "]", ".", "apply", "(", "Xavier", ")", "\n", "self", ".", "params", "=", "list", "(", "self", ".", "Encoder", ".", "parameters", "(", ")", ")", "+", "list", "(", "self", ".", "decoders", "[", "i", "]", ".", "parameters", "(", ")", ")", "\n", "self", ".", "optimizers", ".", "append", "(", "torch", ".", "optim", ".", "Adamax", "(", "params", "=", "self", ".", "params", ",", "lr", "=", "learning_rate", ",", "weight_decay", "=", "weight_decay", ")", ")", "\n", "\n", "\n", "", "self", ".", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "self", ".", "vector", "=", "w2v", "\n", "\n", "", "def", "train", "(", "self", ",", "X", ",", "Y", ",", "labels", ",", "domainId", ")", ":", "\n", "        ", "self", ".", "optimizers", "[", "domainId", "]", ".", "zero_grad", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.mtae.MTAE.train": [[42, 59], ["mtae.MTAE.optimizers[].zero_grad", "mtae.MTAE.Encoder", "mtae.MTAE.criterion", "mtae.MTAE.criterion", "cost.backward", "mtae.MTAE.optimizers[].step", "mtae.MTAE.optimizers[].zero_grad", "cost.data.item"], "methods", ["None"], ["\n", "out1", "=", "self", ".", "Encoder", "(", "X", ")", "\n", "loss1", "=", "self", ".", "criterion", "(", "out1", ",", "self", ".", "vector", "[", "labels", "]", ")", "\n", "\n", "\n", "out2", "=", "self", ".", "decoders", "[", "domainId", "]", "(", "out1", ")", "\n", "loss2", "=", "self", ".", "criterion", "(", "out2", ",", "Y", ")", "\n", "\n", "cost", "=", "loss1", "+", "loss2", "\n", "\n", "cost", ".", "backward", "(", ")", "\n", "\n", "self", ".", "optimizers", "[", "domainId", "]", ".", "step", "(", ")", "\n", "self", ".", "optimizers", "[", "domainId", "]", ".", "zero_grad", "(", ")", "\n", "\n", "return", "cost", ".", "data", ".", "item", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.mtae.Xavier": [[7, 14], ["m.weight.data.uniform_", "m.bias.data.fill_", "m.weight.data.size", "m.weight.data.size", "math.sqrt", "math.sqrt"], "function", ["None"], ["def", "Xavier", "(", "m", ")", ":", "\n", "    ", "if", "m", ".", "__class__", ".", "__name__", "==", "'Linear'", ":", "\n", "        ", "fan_in", ",", "fan_out", "=", "m", ".", "weight", ".", "data", ".", "size", "(", "1", ")", ",", "m", ".", "weight", ".", "data", ".", "size", "(", "0", ")", "\n", "std", "=", "1.0", "*", "math", ".", "sqrt", "(", "2.0", "/", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "a", "=", "math", ".", "sqrt", "(", "3.0", ")", "*", "std", "\n", "m", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "a", ",", "a", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.FC.FeatureCritic.__init__": [[18, 53], ["super().__init__", "featureExtractor.featureExtractor.featureExtractor().to", "FC.FeatureCritic.feature_extractor.apply", "classifier.Classifier().to", "FC.FeatureCritic.Classifier.apply", "classifier.Critic_Network_MLP().to", "FC.FeatureCritic.Critic_Network_MLP.apply", "list", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "list", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "list", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.optim.Adamax", "torch.MSELoss", "torch.MSELoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "FC.FeatureCritic.feature_extractor.parameters", "FC.FeatureCritic.Classifier.parameters", "FC.FeatureCritic.Critic_Network_MLP.parameters", "featureExtractor.featureExtractor.featureExtractor", "classifier.Classifier", "classifier.Critic_Network_MLP"], "methods", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.__init__", "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.featureExtractor.featureExtractor"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "FeatureCritic", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "learning_rate", "=", "0.0001", "\n", "weight_decay", "=", "0.00005", "\n", "\n", "self", ".", "feature_extractor", "=", "featureExtractor", "(", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "feature_extractor", ".", "apply", "(", "Xavier", ")", "\n", "\n", "self", ".", "epoch", "=", "0", "\n", "\n", "self", ".", "Classifier", "=", "Classifier", "(", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "Classifier", ".", "apply", "(", "Xavier", ")", "\n", "\n", "self", ".", "Critic_Network_MLP", "=", "Critic_Network_MLP", "(", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "Critic_Network_MLP", ".", "apply", "(", "Xavier", ")", "\n", "\n", "self", ".", "params", "=", "list", "(", "self", ".", "feature_extractor", ".", "parameters", "(", ")", ")", "\n", "self", ".", "optimizer_interim_feature_extractor", "=", "torch", ".", "optim", ".", "Adamax", "(", "params", "=", "self", ".", "params", ",", "lr", "=", "learning_rate", ",", "weight_decay", "=", "0.00001", ")", "\n", "self", ".", "optimizer_final_feature_extractor", "=", "torch", ".", "optim", ".", "Adamax", "(", "params", "=", "self", ".", "params", ",", "lr", "=", "learning_rate", ",", "weight_decay", "=", "0.00001", ")", "\n", "\n", "self", ".", "params", "=", "list", "(", "self", ".", "Classifier", ".", "parameters", "(", ")", ")", "\n", "self", ".", "optimizer_interim_classifier", "=", "torch", ".", "optim", ".", "Adamax", "(", "params", "=", "self", ".", "params", ",", "lr", "=", "learning_rate", ",", "weight_decay", "=", "0", ")", "\n", "self", ".", "optimizer_final_classifier", "=", "torch", ".", "optim", ".", "Adamax", "(", "params", "=", "self", ".", "params", ",", "lr", "=", "learning_rate", ",", "weight_decay", "=", "0", ")", "\n", "\n", "self", ".", "params", "=", "list", "(", "self", ".", "Critic_Network_MLP", ".", "parameters", "(", ")", ")", "\n", "self", ".", "optimizer_regularizer", "=", "torch", ".", "optim", ".", "Adamax", "(", "params", "=", "self", ".", "params", ",", "lr", "=", "learning_rate", ")", "\n", "\n", "self", ".", "criterion_mse", "=", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "criterion_ce", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "self", ".", "vector", "=", "w2v", "\n", "\n", "", "def", "train", "(", "self", ",", "D_x_trn", ",", "D_y_trn", ",", "D_x_val", ",", "D_y_val", ")", ":", "\n", "        ", "length_of_domain", "=", "len", "(", "D_y_val", "[", "0", "]", ")", "\n", "\n", "batch_size", "=", "50", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.FC.FeatureCritic.train": [[55, 142], ["len", "range", "print", "FC.FeatureCritic.optimizer_interim_feature_extractor.zero_grad", "FC.FeatureCritic.optimizer_interim_classifier.zero_grad", "FC.FeatureCritic.optimizer_regularizer.zero_grad", "FC.FeatureCritic.feature_extractor.state_dict", "FC.FeatureCritic.Classifier.state_dict", "range", "loss.backward", "FC.FeatureCritic.optimizer_interim_feature_extractor.step", "FC.FeatureCritic.optimizer_interim_classifier.step", "FC.FeatureCritic.optimizer_interim_feature_extractor.zero_grad", "FC.FeatureCritic.optimizer_interim_classifier.zero_grad", "FC.FeatureCritic.feature_extractor.state_dict", "FC.FeatureCritic.Classifier.state_dict", "loss_aux.backward", "FC.FeatureCritic.optimizer_interim_feature_extractor.step", "FC.FeatureCritic.optimizer_interim_classifier.step", "FC.FeatureCritic.optimizer_interim_feature_extractor.zero_grad", "FC.FeatureCritic.optimizer_interim_classifier.zero_grad", "FC.FeatureCritic.optimizer_regularizer.zero_grad", "range", "FC.FeatureCritic.feature_extractor.load_state_dict", "FC.FeatureCritic.Classifier.load_state_dict", "range", "range", "meta_loss.backward", "FC.FeatureCritic.optimizer_regularizer.step", "FC.FeatureCritic.feature_extractor.load_state_dict", "FC.FeatureCritic.Classifier.load_state_dict", "FC.FeatureCritic.optimizer_final_feature_extractor.zero_grad", "FC.FeatureCritic.optimizer_final_classifier.zero_grad", "loss_ce.backward", "FC.FeatureCritic.optimizer_final_classifier.step", "loss_aux.backward", "FC.FeatureCritic.optimizer_final_feature_extractor.step", "len", "FC.FeatureCritic.feature_extractor", "FC.FeatureCritic.Classifier", "FC.FeatureCritic.criterion_mse", "FC.FeatureCritic.criterion_ce", "FC.FeatureCritic.Critic_Network_MLP", "len", "FC.FeatureCritic.feature_extractor", "FC.FeatureCritic.Classifier", "loss_new_val.append", "len", "FC.FeatureCritic.feature_extractor", "FC.FeatureCritic.Classifier", "loss_old_val.append", "len", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh.sum", "torch.tanh.sum", "FC.FeatureCritic.criterion_ce", "FC.FeatureCritic.criterion_mse", "FC.FeatureCritic.criterion_ce", "FC.FeatureCritic.criterion_mse"], "methods", ["None"], ["\n", "            ", "self", ".", "optimizer_interim_feature_extractor", ".", "zero_grad", "(", ")", "\n", "self", ".", "optimizer_interim_classifier", ".", "zero_grad", "(", ")", "\n", "self", ".", "optimizer_regularizer", ".", "zero_grad", "(", ")", "\n", "\n", "unmodified_feature_extractor", "=", "self", ".", "feature_extractor", ".", "state_dict", "(", ")", "\n", "unmodified_classifier", "=", "self", ".", "Classifier", ".", "state_dict", "(", ")", "\n", "\n", "loss_mse", "=", "0", "\n", "loss_ce", "=", "0", "\n", "loss_aux", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "D_x_trn", ")", ")", ":", "\n", "                ", "features", "=", "self", ".", "feature_extractor", "(", "D_x_trn", "[", "i", "]", "[", "k", ":", "k", "+", "50", "]", ")", "\n", "out", "=", "self", ".", "Classifier", "(", "features", ")", "\n", "\n", "loss_mse", "+=", "self", ".", "criterion_mse", "(", "features", ",", "self", ".", "vector", "[", "D_y_trn", "[", "i", "]", "[", "k", ":", "k", "+", "50", "]", "]", ")", "\n", "loss_ce", "+=", "self", ".", "criterion_ce", "(", "out", ",", "D_y_trn", "[", "i", "]", "[", "k", ":", "k", "+", "50", "]", ")", "\n", "loss_aux", "+=", "self", ".", "Critic_Network_MLP", "(", "features", ")", "\n", "\n", "", "loss", "=", "loss_mse", "+", "loss_ce", "\n", "loss", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "self", ".", "optimizer_interim_feature_extractor", ".", "step", "(", ")", "\n", "self", ".", "optimizer_interim_classifier", ".", "step", "(", ")", "\n", "\n", "self", ".", "optimizer_interim_feature_extractor", ".", "zero_grad", "(", ")", "\n", "self", ".", "optimizer_interim_classifier", ".", "zero_grad", "(", ")", "\n", "\n", "old_feature_extractor", "=", "self", ".", "feature_extractor", ".", "state_dict", "(", ")", "\n", "old_classifier", "=", "self", ".", "Classifier", ".", "state_dict", "(", ")", "\n", "\n", "loss_aux", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "\n", "self", ".", "optimizer_interim_feature_extractor", ".", "step", "(", ")", "\n", "self", ".", "optimizer_interim_classifier", ".", "step", "(", ")", "\n", "\n", "self", ".", "optimizer_interim_feature_extractor", ".", "zero_grad", "(", ")", "\n", "self", ".", "optimizer_interim_classifier", ".", "zero_grad", "(", ")", "\n", "\n", "self", ".", "optimizer_regularizer", ".", "zero_grad", "(", ")", "\n", "\n", "loss_new_val", "=", "[", "]", "\n", "meta_loss", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "D_x_val", ")", ")", ":", "\n", "                ", "features", "=", "self", ".", "feature_extractor", "(", "D_x_val", "[", "i", "]", "[", "k", ":", "k", "+", "50", "]", ")", "\n", "out", "=", "self", ".", "Classifier", "(", "features", ")", "\n", "loss_new_val", ".", "append", "(", "self", ".", "criterion_ce", "(", "out", ",", "D_y_val", "[", "i", "]", "[", "k", ":", "k", "+", "50", "]", ")", "+", "self", ".", "criterion_mse", "(", "features", ",", "self", ".", "vector", "[", "D_y_val", "[", "i", "]", "[", "k", ":", "k", "+", "50", "]", "]", ")", ")", "\n", "\n", "", "self", ".", "feature_extractor", ".", "load_state_dict", "(", "old_feature_extractor", ")", "\n", "self", ".", "Classifier", ".", "load_state_dict", "(", "old_classifier", ")", "\n", "\n", "loss_old_val", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "D_x_val", ")", ")", ":", "\n", "                ", "features", "=", "self", ".", "feature_extractor", "(", "D_x_val", "[", "i", "]", "[", "k", ":", "k", "+", "50", "]", ")", "\n", "out", "=", "self", ".", "Classifier", "(", "features", ")", "\n", "loss_old_val", ".", "append", "(", "self", ".", "criterion_ce", "(", "out", ",", "D_y_val", "[", "i", "]", "[", "k", ":", "k", "+", "50", "]", ")", "+", "self", ".", "criterion_mse", "(", "features", ",", "self", ".", "vector", "[", "D_y_val", "[", "i", "]", "[", "k", ":", "k", "+", "50", "]", "]", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "D_x_val", ")", ")", ":", "\n", "\n", "                ", "reward", "=", "loss_new_val", "[", "i", "]", "-", "loss_old_val", "[", "i", "]", "\n", "# calculate the updating rule of omega, here is the max function of h.", "\n", "utility", "=", "torch", ".", "tanh", "(", "reward", ")", "\n", "# so, here is the min value transfering to the backpropogation.", "\n", "loss_held_out", "=", "utility", ".", "sum", "(", ")", "\n", "meta_loss", "+=", "loss_held_out", "\n", "\n", "", "meta_loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer_regularizer", ".", "step", "(", ")", "\n", "\n", "self", ".", "feature_extractor", ".", "load_state_dict", "(", "unmodified_feature_extractor", ")", "\n", "self", ".", "Classifier", ".", "load_state_dict", "(", "unmodified_classifier", ")", "\n", "\n", "self", ".", "optimizer_final_feature_extractor", ".", "zero_grad", "(", ")", "\n", "self", ".", "optimizer_final_classifier", ".", "zero_grad", "(", ")", "\n", "\n", "loss_ce", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "self", ".", "optimizer_final_classifier", ".", "step", "(", ")", "\n", "\n", "loss_aux", ".", "backward", "(", ")", "\n", "self", ".", "optimizer_final_feature_extractor", ".", "step", "(", ")", "\n", "\n", "", "print", "(", "loss_aux", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.FC.Xavier": [[8, 15], ["m.weight.data.uniform_", "m.bias.data.fill_", "m.weight.data.size", "m.weight.data.size", "math.sqrt", "math.sqrt"], "function", ["None"], ["def", "Xavier", "(", "m", ")", ":", "\n", "    ", "if", "m", ".", "__class__", ".", "__name__", "==", "'Linear'", ":", "\n", "        ", "fan_in", ",", "fan_out", "=", "m", ".", "weight", ".", "data", ".", "size", "(", "1", ")", ",", "m", ".", "weight", ".", "data", ".", "size", "(", "0", ")", "\n", "std", "=", "1.0", "*", "math", ".", "sqrt", "(", "2.0", "/", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "a", "=", "math", ".", "sqrt", "(", "3.0", ")", "*", "std", "\n", "m", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "a", ",", "a", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.__init__": [[17, 21], ["torch.Module.__init__", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.__init__"], []], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.classifier.Critic_Network_MLP.forward": [[21, 25], ["torch.relu", "torch.functional.softplus", "torch.mean", "classifier.Critic_Network_MLP.fc1", "classifier.Critic_Network_MLP.fc2"], "methods", ["None"], []], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.CIFAR-10.main.load_rotated_cifar": [[21, 72], ["range", "range", "random_p.append", "torchvision.Compose", "torchvision.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "next", "range", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "numpy.random.permutation", "iter", "targets[].to", "data[].to", "train_x.append", "train_y.append", "torchvision.RandomRotation", "torchvision.ToTensor", "torch.cat().to.append", "torch.cat().to.append", "torch.cat().to.append", "torch.cat().to.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "function", ["None"], ["    ", "train_x", "=", "[", "]", "\n", "test_x", "=", "[", "]", "\n", "train_y", "=", "[", "]", "\n", "test_y", "=", "[", "]", "\n", "random", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "random", ".", "append", "(", "np", ".", "random", ".", "permutation", "(", "6000", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "7", ")", ":", "\n", "        ", "angle", "=", "360", "-", "15", "*", "i", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "RandomRotation", "(", "degrees", "=", "(", "angle", ",", "angle", ")", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "fmnist_train", "=", "datasets", ".", "FashionMNIST", "(", "root", "=", "'../../data/'", ",", "download", "=", "False", ",", "train", "=", "True", ",", "transform", "=", "transform", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "fmnist_train", ",", "batch_size", "=", "60000", ",", "shuffle", "=", "False", ")", "\n", "\n", "full_data", "=", "next", "(", "iter", "(", "train_loader", ")", ")", "\n", "\n", "targets", "=", "full_data", "[", "1", "]", "\n", "\n", "data", "=", "full_data", "[", "0", "]", "\n", "\n", "data_x", "=", "[", "]", "\n", "data_y", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "            ", "idx", "=", "targets", "==", "j", "\n", "jth_target", "=", "targets", "[", "idx", "]", ".", "to", "(", "device", ")", "\n", "jth_data", "=", "data", "[", "idx", "]", ".", "to", "(", "device", ")", "\n", "jth_data", "=", "jth_data", "[", "random", "[", "j", "]", "]", "\n", "\n", "\n", "sample_x", "=", "jth_data", "[", ":", "400", "]", "\n", "sample_y", "=", "jth_target", "[", ":", "400", "]", "\n", "\n", "if", "i", "!=", "left_out_idx", ":", "\n", "                ", "data_x", ".", "append", "(", "sample_x", ")", "\n", "data_y", ".", "append", "(", "sample_y", ")", "\n", "\n", "", "if", "i", "==", "left_out_idx", ":", "\n", "                ", "data_x", ".", "append", "(", "jth_data", ")", "\n", "data_y", ".", "append", "(", "jth_target", ")", "\n", "\n", "", "", "data_x", "=", "torch", ".", "cat", "(", "data_x", ")", ".", "to", "(", "device", ")", "\n", "data_y", "=", "torch", ".", "cat", "(", "data_y", ")", ".", "to", "(", "device", ")", "\n", "\n", "if", "i", "!=", "left_out_idx", ":", "\n", "            ", "train_x", ".", "append", "(", "data_x", ")", "\n", "train_y", ".", "append", "(", "data_y", ")", "\n", "", "else", ":", "\n", "            ", "test_x", "=", "data_x", "\n", "test_y", "=", "data_y", "\n", "\n", "", "", "return", "train_x", ",", "train_y", ",", "test_x", ",", "test_y", "\n", "\n"]], "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.CIFAR-10.main.domain_specific_training": [[74, 327], ["main.load_rotated_cifar", "len", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.FC.FeatureCritic", "range", "len", "zs_x.view.append", "zs_y.view().long.append", "numpy.random.permutation", "range", "random.sample", "range", "models.FC.FeatureCritic.train", "torch.cat().to", "torch.cat().to", "x_train.view.view", "torch.cat().to", "torch.cat().to", "torch.cat().to.view", "x_train.view.append", "torch.cat().to.append", "range", "D_x_trn.append", "D_y_trn.append", "print", "torch.MSELoss", "feature_extractor.eval", "classifier.eval", "D_x_val.append", "D_y_val.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.no_grad", "torch.no_grad", "x_train.view.view", "torch.cat().to.view().long", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "enumerate", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "range", "print", "train_ms_rst.append", "torch.max", "torch.max", "sum", "print", "train_rst.append", "torch.no_grad", "torch.no_grad", "zs_x.view.view", "zs_y.view().long.view().long", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "enumerate", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "range", "print", "range", "print", "print", "print", "zs_mse_rst.append", "torch.max", "torch.max", "sum", "print", "zs_rst.append", "torch.no_grad", "torch.no_grad", "test_x.view().to", "test_y.view().to", "torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "enumerate", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.cat().to", "torch.max", "torch.max", "sum", "print", "test_rst.append", "range", "print", "test_mse_rst.append", "feature_extractor", "classifier", "torch.cat().to.append", "torch.cat().to.append", "torch.cat().to.append", "len", "range", "cost.index", "predicted.append", "len", "numpy.array", "len", "feature_extractor", "classifier", "torch.cat().to.append", "torch.cat().to.append", "torch.cat().to.append", "len", "range", "cost.index", "predicted.append", "len", "len", "predicted.append", "len", "numpy.array", "len", "feature_extractor", "torch.cat().to.append", "torch.cat().to.append", "torch.cat().to.append", "numpy.array", "len", "len", "range", "cost.index", "predicted.append", "len", "torch.cat().to.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cost.append", "min", "zs_y.view().long.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cost.append", "min", "cost.append", "test_x.view", "test_y.view", "classifier", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cost.append", "min", "nn.MSELoss.item", "nn.MSELoss.item", "nn.MSELoss.item", "cost.index", "nn.MSELoss.item", "min", "nn.MSELoss.", "nn.MSELoss.", "nn.MSELoss.", "nn.MSELoss."], "function", ["home.repos.pwc.inspect_result.aniketde_ZeroShotDG.CIFAR-10.main.load_rotated_cifar", "home.repos.pwc.inspect_result.aniketde_ZeroShotDG.models.FC.FeatureCritic.train"], ["", "def", "domain_specific_training", "(", "dom", ",", "clas", ")", ":", "\n", "    ", "train_x", ",", "train_y", ",", "test_x", ",", "test_y", "=", "load_rotated_fmnist", "(", "dom", ")", "\n", "length_of_domain", "=", "len", "(", "train_x", "[", "0", "]", ")", "\n", "\n", "train_rst", "=", "[", "]", "\n", "train_ms_rst", "=", "[", "]", "\n", "zs_rst", "=", "[", "]", "\n", "zs_mse_rst", "=", "[", "]", "\n", "test_rst", "=", "[", "]", "\n", "test_mse_rst", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "train_x", ")", ")", ":", "\n", "        ", "for", "k", "in", "clas", ":", "\n", "            ", "idx", "=", "train_y", "[", "i", "]", "!=", "k", "\n", "train_y", "[", "i", "]", "=", "train_y", "[", "i", "]", "[", "idx", "]", "\n", "train_x", "[", "i", "]", "=", "train_x", "[", "i", "]", "[", "idx", "]", "\n", "\n", "\n", "", "", "zs_y", "=", "[", "]", "\n", "zs_x", "=", "[", "]", "\n", "for", "k", "in", "clas", ":", "\n", "        ", "idx", "=", "test_y", "==", "k", "\n", "zs_x", ".", "append", "(", "test_x", "[", "idx", "]", ")", "\n", "zs_y", ".", "append", "(", "test_y", "[", "idx", "]", ")", "\n", "\n", "idx", "=", "test_y", "!=", "k", "\n", "test_y", "=", "test_y", "[", "idx", "]", "\n", "test_x", "=", "test_x", "[", "idx", "]", "\n", "\n", "", "zs_x", "=", "torch", ".", "cat", "(", "zs_x", ")", "\n", "zs_y", "=", "torch", ".", "cat", "(", "zs_y", ")", "\n", "\n", "train_x", "=", "torch", ".", "cat", "(", "train_x", ")", "\n", "train_y", "=", "torch", ".", "cat", "(", "train_y", ")", "\n", "\n", "train_x", "=", "train_x", ".", "view", "(", "6", ",", "length_of_domain", "-", "800", ",", "1", ",", "28", ",", "28", ")", "\n", "train_y", "=", "train_y", ".", "view", "(", "6", ",", "length_of_domain", "-", "800", ")", ".", "long", "(", ")", "\n", "\n", "length_of_domain", "-=", "800", "\n", "\n", "batch_size", "=", "50", "\n", "print", "(", "'------------------------'", ")", "\n", "\n", "model", "=", "AGG", "(", ")", "\n", "for", "epoch", "in", "range", "(", "200", ")", ":", "\n", "        ", "x_train", "=", "[", "]", "\n", "y_train", "=", "[", "]", "\n", "\n", "random", "=", "np", ".", "random", ".", "permutation", "(", "length_of_domain", ")", "\n", "\n", "for", "i", "in", "range", "(", "6", ")", ":", "\n", "            ", "x", "=", "train_x", "[", "i", "]", "\n", "x_permuted", "=", "x", "[", "random", "]", "\n", "\n", "y", "=", "train_y", "[", "i", "]", "\n", "y_permuted", "=", "y", "[", "random", "]", "\n", "\n", "x_train", ".", "append", "(", "x_permuted", ")", "\n", "y_train", ".", "append", "(", "y_permuted", ")", "\n", "\n", "", "x_train", "=", "torch", ".", "cat", "(", "x_train", ")", ".", "to", "(", "device", ")", "\n", "x_train", "=", "x_train", ".", "view", "(", "6", ",", "length_of_domain", ",", "1", ",", "28", ",", "28", ")", "\n", "\n", "y_train", "=", "torch", ".", "cat", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "y_train", ".", "view", "(", "6", ",", "length_of_domain", ")", "\n", "\n", "for", "i", "in", "range", "(", "6", ")", ":", "\n", "            ", "avg_cost", "=", "0", "\n", "for", "k", "in", "range", "(", "0", ",", "length_of_domain", ",", "batch_size", ")", ":", "\n", "\n", "                ", "left_x", "=", "x_train", "[", "i", "]", "[", "k", ":", "k", "+", "batch_size", ",", ":", ",", ":", ",", ":", "]", "\n", "labels", "=", "y_train", "[", "i", "]", "[", "k", ":", "k", "+", "batch_size", "]", "\n", "\n", "avg_cost", "+=", "model", ".", "train", "(", "left_x", ",", "labels", ",", "i", ")", "\n", "\n", "", "avg_cost", "=", "avg_cost", "/", "(", "length_of_domain", "/", "batch_size", ")", "\n", "\n", "", "print", "(", "avg_cost", ")", "\n", "\n", "if", "(", "epoch", "+", "1", ")", "%", "25", "==", "0", ":", "\n", "            ", "print", "(", "'After {} epochs'", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "feature_extractor", "=", "model", ".", "feature_extractor", "\n", "feature_extractor", ".", "eval", "(", ")", "\n", "\n", "classifier", "=", "model", ".", "Classifier", "\n", "classifier", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "x_train", "=", "x_train", ".", "view", "(", "6", "*", "length_of_domain", ",", "1", ",", "28", ",", "28", ")", "\n", "y_train", "=", "y_train", ".", "view", "(", "6", "*", "length_of_domain", ")", ".", "long", "(", ")", "\n", "\n", "train_tensor", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "x_train", ",", "y_train", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "train_tensor", ",", "batch_size", "=", "500", ",", "shuffle", "=", "False", ")", "\n", "\n", "y_train", "=", "[", "]", "\n", "train_out", "=", "[", "]", "\n", "classifier_out", "=", "[", "]", "\n", "for", "i", ",", "(", "X", ",", "Y", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "                    ", "feat", "=", "feature_extractor", "(", "X", ")", "\n", "out", "=", "classifier", "(", "feat", ")", "\n", "train_out", ".", "append", "(", "feat", ")", "\n", "classifier_out", ".", "append", "(", "out", ")", "\n", "y_train", ".", "append", "(", "Y", ")", "\n", "\n", "", "train_out", "=", "torch", ".", "cat", "(", "train_out", ")", ".", "to", "(", "device", ")", "\n", "y_train", "=", "torch", ".", "cat", "(", "y_train", ")", ".", "to", "(", "device", ")", "\n", "classifier_out", "=", "torch", ".", "cat", "(", "classifier_out", ")", ".", "to", "(", "device", ")", "\n", "\n", "# PCA_TSNE(np.array(train_out.cpu()),np.array(y_train.cpu()))", "\n", "\n", "predicted", "=", "[", "]", "\n", "correct", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "y_train", ")", ")", ":", "\n", "                    ", "cost", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "                        ", "cost", ".", "append", "(", "criterion", "(", "train_out", "[", "i", "]", ",", "w2v", "[", "j", "]", ")", ".", "item", "(", ")", ")", "\n", "\n", "", "pred", "=", "cost", ".", "index", "(", "min", "(", "cost", ")", ")", "\n", "predicted", ".", "append", "(", "pred", ")", "\n", "if", "pred", "==", "y_train", "[", "i", "]", ":", "\n", "                        ", "correct", "+=", "1", "\n", "\n", "", "", "accuracy", "=", "correct", "/", "len", "(", "y_train", ")", "\n", "print", "(", "'Train MSE Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "train_ms_rst", ".", "append", "(", "100", "*", "accuracy", ")", "\n", "\n", "_", ",", "predicted", "=", "torch", ".", "max", "(", "classifier_out", ",", "dim", "=", "1", ")", "\n", "correct", "=", "sum", "(", "np", ".", "array", "(", "(", "predicted", "==", "y_train", ")", ".", "cpu", "(", ")", ")", ")", "\n", "# print(correct)", "\n", "accuracy", "=", "correct", "/", "len", "(", "y_train", ")", "\n", "print", "(", "'Train Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "train_rst", ".", "append", "(", "100", "*", "accuracy", ")", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "zs_x", "=", "zs_x", ".", "view", "(", "12000", ",", "1", ",", "28", ",", "28", ")", "\n", "zs_y", "=", "zs_y", ".", "view", "(", "12000", ")", ".", "long", "(", ")", "\n", "\n", "zs_tensor", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "zs_x", ",", "zs_y", ")", "\n", "zs_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "zs_tensor", ",", "batch_size", "=", "500", ",", "shuffle", "=", "False", ")", "\n", "\n", "y_zs", "=", "[", "]", "\n", "zs_out", "=", "[", "]", "\n", "zs_classifier_out", "=", "[", "]", "\n", "for", "i", ",", "(", "X", ",", "Y", ")", "in", "enumerate", "(", "zs_loader", ")", ":", "\n", "                    ", "feat", "=", "feature_extractor", "(", "X", ")", "\n", "out", "=", "classifier", "(", "feat", ")", "\n", "zs_out", ".", "append", "(", "feat", ")", "\n", "zs_classifier_out", ".", "append", "(", "out", ")", "\n", "y_zs", ".", "append", "(", "Y", ")", "\n", "\n", "", "zs_out", "=", "torch", ".", "cat", "(", "zs_out", ")", ".", "to", "(", "device", ")", "\n", "y_zs", "=", "torch", ".", "cat", "(", "y_zs", ")", ".", "to", "(", "device", ")", "\n", "zs_classifier_out", "=", "torch", ".", "cat", "(", "zs_classifier_out", ")", ".", "to", "(", "device", ")", "\n", "\n", "# PCA_TSNE(np.array(train_out.cpu()),np.array(y_train.cpu()))", "\n", "\n", "predicted", "=", "[", "]", "\n", "correct", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "y_zs", ")", ")", ":", "\n", "                    ", "cost", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "                        ", "cost", ".", "append", "(", "criterion", "(", "zs_out", "[", "i", "]", ",", "w2v", "[", "j", "]", ")", ".", "item", "(", ")", ")", "\n", "", "pred", "=", "cost", ".", "index", "(", "min", "(", "cost", ")", ")", "\n", "predicted", ".", "append", "(", "pred", ")", "\n", "if", "pred", "==", "y_zs", "[", "i", "]", ":", "\n", "                        ", "correct", "+=", "1", "\n", "# print(predicted)", "\n", "", "", "accuracy", "=", "correct", "/", "len", "(", "y_zs", ")", "\n", "print", "(", "'ZS MSE Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "\n", "predicted", "=", "[", "]", "\n", "correct", "=", "0", "\n", "correct1", "=", "0", "\n", "correct2", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "y_zs", ")", ")", ":", "\n", "                    ", "cost", "=", "[", "]", "\n", "for", "j", "in", "clas", ":", "\n", "                        ", "cost", ".", "append", "(", "criterion", "(", "zs_out", "[", "i", "]", ",", "w2v", "[", "j", "]", ")", ".", "item", "(", ")", ")", "\n", "", "pred", "=", "clas", "[", "cost", ".", "index", "(", "min", "(", "cost", ")", ")", "]", "\n", "predicted", ".", "append", "(", "pred", ")", "\n", "if", "pred", "==", "y_zs", "[", "i", "]", ":", "\n", "                        ", "correct", "+=", "1", "\n", "if", "y_zs", "[", "i", "]", "==", "clas", "[", "0", "]", ":", "\n", "                            ", "correct1", "+=", "1", "\n", "", "else", ":", "\n", "                            ", "correct2", "+=", "1", "\n", "\n", "# print(predicted)", "\n", "", "", "", "accuracy", "=", "correct", "/", "len", "(", "y_zs", ")", "\n", "print", "(", "'ZS MSE Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "print", "(", "'ZS MSE Accuracy of the model: {}.;;;{}:{} %'", ".", "format", "(", "accuracy", ",", "clas", "[", "0", "]", ",", "correct1", "/", "6000", ")", ")", "\n", "print", "(", "'ZS MSE Accuracy of the model: {},;;;{}:{} %'", ".", "format", "(", "accuracy", ",", "clas", "[", "1", "]", ",", "correct2", "/", "6000", ")", ")", "\n", "zs_mse_rst", ".", "append", "(", "accuracy", ")", "\n", "\n", "_", ",", "predicted", "=", "torch", ".", "max", "(", "zs_classifier_out", ",", "dim", "=", "1", ")", "\n", "correct", "=", "sum", "(", "np", ".", "array", "(", "(", "predicted", "==", "y_zs", ")", ".", "cpu", "(", ")", ")", ")", "\n", "# print(correct)", "\n", "accuracy", "=", "correct", "/", "len", "(", "y_zs", ")", "\n", "print", "(", "'ZS Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "zs_rst", ".", "append", "(", "100", "*", "accuracy", ")", "\n", "\n", "# PCA_TSNE(np.array(torch.cat((train_out, zs_out), 0).cpu()),(np.array(torch.cat((y_train, y_zs), 0).cpu())))", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "                ", "x_test", "=", "test_x", ".", "view", "(", "(", "48000", ",", "1", ",", "28", ",", "28", ")", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "test_y", ".", "view", "(", "48000", ")", ".", "to", "(", "device", ")", "\n", "\n", "test_tensor", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "x_test", ",", "y_test", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "test_tensor", ",", "batch_size", "=", "1000", ",", "shuffle", "=", "False", ")", "\n", "\n", "y_test", "=", "[", "]", "\n", "test_out", "=", "[", "]", "\n", "classifier_out", "=", "[", "]", "\n", "for", "i", ",", "(", "X", ",", "Y", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "                    ", "out", "=", "feature_extractor", "(", "X", ")", "\n", "test_out", ".", "append", "(", "out", ")", "\n", "classifier_out", ".", "append", "(", "classifier", "(", "out", ")", ")", "\n", "y_test", ".", "append", "(", "Y", ")", "\n", "\n", "", "test_out", "=", "torch", ".", "cat", "(", "test_out", ")", ".", "to", "(", "device", ")", "\n", "y_test", "=", "torch", ".", "cat", "(", "y_test", ")", ".", "to", "(", "device", ")", "\n", "classifier_out", "=", "torch", ".", "cat", "(", "classifier_out", ")", ".", "to", "(", "device", ")", "\n", "\n", "_", ",", "predicted", "=", "torch", ".", "max", "(", "classifier_out", ",", "dim", "=", "1", ")", "\n", "correct", "=", "sum", "(", "np", ".", "array", "(", "(", "predicted", "==", "y_test", ")", ".", "cpu", "(", ")", ")", ")", "\n", "\n", "accuracy", "=", "correct", "/", "len", "(", "y_test", ")", "\n", "print", "(", "'Test Accuracy of the model {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "test_rst", ".", "append", "(", "100", "*", "accuracy", ")", "\n", "\n", "# PCA_TSNE(np.array(test_out.cpu()),np.array(y_test.cpu()))", "\n", "\n", "predicted", "=", "[", "]", "\n", "correct", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "y_test", ")", ")", ":", "\n", "                    ", "cost", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "                        ", "cost", ".", "append", "(", "criterion", "(", "test_out", "[", "i", "]", ",", "w2v", "[", "j", "]", ")", ".", "item", "(", ")", ")", "\n", "\n", "", "pred", "=", "cost", ".", "index", "(", "min", "(", "cost", ")", ")", "\n", "predicted", ".", "append", "(", "pred", ")", "\n", "if", "pred", "==", "y_test", "[", "i", "]", ":", "\n", "                        ", "correct", "+=", "1", "\n", "\n", "", "", "accuracy", "=", "correct", "/", "len", "(", "y_test", ")", "\n", "print", "(", "'Test MSE Accuracy of the model: {} %'", ".", "format", "(", "accuracy", ")", ")", "\n", "test_mse_rst", ".", "append", "(", "100", "*", "accuracy", ")", "\n", "del", "test_out", "\n", "\n", "", "", "", "return", "train_rst", ",", "train_ms_rst", ",", "zs_rst", ",", "zs_mse_rst", ",", "test_rst", ",", "test_mse_rst", "\n"]]}