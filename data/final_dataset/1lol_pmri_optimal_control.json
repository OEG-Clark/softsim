{"home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.psnr": [[37, 45], ["numpy.mean", "abs().max", "numpy.linalg.norm", "numpy.linalg.norm", "abs", "abs", "math.log10", "abs", "abs", "abs", "abs", "math.sqrt"], "function", ["None"], ["def", "psnr", "(", "imag1", ",", "imag2", ")", ":", "\n", "\n", "    ", "mse", "=", "np", ".", "mean", "(", "(", "abs", "(", "imag1", ")", "-", "abs", "(", "imag2", ")", ")", "**", "2", ")", "\n", "if", "mse", "==", "0", ":", "\n", "        ", "return", "100", "\n", "", "PIXEL_MAX", "=", "abs", "(", "imag1", ")", ".", "max", "(", ")", "\n", "relative_error", "=", "np", ".", "linalg", ".", "norm", "(", "abs", "(", "imag1", ")", "-", "abs", "(", "imag2", ")", ",", "'fro'", ")", "/", "np", ".", "linalg", ".", "norm", "(", "abs", "(", "imag1", ")", ",", "'fro'", ")", "\n", "return", "20", "*", "math", ".", "log10", "(", "PIXEL_MAX", "/", "math", ".", "sqrt", "(", "mse", ")", ")", ",", "relative_error", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.rmse": [[46, 57], ["numpy.sum", "numpy.linalg.norm", "numpy.linalg.norm", "abs", "abs", "abs"], "function", ["None"], ["", "def", "rmse", "(", "reference", ",", "rec", ")", ":", "\n", "\n", "#    squared_error = np.square(np.linalg.norm( reference - rec, 2, axis=(1,2)) )", "\n", "#    print(np.shape(squared_error))", "\n", "#    top = np.squeeze(np.sum(squared_error, 0))", "\n", "#    ui_squared = np.square(np.linalg.norm( rec, 2, axis=(1,2)) )", "\n", "#    bot = np.squeeze(np.sum(ui_squared, 0))  ", "\n", "    ", "ui_rmse", "=", "np", ".", "linalg", ".", "norm", "(", "abs", "(", "reference", ")", "-", "abs", "(", "rec", ")", ",", "'fro'", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "/", "np", ".", "linalg", ".", "norm", "(", "abs", "(", "rec", ")", ",", "'fro'", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "\n", "rmse", "=", "np", ".", "sum", "(", "ui_rmse", ",", "0", ")", "\n", "\n", "return", "rmse", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.mriForwardOp": [[67, 74], ["tensorflow.variable_scope", "Utils.fftc2d", "tensorflow.complex", "tensorflow.real", "tensorflow.imag"], "function", ["home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.fftc2d"], ["def", "mriForwardOp", "(", "img", ",", "sampling_mask", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'mriForwardOp'", ")", ":", "\n", "# centered Fourier transform", "\n", "        ", "Fu", "=", "Utils", ".", "fftc2d", "(", "img", ")", "\n", "# apply sampling mask", "\n", "kspace", "=", "tf", ".", "complex", "(", "tf", ".", "real", "(", "Fu", ")", "*", "sampling_mask", ",", "tf", ".", "imag", "(", "Fu", ")", "*", "sampling_mask", ")", "\n", "return", "kspace", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.mriAdjointOp": [[75, 81], ["tensorflow.variable_scope", "Utils.ifftc2d", "tensorflow.complex", "tensorflow.real", "tensorflow.imag"], "function", ["home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.ifftc2d"], ["", "", "def", "mriAdjointOp", "(", "f", ",", "sampling_mask", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'mriAdjointOp'", ")", ":", "\n", "# apply mask and perform inverse centered Fourier transform", "\n", "        ", "Finv", "=", "Utils", ".", "ifftc2d", "(", "tf", ".", "complex", "(", "tf", ".", "real", "(", "f", ")", "*", "sampling_mask", ",", "tf", ".", "imag", "(", "f", ")", "*", "sampling_mask", ")", ")", "\n", "\n", "return", "Finv", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_k": [[82, 85], ["tensorflow.get_variable", "tensorflow.contrib.layers.xavier_initializer_conv2d"], "function", ["None"], ["", "", "def", "add_con2d_weight_k", "(", "w_shape", ",", "order_no", ")", ":", "\n", "    ", "Weights", "=", "tf", ".", "get_variable", "(", "shape", "=", "w_shape", ",", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer_conv2d", "(", ")", ",", "name", "=", "'Weights_k_%d'", "%", "order_no", ")", "\n", "return", "Weights", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.k_block": [[86, 125], ["pMRI-CNet-K-optimal_control.add_con2d_weight_k", "pMRI-CNet-K-optimal_control.add_con2d_weight_k", "pMRI-CNet-K-optimal_control.add_con2d_weight_k", "pMRI-CNet-K-optimal_control.add_con2d_weight_k", "pMRI-CNet-K-optimal_control.add_con2d_weight_k", "pMRI-CNet-K-optimal_control.add_con2d_weight_k", "pMRI-CNet-K-optimal_control.add_con2d_weight_k", "pMRI-CNet-K-optimal_control.add_con2d_weight_k", "tensorflow.real", "tensorflow.imag", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.transpose", "tensorflow.transpose", "print", "tensorflow.complex", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d"], "function", ["home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_k", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_k", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_k", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_k", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_k", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_k", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_k", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_k"], ["", "def", "k_block", "(", "k_space", ")", ":", "\n", "    ", "Weights5", "=", "add_con2d_weight_k", "(", "[", "3", ",", "3", ",", "15", ",", "64", "]", ",", "5", ")", "\n", "Weights6", "=", "add_con2d_weight_k", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "6", ")", "\n", "Weights7", "=", "add_con2d_weight_k", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "7", ")", "\n", "Weights8", "=", "add_con2d_weight_k", "(", "[", "3", ",", "3", ",", "64", ",", "15", "]", ",", "8", ")", "\n", "\n", "Weights5_", "=", "add_con2d_weight_k", "(", "[", "3", ",", "3", ",", "15", ",", "64", "]", ",", "55", ")", "\n", "Weights6_", "=", "add_con2d_weight_k", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "66", ")", "\n", "Weights7_", "=", "add_con2d_weight_k", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "77", ")", "\n", "Weights8_", "=", "add_con2d_weight_k", "(", "[", "3", ",", "3", ",", "64", ",", "15", "]", ",", "88", ")", "\n", "\n", "k_real", "=", "tf", ".", "real", "(", "k_space", ")", "\n", "k_imag", "=", "tf", ".", "imag", "(", "k_space", ")", "\n", "\n", "k_real", "=", "tf", ".", "transpose", "(", "k_real", ",", "perm", "=", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "k_imag", "=", "tf", ".", "transpose", "(", "k_imag", ",", "perm", "=", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "#(?, 320, 320, 15)", "\n", "\n", "k0_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "k_real", ",", "Weights5", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "k_imag", ",", "Weights5_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "k0_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "k_real", ",", "Weights5_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "k_imag", ",", "Weights5", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "k1_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "k0_real", ",", "Weights6", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "k0_imag", ",", "Weights6_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "k1_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "k0_real", ",", "Weights6_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "k0_imag", ",", "Weights6", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "k2_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "k1_real", ",", "Weights7", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "k1_imag", ",", "Weights7_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "k2_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "k1_real", ",", "Weights7_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "k1_imag", ",", "Weights7", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "k3_real", "=", "tf", ".", "nn", ".", "conv2d", "(", "k2_real", ",", "Weights8", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "k2_imag", ",", "Weights8_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "k3_imag", "=", "tf", ".", "nn", ".", "conv2d", "(", "k2_real", ",", "Weights8_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "k2_imag", ",", "Weights8", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "k3_real", "=", "k3_real", "+", "k_real", "\n", "k3_imag", "=", "k3_imag", "+", "k_imag", "\n", "\n", "k0_real", "=", "tf", ".", "transpose", "(", "k3_real", ",", "perm", "=", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "k0_imag", "=", "tf", ".", "transpose", "(", "k3_imag", ",", "perm", "=", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "\n", "print", "(", "k0_imag", ".", "shape", ")", "\n", "\n", "k_space", "=", "tf", ".", "complex", "(", "k0_real", ",", "k0_imag", ")", "\n", "\n", "return", "k_space", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G": [[138, 141], ["tensorflow.get_variable", "tensorflow.contrib.layers.xavier_initializer_conv2d"], "function", ["None"], ["def", "add_con2d_weight_G", "(", "w_shape", ",", "order_no", ")", ":", "\n", "    ", "Weights", "=", "tf", ".", "get_variable", "(", "shape", "=", "w_shape", ",", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer_conv2d", "(", ")", ",", "name", "=", "'Weights_G_%d'", "%", "order_no", ")", "\n", "return", "Weights", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight": [[142, 145], ["tensorflow.get_variable", "tensorflow.contrib.layers.xavier_initializer_conv2d"], "function", ["None"], ["", "def", "add_con2d_weight", "(", "w_shape", ",", "order_no", ")", ":", "\n", "    ", "Weights", "=", "tf", ".", "get_variable", "(", "shape", "=", "w_shape", ",", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer_conv2d", "(", ")", ",", "name", "=", "'Weights_J_%d'", "%", "order_no", ")", "\n", "return", "Weights", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.ista_block": [[146, 284], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight_G", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.add_con2d_weight", "pMRI-CNet-K-optimal_control.mriForwardOp", "pMRI-CNet-K-optimal_control.mriAdjointOp", "tensorflow.real", "tensorflow.imag", "tensorflow.add", "tensorflow.add", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.abs", "print", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.complex", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.abs", "print", "tensorflow.scalar_mul", "tensorflow.scalar_mul", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.complex", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.sign", "tensorflow.nn.relu", "tensorflow.sign", "tensorflow.nn.relu", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.transpose", "tensorflow.transpose", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.complex", "tensorflow.real", "tensorflow.scalar_mul", "tensorflow.imag", "tensorflow.scalar_mul", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.abs", "tensorflow.abs"], "function", ["home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight_G", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.add_con2d_weight", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.mriForwardOp", "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.mriAdjointOp"], ["", "def", "ista_block", "(", "input_layer", ",", "layer_no", ")", ":", "\n", "    ", "step_real", "=", "tf", ".", "Variable", "(", "0.1", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "step_imag", "=", "tf", ".", "Variable", "(", "0.1", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "soft_thr_real", "=", "tf", ".", "Variable", "(", "0.000", ",", "dtype", "=", "tf", ".", "float32", ")", "#0.0001 0.00005 ", "\n", "soft_thr_imag", "=", "tf", ".", "Variable", "(", "0.000", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "conv_size", "=", "32", "\n", "filter_size", "=", "9", "\n", "\n", "Weights555", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "15", ",", "64", "]", ",", "1555", ")", "\n", "Weights55", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "155", ")", "\n", "Weights666", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "1666", ")", "\n", "Weights66", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "1", "]", ",", "166", ")", "\n", "\n", "Weights0", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "1", ",", "conv_size", "]", ",", "0", ")", "\n", "\n", "Weights1", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "conv_size", ",", "conv_size", "]", ",", "1", ")", "\n", "Weights11", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "conv_size", ",", "conv_size", "]", ",", "11", ")", "\n", "\n", "Weights2", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "conv_size", ",", "conv_size", "]", ",", "2", ")", "\n", "Weights22", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "conv_size", ",", "conv_size", "]", ",", "22", ")", "\n", "\n", "Weights3", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "conv_size", ",", "1", "]", ",", "3", ")", "\n", "\n", "Weights888", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "1", ",", "64", "]", ",", "1888", ")", "\n", "Weights88", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "188", ")", "\n", "Weights999", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "1999", ")", "\n", "Weights99", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "15", "]", ",", "199", ")", "\n", "#______________________________________________________", "\n", "\n", "Weights555_", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "15", ",", "64", "]", ",", "9155", ")", "\n", "Weights55_", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "915", ")", "\n", "Weights666_", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "9166", ")", "\n", "Weights66_", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "1", "]", ",", "916", ")", "\n", "\n", "Weights0_", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "1", ",", "conv_size", "]", ",", "90", ")", "\n", "\n", "Weights1_", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "conv_size", ",", "conv_size", "]", ",", "91", ")", "\n", "Weights11_", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "conv_size", ",", "conv_size", "]", ",", "911", ")", "\n", "\n", "Weights2_", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "conv_size", ",", "conv_size", "]", ",", "92", ")", "\n", "Weights22_", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "conv_size", ",", "conv_size", "]", ",", "922", ")", "\n", "\n", "Weights3_", "=", "add_con2d_weight_G", "(", "[", "filter_size", ",", "filter_size", ",", "conv_size", ",", "1", "]", ",", "93", ")", "\n", "\n", "Weights888_", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "1", ",", "64", "]", ",", "9188", ")", "\n", "Weights88_", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "918", ")", "\n", "Weights999_", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "64", "]", ",", "9199", ")", "\n", "Weights99_", "=", "add_con2d_weight", "(", "[", "3", ",", "3", ",", "64", ",", "15", "]", ",", "919", ")", "\n", "\n", "#_______________________________________________________________________________________________________________________________________    ", "\n", "\n", "Au", "=", "mriForwardOp", "(", "input_layer", "[", "-", "1", "]", ",", "m", ")", "\n", "ATAu", "=", "mriAdjointOp", "(", "Au", ",", "m", ")", "#(?, 15, 320, 320)", "\n", "ATAu_real", "=", "tf", ".", "real", "(", "ATAu", ")", "\n", "ATAu_imag", "=", "tf", ".", "imag", "(", "ATAu", ")", "\n", "\n", "x1_real", "=", "tf", ".", "add", "(", "tf", ".", "real", "(", "input_layer", "[", "-", "1", "]", ")", "-", "tf", ".", "scalar_mul", "(", "step_real", ",", "ATAu_real", ")", ",", "tf", ".", "scalar_mul", "(", "step_real", ",", "ATf_real", ")", ")", "# X_k - lambda*A^T(AX -fi)", "\n", "x1_imag", "=", "tf", ".", "add", "(", "tf", ".", "imag", "(", "input_layer", "[", "-", "1", "]", ")", "-", "tf", ".", "scalar_mul", "(", "step_imag", ",", "ATAu_imag", ")", ",", "tf", ".", "scalar_mul", "(", "step_imag", ",", "ATf_imag", ")", ")", "#(?, 15, 320, 320)", "\n", "\n", "x2_real", "=", "tf", ".", "transpose", "(", "x1_real", ",", "perm", "=", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "x2_imag", "=", "tf", ".", "transpose", "(", "x1_imag", ",", "perm", "=", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "#(?, 320, 320, 15)", "\n", "\n", "#J    ", "\n", "x00_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x2_real", ",", "Weights555", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x2_imag", ",", "Weights555_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "x00_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x2_real", ",", "Weights555_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x2_imag", ",", "Weights555", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "x01_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x00_real", ",", "Weights55", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x00_imag", ",", "Weights55_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "#(?, 320, 320, 1)", "\n", "x01_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x00_real", ",", "Weights55_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x00_imag", ",", "Weights55", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "x02_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x01_real", ",", "Weights666", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x01_imag", ",", "Weights666_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "x02_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x01_real", ",", "Weights666_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x01_imag", ",", "Weights666", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "x00_real", "=", "tf", ".", "nn", ".", "conv2d", "(", "x02_real", ",", "Weights66", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x02_imag", ",", "Weights66_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "#(?, 320, 320, 1)", "\n", "x00_imag", "=", "tf", ".", "nn", ".", "conv2d", "(", "x02_real", ",", "Weights66_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x02_imag", ",", "Weights66", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "J_real", "=", "tf", ".", "reshape", "(", "x00_real", ",", "shape", "=", "[", "-", "1", ",", "320", ",", "320", "]", ")", "\n", "J_imag", "=", "tf", ".", "reshape", "(", "x00_imag", ",", "shape", "=", "[", "-", "1", ",", "320", ",", "320", "]", ")", "\n", "\n", "Ju_0", "=", "tf", ".", "abs", "(", "tf", ".", "complex", "(", "J_real", ",", "J_imag", ")", ")", "#(?, 320, 320)", "\n", "print", "(", "Ju_0", ".", "shape", ")", "\n", "#g    ", "\n", "x3_real", "=", "tf", ".", "nn", ".", "conv2d", "(", "x00_real", ",", "Weights0", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x00_imag", ",", "Weights0_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "x3_imag", "=", "tf", ".", "nn", ".", "conv2d", "(", "x00_real", ",", "Weights0_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x00_imag", ",", "Weights0", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "x4_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x3_real", ",", "Weights1", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x3_imag", ",", "Weights1_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "x4_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x3_real", ",", "Weights1_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x3_imag", ",", "Weights1", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "x44_real", "=", "tf", ".", "nn", ".", "conv2d", "(", "x4_real", ",", "Weights11", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x4_imag", ",", "Weights11_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "x44_imag", "=", "tf", ".", "nn", ".", "conv2d", "(", "x4_real", ",", "Weights11_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x4_imag", ",", "Weights11", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "#(?, 320, 320, 32)", "\n", "#S", "\n", "x5_real", "=", "tf", ".", "multiply", "(", "tf", ".", "sign", "(", "x44_real", ")", ",", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "abs", "(", "x44_real", ")", "-", "soft_thr_real", ")", ")", "\n", "x5_imag", "=", "tf", ".", "multiply", "(", "tf", ".", "sign", "(", "x44_imag", ")", ",", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "abs", "(", "x44_imag", ")", "-", "soft_thr_imag", ")", ")", "\n", "#g~    ", "\n", "x6_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x5_real", ",", "Weights2", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x5_imag", ",", "Weights2_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "x6_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x5_real", ",", "Weights2_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x5_imag", ",", "Weights2", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "x66_real", "=", "tf", ".", "nn", ".", "conv2d", "(", "x6_real", ",", "Weights22", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x6_imag", ",", "Weights22_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "x66_imag", "=", "tf", ".", "nn", ".", "conv2d", "(", "x6_real", ",", "Weights22_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x6_imag", ",", "Weights22", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "x7_real", "=", "tf", ".", "nn", ".", "conv2d", "(", "x66_real", ",", "Weights3", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x66_imag", ",", "Weights3_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "x7_imag", "=", "tf", ".", "nn", ".", "conv2d", "(", "x66_real", ",", "Weights3_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x66_imag", ",", "Weights3", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "#(?, 320, 320, 1)", "\n", "\n", "#J~", "\n", "x88_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x7_real", ",", "Weights888", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x7_imag", ",", "Weights888_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "x88_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x7_real", ",", "Weights888_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x7_imag", ",", "Weights888", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "x8_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x88_real", ",", "Weights88", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x88_imag", ",", "Weights88_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "#(?, 320, 320, 15)", "\n", "x8_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x88_real", ",", "Weights88_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x88_imag", ",", "Weights88", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "x99_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x8_real", ",", "Weights999", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x8_imag", ",", "Weights999_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "x99_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x8_real", ",", "Weights999_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x8_imag", ",", "Weights999", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "x9_real", "=", "tf", ".", "nn", ".", "conv2d", "(", "x99_real", ",", "Weights99", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x99_imag", ",", "Weights99_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "#(?, 320, 320, 15)", "\n", "x9_imag", "=", "tf", ".", "nn", ".", "conv2d", "(", "x99_real", ",", "Weights99_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x99_imag", ",", "Weights99", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ", "\n", "x_real", "=", "tf", ".", "transpose", "(", "x9_real", ",", "perm", "=", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "+", "x1_real", "#(?, 15, 320, 320) b_k+ r_k(u_k) ", "\n", "x_imag", "=", "tf", ".", "transpose", "(", "x9_imag", ",", "perm", "=", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "+", "x1_imag", "#(?, 15, 320, 320)  ", "\n", "\n", "new", "=", "tf", ".", "complex", "(", "x_real", ",", "x_imag", ")", "#(?, 15, 320, 320)       ", "\n", "\n", "#Ju    ", "\n", "x00_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x9_real", "+", "x2_real", ",", "Weights555", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x9_imag", "+", "x2_imag", ",", "Weights555_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "x00_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x9_real", "+", "x2_real", ",", "Weights555_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x9_imag", "+", "x2_imag", ",", "Weights555", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "x01_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x00_real", ",", "Weights55", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x00_imag", ",", "Weights55_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "#(?, 320, 320, 1)", "\n", "x01_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x00_real", ",", "Weights55_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x00_imag", ",", "Weights55", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "x02_real", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x01_real", ",", "Weights666", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x01_imag", ",", "Weights666_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "x02_imag", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "conv2d", "(", "x01_real", ",", "Weights666_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x01_imag", ",", "Weights666", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", ")", "\n", "\n", "x00_real", "=", "tf", ".", "nn", ".", "conv2d", "(", "x02_real", ",", "Weights66", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "-", "tf", ".", "nn", ".", "conv2d", "(", "x02_imag", ",", "Weights66_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "#(?, 320, 320, 1)", "\n", "x00_imag", "=", "tf", ".", "nn", ".", "conv2d", "(", "x02_real", ",", "Weights66_", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "+", "tf", ".", "nn", ".", "conv2d", "(", "x02_imag", ",", "Weights66", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "J_real", "=", "tf", ".", "reshape", "(", "x00_real", ",", "shape", "=", "[", "-", "1", ",", "320", ",", "320", "]", ")", "\n", "J_imag", "=", "tf", ".", "reshape", "(", "x00_imag", ",", "shape", "=", "[", "-", "1", ",", "320", ",", "320", "]", ")", "\n", "\n", "Ju", "=", "tf", ".", "abs", "(", "tf", ".", "complex", "(", "J_real", ",", "J_imag", ")", ")", "#(?, 320, 320)", "\n", "print", "(", "Ju", ".", "shape", ")", "\n", "\n", "return", "[", "new", ",", "Ju_0", ",", "Ju", ",", "step_real", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.inference_": [[285, 299], ["layers.append", "range", "tensorflow.variable_scope", "pMRI-CNet-K-optimal_control.ista_block", "layers_J.append", "layers.append", "layers_J.append"], "function", ["home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.ista_block"], ["", "def", "inference_", "(", "input_u", ",", "n", ",", "reuse", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "layers_J", "=", "[", "]", "\n", "layers", ".", "append", "(", "input_u", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "'conv_%d'", "%", "i", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "[", "phase_i", ",", "Ju_0", ",", "Ju", ",", "step_real", "]", "=", "ista_block", "(", "layers", ",", "i", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "layers_J", ".", "append", "(", "Ju_0", ")", "\n", "", "else", ":", "\n", "                ", "layers", ".", "append", "(", "phase_i", ")", "\n", "layers_J", ".", "append", "(", "Ju", ")", "\n", "\n", "", "", "", "return", "[", "layers", ",", "layers_J", ",", "step_real", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.pMRI-CNet-K-optimal_control.compute_cost": [[300, 342], ["tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.sqrt", "tensorflow.sqrt", "tensorflow.reduce_mean", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_mean", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_mean", "tensorflow.sqrt", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.abs", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.abs", "tensorflow.real", "tensorflow.imag", "tensorflow.real", "tensorflow.imag", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.real", "tensorflow.imag", "tensorflow.square", "tensorflow.square", "tensorflow.square", "tensorflow.real", "tensorflow.imag", "tensorflow.real", "tensorflow.imag", "tensorflow.real", "tensorflow.imag"], "function", ["None"], ["", "def", "compute_cost", "(", "Prediction", ",", "Ju", ",", "PhaseNumber", ")", ":", "\n", "\n", "    ", "true_abs", "=", "tf", ".", "sqrt", "(", "tf", ".", "square", "(", "tf", ".", "real", "(", "ui_true", ")", ")", "+", "tf", ".", "square", "(", "tf", ".", "imag", "(", "ui_true", ")", ")", ")", "\n", "true_sum", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "true_abs", ")", ",", "1", ")", ")", "\n", "\n", "ui_0_abs", "=", "tf", ".", "sqrt", "(", "tf", ".", "square", "(", "tf", ".", "real", "(", "ui_0", ")", ")", "+", "tf", ".", "square", "(", "tf", ".", "imag", "(", "ui_0", ")", ")", ")", "\n", "ui_0_sum", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "ui_0_abs", ")", ",", "1", ")", ")", "\n", "#    cost_0 = tf.reduce_mean(tf.abs( ui_0_sum - true_sum))", "\n", "\n", "cost_0_r", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "tf", ".", "real", "(", "ui_0", "-", "ui_true", ")", ")", ")", "\n", "cost_0_i", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "tf", ".", "imag", "(", "ui_0", "-", "ui_true", ")", ")", ")", "\n", "cost_0", "=", "cost_0_r", "+", "cost_0_i", "\n", "\n", "true_abs", "=", "tf", ".", "sqrt", "(", "tf", ".", "square", "(", "tf", ".", "real", "(", "ui_true", ")", ")", "+", "tf", ".", "square", "(", "tf", ".", "imag", "(", "ui_true", ")", ")", ")", "\n", "true_sum", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "true_abs", ")", ",", "1", ")", ")", "\n", "cost", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "Ju", "[", "-", "1", "]", "-", "true_sum", ")", ")", "\n", "\n", "#    pred_abs = tf.sqrt(tf.square(tf.real(Prediction[-1])) + tf.square(tf.imag(Prediction[-1])))", "\n", "#    pred_sum = tf.sqrt(tf.reduce_sum(tf.square(pred_abs), 1))", "\n", "cost_ui_r", "=", "tf", ".", "square", "(", "tf", ".", "real", "(", "Prediction", "[", "-", "1", "]", "-", "ui_true", ")", ")", "\n", "cost_ui_i", "=", "tf", ".", "square", "(", "tf", ".", "imag", "(", "Prediction", "[", "-", "1", "]", "-", "ui_true", ")", ")", "\n", "cost_ui", "=", "tf", ".", "reduce_mean", "(", "cost_ui_r", "+", "cost_ui_i", ")", "\n", "ui_r", "=", "tf", ".", "square", "(", "tf", ".", "real", "(", "ui_true", ")", ")", "\n", "ui_i", "=", "tf", ".", "square", "(", "tf", ".", "imag", "(", "ui_true", ")", ")", "\n", "ui", "=", "tf", ".", "reduce_mean", "(", "ui_r", "+", "ui_i", ")", "\n", "\n", "ui_rmse", "=", "tf", ".", "sqrt", "(", "cost_ui", "/", "ui", ")", "\n", "\n", "\n", "# ssim", "\n", "#    output_abs = tf.expand_dims(tf.abs(Ju[-1]), -1)", "\n", "#    target_abs = tf.expand_dims(tf.abs(target), -1)", "\n", "#    L = tf.reduce_max(target_abs, axis=(1, 2, 3), keepdims=True) - tf.reduce_min(target_abs, axis=(1, 2, 3),", "\n", "#                                                                                 keepdims=True)", "\n", "#    ssim = Utils.ssim(output_abs, target_abs, L=L)   ", "\n", "\n", "# MSE_VN  prediction vs. target 8.0   ", "\n", "#    target_abs = tf.sqrt(tf.real((target) * tf.conj(target)) + 1e-12)", "\n", "#    output_abs = tf.sqrt(tf.real((Ju[-1]) * tf.conj(Ju[-1])) + 1e-12)", "\n", "#    energy = tf.reduce_mean(tf.reduce_sum(((output_abs - target_abs) ** 2))) / batch_size ", "\n", "\n", "return", "[", "cost_0", ",", "cost", ",", "cost_ui", ",", "ui_rmse", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.fft2c": [[16, 19], ["numpy.fft.fft2", "numpy.sqrt"], "function", ["None"], ["def", "fft2c", "(", "img", ")", ":", "\n", "    ", "\"\"\" Centered fft2 \"\"\"", "\n", "return", "np", ".", "fft", ".", "fft2", "(", "img", ")", "/", "np", ".", "sqrt", "(", "img", ".", "shape", "[", "-", "2", "]", "*", "img", ".", "shape", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.ifft2c": [[20, 23], ["numpy.fft.ifft2", "numpy.sqrt"], "function", ["None"], ["", "def", "ifft2c", "(", "img", ")", ":", "\n", "    ", "\"\"\" Centered ifft2 \"\"\"", "\n", "return", "np", ".", "fft", ".", "ifft2", "(", "img", ")", "*", "np", ".", "sqrt", "(", "img", ".", "shape", "[", "-", "2", "]", "*", "img", ".", "shape", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.mriAdjointOp": [[24, 28], ["numpy.expand_dims", "numpy.sum", "np.expand_dims.astype", "Utils.ifft2c", "numpy.conj"], "function", ["home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.ifft2c"], ["", "def", "mriAdjointOp", "(", "rawdata", ",", "coilsens", ",", "mask", ")", ":", "\n", "    ", "\"\"\" Adjoint MRI Cartesian Operator \"\"\"", "\n", "mask", "=", "np", ".", "expand_dims", "(", "mask", ".", "astype", "(", "np", ".", "float32", ")", ",", "axis", "=", "1", ")", "\n", "return", "np", ".", "sum", "(", "ifft2c", "(", "rawdata", "*", "mask", ")", "*", "np", ".", "conj", "(", "coilsens", ")", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.mriForwardOp": [[29, 35], ["Utils.fft2c"], "function", ["home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.fft2c"], ["", "def", "mriForwardOp", "(", "img", ",", "coilsens", ",", "mask", ")", ":", "\n", "    ", "\"\"\" Forward MRI Cartesian Operator \"\"\"", "\n", "#    mask = np.expand_dims( mask.astype(np.float32), axis=1)", "\n", "#    img = np.expand_dims( img, axis=1)", "\n", "#    ", "\n", "return", "fft2c", "(", "coilsens", "*", "img", ")", "*", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.fftshift": [[36, 61], ["tensorflow.convert_to_tensor", "tensorflow.roll", "tuple", "isinstance", "range", "tensorflow.rank"], "function", ["None"], ["", "def", "fftshift", "(", "x", ",", "axes", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Shift the zero-frequency component to the center of the spectrum.\n    This function swaps half-spaces for all axes listed (defaults to all).\n    Note that ``y[0]`` is the Nyquist component only if ``len(x)`` is even.\n    Parameters\n    ----------\n    x : array_like, Tensor\n        Input array.\n    axes : int or shape tuple, optional\n        Axes over which to shift.  Default is None, which shifts all axes.\n    Returns\n    -------\n    y : Tensor.\n    \"\"\"", "\n", "x", "=", "tf", ".", "convert_to_tensor", "(", "x", ")", "\n", "if", "axes", "is", "None", ":", "\n", "        ", "axes", "=", "tuple", "(", "range", "(", "tf", ".", "rank", "(", "x", ")", ")", ")", "\n", "shift", "=", "[", "dim", "//", "2", "for", "dim", "in", "x", ".", "shape", "]", "\n", "", "elif", "isinstance", "(", "axes", ",", "int", ")", ":", "\n", "        ", "shift", "=", "x", ".", "shape", "[", "axes", "]", "//", "2", "\n", "", "else", ":", "\n", "        ", "shift", "=", "[", "x", ".", "shape", "[", "ax", "]", "//", "2", "for", "ax", "in", "axes", "]", "\n", "\n", "", "return", "tf", ".", "roll", "(", "x", ",", "shift", ",", "axes", ")", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.ifftshift": [[63, 86], ["tensorflow.roll", "tuple", "isinstance", "range", "tensorflow.keras.backend.dim"], "function", ["None"], ["", "def", "ifftshift", "(", "x", ",", "axes", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    The inverse of `fftshift`. Although identical for even-length `x`, the\n    functions differ by one sample for odd-length `x`.\n    Parameters\n    ----------\n    x : array_like, Tensor.\n    axes : int or shape tuple, optional\n        Axes over which to calculate.  Defaults to None, which shifts all axes.\n    Returns\n    -------\n    y : Tensor.\n    \"\"\"", "\n", "#x = ops.convert_to_tensor_v2(x)", "\n", "if", "axes", "is", "None", ":", "\n", "        ", "axes", "=", "tuple", "(", "range", "(", "tf", ".", "keras", ".", "backend", ".", "dim", "(", "x", ")", ")", ")", "\n", "shift", "=", "[", "-", "(", "dim", "//", "2", ")", "for", "dim", "in", "x", ".", "shape", "]", "\n", "", "elif", "isinstance", "(", "axes", ",", "int", ")", ":", "\n", "        ", "shift", "=", "-", "(", "x", ".", "shape", "[", "axes", "]", "//", "2", ")", "\n", "", "else", ":", "\n", "        ", "shift", "=", "[", "-", "(", "x", ".", "shape", "[", "ax", "]", "//", "2", ")", "for", "ax", "in", "axes", "]", "\n", "\n", "", "return", "tf", ".", "roll", "(", "x", ",", "shift", ",", "axes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.ifftc2d": [[88, 99], ["tensorflow.shape", "tensorflow.sqrt", "tensorflow.ifft2d", "tensorflow.complex", "tensorflow.cast", "tensorflow.real", "tensorflow.imag"], "function", ["None"], ["", "def", "ifftc2d", "(", "inp", ")", ":", "\n", "    ", "\"\"\" Centered inverse 2d Fourier transform, performed on axis (-1,-2).\n    \"\"\"", "\n", "shape", "=", "tf", ".", "shape", "(", "inp", ")", "\n", "numel", "=", "shape", "[", "-", "2", "]", "*", "shape", "[", "-", "1", "]", "\n", "scale", "=", "tf", ".", "sqrt", "(", "tf", ".", "cast", "(", "numel", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "#out = fftshift(tf.ifft2d(ifftshift(inp, axes= None)), axes= None)", "\n", "out", "=", "tf", ".", "ifft2d", "(", "inp", ")", "\n", "out", "=", "tf", ".", "complex", "(", "tf", ".", "real", "(", "out", ")", "*", "scale", ",", "tf", ".", "imag", "(", "out", ")", "*", "scale", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.fftc2d": [[100, 111], ["tensorflow.shape", "tensorflow.fft2d", "tensorflow.complex", "tensorflow.sqrt", "tensorflow.cast", "tensorflow.real", "tensorflow.imag"], "function", ["None"], ["", "def", "fftc2d", "(", "inp", ")", ":", "\n", "    ", "\"\"\" Centered 2d Fourier transform, performed on axis (-1,-2).\n    \"\"\"", "\n", "shape", "=", "tf", ".", "shape", "(", "inp", ")", "\n", "numel", "=", "shape", "[", "-", "2", "]", "*", "shape", "[", "-", "1", "]", "\n", "scale", "=", "1.0", "/", "tf", ".", "sqrt", "(", "tf", ".", "cast", "(", "numel", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "#out = fftshift(tf.fft2d(ifftshift(inp, axes= None)), axes= None)", "\n", "out", "=", "tf", ".", "fft2d", "(", "inp", ")", "\n", "out", "=", "tf", ".", "complex", "(", "tf", ".", "real", "(", "out", ")", "*", "scale", ",", "tf", ".", "imag", "(", "out", ")", "*", "scale", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.removeFEOversampling": [[113, 123], ["numpy.take", "numpy.arange", "int", "int"], "function", ["None"], ["", "def", "removeFEOversampling", "(", "src", ")", ":", "\n", "    ", "\"\"\" Remove Frequency Encoding (FE) oversampling.\n        This is implemented such that they match with the DICOM images.\n    \"\"\"", "\n", "assert", "src", ".", "ndim", ">=", "2", "\n", "nFE", ",", "nPE", "=", "src", ".", "shape", "[", "-", "2", ":", "]", "\n", "if", "nPE", "!=", "nFE", ":", "\n", "        ", "return", "np", ".", "take", "(", "src", ",", "np", ".", "arange", "(", "int", "(", "nFE", "*", "0.25", ")", "+", "1", ",", "int", "(", "nFE", "*", "0.75", ")", "+", "1", ")", ",", "axis", "=", "-", "2", ")", "\n", "", "else", ":", "\n", "        ", "return", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.removePEOversampling": [[124, 134], ["numpy.take", "numpy.arange", "int", "int"], "function", ["None"], ["", "", "def", "removePEOversampling", "(", "src", ")", ":", "\n", "    ", "\"\"\" Remove Phase Encoding (PE) oversampling. \"\"\"", "\n", "nPE", "=", "src", ".", "shape", "[", "-", "1", "]", "\n", "nFE", "=", "src", ".", "shape", "[", "-", "2", "]", "\n", "PE_OS_crop", "=", "(", "nPE", "-", "nFE", ")", "/", "2", "\n", "\n", "if", "PE_OS_crop", "==", "0", ":", "\n", "        ", "return", "src", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "take", "(", "src", ",", "np", ".", "arange", "(", "int", "(", "PE_OS_crop", ")", "+", "1", ",", "nPE", "-", "int", "(", "PE_OS_crop", ")", "+", "1", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.removeFE": [[135, 139], ["numpy.take", "numpy.arange", "int", "int"], "function", ["None"], ["", "", "def", "removeFE", "(", "src", ")", ":", "\n", "    ", "assert", "src", ".", "ndim", ">=", "2", "\n", "nFE", ",", "nPE", "=", "src", ".", "shape", "[", "-", "2", ":", "]", "\n", "return", "np", ".", "take", "(", "src", ",", "np", ".", "arange", "(", "int", "(", "nFE", "*", "0.25", ")", "+", "1", ",", "int", "(", "nFE", "*", "0.75", ")", "+", "1", ")", ",", "axis", "=", "-", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.removePE": [[140, 146], ["numpy.take", "numpy.arange", "int", "int"], "function", ["None"], ["", "def", "removePE", "(", "src", ")", ":", "\n", "    ", "nPE", "=", "src", ".", "shape", "[", "-", "1", "]", "\n", "nFE", "=", "src", ".", "shape", "[", "-", "2", "]", "\n", "PE_OS_crop", "=", "(", "nPE", "-", "nFE", ")", "/", "2", "\n", "\n", "return", "np", ".", "take", "(", "src", ",", "np", ".", "arange", "(", "int", "(", "PE_OS_crop", ")", "+", "1", ",", "nPE", "-", "int", "(", "PE_OS_crop", ")", "+", "1", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.ssim": [[148, 177], ["tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.conv2d", "tensorflow.reduce_mean", "Utils.ssim.ssimKernel"], "function", ["None"], ["", "def", "ssim", "(", "input", ",", "target", ",", "ksize", "=", "11", ",", "sigma", "=", "1.5", ",", "L", "=", "1.0", ")", ":", "\n", "    ", "def", "ssimKernel", "(", "ksize", "=", "ksize", ",", "sigma", "=", "sigma", ")", ":", "\n", "        ", "if", "sigma", "==", "None", ":", "# no gauss weighting", "\n", "            ", "kernel", "=", "np", ".", "ones", "(", "(", "ksize", ",", "ksize", ",", "1", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "            ", "x", ",", "y", "=", "np", ".", "mgrid", "[", "-", "ksize", "//", "2", "+", "1", ":", "ksize", "//", "2", "+", "1", ",", "-", "ksize", "//", "2", "+", "1", ":", "ksize", "//", "2", "+", "1", "]", "\n", "kernel", "=", "np", ".", "exp", "(", "-", "(", "(", "x", "**", "2", "+", "y", "**", "2", ")", "/", "(", "2.0", "*", "sigma", "**", "2", ")", ")", ")", "\n", "kernel", "=", "kernel", "[", ":", ",", ":", ",", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "return", "kernel", "/", "np", ".", "sum", "(", "kernel", ")", "\n", "\n", "", "kernel", "=", "tf", ".", "Variable", "(", "ssimKernel", "(", ")", ",", "name", "=", "'ssim_kernel'", ",", "trainable", "=", "False", ")", "\n", "K1", "=", "0.01", "\n", "K2", "=", "0.03", "\n", "C1", "=", "(", "K1", "*", "L", ")", "**", "2", "\n", "C2", "=", "(", "K2", "*", "L", ")", "**", "2", "\n", "\n", "mu1", "=", "tf", ".", "nn", ".", "conv2d", "(", "input", ",", "kernel", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'VALID'", ",", "data_format", "=", "'NHWC'", ")", "\n", "mu2", "=", "tf", ".", "nn", ".", "conv2d", "(", "target", ",", "kernel", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'VALID'", ",", "data_format", "=", "'NHWC'", ")", "\n", "mu1_sqr", "=", "mu1", "**", "2", "\n", "mu2_sqr", "=", "mu2", "**", "2", "\n", "mu1mu2", "=", "mu1", "*", "mu2", "\n", "sigma1_sqr", "=", "tf", ".", "nn", ".", "conv2d", "(", "input", "*", "input", ",", "kernel", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'VALID'", ",", "\n", "data_format", "=", "'NHWC'", ")", "-", "mu1_sqr", "\n", "sigma2_sqr", "=", "tf", ".", "nn", ".", "conv2d", "(", "target", "*", "target", ",", "kernel", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'VALID'", ",", "\n", "data_format", "=", "'NHWC'", ")", "-", "mu2_sqr", "\n", "sigma12", "=", "tf", ".", "nn", ".", "conv2d", "(", "input", "*", "target", ",", "kernel", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'VALID'", ",", "data_format", "=", "'NHWC'", ")", "-", "mu1mu2", "\n", "ssim_maps", "=", "(", "(", "2.0", "*", "mu1mu2", "+", "C1", ")", "*", "(", "2.0", "*", "sigma12", "+", "C2", ")", ")", "/", "(", "(", "mu1_sqr", "+", "mu2_sqr", "+", "C1", ")", "*", "\n", "(", "sigma1_sqr", "+", "sigma2_sqr", "+", "C2", ")", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_mean", "(", "ssim_maps", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.saveAsMat": [[180, 206], ["img.copy", "scipy.io.savemat", "numpy.transpose", "os.path.dirname", "os.path.exists", "os.makedirs", "numpy.transpose"], "function", ["None"], ["", "def", "saveAsMat", "(", "img", ",", "filename", ",", "matlab_id", ",", "mat_dict", "=", "None", ")", ":", "\n", "    ", "\"\"\" Save mat files with ndim in [2,3,4]\n\n        Args:\n            img: image to be saved\n            file_path: base directory\n            matlab_id: identifer of variable\n            mat_dict: additional variables to be saved\n    \"\"\"", "\n", "assert", "img", ".", "ndim", "in", "[", "2", ",", "3", ",", "4", "]", "\n", "\n", "img_arg", "=", "img", ".", "copy", "(", ")", "\n", "if", "img", ".", "ndim", "==", "3", ":", "\n", "        ", "img_arg", "=", "np", ".", "transpose", "(", "img_arg", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "", "elif", "img", ".", "ndim", "==", "4", ":", "\n", "        ", "img_arg", "=", "np", ".", "transpose", "(", "img_arg", ",", "(", "2", ",", "3", ",", "0", ",", "1", ")", ")", "\n", "\n", "", "if", "mat_dict", "==", "None", ":", "\n", "        ", "mat_dict", "=", "{", "matlab_id", ":", "img_arg", "}", "\n", "", "else", ":", "\n", "        ", "mat_dict", "[", "matlab_id", "]", "=", "img_arg", "\n", "\n", "", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "filename", ")", "or", "'.'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "dirname", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dirname", ")", "\n", "", "savemat", "(", "filename", ",", "mat_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils._normalize": [[208, 213], ["numpy.max", "numpy.min"], "function", ["None"], ["", "def", "_normalize", "(", "img", ")", ":", "\n", "    ", "\"\"\" Normalize image between [0, 1] \"\"\"", "\n", "tmp", "=", "img", "-", "np", ".", "min", "(", "img", ")", "\n", "tmp", "/=", "np", ".", "max", "(", "tmp", ")", "\n", "return", "tmp", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.contrastStretching": [[214, 225], ["numpy.sort", "numpy.size", "int", "numpy.minimum", "numpy.round", "numpy.maximum"], "function", ["None"], ["", "def", "contrastStretching", "(", "img", ",", "saturated_pixel", "=", "0.004", ")", ":", "\n", "    ", "\"\"\" constrast stretching according to imageJ\n    http://homepages.inf.ed.ac.uk/rbf/HIPR2/stretch.htm\"\"\"", "\n", "values", "=", "np", ".", "sort", "(", "img", ",", "axis", "=", "None", ")", "\n", "nr_pixels", "=", "np", ".", "size", "(", "values", ")", "\n", "lim", "=", "int", "(", "np", ".", "round", "(", "saturated_pixel", "*", "nr_pixels", ")", ")", "\n", "v_min", "=", "values", "[", "lim", "]", "\n", "v_max", "=", "values", "[", "-", "lim", "-", "1", "]", "\n", "img", "=", "(", "img", "-", "v_min", ")", "*", "(", "255.0", ")", "/", "(", "v_max", "-", "v_min", ")", "\n", "img", "=", "np", ".", "minimum", "(", "255.0", ",", "np", ".", "maximum", "(", "0.0", ",", "img", ")", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.getContrastStretchingLimits": [[227, 236], ["numpy.sort", "numpy.size", "int", "numpy.round"], "function", ["None"], ["", "def", "getContrastStretchingLimits", "(", "img", ",", "saturated_pixel", "=", "0.004", ")", ":", "\n", "    ", "\"\"\" constrast stretching according to imageJ\n    http://homepages.inf.ed.ac.uk/rbf/HIPR2/stretch.htm\"\"\"", "\n", "values", "=", "np", ".", "sort", "(", "img", ",", "axis", "=", "None", ")", "\n", "nr_pixels", "=", "np", ".", "size", "(", "values", ")", "\n", "lim", "=", "int", "(", "np", ".", "round", "(", "saturated_pixel", "*", "nr_pixels", ")", ")", "\n", "v_min", "=", "values", "[", "lim", "]", "\n", "v_max", "=", "values", "[", "-", "lim", "-", "1", "]", "\n", "return", "v_min", ",", "v_max", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.normalize": [[237, 242], ["numpy.minimum", "numpy.maximum"], "function", ["None"], ["", "def", "normalize", "(", "img", ",", "v_min", ",", "v_max", ",", "max_int", "=", "255.0", ")", ":", "\n", "    ", "\"\"\" normalize image to [0, max_int] according to image intensities [v_min, v_max] \"\"\"", "\n", "img", "=", "(", "img", "-", "v_min", ")", "*", "(", "max_int", ")", "/", "(", "v_max", "-", "v_min", ")", "\n", "img", "=", "np", ".", "minimum", "(", "max_int", ",", "np", ".", "maximum", "(", "0.0", ",", "img", ")", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils.imsave": [[244, 257], ["os.path.dirname", "os.path.exists", "os.makedirs", "print", "numpy.abs", "Utils._normalize"], "function", ["home.repos.pwc.inspect_result.1lol_pmri_optimal_control.None.Utils._normalize"], ["", "def", "imsave", "(", "img", ",", "filepath", ",", "normalize", "=", "True", ")", ":", "\n", "    ", "\"\"\" Save an image. \"\"\"", "\n", "path", "=", "os", ".", "path", ".", "dirname", "(", "filepath", ")", "or", "'.'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n", "", "if", "img", ".", "dtype", "==", "np", ".", "complex64", "or", "img", ".", "dtype", "==", "np", ".", "complex128", ":", "\n", "        ", "print", "(", "'img is complex! Take absolute value.'", ")", "\n", "img", "=", "np", ".", "abs", "(", "img", ")", "\n", "\n", "", "if", "normalize", ":", "\n", "        ", "img", "=", "_normalize", "(", "img", ")", "\n", "img", "*=", "255.0", "\n", "#scipy.misc.imsave(filepath, img.astype(np.uint8))", "\n"]]}