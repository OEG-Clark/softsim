{"home.repos.pwc.inspect_result.clovaai_mxfont.None.eval.eval_ckpt": [[19, 54], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "sconf.Config", "sconf.Config.argv_update", "pathlib.Path", "pathlib.Path.mkdir", "train.setup_transforms", "sconf.Config.get", "models.Generator().cuda", "torch.load", "Generator().cuda.load_state_dict", "datasets.get_test_loader", "batch[].cuda", "batch[].unsqueeze().cuda", "Generator().cuda.gen_from_style_char", "zip", "models.Generator", "utils.refine", "utils.save_tensor_to_image", "batch[].unsqueeze"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.None.train.setup_transforms", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.get", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.__init__.get_test_loader", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.gen_from_style_char", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.refine", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.save_tensor_to_image"], ["def", "eval_ckpt", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"config_paths\"", ",", "nargs", "=", "\"+\"", ",", "help", "=", "\"path to config.yaml\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--weight\"", ",", "help", "=", "\"path to weight to evaluate.pth\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--result_dir\"", ",", "help", "=", "\"path to save the result file\"", ")", "\n", "args", ",", "left_argv", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "\n", "cfg", "=", "Config", "(", "*", "args", ".", "config_paths", ",", "default", "=", "\"cfgs/defaults.yaml\"", ")", "\n", "cfg", ".", "argv_update", "(", "left_argv", ")", "\n", "img_dir", "=", "Path", "(", "args", ".", "result_dir", ")", "\n", "img_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "trn_transform", ",", "val_transform", "=", "setup_transforms", "(", "cfg", ")", "\n", "\n", "g_kwargs", "=", "cfg", ".", "get", "(", "'g_args'", ",", "{", "}", ")", "\n", "gen", "=", "Generator", "(", "1", ",", "cfg", ".", "C", ",", "1", ",", "**", "g_kwargs", ")", ".", "cuda", "(", ")", "\n", "\n", "weight", "=", "torch", ".", "load", "(", "args", ".", "weight", ")", "\n", "if", "\"generator_ema\"", "in", "weight", ":", "\n", "        ", "weight", "=", "weight", "[", "\"generator_ema\"", "]", "\n", "", "gen", ".", "load_state_dict", "(", "weight", ")", "\n", "test_dset", ",", "test_loader", "=", "get_test_loader", "(", "cfg", ",", "val_transform", ")", "\n", "\n", "for", "batch", "in", "test_loader", ":", "\n", "        ", "style_imgs", "=", "batch", "[", "\"style_imgs\"", "]", ".", "cuda", "(", ")", "\n", "char_imgs", "=", "batch", "[", "\"source_imgs\"", "]", ".", "unsqueeze", "(", "1", ")", ".", "cuda", "(", ")", "\n", "\n", "out", "=", "gen", ".", "gen_from_style_char", "(", "style_imgs", ",", "char_imgs", ")", "\n", "fonts", "=", "batch", "[", "\"fonts\"", "]", "\n", "chars", "=", "batch", "[", "\"chars\"", "]", "\n", "\n", "for", "image", ",", "font", ",", "char", "in", "zip", "(", "refine", "(", "out", ")", ",", "fonts", ",", "chars", ")", ":", "\n", "            ", "(", "img_dir", "/", "font", ")", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "path", "=", "img_dir", "/", "font", "/", "f\"{char}.png\"", "\n", "save_tensor_to_image", "(", "image", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.None.get_chars_from_ttf.main": [[14, 28], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "print", "list", "tqdm.tqdm", "pathlib.Path().rglob", "datasets.get_filtered_chars", "open", "f.write", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.get_filtered_chars"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--root_dir\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "print", "(", "args", ".", "root_dir", ")", "\n", "ttffiles", "=", "list", "(", "Path", "(", "args", ".", "root_dir", ")", ".", "rglob", "(", "\"*.ttf\"", ")", ")", "\n", "\n", "for", "ttffile", "in", "tqdm", "(", "ttffiles", ")", ":", "\n", "        ", "filename", "=", "ttffile", ".", "stem", "\n", "dirname", "=", "ttffile", ".", "parent", "\n", "avail_chars", "=", "get_filtered_chars", "(", "ttffile", ")", "\n", "with", "open", "(", "(", "dirname", "/", "(", "filename", "+", "\".txt\"", ")", ")", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "\"\"", ".", "join", "(", "avail_chars", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.None.train.setup_args_and_config": [[31, 48], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args", "sconf.Config", "sconf.Config.argv_update", "pathlib.Path"], "function", ["None"], ["def", "setup_args_and_config", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"config_paths\"", ",", "nargs", "=", "\"+\"", ",", "help", "=", "\"path/to/config.yaml\"", ")", "\n", "\n", "args", ",", "left_argv", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "\n", "cfg", "=", "Config", "(", "*", "args", ".", "config_paths", ",", "default", "=", "\"cfgs/defaults.yaml\"", ",", "\n", "colorize_modified_item", "=", "True", ")", "\n", "cfg", ".", "argv_update", "(", "left_argv", ")", "\n", "\n", "if", "cfg", ".", "use_ddp", ":", "\n", "        ", "cfg", ".", "n_workers", "=", "0", "\n", "\n", "", "cfg", ".", "work_dir", "=", "Path", "(", "cfg", ".", "work_dir", ")", "\n", "(", "cfg", ".", "work_dir", "/", "\"checkpoints\"", ")", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "return", "args", ",", "cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.None.train.setup_transforms": [[50, 70], ["torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "tensorize_transform.append", "torchvision.transforms.ToPILImage", "torchvision.transforms.RandomAffine", "torchvision.transforms.Normalize"], "function", ["None"], ["", "def", "setup_transforms", "(", "cfg", ")", ":", "\n", "    ", "if", "cfg", ".", "dset_aug", ".", "random_affine", ":", "\n", "        ", "aug_transform", "=", "[", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "transforms", ".", "RandomAffine", "(", "\n", "degrees", "=", "10", ",", "translate", "=", "(", "0.03", ",", "0.03", ")", ",", "scale", "=", "(", "0.9", ",", "1.1", ")", ",", "shear", "=", "10", ",", "fillcolor", "=", "255", "\n", ")", "\n", "]", "\n", "", "else", ":", "\n", "        ", "aug_transform", "=", "[", "]", "\n", "\n", "", "tensorize_transform", "=", "[", "transforms", ".", "Resize", "(", "(", "128", ",", "128", ")", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", "\n", "if", "cfg", ".", "dset_aug", ".", "normalize", ":", "\n", "        ", "tensorize_transform", ".", "append", "(", "transforms", ".", "Normalize", "(", "[", "0.5", "]", ",", "[", "0.5", "]", ")", ")", "\n", "cfg", ".", "g_args", ".", "dec", ".", "out", "=", "\"tanh\"", "\n", "\n", "", "trn_transform", "=", "transforms", ".", "Compose", "(", "aug_transform", "+", "tensorize_transform", ")", "\n", "val_transform", "=", "transforms", ".", "Compose", "(", "tensorize_transform", ")", "\n", "\n", "return", "trn_transform", ",", "val_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.None.train.cleanup": [[72, 74], ["torch.destroy_process_group"], "function", ["None"], ["", "def", "cleanup", "(", ")", ":", "\n", "    ", "dist", ".", "destroy_process_group", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.None.train.is_main_worker": [[76, 78], ["None"], "function", ["None"], ["", "def", "is_main_worker", "(", "gpu", ")", ":", "\n", "    ", "return", "(", "gpu", "<=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.None.train.train_ddp": [[80, 90], ["torch.init_process_group", "train.train", "train.cleanup", "str"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.train", "home.repos.pwc.inspect_result.clovaai_mxfont.None.train.cleanup"], ["", "def", "train_ddp", "(", "gpu", ",", "args", ",", "cfg", ",", "world_size", ")", ":", "\n", "    ", "dist", ".", "init_process_group", "(", "\n", "backend", "=", "\"nccl\"", ",", "\n", "init_method", "=", "\"tcp://127.0.0.1:\"", "+", "str", "(", "cfg", ".", "port", ")", ",", "\n", "world_size", "=", "world_size", ",", "\n", "rank", "=", "gpu", ",", "\n", ")", "\n", "cfg", ".", "batch_size", "=", "cfg", ".", "batch_size", "//", "world_size", "\n", "train", "(", "args", ",", "cfg", ",", "ddp_gpu", "=", "gpu", ")", "\n", "cleanup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.None.train.train": [[92, 168], ["torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "utils.Logger.get", "utils.DiskWriter", "sconf.dump_args", "train.is_main_worker", "Logger.get.info", "train.setup_transforms", "json.load", "json.load", "len", "datasets.get_trn_loader", "datasets.get_val_loader", "Logger.get.info", "cfg.get", "models.Generator", "models.Generator.cuda", "models.Generator.apply", "cfg.get", "models.disc_builder", "models.disc_builder.cuda", "models.disc_builder.apply", "models.aux_clf_builder", "models.aux_clf_builder.cuda", "models.aux_clf_builder.apply", "torch.Adam", "torch.Adam", "torch.Adam", "trainer.Evaluator", "trainer.FactTrainer", "trainer.FactTrainer.train", "Logger.get.info", "Logger.get.info", "Logger.get.info", "open", "open", "models.modules.weights_init", "models.modules.weights_init", "models.modules.weights_init", "models.Generator.parameters", "models.disc_builder.parameters", "models.aux_clf_builder.parameters", "trainer.load_checkpoint", "Logger.get.info", "cfg.dumps"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.get", "home.repos.pwc.inspect_result.clovaai_mxfont.None.train.is_main_worker", "home.repos.pwc.inspect_result.clovaai_mxfont.None.train.setup_transforms", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.__init__.get_trn_loader", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.__init__.get_val_loader", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.get", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.get", "home.repos.pwc.inspect_result.clovaai_mxfont.models.discriminator.disc_builder", "home.repos.pwc.inspect_result.clovaai_mxfont.models.aux_classifier.aux_clf_builder", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.train", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.modules.weights_init", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.modules.weights_init", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.modules.weights_init", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.load_checkpoint"], ["", "def", "train", "(", "args", ",", "cfg", ",", "ddp_gpu", "=", "-", "1", ")", ":", "\n", "    ", "cfg", ".", "gpu", "=", "ddp_gpu", "\n", "torch", ".", "cuda", ".", "set_device", "(", "ddp_gpu", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "logger_path", "=", "cfg", ".", "work_dir", "/", "\"log.log\"", "\n", "logger", "=", "Logger", ".", "get", "(", "file_path", "=", "logger_path", ",", "level", "=", "\"info\"", ",", "colorize", "=", "True", ")", "\n", "\n", "image_scale", "=", "0.5", "\n", "image_path", "=", "cfg", ".", "work_dir", "/", "\"images\"", "\n", "writer", "=", "utils", ".", "DiskWriter", "(", "image_path", ",", "scale", "=", "image_scale", ")", "\n", "cfg", ".", "tb_freq", "=", "-", "1", "\n", "\n", "args_str", "=", "dump_args", "(", "args", ")", "\n", "if", "is_main_worker", "(", "ddp_gpu", ")", ":", "\n", "        ", "logger", ".", "info", "(", "\"Run Argv:\\n> {}\"", ".", "format", "(", "\" \"", ".", "join", "(", "sys", ".", "argv", ")", ")", ")", "\n", "logger", ".", "info", "(", "\"Args:\\n{}\"", ".", "format", "(", "args_str", ")", ")", "\n", "logger", ".", "info", "(", "\"Configs:\\n{}\"", ".", "format", "(", "cfg", ".", "dumps", "(", ")", ")", ")", "\n", "\n", "", "logger", ".", "info", "(", "\"Get dataset ...\"", ")", "\n", "\n", "trn_transform", ",", "val_transform", "=", "setup_transforms", "(", "cfg", ")", "\n", "\n", "primals", "=", "json", ".", "load", "(", "open", "(", "cfg", ".", "primals", ")", ")", "\n", "decomposition", "=", "json", ".", "load", "(", "open", "(", "cfg", ".", "decomposition", ")", ")", "\n", "n_comps", "=", "len", "(", "primals", ")", "\n", "\n", "trn_dset", ",", "trn_loader", "=", "get_trn_loader", "(", "cfg", ".", "dset", ".", "train", ",", "\n", "primals", ",", "\n", "decomposition", ",", "\n", "trn_transform", ",", "\n", "use_ddp", "=", "cfg", ".", "use_ddp", ",", "\n", "batch_size", "=", "cfg", ".", "batch_size", ",", "\n", "num_workers", "=", "cfg", ".", "n_workers", ",", "\n", "shuffle", "=", "True", ")", "\n", "\n", "test_dset", ",", "test_loader", "=", "get_val_loader", "(", "cfg", ".", "dset", ".", "val", ",", "\n", "val_transform", ",", "\n", "batch_size", "=", "cfg", ".", "batch_size", ",", "\n", "num_workers", "=", "cfg", ".", "n_workers", ",", "\n", "shuffle", "=", "False", ")", "\n", "\n", "logger", ".", "info", "(", "\"Build model ...\"", ")", "\n", "# generator", "\n", "g_kwargs", "=", "cfg", ".", "get", "(", "\"g_args\"", ",", "{", "}", ")", "\n", "gen", "=", "Generator", "(", "1", ",", "cfg", ".", "C", ",", "1", ",", "**", "g_kwargs", ")", "\n", "gen", ".", "cuda", "(", ")", "\n", "gen", ".", "apply", "(", "weights_init", "(", "cfg", ".", "init", ")", ")", "\n", "\n", "d_kwargs", "=", "cfg", ".", "get", "(", "\"d_args\"", ",", "{", "}", ")", "\n", "disc", "=", "disc_builder", "(", "cfg", ".", "C", ",", "trn_dset", ".", "n_fonts", ",", "trn_dset", ".", "n_chars", ",", "**", "d_kwargs", ")", "\n", "disc", ".", "cuda", "(", ")", "\n", "disc", ".", "apply", "(", "weights_init", "(", "cfg", ".", "init", ")", ")", "\n", "\n", "aux_clf", "=", "aux_clf_builder", "(", "gen", ".", "feat_shape", "[", "\"last\"", "]", ",", "trn_dset", ".", "n_fonts", ",", "n_comps", ",", "**", "cfg", ".", "ac_args", ")", "\n", "aux_clf", ".", "cuda", "(", ")", "\n", "aux_clf", ".", "apply", "(", "weights_init", "(", "cfg", ".", "init", ")", ")", "\n", "\n", "g_optim", "=", "optim", ".", "Adam", "(", "gen", ".", "parameters", "(", ")", ",", "lr", "=", "cfg", ".", "g_lr", ",", "betas", "=", "cfg", ".", "adam_betas", ")", "\n", "d_optim", "=", "optim", ".", "Adam", "(", "disc", ".", "parameters", "(", ")", ",", "lr", "=", "cfg", ".", "d_lr", ",", "betas", "=", "cfg", ".", "adam_betas", ")", "\n", "ac_optim", "=", "optim", ".", "Adam", "(", "aux_clf", ".", "parameters", "(", ")", ",", "lr", "=", "cfg", ".", "ac_lr", ",", "betas", "=", "cfg", ".", "adam_betas", ")", "\n", "\n", "st_step", "=", "0", "\n", "if", "cfg", ".", "resume", ":", "\n", "        ", "st_step", ",", "loss", "=", "load_checkpoint", "(", "cfg", ".", "resume", ",", "gen", ",", "disc", ",", "aux_clf", ",", "g_optim", ",", "d_optim", ",", "ac_optim", ",", "cfg", ".", "force_resume", ")", "\n", "logger", ".", "info", "(", "\"Resumed checkpoint from {} (Step {}, Loss {:7.3f})\"", ".", "format", "(", "cfg", ".", "resume", ",", "st_step", ",", "loss", ")", ")", "\n", "\n", "", "evaluator", "=", "Evaluator", "(", "writer", ")", "\n", "\n", "trainer", "=", "FactTrainer", "(", "gen", ",", "disc", ",", "g_optim", ",", "d_optim", ",", "\n", "aux_clf", ",", "ac_optim", ",", "\n", "writer", ",", "logger", ",", "\n", "evaluator", ",", "test_loader", ",", "\n", "cfg", ")", "\n", "\n", "trainer", ".", "train", "(", "trn_loader", ",", "st_step", ",", "cfg", ".", "max_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.None.train.main": [[170, 182], ["train.setup_args_and_config", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.spawn", "train.train"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.None.train.setup_args_and_config", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.train"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", ",", "cfg", "=", "setup_args_and_config", "(", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "cfg", "[", "\"seed\"", "]", ")", "\n", "torch", ".", "manual_seed", "(", "cfg", "[", "\"seed\"", "]", ")", "\n", "\n", "if", "cfg", ".", "use_ddp", ":", "\n", "        ", "ngpus_per_node", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "world_size", "=", "ngpus_per_node", "\n", "mp", ".", "spawn", "(", "train_ddp", ",", "nprocs", "=", "ngpus_per_node", ",", "args", "=", "(", "args", ",", "cfg", ",", "world_size", ")", ")", "\n", "", "else", ":", "\n", "        ", "train", "(", "args", ",", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.Writer.add_scalars": [[13, 15], ["NotImplementedError"], "methods", ["None"], ["    ", "def", "add_scalars", "(", "self", ",", "tag_scalar_dic", ",", "global_step", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.Writer.add_image": [[16, 18], ["NotImplementedError"], "methods", ["None"], ["", "def", "add_image", "(", "self", ",", "tag", ",", "img_tensor", ",", "global_step", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.DiskWriter.__init__": [[21, 25], ["pathlib.Path", "writer.DiskWriter.img_dir.mkdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_path", ",", "scale", "=", "None", ")", ":", "\n", "        ", "self", ".", "img_dir", "=", "Path", "(", "img_path", ")", "\n", "self", ".", "img_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.DiskWriter.add_scalars": [[26, 28], ["None"], "methods", ["None"], ["", "def", "add_scalars", "(", "self", ",", "tag_scalar_dic", ",", "global_step", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.DiskWriter.add_image": [[29, 36], ["save_tensor_to_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.save_tensor_to_image"], ["", "def", "add_image", "(", "self", ",", "tag", ",", "img_tensor", ",", "global_step", "=", "None", ")", ":", "\n", "        ", "if", "global_step", "is", "not", "None", ":", "\n", "            ", "path", "=", "self", ".", "img_dir", "/", "\"{:07d}-{}.png\"", ".", "format", "(", "global_step", ",", "tag", ")", "\n", "", "else", ":", "\n", "            ", "path", "=", "self", ".", "img_dir", "/", "\"{}.png\"", ".", "format", "(", "tag", ")", "\n", "", "save_tensor_to_image", "(", "img_tensor", ",", "path", ",", "self", ".", "scale", ")", "\n", "return", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.TBWriter.__init__": [[39, 43], ["SummaryWriter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dir_path", ",", "scale", "=", "None", ")", ":", "\n", "        ", "from", "torch", ".", "utils", ".", "tensorboard", "import", "SummaryWriter", "\n", "self", ".", "writer", "=", "SummaryWriter", "(", "dir_path", ",", "flush_secs", "=", "30", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.TBWriter.add_scalars": [[44, 47], ["tag_scalar_dic.items", "writer.TBWriter.writer.add_scalar"], "methods", ["None"], ["", "def", "add_scalars", "(", "self", ",", "tag_scalar_dic", ",", "global_step", ")", ":", "\n", "        ", "for", "tag", ",", "scalar", "in", "tag_scalar_dic", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "writer", ".", "add_scalar", "(", "tag", ",", "scalar", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.TBWriter.add_image": [[48, 55], ["writer.TBWriter.writer.add_image", "torch.interpolate().squeeze", "torch.interpolate", "torch.interpolate().squeeze.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.TBDiskWriter.add_image"], ["", "", "def", "add_image", "(", "self", ",", "tag", ",", "img_tensor", ",", "global_step", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "scale", ":", "\n", "            ", "img_tensor", "=", "F", ".", "interpolate", "(", "\n", "img_tensor", ".", "unsqueeze", "(", "0", ")", ",", "scale_factor", "=", "self", ".", "scale", ",", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", "\n", ")", ".", "squeeze", "(", "0", ")", "\n", "", "self", ".", "writer", ".", "add_image", "(", "tag", ",", "img_tensor", ",", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.TBDiskWriter.__init__": [[58, 61], ["writer.TBWriter.__init__", "writer.DiskWriter"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dir_path", ",", "img_path", ",", "scale", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dir_path", ")", "\n", "self", ".", "_disk_writer", "=", "DiskWriter", "(", "img_path", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.TBDiskWriter.add_image": [[62, 64], ["writer.TBDiskWriter._disk_writer.add_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.TBDiskWriter.add_image"], ["", "def", "add_image", "(", "self", ",", "tag", ",", "img_tensor", ",", "global_step", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "_disk_writer", ".", "add_image", "(", "tag", ",", "img_tensor", ",", "global_step", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.ColorFormatter.format": [[28, 32], ["logger.ColorFormatter.color_dic.get", "logging.Formatter.format"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.get", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.ColorFormatter.format"], ["def", "format", "(", "self", ",", "record", ")", ":", "\n", "        ", "color", "=", "self", ".", "color_dic", ".", "get", "(", "record", ".", "levelname", ",", "37", ")", "# default white", "\n", "record", ".", "levelname", "=", "\"\\033[{}m{}\\033[0m\"", ".", "format", "(", "color", ",", "record", ".", "levelname", ")", "\n", "return", "logging", ".", "Formatter", ".", "format", "(", "self", ",", "record", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.get": [[37, 75], ["logging.setLoggerClass", "logging.getLogger", "logging.setLoggerClass", "logging.getLogger.setLevel", "logging.getLogger.hasHandlers", "logging.StreamHandler", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "logging.getLogger.handlers.clear", "logging.getLogger.ColorFormatter", "logging.Formatter", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "len"], "methods", ["None"], ["@", "classmethod", "\n", "def", "get", "(", "cls", ",", "file_path", "=", "None", ",", "level", "=", "'info'", ",", "colorize", "=", "True", ")", ":", "\n", "        ", "logging", ".", "setLoggerClass", "(", "cls", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "cls", ".", "NAME", ")", "\n", "logging", ".", "setLoggerClass", "(", "logging", ".", "Logger", ")", "# restore", "\n", "logger", ".", "setLevel", "(", "log_lv", "[", "level", "]", ")", "\n", "\n", "if", "logger", ".", "hasHandlers", "(", ")", ":", "\n", "# If logger already got all handlers (# handlers == 2), use the logger.", "\n", "# else, re-set handlers.", "\n", "            ", "if", "len", "(", "logger", ".", "handlers", ")", "==", "2", ":", "\n", "                ", "return", "logger", "\n", "\n", "", "logger", ".", "handlers", ".", "clear", "(", ")", "\n", "\n", "", "log_format", "=", "'%(levelname)s::%(asctime)s | %(message)s'", "\n", "date_format", "=", "'%m/%d %H:%M:%S'", "\n", "if", "colorize", ":", "\n", "            ", "formatter", "=", "ColorFormatter", "(", "log_format", ",", "date_format", ")", "\n", "", "else", ":", "\n", "            ", "formatter", "=", "logging", ".", "Formatter", "(", "log_format", ",", "date_format", ")", "\n", "\n", "# standard output handler", "\n", "# NOTE as default, StreamHandler use stderr stream instead of stdout stream.", "\n", "# Use StreamHandler(sys.stdout) for stdout stream.", "\n", "", "stream_handler", "=", "logging", ".", "StreamHandler", "(", "sys", ".", "stdout", ")", "\n", "stream_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "stream_handler", ")", "\n", "\n", "if", "file_path", ":", "\n", "# file output handler", "\n", "            ", "file_handler", "=", "logging", ".", "FileHandler", "(", "file_path", ")", "\n", "file_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "file_handler", ")", "\n", "\n", "", "logger", ".", "propagate", "=", "False", "\n", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.nofmt": [[76, 81], ["logger.Logger.remove_formats", "super().log", "logger.Logger.set_formats"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.remove_formats", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.log", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.set_formats"], ["", "def", "nofmt", "(", "self", ",", "msg", ",", "*", "args", ",", "level", "=", "'info'", ",", "**", "kwargs", ")", ":", "\n", "        ", "level", "=", "log_lv", "[", "level", "]", "\n", "formatters", "=", "self", ".", "remove_formats", "(", ")", "\n", "super", "(", ")", ".", "log", "(", "level", ",", "msg", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "set_formats", "(", "formatters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.remove_formats": [[82, 90], ["formatters.append", "handler.setFormatter", "logging.Formatter"], "methods", ["None"], ["", "def", "remove_formats", "(", "self", ")", ":", "\n", "        ", "\"\"\" Remove all formats from logger \"\"\"", "\n", "formatters", "=", "[", "]", "\n", "for", "handler", "in", "self", ".", "handlers", ":", "\n", "            ", "formatters", ".", "append", "(", "handler", ".", "formatter", ")", "\n", "handler", ".", "setFormatter", "(", "logging", ".", "Formatter", "(", "\"%(message)s\"", ")", ")", "\n", "\n", "", "return", "formatters", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.set_formats": [[91, 95], ["zip", "handler.setFormatter"], "methods", ["None"], ["", "def", "set_formats", "(", "self", ",", "formatters", ")", ":", "\n", "        ", "\"\"\" Set formats to every handler of logger \"\"\"", "\n", "for", "handler", ",", "formatter", "in", "zip", "(", "self", ".", "handlers", ",", "formatters", ")", ":", "\n", "            ", "handler", ".", "setFormatter", "(", "formatter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.set_file_handler": [[96, 101], ["logging.FileHandler", "logging.FileHandler.setFormatter", "logger.Logger.addHandler"], "methods", ["None"], ["", "", "def", "set_file_handler", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "file_handler", "=", "logging", ".", "FileHandler", "(", "file_path", ")", "\n", "formatter", "=", "self", ".", "handlers", "[", "0", "]", ".", "formatter", "\n", "file_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "self", ".", "addHandler", "(", "file_handler", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.refine": [[12, 17], ["torch.ones_like"], "function", ["None"], ["def", "refine", "(", "imgs", ")", ":", "\n", "    ", "refined", "=", "torch", ".", "ones_like", "(", "imgs", ")", "\n", "refined", "[", ":", ",", ":", ",", "2", ":", "-", "2", ",", "2", ":", "-", "2", "]", "=", "imgs", "[", ":", ",", ":", ",", "2", ":", "-", "2", ",", "2", ":", "-", "2", "]", "\n", "refined", "[", "refined", ">", "0.8", "]", "=", "1.", "\n", "return", "refined", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.make_comparable_grid": [[19, 35], ["all", "len", "range", "torch.cat", "torch.cat", "visualize.to_grid", "grids.append", "torch.zeros", "grids.append", "len", "len"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.to_grid"], ["", "def", "make_comparable_grid", "(", "*", "batches", ",", "nrow", ")", ":", "\n", "    ", "assert", "all", "(", "len", "(", "batches", "[", "0", "]", ")", "==", "len", "(", "batch", ")", "for", "batch", "in", "batches", "[", "1", ":", "]", ")", "\n", "N", "=", "len", "(", "batches", "[", "0", "]", ")", "\n", "\n", "grids", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "N", ",", "nrow", ")", ":", "\n", "        ", "rows", "=", "[", "batch", "[", "i", ":", "i", "+", "nrow", "]", "for", "batch", "in", "batches", "]", "\n", "row", "=", "torch", ".", "cat", "(", "rows", ")", "\n", "grid", "=", "to_grid", "(", "row", ",", "'torch'", ",", "nrow", "=", "nrow", ")", "\n", "grids", ".", "append", "(", "grid", ")", "\n", "\n", "C", ",", "_H", ",", "W", "=", "grid", ".", "shape", "\n", "sep_bar", "=", "torch", ".", "zeros", "(", "C", ",", "10", ",", "W", ")", "\n", "grids", ".", "append", "(", "sep_bar", ")", "\n", "\n", "", "return", "torch", ".", "cat", "(", "grids", "[", ":", "-", "1", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.normalize": [[37, 44], ["tensor.min", "tensor.max"], "function", ["None"], ["", "def", "normalize", "(", "tensor", ",", "eps", "=", "1e-5", ")", ":", "\n", "    ", "\"\"\" Normalize tensor to [0, 1] \"\"\"", "\n", "# eps=1e-5 is same as make_grid in torchvision.", "\n", "minv", ",", "maxv", "=", "tensor", ".", "min", "(", ")", ",", "tensor", ".", "max", "(", ")", "\n", "tensor", "=", "(", "tensor", "-", "minv", ")", "/", "(", "maxv", "-", "minv", "+", "eps", ")", "\n", "\n", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.to_grid": [[46, 65], ["to.lower.lower", "torchvision.utils.make_grid", "tv_utils.make_grid.mul().clamp().byte().permute().cpu().numpy", "PIL.Image.fromarray", "Image.fromarray.save", "tv_utils.make_grid.mul().clamp().byte().permute().cpu", "tv_utils.make_grid.mul().clamp().byte().permute", "tv_utils.make_grid.mul().clamp().byte", "tv_utils.make_grid.mul().clamp", "tv_utils.make_grid.mul"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save"], ["", "def", "to_grid", "(", "tensor", ",", "to", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\" Integrated functions of make_grid and save_image\n    Convert-able to torch tensor [0, 1] / ndarr [0, 255] / PIL image / file save\n    \"\"\"", "\n", "to", "=", "to", ".", "lower", "(", ")", "\n", "\n", "grid", "=", "tv_utils", ".", "make_grid", "(", "tensor", ",", "**", "kwargs", ",", "normalize", "=", "True", ")", "\n", "if", "to", "==", "'torch'", ":", "\n", "        ", "return", "grid", "\n", "\n", "", "ndarr", "=", "grid", ".", "mul", "(", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "to", "==", "'numpy'", ":", "\n", "        ", "return", "ndarr", "\n", "\n", "", "im", "=", "Image", ".", "fromarray", "(", "ndarr", ")", "\n", "if", "to", "==", "'pil'", ":", "\n", "        ", "return", "im", "\n", "\n", "", "im", ".", "save", "(", "to", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.save_tensor_to_image": [[67, 80], ["visualize.normalize", "normalize.mul().clamp().byte().permute().cpu().numpy", "PIL.Image.fromarray", "im.resize.save", "ndarr.squeeze.squeeze", "tuple", "im.resize.resize", "normalize.mul().clamp().byte().permute().cpu", "map", "normalize.mul().clamp().byte().permute", "int", "normalize.mul().clamp().byte", "normalize.mul().clamp", "normalize.mul"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.normalize", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save"], ["", "def", "save_tensor_to_image", "(", "tensor", ",", "filepath", ",", "scale", "=", "None", ")", ":", "\n", "    ", "\"\"\" Save torch tensor to filepath\n    Same as torchvision.save_image; only scale factor is difference.\n    \"\"\"", "\n", "tensor", "=", "normalize", "(", "tensor", ")", "\n", "ndarr", "=", "tensor", ".", "mul", "(", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "ndarr", ".", "shape", "[", "-", "1", "]", "==", "1", ":", "\n", "        ", "ndarr", "=", "ndarr", ".", "squeeze", "(", "-", "1", ")", "\n", "", "im", "=", "Image", ".", "fromarray", "(", "ndarr", ")", "\n", "if", "scale", ":", "\n", "        ", "size", "=", "tuple", "(", "map", "(", "lambda", "v", ":", "int", "(", "v", "*", "scale", ")", ",", "im", ".", "size", ")", ")", "\n", "im", "=", "im", ".", "resize", "(", "size", ",", "resample", "=", "Image", ".", "BILINEAR", ")", "\n", "", "im", ".", "save", "(", "filepath", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.__init__": [[27, 29], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.reset": [[30, 36], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\" Reset all statistics \"\"\"", "\n", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.set_value": [[37, 39], ["None"], "methods", ["None"], ["", "def", "set_value", "(", "self", ",", "val", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update": [[40, 46], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "\"\"\" Update statistics \"\"\"", "\n", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.__repr__": [[47, 49], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"{:.3f} (val={:.3f}, count={})\"", ".", "format", "(", "self", ".", "avg", ",", "self", ".", "val", ",", "self", ".", "count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeters.__init__": [[52, 56], ["setattr", "utils.AverageMeter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "keys", ")", ":", "\n", "        ", "self", ".", "keys", "=", "keys", "\n", "for", "k", "in", "keys", ":", "\n", "            ", "setattr", "(", "self", ",", "k", ",", "AverageMeter", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeters.resets": [[57, 60], ["getattr().reset", "getattr"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.reset"], ["", "", "def", "resets", "(", "self", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "keys", ":", "\n", "            ", "getattr", "(", "self", ",", "k", ")", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeters.updates": [[61, 64], ["dic.items", "getattr().update", "getattr"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update"], ["", "", "def", "updates", "(", "self", ",", "dic", ",", "n", "=", "1", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "dic", ".", "items", "(", ")", ":", "\n", "            ", "getattr", "(", "self", ",", "k", ")", ".", "update", "(", "v", ",", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeters.__repr__": [[65, 67], ["str", "getattr"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"  \"", ".", "join", "(", "[", "\"{}: {}\"", ".", "format", "(", "k", ",", "str", "(", "getattr", "(", "self", ",", "k", ")", ")", ")", "for", "k", "in", "self", ".", "keys", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.add_dim_and_reshape": [[14, 23], ["in_tensor.reshape"], "function", ["None"], ["def", "add_dim_and_reshape", "(", "in_tensor", ",", "in_dim_idx", ",", "out_dims", ")", ":", "\n", "    ", "in_shape", "=", "in_tensor", ".", "shape", "\n", "in_shape_l", "=", "in_shape", "[", ":", "in_dim_idx", "]", "\n", "in_shape_r", "=", "in_shape", "[", "in_dim_idx", "+", "1", ":", "]", "\n", "\n", "out_shape", "=", "[", "*", "in_shape_l", ",", "*", "out_dims", ",", "*", "in_shape_r", "]", "\n", "out_tensor", "=", "in_tensor", ".", "reshape", "(", "out_shape", ")", "\n", "\n", "return", "out_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.accuracy": [[69, 77], ["len", "out.topk", "target.repeat", "float"], "function", ["None"], ["", "", "def", "accuracy", "(", "out", ",", "target", ",", "k", "=", "1", ")", ":", "\n", "    ", "pred", "=", "out", ".", "topk", "(", "k", ")", "[", "1", "]", "\n", "target", "=", "target", ".", "repeat", "(", "k", ",", "1", ")", ".", "T", "\n", "corr", "=", "(", "pred", "==", "target", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "B", "=", "len", "(", "target", ")", "\n", "acc", "=", "float", "(", "corr", ")", "/", "B", "\n", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.cv_squared": [[79, 88], ["len", "torch.zeros", "torch.zeros.sum", "gates.sum.float().var", "torch.arange", "gates.sum.float", "gates.sum.float().mean", "gates.sum.float"], "function", ["None"], ["", "def", "cv_squared", "(", "ids", ",", "n_experts", ")", ":", "\n", "    ", "batch_size", "=", "len", "(", "ids", ")", "\n", "eps", "=", "1e-10", "\n", "\n", "gates", "=", "torch", ".", "zeros", "(", "batch_size", ",", "n_experts", ")", "\n", "gates", "[", "torch", ".", "arange", "(", "batch_size", ")", "]", "[", "ids", "]", "=", "1", "\n", "loads", "=", "gates", ".", "sum", "(", "0", ")", "# (4,)", "\n", "\n", "return", "loads", ".", "float", "(", ")", ".", "var", "(", ")", "/", "(", "loads", ".", "float", "(", ")", ".", "mean", "(", ")", "**", "2", "+", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.temporary_freeze": [[90, 95], ["utils.freeze", "utils.unfreeze"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.freeze", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.unfreeze"], ["", "@", "contextmanager", "\n", "def", "temporary_freeze", "(", "module", ")", ":", "\n", "    ", "org_grads", "=", "freeze", "(", "module", ")", "\n", "yield", "\n", "unfreeze", "(", "module", ",", "org_grads", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.freeze": [[97, 108], ["module.eval", "module.parameters", "org.append", "p.requires_grad_"], "function", ["None"], ["", "def", "freeze", "(", "module", ")", ":", "\n", "    ", "if", "module", "is", "None", ":", "\n", "        ", "return", "None", "\n", "\n", "", "org", "=", "[", "]", "\n", "module", ".", "eval", "(", ")", "\n", "for", "p", "in", "module", ".", "parameters", "(", ")", ":", "\n", "        ", "org", ".", "append", "(", "p", ".", "requires_grad", ")", "\n", "p", ".", "requires_grad_", "(", "False", ")", "\n", "\n", "", "return", "org", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.unfreeze": [[110, 120], ["module.train", "module.parameters", "iter", "p.requires_grad_", "next"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.train"], ["", "def", "unfreeze", "(", "module", ",", "org", "=", "None", ")", ":", "\n", "    ", "if", "module", "is", "None", ":", "\n", "        ", "return", "\n", "\n", "", "module", ".", "train", "(", ")", "\n", "if", "org", "is", "not", "None", ":", "\n", "        ", "org", "=", "iter", "(", "org", ")", "\n", "", "for", "p", "in", "module", ".", "parameters", "(", ")", ":", "\n", "        ", "grad", "=", "next", "(", "org", ")", "if", "org", "else", "True", "\n", "p", ".", "requires_grad_", "(", "grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.rm": [[122, 128], ["os.path.isdir", "shutil.rmtree", "os.path.exists", "os.remove"], "function", ["None"], ["", "", "def", "rm", "(", "path", ")", ":", "\n", "    ", "\"\"\" remove dir recursively \"\"\"", "\n", "if", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "        ", "shutil", ".", "rmtree", "(", "path", ")", "\n", "", "elif", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "remove", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.timestamp": [[130, 132], ["datetime.datetime.now().strftime", "datetime.datetime.now"], "function", ["None"], ["", "", "def", "timestamp", "(", "fmt", "=", "\"%y%m%d_%H-%M-%S\"", ")", ":", "\n", "    ", "return", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "fmt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFTrainDataset.__init__": [[18, 43], ["ttf_dataset.load_data_list", "ttf_dataset.TTFTrainDataset.key_char_dict.items", "ttf_dataset.TTFTrainDataset.filter_chars", "sorted", "sorted", "len", "len", "set.union", "list", "ttf_dataset.TTFTrainDataset.char_key_dict.setdefault().append", "ttf_dataset.TTFTrainDataset.key_char_dict.items", "map", "ttf_dataset.TTFTrainDataset.char_key_dict.setdefault", "ttf_dataset.TTFTrainDataset.key_char_dict.values"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.datasets.imagefolder_dataset.ImageTestDataset.load_data_list", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFTrainDataset.filter_chars"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "primals", ",", "decomposition", ",", "transform", "=", "None", ",", "\n", "n_in_s", "=", "3", ",", "n_in_c", "=", "3", ",", "source_font", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "primals", "=", "primals", "\n", "self", ".", "decomposition", "=", "decomposition", "\n", "\n", "self", ".", "key_font_dict", ",", "self", ".", "key_char_dict", "=", "load_data_list", "(", "data_dir", ",", "char_filter", "=", "list", "(", "self", ".", "decomposition", ")", ")", "\n", "self", ".", "char_key_dict", "=", "{", "}", "\n", "for", "key", ",", "charlist", "in", "self", ".", "key_char_dict", ".", "items", "(", ")", ":", "\n", "            ", "for", "char", "in", "charlist", ":", "\n", "                ", "self", ".", "char_key_dict", ".", "setdefault", "(", "char", ",", "[", "]", ")", ".", "append", "(", "key", ")", "\n", "\n", "", "", "self", ".", "key_char_dict", ",", "self", ".", "char_key_dict", "=", "self", ".", "filter_chars", "(", ")", "\n", "self", ".", "data_list", "=", "[", "(", "key", ",", "char", ")", "for", "key", ",", "chars", "in", "self", ".", "key_char_dict", ".", "items", "(", ")", "for", "char", "in", "chars", "]", "\n", "\n", "self", ".", "keys", "=", "sorted", "(", "self", ".", "key_font_dict", ")", "\n", "self", ".", "chars", "=", "sorted", "(", "set", ".", "union", "(", "*", "map", "(", "set", ",", "self", ".", "key_char_dict", ".", "values", "(", ")", ")", ")", ")", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "n_in_s", "=", "n_in_s", "\n", "self", ".", "n_in_c", "=", "n_in_c", "\n", "self", ".", "n_chars", "=", "len", "(", "self", ".", "chars", ")", "\n", "self", ".", "n_fonts", "=", "len", "(", "self", ".", "keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFTrainDataset.filter_chars": [[44, 59], ["ttf_dataset.TTFTrainDataset.char_key_dict.items", "list", "ttf_dataset.TTFTrainDataset.key_char_dict.items", "len", "list", "set().intersection", "set"], "methods", ["None"], ["", "def", "filter_chars", "(", "self", ")", ":", "\n", "        ", "char_key_dict", "=", "{", "}", "\n", "for", "char", ",", "keys", "in", "self", ".", "char_key_dict", ".", "items", "(", ")", ":", "\n", "            ", "num_keys", "=", "len", "(", "keys", ")", "\n", "if", "num_keys", ">", "1", ":", "\n", "                ", "char_key_dict", "[", "char", "]", "=", "keys", "\n", "", "else", ":", "\n", "                ", "pass", "\n", "\n", "", "", "filtered_chars", "=", "list", "(", "char_key_dict", ")", "\n", "key_char_dict", "=", "{", "}", "\n", "for", "key", ",", "chars", "in", "self", ".", "key_char_dict", ".", "items", "(", ")", ":", "\n", "            ", "key_char_dict", "[", "key", "]", "=", "list", "(", "set", "(", "chars", ")", ".", "intersection", "(", "filtered_chars", ")", ")", "\n", "\n", "", "return", "key_char_dict", ",", "char_key_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFTrainDataset.__getitem__": [[60, 93], ["ttf_dataset.TTFTrainDataset.keys.index", "ttf_dataset.TTFTrainDataset.chars.index", "ttf_dataset.TTFTrainDataset.transform", "ttf_dataset.sample", "torch.stack", "ttf_dataset.sample", "torch.stack", "ttf_utils.render", "ttf_dataset.TTFTrainDataset.primals.index", "ttf_dataset.TTFTrainDataset.keys.index", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "ttf_dataset.TTFTrainDataset.transform", "ttf_dataset.TTFTrainDataset.primals.index", "ttf_dataset.TTFTrainDataset.transform", "ttf_utils.render", "ttf_utils.render"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.sample", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.sample", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.render", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.render", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.render"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "key", ",", "char", "=", "self", ".", "data_list", "[", "index", "]", "\n", "font", "=", "self", ".", "key_font_dict", "[", "key", "]", "\n", "fidx", "=", "self", ".", "keys", ".", "index", "(", "key", ")", "\n", "cidx", "=", "self", ".", "chars", ".", "index", "(", "char", ")", "\n", "\n", "trg_img", "=", "self", ".", "transform", "(", "render", "(", "font", ",", "char", ")", ")", "\n", "trg_dec", "=", "[", "self", ".", "primals", ".", "index", "(", "x", ")", "for", "x", "in", "self", ".", "decomposition", "[", "char", "]", "]", "\n", "\n", "style_chars", "=", "sample", "(", "[", "c", "for", "c", "in", "self", ".", "key_char_dict", "[", "key", "]", "if", "c", "!=", "char", "]", ",", "self", ".", "n_in_s", ")", "\n", "style_imgs", "=", "torch", ".", "stack", "(", "[", "self", ".", "transform", "(", "render", "(", "font", ",", "c", ")", ")", "for", "c", "in", "style_chars", "]", ")", "\n", "style_decs", "=", "[", "[", "self", ".", "primals", ".", "index", "(", "x", ")", "for", "x", "in", "self", ".", "decomposition", "[", "c", "]", "]", "for", "c", "in", "style_chars", "]", "\n", "\n", "char_keys", "=", "sample", "(", "[", "k", "for", "k", "in", "self", ".", "char_key_dict", "[", "char", "]", "if", "k", "!=", "key", "]", ",", "self", ".", "n_in_c", ")", "\n", "\n", "char_imgs", "=", "torch", ".", "stack", "(", "[", "self", ".", "transform", "(", "render", "(", "self", ".", "key_font_dict", "[", "k", "]", ",", "char", ")", ")", "for", "k", "in", "char_keys", "]", ")", "\n", "char_decs", "=", "[", "trg_dec", "]", "*", "self", ".", "n_in_c", "\n", "char_fids", "=", "[", "self", ".", "keys", ".", "index", "(", "_k", ")", "for", "_k", "in", "char_keys", "]", "\n", "\n", "ret", "=", "{", "\n", "\"trg_imgs\"", ":", "trg_img", ",", "\n", "\"trg_decs\"", ":", "trg_dec", ",", "\n", "\"trg_fids\"", ":", "torch", ".", "LongTensor", "(", "[", "fidx", "]", ")", ",", "\n", "\"trg_cids\"", ":", "torch", ".", "LongTensor", "(", "[", "cidx", "]", ")", ",", "\n", "\"style_imgs\"", ":", "style_imgs", ",", "\n", "\"style_decs\"", ":", "style_decs", ",", "\n", "\"style_fids\"", ":", "torch", ".", "LongTensor", "(", "[", "fidx", "]", "*", "self", ".", "n_in_s", ")", ",", "\n", "\"char_imgs\"", ":", "char_imgs", ",", "\n", "\"char_decs\"", ":", "char_decs", ",", "\n", "\"char_fids\"", ":", "torch", ".", "LongTensor", "(", "char_fids", ")", "\n", "}", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFTrainDataset.__len__": [[94, 96], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFTrainDataset.collate_fn": [[97, 119], ["dp.items", "torch.stack", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "_ret.get", "_ret.update", "itertools.chain", "itertools.chain"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.get", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "batch", ")", ":", "\n", "        ", "_ret", "=", "{", "}", "\n", "for", "dp", "in", "batch", ":", "\n", "            ", "for", "key", ",", "value", "in", "dp", ".", "items", "(", ")", ":", "\n", "                ", "saved", "=", "_ret", ".", "get", "(", "key", ",", "[", "]", ")", "\n", "_ret", ".", "update", "(", "{", "key", ":", "saved", "+", "[", "value", "]", "}", ")", "\n", "\n", "", "", "ret", "=", "{", "\n", "\"trg_imgs\"", ":", "torch", ".", "stack", "(", "_ret", "[", "\"trg_imgs\"", "]", ")", ",", "\n", "\"trg_decs\"", ":", "_ret", "[", "\"trg_decs\"", "]", ",", "\n", "\"trg_fids\"", ":", "torch", ".", "cat", "(", "_ret", "[", "\"trg_fids\"", "]", ")", ",", "\n", "\"trg_cids\"", ":", "torch", ".", "cat", "(", "_ret", "[", "\"trg_cids\"", "]", ")", ",", "\n", "\"style_imgs\"", ":", "torch", ".", "stack", "(", "_ret", "[", "\"style_imgs\"", "]", ")", ",", "\n", "\"style_decs\"", ":", "[", "*", "chain", "(", "*", "_ret", "[", "\"style_decs\"", "]", ")", "]", ",", "\n", "\"style_fids\"", ":", "torch", ".", "stack", "(", "_ret", "[", "\"style_fids\"", "]", ")", ",", "\n", "\"char_imgs\"", ":", "torch", ".", "stack", "(", "_ret", "[", "\"char_imgs\"", "]", ")", ",", "\n", "\"char_decs\"", ":", "[", "*", "chain", "(", "*", "_ret", "[", "\"char_decs\"", "]", ")", "]", ",", "\n", "\"char_fids\"", ":", "torch", ".", "stack", "(", "_ret", "[", "\"char_fids\"", "]", ")", "\n", "}", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFValDataset.__init__": [[122, 142], ["ttf_dataset.load_data_list", "ttf_dataset.TTFValDataset.sample_ref_gen_chars", "ttf_utils.read_font", "ttf_dataset.TTFValDataset.key_char_dict.items", "ttf_dataset.TTFValDataset.filter_chars", "ttf_dataset.TTFValDataset.gen_char_dict.items", "ttf_dataset.TTFValDataset.char_key_dict.setdefault().append", "ttf_dataset.TTFValDataset.char_key_dict.setdefault"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.datasets.imagefolder_dataset.ImageTestDataset.load_data_list", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFValDataset.sample_ref_gen_chars", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.read_font", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFTrainDataset.filter_chars"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "source_font", ",", "char_filter", ",", "n_ref", "=", "4", ",", "n_gen", "=", "20", ",", "transform", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "source_font", "=", "read_font", "(", "source_font", ")", "if", "source_font", "is", "not", "None", "else", "None", "\n", "self", ".", "n_ref", "=", "n_ref", "\n", "self", ".", "n_gen", "=", "n_gen", "\n", "\n", "self", ".", "key_font_dict", ",", "self", ".", "key_char_dict", "=", "load_data_list", "(", "data_dir", ",", "char_filter", "=", "char_filter", ")", "\n", "if", "self", ".", "source_font", "is", "None", ":", "\n", "            ", "self", ".", "char_key_dict", "=", "{", "}", "\n", "for", "key", ",", "charlist", "in", "self", ".", "key_char_dict", ".", "items", "(", ")", ":", "\n", "                ", "for", "char", "in", "charlist", ":", "\n", "                    ", "self", ".", "char_key_dict", ".", "setdefault", "(", "char", ",", "[", "]", ")", ".", "append", "(", "key", ")", "\n", "\n", "", "", "self", ".", "key_char_dict", ",", "self", ".", "char_key_dict", "=", "self", ".", "filter_chars", "(", ")", "\n", "", "self", ".", "ref_chars", ",", "self", ".", "gen_chars", "=", "self", ".", "sample_ref_gen_chars", "(", "self", ".", "key_char_dict", ")", "\n", "\n", "self", ".", "gen_char_dict", "=", "{", "k", ":", "self", ".", "gen_chars", "for", "k", "in", "self", ".", "key_font_dict", "}", "\n", "self", ".", "data_list", "=", "[", "(", "key", ",", "char", ")", "for", "key", ",", "chars", "in", "self", ".", "gen_char_dict", ".", "items", "(", ")", "for", "char", "in", "chars", "]", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFValDataset.sample_ref_gen_chars": [[143, 150], ["sorted", "ttf_dataset.sample", "set.intersection", "map", "key_char_dict.values"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.sample"], ["", "def", "sample_ref_gen_chars", "(", "self", ",", "key_char_dict", ")", ":", "\n", "        ", "common_chars", "=", "sorted", "(", "set", ".", "intersection", "(", "*", "map", "(", "set", ",", "key_char_dict", ".", "values", "(", ")", ")", ")", ")", "\n", "sampled_chars", "=", "sample", "(", "common_chars", ",", "self", ".", "n_ref", "+", "self", ".", "n_gen", ")", "\n", "ref_chars", "=", "sampled_chars", "[", ":", "self", ".", "n_ref", "]", "\n", "gen_chars", "=", "sampled_chars", "[", "self", ".", "n_ref", ":", "]", "\n", "\n", "return", "ref_chars", ",", "gen_chars", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFValDataset.__getitem__": [[151, 176], ["torch.stack", "ttf_dataset.TTFValDataset.transform", "ttf_dataset.TTFValDataset.transform", "random.choice", "ttf_utils.render", "ttf_utils.render", "ttf_dataset.TTFValDataset.transform", "ttf_utils.render"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.render", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.render", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.render"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "key", ",", "char", "=", "self", ".", "data_list", "[", "index", "]", "\n", "font", "=", "self", ".", "key_font_dict", "[", "key", "]", "\n", "\n", "ref_imgs", "=", "torch", ".", "stack", "(", "[", "self", ".", "transform", "(", "render", "(", "font", ",", "c", ")", ")", "\n", "for", "c", "in", "self", ".", "ref_chars", "]", ")", "\n", "\n", "if", "self", ".", "source_font", "is", "not", "None", ":", "\n", "            ", "source_font", "=", "self", ".", "source_font", "\n", "", "else", ":", "\n", "            ", "source_key", "=", "random", ".", "choice", "(", "self", ".", "char_key_dict", "[", "char", "]", ")", "\n", "source_font", "=", "self", ".", "key_font_dict", "[", "source_key", "]", "\n", "\n", "", "source_img", "=", "self", ".", "transform", "(", "render", "(", "source_font", ",", "char", ")", ")", "\n", "trg_img", "=", "self", ".", "transform", "(", "render", "(", "font", ",", "char", ")", ")", "\n", "\n", "ret", "=", "{", "\n", "\"style_imgs\"", ":", "ref_imgs", ",", "\n", "\"source_imgs\"", ":", "source_img", ",", "\n", "\"fonts\"", ":", "key", ",", "\n", "\"chars\"", ":", "char", ",", "\n", "\"trg_imgs\"", ":", "trg_img", "\n", "}", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFValDataset.__len__": [[177, 179], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.TTFValDataset.collate_fn": [[180, 197], ["dp.items", "torch.stack", "torch.stack", "torch.stack", "_ret.get", "_ret.update"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.get", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "batch", ")", ":", "\n", "        ", "_ret", "=", "{", "}", "\n", "for", "dp", "in", "batch", ":", "\n", "            ", "for", "key", ",", "value", "in", "dp", ".", "items", "(", ")", ":", "\n", "                ", "saved", "=", "_ret", ".", "get", "(", "key", ",", "[", "]", ")", "\n", "_ret", ".", "update", "(", "{", "key", ":", "saved", "+", "[", "value", "]", "}", ")", "\n", "\n", "", "", "ret", "=", "{", "\n", "\"style_imgs\"", ":", "torch", ".", "stack", "(", "_ret", "[", "\"style_imgs\"", "]", ")", ",", "\n", "\"source_imgs\"", ":", "torch", ".", "stack", "(", "_ret", "[", "\"source_imgs\"", "]", ")", ",", "\n", "\"fonts\"", ":", "_ret", "[", "\"fonts\"", "]", ",", "\n", "\"chars\"", ":", "_ret", "[", "\"chars\"", "]", ",", "\n", "\"trg_imgs\"", ":", "torch", ".", "stack", "(", "_ret", "[", "\"trg_imgs\"", "]", ")", "\n", "}", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.sample": [[199, 206], ["sampler", "len"], "function", ["None"], ["", "", "def", "sample", "(", "population", ",", "k", ")", ":", "\n", "    ", "if", "len", "(", "population", ")", "<", "k", ":", "\n", "        ", "sampler", "=", "random", ".", "choices", "\n", "", "else", ":", "\n", "        ", "sampler", "=", "random", ".", "sample", "\n", "", "sampled", "=", "sampler", "(", "population", ",", "k", "=", "k", ")", "\n", "return", "sampled", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_dataset.load_data_list": [[208, 226], ["sorted", "pathlib.Path().glob", "ttf_utils.read_font", "list", "open", "f.read", "set().intersection", "pathlib.Path", "str().replace", "set", "str"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.read_font"], ["", "def", "load_data_list", "(", "data_dir", ",", "char_filter", "=", "None", ")", ":", "\n", "    ", "font_paths", "=", "sorted", "(", "Path", "(", "data_dir", ")", ".", "glob", "(", "\"*.ttf\"", ")", ")", "\n", "\n", "key_font_dict", "=", "{", "}", "\n", "key_char_dict", "=", "{", "}", "\n", "\n", "for", "font_path", "in", "font_paths", ":", "\n", "        ", "font", "=", "read_font", "(", "font_path", ")", "\n", "key_font_dict", "[", "font_path", ".", "stem", "]", "=", "font", "\n", "\n", "with", "open", "(", "str", "(", "font_path", ")", ".", "replace", "(", "\".ttf\"", ",", "\".txt\"", ")", ")", "as", "f", ":", "\n", "            ", "chars", "=", "f", ".", "read", "(", ")", "\n", "\n", "", "if", "char_filter", "is", "not", "None", ":", "\n", "            ", "chars", "=", "set", "(", "chars", ")", ".", "intersection", "(", "char_filter", ")", "\n", "", "key_char_dict", "[", "font_path", ".", "stem", "]", "=", "list", "(", "chars", ")", "\n", "\n", "", "return", "key_font_dict", ",", "key_char_dict", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.imagefolder_dataset.ImageTestDataset.__init__": [[18, 32], ["pathlib.Path", "ttf_utils.read_font", "ttf_utils.get_filtered_chars", "imagefolder_dataset.ImageTestDataset.load_data_list", "json.load", "list", "open", "set().intersection", "imagefolder_dataset.ImageTestDataset.gen_char_dict.items", "set", "set"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.read_font", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.get_filtered_chars", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.imagefolder_dataset.ImageTestDataset.load_data_list"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "source_font", ",", "gen_chars_file", "=", "None", ",", "transform", "=", "None", ",", "extension", "=", "\"png\"", ")", ":", "\n", "\n", "        ", "self", ".", "data_dir", "=", "Path", "(", "data_dir", ")", "\n", "self", ".", "source_font", "=", "read_font", "(", "source_font", ")", "\n", "self", ".", "gen_chars", "=", "get_filtered_chars", "(", "source_font", ")", "\n", "if", "gen_chars_file", "is", "not", "None", ":", "\n", "            ", "gen_chars", "=", "json", ".", "load", "(", "open", "(", "gen_chars_file", ")", ")", "\n", "self", ".", "gen_chars", "=", "list", "(", "set", "(", "self", ".", "gen_chars", ")", ".", "intersection", "(", "set", "(", "gen_chars", ")", ")", ")", "\n", "\n", "", "self", ".", "font_ref_chars", "=", "self", ".", "load_data_list", "(", "self", ".", "data_dir", ",", "extension", ")", "\n", "\n", "self", ".", "gen_char_dict", "=", "{", "k", ":", "self", ".", "gen_chars", "for", "k", "in", "self", ".", "font_ref_chars", "}", "\n", "self", ".", "data_list", "=", "[", "(", "key", ",", "char", ")", "for", "key", ",", "chars", "in", "self", ".", "gen_char_dict", ".", "items", "(", ")", "for", "char", "in", "chars", "]", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.imagefolder_dataset.ImageTestDataset.load_data_list": [[33, 41], ["data_dir.iterdir", "x.is_dir"], "methods", ["None"], ["", "def", "load_data_list", "(", "self", ",", "data_dir", ",", "extension", ")", ":", "\n", "        ", "fonts", "=", "[", "x", ".", "name", "for", "x", "in", "data_dir", ".", "iterdir", "(", ")", "if", "x", ".", "is_dir", "(", ")", "]", "\n", "\n", "font_chars", "=", "{", "}", "\n", "for", "font", "in", "fonts", ":", "\n", "            ", "chars", "=", "[", "x", ".", "name", "for", "x", "in", "(", "self", ".", "data_dir", "/", "font", ")", ".", "glob", "(", "f\"*.{extension}\"", ")", "]", "\n", "font_chars", "[", "font", "]", "=", "chars", "\n", "", "return", "font_chars", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.imagefolder_dataset.ImageTestDataset.__getitem__": [[42, 56], ["torch.stack", "imagefolder_dataset.ImageTestDataset.transform", "ttf_utils.render", "imagefolder_dataset.ImageTestDataset.transform", "PIL.Image.open", "str"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.render"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "font", ",", "char", "=", "self", ".", "data_list", "[", "index", "]", "\n", "ref_imgs", "=", "torch", ".", "stack", "(", "[", "self", ".", "transform", "(", "Image", ".", "open", "(", "str", "(", "self", ".", "data_dir", "/", "font", "/", "f\"{rc}\"", ")", ")", ")", "\n", "for", "rc", "in", "self", ".", "font_ref_chars", "[", "font", "]", "]", ")", "\n", "source_img", "=", "self", ".", "transform", "(", "render", "(", "self", ".", "source_font", ",", "char", ")", ")", "\n", "\n", "ret", "=", "{", "\n", "\"style_imgs\"", ":", "ref_imgs", ",", "\n", "\"source_imgs\"", ":", "source_img", ",", "\n", "\"fonts\"", ":", "font", ",", "\n", "\"chars\"", ":", "char", ",", "\n", "}", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.imagefolder_dataset.ImageTestDataset.__len__": [[57, 59], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.imagefolder_dataset.ImageTestDataset.collate_fn": [[60, 76], ["dp.items", "torch.stack", "torch.stack", "_ret.get", "_ret.update"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.get", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "batch", ")", ":", "\n", "        ", "_ret", "=", "{", "}", "\n", "for", "dp", "in", "batch", ":", "\n", "            ", "for", "key", ",", "value", "in", "dp", ".", "items", "(", ")", ":", "\n", "                ", "saved", "=", "_ret", ".", "get", "(", "key", ",", "[", "]", ")", "\n", "_ret", ".", "update", "(", "{", "key", ":", "saved", "+", "[", "value", "]", "}", ")", "\n", "\n", "", "", "ret", "=", "{", "\n", "\"style_imgs\"", ":", "torch", ".", "stack", "(", "_ret", "[", "\"style_imgs\"", "]", ")", ",", "\n", "\"source_imgs\"", ":", "torch", ".", "stack", "(", "_ret", "[", "\"source_imgs\"", "]", ")", ",", "\n", "\"fonts\"", ":", "_ret", "[", "\"fonts\"", "]", ",", "\n", "\"chars\"", ":", "_ret", "[", "\"chars\"", "]", ",", "\n", "}", "\n", "\n", "return", "ret", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.get_defined_chars": [[12, 16], ["fontTools.ttLib.TTFont", "chr", "ttf[].tables[].cmap.keys"], "function", ["None"], ["def", "get_defined_chars", "(", "fontfile", ")", ":", "\n", "    ", "ttf", "=", "TTFont", "(", "fontfile", ")", "\n", "chars", "=", "[", "chr", "(", "y", ")", "for", "y", "in", "ttf", "[", "\"cmap\"", "]", ".", "tables", "[", "0", "]", ".", "cmap", ".", "keys", "(", ")", "]", "\n", "return", "chars", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.get_filtered_chars": [[18, 31], ["ttf_utils.read_font", "ttf_utils.get_defined_chars", "numpy.array", "ttf_utils.render", "np.array.mean", "avail_chars.append", "char.encode().decode", "char.encode"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.read_font", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.get_defined_chars", "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.render", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.decode", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.encode"], ["", "def", "get_filtered_chars", "(", "fontpath", ")", ":", "\n", "    ", "ttf", "=", "read_font", "(", "fontpath", ")", "\n", "defined_chars", "=", "get_defined_chars", "(", "fontpath", ")", "\n", "avail_chars", "=", "[", "]", "\n", "\n", "for", "char", "in", "defined_chars", ":", "\n", "        ", "img", "=", "np", ".", "array", "(", "render", "(", "ttf", ",", "char", ")", ")", "\n", "if", "img", ".", "mean", "(", ")", "==", "255.", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "avail_chars", ".", "append", "(", "char", ".", "encode", "(", "'utf-16'", ",", "'surrogatepass'", ")", ".", "decode", "(", "'utf-16'", ")", ")", "\n", "\n", "", "", "return", "avail_chars", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.read_font": [[33, 36], ["PIL.ImageFont.truetype", "str"], "function", ["None"], ["", "def", "read_font", "(", "fontfile", ",", "size", "=", "150", ")", ":", "\n", "    ", "font", "=", "ImageFont", ".", "truetype", "(", "str", "(", "fontfile", ")", ",", "size", "=", "size", ")", "\n", "return", "font", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.ttf_utils.render": [[38, 54], ["font.getsize", "max", "PIL.Image.new", "PIL.ImageDraw.Draw", "ImageDraw.Draw.text", "img.resize.resize"], "function", ["None"], ["", "def", "render", "(", "font", ",", "char", ",", "size", "=", "(", "128", ",", "128", ")", ",", "pad", "=", "20", ")", ":", "\n", "    ", "width", ",", "height", "=", "font", ".", "getsize", "(", "char", ")", "\n", "max_size", "=", "max", "(", "width", ",", "height", ")", "\n", "\n", "if", "width", "<", "height", ":", "\n", "        ", "start_w", "=", "(", "height", "-", "width", ")", "//", "2", "+", "pad", "\n", "start_h", "=", "pad", "\n", "", "else", ":", "\n", "        ", "start_w", "=", "pad", "\n", "start_h", "=", "(", "width", "-", "height", ")", "//", "2", "+", "pad", "\n", "\n", "", "img", "=", "Image", ".", "new", "(", "\"L\"", ",", "(", "max_size", "+", "(", "pad", "*", "2", ")", ",", "max_size", "+", "(", "pad", "*", "2", ")", ")", ",", "255", ")", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "img", ")", "\n", "draw", ".", "text", "(", "(", "start_w", ",", "start_h", ")", ",", "char", ",", "font", "=", "font", ")", "\n", "img", "=", "img", ".", "resize", "(", "size", ",", "2", ")", "\n", "return", "img", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.__init__.get_trn_loader": [[15, 30], ["ttf_dataset.TTFTrainDataset", "torch.utils.data.DataLoader", "torch.utils.data.distributed.DistributedSampler"], "function", ["None"], ["__all__", "=", "[", "\n", "\"Logger\"", ",", "\"add_dim_and_reshape\"", ",", "\"AverageMeter\"", ",", "\"AverageMeters\"", ",", "\"temporary_freeze\"", ",", "\n", "\"freeze\"", ",", "\"unfreeze\"", ",", "\"rm\"", ",", "\"refine\"", ",", "\"make_comparable_grid\"", ",", "\"save_tensor_to_image\"", ",", "\n", "\"DiskWriter\"", ",", "\"TBDiskWriter\"", "]", "\n", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.__init__.get_val_loader": [[32, 42], ["ttf_dataset.TTFValDataset", "torch.utils.data.DataLoader", "chr", "range", "int", "int"], "function", ["None"], []], "home.repos.pwc.inspect_result.clovaai_mxfont.datasets.__init__.get_test_loader": [[44, 52], ["imagefolder_dataset.ImageTestDataset", "torch.utils.data.DataLoader"], "function", ["None"], []], "home.repos.pwc.inspect_result.clovaai_mxfont.models.discriminator.ProjectionDiscriminator.__init__": [[15, 22], ["torch.Module.__init__", "modules.w_norm_dispatch", "modules.w_norm_dispatch.", "modules.w_norm_dispatch.", "modules.activ_dispatch", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.Embedding"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.w_norm_dispatch", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.activ_dispatch"], ["def", "__init__", "(", "self", ",", "C", ",", "n_fonts", ",", "n_chars", ",", "w_norm", "=", "'spectral'", ",", "activ", "=", "'none'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "activ", "=", "activ_dispatch", "(", "activ", ")", "(", ")", "\n", "w_norm", "=", "w_norm_dispatch", "(", "w_norm", ")", "\n", "self", ".", "font_emb", "=", "w_norm", "(", "nn", ".", "Embedding", "(", "n_fonts", ",", "C", ")", ")", "\n", "self", ".", "char_emb", "=", "w_norm", "(", "nn", ".", "Embedding", "(", "n_chars", ",", "C", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.discriminator.ProjectionDiscriminator.forward": [[23, 32], ["discriminator.ProjectionDiscriminator.activ", "discriminator.ProjectionDiscriminator.font_emb", "discriminator.ProjectionDiscriminator.char_emb", "torch.einsum().unsqueeze", "torch.einsum().unsqueeze", "torch.einsum().unsqueeze", "torch.einsum().unsqueeze", "torch.einsum().unsqueeze", "torch.einsum().unsqueeze", "torch.einsum().unsqueeze", "torch.einsum().unsqueeze", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "discriminator.ProjectionDiscriminator.float", "discriminator.ProjectionDiscriminator.float", "discriminator.ProjectionDiscriminator.float", "discriminator.ProjectionDiscriminator.float"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "font_indice", ",", "char_indice", ")", ":", "\n", "        ", "x", "=", "self", ".", "activ", "(", "x", ")", "\n", "font_emb", "=", "self", ".", "font_emb", "(", "font_indice", ")", "\n", "char_emb", "=", "self", ".", "char_emb", "(", "char_indice", ")", "\n", "\n", "font_out", "=", "torch", ".", "einsum", "(", "'bchw,bc->bhw'", ",", "x", ".", "float", "(", ")", ",", "font_emb", ".", "float", "(", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "char_out", "=", "torch", ".", "einsum", "(", "'bchw,bc->bhw'", ",", "x", ".", "float", "(", ")", ",", "char_emb", ".", "float", "(", ")", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "return", "[", "font_out", ",", "char_out", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.discriminator.ProjectionDiscriminator.extend_font": [[33, 43], ["torch.utils.remove_spectral_norm", "torch.utils.remove_spectral_norm", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "discriminator.ProjectionDiscriminator.font_emb.weight[].unsqueeze"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.modules.modules.spectral_norm", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.modules.spectral_norm"], ["", "def", "extend_font", "(", "self", ",", "font_idx", ")", ":", "\n", "        ", "\"\"\" extend font by cloning font index \"\"\"", "\n", "nn", ".", "utils", ".", "remove_spectral_norm", "(", "self", ".", "font_emb", ")", "\n", "\n", "self", ".", "font_emb", ".", "weight", ".", "data", "=", "torch", ".", "cat", "(", "\n", "[", "self", ".", "font_emb", ".", "weight", ",", "self", ".", "font_emb", ".", "weight", "[", "font_idx", "]", ".", "unsqueeze", "(", "0", ")", "]", "\n", ")", "\n", "self", ".", "font_emb", ".", "num_embeddings", "+=", "1", "\n", "\n", "self", ".", "font_emb", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "self", ".", "font_emb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.discriminator.ProjectionDiscriminator.extend_chars": [[44, 54], ["torch.utils.remove_spectral_norm", "torch.utils.remove_spectral_norm", "discriminator.ProjectionDiscriminator.char_emb.weight.mean().repeat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.utils.spectral_norm", "torch.utils.spectral_norm", "discriminator.ProjectionDiscriminator.char_emb.weight.mean"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.modules.modules.spectral_norm", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.modules.spectral_norm"], ["", "def", "extend_chars", "(", "self", ",", "n_chars", ")", ":", "\n", "        ", "nn", ".", "utils", ".", "remove_spectral_norm", "(", "self", ".", "char_emb", ")", "\n", "\n", "mean_emb", "=", "self", ".", "char_emb", ".", "weight", ".", "mean", "(", "0", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "n_chars", ",", "1", ")", "\n", "self", ".", "char_emb", ".", "weight", ".", "data", "=", "torch", ".", "cat", "(", "\n", "[", "self", ".", "char_emb", ".", "weight", ",", "mean_emb", "]", "\n", ")", "\n", "self", ".", "char_emb", ".", "num_embeddings", "+=", "n_chars", "\n", "\n", "self", ".", "char_emb", "=", "nn", ".", "utils", ".", "spectral_norm", "(", "self", ".", "char_emb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.discriminator.CustomDiscriminator.__init__": [[60, 65], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["def", "__init__", "(", "self", ",", "feats", ",", "gap", ",", "projD", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feats", "=", "feats", "\n", "self", ".", "gap", "=", "gap", "\n", "self", ".", "projD", "=", "projD", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.discriminator.CustomDiscriminator.forward": [[66, 81], ["discriminator.CustomDiscriminator.gap", "discriminator.CustomDiscriminator.projD", "tuple", "layer", "feats.append", "map", "i.cuda"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "font_indice", ",", "char_indice", ",", "out_feats", "=", "'none'", ")", ":", "\n", "        ", "assert", "out_feats", "in", "{", "'none'", ",", "'all'", "}", "\n", "feats", "=", "[", "]", "\n", "for", "layer", "in", "self", ".", "feats", ":", "\n", "            ", "x", "=", "layer", "(", "x", ")", "\n", "feats", ".", "append", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "gap", "(", "x", ")", "# final features", "\n", "ret", "=", "self", ".", "projD", "(", "x", ",", "font_indice", ",", "char_indice", ")", "\n", "\n", "if", "out_feats", "==", "'all'", ":", "\n", "            ", "ret", "+=", "feats", "\n", "\n", "", "ret", "=", "tuple", "(", "map", "(", "lambda", "i", ":", "i", ".", "cuda", "(", ")", ",", "ret", ")", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.discriminator.disc_builder": [[83, 112], ["functools.partial", "functools.partial", "modules.activ_dispatch", "torch.ModuleList", "torch.Sequential", "discriminator.ProjectionDiscriminator", "discriminator.CustomDiscriminator", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "modules.activ_dispatch.", "torch.AdaptiveAvgPool2d"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.activ_dispatch"], ["", "", "def", "disc_builder", "(", "C", ",", "n_fonts", ",", "n_chars", ",", "activ", "=", "'relu'", ",", "gap_activ", "=", "'relu'", ",", "w_norm", "=", "'spectral'", ",", "\n", "pad_type", "=", "'reflect'", ",", "res_scale_var", "=", "False", ")", ":", "\n", "    ", "ConvBlk", "=", "partial", "(", "ConvBlock", ",", "w_norm", "=", "w_norm", ",", "activ", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "\n", "ResBlk", "=", "partial", "(", "\n", "ResBlock", ",", "w_norm", "=", "w_norm", ",", "activ", "=", "activ", ",", "pad_type", "=", "pad_type", ",", "scale_var", "=", "res_scale_var", "\n", ")", "\n", "feats", "=", "[", "\n", "ConvBlk", "(", "1", ",", "C", ",", "stride", "=", "2", ",", "activ", "=", "'none'", ")", ",", "# 64x64 (stirde==2)", "\n", "ResBlk", "(", "C", "*", "1", ",", "C", "*", "2", ",", "downsample", "=", "True", ")", ",", "# 32x32", "\n", "ResBlk", "(", "C", "*", "2", ",", "C", "*", "4", ",", "downsample", "=", "True", ")", ",", "# 16x16", "\n", "ResBlk", "(", "C", "*", "4", ",", "C", "*", "8", ",", "downsample", "=", "True", ")", ",", "# 8x8", "\n", "ResBlk", "(", "C", "*", "8", ",", "C", "*", "16", ",", "downsample", "=", "False", ")", ",", "# 8x8", "\n", "ResBlk", "(", "C", "*", "16", ",", "C", "*", "16", ",", "downsample", "=", "False", ")", ",", "# 8x8", "\n", "]", "\n", "\n", "gap_activ", "=", "activ_dispatch", "(", "gap_activ", ")", "\n", "gaps", "=", "[", "\n", "gap_activ", "(", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "]", "\n", "projD_C_in", "=", "feats", "[", "-", "1", "]", ".", "C_out", "\n", "\n", "feats", "=", "nn", ".", "ModuleList", "(", "feats", ")", "\n", "gap", "=", "nn", ".", "Sequential", "(", "*", "gaps", ")", "\n", "projD", "=", "ProjectionDiscriminator", "(", "projD_C_in", ",", "n_fonts", ",", "n_chars", ",", "w_norm", "=", "w_norm", ")", "\n", "\n", "disc", "=", "CustomDiscriminator", "(", "feats", ",", "gap", ",", "projD", ")", "\n", "\n", "return", "disc", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.decoder.Integrator.__init__": [[14, 17], ["torch.Module.__init__", "modules.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "norm", "=", "'none'", ",", "activ", "=", "'none'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "integrate_layer", "=", "ConvBlock", "(", "C_in", ",", "C_out", ",", "1", ",", "1", ",", "0", ",", "norm", "=", "norm", ",", "activ", "=", "activ", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.decoder.Integrator.forward": [[18, 23], ["decoder.Integrator.integrate_layer", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "integrated", ")", ":", "\n", "        ", "out", "=", "self", ".", "integrate_layer", "(", "integrated", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "x", ",", "out", "]", ",", "dim", "=", "1", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.decoder.Decoder.__init__": [[26, 39], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.Sigmoid", "torch.Sigmoid", "torch.Tanh", "torch.Tanh", "ValueError"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "skip_idx", "=", "None", ",", "skip_layer", "=", "None", ",", "out", "=", "'sigmoid'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", "layers", ")", "\n", "\n", "self", ".", "skip_idx", "=", "skip_idx", "\n", "self", ".", "skip_layer", "=", "skip_layer", "\n", "\n", "if", "out", "==", "'sigmoid'", ":", "\n", "            ", "self", ".", "out", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "out", "==", "'tanh'", ":", "\n", "            ", "self", ".", "out", "=", "nn", ".", "Tanh", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.decoder.Decoder.forward": [[40, 50], ["enumerate", "decoder.Decoder.out", "layer", "decoder.Decoder.skip_layer", "last.flatten.flatten.flatten", "skip.flatten"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "last", ",", "skip", "=", "None", ")", ":", "\n", "        ", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "            ", "if", "i", "==", "self", ".", "skip_idx", ":", "\n", "                ", "last", "=", "self", ".", "skip_layer", "(", "last", ",", "integrated", "=", "skip", ".", "flatten", "(", "1", ",", "2", ")", ")", "\n", "\n", "", "if", "i", "==", "0", ":", "\n", "                ", "last", "=", "last", ".", "flatten", "(", "1", ",", "2", ")", "\n", "", "last", "=", "layer", "(", "last", ")", "\n", "\n", "", "return", "self", ".", "out", "(", "last", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.decoder.dec_builder": [[52, 72], ["functools.partial", "functools.partial", "functools.partial", "functools.partial.", "decoder.Decoder", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial.", "functools.partial."], "function", ["None"], ["", "", "def", "dec_builder", "(", "C", ",", "C_out", ",", "n_experts", ",", "norm", "=", "'IN'", ",", "activ", "=", "'relu'", ",", "pad_type", "=", "'reflect'", ",", "out", "=", "'sigmoid'", ")", ":", "\n", "\n", "    ", "ConvBlk", "=", "partial", "(", "ConvBlock", ",", "norm", "=", "norm", ",", "activ", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "\n", "ResBlk", "=", "partial", "(", "ResBlock", ",", "norm", "=", "norm", ",", "activ", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "\n", "IntegrateBlk", "=", "partial", "(", "Integrator", ",", "norm", "=", "'none'", ",", "activ", "=", "'none'", ")", "\n", "\n", "layers", "=", "[", "\n", "ConvBlk", "(", "C", "*", "8", "*", "n_experts", ",", "C", "*", "8", ",", "1", ",", "1", ",", "0", ",", "norm", "=", "\"none\"", ",", "activ", "=", "\"none\"", ")", ",", "\n", "ResBlk", "(", "C", "*", "8", ",", "C", "*", "8", ",", "3", ",", "1", ")", ",", "\n", "ResBlk", "(", "C", "*", "8", ",", "C", "*", "8", ",", "3", ",", "1", ")", ",", "\n", "ResBlk", "(", "C", "*", "8", ",", "C", "*", "8", ",", "3", ",", "1", ")", ",", "\n", "ConvBlk", "(", "C", "*", "8", ",", "C", "*", "4", ",", "3", ",", "1", ",", "1", ",", "upsample", "=", "True", ")", ",", "# 32x32", "\n", "ConvBlk", "(", "C", "*", "8", ",", "C", "*", "2", ",", "3", ",", "1", ",", "1", ",", "upsample", "=", "True", ")", ",", "# 64x64", "\n", "ConvBlk", "(", "C", "*", "2", ",", "C", "*", "1", ",", "3", ",", "1", ",", "1", ",", "upsample", "=", "True", ")", ",", "# 128x128", "\n", "ConvBlk", "(", "C", "*", "1", ",", "C_out", ",", "3", ",", "1", ",", "1", ")", "\n", "]", "\n", "skip_idx", "=", "5", "\n", "skip_layer", "=", "IntegrateBlk", "(", "C", "*", "4", "*", "n_experts", ",", "C", "*", "4", ")", "\n", "\n", "return", "Decoder", "(", "layers", ",", "skip_idx", ",", "skip_layer", ",", "out", "=", "out", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.__init__": [[17, 42], ["torch.Module.__init__", "style_encoder.style_enc_builder", "experts.exp_builder", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "torch.ModuleDict", "decoder.dec_builder", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "range", "range"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__", "home.repos.pwc.inspect_result.clovaai_mxfont.models.style_encoder.style_enc_builder", "home.repos.pwc.inspect_result.clovaai_mxfont.models.experts.exp_builder", "home.repos.pwc.inspect_result.clovaai_mxfont.models.decoder.dec_builder"], ["    ", "def", "__init__", "(", "self", ",", "C_in", ",", "C", ",", "C_out", ",", "style_enc", ",", "experts", ",", "emb_num", ",", "dec", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "style_enc", "=", "style_enc_builder", "(", "\n", "C_in", ",", "C", ",", "**", "style_enc", ")", "\n", "self", ".", "experts", "=", "exp_builder", "(", "C", ",", "**", "experts", ")", "\n", "\n", "self", ".", "n_experts", "=", "self", ".", "experts", ".", "n_experts", "\n", "self", ".", "feat_shape", "=", "{", "\"last\"", ":", "self", ".", "experts", ".", "out_shape", ",", "\"skip\"", ":", "self", ".", "experts", ".", "skip_shape", "}", "\n", "\n", "self", ".", "fact_blocks", "=", "{", "}", "\n", "self", ".", "recon_blocks", "=", "{", "}", "\n", "\n", "self", ".", "emb_num", "=", "emb_num", "\n", "for", "_key", "in", "self", ".", "feat_shape", ":", "\n", "            ", "_feat_C", "=", "self", ".", "feat_shape", "[", "_key", "]", "[", "0", "]", "\n", "self", ".", "fact_blocks", "[", "_key", "]", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Conv2d", "(", "_feat_C", ",", "emb_num", "*", "_feat_C", ",", "1", ",", "1", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "n_experts", ")", "]", ")", "\n", "self", ".", "recon_blocks", "[", "_key", "]", "=", "nn", ".", "ModuleList", "(", "[", "nn", ".", "Conv2d", "(", "emb_num", "*", "_feat_C", ",", "_feat_C", ",", "1", ",", "1", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "n_experts", ")", "]", ")", "\n", "\n", "", "self", ".", "fact_blocks", "=", "nn", ".", "ModuleDict", "(", "self", ".", "fact_blocks", ")", "\n", "self", ".", "recon_blocks", "=", "nn", ".", "ModuleDict", "(", "self", ".", "recon_blocks", ")", "\n", "\n", "self", ".", "decoder", "=", "dec_builder", "(", "\n", "C", ",", "C_out", ",", "**", "dec", ",", "n_experts", "=", "self", ".", "n_experts", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.encode": [[44, 49], ["generator.Generator.style_enc", "generator.Generator.experts"], "methods", ["None"], ["", "def", "encode", "(", "self", ",", "img", ")", ":", "\n", "        ", "feats", "=", "self", ".", "style_enc", "(", "img", ")", "\n", "feats", "=", "self", ".", "experts", "(", "feats", ")", "\n", "\n", "return", "feats", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.factorize": [[50, 65], ["feats.items", "ValueError", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "utils.add_dim_and_reshape", "torch.stack.append", "torch.stack.append"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.add_dim_and_reshape"], ["", "def", "factorize", "(", "self", ",", "feats", ",", "emb_dim", "=", "0", ")", ":", "\n", "        ", "if", "self", ".", "emb_num", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"embedding blocks are not defined.\"", ")", "\n", "\n", "", "factors", "=", "{", "}", "\n", "for", "_key", ",", "_feat", "in", "feats", ".", "items", "(", ")", ":", "\n", "            ", "_fact", "=", "[", "]", "\n", "for", "_i", "in", "range", "(", "self", ".", "n_experts", ")", ":", "\n", "                ", "_fact_i", "=", "self", ".", "fact_blocks", "[", "_key", "]", "[", "_i", "]", "(", "_feat", "[", ":", ",", "_i", "]", ")", "\n", "_fact_i", "=", "utils", ".", "add_dim_and_reshape", "(", "_fact_i", ",", "1", ",", "(", "self", ".", "emb_num", ",", "-", "1", ")", ")", "# (bs*n_s, n_exp, emb_num, *feat_shape)", "\n", "_fact", ".", "append", "(", "_fact_i", "[", ":", ",", "emb_dim", "]", ")", "\n", "", "_fact", "=", "torch", ".", "stack", "(", "_fact", ",", "dim", "=", "1", ")", "\n", "factors", "[", "_key", "]", "=", "_fact", "\n", "\n", "", "return", "factors", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.defactorize": [[66, 77], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "len", "range"], "methods", ["None"], ["", "def", "defactorize", "(", "self", ",", "fact_list", ")", ":", "\n", "        ", "feats", "=", "{", "}", "\n", "for", "_key", "in", "self", ".", "fact_blocks", ":", "\n", "            ", "_shape", "=", "self", ".", "feat_shape", "[", "_key", "]", "\n", "_cat_dim", "=", "-", "len", "(", "_shape", ")", "\n", "_cat_facts", "=", "torch", ".", "cat", "(", "[", "_fact", "[", "_key", "]", "for", "_fact", "in", "fact_list", "]", ",", "dim", "=", "_cat_dim", ")", "\n", "_feat", "=", "torch", ".", "stack", "(", "[", "self", ".", "recon_blocks", "[", "_key", "]", "[", "_i", "]", "(", "_cat_facts", "[", ":", ",", "_i", "]", ")", "\n", "for", "_i", "in", "range", "(", "self", ".", "n_experts", ")", "]", ",", "dim", "=", "1", ")", "\n", "feats", "[", "_key", "]", "=", "_feat", "\n", "\n", "", "return", "feats", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.decode": [[78, 81], ["generator.Generator.decoder"], "methods", ["None"], ["", "def", "decode", "(", "self", ",", "feats", ")", ":", "\n", "        ", "out", "=", "self", ".", "decoder", "(", "**", "feats", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.gen_from_style_char": [[82, 94], ["len", "generator.Generator.factorize", "generator.Generator.factorize", "generator.Generator.defactorize", "generator.Generator.decode", "generator.Generator.encode", "generator.Generator.encode", "utils.add_dim_and_reshape().mean", "utils.add_dim_and_reshape().mean", "style_imgs.flatten", "char_imgs.flatten", "generator.Generator.items", "generator.Generator.items", "utils.add_dim_and_reshape", "utils.add_dim_and_reshape"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.factorize", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.factorize", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.defactorize", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.decode", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.encode", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.encode", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.add_dim_and_reshape", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.add_dim_and_reshape"], ["", "def", "gen_from_style_char", "(", "self", ",", "style_imgs", ",", "char_imgs", ")", ":", "\n", "        ", "B", "=", "len", "(", "style_imgs", ")", "\n", "style_facts", "=", "self", ".", "factorize", "(", "self", ".", "encode", "(", "style_imgs", ".", "flatten", "(", "0", ",", "1", ")", ")", ",", "0", ")", "\n", "char_facts", "=", "self", ".", "factorize", "(", "self", ".", "encode", "(", "char_imgs", ".", "flatten", "(", "0", ",", "1", ")", ")", ",", "1", ")", "\n", "\n", "m_style_facts", "=", "{", "_k", ":", "utils", ".", "add_dim_and_reshape", "(", "_v", ",", "0", ",", "(", "B", ",", "-", "1", ")", ")", ".", "mean", "(", "1", ")", "for", "_k", ",", "_v", "in", "style_facts", ".", "items", "(", ")", "}", "\n", "m_char_facts", "=", "{", "_k", ":", "utils", ".", "add_dim_and_reshape", "(", "_v", ",", "0", ",", "(", "B", ",", "-", "1", ")", ")", ".", "mean", "(", "1", ")", "for", "_k", ",", "_v", "in", "char_facts", ".", "items", "(", ")", "}", "\n", "\n", "gen_feats", "=", "self", ".", "defactorize", "(", "[", "m_style_facts", ",", "m_char_facts", "]", ")", "\n", "gen_imgs", "=", "self", ".", "decode", "(", "gen_feats", ")", "\n", "\n", "return", "gen_imgs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.style_encoder.StyleEncoder.__init__": [[13, 18], ["torch.Module.__init__", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "out_shape", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "out_shape", "=", "out_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.style_encoder.StyleEncoder.forward": [[19, 22], ["style_encoder.StyleEncoder.layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "style_feat", "=", "self", ".", "layers", "(", "x", ")", "\n", "return", "style_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.style_encoder.style_enc_builder": [[24, 39], ["functools.partial", "style_encoder.StyleEncoder", "functools.partial.", "functools.partial.", "modules.GCBlock", "functools.partial.", "modules.CBAM"], "function", ["None"], ["", "", "def", "style_enc_builder", "(", "C_in", ",", "C", ",", "norm", "=", "'none'", ",", "activ", "=", "'relu'", ",", "pad_type", "=", "'reflect'", ",", "skip_scale_var", "=", "False", ")", ":", "\n", "\n", "    ", "ConvBlk", "=", "partial", "(", "ConvBlock", ",", "norm", "=", "norm", ",", "activ", "=", "activ", ",", "pad_type", "=", "pad_type", ")", "\n", "\n", "layers", "=", "[", "\n", "ConvBlk", "(", "C_in", ",", "C", ",", "3", ",", "1", ",", "1", ",", "norm", "=", "'none'", ",", "activ", "=", "'none'", ")", ",", "\n", "ConvBlk", "(", "C", "*", "1", ",", "C", "*", "2", ",", "3", ",", "1", ",", "1", ",", "downsample", "=", "True", ")", ",", "\n", "GCBlock", "(", "C", "*", "2", ")", ",", "\n", "ConvBlk", "(", "C", "*", "2", ",", "C", "*", "4", ",", "3", ",", "1", ",", "1", ",", "downsample", "=", "True", ")", ",", "\n", "CBAM", "(", "C", "*", "4", ")", "\n", "]", "\n", "\n", "out_shape", "=", "(", "C", "*", "4", ",", "32", ",", "32", ")", "\n", "\n", "return", "StyleEncoder", "(", "layers", ",", "out_shape", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.aux_classifier.AuxClassifier.__init__": [[13, 18], ["torch.Module.__init__", "torch.Sequential", "torch.ModuleDict"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "heads", ",", "cam", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layers", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "heads", "=", "nn", ".", "ModuleDict", "(", "heads", ")", "\n", "self", ".", "extractor", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.aux_classifier.AuxClassifier.extract_cam": [[19, 26], ["aux_classifier.AuxClassifier.extractor", "cam_weights.view"], "methods", ["None"], ["", "def", "extract_cam", "(", "self", ",", "x", ",", "labels", ")", ":", "\n", "        ", "if", "self", ".", "extractor", "is", "None", ":", "\n", "            ", "self", ".", "extractor", "=", "self", ".", "layers", "[", ":", "2", "]", "\n", "", "feature_map", "=", "self", ".", "extractor", "(", "x", ")", "\n", "cam_weights", "=", "self", ".", "heads", "[", "\"comp\"", "]", ".", "weight", "[", "labels", "]", "\n", "cams", "=", "(", "cam_weights", ".", "view", "(", "*", "feature_map", ".", "shape", "[", ":", "2", "]", ",", "1", ",", "1", ")", "*", "feature_map", ")", ".", "mean", "(", "1", ",", "keepdim", "=", "False", ")", "\n", "return", "cams", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.aux_classifier.AuxClassifier.forward": [[27, 34], ["aux_classifier.AuxClassifier.layers"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feat", "=", "self", ".", "layers", "(", "x", ")", "\n", "\n", "logit_s", "=", "self", ".", "heads", "[", "\"style\"", "]", "(", "feat", ")", "\n", "logit_c", "=", "self", ".", "heads", "[", "\"comp\"", "]", "(", "feat", ")", "\n", "\n", "return", "logit_s", ",", "logit_c", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.aux_classifier.aux_clf_builder": [[36, 56], ["functools.partial", "aux_classifier.AuxClassifier", "functools.partial.", "functools.partial.", "torch.AdaptiveAvgPool2d", "modules.Flatten", "torch.Dropout", "torch.Linear", "torch.Linear"], "function", ["None"], ["", "", "def", "aux_clf_builder", "(", "in_shape", ",", "num_s", ",", "num_c", ",", "norm", "=", "'IN'", ",", "gap_size", "=", "8", ",", "activ", "=", "'relu'", ",", "pad_type", "=", "'reflect'", ",", "\n", "conv_dropout", "=", "0.", ",", "clf_dropout", "=", "0.", ",", "last_type", "=", "\"linear\"", ",", "w_norm", "=", "\"spectral\"", ",", "cam", "=", "False", ")", ":", "\n", "\n", "    ", "ResBlk", "=", "partial", "(", "ResBlock", ",", "norm", "=", "norm", ",", "activ", "=", "activ", ",", "pad_type", "=", "pad_type", ",", "dropout", "=", "conv_dropout", ")", "\n", "\n", "assert", "in_shape", "[", "1", "]", "==", "in_shape", "[", "2", "]", "\n", "C", "=", "in_shape", "[", "0", "]", "\n", "\n", "layers", "=", "[", "\n", "ResBlk", "(", "C", ",", "C", "*", "2", ",", "3", ",", "1", ",", "downsample", "=", "True", ")", ",", "\n", "ResBlk", "(", "C", "*", "2", ",", "C", "*", "2", ",", "3", ",", "1", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "Flatten", "(", "1", ")", ",", "\n", "nn", ".", "Dropout", "(", "clf_dropout", ")", ",", "\n", "]", "\n", "\n", "heads", "=", "{", "\"style\"", ":", "nn", ".", "Linear", "(", "C", "*", "2", ",", "num_s", ")", ",", "\"comp\"", ":", "nn", ".", "Linear", "(", "C", "*", "2", ",", "num_c", ")", "}", "\n", "\n", "aux_clf", "=", "AuxClassifier", "(", "layers", ",", "heads", ",", "cam", "=", "cam", ")", "\n", "return", "aux_clf", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.experts.SingleExpert.__init__": [[16, 21], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "skip_idx", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", "layers", ")", "\n", "self", ".", "skip_idx", "=", "skip_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.experts.SingleExpert.forward": [[22, 33], ["enumerate", "ret.update", "layer", "ret.update"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "ret", "=", "{", "}", "\n", "\n", "for", "lidx", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", ")", ":", "\n", "            ", "x", "=", "layer", "(", "x", ")", "\n", "if", "lidx", "==", "self", ".", "skip_idx", ":", "\n", "                ", "ret", ".", "update", "(", "{", "\"skip\"", ":", "x", "}", ")", "\n", "\n", "", "", "ret", ".", "update", "(", "{", "\"last\"", ":", "x", "}", ")", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.experts.Experts.__init__": [[36, 43], ["torch.Module.__init__", "len", "torch.ModuleList", "torch.ModuleList"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_shape", ",", "experts", ",", "skip_shape", "=", "None", ")", ":", "\n", "        ", "super", "(", "Experts", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "out_shape", "=", "out_shape", "\n", "self", ".", "skip_shape", "=", "skip_shape", "\n", "\n", "self", ".", "n_experts", "=", "len", "(", "experts", ")", "\n", "self", ".", "experts", "=", "nn", ".", "ModuleList", "(", "experts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.experts.Experts.forward": [[44, 53], ["torch.stack", "torch.stack", "torch.stack", "torch.stack", "expert", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "ret.update"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "expert", "(", "x", ")", "for", "expert", "in", "self", ".", "experts", "]", "\n", "last", "=", "torch", ".", "stack", "(", "[", "out", "[", "\"last\"", "]", "for", "out", "in", "outs", "]", ",", "1", ")", "\n", "ret", "=", "{", "\"last\"", ":", "last", "}", "\n", "if", "self", ".", "skip_shape", "is", "not", "None", ":", "\n", "            ", "skip", "=", "torch", ".", "stack", "(", "[", "out", "[", "\"skip\"", "]", "for", "out", "in", "outs", "]", ",", "1", ")", "\n", "ret", ".", "update", "(", "{", "\"skip\"", ":", "skip", "}", ")", "\n", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.models.experts.exp_builder": [[55, 74], ["functools.partial", "experts.Experts", "experts.SingleExpert", "functools.partial.", "modules.CBAM", "functools.partial.", "functools.partial.", "modules.CBAM", "functools.partial.", "range"], "function", ["None"], ["", "", "def", "exp_builder", "(", "C", ",", "n_experts", ",", "norm", "=", "'none'", ",", "activ", "=", "'relu'", ",", "pad_type", "=", "'reflect'", ",", "skip_scale_var", "=", "False", ")", ":", "\n", "\n", "    ", "ResBlk", "=", "partial", "(", "ResBlock", ",", "norm", "=", "norm", ",", "activ", "=", "activ", ",", "pad_type", "=", "pad_type", ",", "scale_var", "=", "skip_scale_var", ")", "\n", "\n", "experts", "=", "[", "[", "\n", "ResBlk", "(", "C", "*", "4", ",", "C", "*", "4", ",", "3", ",", "1", ")", ",", "\n", "CBAM", "(", "C", "*", "4", ")", ",", "\n", "ResBlk", "(", "C", "*", "4", ",", "C", "*", "4", ",", "3", ",", "1", ")", ",", "\n", "ResBlk", "(", "C", "*", "4", ",", "C", "*", "8", ",", "3", ",", "1", ",", "downsample", "=", "True", ")", ",", "# 16x16", "\n", "CBAM", "(", "C", "*", "8", ")", ",", "\n", "ResBlk", "(", "C", "*", "8", ",", "C", "*", "8", ")", "]", "for", "_", "in", "range", "(", "n_experts", ")", "]", "\n", "\n", "out_shape", "=", "(", "C", "*", "8", ",", "16", ",", "16", ")", "\n", "skip_idx", "=", "2", "\n", "skip_shape", "=", "(", "C", "*", "4", ",", "32", ",", "32", ")", "\n", "\n", "experts", "=", "[", "SingleExpert", "(", "exp", ",", "skip_idx", ")", "for", "exp", "in", "experts", "]", "\n", "\n", "return", "Experts", "(", "out_shape", ",", "experts", ",", "skip_shape", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.globalcontext.GlobalContext.__init__": [[15, 25], ["torch.Module.__init__", "int", "blocks.w_norm_dispatch", "blocks.w_norm_dispatch.", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "blocks.w_norm_dispatch.", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "blocks.w_norm_dispatch.", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.w_norm_dispatch"], ["def", "__init__", "(", "self", ",", "C", ",", "bottleneck_ratio", "=", "0.25", ",", "w_norm", "=", "'none'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "C_bottleneck", "=", "int", "(", "C", "*", "bottleneck_ratio", ")", "\n", "w_norm", "=", "w_norm_dispatch", "(", "w_norm", ")", "\n", "self", ".", "k_proj", "=", "w_norm", "(", "nn", ".", "Conv2d", "(", "C", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "transform", "=", "nn", ".", "Sequential", "(", "\n", "w_norm", "(", "nn", ".", "Linear", "(", "C", ",", "C_bottleneck", ")", ")", ",", "\n", "nn", ".", "LayerNorm", "(", "C_bottleneck", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "w_norm", "(", "nn", ".", "Linear", "(", "C_bottleneck", ",", "C", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.globalcontext.GlobalContext.forward": [[27, 35], ["globalcontext.GlobalContext.k_proj", "torch.softmax", "torch.softmax", "torch.softmax", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "globalcontext.GlobalContext.transform", "globalcontext.GlobalContext.flatten", "x.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# x: [B, C, H, W]", "\n", "        ", "context_logits", "=", "self", ".", "k_proj", "(", "x", ")", "# [B, 1, H, W]", "\n", "context_weights", "=", "F", ".", "softmax", "(", "context_logits", ".", "flatten", "(", "1", ")", ",", "dim", "=", "1", ")", "# [B, HW]", "\n", "context", "=", "torch", ".", "einsum", "(", "'bci,bi->bc'", ",", "x", ".", "flatten", "(", "2", ")", ",", "context_weights", ")", "\n", "out", "=", "self", ".", "transform", "(", "context", ")", "\n", "\n", "return", "out", "[", "...", ",", "None", ",", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.globalcontext.GCBlock.__init__": [[39, 42], ["torch.Module.__init__", "globalcontext.GlobalContext"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["def", "__init__", "(", "self", ",", "C", ",", "bottleneck_ratio", "=", "0.25", ",", "w_norm", "=", "'none'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gc", "=", "GlobalContext", "(", "C", ",", "bottleneck_ratio", ",", "w_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.globalcontext.GCBlock.forward": [[43, 46], ["globalcontext.GCBlock.gc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "gc", "=", "self", ".", "gc", "(", "x", ")", "\n", "return", "x", "+", "gc", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.BasicConv.__init__": [[11, 17], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "relu", "=", "True", ",", "bn", "=", "True", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "BasicConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "out_channels", "=", "out_planes", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ",", "eps", "=", "1e-5", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ")", "if", "bn", "else", "None", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "if", "relu", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.BasicConv.forward": [[18, 25], ["cbam.BasicConv.conv", "cbam.BasicConv.bn", "cbam.BasicConv.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "if", "self", ".", "bn", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "", "if", "self", ".", "relu", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.Flatten.forward": [[29, 31], ["x.view", "x.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.ChannelGate.__init__": [[34, 44], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "cbam.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gate_channels", ",", "reduction_ratio", "=", "16", ",", "pool_types", "=", "[", "'avg'", ",", "'max'", "]", ")", ":", "\n", "        ", "super", "(", "ChannelGate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gate_channels", "=", "gate_channels", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "gate_channels", ",", "gate_channels", "//", "reduction_ratio", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "gate_channels", "//", "reduction_ratio", ",", "gate_channels", ")", "\n", ")", "\n", "self", ".", "pool_types", "=", "pool_types", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.ChannelGate.forward": [[45, 69], ["torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.sigmoid().unsqueeze().unsqueeze().expand_as", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "cbam.ChannelGate.mlp", "torch.sigmoid().unsqueeze().unsqueeze", "torch.sigmoid().unsqueeze().unsqueeze", "torch.sigmoid().unsqueeze().unsqueeze", "torch.sigmoid().unsqueeze().unsqueeze", "torch.sigmoid().unsqueeze().unsqueeze", "torch.sigmoid().unsqueeze().unsqueeze", "torch.sigmoid().unsqueeze().unsqueeze", "torch.sigmoid().unsqueeze().unsqueeze", "torch.sigmoid().unsqueeze().unsqueeze", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "cbam.ChannelGate.mlp", "x.size", "x.size", "torch.lp_pool2d", "torch.lp_pool2d", "torch.lp_pool2d", "cbam.ChannelGate.mlp", "torch.sigmoid().unsqueeze", "torch.sigmoid().unsqueeze", "torch.sigmoid().unsqueeze", "torch.sigmoid().unsqueeze", "torch.sigmoid().unsqueeze", "torch.sigmoid().unsqueeze", "torch.sigmoid().unsqueeze", "torch.sigmoid().unsqueeze", "torch.sigmoid().unsqueeze", "x.size", "x.size", "x.size", "x.size", "cbam.logsumexp_2d", "cbam.ChannelGate.mlp", "x.size", "x.size", "x.size", "x.size", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "x.size", "x.size"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.logsumexp_2d"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "channel_att_sum", "=", "None", "\n", "for", "pool_type", "in", "self", ".", "pool_types", ":", "\n", "            ", "if", "pool_type", "==", "'avg'", ":", "\n", "                ", "avg_pool", "=", "F", ".", "avg_pool2d", "(", "x", ",", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "stride", "=", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ")", "\n", "channel_att_raw", "=", "self", ".", "mlp", "(", "avg_pool", ")", "\n", "", "elif", "pool_type", "==", "'max'", ":", "\n", "                ", "max_pool", "=", "F", ".", "max_pool2d", "(", "x", ",", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "stride", "=", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ")", "\n", "channel_att_raw", "=", "self", ".", "mlp", "(", "max_pool", ")", "\n", "", "elif", "pool_type", "==", "'lp'", ":", "\n", "                ", "lp_pool", "=", "F", ".", "lp_pool2d", "(", "x", ",", "2", ",", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "stride", "=", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ")", "\n", "channel_att_raw", "=", "self", ".", "mlp", "(", "lp_pool", ")", "\n", "", "elif", "pool_type", "==", "'lse'", ":", "\n", "# LSE pool only", "\n", "                ", "lse_pool", "=", "logsumexp_2d", "(", "x", ")", "\n", "channel_att_raw", "=", "self", ".", "mlp", "(", "lse_pool", ")", "\n", "\n", "", "if", "channel_att_sum", "is", "None", ":", "\n", "                ", "channel_att_sum", "=", "channel_att_raw", "\n", "", "else", ":", "\n", "                ", "channel_att_sum", "=", "channel_att_sum", "+", "channel_att_raw", "\n", "\n", "", "", "scale", "=", "torch", ".", "sigmoid", "(", "channel_att_sum", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "\n", "return", "x", "*", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.ChannelPool.forward": [[79, 81], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "[].unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "(", "torch", ".", "max", "(", "x", ",", "1", ")", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ",", "torch", ".", "mean", "(", "x", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.SpatialGate.__init__": [[84, 89], ["torch.Module.__init__", "cbam.ChannelPool", "cbam.BasicConv"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "SpatialGate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "kernel_size", "=", "7", "\n", "self", ".", "compress", "=", "ChannelPool", "(", ")", "\n", "self", ".", "spatial", "=", "BasicConv", "(", "2", ",", "1", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", ",", "relu", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.SpatialGate.forward": [[90, 95], ["cbam.SpatialGate.compress", "cbam.SpatialGate.spatial", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_compress", "=", "self", ".", "compress", "(", "x", ")", "\n", "x_out", "=", "self", ".", "spatial", "(", "x_compress", ")", "\n", "scale", "=", "torch", ".", "sigmoid", "(", "x_out", ")", "# broadcasting", "\n", "return", "x", "*", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.CBAM.__init__": [[98, 104], ["torch.Module.__init__", "cbam.ChannelGate", "cbam.SpatialGate"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gate_channels", ",", "reduction_ratio", "=", "16", ",", "pool_types", "=", "[", "'avg'", ",", "'max'", "]", ",", "no_spatial", "=", "False", ")", ":", "\n", "        ", "super", "(", "CBAM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ChannelGate", "=", "ChannelGate", "(", "gate_channels", ",", "reduction_ratio", ",", "pool_types", ")", "\n", "self", ".", "no_spatial", "=", "no_spatial", "\n", "if", "not", "no_spatial", ":", "\n", "            ", "self", ".", "SpatialGate", "=", "SpatialGate", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.CBAM.forward": [[105, 110], ["cbam.CBAM.ChannelGate", "cbam.CBAM.SpatialGate"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_out", "=", "self", ".", "ChannelGate", "(", "x", ")", "\n", "if", "not", "self", ".", "no_spatial", ":", "\n", "            ", "x_out", "=", "self", ".", "SpatialGate", "(", "x_out", ")", "\n", "", "return", "x_out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.cbam.logsumexp_2d": [[71, 76], ["tensor.view", "torch.max", "torch.max", "torch.max", "tensor.size", "tensor.size"], "function", ["None"], ["", "", "def", "logsumexp_2d", "(", "tensor", ")", ":", "\n", "    ", "tensor_flatten", "=", "tensor", ".", "view", "(", "tensor", ".", "size", "(", "0", ")", ",", "tensor", ".", "size", "(", "1", ")", ",", "-", "1", ")", "\n", "s", ",", "_", "=", "torch", ".", "max", "(", "tensor_flatten", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "outputs", "=", "s", "+", "(", "tensor_flatten", "-", "s", ")", ".", "exp", "(", ")", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", ".", "log", "(", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.frn.TLU.__init__": [[14, 18], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["def", "__init__", "(", "self", ",", "num_features", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "tau", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_features", ",", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.frn.TLU.forward": [[19, 21], ["torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "torch", ".", "max", "(", "x", ",", "self", ".", "tau", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.frn.TLU.extra_repr": [[22, 24], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'num_features={}'", ".", "format", "(", "self", ".", "num_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.frn.FilterResponseNorm.__init__": [[29, 59], ["torch.Module.__init__", "list", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "range", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Parameter", "torch.Parameter", "frn.FilterResponseNorm.register_buffer", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["def", "__init__", "(", "self", ",", "num_features", ",", "ndim", ",", "eps", "=", "None", ",", "learnable_eps", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            num_features\n            ndim\n            eps: if None is given, use the paper value as default.\n                from paper, fixed_eps=1e-6 and learnable_eps_init=1e-4.\n            learnable_eps: turn eps to learnable parameter, which is recommended on\n                fully-connected or 1x1 activation map.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "eps", "is", "None", ":", "\n", "            ", "if", "learnable_eps", ":", "\n", "                ", "eps", "=", "1e-4", "\n", "", "else", ":", "\n", "                ", "eps", "=", "1e-6", "\n", "\n", "", "", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "init_eps", "=", "eps", "\n", "self", ".", "learnable_eps", "=", "learnable_eps", "\n", "self", ".", "ndim", "=", "ndim", "\n", "\n", "self", ".", "mean_dims", "=", "list", "(", "range", "(", "2", ",", "2", "+", "ndim", ")", ")", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "[", "1", ",", "num_features", "]", "+", "[", "1", "]", "*", "ndim", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "[", "1", ",", "num_features", "]", "+", "[", "1", "]", "*", "ndim", ")", ")", "\n", "if", "learnable_eps", ":", "\n", "            ", "self", ".", "eps", "=", "nn", ".", "Parameter", "(", "torch", ".", "as_tensor", "(", "eps", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_buffer", "(", "'eps'", ",", "torch", ".", "as_tensor", "(", "eps", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.frn.FilterResponseNorm.forward": [[60, 69], ["x.pow().mean", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "torch.rsqrt", "x.pow", "frn.FilterResponseNorm.eps.abs"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# normalize", "\n", "        ", "nu2", "=", "x", ".", "pow", "(", "2", ")", ".", "mean", "(", "self", ".", "mean_dims", ",", "keepdim", "=", "True", ")", "\n", "x", "=", "x", "*", "torch", ".", "rsqrt", "(", "nu2", "+", "self", ".", "eps", ".", "abs", "(", ")", ")", "\n", "\n", "# modulation", "\n", "x", "=", "x", "*", "self", ".", "weight", "+", "self", ".", "bias", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.frn.FilterResponseNorm.extra_repr": [[70, 73], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'num_features={}, init_eps={}, ndim={}'", ".", "format", "(", "\n", "self", ".", "num_features", ",", "self", ".", "init_eps", ",", "self", ".", "ndim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.modules.weights_init": [[8, 30], ["hasattr", "torch.init.normal_", "hasattr", "torch.init.constant_", "classname.find", "classname.find", "torch.init.xavier_normal_", "torch.init.kaiming_normal_", "torch.init.orthogonal_"], "function", ["None"], ["def", "weights_init", "(", "init_type", "=", "'default'", ")", ":", "\n", "    ", "\"\"\" Adopted from FUNIT \"\"\"", "\n", "def", "init_fun", "(", "m", ")", ":", "\n", "        ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "(", "classname", ".", "find", "(", "'Conv'", ")", "==", "0", "or", "classname", ".", "find", "(", "'Linear'", ")", "==", "0", ")", "and", "hasattr", "(", "m", ",", "'weight'", ")", ":", "\n", "            ", "if", "init_type", "==", "'gaussian'", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "0.0", ",", "0.02", ")", "\n", "", "elif", "init_type", "==", "'xavier'", ":", "\n", "                ", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "2", "**", "0.5", ")", "\n", "", "elif", "init_type", "==", "'kaiming'", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ".", "data", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ")", "\n", "", "elif", "init_type", "==", "'orthogonal'", ":", "\n", "                ", "nn", ".", "init", ".", "orthogonal_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "2", "**", "0.5", ")", "\n", "", "elif", "init_type", "==", "'default'", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "assert", "0", ",", "\"Unsupported initialization: {}\"", ".", "format", "(", "init_type", ")", "\n", "\n", "", "if", "hasattr", "(", "m", ",", "'bias'", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "\n", "", "", "", "return", "init_fun", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.modules.spectral_norm": [[32, 39], ["torch.init.xavier_uniform_", "torch.utils.spectral_norm", "hasattr", "module.bias.data.zero_"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.modules.modules.spectral_norm"], ["", "def", "spectral_norm", "(", "module", ")", ":", "\n", "    ", "\"\"\" init & apply spectral norm \"\"\"", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "module", ".", "weight", ",", "2", "**", "0.5", ")", "\n", "if", "hasattr", "(", "module", ",", "'bias'", ")", "and", "module", ".", "bias", "is", "not", "None", ":", "\n", "        ", "module", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "return", "nn", ".", "utils", ".", "spectral_norm", "(", "module", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.Flatten.__init__": [[17, 21], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.Flatten.forward": [[22, 24], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.LinearBlock.__init__": [[82, 100], ["torch.Module.__init__", "blocks.activ_dispatch", "blocks.w_norm_dispatch", "norm", "activ_dispatch.", "w_norm_dispatch.", "norm.lower", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "norm.lower", "norm.lower", "ValueError"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.activ_dispatch", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.w_norm_dispatch"], ["def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "norm", "=", "'none'", ",", "activ", "=", "'relu'", ",", "bias", "=", "True", ",", "w_norm", "=", "'none'", ",", "\n", "dropout", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "activ", "=", "activ_dispatch", "(", "activ", ",", "norm", ")", "\n", "if", "norm", ".", "lower", "(", ")", "==", "'bn'", ":", "\n", "            ", "norm", "=", "nn", ".", "BatchNorm1d", "\n", "", "elif", "norm", ".", "lower", "(", ")", "==", "'frn'", ":", "\n", "            ", "norm", "=", "FilterResponseNorm1d", "\n", "", "elif", "norm", ".", "lower", "(", ")", "==", "'none'", ":", "\n", "            ", "norm", "=", "nn", ".", "Identity", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "f\"LinearBlock supports BN only (but {norm} is given)\"", ")", "\n", "", "w_norm", "=", "w_norm_dispatch", "(", "w_norm", ")", "\n", "self", ".", "norm", "=", "norm", "(", "C_in", ")", "\n", "self", ".", "activ", "=", "activ", "(", ")", "\n", "if", "dropout", ">", "0.", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "", "self", ".", "linear", "=", "w_norm", "(", "nn", ".", "Linear", "(", "C_in", ",", "C_out", ",", "bias", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.LinearBlock.forward": [[101, 107], ["blocks.LinearBlock.norm", "blocks.LinearBlock.activ", "hasattr", "blocks.LinearBlock.linear", "blocks.LinearBlock.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "activ", "(", "x", ")", "\n", "if", "hasattr", "(", "self", ",", "'dropout'", ")", ":", "\n", "            ", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "return", "self", ".", "linear", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.ConvBlock.__init__": [[111, 142], ["torch.Module.__init__", "blocks.activ_dispatch", "blocks.norm_dispatch", "blocks.w_norm_dispatch", "blocks.pad_dispatch", "pad_dispatch.", "w_norm_dispatch.", "norm_dispatch.", "norm_dispatch.", "activ_dispatch.", "activ_dispatch.", "torch.Dropout2d", "torch.Dropout2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.activ_dispatch", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.norm_dispatch", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.w_norm_dispatch", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.pad_dispatch"], ["def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "norm", "=", "'none'", ",", "\n", "activ", "=", "'relu'", ",", "bias", "=", "True", ",", "upsample", "=", "False", ",", "downsample", "=", "False", ",", "w_norm", "=", "'none'", ",", "\n", "pad_type", "=", "'zero'", ",", "dropout", "=", "0.", ",", "size", "=", "None", ")", ":", "\n", "# 1x1 conv assertion", "\n", "        ", "if", "kernel_size", "==", "1", ":", "\n", "            ", "assert", "padding", "==", "0", "\n", "", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "C_in", "=", "C_in", "\n", "self", ".", "C_out", "=", "C_out", "\n", "\n", "activ", "=", "activ_dispatch", "(", "activ", ",", "norm", ")", "\n", "norm", "=", "norm_dispatch", "(", "norm", ")", "\n", "w_norm", "=", "w_norm_dispatch", "(", "w_norm", ")", "\n", "pad", "=", "pad_dispatch", "(", "pad_type", ")", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "assert", "(", "(", "norm", "==", "FilterResponseNorm2d", ")", "==", "(", "activ", "==", "TLU", ")", ")", ",", "\"Use FRN and TLU together\"", "\n", "\n", "if", "norm", "==", "FilterResponseNorm2d", "and", "size", "==", "1", ":", "\n", "            ", "self", ".", "norm", "=", "norm", "(", "C_in", ",", "learnable_eps", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "norm", "=", "norm", "(", "C_in", ")", "\n", "", "if", "activ", "==", "TLU", ":", "\n", "            ", "self", ".", "activ", "=", "activ", "(", "C_in", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "activ", "=", "activ", "(", ")", "\n", "", "if", "dropout", ">", "0.", ":", "\n", "            ", "self", ".", "dropout", "=", "nn", ".", "Dropout2d", "(", "p", "=", "dropout", ")", "\n", "", "self", ".", "pad", "=", "pad", "(", "padding", ")", "\n", "self", ".", "conv", "=", "w_norm", "(", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "bias", "=", "bias", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.ConvBlock.forward": [[143, 154], ["blocks.ConvBlock.norm", "blocks.ConvBlock.activ", "hasattr", "blocks.ConvBlock.conv", "torch.interpolate", "torch.interpolate", "blocks.ConvBlock.dropout", "blocks.ConvBlock.pad", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "x", "=", "self", ".", "activ", "(", "x", ")", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ")", "\n", "", "if", "hasattr", "(", "self", ",", "'dropout'", ")", ":", "\n", "            ", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "x", "=", "self", ".", "conv", "(", "self", ".", "pad", "(", "x", ")", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.ResBlock.__init__": [[158, 179], ["torch.Module.__init__", "blocks.w_norm_dispatch", "blocks.ConvBlock", "blocks.ConvBlock", "w_norm_dispatch.", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__", "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.w_norm_dispatch"], ["def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "upsample", "=", "False", ",", "downsample", "=", "False", ",", "\n", "norm", "=", "'none'", ",", "w_norm", "=", "'none'", ",", "activ", "=", "'relu'", ",", "pad_type", "=", "'zero'", ",", "dropout", "=", "0.", ",", "\n", "scale_var", "=", "False", ")", ":", "\n", "        ", "assert", "not", "(", "upsample", "and", "downsample", ")", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "w_norm", "=", "w_norm_dispatch", "(", "w_norm", ")", "\n", "self", ".", "C_in", "=", "C_in", "\n", "self", ".", "C_out", "=", "C_out", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "scale_var", "=", "scale_var", "\n", "\n", "self", ".", "conv1", "=", "ConvBlock", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "1", ",", "padding", ",", "norm", ",", "activ", ",", "\n", "upsample", "=", "upsample", ",", "w_norm", "=", "w_norm", ",", "pad_type", "=", "pad_type", ",", "\n", "dropout", "=", "dropout", ")", "\n", "self", ".", "conv2", "=", "ConvBlock", "(", "C_out", ",", "C_out", ",", "kernel_size", ",", "1", ",", "padding", ",", "norm", ",", "activ", ",", "\n", "w_norm", "=", "w_norm", ",", "pad_type", "=", "pad_type", ",", "dropout", "=", "dropout", ")", "\n", "\n", "# XXX upsample / downsample needs skip conv?", "\n", "if", "C_in", "!=", "C_out", "or", "upsample", "or", "downsample", ":", "\n", "            ", "self", ".", "skip", "=", "w_norm", "(", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.ResBlock.forward": [[180, 207], ["blocks.ResBlock.conv1", "blocks.ResBlock.conv2", "hasattr", "torch.avg_pool2d", "torch.avg_pool2d", "blocks.ResBlock.skip", "torch.interpolate", "torch.interpolate", "torch.avg_pool2d", "torch.avg_pool2d", "numpy.sqrt"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        normal: pre-activ + convs + skip-con\n        upsample: pre-activ + upsample + convs + skip-con\n        downsample: pre-activ + convs + downsample + skip-con\n        => pre-activ + (upsample) + convs + (downsample) + skip-con\n        \"\"\"", "\n", "out", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "\n", "# skip-con", "\n", "", "if", "hasattr", "(", "self", ",", "'skip'", ")", ":", "\n", "            ", "if", "self", ".", "upsample", ":", "\n", "                ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ")", "\n", "", "x", "=", "self", ".", "skip", "(", "x", ")", "\n", "if", "self", ".", "downsample", ":", "\n", "                ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "2", ")", "\n", "\n", "", "", "out", "=", "out", "+", "x", "\n", "if", "self", ".", "scale_var", ":", "\n", "            ", "out", "=", "out", "/", "np", ".", "sqrt", "(", "2", ")", "\n", "", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.dispatcher": [[26, 36], ["callable", "dispatch_fn"], "function", ["None"], ["", "", "def", "dispatcher", "(", "dispatch_fn", ")", ":", "\n", "    ", "def", "decorated", "(", "key", ",", "*", "args", ")", ":", "\n", "        ", "if", "callable", "(", "key", ")", ":", "\n", "            ", "return", "key", "\n", "\n", "", "if", "key", "is", "None", ":", "\n", "            ", "key", "=", "'none'", "\n", "\n", "", "return", "dispatch_fn", "(", "key", ",", "*", "args", ")", "\n", "", "return", "decorated", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.norm_dispatch": [[38, 46], ["functools.partial", "norm.lower"], "function", ["None"], ["", "@", "dispatcher", "\n", "def", "norm_dispatch", "(", "norm", ")", ":", "\n", "    ", "return", "{", "\n", "'none'", ":", "nn", ".", "Identity", ",", "\n", "'in'", ":", "partial", "(", "nn", ".", "InstanceNorm2d", ",", "affine", "=", "False", ")", ",", "# false as default", "\n", "'bn'", ":", "nn", ".", "BatchNorm2d", ",", "\n", "'frn'", ":", "FilterResponseNorm2d", "\n", "}", "[", "norm", ".", "lower", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.w_norm_dispatch": [[48, 55], ["w_norm.lower"], "function", ["None"], ["", "@", "dispatcher", "\n", "def", "w_norm_dispatch", "(", "w_norm", ")", ":", "\n", "# NOTE Unlike other dispatcher, w_norm is function, not class.", "\n", "    ", "return", "{", "\n", "'spectral'", ":", "spectral_norm", ",", "\n", "'none'", ":", "lambda", "x", ":", "x", "\n", "}", "[", "w_norm", ".", "lower", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.activ_dispatch": [[57, 69], ["blocks.norm_dispatch", "functools.partial", "activ.lower"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.norm_dispatch"], ["", "@", "dispatcher", "\n", "def", "activ_dispatch", "(", "activ", ",", "norm", "=", "None", ")", ":", "\n", "    ", "if", "norm_dispatch", "(", "norm", ")", "==", "FilterResponseNorm2d", ":", "\n", "# use TLU for FRN", "\n", "        ", "activ", "=", "'tlu'", "\n", "\n", "", "return", "{", "\n", "\"none\"", ":", "nn", ".", "Identity", ",", "\n", "\"relu\"", ":", "nn", ".", "ReLU", ",", "\n", "\"lrelu\"", ":", "partial", "(", "nn", ".", "LeakyReLU", ",", "negative_slope", "=", "0.2", ")", ",", "\n", "\"tlu\"", ":", "TLU", "\n", "}", "[", "activ", ".", "lower", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.modules.blocks.pad_dispatch": [[71, 78], ["pad_type.lower"], "function", ["None"], ["", "@", "dispatcher", "\n", "def", "pad_dispatch", "(", "pad_type", ")", ":", "\n", "    ", "return", "{", "\n", "\"zero\"", ":", "nn", ".", "ZeroPad2d", ",", "\n", "\"replicate\"", ":", "nn", ".", "ReplicationPad2d", ",", "\n", "\"reflect\"", ":", "nn", ".", "ReflectionPad2d", "\n", "}", "[", "pad_type", ".", "lower", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.__init__": [[20, 50], ["copy.deepcopy", "trainer_utils.has_bn", "base_trainer.BaseTrainer.set_model", "len"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.has_bn", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.set_model"], ["    ", "def", "__init__", "(", "self", ",", "gen", ",", "disc", ",", "g_optim", ",", "d_optim", ",", "aux_clf", ",", "ac_optim", ",", "\n", "writer", ",", "logger", ",", "evaluator", ",", "test_loader", ",", "cfg", ")", ":", "\n", "        ", "self", ".", "gen", "=", "gen", "\n", "self", ".", "gen_ema", "=", "copy", ".", "deepcopy", "(", "self", ".", "gen", ")", "\n", "self", ".", "g_optim", "=", "g_optim", "\n", "\n", "self", ".", "is_bn_gen", "=", "has_bn", "(", "self", ".", "gen", ")", "\n", "self", ".", "disc", "=", "disc", "\n", "self", ".", "d_optim", "=", "d_optim", "\n", "\n", "self", ".", "aux_clf", "=", "aux_clf", "\n", "self", ".", "ac_optim", "=", "ac_optim", "\n", "\n", "self", ".", "cfg", "=", "cfg", "\n", "\n", "models", "=", "[", "_m", "for", "_m", "in", "[", "self", ".", "gen", ",", "self", ".", "gen_ema", ",", "self", ".", "disc", ",", "self", ".", "aux_clf", "]", "if", "_m", "is", "not", "None", "]", "\n", "models", "=", "self", ".", "set_model", "(", "models", ")", "\n", "\n", "self", ".", "writer", "=", "writer", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "evaluator", "=", "evaluator", "\n", "self", ".", "test_loader", "=", "test_loader", "\n", "self", ".", "test_n_row", "=", "len", "(", "self", ".", "test_loader", ".", "dataset", ".", "gen_chars", ")", "\n", "\n", "self", ".", "step", "=", "1", "\n", "\n", "self", ".", "g_losses", "=", "{", "}", "\n", "self", ".", "d_losses", "=", "{", "}", "\n", "self", ".", "ac_losses", "=", "{", "}", "\n", "self", ".", "frozen_ac_losses", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.set_model": [[51, 56], ["torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel"], "methods", ["None"], ["", "def", "set_model", "(", "self", ",", "models", ")", ":", "\n", "        ", "if", "self", ".", "cfg", ".", "use_ddp", ":", "\n", "            ", "models", "=", "[", "DDP", "(", "m", ",", "[", "self", ".", "cfg", ".", "gpu", "]", ")", ".", "module", "for", "m", "in", "models", "]", "\n", "\n", "", "return", "models", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.clear_losses": [[57, 74], ["sum", "loss_dic.update", "loss_dic.update", "loss_dic.update", "v.item", "loss_dic.values", "base_trainer.BaseTrainer.g_losses.items", "v.item", "v.item", "v.item", "base_trainer.BaseTrainer.d_losses.items", "base_trainer.BaseTrainer.ac_losses.items", "base_trainer.BaseTrainer.frozen_ac_losses.items"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update"], ["", "def", "clear_losses", "(", "self", ")", ":", "\n", "        ", "\"\"\" Integrate & clear loss dict \"\"\"", "\n", "# g losses", "\n", "loss_dic", "=", "{", "k", ":", "v", ".", "item", "(", ")", "for", "k", ",", "v", "in", "self", ".", "g_losses", ".", "items", "(", ")", "}", "\n", "loss_dic", "[", "'g_total'", "]", "=", "sum", "(", "loss_dic", ".", "values", "(", ")", ")", "\n", "# d losses", "\n", "loss_dic", ".", "update", "(", "{", "k", ":", "v", ".", "item", "(", ")", "for", "k", ",", "v", "in", "self", ".", "d_losses", ".", "items", "(", ")", "}", ")", "\n", "# ac losses", "\n", "loss_dic", ".", "update", "(", "{", "k", ":", "v", ".", "item", "(", ")", "for", "k", ",", "v", "in", "self", ".", "ac_losses", ".", "items", "(", ")", "}", ")", "\n", "loss_dic", ".", "update", "(", "{", "k", ":", "v", ".", "item", "(", ")", "for", "k", ",", "v", "in", "self", ".", "frozen_ac_losses", ".", "items", "(", ")", "}", ")", "\n", "\n", "self", ".", "g_losses", "=", "{", "}", "\n", "self", ".", "d_losses", "=", "{", "}", "\n", "self", ".", "ac_losses", "=", "{", "}", "\n", "self", ".", "frozen_ac_losses", "=", "{", "}", "\n", "\n", "return", "loss_dic", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.accum_g": [[75, 81], ["dict", "dict", "dict.keys", "base_trainer.BaseTrainer.gen_ema.named_parameters", "base_trainer.BaseTrainer.gen.named_parameters", "par1[].data.mul_().add_", "par1[].data.mul_"], "methods", ["None"], ["", "def", "accum_g", "(", "self", ",", "decay", "=", "0.999", ")", ":", "\n", "        ", "par1", "=", "dict", "(", "self", ".", "gen_ema", ".", "named_parameters", "(", ")", ")", "\n", "par2", "=", "dict", "(", "self", ".", "gen", ".", "named_parameters", "(", ")", ")", "\n", "\n", "for", "k", "in", "par1", ".", "keys", "(", ")", ":", "\n", "            ", "par1", "[", "k", "]", ".", "data", ".", "mul_", "(", "decay", ")", ".", "add_", "(", "par2", "[", "k", "]", ".", "data", ",", "alpha", "=", "(", "1", "-", "decay", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.sync_g_ema": [[82, 85], ["None"], "methods", ["None"], ["", "", "def", "sync_g_ema", "(", "self", ",", "in_style_ids", ",", "in_comp_ids", ",", "in_imgs", ",", "trg_style_ids", ",", "trg_comp_ids", ",", "\n", "content_imgs", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.train": [[86, 88], ["None"], "methods", ["None"], ["", "def", "train", "(", "self", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_loss": [[89, 95], ["l_dict.get", "crit"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.logger.Logger.get"], ["", "def", "add_loss", "(", "self", ",", "inputs", ",", "l_dict", ",", "l_key", ",", "weight", ",", "crit", "=", "F", ".", "l1_loss", ")", ":", "\n", "        ", "loss", "=", "l_dict", ".", "get", "(", "l_key", ",", "0.", ")", "\n", "loss", "+=", "crit", "(", "*", "inputs", ")", "*", "weight", "\n", "l_dict", "[", "l_key", "]", "=", "loss", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_pixel_loss": [[96, 102], ["base_trainer.BaseTrainer.add_loss"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_loss"], ["", "def", "add_pixel_loss", "(", "self", ",", "out", ",", "target", ")", ":", "\n", "        ", "loss", "=", "self", ".", "add_loss", "(", "\n", "(", "out", ",", "target", ")", ",", "self", ".", "g_losses", ",", "\"pixel\"", ",", "self", ".", "cfg", "[", "\"pixel_w\"", "]", ",", "F", ".", "l1_loss", "\n", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_gan_g_loss": [[103, 109], ["base_trainer.BaseTrainer.add_loss"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_loss"], ["", "def", "add_gan_g_loss", "(", "self", ",", "*", "fakes", ")", ":", "\n", "        ", "loss", "=", "self", ".", "add_loss", "(", "\n", "fakes", ",", "self", ".", "g_losses", ",", "\"gen\"", ",", "self", ".", "cfg", "[", "\"gan_w\"", "]", ",", "g_crit", "\n", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_gan_d_loss": [[110, 116], ["base_trainer.BaseTrainer.add_loss"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_loss"], ["", "def", "add_gan_d_loss", "(", "self", ",", "reals", ",", "fakes", ")", ":", "\n", "        ", "loss", "=", "self", ".", "add_loss", "(", "\n", "(", "reals", ",", "fakes", ")", ",", "self", ".", "d_losses", ",", "\"disc\"", ",", "self", ".", "cfg", "[", "\"gan_w\"", "]", ",", "d_crit", "\n", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_fm_loss": [[117, 123], ["base_trainer.BaseTrainer.add_loss"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_loss"], ["", "def", "add_fm_loss", "(", "self", ",", "real_feats", ",", "fake_feats", ")", ":", "\n", "        ", "loss", "=", "self", ".", "add_loss", "(", "\n", "(", "real_feats", ",", "fake_feats", ")", ",", "self", ".", "g_losses", ",", "\"fm\"", ",", "self", ".", "cfg", "[", "\"fm_w\"", "]", ",", "fm_crit", "\n", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.d_backward": [[124, 128], ["utils.temporary_freeze", "sum", "sum.backward", "base_trainer.BaseTrainer.d_losses.values"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.temporary_freeze"], ["", "def", "d_backward", "(", "self", ")", ":", "\n", "        ", "with", "utils", ".", "temporary_freeze", "(", "self", ".", "gen", ")", ":", "\n", "            ", "d_loss", "=", "sum", "(", "self", ".", "d_losses", ".", "values", "(", ")", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.g_backward": [[129, 133], ["utils.temporary_freeze", "sum", "sum.backward", "base_trainer.BaseTrainer.g_losses.values"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.temporary_freeze"], ["", "", "def", "g_backward", "(", "self", ")", ":", "\n", "        ", "with", "utils", ".", "temporary_freeze", "(", "self", ".", "disc", ")", ":", "\n", "            ", "g_loss", "=", "sum", "(", "self", ".", "g_losses", ".", "values", "(", ")", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.ac_backward": [[134, 143], ["sum", "sum.backward", "base_trainer.BaseTrainer.ac_losses.values", "utils.temporary_freeze", "sum", "sum.backward", "base_trainer.BaseTrainer.frozen_ac_losses.values"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.temporary_freeze"], ["", "", "def", "ac_backward", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "aux_clf", "is", "None", ":", "\n", "            ", "return", "\n", "", "ac_loss", "=", "sum", "(", "self", ".", "ac_losses", ".", "values", "(", ")", ")", "\n", "ac_loss", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "\n", "with", "utils", ".", "temporary_freeze", "(", "self", ".", "aux_clf", ")", ":", "\n", "            ", "frozen_ac_loss", "=", "sum", "(", "self", ".", "frozen_ac_losses", ".", "values", "(", ")", ")", "\n", "frozen_ac_loss", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save": [[144, 201], ["base_trainer.BaseTrainer.logger.info", "base_trainer.BaseTrainer.gen.state_dict", "base_trainer.BaseTrainer.gen_ema.state_dict", "base_trainer.BaseTrainer.g_optim.state_dict", "base_trainer.BaseTrainer.disc.state_dict", "base_trainer.BaseTrainer.d_optim.state_dict", "base_trainer.BaseTrainer.aux_clf.state_dict", "base_trainer.BaseTrainer.ac_optim.state_dict", "torch.save", "torch.save", "torch.save", "torch.save", "utils.rm", "torch.save", "torch.save", "torch.save", "torch.save", "pathlib.Path.cwd", "str", "utils.rm", "last_ckpt_path.symlink_to", "str"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.rm", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.save", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.rm"], ["", "", "def", "save", "(", "self", ",", "cur_loss", ",", "method", ",", "save_freq", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            method: all / last\n                all: save checkpoint by step\n                last: save checkpoint to 'last.pth'\n                all-last: save checkpoint by step per save_freq and\n                          save checkpoint to 'last.pth' always\n        \"\"\"", "\n", "if", "method", "not", "in", "[", "'all'", ",", "'last'", ",", "'all-last'", "]", ":", "\n", "            ", "return", "\n", "\n", "", "step_save", "=", "False", "\n", "last_save", "=", "False", "\n", "if", "method", "==", "'all'", "or", "(", "method", "==", "'all-last'", "and", "self", ".", "step", "%", "save_freq", "==", "0", ")", ":", "\n", "            ", "step_save", "=", "True", "\n", "", "if", "method", "==", "'last'", "or", "method", "==", "'all-last'", ":", "\n", "            ", "last_save", "=", "True", "\n", "", "assert", "step_save", "or", "last_save", "\n", "\n", "save_dic", "=", "{", "\n", "'generator'", ":", "self", ".", "gen", ".", "state_dict", "(", ")", ",", "\n", "'generator_ema'", ":", "self", ".", "gen_ema", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "self", ".", "g_optim", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "self", ".", "step", ",", "\n", "'loss'", ":", "cur_loss", "\n", "}", "\n", "if", "self", ".", "disc", "is", "not", "None", ":", "\n", "            ", "save_dic", "[", "'discriminator'", "]", "=", "self", ".", "disc", ".", "state_dict", "(", ")", "\n", "save_dic", "[", "'d_optimizer'", "]", "=", "self", ".", "d_optim", ".", "state_dict", "(", ")", "\n", "\n", "", "if", "self", ".", "aux_clf", "is", "not", "None", ":", "\n", "            ", "save_dic", "[", "'aux_clf'", "]", "=", "self", ".", "aux_clf", ".", "state_dict", "(", ")", "\n", "save_dic", "[", "'ac_optimizer'", "]", "=", "self", ".", "ac_optim", ".", "state_dict", "(", ")", "\n", "\n", "", "ckpt_dir", "=", "self", ".", "cfg", "[", "'work_dir'", "]", "/", "\"checkpoints\"", "\n", "step_ckpt_name", "=", "\"{:06d}.pth\"", ".", "format", "(", "self", ".", "step", ")", "\n", "last_ckpt_name", "=", "\"last.pth\"", "\n", "step_ckpt_path", "=", "Path", ".", "cwd", "(", ")", "/", "ckpt_dir", "/", "step_ckpt_name", "\n", "last_ckpt_path", "=", "ckpt_dir", "/", "last_ckpt_name", "\n", "\n", "log", "=", "\"\"", "\n", "if", "step_save", ":", "\n", "            ", "torch", ".", "save", "(", "save_dic", ",", "str", "(", "step_ckpt_path", ")", ")", "\n", "log", "=", "\"Checkpoint is saved to {}\"", ".", "format", "(", "step_ckpt_path", ")", "\n", "\n", "if", "last_save", ":", "\n", "                ", "utils", ".", "rm", "(", "last_ckpt_path", ")", "\n", "last_ckpt_path", ".", "symlink_to", "(", "step_ckpt_path", ")", "\n", "log", "+=", "\" and symlink to {}\"", ".", "format", "(", "last_ckpt_path", ")", "\n", "\n", "", "", "if", "not", "step_save", "and", "last_save", ":", "\n", "            ", "utils", ".", "rm", "(", "last_ckpt_path", ")", "# last \uac00 symlink \uc77c \uacbd\uc6b0 \uc9c0\uc6b0\uace0 \uc368\uc918\uc57c \ud568.", "\n", "torch", ".", "save", "(", "save_dic", ",", "str", "(", "last_ckpt_path", ")", ")", "\n", "log", "=", "\"Checkpoint is saved to {}\"", ".", "format", "(", "last_ckpt_path", ")", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "\"{}\\n\"", ".", "format", "(", "log", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.plot": [[202, 237], ["base_trainer.BaseTrainer.writer.add_scalars", "tag_scalar_dic.update", "tag_scalar_dic.update", "tag_scalar_dic.update"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.TBWriter.add_scalars", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update"], ["", "def", "plot", "(", "self", ",", "losses", ",", "discs", ",", "stats", ")", ":", "\n", "        ", "tag_scalar_dic", "=", "{", "\n", "'train/g_total_loss'", ":", "losses", ".", "g_total", ".", "val", ",", "\n", "'train/pixel_loss'", ":", "losses", ".", "pixel", ".", "val", "\n", "}", "\n", "\n", "if", "self", ".", "disc", "is", "not", "None", ":", "\n", "            ", "tag_scalar_dic", ".", "update", "(", "{", "\n", "'train/d_real_font'", ":", "discs", ".", "real_font", ".", "val", ",", "\n", "'train/d_real_uni'", ":", "discs", ".", "real_uni", ".", "val", ",", "\n", "'train/d_fake_font'", ":", "discs", ".", "fake_font", ".", "val", ",", "\n", "'train/d_fake_uni'", ":", "discs", ".", "fake_uni", ".", "val", ",", "\n", "\n", "'train/d_real_font_acc'", ":", "discs", ".", "real_font_acc", ".", "val", ",", "\n", "'train/d_real_uni_acc'", ":", "discs", ".", "real_uni_acc", ".", "val", ",", "\n", "'train/d_fake_font_acc'", ":", "discs", ".", "fake_font_acc", ".", "val", ",", "\n", "'train/d_fake_uni_acc'", ":", "discs", ".", "fake_uni_acc", ".", "val", "\n", "}", ")", "\n", "\n", "if", "self", ".", "cfg", "[", "'fm_w'", "]", ">", "0.", ":", "\n", "                ", "tag_scalar_dic", "[", "'train/feature_matching'", "]", "=", "losses", ".", "fm", ".", "val", "\n", "\n", "", "", "if", "self", ".", "aux_clf", "is", "not", "None", ":", "\n", "            ", "tag_scalar_dic", ".", "update", "(", "{", "\n", "'train/ac_loss'", ":", "losses", ".", "ac", ".", "val", ",", "\n", "'train/ac_acc'", ":", "stats", ".", "ac_acc", ".", "val", "\n", "}", ")", "\n", "\n", "if", "self", ".", "cfg", "[", "'ac_gen_w'", "]", ">", "0.", ":", "\n", "                ", "tag_scalar_dic", ".", "update", "(", "{", "\n", "'train/ac_gen_loss'", ":", "losses", ".", "ac_gen", ".", "val", ",", "\n", "'train/ac_gen_acc'", ":", "stats", ".", "ac_gen_acc", ".", "val", "\n", "}", ")", "\n", "\n", "", "", "self", ".", "writer", ".", "add_scalars", "(", "tag_scalar_dic", ",", "self", ".", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.log": [[238, 246], ["base_trainer.BaseTrainer.logger.info"], "methods", ["None"], ["", "def", "log", "(", "self", ",", "losses", ",", "discs", ",", "stats", ")", ":", "\n", "        ", "self", ".", "logger", ".", "info", "(", "\n", "\"  Step {step:7d}: L1 {L.pixel.avg:7.4f}  D {L.disc.avg:7.3f}  G {L.gen.avg:7.3f}\"", "\n", "\"  FM {L.fm.avg:7.3f}  AC_loss {L.ac.avg:7.3f}  AC {S.ac_acc.avg:5.1%}  AC_gen {S.ac_gen_acc.avg:5.1%}\"", "# \"  AC_fm {L.ac_fm.avg:7.3f}\"", "\n", "\"  R_font {D.real_font_acc.avg:7.3f}  F_font {D.fake_font_acc.avg:7.3f}\"", "\n", "\"  R_uni {D.real_uni_acc.avg:7.3f}  F_uni {D.fake_uni_acc.avg:7.3f}\"", "\n", "\"  B_stl {S.B_style.avg:5.1f}  B_trg {S.B_target.avg:5.1f}\"", "\n", ".", "format", "(", "step", "=", "self", ".", "step", ",", "L", "=", "losses", ",", "D", "=", "discs", ",", "S", "=", "stats", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.cyclize": [[14, 19], ["None"], "function", ["None"], ["def", "cyclize", "(", "loader", ")", ":", "\n", "    ", "\"\"\" Cyclize loader \"\"\"", "\n", "while", "True", ":", "\n", "        ", "for", "x", "in", "loader", ":", "\n", "            ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.has_bn": [[21, 27], ["model.modules", "isinstance"], "function", ["None"], ["", "", "", "def", "has_bn", "(", "model", ")", ":", "\n", "    ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm1d", ",", "nn", ".", "BatchNorm2d", ",", "nn", ".", "BatchNorm3d", ")", ")", ":", "\n", "            ", "return", "True", "\n", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.unflatten_B": [[29, 35], ["t.view"], "function", ["None"], ["", "def", "unflatten_B", "(", "t", ")", ":", "\n", "    ", "\"\"\" Unflatten [B*3, ...] tensor to [B, 3, ...] tensor\n    t is flattened tensor from component batch, which is [B, 3, ...] tensor\n    \"\"\"", "\n", "shape", "=", "t", ".", "shape", "\n", "return", "t", ".", "view", "(", "shape", "[", "0", "]", "//", "3", ",", "3", ",", "*", "shape", "[", "1", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.overwrite_weight": [[37, 43], ["model.state_dict", "model.state_dict.update", "model.load_state_dict", "pre_weight.items"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update"], ["", "def", "overwrite_weight", "(", "model", ",", "pre_weight", ")", ":", "\n", "    ", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pre_weight", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pre_weight", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "\n", "model_dict", ".", "update", "(", "pre_weight", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.load_checkpoint": [[45, 74], ["torch.load", "torch.load", "trainer_utils.overwrite_weight", "gen.load_state_dict", "g_optim.load_state_dict", "trainer_utils.overwrite_weight", "disc.load_state_dict", "d_optim.load_state_dict", "trainer_utils.overwrite_weight", "aux_clf.load_state_dict", "ac_optim.load_state_dict"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.overwrite_weight", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.overwrite_weight", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.overwrite_weight"], ["", "def", "load_checkpoint", "(", "path", ",", "gen", ",", "disc", ",", "aux_clf", ",", "g_optim", ",", "d_optim", ",", "ac_optim", ",", "force_overwrite", "=", "False", ")", ":", "\n", "    ", "ckpt", "=", "torch", ".", "load", "(", "path", ")", "\n", "\n", "if", "force_overwrite", ":", "\n", "        ", "overwrite_weight", "(", "gen", ",", "ckpt", "[", "'generator'", "]", ")", "\n", "", "else", ":", "\n", "        ", "gen", ".", "load_state_dict", "(", "ckpt", "[", "'generator'", "]", ")", "\n", "g_optim", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer'", "]", ")", "\n", "\n", "", "if", "disc", "is", "not", "None", ":", "\n", "        ", "if", "force_overwrite", ":", "\n", "            ", "overwrite_weight", "(", "disc", ",", "ckpt", "[", "'discriminator'", "]", ")", "\n", "", "else", ":", "\n", "            ", "disc", ".", "load_state_dict", "(", "ckpt", "[", "'discriminator'", "]", ")", "\n", "d_optim", ".", "load_state_dict", "(", "ckpt", "[", "'d_optimizer'", "]", ")", "\n", "\n", "", "", "if", "aux_clf", "is", "not", "None", ":", "\n", "        ", "if", "force_overwrite", ":", "\n", "            ", "overwrite_weight", "(", "aux_clf", ",", "ckpt", "[", "'aux_clf'", "]", ")", "\n", "", "else", ":", "\n", "            ", "aux_clf", ".", "load_state_dict", "(", "ckpt", "[", "'aux_clf'", "]", ")", "\n", "ac_optim", ".", "load_state_dict", "(", "ckpt", "[", "'ac_optimizer'", "]", ")", "\n", "\n", "", "", "st_epoch", "=", "ckpt", "[", "'epoch'", "]", "\n", "if", "force_overwrite", ":", "\n", "        ", "st_epoch", "=", "0", "\n", "", "loss", "=", "ckpt", "[", "'loss'", "]", "\n", "\n", "return", "st_epoch", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.binarize_labels": [[76, 84], ["torch.stack", "torch.stack", "[].sum().bool", "torch.stack.append", "[].sum", "torch.eye", "torch.eye"], "function", ["None"], ["", "def", "binarize_labels", "(", "label_ids", ",", "n_labels", ")", ":", "\n", "    ", "binary_labels", "=", "[", "]", "\n", "for", "_lids", "in", "label_ids", ":", "\n", "        ", "_blabel", "=", "torch", ".", "eye", "(", "n_labels", ")", "[", "_lids", "]", ".", "sum", "(", "0", ")", ".", "bool", "(", ")", "\n", "binary_labels", ".", "append", "(", "_blabel", ")", "\n", "", "binary_labels", "=", "torch", ".", "stack", "(", "binary_labels", ")", "\n", "\n", "return", "binary_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.expert_assign": [[86, 111], ["numpy.arange", "len", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "scipy.optimize.linear_sum_assignment", "selected_rs.append", "selected_cs.append", "numpy.delete", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "def", "expert_assign", "(", "prob_org", ")", ":", "\n", "    ", "n_comp", ",", "n_exp", "=", "prob_org", ".", "shape", "\n", "neg_prob", "=", "-", "prob_org", ".", "T", "if", "n_comp", "<", "n_exp", "else", "-", "prob_org", "\n", "n_row", ",", "n_col", "=", "neg_prob", ".", "shape", "\n", "\n", "prob_in", "=", "neg_prob", "\n", "remain_rs", "=", "np", ".", "arange", "(", "n_row", ")", "\n", "selected_rs", "=", "[", "]", "\n", "selected_cs", "=", "[", "]", "\n", "\n", "while", "len", "(", "remain_rs", ")", ":", "\n", "        ", "r_in", ",", "c_in", "=", "linear_sum_assignment", "(", "prob_in", ")", "\n", "r_org", "=", "remain_rs", "[", "r_in", "]", "\n", "selected_rs", ".", "append", "(", "r_org", ")", "\n", "selected_cs", ".", "append", "(", "c_in", ")", "\n", "remain_rs", "=", "np", ".", "delete", "(", "remain_rs", ",", "r_in", ")", "\n", "prob_in", "=", "neg_prob", "[", "remain_rs", "]", "\n", "\n", "", "cat_selected_rs", "=", "np", ".", "concatenate", "(", "selected_cs", ")", "if", "n_comp", "<", "n_exp", "else", "np", ".", "concatenate", "(", "selected_rs", ")", "\n", "cat_selected_cs", "=", "np", ".", "concatenate", "(", "selected_rs", ")", "if", "n_comp", "<", "n_exp", "else", "np", ".", "concatenate", "(", "selected_cs", ")", "\n", "\n", "cat_selected_rs", "=", "torch", ".", "LongTensor", "(", "cat_selected_rs", ")", ".", "cuda", "(", ")", "\n", "cat_selected_cs", "=", "torch", ".", "LongTensor", "(", "cat_selected_cs", ")", ".", "cuda", "(", ")", "\n", "\n", "return", "cat_selected_rs", ",", "cat_selected_cs", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.criterions.g_crit": [[10, 15], ["sum", "f.mean"], "function", ["None"], ["def", "g_crit", "(", "*", "fakes", ")", ":", "\n", "    ", "losses", "=", "[", "-", "f", ".", "mean", "(", ")", "for", "f", "in", "fakes", "]", "\n", "loss", "=", "sum", "(", "losses", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.criterions.d_crit": [[17, 24], ["torch.relu().mean", "torch.relu().mean", "sum", "sum", "torch.relu", "torch.relu"], "function", ["None"], ["", "def", "d_crit", "(", "reals", ",", "fakes", ")", ":", "\n", "    ", "real_losses", "=", "[", "F", ".", "relu", "(", "1", "-", "r", ")", ".", "mean", "(", ")", "for", "r", "in", "reals", "]", "\n", "fake_losses", "=", "[", "F", ".", "relu", "(", "1", "+", "f", ")", ".", "mean", "(", ")", "for", "f", "in", "fakes", "]", "\n", "\n", "loss", "=", "sum", "(", "real_losses", ")", "+", "sum", "(", "fake_losses", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.criterions.fm_crit": [[26, 31], ["torch.l1_loss", "sum", "len", "r.detach", "zip"], "function", ["None"], ["", "def", "fm_crit", "(", "reals", ",", "fakes", ")", ":", "\n", "    ", "losses", "=", "[", "F", ".", "l1_loss", "(", "r", ".", "detach", "(", ")", ",", "f", ")", "for", "r", ",", "f", "in", "zip", "(", "reals", ",", "fakes", ")", "]", "\n", "loss", "=", "sum", "(", "losses", ")", "/", "len", "(", "reals", ")", "\n", "\n", "return", "loss", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.HSIC.__init__": [[39, 55], ["torch.Module.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["def", "__init__", "(", "self", ",", "sigma_x", ",", "sigma_y", "=", "None", ",", "algorithm", "=", "'unbiased'", ",", "\n", "reduction", "=", "None", ")", ":", "\n", "        ", "super", "(", "HSIC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "sigma_y", "is", "None", ":", "\n", "            ", "sigma_y", "=", "sigma_x", "\n", "\n", "", "self", ".", "sigma_x", "=", "sigma_x", "\n", "self", ".", "sigma_y", "=", "sigma_y", "\n", "\n", "if", "algorithm", "==", "'biased'", ":", "\n", "            ", "self", ".", "estimator", "=", "self", ".", "biased_estimator", "\n", "", "elif", "algorithm", "==", "'unbiased'", ":", "\n", "            ", "self", ".", "estimator", "=", "self", ".", "unbiased_estimator", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'invalid estimator: {}'", ".", "format", "(", "algorithm", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.HSIC._kernel_x": [[56, 58], ["None"], "methods", ["None"], ["", "", "def", "_kernel_x", "(", "self", ",", "X", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.HSIC._kernel_y": [[59, 61], ["None"], "methods", ["None"], ["", "def", "_kernel_y", "(", "self", ",", "Y", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.HSIC.biased_estimator": [[62, 75], ["hsic.HSIC._kernel_x", "hsic.HSIC._kernel_y", "len", "torch.trace", "torch.trace", "torch.trace", "torch.trace", "hsic.HSIC.mean", "hsic.HSIC.mean"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.RbfHSIC._kernel_x", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.RbfHSIC._kernel_y"], ["", "def", "biased_estimator", "(", "self", ",", "input1", ",", "input2", ")", ":", "\n", "        ", "\"\"\"Biased estimator of Hilbert-Schmidt Independence Criterion\n        Gretton, Arthur, et al. \"Measuring statistical dependence with Hilbert-Schmidt norms.\" 2005.\n        \"\"\"", "\n", "K", "=", "self", ".", "_kernel_x", "(", "input1", ")", "\n", "L", "=", "self", ".", "_kernel_y", "(", "input2", ")", "\n", "\n", "KH", "=", "K", "-", "K", ".", "mean", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "LH", "=", "L", "-", "L", ".", "mean", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "\n", "N", "=", "len", "(", "input1", ")", "\n", "\n", "return", "torch", ".", "trace", "(", "KH", "@", "LH", "/", "(", "N", "-", "1", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.HSIC.unbiased_estimator": [[76, 95], ["hsic.HSIC._kernel_x", "hsic.HSIC._kernel_y", "len", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.trace", "torch.trace", "torch.trace", "torch.trace", "torch.sum().dot", "torch.sum().dot", "torch.sum().dot", "torch.sum().dot", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.RbfHSIC._kernel_x", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.RbfHSIC._kernel_y"], ["", "def", "unbiased_estimator", "(", "self", ",", "input1", ",", "input2", ")", ":", "\n", "        ", "\"\"\"Unbiased estimator of Hilbert-Schmidt Independence Criterion\n        Song, Le, et al. \"Feature selection via dependence maximization.\" 2012.\n        \"\"\"", "\n", "kernel_XX", "=", "self", ".", "_kernel_x", "(", "input1", ")", "\n", "kernel_YY", "=", "self", ".", "_kernel_y", "(", "input2", ")", "\n", "\n", "tK", "=", "kernel_XX", "-", "torch", ".", "diag", "(", "kernel_XX", ")", "\n", "tL", "=", "kernel_YY", "-", "torch", ".", "diag", "(", "kernel_YY", ")", "\n", "\n", "N", "=", "len", "(", "input1", ")", "\n", "\n", "hsic", "=", "(", "\n", "torch", ".", "trace", "(", "tK", "@", "tL", ")", "\n", "+", "(", "torch", ".", "sum", "(", "tK", ")", "*", "torch", ".", "sum", "(", "tL", ")", "/", "(", "N", "-", "1", ")", "/", "(", "N", "-", "2", ")", ")", "\n", "-", "(", "2", "*", "torch", ".", "sum", "(", "tK", ",", "0", ")", ".", "dot", "(", "torch", ".", "sum", "(", "tL", ",", "0", ")", ")", "/", "(", "N", "-", "2", ")", ")", "\n", ")", "\n", "\n", "return", "hsic", "/", "(", "N", "*", "(", "N", "-", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.HSIC.forward": [[96, 98], ["hsic.HSIC.estimator"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input1", ",", "input2", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "estimator", "(", "input1", ",", "input2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.RbfHSIC._kernel": [[103, 112], ["X.view.view.view", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "len", "X.view.view.t", "torch.diag.unsqueeze", "torch.diag.unsqueeze", "torch.diag.unsqueeze", "torch.diag.unsqueeze"], "methods", ["None"], ["def", "_kernel", "(", "self", ",", "X", ",", "sigma", ")", ":", "\n", "        ", "X", "=", "X", ".", "view", "(", "len", "(", "X", ")", ",", "-", "1", ")", "\n", "XX", "=", "X", "@", "X", ".", "t", "(", ")", "\n", "X_sqnorms", "=", "torch", ".", "diag", "(", "XX", ")", "\n", "X_L2", "=", "-", "2", "*", "XX", "+", "X_sqnorms", ".", "unsqueeze", "(", "1", ")", "+", "X_sqnorms", ".", "unsqueeze", "(", "0", ")", "\n", "gamma", "=", "1", "/", "(", "2", "*", "sigma", "**", "2", ")", "\n", "\n", "kernel_XX", "=", "torch", ".", "exp", "(", "-", "gamma", "*", "X_L2", ")", "\n", "return", "kernel_XX", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.RbfHSIC._kernel_x": [[113, 115], ["hsic.RbfHSIC._kernel"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.RbfHSIC._kernel"], ["", "def", "_kernel_x", "(", "self", ",", "X", ")", ":", "\n", "        ", "return", "self", ".", "_kernel", "(", "X", ",", "self", ".", "sigma_x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.RbfHSIC._kernel_y": [[116, 118], ["hsic.RbfHSIC._kernel"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.RbfHSIC._kernel"], ["", "def", "_kernel_y", "(", "self", ",", "Y", ")", ":", "\n", "        ", "return", "self", ".", "_kernel", "(", "Y", ",", "self", ".", "sigma_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.MinusRbfHSIC.forward": [[123, 125], ["hsic.MinusRbfHSIC.estimator"], "methods", ["None"], ["def", "forward", "(", "self", ",", "input1", ",", "input2", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "-", "self", ".", "estimator", "(", "input1", ",", "input2", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.hsic.to_numpy": [[9, 13], ["x.clone().detach().cpu().numpy", "x.clone().detach().cpu", "x.clone().detach", "x.clone"], "function", ["None"], ["def", "to_numpy", "(", "x", ")", ":", "\n", "    ", "\"\"\"convert Pytorch tensor to numpy array\n    \"\"\"", "\n", "return", "x", ".", "clone", "(", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.__init__": [[20, 24], ["base_trainer.BaseTrainer.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gen", ",", "disc", ",", "g_optim", ",", "d_optim", ",", "aux_clf", ",", "ac_optim", ",", "\n", "writer", ",", "logger", ",", "evaluator", ",", "test_loader", ",", "cfg", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "gen", ",", "disc", ",", "g_optim", ",", "d_optim", ",", "aux_clf", ",", "ac_optim", ",", "\n", "writer", ",", "logger", ",", "evaluator", ",", "test_loader", ",", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.sync_g_ema": [[25, 31], ["fact_trainer.FactTrainer.gen_ema.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "fact_trainer.FactTrainer.gen_ema.train", "fact_trainer.FactTrainer.gen_ema.gen_from_style_char"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.train", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.train", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.gen_from_style_char"], ["", "def", "sync_g_ema", "(", "self", ",", "style_imgs", ",", "char_imgs", ")", ":", "\n", "        ", "org_train_mode", "=", "self", ".", "gen_ema", ".", "training", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "gen_ema", ".", "train", "(", ")", "\n", "self", ".", "gen_ema", ".", "gen_from_style_char", "(", "style_imgs", ",", "char_imgs", ")", "\n", "", "self", ".", "gen_ema", ".", "train", "(", "org_train_mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.train": [[32, 208], ["fact_trainer.FactTrainer.gen.train", "utils.AverageMeters", "utils.AverageMeters", "utils.AverageMeters", "fact_trainer.FactTrainer.clear_losses", "fact_trainer.FactTrainer.logger.info", "trainer_utils.cyclize", "fact_trainer.FactTrainer.logger.info", "fact_trainer.FactTrainer.disc.train", "batch[].cuda", "batch[].cuda", "batch[].cuda", "batch[].cuda", "batch[].cuda", "batch[].cuda", "batch[].cuda", "len", "fact_trainer.FactTrainer.gen.encode", "fact_trainer.FactTrainer.gen.encode", "fact_trainer.FactTrainer.add_indp_exp_loss", "fact_trainer.FactTrainer.gen.factorize", "fact_trainer.FactTrainer.gen.factorize", "fact_trainer.FactTrainer.gen.factorize", "fact_trainer.FactTrainer.gen.factorize", "fact_trainer.FactTrainer.add_indp_fact_loss", "fact_trainer.FactTrainer.gen.defactorize", "fact_trainer.FactTrainer.gen.decode", "utils.AverageMeters.updates", "fact_trainer.FactTrainer.disc", "fact_trainer.FactTrainer.disc", "fact_trainer.FactTrainer.add_gan_d_loss", "fact_trainer.FactTrainer.d_optim.zero_grad", "fact_trainer.FactTrainer.d_backward", "fact_trainer.FactTrainer.d_optim.step", "fact_trainer.FactTrainer.disc", "fact_trainer.FactTrainer.add_gan_g_loss", "fact_trainer.FactTrainer.add_fm_loss", "utils.AverageMeters.updates", "fact_trainer.FactTrainer.add_pixel_loss", "fact_trainer.FactTrainer.g_optim.zero_grad", "fact_trainer.FactTrainer.add_ac_losses_and_update_stats", "fact_trainer.FactTrainer.ac_optim.zero_grad", "fact_trainer.FactTrainer.ac_backward", "fact_trainer.FactTrainer.ac_optim.step", "fact_trainer.FactTrainer.g_backward", "fact_trainer.FactTrainer.g_optim.step", "fact_trainer.FactTrainer.clear_losses", "utils.AverageMeters.updates", "fact_trainer.FactTrainer.accum_g", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "len", "loader.sampler.set_epoch", "batch[].cuda.flatten", "batch[].cuda.flatten", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "utils.add_dim_and_reshape().mean", "utils.add_dim_and_reshape().mean", "fact_trainer.FactTrainer.detach", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "fact_trainer.FactTrainer.sync_g_ema", "fact_trainer.FactTrainer.items", "fact_trainer.FactTrainer.items", "real_font.mean().item", "real_uni.mean().item", "fake_font.mean().item", "fake_uni.mean().item", "fact_trainer.FactTrainer.train.racc"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.train", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.clear_losses", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.cyclize", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.train", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.encode", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.encode", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.add_indp_exp_loss", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.factorize", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.factorize", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.factorize", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.factorize", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.add_indp_fact_loss", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.defactorize", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.decode", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeters.updates", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_gan_d_loss", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.d_backward", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_gan_g_loss", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_fm_loss", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeters.updates", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_pixel_loss", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.add_ac_losses_and_update_stats", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.ac_backward", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.g_backward", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.clear_losses", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeters.updates", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.accum_g", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.sync_g_ema"], ["", "def", "train", "(", "self", ",", "loader", ",", "st_step", "=", "0", ",", "max_step", "=", "100000", ")", ":", "\n", "\n", "        ", "self", ".", "gen", ".", "train", "(", ")", "\n", "if", "self", ".", "disc", "is", "not", "None", ":", "\n", "            ", "self", ".", "disc", ".", "train", "(", ")", "\n", "\n", "# loss stats", "\n", "", "losses", "=", "utils", ".", "AverageMeters", "(", "\"g_total\"", ",", "\"pixel\"", ",", "\"disc\"", ",", "\"gen\"", ",", "\"fm\"", ",", "\"indp_exp\"", ",", "\"indp_fact\"", ",", "\n", "\"ac_s\"", ",", "\"ac_c\"", ",", "\"cross_ac_s\"", ",", "\"cross_ac_c\"", ",", "\n", "\"ac_gen_s\"", ",", "\"ac_gen_c\"", ",", "\"cross_ac_gen_s\"", ",", "\"cross_ac_gen_c\"", ")", "\n", "# discriminator stats", "\n", "discs", "=", "utils", ".", "AverageMeters", "(", "\"real_font\"", ",", "\"real_uni\"", ",", "\"fake_font\"", ",", "\"fake_uni\"", ",", "\n", "\"real_font_acc\"", ",", "\"real_uni_acc\"", ",", "\n", "\"fake_font_acc\"", ",", "\"fake_uni_acc\"", ")", "\n", "# etc stats", "\n", "stats", "=", "utils", ".", "AverageMeters", "(", "\"B\"", ",", "\"ac_acc_s\"", ",", "\"ac_acc_c\"", ",", "\"ac_gen_acc_s\"", ",", "\"ac_gen_acc_c\"", ")", "\n", "\n", "self", ".", "step", "=", "st_step", "\n", "self", ".", "clear_losses", "(", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Start training ...\"", ")", "\n", "\n", "for", "batch", "in", "cyclize", "(", "loader", ")", ":", "\n", "            ", "epoch", "=", "self", ".", "step", "//", "len", "(", "loader", ")", "\n", "if", "self", ".", "cfg", ".", "use_ddp", "and", "(", "self", ".", "step", "%", "len", "(", "loader", ")", ")", "==", "0", ":", "\n", "                ", "loader", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n", "", "style_imgs", "=", "batch", "[", "\"style_imgs\"", "]", ".", "cuda", "(", ")", "\n", "style_fids", "=", "batch", "[", "\"style_fids\"", "]", ".", "cuda", "(", ")", "\n", "style_decs", "=", "batch", "[", "\"style_decs\"", "]", "\n", "char_imgs", "=", "batch", "[", "\"char_imgs\"", "]", ".", "cuda", "(", ")", "\n", "char_fids", "=", "batch", "[", "\"char_fids\"", "]", ".", "cuda", "(", ")", "\n", "char_decs", "=", "batch", "[", "\"char_decs\"", "]", "\n", "\n", "trg_imgs", "=", "batch", "[", "\"trg_imgs\"", "]", ".", "cuda", "(", ")", "\n", "trg_fids", "=", "batch", "[", "\"trg_fids\"", "]", ".", "cuda", "(", ")", "\n", "trg_cids", "=", "batch", "[", "\"trg_cids\"", "]", ".", "cuda", "(", ")", "\n", "trg_decs", "=", "batch", "[", "\"trg_decs\"", "]", "\n", "\n", "##############################################################", "\n", "# infer", "\n", "##############################################################", "\n", "\n", "B", "=", "len", "(", "trg_imgs", ")", "\n", "n_s", "=", "style_imgs", ".", "shape", "[", "1", "]", "\n", "n_c", "=", "char_imgs", ".", "shape", "[", "1", "]", "\n", "\n", "style_feats", "=", "self", ".", "gen", ".", "encode", "(", "style_imgs", ".", "flatten", "(", "0", ",", "1", ")", ")", "# (B*n_s, n_exp, *feat_shape)", "\n", "char_feats", "=", "self", ".", "gen", ".", "encode", "(", "char_imgs", ".", "flatten", "(", "0", ",", "1", ")", ")", "\n", "\n", "self", ".", "add_indp_exp_loss", "(", "torch", ".", "cat", "(", "[", "style_feats", "[", "\"last\"", "]", ",", "char_feats", "[", "\"last\"", "]", "]", ")", ")", "\n", "\n", "style_facts_s", "=", "self", ".", "gen", ".", "factorize", "(", "style_feats", ",", "0", ")", "# (B*n_s, n_exp, *feat_shape)", "\n", "style_facts_c", "=", "self", ".", "gen", ".", "factorize", "(", "style_feats", ",", "1", ")", "\n", "char_facts_s", "=", "self", ".", "gen", ".", "factorize", "(", "char_feats", ",", "0", ")", "\n", "char_facts_c", "=", "self", ".", "gen", ".", "factorize", "(", "char_feats", ",", "1", ")", "\n", "\n", "self", ".", "add_indp_fact_loss", "(", "\n", "[", "style_facts_s", "[", "\"last\"", "]", ",", "style_facts_c", "[", "\"last\"", "]", "]", ",", "\n", "[", "style_facts_s", "[", "\"skip\"", "]", ",", "style_facts_c", "[", "\"skip\"", "]", "]", ",", "\n", "[", "char_facts_s", "[", "\"last\"", "]", ",", "char_facts_c", "[", "\"last\"", "]", "]", ",", "\n", "[", "char_facts_s", "[", "\"skip\"", "]", ",", "char_facts_c", "[", "\"skip\"", "]", "]", ",", "\n", ")", "\n", "\n", "mean_style_facts", "=", "{", "k", ":", "utils", ".", "add_dim_and_reshape", "(", "v", ",", "0", ",", "(", "-", "1", ",", "n_s", ")", ")", ".", "mean", "(", "1", ")", "for", "k", ",", "v", "in", "style_facts_s", ".", "items", "(", ")", "}", "\n", "mean_char_facts", "=", "{", "k", ":", "utils", ".", "add_dim_and_reshape", "(", "v", ",", "0", ",", "(", "-", "1", ",", "n_c", ")", ")", ".", "mean", "(", "1", ")", "for", "k", ",", "v", "in", "char_facts_c", ".", "items", "(", ")", "}", "\n", "gen_feats", "=", "self", ".", "gen", ".", "defactorize", "(", "[", "mean_style_facts", ",", "mean_char_facts", "]", ")", "\n", "gen_imgs", "=", "self", ".", "gen", ".", "decode", "(", "gen_feats", ")", "\n", "\n", "stats", ".", "updates", "(", "{", "\n", "\"B\"", ":", "B", ",", "\n", "}", ")", "\n", "\n", "real_font", ",", "real_uni", ",", "*", "real_feats", "=", "self", ".", "disc", "(", "\n", "trg_imgs", ",", "trg_fids", ",", "trg_cids", ",", "out_feats", "=", "self", ".", "cfg", "[", "'fm_layers'", "]", "\n", ")", "\n", "\n", "fake_font", ",", "fake_uni", "=", "self", ".", "disc", "(", "gen_imgs", ".", "detach", "(", ")", ",", "trg_fids", ",", "trg_cids", ")", "\n", "self", ".", "add_gan_d_loss", "(", "[", "real_font", ",", "real_uni", "]", ",", "[", "fake_font", ",", "fake_uni", "]", ")", "\n", "\n", "self", ".", "d_optim", ".", "zero_grad", "(", ")", "\n", "self", ".", "d_backward", "(", ")", "\n", "self", ".", "d_optim", ".", "step", "(", ")", "\n", "\n", "fake_font", ",", "fake_uni", ",", "*", "fake_feats", "=", "self", ".", "disc", "(", "\n", "gen_imgs", ",", "trg_fids", ",", "trg_cids", ",", "out_feats", "=", "self", ".", "cfg", "[", "'fm_layers'", "]", "\n", ")", "\n", "self", ".", "add_gan_g_loss", "(", "fake_font", ",", "fake_uni", ")", "\n", "\n", "self", ".", "add_fm_loss", "(", "real_feats", ",", "fake_feats", ")", "\n", "\n", "def", "racc", "(", "x", ")", ":", "\n", "                ", "return", "(", "x", ">", "0.", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "def", "facc", "(", "x", ")", ":", "\n", "                ", "return", "(", "x", "<", "0.", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "discs", ".", "updates", "(", "{", "\n", "\"real_font\"", ":", "real_font", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "\n", "\"real_uni\"", ":", "real_uni", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "\n", "\"fake_font\"", ":", "fake_font", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "\n", "\"fake_uni\"", ":", "fake_uni", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "\n", "\n", "'real_font_acc'", ":", "racc", "(", "real_font", ")", ",", "\n", "'real_uni_acc'", ":", "racc", "(", "real_uni", ")", ",", "\n", "'fake_font_acc'", ":", "facc", "(", "fake_font", ")", ",", "\n", "'fake_uni_acc'", ":", "facc", "(", "fake_uni", ")", "\n", "}", ",", "B", ")", "\n", "\n", "self", ".", "add_pixel_loss", "(", "gen_imgs", ",", "trg_imgs", ")", "\n", "\n", "self", ".", "g_optim", ".", "zero_grad", "(", ")", "\n", "\n", "self", ".", "add_ac_losses_and_update_stats", "(", "\n", "torch", ".", "cat", "(", "[", "style_facts_s", "[", "\"last\"", "]", ",", "char_facts_s", "[", "\"last\"", "]", "]", ")", ",", "\n", "torch", ".", "cat", "(", "[", "style_fids", ".", "flatten", "(", ")", ",", "char_fids", ".", "flatten", "(", ")", "]", ")", ",", "\n", "torch", ".", "cat", "(", "[", "style_facts_c", "[", "\"last\"", "]", ",", "char_facts_c", "[", "\"last\"", "]", "]", ")", ",", "\n", "style_decs", "+", "char_decs", ",", "\n", "gen_imgs", ",", "\n", "trg_fids", ",", "\n", "trg_decs", ",", "\n", "stats", "\n", ")", "\n", "self", ".", "ac_optim", ".", "zero_grad", "(", ")", "\n", "self", ".", "ac_backward", "(", ")", "\n", "self", ".", "ac_optim", ".", "step", "(", ")", "\n", "\n", "self", ".", "g_backward", "(", ")", "\n", "self", ".", "g_optim", ".", "step", "(", ")", "\n", "\n", "loss_dic", "=", "self", ".", "clear_losses", "(", ")", "\n", "losses", ".", "updates", "(", "loss_dic", ",", "B", ")", "# accum loss stats", "\n", "\n", "# EMA g", "\n", "self", ".", "accum_g", "(", ")", "\n", "if", "self", ".", "is_bn_gen", ":", "\n", "                ", "self", ".", "sync_g_ema", "(", "style_imgs", ",", "char_imgs", ")", "\n", "\n", "", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "\n", "if", "self", ".", "cfg", ".", "gpu", "<=", "0", ":", "\n", "                ", "if", "self", ".", "step", "%", "self", ".", "cfg", ".", "tb_freq", "==", "0", ":", "\n", "                    ", "self", ".", "plot", "(", "losses", ",", "discs", ",", "stats", ")", "\n", "\n", "", "if", "self", ".", "step", "%", "self", ".", "cfg", ".", "print_freq", "==", "0", ":", "\n", "                    ", "self", ".", "log", "(", "losses", ",", "discs", ",", "stats", ")", "\n", "self", ".", "logger", ".", "debug", "(", "\"GPU Memory usage: max mem_alloc = %.1fM / %.1fM\"", ",", "\n", "torch", ".", "cuda", ".", "max_memory_allocated", "(", ")", "/", "1000", "/", "1000", ",", "\n", "torch", ".", "cuda", ".", "max_memory_cached", "(", ")", "/", "1000", "/", "1000", ")", "\n", "losses", ".", "resets", "(", ")", "\n", "discs", ".", "resets", "(", ")", "\n", "stats", ".", "resets", "(", ")", "\n", "\n", "nrow", "=", "len", "(", "trg_imgs", ")", "\n", "grid", "=", "utils", ".", "make_comparable_grid", "(", "trg_imgs", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "gen_imgs", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "nrow", "=", "nrow", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "\"last\"", ",", "grid", ")", "\n", "\n", "", "if", "self", ".", "step", ">", "0", "and", "self", ".", "step", "%", "self", ".", "cfg", ".", "val_freq", "==", "0", ":", "\n", "                    ", "epoch", "=", "self", ".", "step", "/", "len", "(", "loader", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Validation at Epoch = {:.3f}\"", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "if", "not", "self", ".", "is_bn_gen", ":", "\n", "                        ", "self", ".", "sync_g_ema", "(", "style_imgs", ",", "char_imgs", ")", "\n", "\n", "", "self", ".", "evaluator", ".", "comparable_val_saveimg", "(", "self", ".", "gen_ema", ",", "self", ".", "test_loader", ",", "self", ".", "step", ",", "n_row", "=", "self", ".", "test_n_row", ")", "\n", "\n", "self", ".", "save", "(", "loss_dic", "[", "'g_total'", "]", ",", "self", ".", "cfg", ".", "save", ",", "self", ".", "cfg", ".", "get", "(", "'save_freq'", ",", "self", ".", "cfg", ".", "val_freq", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "pass", "\n", "\n", "", "if", "self", ".", "step", ">=", "max_step", ":", "\n", "                ", "break", "\n", "\n", "", "self", ".", "step", "+=", "1", "\n", "\n", "", "self", ".", "logger", ".", "info", "(", "\"Iteration finished.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.add_indp_exp_loss": [[209, 216], ["hsic.RbfHSIC", "torch.adaptive_avg_pool2d().squeeze", "torch.adaptive_avg_pool2d().squeeze", "torch.adaptive_avg_pool2d().squeeze", "fact_trainer.FactTrainer.add_loss", "range", "itertools.combinations", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_loss"], ["", "def", "add_indp_exp_loss", "(", "self", ",", "exps", ")", ":", "\n", "        ", "exps", "=", "[", "F", ".", "adaptive_avg_pool2d", "(", "exps", "[", ":", ",", "i", "]", ",", "1", ")", ".", "squeeze", "(", ")", "for", "i", "in", "range", "(", "exps", ".", "shape", "[", "1", "]", ")", "]", "\n", "exp_pairs", "=", "[", "*", "combinations", "(", "exps", ",", "2", ")", "]", "\n", "\n", "crit", "=", "RbfHSIC", "(", "1", ")", "\n", "for", "pair", "in", "exp_pairs", ":", "\n", "            ", "self", ".", "add_loss", "(", "pair", ",", "self", ".", "g_losses", ",", "\"indp_exp\"", ",", "self", ".", "cfg", "[", "\"indp_exp_w\"", "]", ",", "crit", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.add_indp_fact_loss": [[217, 228], ["hsic.RbfHSIC", "fact_trainer.FactTrainer.add_loss", "torch.adaptive_avg_pool2d().squeeze", "torch.adaptive_avg_pool2d().squeeze", "torch.adaptive_avg_pool2d().squeeze", "torch.adaptive_avg_pool2d().squeeze", "torch.adaptive_avg_pool2d().squeeze", "torch.adaptive_avg_pool2d().squeeze", "range", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.base_trainer.BaseTrainer.add_loss"], ["", "", "def", "add_indp_fact_loss", "(", "self", ",", "*", "exp_pairs", ")", ":", "\n", "        ", "pairs", "=", "[", "]", "\n", "for", "_exp1", ",", "_exp2", "in", "exp_pairs", ":", "\n", "            ", "_pairs", "=", "[", "(", "F", ".", "adaptive_avg_pool2d", "(", "_exp1", "[", ":", ",", "i", "]", ",", "1", ")", ".", "squeeze", "(", ")", ",", "\n", "F", ".", "adaptive_avg_pool2d", "(", "_exp2", "[", ":", ",", "i", "]", ",", "1", ")", ".", "squeeze", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "_exp1", ".", "shape", "[", "1", "]", ")", "]", "\n", "pairs", "+=", "_pairs", "\n", "\n", "", "crit", "=", "RbfHSIC", "(", "1", ")", "\n", "for", "pair", "in", "pairs", ":", "\n", "            ", "self", ".", "add_loss", "(", "pair", ",", "self", ".", "g_losses", ",", "\"indp_fact\"", ",", "self", ".", "cfg", "[", "\"indp_fact_w\"", "]", ",", "crit", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.infer_comp_ac": [[229, 258], ["fact_trainer.FactTrainer.aux_clf", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.kl_div", "torch.kl_div", "torch.kl_div", "ac_logit_c_flat.reshape", "trainer_utils.binarize_labels().cuda", "torch.as_tensor().cuda", "torch.as_tensor().cuda", "torch.as_tensor().cuda", "torch.as_tensor().cuda", "torch.as_tensor().cuda", "torch.as_tensor().cuda", "torch.as_tensor().cuda", "torch.as_tensor().cuda", "torch.as_tensor().cuda", "zip", "fact_experts.flatten", "torch.Softmax", "torch.Softmax", "torch.Softmax", "_prob.T[].detach().cpu", "trainer_utils.expert_assign", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "accs.item", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "trainer_utils.binarize_labels", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.as_tensor", "torch.Softmax", "torch.Softmax", "torch.Softmax", "T_probs[].sum", "_prob.T[].detach", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.expert_assign", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.trainer_utils.binarize_labels"], ["", "", "def", "infer_comp_ac", "(", "self", ",", "fact_experts", ",", "comp_ids", ")", ":", "\n", "        ", "B", ",", "n_experts", "=", "fact_experts", ".", "shape", "[", ":", "2", "]", "\n", "\n", "ac_logit_s_flat", ",", "ac_logit_c_flat", "=", "self", ".", "aux_clf", "(", "fact_experts", ".", "flatten", "(", "0", ",", "1", ")", ")", "\n", "\n", "n_s", "=", "ac_logit_s_flat", ".", "shape", "[", "-", "1", "]", "\n", "ac_prob_s_flat", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "ac_logit_s_flat", ")", "\n", "uniform_dist_s", "=", "torch", ".", "zeros_like", "(", "ac_prob_s_flat", ")", ".", "fill_", "(", "(", "1.", "/", "n_s", ")", ")", ".", "cuda", "(", ")", "\n", "uniform_loss_s", "=", "F", ".", "kl_div", "(", "ac_prob_s_flat", ",", "uniform_dist_s", ",", "reduction", "=", "\"batchmean\"", ")", "# causes increasing weight norm ; to be modified", "\n", "\n", "ac_logit_c", "=", "ac_logit_c_flat", ".", "reshape", "(", "(", "B", ",", "n_experts", ",", "-", "1", ")", ")", "# (bs, n_exp, n_comps)", "\n", "n_comps", "=", "ac_logit_c", ".", "shape", "[", "-", "1", "]", "\n", "binary_comp_ids", "=", "binarize_labels", "(", "comp_ids", ",", "n_comps", ")", ".", "cuda", "(", ")", "\n", "ac_loss_c", "=", "torch", ".", "as_tensor", "(", "0.", ")", ".", "cuda", "(", ")", "\n", "accs", "=", "0.", "\n", "\n", "for", "_b_comp_id", ",", "_logit", "in", "zip", "(", "binary_comp_ids", ",", "ac_logit_c", ")", ":", "\n", "            ", "_prob", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "_logit", ")", "# (n_exp, n_comp)", "\n", "T_probs", "=", "_prob", ".", "T", "[", "_b_comp_id", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "# (n_T, n_exp)", "\n", "cids", ",", "eids", "=", "expert_assign", "(", "T_probs", ")", "\n", "_max_ids", "=", "torch", ".", "where", "(", "_b_comp_id", ")", "[", "0", "]", "[", "cids", "]", "\n", "ac_loss_c", "+=", "F", ".", "cross_entropy", "(", "_logit", "[", "eids", "]", ",", "_max_ids", ")", "\n", "acc", "=", "T_probs", "[", "cids", ",", "eids", "]", ".", "sum", "(", ")", "/", "n_experts", "\n", "accs", "+=", "acc", "\n", "\n", "", "ac_loss_c", "/=", "B", "\n", "accs", "/=", "B", "\n", "\n", "return", "ac_loss_c", ",", "uniform_loss_s", ",", "accs", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.infer_style_ac": [[259, 276], ["fact_experts.flatten", "style_ids.repeat_interleave", "fact_trainer.FactTrainer.aux_clf", "torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.zeros_like().fill_().cuda", "torch.kl_div", "torch.kl_div", "torch.kl_div", "ac_logit_s_flat.max", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like().fill_", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["None"], ["", "def", "infer_style_ac", "(", "self", ",", "fact_experts", ",", "style_ids", ")", ":", "\n", "        ", "B", ",", "n_experts", "=", "fact_experts", ".", "shape", "[", ":", "2", "]", "\n", "ac_in_flat", "=", "fact_experts", ".", "flatten", "(", "0", ",", "1", ")", "\n", "style_ids_flat", "=", "style_ids", ".", "repeat_interleave", "(", "n_experts", ",", "dim", "=", "0", ")", "\n", "\n", "ac_logit_s_flat", ",", "ac_logit_c_flat", "=", "self", ".", "aux_clf", "(", "ac_in_flat", ")", "\n", "ac_loss_s", "=", "F", ".", "cross_entropy", "(", "ac_logit_s_flat", ",", "style_ids_flat", ")", "\n", "\n", "n_c", "=", "ac_logit_c_flat", ".", "shape", "[", "-", "1", "]", "\n", "ac_prob_c_flat", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "ac_logit_c_flat", ")", "\n", "uniform_dist_c", "=", "torch", ".", "zeros_like", "(", "ac_prob_c_flat", ")", ".", "fill_", "(", "(", "1.", "/", "n_c", ")", ")", ".", "cuda", "(", ")", "\n", "uniform_loss_c", "=", "F", ".", "kl_div", "(", "ac_prob_c_flat", ",", "uniform_dist_c", ",", "reduction", "=", "\"batchmean\"", ")", "# causes increasing weight norm ; to be modified", "\n", "\n", "_", ",", "est_ids", "=", "ac_logit_s_flat", ".", "max", "(", "dim", "=", "-", "1", ")", "\n", "acc", "=", "(", "style_ids_flat", "==", "est_ids", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n", "return", "ac_loss_s", ",", "uniform_loss_c", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.add_ac_losses_and_update_stats": [[277, 303], ["fact_trainer.FactTrainer.infer_style_ac", "fact_trainer.FactTrainer.infer_comp_ac", "stats.ac_acc_s.update", "stats.ac_acc_c.update", "fact_trainer.FactTrainer.gen_ema.encode", "fact_trainer.FactTrainer.infer_style_ac", "fact_trainer.FactTrainer.infer_comp_ac", "stats.ac_gen_acc_s.update", "stats.ac_gen_acc_c.update", "len", "sum", "fact_trainer.FactTrainer.gen_ema.factorize", "fact_trainer.FactTrainer.gen_ema.factorize", "len", "sum", "map", "map"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.infer_style_ac", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.infer_comp_ac", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.encode", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.infer_style_ac", "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.infer_comp_ac", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.factorize", "home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.factorize"], ["", "def", "add_ac_losses_and_update_stats", "(", "self", ",", "style_facts", ",", "style_ids", ",", "char_facts", ",", "comp_ids", ",", "\n", "gen_imgs", ",", "gen_style_ids", ",", "gen_comp_ids", ",", "stats", ")", ":", "\n", "\n", "        ", "ac_loss_s", ",", "cross_ac_loss_s", ",", "acc_s", "=", "self", ".", "infer_style_ac", "(", "style_facts", ",", "style_ids", ")", "\n", "ac_loss_c", ",", "cross_ac_loss_c", ",", "acc_c", "=", "self", ".", "infer_comp_ac", "(", "char_facts", ",", "comp_ids", ")", "\n", "\n", "self", ".", "ac_losses", "[", "\"ac_s\"", "]", "=", "ac_loss_s", "*", "self", ".", "cfg", "[", "\"ac_w\"", "]", "\n", "self", ".", "ac_losses", "[", "\"ac_c\"", "]", "=", "ac_loss_c", "*", "self", ".", "cfg", "[", "\"ac_w\"", "]", "\n", "self", ".", "ac_losses", "[", "\"cross_ac_s\"", "]", "=", "cross_ac_loss_s", "*", "self", ".", "cfg", "[", "\"ac_w\"", "]", "*", "self", ".", "cfg", "[", "\"ac_cross_w\"", "]", "\n", "self", ".", "ac_losses", "[", "\"cross_ac_c\"", "]", "=", "cross_ac_loss_c", "*", "self", ".", "cfg", "[", "\"ac_w\"", "]", "*", "self", ".", "cfg", "[", "\"ac_cross_w\"", "]", "\n", "stats", ".", "ac_acc_s", ".", "update", "(", "acc_s", ",", "len", "(", "style_ids", ")", ")", "\n", "stats", ".", "ac_acc_c", ".", "update", "(", "acc_c", ",", "sum", "(", "[", "*", "map", "(", "len", ",", "comp_ids", ")", "]", ")", ")", "\n", "\n", "gen_feats", "=", "self", ".", "gen_ema", ".", "encode", "(", "gen_imgs", ")", "\n", "gen_style_facts", "=", "self", ".", "gen_ema", ".", "factorize", "(", "gen_feats", ",", "0", ")", "[", "\"last\"", "]", "\n", "gen_char_facts", "=", "self", ".", "gen_ema", ".", "factorize", "(", "gen_feats", ",", "1", ")", "[", "\"last\"", "]", "\n", "\n", "gen_ac_loss_s", ",", "gen_cross_ac_loss_s", ",", "gen_acc_s", "=", "self", ".", "infer_style_ac", "(", "gen_style_facts", ",", "gen_style_ids", ")", "\n", "gen_ac_loss_c", ",", "gen_cross_ac_loss_c", ",", "gen_acc_c", "=", "self", ".", "infer_comp_ac", "(", "gen_char_facts", ",", "gen_comp_ids", ")", "\n", "stats", ".", "ac_gen_acc_s", ".", "update", "(", "gen_acc_s", ",", "len", "(", "gen_style_ids", ")", ")", "\n", "stats", ".", "ac_gen_acc_c", ".", "update", "(", "gen_acc_c", ",", "sum", "(", "[", "*", "map", "(", "len", ",", "gen_comp_ids", ")", "]", ")", ")", "\n", "\n", "self", ".", "frozen_ac_losses", "[", "'ac_gen_s'", "]", "=", "gen_ac_loss_s", "*", "self", ".", "cfg", "[", "'ac_gen_w'", "]", "\n", "self", ".", "frozen_ac_losses", "[", "'ac_gen_c'", "]", "=", "gen_ac_loss_c", "*", "self", ".", "cfg", "[", "'ac_gen_w'", "]", "\n", "self", ".", "frozen_ac_losses", "[", "'cross_ac_gen_s'", "]", "=", "gen_cross_ac_loss_s", "*", "self", ".", "cfg", "[", "'ac_gen_w'", "]", "*", "self", ".", "cfg", "[", "\"ac_cross_w\"", "]", "\n", "self", ".", "frozen_ac_losses", "[", "'cross_ac_gen_c'", "]", "=", "gen_cross_ac_loss_c", "*", "self", ".", "cfg", "[", "'ac_gen_w'", "]", "*", "self", ".", "cfg", "[", "\"ac_cross_w\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.plot": [[304, 349], ["fact_trainer.FactTrainer.writer.add_scalars", "tag_scalar_dic.update", "tag_scalar_dic.update", "tag_scalar_dic.update"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.TBWriter.add_scalars", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.utils.AverageMeter.update"], ["", "def", "plot", "(", "self", ",", "losses", ",", "discs", ",", "stats", ")", ":", "\n", "        ", "tag_scalar_dic", "=", "{", "\n", "'train/g_total_loss'", ":", "losses", ".", "g_total", ".", "val", ",", "\n", "'train/pixel_loss'", ":", "losses", ".", "pixel", ".", "val", ",", "\n", "'train/indp_exp_loss'", ":", "losses", ".", "indp_exp", ".", "val", ",", "\n", "'train/indp_fact_loss'", ":", "losses", ".", "indp_fact", ".", "val", ",", "\n", "}", "\n", "\n", "if", "self", ".", "disc", "is", "not", "None", ":", "\n", "            ", "tag_scalar_dic", ".", "update", "(", "{", "\n", "'train/d_real_font'", ":", "discs", ".", "real_font", ".", "val", ",", "\n", "'train/d_real_uni'", ":", "discs", ".", "real_uni", ".", "val", ",", "\n", "'train/d_fake_font'", ":", "discs", ".", "fake_font", ".", "val", ",", "\n", "'train/d_fake_uni'", ":", "discs", ".", "fake_uni", ".", "val", ",", "\n", "\n", "'train/d_real_font_acc'", ":", "discs", ".", "real_font_acc", ".", "val", ",", "\n", "'train/d_real_uni_acc'", ":", "discs", ".", "real_uni_acc", ".", "val", ",", "\n", "'train/d_fake_font_acc'", ":", "discs", ".", "fake_font_acc", ".", "val", ",", "\n", "'train/d_fake_uni_acc'", ":", "discs", ".", "fake_uni_acc", ".", "val", "\n", "}", ")", "\n", "\n", "if", "self", ".", "cfg", "[", "'fm_w'", "]", ">", "0.", ":", "\n", "                ", "tag_scalar_dic", "[", "'train/feature_matching'", "]", "=", "losses", ".", "fm", ".", "val", "\n", "\n", "", "", "if", "self", ".", "aux_clf", "is", "not", "None", ":", "\n", "            ", "tag_scalar_dic", ".", "update", "(", "{", "\n", "'train/ac_loss_s'", ":", "losses", ".", "ac_s", ".", "val", ",", "\n", "'train/ac_loss_c'", ":", "losses", ".", "ac_c", ".", "val", ",", "\n", "'train/cross_ac_loss_s'", ":", "losses", ".", "cross_ac_s", ".", "val", ",", "\n", "'train/cross_ac_loss_c'", ":", "losses", ".", "cross_ac_c", ".", "val", ",", "\n", "'train/ac_acc_s'", ":", "stats", ".", "ac_acc_s", ".", "val", ",", "\n", "'train/ac_acc_c'", ":", "stats", ".", "ac_acc_c", ".", "val", "\n", "}", ")", "\n", "\n", "if", "self", ".", "cfg", "[", "'ac_gen_w'", "]", ">", "0.", ":", "\n", "                ", "tag_scalar_dic", ".", "update", "(", "{", "\n", "'train/ac_gen_loss_s'", ":", "losses", ".", "ac_gen_s", ".", "val", ",", "\n", "'train/ac_gen_loss_c'", ":", "losses", ".", "ac_gen_c", ".", "val", ",", "\n", "'train/cross_ac_gen_loss_s'", ":", "losses", ".", "cross_ac_gen_s", ".", "val", ",", "\n", "'train/cross_ac_gen_loss_c'", ":", "losses", ".", "cross_ac_gen_c", ".", "val", ",", "\n", "'train/ac_gen_acc_s'", ":", "stats", ".", "ac_gen_acc_s", ".", "val", ",", "\n", "'train/ac_gen_acc_c'", ":", "stats", ".", "ac_gen_acc_c", ".", "val", "\n", "}", ")", "\n", "\n", "", "", "self", ".", "writer", ".", "add_scalars", "(", "tag_scalar_dic", ",", "self", ".", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.log": [[350, 353], ["fact_trainer.FactTrainer.logger.info"], "methods", ["None"], ["", "def", "log", "(", "self", ",", "L", ",", "D", ",", "S", ")", ":", "\n", "        ", "self", ".", "logger", ".", "info", "(", "\n", "f\"Step {self.step:7d}\\n\"", "\n", "f\"{'|D':<12} {L.disc.avg:7.3f} {'|G':<12} {L.gen.avg:7.3f} {'|FM':<12} {L.fm.avg:7.3f} {'|R_font':<12} {D.real_font_acc.avg:7.3f} {'|F_font':<12} {D.fake_font_acc.avg:7.3f} {'|R_uni':<12} {D.real_uni_acc.avg:7.3f} {'|F_uni':<12} {D.fake_uni_acc.avg:7.3f}\\n\"", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.__init__": [[24, 27], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "writer", ")", ":", "\n", "        ", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "self", ".", "writer", "=", "writer", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.comparable_val_saveimg": [[28, 35], ["evaluator.Evaluator.infer_fact_loader", "utils.make_comparable_grid", "evaluator.Evaluator.writer.add_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.infer_fact_loader", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.visualize.make_comparable_grid", "home.repos.pwc.inspect_result.clovaai_mxfont.utils.writer.TBDiskWriter.add_image"], ["", "@", "torch_eval", "\n", "def", "comparable_val_saveimg", "(", "self", ",", "gen", ",", "loader", ",", "step", ",", "n_row", ",", "tag", "=", "'val'", ")", ":", "\n", "        ", "compare_batches", "=", "self", ".", "infer_fact_loader", "(", "gen", ",", "loader", ")", "\n", "comparable_grid", "=", "utils", ".", "make_comparable_grid", "(", "*", "compare_batches", "[", ":", ":", "-", "1", "]", ",", "nrow", "=", "n_row", ")", "\n", "saved_path", "=", "self", ".", "writer", ".", "add_image", "(", "tag", ",", "comparable_grid", ",", "global_step", "=", "step", ")", "\n", "\n", "return", "comparable_grid", ",", "saved_path", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.Evaluator.infer_fact_loader": [[36, 57], ["torch.cat().float", "batch[].cuda", "batch[].unsqueeze().cuda", "gen.gen_from_style_char", "torch.cat().float.append", "torch.cat", "gen.gen_from_style_char.detach().cpu", "torch.cat.append", "torch.cat", "batch[].unsqueeze", "gen.gen_from_style_char.detach"], "methods", ["home.repos.pwc.inspect_result.clovaai_mxfont.models.generator.Generator.gen_from_style_char"], ["", "@", "torch_eval", "\n", "def", "infer_fact_loader", "(", "self", ",", "gen", ",", "loader", ",", "save_dir", "=", "None", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "trgs", "=", "[", "]", "\n", "\n", "for", "batch", "in", "loader", ":", "\n", "            ", "style_imgs", "=", "batch", "[", "\"style_imgs\"", "]", ".", "cuda", "(", ")", "\n", "char_imgs", "=", "batch", "[", "\"source_imgs\"", "]", ".", "unsqueeze", "(", "1", ")", ".", "cuda", "(", ")", "\n", "\n", "out", "=", "gen", ".", "gen_from_style_char", "(", "style_imgs", ",", "char_imgs", ")", "\n", "outs", ".", "append", "(", "out", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "if", "\"trg_imgs\"", "in", "batch", ":", "\n", "                ", "trgs", ".", "append", "(", "batch", "[", "\"trg_imgs\"", "]", ")", "\n", "\n", "", "", "outs", "=", "torch", ".", "cat", "(", "outs", ")", ".", "float", "(", ")", "\n", "ret", "=", "(", "outs", ",", ")", "\n", "if", "trgs", ":", "\n", "            ", "trgs", "=", "torch", ".", "cat", "(", "trgs", ")", "\n", "ret", "+=", "(", "trgs", ",", ")", "\n", "\n", "", "return", "ret", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_mxfont.trainer.evaluator.torch_eval": [[11, 21], ["torch.no_grad", "gen.eval", "val_fn", "gen.train"], "function", ["home.repos.pwc.inspect_result.clovaai_mxfont.trainer.fact_trainer.FactTrainer.train"], ["def", "torch_eval", "(", "val_fn", ")", ":", "\n", "    ", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "decorated", "(", "self", ",", "gen", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "gen", ".", "eval", "(", ")", "\n", "ret", "=", "val_fn", "(", "self", ",", "gen", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "gen", ".", "train", "(", ")", "\n", "\n", "return", "ret", "\n", "\n", "", "return", "decorated", "\n", "\n"]]}