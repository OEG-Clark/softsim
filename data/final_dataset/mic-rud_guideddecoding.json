{"home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.main.get_args": [[7, 97], ["os.path.dirname", "argparse.ArgumentParser", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "os.path.join"], "function", ["None"], ["def", "get_args", "(", ")", ":", "\n", "    ", "file_dir", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "#Directory of this path", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'UpSampling for Monocular Depth Estimation'", ")", "\n", "\n", "#Mode", "\n", "parser", ".", "set_defaults", "(", "train", "=", "False", ")", "\n", "parser", ".", "set_defaults", "(", "evaluate", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--train'", ",", "\n", "dest", "=", "'train'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval'", ",", "\n", "dest", "=", "'evaluate'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "#Data", "\n", "parser", ".", "add_argument", "(", "'--data_path'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'path to train data'", ",", "\n", "default", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "'kitti_comb'", ")", ")", "\n", "parser", ".", "add_argument", "(", "'--test_path'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'path to test data'", ",", "\n", "default", "=", "os", ".", "path", ".", "join", "(", "file_dir", ",", "'kitti_comb'", ")", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'dataset for training'", ",", "\n", "choices", "=", "[", "'kitti'", ",", "'nyu'", ",", "'nyu_reduced'", "]", ",", "\n", "default", "=", "'kitti'", ")", "\n", "parser", ".", "add_argument", "(", "'--resolution'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Resolution of the images for training'", ",", "\n", "choices", "=", "[", "'full'", ",", "'half'", ",", "'mini'", ",", "'tu_small'", ",", "'tu_big'", "]", ",", "\n", "default", "=", "'half'", ")", "\n", "parser", ".", "add_argument", "(", "'--eval_mode'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Eval mode'", ",", "\n", "choices", "=", "[", "'alhashim'", ",", "'tu'", "]", ",", "\n", "default", "=", "'alhashim'", ")", "\n", "\n", "\n", "#Model", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'name of the model to be trained'", ",", "\n", "default", "=", "'UpDepth'", ")", "\n", "parser", ".", "add_argument", "(", "'--weights_path'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'path to model weights'", ")", "\n", "\n", "#Checkpoint", "\n", "parser", ".", "add_argument", "(", "'--load_checkpoint'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'path to checkpoint'", ",", "\n", "default", "=", "''", ")", "\n", "parser", ".", "add_argument", "(", "'--save_checkpoint'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'path to save checkpoints to'", ",", "\n", "default", "=", "'./checkpoints'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_results'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'path to save results to'", ",", "\n", "default", "=", "'./results'", ")", "\n", "\n", "#Optimization", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'batch size'", ",", "\n", "default", "=", "8", ")", "\n", "parser", ".", "add_argument", "(", "'--learning_rate'", ",", "\n", "type", "=", "float", ",", "\n", "help", "=", "'learning rate'", ",", "\n", "default", "=", "1e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--num_epochs'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'number of epochs'", ",", "\n", "default", "=", "20", ")", "\n", "parser", ".", "add_argument", "(", "'--scheduler_step_size'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'step size of the scheduler'", ",", "\n", "default", "=", "15", ")", "\n", "\n", "#System", "\n", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'number of dataloader workers'", ",", "\n", "default", "=", "2", ")", "\n", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.main.main": [[99, 111], ["main.get_args", "print", "training.Trainer", "training.Trainer.train", "os.path.join", "evaluate.Evaluater", "evaluate.Evaluater.evaluate"], "function", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.get_args", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.train", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.Result.evaluate"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "get_args", "(", ")", "\n", "print", "(", "args", ")", "\n", "\n", "if", "args", ".", "train", ":", "\n", "        ", "model_trainer", "=", "Trainer", "(", "args", ")", "\n", "model_trainer", ".", "train", "(", ")", "\n", "args", ".", "weights_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_results", ",", "'best_model.pth'", ")", "\n", "\n", "", "if", "args", ".", "evaluate", ":", "\n", "        ", "evaluation_module", "=", "Evaluater", "(", "args", ")", "\n", "evaluation_module", ".", "evaluate", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.evaluate.Evaluater.__init__": [[38, 80], ["print", "print", "torch.device", "model.loader.load_model", "evaluate.Evaluater.model.to", "data.datasets.get_dataloader", "torchvision.transforms.Resize", "data.transforms.ToTensor", "os.path.isdir", "os.mkdir", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.loader.load_model", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.datasets.get_dataloader"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "debug", "=", "True", "\n", "self", ".", "dataset", "=", "args", ".", "dataset", "\n", "\n", "self", ".", "maxDepth", "=", "max_depths", "[", "args", ".", "dataset", "]", "\n", "self", ".", "res_dict", "=", "resolutions", "[", "args", ".", "dataset", "]", "\n", "self", ".", "resolution", "=", "self", ".", "res_dict", "[", "args", ".", "resolution", "]", "\n", "print", "(", "'Resolution for Eval: {}'", ".", "format", "(", "self", ".", "resolution", ")", ")", "\n", "self", ".", "resolution_keyword", "=", "args", ".", "resolution", "\n", "print", "(", "'Maximum Depth of Dataset: {}'", ".", "format", "(", "self", ".", "maxDepth", ")", ")", "\n", "self", ".", "crop", "=", "crops", "[", "args", ".", "dataset", "]", "\n", "self", ".", "eval_mode", "=", "args", ".", "eval_mode", "\n", "\n", "self", ".", "result_dir", "=", "args", ".", "save_results", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "result_dir", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "self", ".", "result_dir", ")", "\n", "\n", "", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda:0'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "\n", "self", ".", "model", "=", "loader", ".", "load_model", "(", "args", ".", "model", ",", "args", ".", "weights_path", ")", "\n", "self", ".", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "test_loader", "=", "datasets", ".", "get_dataloader", "(", "args", ".", "dataset", ",", "\n", "path", "=", "args", ".", "test_path", ",", "\n", "split", "=", "'test'", ",", "\n", "batch_size", "=", "1", ",", "\n", "augmentation", "=", "args", ".", "eval_mode", ",", "\n", "resolution", "=", "args", ".", "resolution", ",", "\n", "workers", "=", "args", ".", "num_workers", ")", "\n", "\n", "self", ".", "downscale_image", "=", "torchvision", ".", "transforms", ".", "Resize", "(", "self", ".", "resolution", ")", "#To Model resolution", "\n", "\n", "self", ".", "to_tensor", "=", "transforms", ".", "ToTensor", "(", "test", "=", "True", ",", "maxDepth", "=", "self", ".", "maxDepth", ")", "\n", "\n", "\n", "self", ".", "visualize_images", "=", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "\n", "100", ",", "101", ",", "102", ",", "103", ",", "104", ",", "105", ",", "\n", "200", ",", "201", ",", "202", ",", "203", ",", "204", ",", "205", ",", "\n", "300", ",", "301", ",", "302", ",", "303", ",", "304", ",", "305", ",", "\n", "400", ",", "401", ",", "402", ",", "403", ",", "404", ",", "405", ",", "\n", "500", ",", "501", ",", "502", ",", "503", ",", "504", ",", "505", ",", "\n", "600", ",", "601", ",", "602", ",", "603", ",", "604", ",", "605", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.evaluate.Evaluater.evaluate": [[81, 158], ["evaluate.Evaluater.model.eval", "metrics.AverageMeter", "enumerate", "metrics.AverageMeter.average", "time.strftime", "evaluate.Evaluater.save_results", "print", "time.time", "evaluate.Evaluater.to_tensor", "evaluate.Evaluater.unpack_and_move", "evaluate.Evaluater.unsqueeze", "gt.unsqueeze.unsqueeze.unsqueeze", "torch.flip", "torch.flip", "time.time", "evaluate.Evaluater.model", "evaluate.Evaluater.inverse_depth_norm", "evaluate.Evaluater.model", "evaluate.Evaluater.inverse_depth_norm", "metrics.Result", "metrics.Result.evaluate", "metrics.AverageMeter.update", "metrics.Result", "metrics.Result.evaluate", "metrics.AverageMeter.update", "time.localtime", "evaluate.Evaluater.downscale_image", "evaluate.Evaluater.downscale_image", "time.time", "time.time", "torchvision.transforms.Resize", "torchvision.transforms.Resize.", "torchvision.transforms.Resize.", "evaluate.Evaluater.size", "evaluate.Evaluater.size", "numpy.array().astype", "evaluate.Evaluater.save_image_results", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.average", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.save_results", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.unpack_and_move", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.inverse_depth_norm", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.inverse_depth_norm", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.Result.evaluate", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.Result.evaluate", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.save_image_results"], ["", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "average_meter", "=", "AverageMeter", "(", ")", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "self", ".", "test_loader", ")", ":", "\n", "            ", "t0", "=", "time", ".", "time", "(", ")", "\n", "image", ",", "gt", "=", "data", "\n", "packed_data", "=", "{", "'image'", ":", "image", "[", "0", "]", ",", "'depth'", ":", "gt", "[", "0", "]", "}", "\n", "data", "=", "self", ".", "to_tensor", "(", "packed_data", ")", "\n", "image", ",", "gt", "=", "self", ".", "unpack_and_move", "(", "data", ")", "\n", "image", "=", "image", ".", "unsqueeze", "(", "0", ")", "\n", "gt", "=", "gt", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "image_flip", "=", "torch", ".", "flip", "(", "image", ",", "[", "3", "]", ")", "\n", "gt_flip", "=", "torch", ".", "flip", "(", "gt", ",", "[", "3", "]", ")", "\n", "if", "self", ".", "eval_mode", "==", "'alhashim'", ":", "\n", "# For model input", "\n", "                ", "image", "=", "self", ".", "downscale_image", "(", "image", ")", "\n", "image_flip", "=", "self", ".", "downscale_image", "(", "image_flip", ")", "\n", "\n", "", "data_time", "=", "time", ".", "time", "(", ")", "-", "t0", "\n", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "inv_prediction", "=", "self", ".", "model", "(", "image", ")", "\n", "prediction", "=", "self", ".", "inverse_depth_norm", "(", "inv_prediction", ")", "\n", "\n", "inv_prediction_flip", "=", "self", ".", "model", "(", "image_flip", ")", "\n", "prediction_flip", "=", "self", ".", "inverse_depth_norm", "(", "inv_prediction_flip", ")", "\n", "\n", "gpu_time", "=", "time", ".", "time", "(", ")", "-", "t0", "\n", "\n", "if", "self", ".", "eval_mode", "==", "'alhashim'", ":", "\n", "                ", "upscale_depth", "=", "torchvision", ".", "transforms", ".", "Resize", "(", "gt", ".", "shape", "[", "-", "2", ":", "]", ")", "#To GT res", "\n", "\n", "prediction", "=", "upscale_depth", "(", "prediction", ")", "\n", "prediction_flip", "=", "upscale_depth", "(", "prediction_flip", ")", "\n", "\n", "if", "self", ".", "dataset", "==", "'kitti'", ":", "\n", "\n", "\n", "                    ", "gt_height", ",", "gt_width", "=", "gt", ".", "shape", "[", "-", "2", ":", "]", "\n", "\n", "self", ".", "crop", "=", "np", ".", "array", "(", "[", "0.3324324", "*", "gt_height", ",", "0.91351351", "*", "gt_height", ",", "\n", "0.0359477", "*", "gt_width", ",", "0.96405229", "*", "gt_width", "]", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "", "if", "i", "in", "self", ".", "visualize_images", ":", "\n", "                    ", "self", ".", "save_image_results", "(", "image", ",", "gt", ",", "prediction", ",", "i", ")", "\n", "\n", "", "gt", "=", "gt", "[", ":", ",", ":", ",", "self", ".", "crop", "[", "0", "]", ":", "self", ".", "crop", "[", "1", "]", ",", "self", ".", "crop", "[", "2", "]", ":", "self", ".", "crop", "[", "3", "]", "]", "\n", "gt_flip", "=", "gt_flip", "[", ":", ",", ":", ",", "self", ".", "crop", "[", "0", "]", ":", "self", ".", "crop", "[", "1", "]", ",", "self", ".", "crop", "[", "2", "]", ":", "self", ".", "crop", "[", "3", "]", "]", "\n", "prediction", "=", "prediction", "[", ":", ",", ":", ",", "self", ".", "crop", "[", "0", "]", ":", "self", ".", "crop", "[", "1", "]", ",", "self", ".", "crop", "[", "2", "]", ":", "self", ".", "crop", "[", "3", "]", "]", "\n", "prediction_flip", "=", "prediction_flip", "[", ":", ",", ":", ",", "self", ".", "crop", "[", "0", "]", ":", "self", ".", "crop", "[", "1", "]", ",", "self", ".", "crop", "[", "2", "]", ":", "self", ".", "crop", "[", "3", "]", "]", "\n", "\n", "\n", "\n", "", "result", "=", "Result", "(", ")", "\n", "result", ".", "evaluate", "(", "prediction", ".", "data", ",", "gt", ".", "data", ")", "\n", "average_meter", ".", "update", "(", "result", ",", "gpu_time", ",", "data_time", ",", "image", ".", "size", "(", "0", ")", ")", "\n", "\n", "result_flip", "=", "Result", "(", ")", "\n", "result_flip", ".", "evaluate", "(", "prediction_flip", ".", "data", ",", "gt_flip", ".", "data", ")", "\n", "average_meter", ".", "update", "(", "result_flip", ",", "gpu_time", ",", "data_time", ",", "image", ".", "size", "(", "0", ")", ")", "\n", "\n", "#Report ", "\n", "", "avg", "=", "average_meter", ".", "average", "(", ")", "\n", "current_time", "=", "time", ".", "strftime", "(", "'%H:%M'", ",", "time", ".", "localtime", "(", ")", ")", "\n", "self", ".", "save_results", "(", "avg", ")", "\n", "print", "(", "'\\n*\\n'", "\n", "'RMSE={average.rmse:.3f}\\n'", "\n", "'MAE={average.mae:.3f}\\n'", "\n", "'Delta1={average.delta1:.3f}\\n'", "\n", "'Delta2={average.delta2:.3f}\\n'", "\n", "'Delta3={average.delta3:.3f}\\n'", "\n", "'REL={average.absrel:.3f}\\n'", "\n", "'Lg10={average.lg10:.3f}\\n'", "\n", "'t_GPU={time:.3f}\\n'", ".", "format", "(", "\n", "average", "=", "avg", ",", "time", "=", "avg", ".", "gpu_time", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.evaluate.Evaluater.save_results": [[159, 172], ["os.path.join", "open", "f.write", "f.write"], "methods", ["None"], ["", "def", "save_results", "(", "self", ",", "average", ")", ":", "\n", "        ", "results_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'results.txt'", ")", "\n", "with", "open", "(", "results_file", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "'RMSE,MAE,REL, RMSE_log,Lg10,Delta1,Delta2,Delta3\\n'", ")", "\n", "f", ".", "write", "(", "'{average.rmse:.3f}'", "\n", "',{average.mae:.3f}'", "\n", "',{average.absrel:.3f}'", "\n", "',{average.rmse_log:.3f}'", "\n", "',{average.lg10:.3f}'", "\n", "',{average.delta1:.3f}'", "\n", "',{average.delta2:.3f}'", "\n", "',{average.delta3:.3f}'", ".", "format", "(", "\n", "average", "=", "average", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.evaluate.Evaluater.inverse_depth_norm": [[174, 178], ["torch.clamp"], "methods", ["None"], ["", "", "def", "inverse_depth_norm", "(", "self", ",", "depth", ")", ":", "\n", "        ", "depth", "=", "self", ".", "maxDepth", "/", "depth", "\n", "depth", "=", "torch", ".", "clamp", "(", "depth", ",", "self", ".", "maxDepth", "/", "100", ",", "self", ".", "maxDepth", ")", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.evaluate.Evaluater.depth_norm": [[180, 184], ["torch.clamp"], "methods", ["None"], ["", "def", "depth_norm", "(", "self", ",", "depth", ")", ":", "\n", "        ", "depth", "=", "torch", ".", "clamp", "(", "depth", ",", "self", ".", "maxDepth", "/", "100", ",", "self", ".", "maxDepth", ")", "\n", "depth", "=", "self", ".", "maxDepth", "/", "depth", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.evaluate.Evaluater.unpack_and_move": [[186, 197], ["isinstance", "isinstance", "print", "data[].to", "data[].to", "data.keys", "data[].to", "data[].to"], "methods", ["None"], ["", "def", "unpack_and_move", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "isinstance", "(", "data", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "            ", "image", "=", "data", "[", "0", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "gt", "=", "data", "[", "1", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "return", "image", ",", "gt", "\n", "", "if", "isinstance", "(", "data", ",", "dict", ")", ":", "\n", "            ", "keys", "=", "data", ".", "keys", "(", ")", "\n", "image", "=", "data", "[", "'image'", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "gt", "=", "data", "[", "'depth'", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "return", "image", ",", "gt", "\n", "", "print", "(", "'Type not supported'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.evaluate.Evaluater.save_image_results": [[198, 246], ["image[].permute().cpu", "gt[].permute().cpu", "prediction[].permute().detach().cpu", "torch.max", "torch.min", "os.path.join", "matplotlib.figure", "matplotlib.Axes", "matplotlib.Axes.set_axis_off", "matplotlib.figure.add_axes", "matplotlib.Axes.imshow", "matplotlib.figure.savefig", "matplotlib.clf", "os.path.join", "matplotlib.figure", "matplotlib.Axes", "matplotlib.Axes.set_axis_off", "matplotlib.figure.add_axes", "matplotlib.Axes.imshow", "matplotlib.figure.colorbar", "matplotlib.figure.savefig", "matplotlib.clf", "os.path.join", "matplotlib.figure", "matplotlib.Axes", "matplotlib.Axes.set_axis_off", "matplotlib.figure.add_axes", "matplotlib.Axes.imshow", "matplotlib.figure.savefig", "matplotlib.clf", "os.path.join", "matplotlib.figure", "matplotlib.Axes", "matplotlib.Axes.set_axis_off", "matplotlib.figure.add_axes", "matplotlib.Axes.imshow", "matplotlib.figure.savefig", "matplotlib.clf", "image[].permute", "gt[].permute", "prediction[].permute().detach", "prediction[].permute"], "methods", ["None"], ["", "def", "save_image_results", "(", "self", ",", "image", ",", "gt", ",", "prediction", ",", "image_id", ")", ":", "\n", "        ", "img", "=", "image", "[", "0", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", "\n", "gt", "=", "gt", "[", "0", ",", "0", "]", ".", "permute", "(", "0", ",", "1", ")", ".", "cpu", "(", ")", "\n", "prediction", "=", "prediction", "[", "0", ",", "0", "]", ".", "permute", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "error_map", "=", "gt", "-", "prediction", "\n", "vmax_error", "=", "self", ".", "maxDepth", "/", "10.0", "\n", "vmin_error", "=", "0.0", "\n", "cmap", "=", "'viridis'", "\n", "\n", "vmax", "=", "torch", ".", "max", "(", "gt", "[", "gt", "!=", "0.0", "]", ")", "\n", "vmin", "=", "torch", ".", "min", "(", "gt", "[", "gt", "!=", "0.0", "]", ")", "\n", "\n", "save_to_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'image_{}.png'", ".", "format", "(", "image_id", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "frameon", "=", "False", ")", "\n", "ax", "=", "plt", ".", "Axes", "(", "fig", ",", "[", "0.", ",", "0.", ",", "1.", ",", "1.", "]", ")", "\n", "ax", ".", "set_axis_off", "(", ")", "\n", "fig", ".", "add_axes", "(", "ax", ")", "\n", "ax", ".", "imshow", "(", "img", ")", "\n", "fig", ".", "savefig", "(", "save_to_dir", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n", "save_to_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'errors_{}.png'", ".", "format", "(", "image_id", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "frameon", "=", "False", ")", "\n", "ax", "=", "plt", ".", "Axes", "(", "fig", ",", "[", "0.", ",", "0.", ",", "1.", ",", "1.", "]", ")", "\n", "ax", ".", "set_axis_off", "(", ")", "\n", "fig", ".", "add_axes", "(", "ax", ")", "\n", "errors", "=", "ax", ".", "imshow", "(", "error_map", ",", "vmin", "=", "vmin_error", ",", "vmax", "=", "vmax_error", ",", "cmap", "=", "'Reds'", ")", "\n", "fig", ".", "colorbar", "(", "errors", ",", "ax", "=", "ax", ",", "shrink", "=", "0.8", ")", "\n", "fig", ".", "savefig", "(", "save_to_dir", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n", "save_to_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'gt_{}.png'", ".", "format", "(", "image_id", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "frameon", "=", "False", ")", "\n", "ax", "=", "plt", ".", "Axes", "(", "fig", ",", "[", "0.", ",", "0.", ",", "1.", ",", "1.", "]", ")", "\n", "ax", ".", "set_axis_off", "(", ")", "\n", "fig", ".", "add_axes", "(", "ax", ")", "\n", "ax", ".", "imshow", "(", "gt", ",", "vmin", "=", "vmin", ",", "vmax", "=", "vmax", ",", "cmap", "=", "cmap", ")", "\n", "fig", ".", "savefig", "(", "save_to_dir", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n", "save_to_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'depth_{}.png'", ".", "format", "(", "image_id", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "frameon", "=", "False", ")", "\n", "ax", "=", "plt", ".", "Axes", "(", "fig", ",", "[", "0.", ",", "0.", ",", "1.", ",", "1.", "]", ")", "\n", "ax", ".", "set_axis_off", "(", ")", "\n", "fig", ".", "add_axes", "(", "ax", ")", "\n", "ax", ".", "imshow", "(", "prediction", ",", "vmin", "=", "vmin", ",", "vmax", "=", "vmax", ",", "cmap", "=", "cmap", ")", "\n", "fig", ".", "savefig", "(", "save_to_dir", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.Result.__init__": [[17, 24], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "irmse", ",", "self", ".", "imae", "=", "0", ",", "0", "\n", "self", ".", "mse", ",", "self", ".", "rmse", ",", "self", ".", "mae", "=", "0", ",", "0", ",", "0", "\n", "self", ".", "absrel", ",", "self", ".", "lg10", "=", "0", ",", "0", "\n", "self", ".", "delta1", ",", "self", ".", "delta2", ",", "self", ".", "delta3", "=", "0", ",", "0", ",", "0", "\n", "self", ".", "data_time", ",", "self", ".", "gpu_time", "=", "0", ",", "0", "\n", "self", ".", "rmse_log", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.Result.set_to_worst": [[25, 32], ["None"], "methods", ["None"], ["", "def", "set_to_worst", "(", "self", ")", ":", "\n", "        ", "self", ".", "irmse", ",", "self", ".", "imae", "=", "np", ".", "inf", ",", "np", ".", "inf", "\n", "self", ".", "mse", ",", "self", ".", "rmse", ",", "self", ".", "mae", "=", "np", ".", "inf", ",", "np", ".", "inf", ",", "np", ".", "inf", "\n", "self", ".", "rmse_log", "=", "np", ".", "inf", "\n", "self", ".", "absrel", ",", "self", ".", "lg10", "=", "np", ".", "inf", ",", "np", ".", "inf", "\n", "self", ".", "delta1", ",", "self", ".", "delta2", ",", "self", ".", "delta3", "=", "0", ",", "0", ",", "0", "\n", "self", ".", "data_time", ",", "self", ".", "gpu_time", "=", "0", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.Result.update": [[33, 40], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "irmse", ",", "imae", ",", "mse", ",", "rmse", ",", "rmse_log", ",", "mae", ",", "absrel", ",", "lg10", ",", "delta1", ",", "delta2", ",", "delta3", ",", "gpu_time", ",", "data_time", ")", ":", "\n", "        ", "self", ".", "irmse", ",", "self", ".", "imae", "=", "irmse", ",", "imae", "\n", "self", ".", "mse", ",", "self", ".", "rmse", ",", "self", ".", "mae", "=", "mse", ",", "rmse", ",", "mae", "\n", "self", ".", "rmse_log", "=", "rmse_log", "\n", "self", ".", "absrel", ",", "self", ".", "lg10", "=", "absrel", ",", "lg10", "\n", "self", ".", "delta1", ",", "self", ".", "delta2", ",", "self", ".", "delta3", "=", "delta1", ",", "delta2", ",", "delta3", "\n", "self", ".", "data_time", ",", "self", ".", "gpu_time", "=", "data_time", ",", "gpu_time", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.Result.evaluate": [[41, 63], ["float", "math.sqrt", "float", "float", "math.sqrt", "float", "torch.max", "float", "float", "float", "math.sqrt", "float", "torch.pow().mean", "abs_diff.mean", "torch.pow().mean", "torch.pow().mean", "abs_inv_diff.mean", "torch.pow", "torch.pow", "torch.pow", "metrics.log10", "metrics.log10", "metrics.log10", "metrics.log10"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.log10", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.log10", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.log10", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.log10"], ["", "def", "evaluate", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "abs_diff", "=", "(", "output", "-", "target", ")", ".", "abs", "(", ")", "\n", "\n", "self", ".", "mse", "=", "float", "(", "(", "torch", ".", "pow", "(", "abs_diff", ",", "2", ")", ")", ".", "mean", "(", ")", ")", "\n", "self", ".", "rmse", "=", "math", ".", "sqrt", "(", "self", ".", "mse", ")", "\n", "self", ".", "mae", "=", "float", "(", "abs_diff", ".", "mean", "(", ")", ")", "\n", "self", ".", "lg10", "=", "float", "(", "(", "log10", "(", "output", ")", "-", "log10", "(", "target", ")", ")", ".", "abs", "(", ")", ".", "mean", "(", ")", ")", "\n", "self", ".", "rmse_log", "=", "math", ".", "sqrt", "(", "torch", ".", "pow", "(", "log10", "(", "output", ")", "-", "log10", "(", "target", ")", ",", "2", ")", ".", "mean", "(", ")", ")", "\n", "self", ".", "absrel", "=", "float", "(", "(", "abs_diff", "/", "target", ")", ".", "mean", "(", ")", ")", "\n", "\n", "maxRatio", "=", "torch", ".", "max", "(", "output", "/", "target", ",", "target", "/", "output", ")", "\n", "self", ".", "delta1", "=", "float", "(", "(", "maxRatio", "<", "1.25", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "self", ".", "delta2", "=", "float", "(", "(", "maxRatio", "<", "1.25", "**", "2", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "self", ".", "delta3", "=", "float", "(", "(", "maxRatio", "<", "1.25", "**", "3", ")", ".", "float", "(", ")", ".", "mean", "(", ")", ")", "\n", "self", ".", "data_time", "=", "0", "\n", "self", ".", "gpu_time", "=", "0", "\n", "\n", "inv_output", "=", "1", "/", "output", "\n", "inv_target", "=", "1", "/", "target", "\n", "abs_inv_diff", "=", "(", "inv_output", "-", "inv_target", ")", ".", "abs", "(", ")", "\n", "self", ".", "irmse", "=", "math", ".", "sqrt", "(", "(", "torch", ".", "pow", "(", "abs_inv_diff", ",", "2", ")", ")", ".", "mean", "(", ")", ")", "\n", "self", ".", "imae", "=", "float", "(", "abs_inv_diff", ".", "mean", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.__init__": [[66, 68], ["metrics.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.reset": [[69, 78], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "count", "=", "0.0", "\n", "\n", "self", ".", "sum_irmse", ",", "self", ".", "sum_imae", "=", "0", ",", "0", "\n", "self", ".", "sum_mse", ",", "self", ".", "sum_rmse", ",", "self", ".", "sum_mae", "=", "0", ",", "0", ",", "0", "\n", "self", ".", "sum_rmse_log", "\n", "self", ".", "sum_absrel", ",", "self", ".", "sum_lg10", "=", "0", ",", "0", "\n", "self", ".", "sum_delta1", ",", "self", ".", "sum_delta2", ",", "self", ".", "sum_delta3", "=", "0", ",", "0", ",", "0", "\n", "self", ".", "sum_data_time", ",", "self", ".", "sum_gpu_time", "=", "0", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.update": [[79, 95], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "result", ",", "gpu_time", ",", "data_time", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "count", "+=", "n", "\n", "\n", "self", ".", "sum_irmse", "+=", "n", "*", "result", ".", "irmse", "\n", "self", ".", "sum_imae", "+=", "n", "*", "result", ".", "imae", "\n", "self", ".", "sum_mse", "+=", "n", "*", "result", ".", "mse", "\n", "self", ".", "sum_rmse", "+=", "n", "*", "result", ".", "rmse", "\n", "self", ".", "sum_rmse_log", "+=", "n", "*", "result", ".", "rmse_log", "\n", "self", ".", "sum_mae", "+=", "n", "*", "result", ".", "mae", "\n", "self", ".", "sum_absrel", "+=", "n", "*", "result", ".", "absrel", "\n", "self", ".", "sum_lg10", "+=", "n", "*", "result", ".", "lg10", "\n", "self", ".", "sum_delta1", "+=", "n", "*", "result", ".", "delta1", "\n", "self", ".", "sum_delta2", "+=", "n", "*", "result", ".", "delta2", "\n", "self", ".", "sum_delta3", "+=", "n", "*", "result", ".", "delta3", "\n", "self", ".", "sum_data_time", "+=", "n", "*", "data_time", "\n", "self", ".", "sum_gpu_time", "+=", "n", "*", "gpu_time", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.average": [[96, 105], ["metrics.Result", "metrics.Result.update"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.update"], ["", "def", "average", "(", "self", ")", ":", "\n", "        ", "avg", "=", "Result", "(", ")", "\n", "avg", ".", "update", "(", "\n", "self", ".", "sum_irmse", "/", "self", ".", "count", ",", "self", ".", "sum_imae", "/", "self", ".", "count", ",", "\n", "self", ".", "sum_mse", "/", "self", ".", "count", ",", "self", ".", "sum_rmse", "/", "self", ".", "count", ",", "self", ".", "sum_mae", "/", "self", ".", "count", ",", "\n", "self", ".", "sum_rmse_log", "/", "self", ".", "count", ",", "self", ".", "sum_absrel", "/", "self", ".", "count", ",", "self", ".", "sum_lg10", "/", "self", ".", "count", ",", "\n", "self", ".", "sum_delta1", "/", "self", ".", "count", ",", "self", ".", "sum_delta2", "/", "self", ".", "count", ",", "self", ".", "sum_delta3", "/", "self", ".", "count", ",", "\n", "self", ".", "sum_gpu_time", "/", "self", ".", "count", ",", "self", ".", "sum_data_time", "/", "self", ".", "count", ")", "\n", "return", "avg", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.log10": [[12, 15], ["torch.log", "math.log"], "function", ["None"], ["def", "log10", "(", "x", ")", ":", "\n", "      ", "\"\"\"Convert a new tensor with the base-10 logarithm of the elements of x. \"\"\"", "\n", "return", "torch", ".", "log", "(", "x", ")", "/", "math", ".", "log", "(", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.__init__": [[89, 130], ["print", "print", "torch.device", "model.loader.load_model", "inference.Inference_Engine.model.eval().cuda", "data.transforms.ToTensor", "inference.Inference_Engine.convert_PyTorch_to_TensorRT", "inference.Inference_Engine.run_evaluation", "os.path.isdir", "os.mkdir", "data.datasets.get_dataloader", "torchvision.transforms.Resize", "torchvision.transforms.Resize", "inference.Inference_Engine.model.eval"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.loader.load_model", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.convert_PyTorch_to_TensorRT", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.run_evaluation", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.datasets.get_dataloader"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "maxDepth", "=", "max_depths", "[", "args", ".", "dataset", "]", "\n", "self", ".", "res_dict", "=", "resolutions", "[", "args", ".", "dataset", "]", "\n", "self", ".", "resolution", "=", "self", ".", "res_dict", "[", "args", ".", "resolution", "]", "\n", "self", ".", "resolution_keyword", "=", "args", ".", "resolution", "\n", "print", "(", "'Resolution for Eval: {}'", ".", "format", "(", "self", ".", "resolution", ")", ")", "\n", "print", "(", "'Maximum Depth of Dataset: {}'", ".", "format", "(", "self", ".", "maxDepth", ")", ")", "\n", "self", ".", "crop", "=", "crops", "[", "args", ".", "dataset", "]", "\n", "\n", "self", ".", "result_dir", "=", "args", ".", "save_results", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "result_dir", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "self", ".", "result_dir", ")", "\n", "", "self", ".", "results_filename", "=", "'{}_{}_{}'", ".", "format", "(", "args", ".", "dataset", ",", "\n", "args", ".", "resolution", ",", "\n", "args", ".", "model", ")", "\n", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda:0'", ")", "\n", "\n", "self", ".", "model", "=", "loader", ".", "load_model", "(", "args", ".", "model", ",", "args", ".", "weights_path", ")", "\n", "self", ".", "model", "=", "self", ".", "model", ".", "eval", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "if", "args", ".", "evaluate", ":", "\n", "            ", "self", ".", "test_loader", "=", "datasets", ".", "get_dataloader", "(", "args", ".", "dataset", ",", "\n", "path", "=", "args", ".", "test_path", ",", "\n", "split", "=", "'test'", ",", "\n", "batch_size", "=", "1", ",", "\n", "resolution", "=", "args", ".", "resolution", ",", "\n", "uncompressed", "=", "True", ",", "\n", "workers", "=", "args", ".", "num_workers", ")", "\n", "\n", "", "if", "args", ".", "resolution", "==", "'half'", ":", "\n", "            ", "self", ".", "upscale_depth", "=", "torchvision", ".", "transforms", ".", "Resize", "(", "self", ".", "res_dict", "[", "'full'", "]", ")", "#To Full res", "\n", "self", ".", "downscale_image", "=", "torchvision", ".", "transforms", ".", "Resize", "(", "self", ".", "resolution", ")", "#To Half res", "\n", "\n", "", "self", ".", "to_tensor", "=", "transforms", ".", "ToTensor", "(", "test", "=", "True", ",", "maxDepth", "=", "self", ".", "maxDepth", ")", "\n", "\n", "self", ".", "visualize_images", "=", "[", "]", "\n", "\n", "self", ".", "trt_model", ",", "_", "=", "self", ".", "convert_PyTorch_to_TensorRT", "(", ")", "\n", "\n", "self", ".", "run_evaluation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.run_evaluation": [[133, 138], ["inference.Inference_Engine.pyTorch_speedtest", "inference.Inference_Engine.tensorRT_speedtest", "inference.Inference_Engine.tensorRT_evaluate", "inference.Inference_Engine.save_results"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.pyTorch_speedtest", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.tensorRT_speedtest", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.tensorRT_evaluate", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.save_results"], ["", "def", "run_evaluation", "(", "self", ")", ":", "\n", "        ", "speed_pyTorch", "=", "self", ".", "pyTorch_speedtest", "(", ")", "\n", "speed_tensorRT", "=", "self", ".", "tensorRT_speedtest", "(", ")", "\n", "average", "=", "self", ".", "tensorRT_evaluate", "(", ")", "\n", "self", ".", "save_results", "(", "average", ",", "speed_tensorRT", ",", "speed_pyTorch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.pyTorch_speedtest": [[141, 162], ["torch.cuda.empty_cache", "range", "print", "print", "torch.randn().cuda", "torch.cuda.synchronize", "time.time", "inference.Inference_Engine.model", "torch.cuda.synchronize", "time.time", "torch.randn"], "methods", ["None"], ["", "def", "pyTorch_speedtest", "(", "self", ",", "num_test_runs", "=", "200", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "times", "=", "0.0", "\n", "warm_up_runs", "=", "10", "\n", "for", "i", "in", "range", "(", "num_test_runs", "+", "warm_up_runs", ")", ":", "\n", "            ", "if", "i", "==", "warm_up_runs", ":", "\n", "                ", "times", "=", "0.0", "\n", "\n", "", "x", "=", "torch", ".", "randn", "(", "[", "1", ",", "3", ",", "*", "self", ".", "resolution", "]", ")", ".", "cuda", "(", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "#Synchronize transfer to cuda", "\n", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "result", "=", "self", ".", "model", "(", "x", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "times", "+=", "time", ".", "time", "(", ")", "-", "t0", "\n", "\n", "", "times", "=", "times", "/", "num_test_runs", "\n", "fps", "=", "1", "/", "times", "\n", "print", "(", "'[PyTorch] Runtime: {}s'", ".", "format", "(", "times", ")", ")", "\n", "print", "(", "'[PyTorch] FPS: {}\\n'", ".", "format", "(", "fps", ")", ")", "\n", "return", "times", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.tensorRT_speedtest": [[165, 186], ["torch.cuda.empty_cache", "range", "print", "print", "torch.randn().cuda", "torch.cuda.synchronize", "time.time", "inference.Inference_Engine.trt_model", "torch.cuda.synchronize", "time.time", "torch.randn"], "methods", ["None"], ["", "def", "tensorRT_speedtest", "(", "self", ",", "num_test_runs", "=", "200", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "times", "=", "0.0", "\n", "warm_up_runs", "=", "10", "\n", "for", "i", "in", "range", "(", "num_test_runs", "+", "warm_up_runs", ")", ":", "\n", "            ", "if", "i", "==", "warm_up_runs", ":", "\n", "                ", "times", "=", "0.0", "\n", "\n", "", "x", "=", "torch", ".", "randn", "(", "[", "1", ",", "3", ",", "*", "self", ".", "resolution", "]", ")", ".", "cuda", "(", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "#Synchronize transfer to cuda", "\n", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "result", "=", "self", ".", "trt_model", "(", "x", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "times", "+=", "time", ".", "time", "(", ")", "-", "t0", "\n", "\n", "", "times", "=", "times", "/", "num_test_runs", "\n", "fps", "=", "1", "/", "times", "\n", "print", "(", "'[tensorRT] Runtime: {}s'", ".", "format", "(", "times", ")", ")", "\n", "print", "(", "'[tensorRT] FPS: {}\\n'", ".", "format", "(", "fps", ")", ")", "\n", "return", "times", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.convert_PyTorch_to_TensorRT": [[189, 205], ["torch.ones().cuda", "print", "torch2trt.torch2trt.torch2trt", "print", "tensorrt.Logger", "os.path.join", "print", "open", "f.write", "open", "tensorrt.Runtime", "runtime.deserialize_cuda_engine", "torch.ones", "torch2trt.torch2trt.torch2trt.engine.serialize", "f.read"], "methods", ["None"], ["", "def", "convert_PyTorch_to_TensorRT", "(", "self", ")", ":", "\n", "        ", "x", "=", "torch", ".", "ones", "(", "[", "1", ",", "3", ",", "*", "self", ".", "resolution", "]", ")", ".", "cuda", "(", ")", "\n", "print", "(", "'[tensorRT] Starting TensorRT conversion'", ")", "\n", "model_trt", "=", "torch2trt", "(", "self", ".", "model", ",", "[", "x", "]", ",", "fp16_mode", "=", "True", ")", "\n", "print", "(", "\"[tensorRT] Model converted to TensorRT\"", ")", "\n", "\n", "TRT_LOGGER", "=", "trt", ".", "Logger", "(", ")", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'{}.engine'", ".", "format", "(", "self", ".", "results_filename", ")", ")", "\n", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "model_trt", ".", "engine", ".", "serialize", "(", ")", ")", "\n", "\n", "", "with", "open", "(", "file_path", ",", "'rb'", ")", "as", "f", ",", "trt", ".", "Runtime", "(", "TRT_LOGGER", ")", "as", "runtime", ":", "\n", "            ", "engine", "=", "runtime", ".", "deserialize_cuda_engine", "(", "f", ".", "read", "(", ")", ")", "\n", "\n", "", "print", "(", "'[tensorRT] Engine serialized\\n'", ")", "\n", "return", "model_trt", ",", "engine", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.tensorRT_evaluate": [[208, 281], ["torch.cuda.empty_cache", "metrics.AverageMeter", "enumerate", "metrics.AverageMeter.average", "time.strftime", "print", "time.time", "inference.Inference_Engine.to_tensor", "inference.Inference_Engine.unpack_and_move", "inference.Inference_Engine.unsqueeze", "gt.unsqueeze.unsqueeze.unsqueeze", "torch.flip", "torch.flip", "torch.cuda.synchronize", "time.time", "inference.Inference_Engine.trt_model", "inference.Inference_Engine.inverse_depth_norm", "torch.cuda.synchronize", "time.time", "inference.Inference_Engine.trt_model", "inference.Inference_Engine.inverse_depth_norm", "torch.cuda.synchronize", "metrics.Result", "metrics.Result.evaluate", "metrics.AverageMeter.update", "metrics.Result", "metrics.Result.evaluate", "metrics.AverageMeter.update", "time.localtime", "inference.Inference_Engine.downscale_image", "inference.Inference_Engine.downscale_image", "time.time", "time.time", "time.time", "inference.Inference_Engine.upscale_depth", "inference.Inference_Engine.upscale_depth", "inference.Inference_Engine.save_image_results", "inference.Inference_Engine.size", "inference.Inference_Engine.size"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.average", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.unpack_and_move", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.inverse_depth_norm", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.inverse_depth_norm", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.Result.evaluate", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.Result.evaluate", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.save_image_results"], ["", "def", "tensorRT_evaluate", "(", "self", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "self", ".", "model", "=", "None", "\n", "average_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "dataset", "=", "self", ".", "test_loader", ".", "dataset", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "dataset", ")", ":", "\n", "            ", "t0", "=", "time", ".", "time", "(", ")", "\n", "image", ",", "gt", "=", "data", "\n", "packed_data", "=", "{", "'image'", ":", "image", ",", "'depth'", ":", "gt", "}", "\n", "data", "=", "self", ".", "to_tensor", "(", "packed_data", ")", "\n", "image", ",", "gt", "=", "self", ".", "unpack_and_move", "(", "data", ")", "\n", "image", "=", "image", ".", "unsqueeze", "(", "0", ")", "\n", "gt", "=", "gt", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "image_flip", "=", "torch", ".", "flip", "(", "image", ",", "[", "3", "]", ")", "\n", "gt_flip", "=", "torch", ".", "flip", "(", "gt", ",", "[", "3", "]", ")", "\n", "if", "self", ".", "resolution_keyword", "==", "'half'", ":", "\n", "                ", "image", "=", "self", ".", "downscale_image", "(", "image", ")", "\n", "image_flip", "=", "self", ".", "downscale_image", "(", "image_flip", ")", "\n", "\n", "", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "data_time", "=", "time", ".", "time", "(", ")", "-", "t0", "\n", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "inv_prediction", "=", "self", ".", "trt_model", "(", "image", ")", "\n", "prediction", "=", "self", ".", "inverse_depth_norm", "(", "inv_prediction", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "gpu_time0", "=", "time", ".", "time", "(", ")", "-", "t0", "\n", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "inv_prediction_flip", "=", "self", ".", "trt_model", "(", "image_flip", ")", "\n", "prediction_flip", "=", "self", ".", "inverse_depth_norm", "(", "inv_prediction_flip", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "gpu_time1", "=", "time", ".", "time", "(", ")", "-", "t1", "\n", "\n", "\n", "if", "self", ".", "resolution_keyword", "==", "'half'", ":", "\n", "                ", "prediction", "=", "self", ".", "upscale_depth", "(", "prediction", ")", "\n", "prediction_flip", "=", "self", ".", "upscale_depth", "(", "prediction_flip", ")", "\n", "\n", "", "if", "i", "in", "self", ".", "visualize_images", ":", "\n", "                ", "self", ".", "save_image_results", "(", "image", ",", "gt", ",", "prediction", ",", "i", ")", "\n", "\n", "\n", "", "gt", "=", "gt", "[", ":", ",", ":", ",", "self", ".", "crop", "[", "0", "]", ":", "self", ".", "crop", "[", "1", "]", ",", "self", ".", "crop", "[", "2", "]", ":", "self", ".", "crop", "[", "3", "]", "]", "\n", "gt_flip", "=", "gt_flip", "[", ":", ",", ":", ",", "self", ".", "crop", "[", "0", "]", ":", "self", ".", "crop", "[", "1", "]", ",", "self", ".", "crop", "[", "2", "]", ":", "self", ".", "crop", "[", "3", "]", "]", "\n", "prediction", "=", "prediction", "[", ":", ",", ":", ",", "self", ".", "crop", "[", "0", "]", ":", "self", ".", "crop", "[", "1", "]", ",", "self", ".", "crop", "[", "2", "]", ":", "self", ".", "crop", "[", "3", "]", "]", "\n", "prediction_flip", "=", "prediction_flip", "[", ":", ",", ":", ",", "self", ".", "crop", "[", "0", "]", ":", "self", ".", "crop", "[", "1", "]", ",", "self", ".", "crop", "[", "2", "]", ":", "self", ".", "crop", "[", "3", "]", "]", "\n", "\n", "\n", "result", "=", "Result", "(", ")", "\n", "result", ".", "evaluate", "(", "prediction", ".", "data", ",", "gt", ".", "data", ")", "\n", "average_meter", ".", "update", "(", "result", ",", "gpu_time0", ",", "data_time", ",", "image", ".", "size", "(", "0", ")", ")", "\n", "\n", "result_flip", "=", "Result", "(", ")", "\n", "result_flip", ".", "evaluate", "(", "prediction_flip", ".", "data", ",", "gt_flip", ".", "data", ")", "\n", "average_meter", ".", "update", "(", "result_flip", ",", "gpu_time1", ",", "data_time", ",", "image", ".", "size", "(", "0", ")", ")", "\n", "\n", "#Report ", "\n", "", "avg", "=", "average_meter", ".", "average", "(", ")", "\n", "current_time", "=", "time", ".", "strftime", "(", "'%H:%M'", ",", "time", ".", "localtime", "(", ")", ")", "\n", "print", "(", "'\\n*\\n'", "\n", "'RMSE={average.rmse:.3f}\\n'", "\n", "'MAE={average.mae:.3f}\\n'", "\n", "'Delta1={average.delta1:.3f}\\n'", "\n", "'Delta2={average.delta2:.3f}\\n'", "\n", "'Delta3={average.delta3:.3f}\\n'", "\n", "'REL={average.absrel:.3f}\\n'", "\n", "'Lg10={average.lg10:.3f}\\n'", "\n", "'t_GPU={time:.3f}\\n'", ".", "format", "(", "\n", "average", "=", "avg", ",", "time", "=", "avg", ".", "gpu_time", ")", ")", "\n", "return", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.save_results": [[284, 298], ["os.path.join", "open", "f.write", "f.write"], "methods", ["None"], ["", "def", "save_results", "(", "self", ",", "average", ",", "trt_speed", ",", "pyTorch_speed", ")", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'{}.txt'", ".", "format", "(", "self", ".", "results_filename", ")", ")", "\n", "with", "open", "(", "file_path", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "'s[PyTorch], s[tensorRT], RMSE,MAE,REL,Lg10,Delta1,Delta2,Delta3\\n'", ")", "\n", "f", ".", "write", "(", "'{pyTorch_speed:.3f}'", "\n", "',{trt_speed:.3f}'", "\n", "',{average.rmse:.3f}'", "\n", "',{average.mae:.3f}'", "\n", "',{average.absrel:.3f}'", "\n", "',{average.lg10:.3f}'", "\n", "',{average.delta1:.3f}'", "\n", "',{average.delta2:.3f}'", "\n", "',{average.delta3:.3f}'", ".", "format", "(", "\n", "average", "=", "average", ",", "trt_speed", "=", "trt_speed", ",", "pyTorch_speed", "=", "pyTorch_speed", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.inverse_depth_norm": [[300, 304], ["torch.clamp"], "methods", ["None"], ["", "", "def", "inverse_depth_norm", "(", "self", ",", "depth", ")", ":", "\n", "        ", "depth", "=", "self", ".", "maxDepth", "/", "depth", "\n", "depth", "=", "torch", ".", "clamp", "(", "depth", ",", "self", ".", "maxDepth", "/", "100", ",", "self", ".", "maxDepth", ")", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.depth_norm": [[306, 310], ["torch.clamp"], "methods", ["None"], ["", "def", "depth_norm", "(", "self", ",", "depth", ")", ":", "\n", "        ", "depth", "=", "torch", ".", "clamp", "(", "depth", ",", "self", ".", "maxDepth", "/", "100", ",", "self", ".", "maxDepth", ")", "\n", "depth", "=", "self", ".", "maxDepth", "/", "depth", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.unpack_and_move": [[312, 323], ["isinstance", "isinstance", "print", "data[].to", "data[].to", "data.keys", "data[].to", "data[].to"], "methods", ["None"], ["", "def", "unpack_and_move", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "isinstance", "(", "data", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "            ", "image", "=", "data", "[", "0", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "gt", "=", "data", "[", "1", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "return", "image", ",", "gt", "\n", "", "if", "isinstance", "(", "data", ",", "dict", ")", ":", "\n", "            ", "keys", "=", "data", ".", "keys", "(", ")", "\n", "image", "=", "data", "[", "'image'", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "gt", "=", "data", "[", "'depth'", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "return", "image", ",", "gt", "\n", "", "print", "(", "'Type not supported'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Inference_Engine.save_image_results": [[324, 372], ["image[].permute().cpu", "gt[].permute().cpu", "prediction[].permute().detach().cpu", "torch.max", "torch.min", "os.path.join", "matplotlib.figure", "matplotlib.Axes", "matplotlib.Axes.set_axis_off", "matplotlib.figure.add_axes", "matplotlib.Axes.imshow", "matplotlib.figure.savefig", "matplotlib.clf", "os.path.join", "matplotlib.figure", "matplotlib.Axes", "matplotlib.Axes.set_axis_off", "matplotlib.figure.add_axes", "matplotlib.Axes.imshow", "matplotlib.figure.colorbar", "matplotlib.figure.savefig", "matplotlib.clf", "os.path.join", "matplotlib.figure", "matplotlib.Axes", "matplotlib.Axes.set_axis_off", "matplotlib.figure.add_axes", "matplotlib.Axes.imshow", "matplotlib.figure.savefig", "matplotlib.clf", "os.path.join", "matplotlib.figure", "matplotlib.Axes", "matplotlib.Axes.set_axis_off", "matplotlib.figure.add_axes", "matplotlib.Axes.imshow", "matplotlib.figure.savefig", "matplotlib.clf", "image[].permute", "gt[].permute", "prediction[].permute().detach", "prediction[].permute"], "methods", ["None"], ["", "def", "save_image_results", "(", "self", ",", "image", ",", "gt", ",", "prediction", ",", "image_id", ")", ":", "\n", "        ", "img", "=", "image", "[", "0", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", "\n", "gt", "=", "gt", "[", "0", ",", "0", "]", ".", "permute", "(", "0", ",", "1", ")", ".", "cpu", "(", ")", "\n", "prediction", "=", "prediction", "[", "0", ",", "0", "]", ".", "permute", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "error_map", "=", "gt", "-", "prediction", "\n", "vmax_error", "=", "self", ".", "maxDepth", "/", "10.0", "\n", "vmin_error", "=", "0.0", "\n", "cmap", "=", "'viridis'", "\n", "\n", "vmax", "=", "torch", ".", "max", "(", "gt", "[", "gt", "!=", "0.0", "]", ")", "\n", "vmin", "=", "torch", ".", "min", "(", "gt", "[", "gt", "!=", "0.0", "]", ")", "\n", "\n", "save_to_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'image_{}.png'", ".", "format", "(", "image_id", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "frameon", "=", "False", ")", "\n", "ax", "=", "plt", ".", "Axes", "(", "fig", ",", "[", "0.", ",", "0.", ",", "1.", ",", "1.", "]", ")", "\n", "ax", ".", "set_axis_off", "(", ")", "\n", "fig", ".", "add_axes", "(", "ax", ")", "\n", "ax", ".", "imshow", "(", "img", ")", "\n", "fig", ".", "savefig", "(", "save_to_dir", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n", "save_to_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'errors_{}.png'", ".", "format", "(", "image_id", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "frameon", "=", "False", ")", "\n", "ax", "=", "plt", ".", "Axes", "(", "fig", ",", "[", "0.", ",", "0.", ",", "1.", ",", "1.", "]", ")", "\n", "ax", ".", "set_axis_off", "(", ")", "\n", "fig", ".", "add_axes", "(", "ax", ")", "\n", "errors", "=", "ax", ".", "imshow", "(", "error_map", ",", "vmin", "=", "vmin_error", ",", "vmax", "=", "vmax_error", ",", "cmap", "=", "'Reds'", ")", "\n", "fig", ".", "colorbar", "(", "errors", ",", "ax", "=", "ax", ",", "shrink", "=", "0.8", ")", "\n", "fig", ".", "savefig", "(", "save_to_dir", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n", "save_to_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'gt_{}.png'", ".", "format", "(", "image_id", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "frameon", "=", "False", ")", "\n", "ax", "=", "plt", ".", "Axes", "(", "fig", ",", "[", "0.", ",", "0.", ",", "1.", ",", "1.", "]", ")", "\n", "ax", ".", "set_axis_off", "(", ")", "\n", "fig", ".", "add_axes", "(", "ax", ")", "\n", "ax", ".", "imshow", "(", "gt", ",", "vmin", "=", "vmin", ",", "vmax", "=", "vmax", ",", "cmap", "=", "cmap", ")", "\n", "fig", ".", "savefig", "(", "save_to_dir", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n", "save_to_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "result_dir", ",", "'depth_{}.png'", ".", "format", "(", "image_id", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "frameon", "=", "False", ")", "\n", "ax", "=", "plt", ".", "Axes", "(", "fig", ",", "[", "0.", ",", "0.", ",", "1.", ",", "1.", "]", ")", "\n", "ax", ".", "set_axis_off", "(", ")", "\n", "fig", ".", "add_axes", "(", "ax", ")", "\n", "ax", ".", "imshow", "(", "prediction", ",", "vmin", "=", "vmin", ",", "vmax", "=", "vmax", ",", "cmap", "=", "cmap", ")", "\n", "fig", ".", "savefig", "(", "save_to_dir", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.Dict2Obj.__init__": [[375, 378], ["setattr"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dictionary", ")", ":", "\n", "        ", "for", "key", "in", "dictionary", ":", "\n", "            ", "setattr", "(", "self", ",", "key", ",", "dictionary", "[", "key", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.inference.get_args": [[38, 84], ["argparse.ArgumentParser", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "get_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Nano Inference for Monocular Depth Estimation'", ")", "\n", "\n", "#Mode", "\n", "parser", ".", "set_defaults", "(", "evaluate", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--eval'", ",", "\n", "dest", "=", "'evaluate'", ",", "\n", "action", "=", "'store_true'", ")", "\n", "\n", "#Data", "\n", "parser", ".", "add_argument", "(", "'--test_path'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'path to test data'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'dataset for training'", ",", "\n", "choices", "=", "[", "'kitti'", ",", "'nyu'", ",", "'nyu_reduced'", "]", ",", "\n", "default", "=", "'kitti'", ")", "\n", "parser", ".", "add_argument", "(", "'--resolution'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'Resolution of the images for training'", ",", "\n", "choices", "=", "[", "'full'", ",", "'half'", "]", ",", "\n", "default", "=", "'half'", ")", "\n", "\n", "\n", "#Model", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'name of the model to be trained'", ",", "\n", "default", "=", "'UpDepth'", ")", "\n", "parser", ".", "add_argument", "(", "'--weights_path'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'path to model weights'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_results'", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "'path to save results to'", ",", "\n", "default", "=", "'./results'", ")", "\n", "\n", "#System", "\n", "parser", ".", "add_argument", "(", "'--num_workers'", ",", "\n", "type", "=", "int", ",", "\n", "help", "=", "'number of dataloader workers'", ",", "\n", "default", "=", "1", ")", "\n", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.__init__": [[19, 71], ["print", "torch.device", "torch.device", "torch.device", "torch.device", "model.loader.load_model", "training.Trainer.model.to", "data.datasets.get_dataloader", "data.datasets.get_dataloader", "torch.Adam", "torch.Adam", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "os.path.isdir", "os.mkdir", "os.path.isdir", "os.mkdir", "training.Trainer.model.parameters", "losses.Depth_Loss", "losses.Depth_Loss", "training.Trainer.load_checkpoint", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.loader.load_model", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.datasets.get_dataloader", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.datasets.get_dataloader", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.load_checkpoint"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "debug", "=", "True", "\n", "\n", "self", ".", "checkpoint_pth", "=", "args", ".", "save_checkpoint", "\n", "self", ".", "results_pth", "=", "args", ".", "save_results", "\n", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "checkpoint_pth", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "self", ".", "checkpoint_pth", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "results_pth", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "self", ".", "results_pth", ")", "\n", "\n", "", "self", ".", "epoch", "=", "0", "\n", "self", ".", "val_losses", "=", "[", "]", "\n", "self", ".", "max_epochs", "=", "args", ".", "num_epochs", "\n", "self", ".", "maxDepth", "=", "max_depths", "[", "args", ".", "dataset", "]", "\n", "print", "(", "'Maximum Depth of Dataset: {}'", ".", "format", "(", "self", ".", "maxDepth", ")", ")", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda:0'", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "'cpu'", ")", "\n", "\n", "self", ".", "model", "=", "loader", ".", "load_model", "(", "args", ".", "model", ",", "\n", "args", ".", "weights_path", ")", "\n", "self", ".", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "train_loader", "=", "datasets", ".", "get_dataloader", "(", "args", ".", "dataset", ",", "\n", "path", "=", "args", ".", "data_path", ",", "\n", "split", "=", "'train'", ",", "\n", "augmentation", "=", "args", ".", "eval_mode", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "resolution", "=", "args", ".", "resolution", ",", "\n", "workers", "=", "args", ".", "num_workers", ")", "\n", "self", ".", "val_loader", "=", "datasets", ".", "get_dataloader", "(", "args", ".", "dataset", ",", "\n", "path", "=", "args", ".", "data_path", ",", "\n", "split", "=", "'val'", ",", "\n", "augmentation", "=", "args", ".", "eval_mode", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "resolution", "=", "args", ".", "resolution", ",", "\n", "workers", "=", "args", ".", "num_workers", ")", "\n", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "\n", "args", ".", "learning_rate", ")", "\n", "self", ".", "lr_scheduler", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "self", ".", "optimizer", ",", "\n", "args", ".", "scheduler_step_size", ",", "\n", "gamma", "=", "0.1", ")", "\n", "\n", "if", "args", ".", "eval_mode", "==", "'alhashim'", ":", "\n", "            ", "self", ".", "loss_func", "=", "Depth_Loss", "(", "0.1", ",", "1", ",", "1", ",", "maxDepth", "=", "self", ".", "maxDepth", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "loss_func", "=", "Depth_Loss", "(", "1", ",", "0", ",", "0", ",", "maxDepth", "=", "self", ".", "maxDepth", ")", "\n", "\n", "#Load Checkpoint", "\n", "", "if", "args", ".", "load_checkpoint", "!=", "''", ":", "\n", "            ", "self", ".", "load_checkpoint", "(", "args", ".", "load_checkpoint", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.train": [[72, 87], ["torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "time.time", "range", "training.Trainer.save_model", "time.strftime", "print", "training.Trainer.train_loop", "training.Trainer.save_checkpoint", "time.localtime", "training.Trainer.val_loop"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.save_model", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.train_loop", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.save_checkpoint", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.val_loop"], ["", "", "def", "train", "(", "self", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "self", ".", "epoch", "in", "range", "(", "self", ".", "epoch", ",", "self", ".", "max_epochs", ")", ":", "\n", "            ", "current_time", "=", "time", ".", "strftime", "(", "'%H:%M'", ",", "time", ".", "localtime", "(", ")", ")", "\n", "print", "(", "'{} - Epoch {}'", ".", "format", "(", "current_time", ",", "self", ".", "epoch", ")", ")", "\n", "\n", "self", ".", "train_loop", "(", ")", "\n", "\n", "if", "self", ".", "val_loader", "is", "not", "None", ":", "\n", "                ", "self", ".", "val_loop", "(", ")", "\n", "\n", "", "self", ".", "save_checkpoint", "(", ")", "\n", "\n", "", "self", ".", "save_model", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.train_loop": [[88, 108], ["training.Trainer.model.train", "enumerate", "time.strftime", "print", "training.Trainer.unpack_and_move", "training.Trainer.optimizer.zero_grad", "training.Trainer.model", "training.Trainer.loss_func", "training.Trainer.backward", "training.Trainer.optimizer.step", "training.Trainer.item", "time.localtime", "len"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.train", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.unpack_and_move"], ["", "def", "train_loop", "(", "self", ")", ":", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "accumulated_loss", "=", "0.0", "\n", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "self", ".", "train_loader", ")", ":", "\n", "            ", "image", ",", "gt", "=", "self", ".", "unpack_and_move", "(", "data", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "prediction", "=", "self", ".", "model", "(", "image", ")", "\n", "\n", "loss_value", "=", "self", ".", "loss_func", "(", "prediction", ",", "gt", ")", "\n", "loss_value", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "accumulated_loss", "+=", "loss_value", ".", "item", "(", ")", "\n", "\n", "#Report ", "\n", "", "current_time", "=", "time", ".", "strftime", "(", "'%H:%M'", ",", "time", ".", "localtime", "(", ")", ")", "\n", "average_loss", "=", "accumulated_loss", "/", "(", "len", "(", "self", ".", "train_loader", ".", "dataset", ")", "+", "1", ")", "\n", "print", "(", "'{} - Average Training Loss: {:3.4f}'", ".", "format", "(", "current_time", ",", "average_loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.val_loop": [[110, 155], ["torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "training.Trainer.model.eval", "metrics.AverageMeter", "metrics.AverageMeter.average", "time.strftime", "training.Trainer.val_losses.append", "print", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "time.localtime", "time.time", "training.Trainer.unpack_and_move", "time.time", "training.Trainer.model", "training.Trainer.inverse_depth_norm", "training.Trainer.loss_func", "training.Trainer.item", "metrics.Result", "metrics.Result.evaluate", "metrics.AverageMeter.update", "len", "time.time", "time.time", "training.Trainer.show_images", "training.Trainer.depth_norm", "image.size"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.average", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.unpack_and_move", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.inverse_depth_norm", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.Result.evaluate", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.metrics.AverageMeter.update", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.show_images", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.depth_norm"], ["", "def", "val_loop", "(", "self", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "accumulated_loss", "=", "0.0", "\n", "average_meter", "=", "AverageMeter", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "data", "in", "enumerate", "(", "self", ".", "val_loader", ")", ":", "\n", "                ", "t0", "=", "time", ".", "time", "(", ")", "\n", "image", ",", "gt", "=", "self", ".", "unpack_and_move", "(", "data", ")", "\n", "data_time", "=", "time", ".", "time", "(", ")", "-", "t0", "\n", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "inv_prediction", "=", "self", ".", "model", "(", "image", ")", "\n", "prediction", "=", "self", ".", "inverse_depth_norm", "(", "inv_prediction", ")", "\n", "gpu_time", "=", "time", ".", "time", "(", ")", "-", "t0", "\n", "\n", "\n", "if", "self", ".", "debug", "and", "i", "==", "0", ":", "\n", "                    ", "self", ".", "show_images", "(", "image", ",", "gt", ",", "prediction", ")", "\n", "\n", "", "loss_value", "=", "self", ".", "loss_func", "(", "inv_prediction", ",", "self", ".", "depth_norm", "(", "gt", ")", ")", "\n", "accumulated_loss", "+=", "loss_value", ".", "item", "(", ")", "\n", "\n", "result", "=", "Result", "(", ")", "\n", "result", ".", "evaluate", "(", "prediction", ".", "data", ",", "gt", ".", "data", ")", "\n", "average_meter", ".", "update", "(", "result", ",", "gpu_time", ",", "data_time", ",", "image", ".", "size", "(", "0", ")", ")", "\n", "\n", "#Report ", "\n", "", "", "avg", "=", "average_meter", ".", "average", "(", ")", "\n", "current_time", "=", "time", ".", "strftime", "(", "'%H:%M'", ",", "time", ".", "localtime", "(", ")", ")", "\n", "average_loss", "=", "accumulated_loss", "/", "(", "len", "(", "self", ".", "val_loader", ".", "dataset", ")", "+", "1", ")", "\n", "self", ".", "val_losses", ".", "append", "(", "average_loss", ")", "\n", "print", "(", "'{} - Average Validation Loss: {:3.4f}'", ".", "format", "(", "current_time", ",", "average_loss", ")", ")", "\n", "\n", "print", "(", "'\\n*\\n'", "\n", "'RMSE={average.rmse:.3f}\\n'", "\n", "'MAE={average.mae:.3f}\\n'", "\n", "'Delta1={average.delta1:.3f}\\n'", "\n", "'Delta2={average.delta2:.3f}\\n'", "\n", "'Delta3={average.delta3:.3f}\\n'", "\n", "'REL={average.absrel:.3f}\\n'", "\n", "'Lg10={average.lg10:.3f}\\n'", "\n", "'t_GPU={time:.3f}\\n'", ".", "format", "(", "\n", "average", "=", "avg", ",", "time", "=", "avg", ".", "gpu_time", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.load_checkpoint": [[157, 164], ["torch.load", "torch.load", "torch.load", "torch.load", "training.Trainer.model.load_state_dict", "training.Trainer.optimizer.load_state_dict", "training.Trainer.lr_scheduler.load_state_dict"], "methods", ["None"], ["", "def", "load_checkpoint", "(", "self", ",", "checkpoint_path", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ",", "\n", "map_location", "=", "self", ".", "device", ")", "\n", "self", ".", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'model'", "]", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "self", ".", "lr_scheduler", ".", "load_state_dict", "(", "checkpoint", "[", "'lr_scheduler'", "]", ")", "\n", "self", ".", "epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.save_checkpoint": [[166, 179], ["os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "time.strftime", "print", "time.localtime", "training.Trainer.model.state_dict", "training.Trainer.optimizer.state_dict", "training.Trainer.lr_scheduler.state_dict"], "methods", ["None"], ["", "def", "save_checkpoint", "(", "self", ")", ":", "\n", "#Save checkpoint for training", "\n", "        ", "checkpoint_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_pth", ",", "\n", "'checkpoint_{}.pth'", ".", "format", "(", "self", ".", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "{", "\n", "'epoch'", ":", "self", ".", "epoch", "+", "1", ",", "\n", "'val_losses'", ":", "self", ".", "val_losses", ",", "\n", "'model'", ":", "self", ".", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'lr_scheduler'", ":", "self", ".", "lr_scheduler", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "checkpoint_dir", ")", "\n", "current_time", "=", "time", ".", "strftime", "(", "'%H:%M'", ",", "time", ".", "localtime", "(", ")", ")", "\n", "print", "(", "'{} - Model saved'", ".", "format", "(", "current_time", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.save_model": [[181, 190], ["os.path.join", "os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "torch.save", "torch.save", "torch.save", "torch.save", "print"], "methods", ["None"], ["", "def", "save_model", "(", "self", ")", ":", "\n", "        ", "best_checkpoint_pth", "=", "os", ".", "path", ".", "join", "(", "self", ".", "checkpoint_pth", ",", "\n", "'checkpoint_19.pth'", ")", "\n", "best_model_pth", "=", "os", ".", "path", ".", "join", "(", "self", ".", "results_pth", ",", "\n", "'best_model.pth'", ")", "\n", "\n", "checkpoint", "=", "torch", ".", "load", "(", "best_checkpoint_pth", ")", "\n", "torch", ".", "save", "(", "checkpoint", "[", "'model'", "]", ",", "best_model_pth", ")", "\n", "print", "(", "'Model saved.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.inverse_depth_norm": [[191, 197], ["torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp"], "methods", ["None"], ["", "def", "inverse_depth_norm", "(", "self", ",", "depth", ")", ":", "\n", "        ", "zero_mask", "=", "depth", "==", "0.0", "\n", "depth", "=", "self", ".", "maxDepth", "/", "depth", "\n", "depth", "=", "torch", ".", "clamp", "(", "depth", ",", "self", ".", "maxDepth", "/", "100", ",", "self", ".", "maxDepth", ")", "\n", "depth", "[", "zero_mask", "]", "=", "0.0", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.depth_norm": [[199, 205], ["torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp"], "methods", ["None"], ["", "def", "depth_norm", "(", "self", ",", "depth", ")", ":", "\n", "        ", "zero_mask", "=", "depth", "==", "0.0", "\n", "depth", "=", "torch", ".", "clamp", "(", "depth", ",", "self", ".", "maxDepth", "/", "100", ",", "self", ".", "maxDepth", ")", "\n", "depth", "=", "self", ".", "maxDepth", "/", "depth", "\n", "depth", "[", "zero_mask", "]", "=", "0.0", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.unpack_and_move": [[207, 218], ["isinstance", "isinstance", "print", "data[].to", "data[].to", "data.keys", "data[].to", "data[].to"], "methods", ["None"], ["", "def", "unpack_and_move", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "isinstance", "(", "data", ",", "(", "tuple", ",", "list", ")", ")", ":", "\n", "            ", "image", "=", "data", "[", "0", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "gt", "=", "data", "[", "1", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "return", "image", ",", "gt", "\n", "", "if", "isinstance", "(", "data", ",", "dict", ")", ":", "\n", "            ", "keys", "=", "data", ".", "keys", "(", ")", "\n", "image", "=", "data", "[", "'image'", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "gt", "=", "data", "[", "'depth'", "]", ".", "to", "(", "self", ".", "device", ",", "non_blocking", "=", "True", ")", "\n", "return", "image", ",", "gt", "\n", "", "print", "(", "'Type not supported'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.training.Trainer.show_images": [[219, 229], ["image[].cpu().permute().numpy", "plt.imshow", "plt.show", "plt.imshow", "plt.show", "plt.imshow", "plt.show", "gt[].cpu", "pred[].detach().cpu", "image[].cpu().permute", "pred[].detach", "image[].cpu"], "methods", ["None"], ["", "def", "show_images", "(", "self", ",", "image", ",", "gt", ",", "pred", ")", ":", "\n", "        ", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "image_np", "=", "image", "[", "0", "]", ".", "cpu", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "numpy", "(", ")", "\n", "gt", "[", "0", ",", "0", ",", "gt", "[", "0", ",", "0", "]", "==", "100.0", "]", "=", "0.1", "\n", "plt", ".", "imshow", "(", "image_np", ")", "\n", "plt", ".", "show", "(", ")", "\n", "plt", ".", "imshow", "(", "gt", "[", "0", ",", "0", "]", ".", "cpu", "(", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "plt", ".", "imshow", "(", "pred", "[", "0", ",", "0", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.__init__": [[16, 23], ["torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss", "torch.nn.L1Loss"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "alpha", ",", "beta", ",", "gamma", ",", "maxDepth", "=", "10.0", ")", ":", "\n", "        ", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "beta", "=", "beta", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "maxDepth", "=", "maxDepth", "\n", "\n", "self", ".", "L1_Loss", "=", "torch", ".", "nn", ".", "L1Loss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.__call__": [[25, 39], ["losses.Depth_Loss.L1_Loss", "losses.Depth_Loss.L1_Loss", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "losses.Depth_Loss.gradient_loss", "losses.Depth_Loss.ssim"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.gradient_loss", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.ssim"], ["", "def", "__call__", "(", "self", ",", "output", ",", "depth", ")", ":", "\n", "        ", "if", "self", ".", "beta", "==", "0", "and", "self", ".", "gamma", "==", "0", ":", "\n", "            ", "valid_mask", "=", "depth", ">", "0.0", "\n", "output", "=", "output", "[", "valid_mask", "]", "\n", "depth", "=", "depth", "[", "valid_mask", "]", "\n", "l_depth", "=", "self", ".", "L1_Loss", "(", "output", ",", "depth", ")", "\n", "loss", "=", "l_depth", "\n", "", "else", ":", "\n", "            ", "l_depth", "=", "self", ".", "L1_Loss", "(", "output", ",", "depth", ")", "\n", "l_ssim", "=", "torch", ".", "clamp", "(", "(", "1", "-", "self", ".", "ssim", "(", "output", ",", "depth", ",", "self", ".", "maxDepth", ")", ")", "*", "0.5", ",", "0", ",", "1", ")", "\n", "l_grad", "=", "self", ".", "gradient_loss", "(", "output", ",", "depth", ")", "\n", "\n", "loss", "=", "self", ".", "alpha", "*", "l_depth", "+", "self", ".", "beta", "*", "l_ssim", "+", "self", ".", "gamma", "*", "l_grad", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.ssim": [[41, 80], ["img1.size", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d.pow", "torch.conv2d.pow", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "min", "losses.Depth_Loss.create_window().to", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.conv2d", "ssim_map.mean", "ssim_map.mean().mean().mean", "losses.Depth_Loss.create_window", "ssim_map.mean().mean", "ssim_map.mean"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.create_window"], ["", "def", "ssim", "(", "self", ",", "img1", ",", "img2", ",", "val_range", ",", "window_size", "=", "11", ",", "window", "=", "None", ",", "size_average", "=", "True", ",", "full", "=", "False", ")", ":", "\n", "        ", "L", "=", "val_range", "\n", "\n", "padd", "=", "0", "\n", "(", "_", ",", "channel", ",", "height", ",", "width", ")", "=", "img1", ".", "size", "(", ")", "\n", "if", "window", "is", "None", ":", "\n", "            ", "real_size", "=", "min", "(", "window_size", ",", "height", ",", "width", ")", "\n", "window", "=", "self", ".", "create_window", "(", "real_size", ",", "channel", "=", "channel", ")", ".", "to", "(", "img1", ".", "device", ")", "\n", "padd", "=", "window_size", "//", "2", "\n", "\n", "", "mu1", "=", "F", ".", "conv2d", "(", "img1", ",", "window", ",", "padding", "=", "padd", ",", "groups", "=", "channel", ")", "\n", "mu2", "=", "F", ".", "conv2d", "(", "img2", ",", "window", ",", "padding", "=", "padd", ",", "groups", "=", "channel", ")", "\n", "\n", "mu1_sq", "=", "mu1", ".", "pow", "(", "2", ")", "\n", "mu2_sq", "=", "mu2", ".", "pow", "(", "2", ")", "\n", "mu1_mu2", "=", "mu1", "*", "mu2", "\n", "\n", "sigma1_sq", "=", "F", ".", "conv2d", "(", "img1", "*", "img1", ",", "window", ",", "padding", "=", "padd", ",", "groups", "=", "channel", ")", "-", "mu1_sq", "\n", "sigma2_sq", "=", "F", ".", "conv2d", "(", "img2", "*", "img2", ",", "window", ",", "padding", "=", "padd", ",", "groups", "=", "channel", ")", "-", "mu2_sq", "\n", "sigma12", "=", "F", ".", "conv2d", "(", "img1", "*", "img2", ",", "window", ",", "padding", "=", "padd", ",", "groups", "=", "channel", ")", "-", "mu1_mu2", "\n", "\n", "C1", "=", "(", "0.01", "*", "L", ")", "**", "2", "\n", "C2", "=", "(", "0.03", "*", "L", ")", "**", "2", "\n", "\n", "v1", "=", "2.0", "*", "sigma12", "+", "C2", "\n", "v2", "=", "sigma1_sq", "+", "sigma2_sq", "+", "C2", "\n", "cs", "=", "torch", ".", "mean", "(", "v1", "/", "v2", ")", "# contrast sensitivity", "\n", "\n", "ssim_map", "=", "(", "(", "2", "*", "mu1_mu2", "+", "C1", ")", "*", "v1", ")", "/", "(", "(", "mu1_sq", "+", "mu2_sq", "+", "C1", ")", "*", "v2", ")", "\n", "\n", "if", "size_average", ":", "\n", "            ", "ret", "=", "ssim_map", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "            ", "ret", "=", "ssim_map", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", ".", "mean", "(", "1", ")", "\n", "\n", "", "if", "full", ":", "\n", "            ", "return", "ret", ",", "cs", "\n", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.gradient_loss": [[82, 93], ["losses.Depth_Loss.gradient", "losses.Depth_Loss.gradient", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.gradient", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.gradient"], ["", "def", "gradient_loss", "(", "self", ",", "gen_frames", ",", "gt_frames", ",", "alpha", "=", "1", ")", ":", "\n", "        ", "gen_dx", ",", "gen_dy", "=", "self", ".", "gradient", "(", "gen_frames", ")", "\n", "gt_dx", ",", "gt_dy", "=", "self", ".", "gradient", "(", "gt_frames", ")", "\n", "\n", "grad_diff_x", "=", "torch", ".", "abs", "(", "gt_dx", "-", "gen_dx", ")", "\n", "grad_diff_y", "=", "torch", ".", "abs", "(", "gt_dy", "-", "gen_dy", ")", "\n", "\n", "# condense into one tensor and avg", "\n", "grad_comb", "=", "grad_diff_x", "**", "alpha", "+", "grad_diff_y", "**", "alpha", "\n", "\n", "return", "torch", ".", "mean", "(", "grad_comb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.gradient": [[95, 116], ["x.size", "x.size", "torch.pad", "torch.pad", "torch.pad", "torch.pad"], "methods", ["None"], ["", "def", "gradient", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        idea from tf.image.image_gradients(image)\n        https://github.com/tensorflow/tensorflow/blob/r2.1/tensorflow/python/ops/image_ops_impl.py#L3441-L3512\n        \"\"\"", "\n", "h_x", "=", "x", ".", "size", "(", ")", "[", "-", "2", "]", "\n", "w_x", "=", "x", ".", "size", "(", ")", "[", "-", "1", "]", "\n", "\n", "left", "=", "x", "\n", "right", "=", "F", ".", "pad", "(", "x", ",", "[", "0", ",", "1", ",", "0", ",", "0", "]", ")", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", "\n", "top", "=", "x", "\n", "bottom", "=", "F", ".", "pad", "(", "x", ",", "[", "0", ",", "0", ",", "0", ",", "1", "]", ")", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", "\n", "\n", "dx", ",", "dy", "=", "right", "-", "left", ",", "bottom", "-", "top", "\n", "\n", "# dx will always have zeros in the last column, right-left", "\n", "# dy will always have zeros in the last row,    bottom-top", "\n", "dx", "[", ":", ",", ":", ",", ":", ",", "-", "1", "]", "=", "0", "\n", "dy", "[", ":", ",", ":", ",", "-", "1", ",", ":", "]", "=", "0", "\n", "\n", "return", "dx", ",", "dy", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.create_window": [[118, 123], ["losses.Depth_Loss.gaussian().unsqueeze", "losses.Depth_Loss.mm().float().unsqueeze().unsqueeze", "losses.Depth_Loss.mm().float().unsqueeze().unsqueeze.expand().contiguous", "losses.Depth_Loss.gaussian", "losses.Depth_Loss.mm().float().unsqueeze", "losses.Depth_Loss.mm().float().unsqueeze().unsqueeze.expand", "losses.Depth_Loss.mm().float", "losses.Depth_Loss.mm", "losses.Depth_Loss.t"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.gaussian"], ["", "def", "create_window", "(", "self", ",", "window_size", ",", "channel", "=", "1", ")", ":", "\n", "        ", "_1D_window", "=", "self", ".", "gaussian", "(", "window_size", ",", "1.5", ")", ".", "unsqueeze", "(", "1", ")", "\n", "_2D_window", "=", "_1D_window", ".", "mm", "(", "_1D_window", ".", "t", "(", ")", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "window", "=", "_2D_window", ".", "expand", "(", "channel", ",", "1", ",", "window_size", ",", "window_size", ")", ".", "contiguous", "(", ")", "\n", "return", "window", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.None.losses.Depth_Loss.gaussian": [[125, 128], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor.sum", "torch.Tensor.sum", "math.exp", "range", "float"], "methods", ["None"], ["", "def", "gaussian", "(", "self", ",", "window_size", ",", "sigma", ")", ":", "\n", "        ", "gauss", "=", "torch", ".", "Tensor", "(", "[", "exp", "(", "-", "(", "x", "-", "window_size", "//", "2", ")", "**", "2", "/", "float", "(", "2", "*", "sigma", "**", "2", ")", ")", "for", "x", "in", "range", "(", "window_size", ")", "]", ")", "\n", "return", "gauss", "/", "gauss", ".", "sum", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.modules.SELayer.__init__": [[10, 18], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__init__"], ["def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "SELayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#self.avg_pool = nn.AdaptiveAvgPool2d(1)", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "channel", ",", "channel", "//", "reduction", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "channel", "//", "reduction", ",", "channel", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.modules.SELayer.forward": [[20, 26], ["x.size", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "modules.SELayer.view", "modules.SELayer.fc().view", "modules.SELayer.expand", "modules.SELayer.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "torch", ".", "mean", "(", "x", ",", "dim", "=", "[", "2", ",", "3", "]", ")", "# Replacement of avgPool for large kernels for trt", "\n", "y", "=", "y", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y", ".", "expand", "(", "x", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.modules.Guided_Upsampling_Block.__init__": [[30, 83], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "modules.SELayer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "expand_features", ",", "out_features", ",", "\n", "kernel_size", "=", "3", ",", "channel_attention", "=", "True", ",", "\n", "guidance_type", "=", "'full'", ",", "guide_features", "=", "3", ")", ":", "\n", "        ", "super", "(", "Guided_Upsampling_Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "channel_attention", "=", "channel_attention", "\n", "self", ".", "guidance_type", "=", "guidance_type", "\n", "self", ".", "guide_features", "=", "guide_features", "\n", "self", ".", "in_features", "=", "in_features", "\n", "\n", "padding", "=", "kernel_size", "//", "2", "\n", "\n", "self", ".", "feature_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_features", ",", "expand_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "expand_features", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "expand_features", ",", "expand_features", "//", "2", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "expand_features", "//", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "if", "self", ".", "guidance_type", "==", "'full'", ":", "\n", "            ", "self", ".", "guide_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "guide_features", ",", "expand_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "expand_features", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "expand_features", ",", "expand_features", "//", "2", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "expand_features", "//", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "comb_features", "=", "(", "expand_features", "//", "2", ")", "*", "2", "\n", "", "elif", "self", ".", "guidance_type", "==", "'raw'", ":", "\n", "            ", "comb_features", "=", "expand_features", "//", "2", "+", "guide_features", "\n", "", "else", ":", "\n", "            ", "comb_features", "=", "expand_features", "//", "2", "\n", "\n", "", "self", ".", "comb_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "comb_features", ",", "expand_features", ",", "\n", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "expand_features", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "expand_features", ",", "in_features", ",", "kernel_size", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "in_features", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "reduce", "=", "nn", ".", "Conv2d", "(", "in_features", ",", "\n", "out_features", ",", "\n", "kernel_size", "=", "1", ")", "\n", "\n", "if", "self", ".", "channel_attention", ":", "\n", "            ", "self", ".", "SE_block", "=", "SELayer", "(", "comb_features", ",", "\n", "reduction", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.modules.Guided_Upsampling_Block.forward": [[85, 101], ["modules.Guided_Upsampling_Block.feature_conv", "modules.Guided_Upsampling_Block.comb_conv", "modules.Guided_Upsampling_Block.reduce", "modules.Guided_Upsampling_Block.guide_conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.Guided_Upsampling_Block.SE_block", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "guide", ",", "depth", ")", ":", "\n", "        ", "x", "=", "self", ".", "feature_conv", "(", "depth", ")", "\n", "\n", "if", "self", ".", "guidance_type", "==", "'full'", ":", "\n", "            ", "y", "=", "self", ".", "guide_conv", "(", "guide", ")", "\n", "xy", "=", "torch", ".", "cat", "(", "[", "x", ",", "y", "]", ",", "dim", "=", "1", ")", "\n", "", "elif", "self", ".", "guidance_type", "==", "'raw'", ":", "\n", "            ", "xy", "=", "torch", ".", "cat", "(", "[", "x", ",", "guide", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "xy", "=", "x", "\n", "\n", "", "if", "self", ".", "channel_attention", ":", "\n", "            ", "xy", "=", "self", ".", "SE_block", "(", "xy", ")", "\n", "\n", "", "residual", "=", "self", ".", "comb_conv", "(", "xy", ")", "\n", "return", "self", ".", "reduce", "(", "residual", "+", "depth", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.GuideDepth.GuideDepth.__init__": [[10, 41], ["torch.Module.__init__", "model.DDRNet_23_slim.DualResNet_Backbone", "model.modules.Guided_Upsampling_Block", "model.modules.Guided_Upsampling_Block", "model.modules.Guided_Upsampling_Block"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__init__", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet_Backbone"], ["    ", "def", "__init__", "(", "self", ",", "\n", "pretrained", "=", "True", ",", "\n", "up_features", "=", "[", "64", ",", "32", ",", "16", "]", ",", "\n", "inner_features", "=", "[", "64", ",", "32", ",", "16", "]", ")", ":", "\n", "        ", "super", "(", "GuideDepth", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "feature_extractor", "=", "DualResNet_Backbone", "(", "\n", "pretrained", "=", "pretrained", ",", "\n", "features", "=", "up_features", "[", "0", "]", ")", "\n", "\n", "self", ".", "up_1", "=", "Guided_Upsampling_Block", "(", "in_features", "=", "up_features", "[", "0", "]", ",", "\n", "expand_features", "=", "inner_features", "[", "0", "]", ",", "\n", "out_features", "=", "up_features", "[", "1", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "channel_attention", "=", "True", ",", "\n", "guide_features", "=", "3", ",", "\n", "guidance_type", "=", "\"full\"", ")", "\n", "self", ".", "up_2", "=", "Guided_Upsampling_Block", "(", "in_features", "=", "up_features", "[", "1", "]", ",", "\n", "expand_features", "=", "inner_features", "[", "1", "]", ",", "\n", "out_features", "=", "up_features", "[", "2", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "channel_attention", "=", "True", ",", "\n", "guide_features", "=", "3", ",", "\n", "guidance_type", "=", "\"full\"", ")", "\n", "self", ".", "up_3", "=", "Guided_Upsampling_Block", "(", "in_features", "=", "up_features", "[", "2", "]", ",", "\n", "expand_features", "=", "inner_features", "[", "2", "]", ",", "\n", "out_features", "=", "1", ",", "\n", "kernel_size", "=", "3", ",", "\n", "channel_attention", "=", "True", ",", "\n", "guide_features", "=", "3", ",", "\n", "guidance_type", "=", "\"full\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.GuideDepth.GuideDepth.forward": [[43, 58], ["GuideDepth.GuideDepth.feature_extractor", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "GuideDepth.GuideDepth.up_1", "torch.interpolate", "torch.interpolate", "torch.interpolate", "GuideDepth.GuideDepth.up_2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "GuideDepth.GuideDepth.up_3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "feature_extractor", "(", "x", ")", "\n", "\n", "x_half", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", ".5", ")", "\n", "x_quarter", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", ".25", ")", "\n", "\n", "y", "=", "F", ".", "interpolate", "(", "y", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", "\n", "y", "=", "self", ".", "up_1", "(", "x_quarter", ",", "y", ")", "\n", "\n", "y", "=", "F", ".", "interpolate", "(", "y", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", "\n", "y", "=", "self", ".", "up_2", "(", "x_half", ",", "y", ")", "\n", "\n", "y", "=", "F", ".", "interpolate", "(", "y", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ")", "\n", "y", "=", "self", ".", "up_3", "(", "x", ",", "y", ")", "\n", "return", "y", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.loader.load_model": [[6, 14], ["loader.model_builder", "torch.load", "torch.load", "model_builder.load_state_dict"], "function", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.loader.model_builder"], ["def", "load_model", "(", "model_name", ",", "weights_pth", ")", ":", "\n", "    ", "model", "=", "model_builder", "(", "model_name", ")", "\n", "\n", "if", "weights_pth", "is", "not", "None", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "weights_pth", ",", "map_location", "=", "'cpu'", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.loader.model_builder": [[15, 23], ["print", "exit", "model.GuideDepth.GuideDepth", "model.GuideDepth.GuideDepth"], "function", ["None"], ["", "def", "model_builder", "(", "model_name", ")", ":", "\n", "    ", "if", "model_name", "==", "'GuideDepth'", ":", "\n", "        ", "return", "GuideDepth", "(", "True", ")", "\n", "", "if", "model_name", "==", "'GuideDepth-S'", ":", "\n", "        ", "return", "GuideDepth", "(", "True", ",", "up_features", "=", "[", "32", ",", "8", ",", "4", "]", ",", "inner_features", "=", "[", "32", ",", "8", ",", "4", "]", ")", "\n", "\n", "", "print", "(", "\"Invalid model\"", ")", "\n", "exit", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.BasicBlock.__init__": [[43, 53], ["torch.Module.__init__", "DDRNet_23_slim.conv3x3", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "DDRNet_23_slim.conv3x3", "BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__init__", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.conv3x3", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "bn_mom", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "bn_mom", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "no_relu", "=", "no_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.BasicBlock.forward": [[54, 73], ["DDRNet_23_slim.BasicBlock.conv1", "DDRNet_23_slim.BasicBlock.bn1", "DDRNet_23_slim.BasicBlock.relu", "DDRNet_23_slim.BasicBlock.conv2", "DDRNet_23_slim.BasicBlock.bn2", "DDRNet_23_slim.BasicBlock.downsample", "DDRNet_23_slim.BasicBlock.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "\n", "if", "self", ".", "no_relu", ":", "\n", "            ", "return", "out", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "relu", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.Bottleneck.__init__": [[77, 91], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "no_relu", "=", "True", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "bn_mom", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "bn_mom", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ",", "momentum", "=", "bn_mom", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "no_relu", "=", "no_relu", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.Bottleneck.forward": [[92, 114], ["DDRNet_23_slim.Bottleneck.conv1", "DDRNet_23_slim.Bottleneck.bn1", "DDRNet_23_slim.Bottleneck.relu", "DDRNet_23_slim.Bottleneck.conv2", "DDRNet_23_slim.Bottleneck.bn2", "DDRNet_23_slim.Bottleneck.relu", "DDRNet_23_slim.Bottleneck.conv3", "DDRNet_23_slim.Bottleneck.bn3", "DDRNet_23_slim.Bottleneck.downsample", "DDRNet_23_slim.Bottleneck.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "if", "self", ".", "no_relu", ":", "\n", "            ", "return", "out", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "relu", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DAPPM.__init__": [[116, 172], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "branch_planes", ",", "outplanes", ")", ":", "\n", "        ", "super", "(", "DAPPM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale1", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "5", ",", "stride", "=", "2", ",", "padding", "=", "2", ")", ",", "\n", "BatchNorm2d", "(", "inplanes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "branch_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "self", ".", "scale2", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "9", ",", "stride", "=", "4", ",", "padding", "=", "4", ")", ",", "\n", "BatchNorm2d", "(", "inplanes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "branch_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "self", ".", "scale3", "=", "nn", ".", "Sequential", "(", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "17", ",", "stride", "=", "8", ",", "padding", "=", "8", ")", ",", "\n", "BatchNorm2d", "(", "inplanes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "branch_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "self", ".", "scale4", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", ",", "\n", "BatchNorm2d", "(", "inplanes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "branch_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "self", ".", "scale0", "=", "nn", ".", "Sequential", "(", "\n", "BatchNorm2d", "(", "inplanes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "branch_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "self", ".", "process1", "=", "nn", ".", "Sequential", "(", "\n", "BatchNorm2d", "(", "branch_planes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "branch_planes", ",", "branch_planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "self", ".", "process2", "=", "nn", ".", "Sequential", "(", "\n", "BatchNorm2d", "(", "branch_planes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "branch_planes", ",", "branch_planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "self", ".", "process3", "=", "nn", ".", "Sequential", "(", "\n", "BatchNorm2d", "(", "branch_planes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "branch_planes", ",", "branch_planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "self", ".", "process4", "=", "nn", ".", "Sequential", "(", "\n", "BatchNorm2d", "(", "branch_planes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "branch_planes", ",", "branch_planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "self", ".", "compression", "=", "nn", ".", "Sequential", "(", "\n", "BatchNorm2d", "(", "branch_planes", "*", "5", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "branch_planes", "*", "5", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "BatchNorm2d", "(", "inplanes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DAPPM.forward": [[174, 196], ["x_list.append", "x_list.append", "x_list.append", "x_list.append", "x_list.append", "DDRNet_23_slim.DAPPM.scale0", "DDRNet_23_slim.DAPPM.process1", "DDRNet_23_slim.DAPPM.process2", "DDRNet_23_slim.DAPPM.process3", "DDRNet_23_slim.DAPPM.process4", "DDRNet_23_slim.DAPPM.compression", "DDRNet_23_slim.DAPPM.shortcut", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "DDRNet_23_slim.DAPPM.scale1", "DDRNet_23_slim.DAPPM.scale2", "DDRNet_23_slim.DAPPM.scale3", "DDRNet_23_slim.DAPPM.scale4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#x = self.downsample(x)", "\n", "        ", "width", "=", "x", ".", "shape", "[", "-", "1", "]", "\n", "height", "=", "x", ".", "shape", "[", "-", "2", "]", "\n", "x_list", "=", "[", "]", "\n", "\n", "x_list", ".", "append", "(", "self", ".", "scale0", "(", "x", ")", ")", "\n", "x_list", ".", "append", "(", "self", ".", "process1", "(", "(", "F", ".", "interpolate", "(", "self", ".", "scale1", "(", "x", ")", ",", "\n", "size", "=", "[", "height", ",", "width", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "+", "x_list", "[", "0", "]", ")", ")", ")", "\n", "x_list", ".", "append", "(", "(", "self", ".", "process2", "(", "(", "F", ".", "interpolate", "(", "self", ".", "scale2", "(", "x", ")", ",", "\n", "size", "=", "[", "height", ",", "width", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "+", "x_list", "[", "1", "]", ")", ")", ")", ")", "\n", "x_list", ".", "append", "(", "self", ".", "process3", "(", "(", "F", ".", "interpolate", "(", "self", ".", "scale3", "(", "x", ")", ",", "\n", "size", "=", "[", "height", ",", "width", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "+", "x_list", "[", "2", "]", ")", ")", ")", "\n", "x_list", ".", "append", "(", "self", ".", "process4", "(", "(", "F", ".", "interpolate", "(", "self", ".", "scale4", "(", "x", ")", ",", "\n", "size", "=", "[", "height", ",", "width", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "+", "x_list", "[", "3", "]", ")", ")", ")", "\n", "out", "=", "self", ".", "compression", "(", "torch", ".", "cat", "(", "x_list", ",", "1", ")", ")", "+", "self", ".", "shortcut", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.segmenthead.__init__": [[199, 207], ["torch.Module.__init__", "BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "interplanes", ",", "outplanes", ",", "scale_factor", "=", "None", ")", ":", "\n", "        ", "super", "(", "segmenthead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "BatchNorm2d", "(", "inplanes", ",", "momentum", "=", "bn_mom", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "interplanes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "BatchNorm2d", "(", "interplanes", ",", "momentum", "=", "bn_mom", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "interplanes", ",", "outplanes", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.segmenthead.forward": [[208, 220], ["DDRNet_23_slim.segmenthead.conv1", "DDRNet_23_slim.segmenthead.conv2", "DDRNet_23_slim.segmenthead.relu", "DDRNet_23_slim.segmenthead.relu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "DDRNet_23_slim.segmenthead.bn1", "DDRNet_23_slim.segmenthead.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "self", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "self", ".", "relu", "(", "self", ".", "bn2", "(", "x", ")", ")", ")", "\n", "\n", "if", "self", ".", "scale_factor", "is", "not", "None", ":", "\n", "            ", "height", "=", "x", ".", "shape", "[", "-", "2", "]", "*", "self", ".", "scale_factor", "\n", "width", "=", "x", ".", "shape", "[", "-", "1", "]", "*", "self", ".", "scale_factor", "\n", "out", "=", "F", ".", "interpolate", "(", "out", ",", "\n", "size", "=", "[", "height", ",", "width", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet.__init__": [[222, 289], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "DDRNet_23_slim.DualResNet._make_layer", "DDRNet_23_slim.DualResNet._make_layer", "DDRNet_23_slim.DualResNet._make_layer", "DDRNet_23_slim.DualResNet._make_layer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "DDRNet_23_slim.DualResNet._make_layer", "DDRNet_23_slim.DualResNet._make_layer", "DDRNet_23_slim.DualResNet._make_layer", "DDRNet_23_slim.DualResNet._make_layer", "DDRNet_23_slim.DAPPM", "DDRNet_23_slim.segmenthead", "DDRNet_23_slim.DualResNet.modules", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm2d", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__init__", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet._make_layer", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet._make_layer", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet._make_layer", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet._make_layer", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet._make_layer", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet._make_layer", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet._make_layer", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "out_features", "=", "19", ",", "planes", "=", "64", ",", "spp_planes", "=", "128", ",", "head_planes", "=", "128", ",", "augment", "=", "False", ",", "skip_out", "=", "False", ")", ":", "\n", "        ", "super", "(", "DualResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "highres_planes", "=", "planes", "*", "2", "\n", "self", ".", "augment", "=", "augment", "\n", "self", ".", "skip_out", "=", "skip_out", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "BatchNorm2d", "(", "planes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "planes", ",", "planes", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "planes", ",", "planes", "*", "2", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "planes", "*", "2", ",", "planes", "*", "4", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "planes", "*", "4", ",", "planes", "*", "8", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "compression3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "planes", "*", "4", ",", "highres_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "highres_planes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", ")", "\n", "\n", "self", ".", "compression4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "planes", "*", "8", ",", "highres_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "highres_planes", ",", "momentum", "=", "bn_mom", ")", ",", "\n", ")", "\n", "\n", "self", ".", "down3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "highres_planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "planes", "*", "4", ",", "momentum", "=", "bn_mom", ")", ",", "\n", ")", "\n", "\n", "self", ".", "down4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "highres_planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "planes", "*", "4", ",", "momentum", "=", "bn_mom", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "planes", "*", "4", ",", "planes", "*", "8", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "planes", "*", "8", ",", "momentum", "=", "bn_mom", ")", ",", "\n", ")", "\n", "\n", "self", ".", "layer3_", "=", "self", ".", "_make_layer", "(", "block", ",", "planes", "*", "2", ",", "highres_planes", ",", "2", ")", "\n", "\n", "self", ".", "layer4_", "=", "self", ".", "_make_layer", "(", "block", ",", "highres_planes", ",", "highres_planes", ",", "2", ")", "\n", "\n", "self", ".", "layer5_", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "highres_planes", ",", "highres_planes", ",", "1", ")", "\n", "\n", "self", ".", "layer5", "=", "self", ".", "_make_layer", "(", "Bottleneck", ",", "planes", "*", "8", ",", "planes", "*", "8", ",", "1", ",", "stride", "=", "2", ")", "\n", "self", ".", "spp", "=", "DAPPM", "(", "planes", "*", "16", ",", "spp_planes", ",", "planes", "*", "4", ")", "\n", "\n", "\"\"\"\n        if self.augment:\n            self.seghead_extra = segmenthead(highres_planes, head_planes, out_features)\n        \"\"\"", "\n", "self", ".", "final_layer", "=", "segmenthead", "(", "planes", "*", "4", ",", "head_planes", ",", "out_features", ")", "\n", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet._make_layer": [[291, 310], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "layers.append", "layers.append", "block", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "inplanes", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ",", "momentum", "=", "bn_mom", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "if", "i", "==", "(", "blocks", "-", "1", ")", ":", "\n", "                ", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "no_relu", "=", "True", ")", ")", "\n", "", "else", ":", "\n", "                ", "layers", ".", "append", "(", "block", "(", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "no_relu", "=", "False", ")", ")", "\n", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet.forward": [[312, 355], ["DDRNet_23_slim.DualResNet.conv1", "DDRNet_23_slim.DualResNet.layer1", "layers.append", "DDRNet_23_slim.DualResNet.layer2", "layers.append", "DDRNet_23_slim.DualResNet.layer3", "layers.append", "DDRNet_23_slim.DualResNet.layer3_", "DDRNet_23_slim.DualResNet.layer4", "layers.append", "DDRNet_23_slim.DualResNet.layer4_", "DDRNet_23_slim.DualResNet.layer5_", "torch.interpolate", "torch.interpolate", "torch.interpolate", "DDRNet_23_slim.DualResNet.final_layer", "DDRNet_23_slim.DualResNet.relu", "DDRNet_23_slim.DualResNet.relu", "DDRNet_23_slim.DualResNet.relu", "DDRNet_23_slim.DualResNet.down3", "torch.interpolate", "torch.interpolate", "torch.interpolate", "DDRNet_23_slim.DualResNet.relu", "DDRNet_23_slim.DualResNet.relu", "DDRNet_23_slim.DualResNet.down4", "torch.interpolate", "torch.interpolate", "torch.interpolate", "DDRNet_23_slim.DualResNet.relu", "DDRNet_23_slim.DualResNet.spp", "DDRNet_23_slim.DualResNet.relu", "DDRNet_23_slim.DualResNet.compression3", "DDRNet_23_slim.DualResNet.relu", "DDRNet_23_slim.DualResNet.compression4", "DDRNet_23_slim.DualResNet.layer5", "DDRNet_23_slim.DualResNet.relu", "DDRNet_23_slim.DualResNet.relu", "DDRNet_23_slim.DualResNet.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "width_output", "=", "x", ".", "shape", "[", "-", "1", "]", "//", "8", "\n", "height_output", "=", "x", ".", "shape", "[", "-", "2", "]", "//", "8", "\n", "layers", "=", "[", "]", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "if", "self", ".", "skip_out", ":", "\n", "            ", "x1", "=", "x", "\n", "\n", "", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "layers", ".", "append", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer2", "(", "self", ".", "relu", "(", "x", ")", ")", "\n", "layers", ".", "append", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer3", "(", "self", ".", "relu", "(", "x", ")", ")", "\n", "layers", ".", "append", "(", "x", ")", "\n", "x_", "=", "self", ".", "layer3_", "(", "self", ".", "relu", "(", "layers", "[", "1", "]", ")", ")", "\n", "\n", "x", "=", "x", "+", "self", ".", "down3", "(", "self", ".", "relu", "(", "x_", ")", ")", "\n", "x_", "=", "x_", "+", "F", ".", "interpolate", "(", "\n", "self", ".", "compression3", "(", "self", ".", "relu", "(", "layers", "[", "2", "]", ")", ")", ",", "\n", "size", "=", "[", "height_output", ",", "width_output", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "\n", "x", "=", "self", ".", "layer4", "(", "self", ".", "relu", "(", "x", ")", ")", "\n", "layers", ".", "append", "(", "x", ")", "\n", "x_", "=", "self", ".", "layer4_", "(", "self", ".", "relu", "(", "x_", ")", ")", "\n", "\n", "x", "=", "x", "+", "self", ".", "down4", "(", "self", ".", "relu", "(", "x_", ")", ")", "\n", "x_", "=", "x_", "+", "F", ".", "interpolate", "(", "\n", "self", ".", "compression4", "(", "self", ".", "relu", "(", "layers", "[", "3", "]", ")", ")", ",", "\n", "size", "=", "[", "height_output", ",", "width_output", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "\n", "x_", "=", "self", ".", "layer5_", "(", "self", ".", "relu", "(", "x_", ")", ")", "\n", "x", "=", "F", ".", "interpolate", "(", "\n", "self", ".", "spp", "(", "self", ".", "layer5", "(", "self", ".", "relu", "(", "x", ")", ")", ")", ",", "\n", "size", "=", "[", "height_output", ",", "width_output", "]", ",", "\n", "mode", "=", "'bilinear'", ")", "\n", "\n", "x_", "=", "self", ".", "final_layer", "(", "x", "+", "x_", ")", "\n", "return", "x_", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.Interpolate.__init__": [[368, 372], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale_factor", ",", "mode", "=", "'bilinear'", ")", ":", "\n", "        ", "super", "(", "Interpolate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale_factor", "=", "scale_factor", "\n", "self", ".", "mode", "=", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.Interpolate.forward": [[374, 376], ["torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "interpolate", "(", "x", ",", "self", ".", "scale_factor", ",", "mode", "=", "self", ".", "mode", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.depthwise": [[19, 26], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "function", ["None"], ["def", "depthwise", "(", "in_channels", ",", "kernel_size", ")", ":", "\n", "    ", "padding", "=", "(", "kernel_size", "-", "1", ")", "//", "2", "\n", "assert", "2", "*", "padding", "==", "kernel_size", "-", "1", ",", "\"parameters incorrect. kernel={}, padding={}\"", ".", "format", "(", "kernel_size", ",", "padding", ")", "\n", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "padding", ",", "bias", "=", "False", ",", "groups", "=", "in_channels", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.pointwise": [[28, 33], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "function", ["None"], ["", "def", "pointwise", "(", "in_channels", ",", "out_channels", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.conv3x3": [[35, 39], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.model.DDRNet_23_slim.DualResNet_Backbone": [[357, 366], ["DDRNet_23_slim.DualResNet", "torch.load", "torch.load", "torch.load", "DualResNet.load_state_dict"], "function", ["None"], ["", "", "def", "DualResNet_Backbone", "(", "pretrained", "=", "False", ",", "features", "=", "64", ")", ":", "\n", "    ", "model", "=", "DualResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "out_features", "=", "features", ",", "\n", "planes", "=", "32", ",", "spp_planes", "=", "128", ",", "head_planes", "=", "64", ",", "augment", "=", "False", ")", "\n", "if", "pretrained", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "'./model/weights/'", "+", "\"DDRNet23s_imagenet.pth\"", ",", "\n", "map_location", "=", "'cpu'", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", ",", "strict", "=", "False", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.RandomHorizontalFlip.__call__": [[19, 34], ["transforms._is_pil_image", "TypeError", "transforms._is_pil_image", "TypeError", "random.random", "image.transpose.transpose.transpose", "depth.transpose.transpose.transpose", "type", "type"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms._is_pil_image", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms._is_pil_image"], ["    ", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "depth", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'depth'", "]", "\n", "\n", "if", "not", "_is_pil_image", "(", "image", ")", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "'img should be PIL Image. Got {}'", ".", "format", "(", "type", "(", "image", ")", ")", ")", "\n", "", "if", "not", "_is_pil_image", "(", "depth", ")", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "'img should be PIL Image. Got {}'", ".", "format", "(", "type", "(", "depth", ")", ")", ")", "\n", "\n", "", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "image", "=", "image", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "depth", "=", "depth", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.RandomVerticalFlip.__call__": [[38, 53], ["transforms._is_pil_image", "TypeError", "transforms._is_pil_image", "TypeError", "random.random", "image.transpose.transpose.transpose", "depth.transpose.transpose.transpose", "type", "type"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms._is_pil_image", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms._is_pil_image"], ["    ", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "depth", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'depth'", "]", "\n", "\n", "if", "not", "_is_pil_image", "(", "image", ")", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "'img should be PIL Image. Got {}'", ".", "format", "(", "type", "(", "image", ")", ")", ")", "\n", "", "if", "not", "_is_pil_image", "(", "depth", ")", ":", "\n", "            ", "raise", "TypeError", "(", "\n", "'img should be PIL Image. Got {}'", ".", "format", "(", "type", "(", "depth", ")", ")", ")", "\n", "\n", "", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "image", "=", "image", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "depth", "=", "depth", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "\n", "", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.RandomChannelSwap.__init__": [[56, 60], ["list", "permutations", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "probability", ")", ":", "\n", "        ", "from", "itertools", "import", "permutations", "\n", "self", ".", "probability", "=", "probability", "\n", "self", ".", "indices", "=", "list", "(", "permutations", "(", "range", "(", "3", ")", ",", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.RandomChannelSwap.__call__": [[61, 71], ["transforms._is_pil_image", "TypeError", "transforms._is_pil_image", "TypeError", "random.random", "numpy.asarray", "PIL.Image.fromarray", "type", "type", "list", "random.randint", "len"], "methods", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms._is_pil_image", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms._is_pil_image"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "depth", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'depth'", "]", "\n", "if", "not", "_is_pil_image", "(", "image", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'img should be PIL Image. Got {}'", ".", "format", "(", "type", "(", "image", ")", ")", ")", "\n", "", "if", "not", "_is_pil_image", "(", "depth", ")", ":", "\n", "            ", "raise", "TypeError", "(", "'img should be PIL Image. Got {}'", ".", "format", "(", "type", "(", "depth", ")", ")", ")", "\n", "", "if", "random", ".", "random", "(", ")", "<", "self", ".", "probability", ":", "\n", "            ", "image", "=", "np", ".", "asarray", "(", "image", ")", "\n", "image", "=", "Image", ".", "fromarray", "(", "image", "[", "...", ",", "list", "(", "self", ".", "indices", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "indices", ")", "-", "1", ")", "]", ")", "]", ")", "\n", "", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.ToTensor.__init__": [[75, 78], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "test", "=", "False", ",", "maxDepth", "=", "1000.0", ")", ":", "\n", "        ", "self", ".", "test", "=", "test", "\n", "self", ".", "maxDepth", "=", "maxDepth", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.ToTensor.__call__": [[79, 107], ["torchvision.transforms.ToTensor", "torch.clamp", "numpy.array().astype", "numpy.array().astype", "torch.clamp", "numpy.array().astype", "torchvision.transforms.ToTensor.", "torchvision.transforms.ToTensor.", "numpy.array().astype", "torchvision.transforms.ToTensor.", "torchvision.transforms.ToTensor.", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "depth", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'depth'", "]", "\n", "transformation", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "\n", "if", "self", ".", "test", ":", "\n", "            ", "\"\"\"\n            If test, move image to [0,1] and depth to [0, 1]\n            \"\"\"", "\n", "image", "=", "np", ".", "array", "(", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", "\n", "depth", "=", "np", ".", "array", "(", "depth", ")", ".", "astype", "(", "np", ".", "float32", ")", "#/ self.maxDepth #Why / maxDepth?", "\n", "image", ",", "depth", "=", "transformation", "(", "image", ")", ",", "transformation", "(", "depth", ")", "\n", "", "else", ":", "\n", "#Fix for PLI=8.3.0", "\n", "            ", "image", "=", "np", ".", "array", "(", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", "\n", "depth", "=", "np", ".", "array", "(", "depth", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "#For train use DepthNorm", "\n", "zero_mask", "=", "depth", "==", "0.0", "\n", "image", ",", "depth", "=", "transformation", "(", "image", ")", ",", "transformation", "(", "depth", ")", "\n", "depth", "=", "torch", ".", "clamp", "(", "depth", ",", "self", ".", "maxDepth", "/", "100.0", ",", "self", ".", "maxDepth", ")", "\n", "depth", "=", "self", ".", "maxDepth", "/", "depth", "\n", "depth", "[", ":", ",", "zero_mask", "]", "=", "0.0", "\n", "\n", "#print('Depth after, min: {} max: {}'.format(depth.min(), depth.max()))", "\n", "#print('Image, min: {} max: {}'.format(image.min(), image.max()))", "\n", "\n", "", "image", "=", "torch", ".", "clamp", "(", "image", ",", "0.0", ",", "1.0", ")", "\n", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.CenterCrop.__init__": [[114, 116], ["torchvision.transforms.CenterCrop"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "output_resolution", ")", ":", "\n", "        ", "self", ".", "crop", "=", "transforms", ".", "CenterCrop", "(", "output_resolution", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.CenterCrop.__call__": [[117, 128], ["isinstance", "isinstance", "torchvision.transforms.CenterCrop.crop", "torchvision.transforms.CenterCrop.crop", "PIL.Image.fromarray", "PIL.Image.fromarray", "numpy.uint8"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "depth", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'depth'", "]", "\n", "\n", "if", "isinstance", "(", "image", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "image", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "image", ")", ")", "\n", "", "if", "isinstance", "(", "depth", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "depth", "=", "Image", ".", "fromarray", "(", "depth", ")", "\n", "", "image", "=", "self", ".", "crop", "(", "image", ")", "\n", "depth", "=", "self", ".", "crop", "(", "depth", ")", "\n", "\n", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.Resize.__init__": [[135, 137], ["torchvision.transforms.Resize"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "output_resolution", ")", ":", "\n", "        ", "self", ".", "resize", "=", "transforms", ".", "Resize", "(", "output_resolution", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.Resize.__call__": [[138, 150], ["isinstance", "isinstance", "torchvision.transforms.Resize.resize", "torchvision.transforms.Resize.resize", "PIL.Image.fromarray", "PIL.Image.fromarray", "numpy.uint8"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "depth", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'depth'", "]", "\n", "\n", "if", "isinstance", "(", "image", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "image", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "image", ")", ")", "\n", "", "if", "isinstance", "(", "depth", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "depth", "=", "Image", ".", "fromarray", "(", "depth", ")", "\n", "\n", "", "image", "=", "self", ".", "resize", "(", "image", ")", "\n", "depth", "=", "self", ".", "resize", "(", "depth", ")", "\n", "\n", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.RandomRotation.__init__": [[157, 159], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "degrees", ")", ":", "\n", "        ", "self", ".", "angle", "=", "degrees", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.RandomRotation.__call__": [[160, 173], ["random.uniform", "isinstance", "isinstance", "torchvision.transforms.functional.rotate", "torchvision.transforms.functional.rotate", "PIL.Image.fromarray", "PIL.Image.fromarray", "numpy.uint8"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "depth", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'depth'", "]", "\n", "angle", "=", "random", ".", "uniform", "(", "-", "self", ".", "angle", ",", "self", ".", "angle", ")", "\n", "\n", "if", "isinstance", "(", "image", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "image", "=", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "image", ")", ")", "\n", "", "if", "isinstance", "(", "depth", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "depth", "=", "Image", ".", "fromarray", "(", "depth", ")", "\n", "\n", "", "image", "=", "transforms", ".", "functional", ".", "rotate", "(", "image", ",", "angle", ")", "\n", "depth", "=", "transforms", ".", "functional", ".", "rotate", "(", "depth", ",", "angle", ")", "\n", "\n", "return", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms._is_pil_image": [[8, 10], ["isinstance"], "function", ["None"], ["def", "_is_pil_image", "(", "img", ")", ":", "\n", "    ", "return", "isinstance", "(", "img", ",", "Image", ".", "Image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms._is_numpy_image": [[13, 15], ["isinstance"], "function", ["None"], ["", "def", "_is_numpy_image", "(", "img", ")", ":", "\n", "    ", "return", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", "and", "(", "img", ".", "ndim", "in", "{", "2", ",", "3", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.transforms.DepthNorm": [[176, 178], ["None"], "function", ["None"], ["", "", "def", "DepthNorm", "(", "depth", ",", "maxDepth", "=", "1000.0", ")", ":", "\n", "    ", "return", "maxDepth", "/", "depth", "\n", "", ""]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.depthDatasetMemory.__init__": [[19, 23], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "split", ",", "nyu2_train", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "data", ",", "self", ".", "nyu_dataset", "=", "data", ",", "nyu2_train", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "split", "=", "split", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.depthDatasetMemory.__getitem__": [[24, 41], ["PIL.Image.open", "PIL.Image.open", "numpy.array().astype", "numpy.array().astype", "io.BytesIO", "io.BytesIO", "nyu_reduced.depthDatasetMemory.transform", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "sample", "=", "self", ".", "nyu_dataset", "[", "idx", "]", "\n", "image", "=", "Image", ".", "open", "(", "BytesIO", "(", "self", ".", "data", "[", "sample", "[", "0", "]", "]", ")", ")", "\n", "depth", "=", "Image", ".", "open", "(", "BytesIO", "(", "self", ".", "data", "[", "sample", "[", "1", "]", "]", ")", ")", "\n", "image", "=", "np", ".", "array", "(", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "depth", "=", "np", ".", "array", "(", "depth", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "if", "self", ".", "split", "==", "'train'", ":", "\n", "            ", "depth", "=", "depth", "/", "255.0", "*", "10.0", "#From 8bit to range [0, 10] (meter)", "\n", "", "elif", "self", ".", "split", "==", "'val'", ":", "\n", "            ", "depth", "=", "depth", "*", "0.001", "\n", "\n", "", "sample", "=", "{", "'image'", ":", "image", ",", "'depth'", ":", "depth", "}", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.depthDatasetMemory.__len__": [[42, 44], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "nyu_dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.NYU_Testset_Extracted.__init__": [[46, 51], ["os.listdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "resolution", "=", "'full'", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "resolution", "=", "resolution_dict", "[", "resolution", "]", "\n", "\n", "self", ".", "files", "=", "os", ".", "listdir", "(", "self", ".", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.NYU_Testset_Extracted.__getitem__": [[53, 64], ["os.path.join", "numpy.load", "numpy.expand_dims", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "files", "[", "index", "]", ")", "\n", "\n", "data", "=", "np", ".", "load", "(", "image_path", ")", "\n", "depth", ",", "image", "=", "data", "[", "'depth'", "]", ",", "data", "[", "'image'", "]", "\n", "depth", "=", "np", ".", "expand_dims", "(", "depth", ",", "axis", "=", "2", ")", "\n", "\n", "image", ",", "depth", "=", "data", "[", "'image'", "]", ",", "data", "[", "'depth'", "]", "\n", "image", "=", "np", ".", "array", "(", "image", ")", "\n", "depth", "=", "np", ".", "array", "(", "depth", ")", "\n", "return", "image", ",", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.NYU_Testset_Extracted.__len__": [[65, 67], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.NYU_Testset.__init__": [[71, 77], ["zipfile.ZipFile", "torch.from_numpy().type", "torch.from_numpy().type", "zipfile.ZipFile.read", "zipfile.ZipFile.namelist", "torch.from_numpy", "torch.from_numpy", "numpy.load", "numpy.load", "io.BytesIO", "io.BytesIO"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "zip_path", ")", ":", "\n", "        ", "input_zip", "=", "ZipFile", "(", "zip_path", ")", "\n", "data", "=", "{", "name", ":", "input_zip", ".", "read", "(", "name", ")", "for", "name", "in", "input_zip", ".", "namelist", "(", ")", "}", "\n", "\n", "self", ".", "rgb", "=", "torch", ".", "from_numpy", "(", "np", ".", "load", "(", "BytesIO", "(", "data", "[", "'eigen_test_rgb.npy'", "]", ")", ")", ")", ".", "type", "(", "torch", ".", "float32", ")", "#Range [0,1]", "\n", "self", ".", "depth", "=", "torch", ".", "from_numpy", "(", "np", ".", "load", "(", "BytesIO", "(", "data", "[", "'eigen_test_depth.npy'", "]", ")", ")", ")", ".", "type", "(", "torch", ".", "float32", ")", "#Range[0, 10]", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.NYU_Testset.__getitem__": [[78, 82], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image", "=", "self", ".", "rgb", "[", "idx", "]", "\n", "depth", "=", "self", ".", "depth", "[", "idx", "]", "\n", "return", "image", ",", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.NYU_Testset.__len__": [[83, 85], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "rgb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.loadZipToMem": [[88, 102], ["print", "zipfile.ZipFile", "list", "list", "print", "zipfile.ZipFile.read", "zipfile.ZipFile.namelist", "row.split", "row.split", "len", "len", "data[].decode().split", "data[].decode().split", "len", "len", "data[].decode", "data[].decode"], "function", ["None"], ["", "", "def", "loadZipToMem", "(", "zip_file", ")", ":", "\n", "# Load zip file into memory", "\n", "    ", "print", "(", "'Loading dataset zip file...'", ",", "end", "=", "''", ")", "\n", "input_zip", "=", "ZipFile", "(", "zip_file", ")", "\n", "data", "=", "{", "name", ":", "input_zip", ".", "read", "(", "name", ")", "for", "name", "in", "input_zip", ".", "namelist", "(", ")", "}", "\n", "nyu2_train", "=", "list", "(", "(", "row", ".", "split", "(", "','", ")", "for", "row", "in", "(", "data", "[", "'data/nyu2_train.csv'", "]", ")", ".", "decode", "(", "\"utf-8\"", ")", ".", "split", "(", "'\\n'", ")", "if", "len", "(", "row", ")", ">", "0", ")", ")", "\n", "nyu2_test", "=", "list", "(", "(", "row", ".", "split", "(", "','", ")", "for", "row", "in", "(", "data", "[", "'data/nyu2_test.csv'", "]", ")", ".", "decode", "(", "\"utf-8\"", ")", ".", "split", "(", "'\\n'", ")", "if", "len", "(", "row", ")", ">", "0", ")", ")", "\n", "\n", "#Debugging", "\n", "#if True: nyu2_train = nyu2_train[:100]", "\n", "#if True: nyu2_test = nyu2_test[:100]", "\n", "\n", "print", "(", "'Loaded (Train Images: {0}, Test Images: {1}).'", ".", "format", "(", "len", "(", "nyu2_train", ")", ",", "len", "(", "nyu2_test", ")", ")", ")", "\n", "return", "data", ",", "nyu2_train", ",", "nyu2_test", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.train_transform": [[104, 112], ["torchvision.Compose", "data.transforms.Resize", "data.transforms.RandomHorizontalFlip", "data.transforms.RandomChannelSwap", "data.transforms.ToTensor"], "function", ["None"], ["", "def", "train_transform", "(", "resolution", ")", ":", "\n", "    ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "Resize", "(", "resolution", ")", ",", "\n", "RandomHorizontalFlip", "(", ")", ",", "\n", "RandomChannelSwap", "(", "0.5", ")", ",", "\n", "ToTensor", "(", "test", "=", "False", ",", "maxDepth", "=", "10.0", ")", "\n", "]", ")", "\n", "return", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.val_transform": [[113, 119], ["torchvision.Compose", "data.transforms.Resize", "data.transforms.ToTensor"], "function", ["None"], ["", "def", "val_transform", "(", "resolution", ")", ":", "\n", "    ", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "Resize", "(", "resolution", ")", ",", "\n", "ToTensor", "(", "test", "=", "True", ",", "maxDepth", "=", "10.0", ")", "\n", "]", ")", "\n", "return", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.get_NYU_dataset": [[121, 140], ["nyu_reduced.loadZipToMem", "nyu_reduced.train_transform", "nyu_reduced.depthDatasetMemory", "nyu_reduced.loadZipToMem", "nyu_reduced.val_transform", "nyu_reduced.depthDatasetMemory", "nyu_reduced.NYU_Testset_Extracted", "nyu_reduced.NYU_Testset"], "function", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.loadZipToMem", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.train_transform", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.loadZipToMem", "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.val_transform"], ["", "def", "get_NYU_dataset", "(", "zip_path", ",", "split", ",", "resolution", "=", "'full'", ",", "uncompressed", "=", "False", ")", ":", "\n", "    ", "resolution", "=", "resolution_dict", "[", "resolution", "]", "\n", "if", "split", "==", "'train'", ":", "\n", "        ", "data", ",", "nyu2_train", ",", "nyu2_test", "=", "loadZipToMem", "(", "zip_path", ")", "\n", "\n", "transform", "=", "train_transform", "(", "resolution", ")", "\n", "dataset", "=", "depthDatasetMemory", "(", "data", ",", "split", ",", "nyu2_train", ",", "transform", "=", "transform", ")", "\n", "", "elif", "split", "==", "'val'", ":", "\n", "        ", "data", ",", "nyu2_train", ",", "nyu2_test", "=", "loadZipToMem", "(", "zip_path", ")", "\n", "\n", "transform", "=", "val_transform", "(", "resolution", ")", "\n", "dataset", "=", "depthDatasetMemory", "(", "data", ",", "split", ",", "nyu2_test", ",", "transform", "=", "transform", ")", "\n", "", "elif", "split", "==", "'test'", ":", "\n", "        ", "if", "uncompressed", ":", "\n", "            ", "dataset", "=", "NYU_Testset_Extracted", "(", "zip_path", ")", "\n", "", "else", ":", "\n", "            ", "dataset", "=", "NYU_Testset", "(", "zip_path", ")", "\n", "\n", "", "", "return", "dataset", "\n", "", ""]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__init__": [[15, 36], ["os.listdir", "os.path.join", "os.path.join", "os.path.join", "data.transforms.CenterCrop"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "split", ",", "resolution", "=", "'full'", ",", "augmentation", "=", "'alhashim'", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "resolution", "=", "resolution_dict", "[", "resolution", "]", "\n", "self", ".", "augmentation", "=", "augmentation", "\n", "\n", "if", "split", "==", "'train'", ":", "\n", "            ", "self", ".", "transform", "=", "self", ".", "train_transform", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'train'", ")", "\n", "", "elif", "split", "==", "'val'", ":", "\n", "            ", "self", ".", "transform", "=", "self", ".", "val_transform", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'val'", ")", "\n", "", "elif", "split", "==", "'test'", ":", "\n", "            ", "if", "self", ".", "augmentation", "==", "'alhashim'", ":", "\n", "                ", "self", ".", "transform", "=", "None", "\n", "", "else", ":", "\n", "                ", "self", ".", "transform", "=", "CenterCrop", "(", "self", ".", "resolution", ")", "\n", "\n", "", "self", ".", "root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'test'", ")", "\n", "\n", "", "self", ".", "files", "=", "os", ".", "listdir", "(", "self", ".", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__getitem__": [[38, 52], ["os.path.join", "numpy.load", "kitti.KITTIDataset.transform", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "files", "[", "index", "]", ")", "\n", "\n", "data", "=", "np", ".", "load", "(", "image_path", ")", "\n", "depth", ",", "image", "=", "data", "[", "'depth'", "]", ",", "data", "[", "'image'", "]", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "data", "=", "self", ".", "transform", "(", "data", ")", "\n", "\n", "", "image", ",", "depth", "=", "data", "[", "'image'", "]", ",", "data", "[", "'depth'", "]", "\n", "if", "self", ".", "split", "==", "'test'", ":", "\n", "            ", "image", "=", "np", ".", "array", "(", "image", ")", "\n", "depth", "=", "np", ".", "array", "(", "depth", ")", "\n", "", "return", "image", ",", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.__len__": [[53, 55], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.train_transform": [[57, 77], ["torchvision.transforms.Compose.", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "transform.transforms.Resize", "transform.transforms.RandomHorizontalFlip", "transform.transforms.RandomChannelSwap", "transform.transforms.ToTensor", "transform.transforms.RandomRotation", "transform.transforms.CenterCrop", "transform.transforms.RandomHorizontalFlip", "transform.transforms.RandomVerticalFlip", "transform.transforms.RandomChannelSwap", "transform.transforms.ToTensor"], "methods", ["None"], ["", "def", "train_transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "augmentation", "==", "'alhashim'", ":", "\n", "            ", "transform", "=", "Compose", "(", "[", "\n", "Resize", "(", "self", ".", "resolution", ")", ",", "\n", "RandomHorizontalFlip", "(", ")", ",", "\n", "RandomChannelSwap", "(", "0.25", ")", ",", "\n", "ToTensor", "(", "test", "=", "False", ",", "maxDepth", "=", "80.0", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "Compose", "(", "[", "\n", "RandomRotation", "(", "4.5", ")", ",", "\n", "CenterCrop", "(", "self", ".", "resolution", ")", ",", "\n", "RandomHorizontalFlip", "(", ")", ",", "\n", "RandomVerticalFlip", "(", ")", ",", "\n", "RandomChannelSwap", "(", "0.25", ")", ",", "\n", "ToTensor", "(", "test", "=", "False", ",", "maxDepth", "=", "80.0", ")", "\n", "]", ")", "\n", "\n", "", "data", "=", "transform", "(", "data", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.kitti.KITTIDataset.val_transform": [[78, 92], ["torchvision.transforms.Compose.", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "transform.transforms.Resize", "transform.transforms.ToTensor", "transform.transforms.CenterCrop", "transform.transforms.ToTensor"], "methods", ["None"], ["", "def", "val_transform", "(", "self", ",", "data", ")", ":", "\n", "        ", "if", "self", ".", "augmentation", "==", "'alhashim'", ":", "\n", "            ", "transform", "=", "Compose", "(", "[", "\n", "Resize", "(", "self", ".", "resolution", ")", ",", "\n", "ToTensor", "(", "test", "=", "True", ",", "maxDepth", "=", "80.0", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "transform", "=", "Compose", "(", "[", "\n", "CenterCrop", "(", "self", ".", "resolution", ")", ",", "\n", "ToTensor", "(", "test", "=", "True", ",", "maxDepth", "=", "80.0", ")", "\n", "]", ")", "\n", "\n", "", "data", "=", "transform", "(", "data", ")", "\n", "return", "data", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.datasets.get_dataloader": [[12, 40], ["torch.utils.data.DataLoader", "data.kitti.KITTIDataset", "data.nyu_reduced.get_NYU_dataset", "print", "exit"], "function", ["home.repos.pwc.inspect_result.mic-rud_guideddecoding.data.nyu_reduced.get_NYU_dataset"], ["def", "get_dataloader", "(", "dataset_name", ",", "\n", "path", ",", "\n", "split", "=", "'train'", ",", "\n", "resolution", "=", "'full'", ",", "\n", "augmentation", "=", "'alhashim'", ",", "\n", "interpolation", "=", "'linear'", ",", "\n", "batch_size", "=", "8", ",", "\n", "workers", "=", "4", ",", "\n", "uncompressed", "=", "False", ")", ":", "\n", "    ", "if", "dataset_name", "==", "'kitti'", ":", "\n", "        ", "dataset", "=", "KITTIDataset", "(", "path", ",", "\n", "split", ",", "\n", "resolution", "=", "resolution", ")", "\n", "", "elif", "dataset_name", "==", "'nyu_reduced'", ":", "\n", "        ", "dataset", "=", "get_NYU_dataset", "(", "path", ",", "\n", "split", ",", "\n", "resolution", "=", "resolution", ",", "\n", "uncompressed", "=", "uncompressed", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Dataset not existant'", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "", "dataloader", "=", "DataLoader", "(", "dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "(", "split", "==", "'train'", ")", ",", "\n", "num_workers", "=", "workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "return", "dataloader", "\n", "", ""]]}