{"home.repos.pwc.inspect_result.romainloiseau_Helix4D.None.ablations.overide_config": [[11, 13], ["str", "dico.items"], "function", ["None"], ["def", "overide_config", "(", "base", ",", "dico", ")", ":", "\n", "    ", "return", "base", "+", "\" \"", ".", "join", "(", "[", "f\"{k}=\"", "+", "str", "(", "v", ")", "for", "k", ",", "v", "in", "dico", ".", "items", "(", ")", "]", ")", "+", "\" \"", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.None.main.main": [[20, 43], ["hydra.main", "logger.info", "hydra.utils.instantiate", "hydra.utils.instantiate", "helix4d.trainers.get_trainer", "pytorch_lightning.seed_everything", "print", "getattr", "omegaconf.OmegaConf.to_yaml", "hydra.utils.instantiate.load_state_dict", "torch.load", "torch.load"], "function", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.None.main.main", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.trainers.zoo.get_trainer"], ["@", "hydra", ".", "main", "(", "config_path", "=", "\"configs\"", ",", "config_name", "=", "\"defaults\"", ")", "\n", "def", "main", "(", "cfg", ":", "DictConfig", ")", "->", "None", ":", "\n", "    ", "if", "cfg", ".", "seed", "!=", "0", ":", "\n", "        ", "pl", ".", "seed_everything", "(", "cfg", ".", "seed", ")", "\n", "", "logger", ".", "info", "(", "\"\\n\"", "+", "OmegaConf", ".", "to_yaml", "(", "cfg", ")", ")", "\n", "\n", "model", "=", "hydra", ".", "utils", ".", "instantiate", "(", "\n", "cfg", ".", "model", ",", "\n", "_recursive_", "=", "False", ",", "\n", ")", "\n", "\n", "if", "\"helixnet\"", "in", "cfg", ".", "data", ".", "_target_", ":", "\n", "        ", "cfg", ".", "data", ".", "_target_", "=", "f\"HelixNet.{cfg.data._target_}\"", "\n", "", "datamodule", "=", "hydra", ".", "utils", ".", "instantiate", "(", "cfg", ".", "data", ")", "\n", "\n", "trainer", "=", "get_trainer", "(", "cfg", ")", "\n", "\n", "if", "cfg", ".", "model", ".", "load_weights", "!=", "\"\"", ":", "\n", "        ", "print", "(", "f\"Loading weights from '{cfg.model.load_weights}'\"", ")", "\n", "for", "gpu", "in", "cfg", ".", "trainer", ".", "gpus", ":", "\n", "            ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "cfg", ".", "model", ".", "load_weights", ",", "map_location", "=", "f\"cuda:{gpu}\"", ")", "[", "'state_dict'", "]", ")", "\n", "\n", "", "", "getattr", "(", "trainer", ",", "cfg", ".", "mode", ")", "(", "model", ",", "datamodule", "=", "datamodule", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.semantickitti.apply_learning_map": [[7, 12], ["copy.deepcopy", "f.items"], "function", ["None"], ["def", "apply_learning_map", "(", "segmentation", ",", "f", ")", ":", "\n", "    ", "mapped", "=", "copy", ".", "deepcopy", "(", "segmentation", ")", "\n", "for", "k", ",", "v", "in", "f", ".", "items", "(", ")", ":", "\n", "        ", "mapped", "[", "segmentation", "==", "k", "]", "=", "v", "\n", "", "return", "mapped", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.semantickitti.from_sem_to_color": [[13, 19], ["torch.zeros().int", "f.items", "torch.tensor().int", "torch.zeros", "torch.tensor", "list", "segmentation.size"], "function", ["None"], ["", "def", "from_sem_to_color", "(", "segmentation", ",", "f", ")", ":", "\n", "    ", "color", "=", "torch", ".", "zeros", "(", "list", "(", "segmentation", ".", "size", "(", ")", ")", "+", "[", "3", "]", ")", ".", "int", "(", ")", "\n", "color", "[", "...", ",", "0", "]", "=", "255", "\n", "for", "k", ",", "v", "in", "f", ".", "items", "(", ")", ":", "\n", "        ", "color", "[", "segmentation", "==", "k", "]", "=", "torch", ".", "tensor", "(", "v", ")", ".", "int", "(", ")", "\n", "", "return", "color", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.semantickitti.from_inst_to_color": [[20, 32], ["numpy.random.uniform", "numpy.full", "torch.tensor().int", "torch.zeros().int", "torch.unique", "instance.flatten", "torch.tensor", "torch.zeros", "list", "instance.size"], "function", ["None"], ["", "def", "from_inst_to_color", "(", "instance", ")", ":", "\n", "    ", "max_inst_id", "=", "100000", "\n", "inst_color", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0.0", ",", "\n", "high", "=", "1.0", ",", "\n", "size", "=", "(", "max_inst_id", ",", "3", ")", ")", "\n", "inst_color", "[", "0", "]", "=", "np", ".", "full", "(", "(", "3", ")", ",", "0.1", ")", "\n", "inst_color", "=", "torch", ".", "tensor", "(", "255", "*", "inst_color", ")", ".", "int", "(", ")", "\n", "\n", "color", "=", "torch", ".", "zeros", "(", "list", "(", "instance", ".", "size", "(", ")", ")", "+", "[", "3", "]", ")", ".", "int", "(", ")", "\n", "for", "k", "in", "torch", ".", "unique", "(", "instance", ".", "flatten", "(", ")", ")", ":", "\n", "        ", "color", "[", "instance", "==", "k", "]", "=", "inst_color", "[", "k", "]", "\n", "", "return", "color", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.cylindric.cart2cyl": [[4, 8], ["numpy.sqrt", "numpy.arctan2", "numpy.stack"], "function", ["None"], ["def", "cart2cyl", "(", "input_xyz", ")", ":", "\n", "    ", "rho", "=", "np", ".", "sqrt", "(", "input_xyz", "[", "...", ",", "0", "]", "**", "2", "+", "input_xyz", "[", "...", ",", "1", "]", "**", "2", ")", "\n", "phi", "=", "np", ".", "arctan2", "(", "input_xyz", "[", "...", ",", "1", "]", ",", "input_xyz", "[", "...", ",", "0", "]", ")", "\n", "return", "np", ".", "stack", "(", "(", "rho", ",", "phi", ",", "input_xyz", "[", "...", ",", "2", "]", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.cylindric.cyl2cart": [[9, 13], ["numpy.stack", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "cyl2cart", "(", "input_xyz_polar", ")", ":", "\n", "    ", "x", "=", "input_xyz_polar", "[", "...", ",", "0", "]", "*", "np", ".", "cos", "(", "input_xyz_polar", "[", "...", ",", "1", "]", ")", "\n", "y", "=", "input_xyz_polar", "[", "...", ",", "0", "]", "*", "np", ".", "sin", "(", "input_xyz_polar", "[", "...", ",", "1", "]", ")", "\n", "return", "np", ".", "stack", "(", "(", "x", ",", "y", ",", "input_xyz_polar", "[", "...", ",", "2", "]", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.cylindric.cart2theta": [[14, 16], ["numpy.arctan2"], "function", ["None"], ["", "def", "cart2theta", "(", "input_xyz", ")", ":", "\n", "    ", "return", "np", ".", "arctan2", "(", "input_xyz", "[", "...", ",", "1", "]", ",", "input_xyz", "[", "...", ",", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.cylindric.cart2cyl_torch": [[17, 21], ["torch.sqrt", "torch.atan2", "torch.stack"], "function", ["None"], ["", "def", "cart2cyl_torch", "(", "input_xyz", ")", ":", "\n", "    ", "rho", "=", "torch", ".", "sqrt", "(", "input_xyz", "[", "...", ",", "0", "]", "**", "2", "+", "input_xyz", "[", "...", ",", "1", "]", "**", "2", ")", "\n", "phi", "=", "torch", ".", "atan2", "(", "input_xyz", "[", "...", ",", "1", "]", ",", "input_xyz", "[", "...", ",", "0", "]", ")", "\n", "return", "torch", ".", "stack", "(", "(", "rho", ",", "phi", ",", "input_xyz", "[", "...", ",", "2", "]", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.cylindric.cyl2cart_torch": [[22, 26], ["torch.stack", "torch.cos", "torch.sin"], "function", ["None"], ["", "def", "cyl2cart_torch", "(", "input_xyz_polar", ")", ":", "\n", "    ", "x", "=", "input_xyz_polar", "[", "...", ",", "0", "]", "*", "torch", ".", "cos", "(", "input_xyz_polar", "[", "...", ",", "1", "]", ")", "\n", "y", "=", "input_xyz_polar", "[", "...", ",", "0", "]", "*", "torch", ".", "sin", "(", "input_xyz_polar", "[", "...", ",", "1", "]", ")", "\n", "return", "torch", ".", "stack", "(", "(", "x", ",", "y", ",", "input_xyz_polar", "[", "...", ",", "2", "]", ")", ",", "axis", "=", "-", "1", ")", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.projection.do_focus_projection": [[12, 35], ["projection.do_up_projection", "torch.tensor", "points.matmul", "torch.tensor", "x.matmul.matmul", "projection.do_up_projection", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "function", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.projection.do_up_projection", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.projection.do_up_projection"], ["def", "do_focus_projection", "(", "points", ",", "focus_id", "=", "None", ",", "proj_fov_xy", "=", "PROJ_FOV_XY", ",", "proj_up_h", "=", "PROJ_UP_H", ")", ":", "\n", "    ", "if", "focus_id", "is", "not", "None", ":", "\n", "        ", "P", "=", "points", "[", "focus_id", "]", "\n", "c", ",", "s", "=", "-", "P", "[", "1", "]", "/", "torch", ".", "norm", "(", "P", "[", ":", "2", "]", ")", ",", "P", "[", "0", "]", "/", "torch", ".", "norm", "(", "P", "[", ":", "2", "]", ")", "\n", "mat", "=", "torch", ".", "tensor", "(", "[", "[", "c", ",", "s", ",", "0", "]", ",", "[", "-", "s", ",", "c", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "x", "=", "points", ".", "matmul", "(", "mat", ".", "T", ")", "\n", "\n", "x", "[", ":", ",", "2", "]", "=", "x", "[", ":", ",", "2", "]", "-", "x", "[", "focus_id", "]", "[", "2", "]", "\n", "\n", "P", "=", "x", "[", "focus_id", "]", "\n", "Hz", "=", "3", "\n", "norm_camera", "=", "(", "Hz", "**", "2", "+", "P", "[", "1", "]", "**", "2", ")", "**", ".5", "\n", "c", ",", "s", "=", "Hz", "/", "norm_camera", ",", "P", "[", "1", "]", "/", "norm_camera", "\n", "mat", "=", "torch", ".", "tensor", "(", "[", "[", "1", ",", "0", ",", "0", "]", ",", "[", "0", ",", "c", ",", "s", "]", ",", "[", "0", ",", "-", "s", ",", "c", "]", "]", ")", "\n", "x", "=", "x", ".", "matmul", "(", "mat", ".", "T", ")", "\n", "\n", "zoom", "=", "torch", ".", "norm", "(", "P", "[", ":", "2", "]", ")", "/", "torch", ".", "norm", "(", "x", "[", "focus_id", "]", "[", ":", "2", "]", ")", "\n", "x", "=", "x", "-", "x", "[", "focus_id", "]", "\n", "\n", "#x[x[:, 2] > Hz] *= 0", "\n", "x", "*=", "4", "*", "zoom", "**", ".5", "\n", "return", "do_up_projection", "(", "x", ",", "proj_fov_xy", "=", "proj_fov_xy", ",", "proj_up_h", "=", "proj_up_h", ")", "\n", "", "return", "do_up_projection", "(", "points", ",", "proj_fov_xy", "=", "proj_fov_xy", ",", "proj_up_h", "=", "proj_up_h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.projection.do_up_projection": [[37, 68], ["torch.clamp().int().numpy", "torch.clamp().int().numpy", "numpy.arange", "numpy.argsort", "numpy.full", "points[].numpy", "torch.clamp().int", "torch.clamp().int", "torch.clamp", "torch.clamp", "torch.floor", "torch.floor"], "function", ["None"], ["", "def", "do_up_projection", "(", "points", ",", "proj_fov_xy", "=", "PROJ_FOV_XY", ",", "proj_up_h", "=", "PROJ_UP_H", ")", ":", "\n", "    ", "\"\"\" Project a pointcloud into a spherical projection image.projection.\n        Function takes no arguments because it can be also called externally\n        if the value of the constructor was not set (in case you change your\n        mind about wanting the projection)\n    \"\"\"", "\n", "# get scan components", "\n", "scan_x", "=", "(", "1.", "+", "points", "[", ":", ",", "0", "]", "/", "proj_fov_xy", ")", "/", "2.", "\n", "scan_y", "=", "(", "1.", "+", "points", "[", ":", ",", "1", "]", "/", "proj_fov_xy", ")", "/", "2.", "\n", "\n", "# scale to image size using angular resolution", "\n", "scan_x", "*=", "proj_up_h", "+", "2", "# in [0.0, W]", "\n", "scan_y", "*=", "proj_up_h", "+", "2", "# in [0.0, H]", "\n", "\n", "# round and clamp for use as index", "\n", "proj_x", "=", "torch", ".", "clamp", "(", "torch", ".", "floor", "(", "scan_x", ")", ",", "0", ",", "proj_up_h", "-", "1", ")", ".", "int", "(", ")", ".", "numpy", "(", ")", "\n", "proj_y", "=", "torch", ".", "clamp", "(", "torch", ".", "floor", "(", "scan_y", ")", ",", "0", ",", "proj_up_h", "-", "1", ")", ".", "int", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "# order in decreasing depth", "\n", "indices", "=", "np", ".", "arange", "(", "points", ".", "shape", "[", "0", "]", ")", "\n", "order", "=", "np", ".", "argsort", "(", "points", "[", ":", ",", "-", "1", "]", ".", "numpy", "(", ")", ")", "\n", "indices", "=", "indices", "[", "order", "]", "\n", "\n", "proj_y", "=", "proj_y", "[", "order", "]", "\n", "proj_x", "=", "proj_x", "[", "order", "]", "\n", "\n", "proj_idx", "=", "np", ".", "full", "(", "(", "proj_up_h", ",", "proj_up_h", ")", ",", "\n", "-", "1", ",", "\n", "dtype", "=", "np", ".", "int32", ")", "\n", "proj_idx", "[", "proj_y", ",", "proj_x", "]", "=", "indices", "\n", "return", "proj_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.projection.do_range_projection": [[69, 126], ["numpy.arcsin", "torch.clamp().int().numpy", "torch.clamp().int().numpy", "numpy.arange", "numpy.full", "abs", "abs", "numpy.arctan2", "numpy.argsort", "torch.clamp().int", "torch.clamp().int", "depth.numpy", "abs", "torch.clamp", "torch.clamp", "torch.floor", "torch.floor"], "function", ["None"], ["", "def", "do_range_projection", "(", "points", ")", ":", "\n", "    ", "\"\"\" Project a pointcloud into a spherical projection image.projection.\n        Function takes no arguments because it can be also called externally\n        if the value of the constructor was not set (in case you change your\n        mind about wanting the projection)\n    \"\"\"", "\n", "# laser parameters", "\n", "fov_up", "=", "proj_fov_up", "/", "180.0", "*", "np", ".", "pi", "# field of view up in rad", "\n", "fov_down", "=", "proj_fov_down", "/", "180.0", "*", "np", ".", "pi", "# field of view down in rad", "\n", "fov", "=", "abs", "(", "fov_down", ")", "+", "abs", "(", "fov_up", ")", "# get field of view total in rad", "\n", "\n", "# get depth of all points", "\n", "depth", "=", "(", "points", "**", "2", ")", ".", "sum", "(", "-", "1", ")", "**", ".5", "\n", "#torch.linalg.norm(", "\n", "#    points,", "\n", "#    2,", "\n", "#    axis=1", "\n", "#)", "\n", "\n", "points_cleaned", "=", "points", "[", "depth", ">", "10e-8", "]", "\n", "depth", "=", "depth", "[", "depth", ">", "10e-8", "]", "\n", "\n", "\n", "# get scan components", "\n", "scan_x", "=", "points_cleaned", "[", ":", ",", "0", "]", "\n", "scan_y", "=", "points_cleaned", "[", ":", ",", "1", "]", "\n", "scan_z", "=", "points_cleaned", "[", ":", ",", "2", "]", "\n", "\n", "# get angles of all points", "\n", "yaw", "=", "-", "np", ".", "arctan2", "(", "scan_y", ",", "scan_x", ")", "\n", "pitch", "=", "np", ".", "arcsin", "(", "scan_z", "/", "depth", ")", "\n", "\n", "# get projections in image coords", "\n", "proj_x", "=", "0.5", "*", "(", "yaw", "/", "np", ".", "pi", "+", "1.0", ")", "# in [0.0, 1.0]", "\n", "proj_y", "=", "1.0", "-", "(", "pitch", "+", "abs", "(", "fov_down", ")", ")", "/", "fov", "# in [0.0, 1.0]", "\n", "\n", "# scale to image size using angular resolution", "\n", "proj_x", "*=", "proj_W", "# in [0.0, W]", "\n", "proj_y", "*=", "proj_H", "# in [0.0, H]", "\n", "\n", "# round and clamp for use as index", "\n", "proj_x", "=", "torch", ".", "clamp", "(", "torch", ".", "floor", "(", "proj_x", ")", ",", "0", ",", "proj_W", "-", "1", ")", ".", "int", "(", ")", ".", "numpy", "(", ")", "\n", "proj_y", "=", "torch", ".", "clamp", "(", "torch", ".", "floor", "(", "proj_y", ")", ",", "0", ",", "proj_H", "-", "1", ")", ".", "int", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "# order in decreasing depth", "\n", "indices", "=", "np", ".", "arange", "(", "depth", ".", "shape", "[", "0", "]", ")", "\n", "order", "=", "np", ".", "argsort", "(", "depth", ".", "numpy", "(", ")", ")", "[", ":", ":", "-", "1", "]", "\n", "indices", "=", "indices", "[", "order", "]", "\n", "\n", "proj_y", "=", "proj_y", "[", "order", "]", "\n", "proj_x", "=", "proj_x", "[", "order", "]", "\n", "\n", "proj_idx", "=", "np", ".", "full", "(", "(", "proj_H", ",", "proj_W", ")", ",", "\n", "-", "1", ",", "\n", "dtype", "=", "np", ".", "int32", ")", "\n", "proj_idx", "[", "proj_y", ",", "proj_x", "]", "=", "indices", "\n", "return", "proj_idx", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.online_step": [[10, 87], ["torch.no_grad", "enumerate", "hasattr", "torch.zeros", "reversed", "online.OnlineModel.clean_kvp", "list", "torch.zeros", "torch.zeros", "batch.seqid.item", "batch.scanid.item", "range", "online.OnlineModel.get_slice", "tqdm.auto.tqdm.auto.tqdm.write", "torch.tensor().mean", "torch.tensor().mean", "torch.tensor().mean", "torch.zeros.detach", "len", "tqdm.auto.tqdm.auto.tqdm.write", "online.OnlineModel.on_online_epoch_end", "online.OnlineModel.on_online_epoch_start", "torch.linalg.inv", "batch.backprop.sum().item", "data_slice.features.size", "online.OnlineModel.get_past_kvp", "online.OnlineModel.compute_acquisition_time", "time.time", "online.OnlineModel.save_past_kvp", "slice_out[].to().to", "loss.append", "point_crossentropy.append", "point_lovasz.append", "numpy.max", "pose.to", "torch.profiler.record_function", "online.OnlineModel.global_step", "time.time", "online.OnlineModel.log_times", "slice_out[].mean", "slice_out[].mean", "slice_out[].mean", "torch.tensor", "torch.tensor", "torch.tensor", "numpy.abs", "batch.backprop.sum", "slice_out[].to", "getattr().compute().detach().cpu().numpy().mean", "getattr().compute().detach().cpu().numpy", "getattr().compute().detach().cpu", "getattr().compute().detach", "getattr().compute", "getattr"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.clean_kvp", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.get_slice", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.on_online_epoch_end", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.on_online_epoch_start", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.get_past_kvp", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.compute_acquisition_time", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.save_past_kvp", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.global_step", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.log_times"], ["    ", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "online_step", "(", "self", ",", "batch", ",", "batch_idx", ",", "tag", ")", ":", "\n", "        ", "avail_scan_sequence", "=", "[", "0", "]", "+", "list", "(", "self", ".", "hparams", ".", "data", ".", "temporal_scan_sequence", ")", "\n", "from_avail_scan_sequence_to_scan_bucket", "=", "torch", ".", "zeros", "(", "(", "1", "+", "np", ".", "max", "(", "np", ".", "abs", "(", "self", ".", "hparams", ".", "data", ".", "temporal_scan_sequence", ")", ")", ")", ")", "if", "len", "(", "self", ".", "hparams", ".", "data", ".", "temporal_scan_sequence", ")", "!=", "0", "else", "torch", ".", "zeros", "(", "1", ")", "\n", "for", "iass", ",", "ass", "in", "enumerate", "(", "avail_scan_sequence", ")", ":", "\n", "            ", "from_avail_scan_sequence_to_scan_bucket", "[", "-", "ass", "]", "=", "iass", "\n", "\n", "", "seqid", ",", "scanid", "=", "batch", ".", "seqid", ".", "item", "(", ")", ",", "batch", ".", "scanid", ".", "item", "(", ")", "\n", "\n", "if", "self", ".", "current_seqid", "is", "None", ":", "\n", "            ", "self", ".", "current_seqid", "=", "seqid", "\n", "", "elif", "self", ".", "current_seqid", "!=", "seqid", ":", "\n", "            ", "tqdm", ".", "write", "(", "f\"CHANGING FROM SEQ {self.current_seqid} to {seqid}\"", ")", "\n", "self", ".", "on_online_epoch_end", "(", ")", "\n", "self", ".", "on_online_epoch_start", "(", ")", "\n", "self", ".", "current_seqid", "=", "seqid", "\n", "\n", "", "if", "hasattr", "(", "batch", ",", "\"pose\"", ")", ":", "\n", "            ", "pose", "=", "batch", ".", "pose", "[", "0", "]", "\n", "try", ":", "\n", "                ", "invpose", "=", "torch", ".", "linalg", ".", "inv", "(", "pose", ".", "to", "(", "batch", ".", "pos", ".", "device", ")", ")", "\n", "", "except", ":", "\n", "                ", "invpose", "=", "None", "\n", "", "del", "batch", ".", "pose", "\n", "", "else", ":", "\n", "            ", "pose", "=", "None", "\n", "invpose", "=", "None", "\n", "", "del", "batch", ".", "ptr", "\n", "\n", "loss", ",", "point_crossentropy", ",", "point_lovasz", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "point_pred", "=", "torch", ".", "zeros", "(", "(", "batch", ".", "backprop", ".", "sum", "(", ")", ".", "item", "(", ")", ",", ")", ",", "dtype", "=", "torch", ".", "uint8", ",", "device", "=", "self", ".", "device", ")", "\n", "\n", "\n", "#tqdm.write(f\"{torch.unique(batch.voxelind[:, 0])}\")", "\n", "\n", "for", "slice", "in", "reversed", "(", "range", "(", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", ")", ")", ":", "\n", "#tqdm.write(f\"slice {scanid}, {slice}\")", "\n", "\n", "            ", "floatscanid", "=", "scanid", "+", "(", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", "-", "slice", ")", "/", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", "\n", "\n", "get_slice_time", ",", "is_slice_y", ",", "slice_idx", ",", "data_slice", "=", "self", ".", "get_slice", "(", "batch", ",", "batch_idx", ",", "slice", ")", "\n", "if", "data_slice", ".", "features", ".", "size", "(", "0", ")", "!=", "0", ":", "\n", "                ", "kvp_in", "=", "self", ".", "get_past_kvp", "(", "avail_scan_sequence", ",", "from_avail_scan_sequence_to_scan_bucket", ",", "floatscanid", ",", "invpose", ")", "\n", "\n", "acq_time", "=", "self", ".", "compute_acquisition_time", "(", "data_slice", ",", "tag", ")", "\n", "\n", "global_time", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"GLOBAL STEP\"", ")", ":", "\n", "                    ", "slice_out", "=", "self", ".", "global_step", "(", "\n", "data_slice", ",", "slice_idx", ",", "tag", ",", "\n", "kvp_in", "=", "kvp_in", "\n", ")", "\n", "", "global_time", "=", "time", ".", "time", "(", ")", "-", "global_time", "\n", "\n", "if", "batch_idx", ">", "25", ":", "\n", "                    ", "self", ".", "log_times", "(", "tag", ",", "get_slice_time", ",", "acq_time", ",", "global_time", ",", "slice_out", "[", "\"inference_time\"", "]", ")", "\n", "\n", "", "self", ".", "save_past_kvp", "(", "floatscanid", ",", "slice_out", "[", "\"kvp_out\"", "]", ",", "pose", ")", "\n", "\n", "point_pred", "[", "is_slice_y", "]", "=", "slice_out", "[", "\"point_pred\"", "]", ".", "to", "(", "torch", ".", "uint8", ")", ".", "to", "(", "point_pred", ".", "device", ")", "\n", "loss", ".", "append", "(", "slice_out", "[", "\"loss\"", "]", ".", "mean", "(", ")", ")", "\n", "point_crossentropy", ".", "append", "(", "slice_out", "[", "\"point_crossentropy\"", "]", ".", "mean", "(", ")", ")", "\n", "point_lovasz", ".", "append", "(", "slice_out", "[", "\"point_lovasz\"", "]", ".", "mean", "(", ")", ")", "\n", "\n", "", "", "if", "tag", "==", "\"test\"", "and", "batch_idx", "%", "100", "==", "0", ":", "\n", "            ", "tqdm", ".", "write", "(", "f\"{tag} mIoU\\t{100*getattr(self, f'IoU_{tag}').compute().detach().cpu().numpy().mean():.2f}\"", ")", "\n", "\n", "", "self", ".", "clean_kvp", "(", "avail_scan_sequence", ")", "\n", "\n", "out", "=", "{", "\n", "\"loss\"", ":", "torch", ".", "tensor", "(", "loss", ")", ".", "mean", "(", ")", ",", "\n", "\"point_crossentropy\"", ":", "torch", ".", "tensor", "(", "point_crossentropy", ")", ".", "mean", "(", ")", ",", "\n", "\"point_lovasz\"", ":", "torch", ".", "tensor", "(", "point_lovasz", ")", ".", "mean", "(", ")", ",", "\n", "\"point_pred\"", ":", "point_pred", ".", "detach", "(", ")", ",", "\n", "\"batch_size\"", ":", "1", "\n", "}", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.get_slice": [[88, 112], ["time.time", "torch.profiler.record_function", "torch_geometric.data.Data", "time.time", "getattr", "getattr", "getattr().size", "batch[].size", "getattr", "getattr", "getattr", "getattr"], "methods", ["None"], ["", "def", "get_slice", "(", "self", ",", "batch", ",", "batch_idx", ",", "slice", ")", ":", "\n", "        ", "get_slice_time", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"GET slice\"", ")", ":", "\n", "            ", "is_slice", "=", "batch", ".", "voxelind", "[", ":", ",", "0", "]", "==", "slice", "\n", "is_slice_y", "=", "is_slice", "[", "batch", ".", "backprop", "]", "\n", "slice_idx", "=", "batch_idx", "*", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", "+", "(", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", "-", "slice", "-", "1", ")", "\n", "data_slice", "=", "{", "}", "\n", "for", "key", "in", "batch", ".", "keys", ":", "\n", "                ", "if", "key", "in", "[", "\"seqid\"", ",", "\"scanid\"", "]", ":", "\n", "                    ", "data_slice", "[", "key", "]", "=", "getattr", "(", "batch", ",", "key", ")", "\n", "", "elif", "key", "in", "[", "\"point_y\"", ",", "\"point_inst\"", "]", ":", "\n", "                    ", "data_slice", "[", "key", "]", "=", "getattr", "(", "batch", ",", "key", ")", "[", "is_slice_y", "]", "\n", "", "elif", "key", "==", "\"time\"", ":", "\n", "                    ", "if", "getattr", "(", "batch", ",", "key", ")", ".", "size", "(", "0", ")", "==", "batch", "[", "\"features\"", "]", ".", "size", "(", "0", ")", ":", "\n", "                        ", "data_slice", "[", "key", "]", "=", "getattr", "(", "batch", ",", "key", ")", "[", "is_slice", "]", "\n", "", "else", ":", "\n", "                        ", "data_slice", "[", "key", "]", "=", "getattr", "(", "batch", ",", "key", ")", "\n", "", "", "else", ":", "\n", "                    ", "data_slice", "[", "key", "]", "=", "getattr", "(", "batch", ",", "key", ")", "[", "is_slice", "]", "\n", "\n", "", "", "data_slice", "[", "\"voxelind\"", "]", "[", ":", ",", "0", "]", "=", "0", "\n", "data_slice", "=", "Data", "(", "**", "data_slice", ")", "\n", "", "get_slice_time", "=", "time", ".", "time", "(", ")", "-", "get_slice_time", "\n", "return", "get_slice_time", ",", "is_slice_y", ",", "slice_idx", ",", "data_slice", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.log_times": [[113, 126], ["online.OnlineModel.log", "online.OnlineModel.log", "online.OnlineModel.log", "online.OnlineModel.log", "online.OnlineModel.log", "online.OnlineModel.log"], "methods", ["None"], ["", "def", "log_times", "(", "self", ",", "tag", ",", "get_slice_time", ",", "acq_time", ",", "global_time", ",", "inference_time", ")", ":", "\n", "        ", "self", ".", "log", "(", "f'Online_time (ms.)/get_slice/{tag}'", ",", "\n", "1000", "*", "get_slice_time", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ",", "batch_size", "=", "1", ")", "\n", "self", ".", "log", "(", "f'Online_time (ms.)/global_step/{tag}'", ",", "\n", "1000", "*", "global_time", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ",", "batch_size", "=", "1", ")", "\n", "self", ".", "log", "(", "f'Online_time (ms.)/inference/{tag}'", ",", "\n", "1000", "*", "inference_time", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ",", "batch_size", "=", "1", ")", "\n", "self", ".", "log", "(", "f'Online_time (ms.)/acquisition/{tag}'", ",", "\n", "1000", "*", "acq_time", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ",", "batch_size", "=", "1", ")", "\n", "self", ".", "log", "(", "f'Online_time (ms.)/latency/{tag}'", ",", "\n", "1000", "*", "(", "inference_time", "+", "acq_time", ")", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ",", "batch_size", "=", "1", ")", "\n", "self", ".", "log", "(", "f'Online_time (ms.)/can_idle/{tag}'", ",", "\n", "1000", "*", "(", "acq_time", "-", "inference_time", ")", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ",", "batch_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.compute_acquisition_time": [[127, 131], ["hasattr", "data_slice.time.size", "data_slice.time.max", "data_slice.time.min", "data_slice.scanid[].item", "getattr", "data_slice.seqid[].item"], "methods", ["None"], ["", "def", "compute_acquisition_time", "(", "self", ",", "data_slice", ",", "tag", ")", ":", "\n", "        ", "if", "hasattr", "(", "data_slice", ",", "\"time\"", ")", "and", "data_slice", ".", "time", ".", "size", "(", "0", ")", "!=", "1", ":", "\n", "            ", "return", "data_slice", ".", "time", ".", "max", "(", ")", "-", "data_slice", ".", "time", ".", "min", "(", ")", "\n", "", "return", "getattr", "(", "self", ".", "trainer", ".", "datamodule", ",", "f\"{tag}_dataset\"", ")", ".", "sequences", "[", "data_slice", ".", "seqid", "[", "0", "]", ".", "item", "(", ")", "]", ".", "dtimes", "[", "data_slice", ".", "scanid", "[", "0", "]", ".", "item", "(", ")", "]", "/", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.from_pos_scan_to_pos": [[132, 134], ["torch.matmul", "torch.cat", "torch.ones"], "methods", ["None"], ["", "def", "from_pos_scan_to_pos", "(", "self", ",", "pos", ",", "pose", ")", ":", "\n", "        ", "return", "torch", ".", "matmul", "(", "torch", ".", "cat", "(", "(", "pos", ",", "torch", ".", "ones", "(", "(", "pos", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "dtype", "=", "pos", ".", "dtype", ",", "device", "=", "pos", ".", "device", ")", ")", ",", "-", "1", ")", ",", "pose", "[", ":", "-", "1", "]", ".", "T", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.save_past_kvp": [[135, 146], ["torch.profiler.record_function", "torch_geometric.data.Data", "torch.cat", "numpy.append", "online.OnlineModel.kvp_kept.append", "torch.ones", "online.OnlineModel.from_pos_scan_to_pos", "torch_geometric.data.Data.pos.size"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.from_pos_scan_to_pos"], ["", "def", "save_past_kvp", "(", "self", ",", "scanid", ",", "kvp_out", ",", "pose", ")", ":", "\n", "#tqdm.write(f\"out scan\\t{scanid:.2f}\")", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"PAST K/V/P OUT\"", ")", ":", "\n", "            ", "if", "kvp_out", "is", "not", "None", ":", "\n", "                ", "kvp_out", "=", "Data", "(", "**", "kvp_out", ")", "\n", "kvp_out", ".", "pos", "=", "torch", ".", "cat", "(", "[", "\n", "scanid", "*", "torch", ".", "ones", "(", "(", "kvp_out", ".", "pos", ".", "size", "(", "0", ")", ",", "1", ")", ",", "dtype", "=", "kvp_out", ".", "pos", ".", "dtype", ",", "device", "=", "kvp_out", ".", "pos", ".", "device", ")", ",", "\n", "self", ".", "from_pos_scan_to_pos", "(", "kvp_out", ".", "pos", ",", "pose", ")", "if", "pose", "is", "not", "None", "else", "kvp_out", ".", "pos", "\n", "]", ",", "-", "1", ")", "\n", "self", ".", "kvp_kept_scanid", "=", "np", ".", "append", "(", "self", ".", "kvp_kept_scanid", ",", "scanid", ")", "\n", "self", ".", "kvp_kept", ".", "append", "(", "kvp_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.get_past_kvp": [[147, 162], ["torch.profiler.record_function", "len", "numpy.isin", "torch_geometric.data.Batch.from_data_list.to_dict", "numpy.isin.sum", "torch_geometric.data.Batch.from_data_list", "online.OnlineModel.from_pos_scan_to_pos", "zip", "torch_geometric.data.Batch.from_data_list.pos[].int"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.from_pos_scan_to_pos"], ["", "", "", "def", "get_past_kvp", "(", "self", ",", "avail_scan_sequence", ",", "from_avail_scan_sequence_to_scan_bucket", ",", "scanid", ",", "invpose", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"PAST K/V/P IN\"", ")", ":", "\n", "            ", "if", "self", ".", "hparams", ".", "data", ".", "temporal_transformer", ":", "\n", "                ", "kvp_in", "=", "None", "\n", "if", "len", "(", "self", ".", "kvp_kept", ")", "!=", "0", ":", "\n", "                    ", "keep_slices", "=", "np", ".", "isin", "(", "(", "self", ".", "kvp_kept_scanid", "-", "scanid", "-", "0.001", ")", ".", "astype", "(", "int", ")", ",", "avail_scan_sequence", ")", "\n", "#tqdm.write(f\"in  scan\\t{scanid:.2f}\\t{self.kvp_kept_scanid[keep_slices]}\")", "\n", "if", "keep_slices", ".", "sum", "(", ")", "!=", "0", ":", "\n", "                        ", "kvp_in", "=", "Batch", ".", "from_data_list", "(", "[", "ti", "for", "ti", ",", "kb", "in", "zip", "(", "self", ".", "kvp_kept", ",", "keep_slices", ")", "if", "kb", "]", ")", "\n", "", "", "if", "kvp_in", "is", "not", "None", ":", "\n", "                    ", "if", "invpose", "is", "not", "None", ":", "\n", "                        ", "kvp_in", ".", "pos", "[", ":", ",", "1", ":", "]", "=", "self", ".", "from_pos_scan_to_pos", "(", "kvp_in", ".", "pos", "[", ":", ",", "1", ":", "]", ",", "invpose", ")", "\n", "", "kvp_in", ".", "pos", "[", ":", ",", "0", "]", "-=", "scanid", "\n", "kvp_in", ".", "pos", "[", ":", ",", "0", "]", "=", "from_avail_scan_sequence_to_scan_bucket", "[", "(", "-", "kvp_in", ".", "pos", "[", ":", ",", "0", "]", ".", "int", "(", ")", ")", ".", "long", "(", ")", "]", "\n", "", "return", "kvp_in", ".", "to_dict", "(", ")", "if", "kvp_in", "is", "not", "None", "else", "kvp_in", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.clean_kvp": [[163, 168], ["len", "numpy.min", "zip", "online.OnlineModel.kvp_kept_scanid.max"], "methods", ["None"], ["", "", "", "def", "clean_kvp", "(", "self", ",", "avail_scan_sequence", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "kvp_kept", ")", "!=", "0", ":", "\n", "            ", "keep_slices", "=", "self", ".", "kvp_kept_scanid", "-", "self", ".", "kvp_kept_scanid", ".", "max", "(", ")", "+", "1", ">", "np", ".", "min", "(", "avail_scan_sequence", ")", "\n", "self", ".", "kvp_kept", "=", "[", "ti", "for", "ti", ",", "kb", "in", "zip", "(", "self", ".", "kvp_kept", ",", "keep_slices", ")", "if", "kb", "]", "\n", "self", ".", "kvp_kept_scanid", "=", "self", ".", "kvp_kept_scanid", "[", "keep_slices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.on_online_epoch_start": [[169, 174], ["numpy.array"], "methods", ["None"], ["", "", "def", "on_online_epoch_start", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "hparams", ".", "data", ".", "eval_in_online_setup", ":", "\n", "            ", "self", ".", "kvp_kept", "=", "[", "]", "\n", "self", ".", "kvp_kept_scanid", "=", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "int", ")", "\n", "self", ".", "current_seqid", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.on_online_epoch_end": [[175, 178], ["None"], "methods", ["None"], ["", "", "def", "on_online_epoch_end", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "hparams", ".", "data", ".", "eval_in_online_setup", ":", "\n", "            ", "del", "self", ".", "kvp_kept", ",", "self", ".", "kvp_kept_scanid", ",", "self", ".", "current_seqid", "", "", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__init__": [[80, 87], ["super().__init__", "helix4d.Helix4D.save_hyperparameters", "helix4d.Helix4D.__initmodel__", "helix4d.Helix4D.__initmetrics__", "helix4d.Helix4D.__compute_nparams__"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__initmodel__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__initmetrics__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__compute_nparams__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "save_hyperparameters", "(", ")", "\n", "\n", "self", ".", "__initmodel__", "(", ")", "\n", "self", ".", "__initmetrics__", "(", ")", "\n", "self", ".", "__compute_nparams__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__compute_nparams__": [[88, 98], ["helix4d.Helix4D.parameters", "numpy.prod", "numpy.prod", "p.size", "p.size"], "methods", ["None"], ["", "def", "__compute_nparams__", "(", "self", ")", ":", "\n", "        ", "trainable", ",", "nontrainable", "=", "0", ",", "0", "\n", "for", "p", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "if", "p", ".", "requires_grad", ":", "\n", "                ", "trainable", "+=", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "nontrainable", "+=", "np", ".", "prod", "(", "p", ".", "size", "(", ")", ")", "\n", "\n", "", "", "self", ".", "hparams", ".", "n_params_trainable", "=", "trainable", "\n", "self", ".", "hparams", ".", "n_params_nontrainable", "=", "nontrainable", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__initmetrics__": [[99, 115], ["torchmetrics.IoU", "torchmetrics.IoU", "torchmetrics.IoU", "helix4d.metrics.lovasz_losses.LovaszLoss", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss"], "methods", ["None"], ["", "def", "__initmetrics__", "(", "self", ")", ":", "\n", "        ", "self", ".", "IoU_train", "=", "torchmetrics", ".", "IoU", "(", "\n", "self", ".", "hparams", ".", "data", ".", "output_dim", ",", "0", ",", "reduction", "=", "\"none\"", ")", "\n", "self", ".", "IoU_val", "=", "torchmetrics", ".", "IoU", "(", "\n", "self", ".", "hparams", ".", "data", ".", "output_dim", ",", "0", ",", "reduction", "=", "\"none\"", ")", "\n", "self", ".", "IoU_test", "=", "torchmetrics", ".", "IoU", "(", "\n", "self", ".", "hparams", ".", "data", ".", "output_dim", ",", "0", ",", "reduction", "=", "\"none\"", ")", "\n", "\n", "self", ".", "criterion_lovasz", "=", "LovaszLoss", "(", "\n", "n_classes", "=", "self", ".", "hparams", ".", "data", ".", "output_dim", ",", "\n", "ignore_index", "=", "0", "\n", ")", "\n", "\n", "self", ".", "criterion_crossentropy", "=", "nn", ".", "CrossEntropyLoss", "(", "\n", "reduction", "=", "\"mean\"", ",", "\n", "ignore_index", "=", "0", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__initmodel__": [[117, 126], ["helix4d.Helix4D.__init_pointencoder__", "helix4d.Helix4D.__init_voxelmodel__", "point.decoders.LinearDecoder"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__init_pointencoder__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__init_voxelmodel__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.point.decoders.LinearDecoder"], ["", "def", "__initmodel__", "(", "self", ")", ":", "\n", "        ", "self", ".", "__init_pointencoder__", "(", ")", "\n", "self", ".", "__init_voxelmodel__", "(", ")", "\n", "\n", "self", ".", "point_decoder", "=", "PD", ".", "LinearDecoder", "(", "\n", "dim_in", "=", "self", ".", "hparams", ".", "point_encoder", "[", "-", "1", "]", "+", "\n", "self", ".", "hparams", ".", "voxel_encoder", ",", "\n", "decoder", "=", "self", ".", "hparams", ".", "point_decoder", ",", "\n", "dim_out", "=", "self", ".", "hparams", ".", "data", ".", "output_dim", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__init_voxelmodel__": [[128, 189], ["torch.Sequential", "torch.Sequential", "helix4d.Helix4D.__initspconvvoxelshape__", "range", "helix4d.model.voxel.Transformer", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "setattr", "setattr", "setattr", "torch.Sequential", "torch.Sequential", "setattr", "setattr", "helix4d.MySparseInverseConv3d", "torch.Sequential", "torch.Sequential", "len", "helix4d.MySparseConv3d", "torch.Sequential", "torch.Sequential", "setattr", "setattr", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm1d", "torch.BatchNorm1d", "spconv.SparseMaxPool3d", "torch.Sequential", "torch.Sequential", "tuple", "tuple", "tuple", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.BatchNorm1d", "torch.BatchNorm1d", "getattr", "range", "tuple", "tuple", "getattr", "range", "len"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__initspconvvoxelshape__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear"], ["", "def", "__init_voxelmodel__", "(", "self", ")", ":", "\n", "\n", "        ", "dim_in", ",", "dim_out", "=", "self", ".", "hparams", ".", "point_encoder", "[", "-", "1", "]", ",", "self", ".", "hparams", ".", "voxel_encoder", "\n", "\n", "self", ".", "point2voxel_linear", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "dim_in", ",", "dim_out", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "dim_out", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n", "\n", "self", ".", "__initspconvvoxelshape__", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "hparams", ".", "data", ".", "n_hierarchy", ")", ":", "\n", "            ", "dim_in", ",", "dim_out", "=", "dim_out", ",", "self", ".", "hparams", ".", "voxel_encoder_mul", "[", "len", "(", "self", ".", "hparams", ".", "voxel_encoder_mul", ")", "-", "self", ".", "hparams", ".", "data", ".", "n_hierarchy", "+", "i", "]", "*", "dim_out", "\n", "\n", "setattr", "(", "self", ",", "f\"H{i}_before\"", ",", "\n", "nn", ".", "Sequential", "(", "*", "[", "getattr", "(", "ConvZoo", ",", "self", ".", "hparams", ".", "voxel_function", ")", "(", "dim_in", ",", "dim_in", ",", "key", "=", "f\"{i}\"", ")", "for", "_", "in", "range", "(", "self", ".", "hparams", ".", "n_voxel_layers", ")", "]", ")", "\n", ")", "\n", "\n", "if", "self", ".", "hparams", ".", "pooling", "==", "\"learned\"", ":", "\n", "                ", "setattr", "(", "self", ",", "f\"H{i}_H{i+1}\"", ",", "\n", "ConvZoo", ".", "MySparseConv3d", "(", "\n", "dim_in", ",", "dim_out", ",", "\n", "kernel_size", "=", "tuple", "(", "self", ".", "hparams", ".", "data", ".", "split_hierarchy", "[", "i", "]", ")", ",", "\n", "stride", "=", "tuple", "(", "self", ".", "hparams", ".", "data", ".", "split_hierarchy", "[", "i", "]", ")", ",", "\n", "indice_key", "=", "f\"{i}_{i+1}_learnedpool\"", ",", "\n", ")", "\n", ")", "\n", "setattr", "(", "self", ",", "f\"H{i}_H{i+1}_norm\"", ",", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", ")", ",", "nn", ".", "BatchNorm1d", "(", "dim_out", ")", ")", ")", "\n", "\n", "", "elif", "self", ".", "hparams", ".", "pooling", "==", "\"max\"", ":", "\n", "                ", "setattr", "(", "self", ",", "f\"H{i}_H{i+1}\"", ",", "\n", "spconv", ".", "SparseMaxPool3d", "(", "\n", "kernel_size", "=", "tuple", "(", "self", ".", "hparams", ".", "data", ".", "split_hierarchy", "[", "i", "]", ")", ",", "\n", "stride", "=", "tuple", "(", "self", ".", "hparams", ".", "data", ".", "split_hierarchy", "[", "i", "]", ")", ",", "\n", "indice_key", "=", "f\"{i}_{i+1}_learnedpool\"", ",", "\n", ")", "\n", ")", "\n", "setattr", "(", "self", ",", "f\"H{i}_H{i+1}_norm\"", ",", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "dim_in", ",", "dim_out", ")", ",", "nn", ".", "LeakyReLU", "(", ")", ",", "nn", ".", "BatchNorm1d", "(", "dim_out", ")", ")", ")", "\n", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "setattr", "(", "self", ",", "f\"H{i+1}_H{i}\"", ",", "\n", "ConvZoo", ".", "MySparseInverseConv3d", "(", "\n", "dim_out", ",", "dim_in", ",", "\n", "kernel_size", "=", "tuple", "(", "self", ".", "hparams", ".", "data", ".", "split_hierarchy", "[", "i", "]", ")", ",", "\n", "indice_key", "=", "f\"{i}_{i+1}_learnedpool\"", ",", "\n", ")", "\n", ")", "\n", "\n", "setattr", "(", "self", ",", "f\"H{i}_after\"", ",", "\n", "nn", ".", "Sequential", "(", "*", "[", "getattr", "(", "ConvZoo", ",", "self", ".", "hparams", ".", "voxel_function", ")", "(", "dim_in", ",", "dim_in", ",", "key", "=", "f\"{i}\"", ")", "for", "_", "in", "range", "(", "self", ".", "hparams", ".", "n_voxel_layers", ")", "]", ")", "\n", ")", "\n", "\n", "", "self", ".", "hparams", ".", "transformer", ".", "relative_positional_ntime", "=", "1", "+", "len", "(", "self", ".", "hparams", ".", "data", ".", "temporal_scan_sequence", ")", "*", "self", ".", "hparams", ".", "transformer", ".", "temporal_buckets", "\n", "self", ".", "voxel_transformer", "=", "V", ".", "Transformer", "(", "\n", "dim_in", "=", "dim_out", ",", "\n", "transformer", "=", "self", ".", "hparams", ".", "transformer", ",", "\n", "temporal_transformer", "=", "self", ".", "hparams", ".", "data", ".", "temporal_transformer", ",", "\n", "slices_per_rotation", "=", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__initspconvvoxelshape__": [[192, 225], ["numpy.array", "numpy.prod", "helix4d.Helix4D.register_buffer", "math.ceil", "math.ceil", "helix4d.Helix4D.register_buffer", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "int", "int", "math.ceil", "int", "int", "int", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "numpy.array", "len", "list", "HelixNet.helixnet.laserscan.HelixNetThetaCorrector"], "methods", ["None"], ["", "def", "__initspconvvoxelshape__", "(", "self", ")", ":", "\n", "        ", "voxel_res", "=", "np", ".", "array", "(", "self", ".", "hparams", ".", "data", ".", "voxel_res", ")", "\n", "voxel_res", "[", "1", "]", "=", "math", ".", "pi", "*", "voxel_res", "[", "1", "]", "/", "180", "\n", "full_split_hierarchy", "=", "np", ".", "prod", "(", "np", ".", "array", "(", "self", ".", "hparams", ".", "data", ".", "split_hierarchy", ")", "[", ":", "self", ".", "hparams", ".", "data", ".", "n_hierarchy", "]", ",", "0", ")", "\n", "thin_voxel_res", "=", "voxel_res", "/", "full_split_hierarchy", "\n", "\n", "self", ".", "register_buffer", "(", "\"full_split_hierarchy\"", ",", "torch", ".", "tensor", "(", "[", "1", "]", "+", "list", "(", "full_split_hierarchy", ")", ")", ")", "\n", "\n", "voxelind_max_r", "=", "int", "(", "self", ".", "hparams", ".", "data", ".", "polar_max_r", "/", "thin_voxel_res", "[", "0", "]", ")", "+", "1", "\n", "voxelind_max_theta", "=", "math", ".", "ceil", "(", "\n", "2", "*", "math", ".", "pi", "/", "(", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", "*", "thin_voxel_res", "[", "1", "]", ")", ")", "\n", "voxelind_max_z", "=", "int", "(", "\n", "(", "self", ".", "hparams", ".", "data", ".", "polar_max_z", "-", "self", ".", "hparams", ".", "data", ".", "polar_min_z", ")", "/", "thin_voxel_res", "[", "2", "]", ")", "+", "1", "\n", "\n", "if", "self", ".", "hparams", ".", "data", ".", "name", "==", "\"helixnet\"", ":", "\n", "            ", "max_delta_rad", "=", "(", "HelixNetThetaCorrector", "(", ")", ".", "_MAX_DIFF_", ")", "/", "2.", "\n", "add_slice_max_theta", "=", "math", ".", "ceil", "(", "max_delta_rad", "/", "voxel_res", "[", "1", "]", ")", "\n", "max_delta_rad", "=", "int", "(", "(", "voxel_res", "[", "1", "]", "/", "thin_voxel_res", "[", "1", "]", ")", "*", "add_slice_max_theta", ")", "\n", "voxelind_max_theta", "+=", "2", "*", "max_delta_rad", "\n", "\n", "", "self", ".", "voxel_shape", "=", "[", "voxelind_max_r", ",", "voxelind_max_theta", ",", "voxelind_max_z", "]", "\n", "self", ".", "avail_slices", "=", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", "*", "(", "1", "+", "len", "(", "self", ".", "hparams", ".", "data", ".", "temporal_scan_sequence", ")", ")", "\n", "\n", "slice_max_r", "=", "int", "(", "self", ".", "hparams", ".", "data", ".", "polar_max_r", "/", "voxel_res", "[", "0", "]", ")", "+", "1", "\n", "slice_max_theta", "=", "math", ".", "ceil", "(", "\n", "2", "*", "math", ".", "pi", "/", "(", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", "*", "voxel_res", "[", "1", "]", ")", ")", "\n", "\n", "if", "self", ".", "hparams", ".", "data", ".", "name", "==", "\"helixnet\"", ":", "\n", "            ", "slice_max_theta", "+=", "2", "*", "add_slice_max_theta", "\n", "\n", "", "slice_max_z", "=", "int", "(", "\n", "(", "self", ".", "hparams", ".", "data", ".", "polar_max_z", "-", "self", ".", "hparams", ".", "data", ".", "polar_min_z", ")", "/", "voxel_res", "[", "2", "]", ")", "+", "1", "\n", "self", ".", "register_buffer", "(", "\"from_slicegrid_to_sliceindices\"", ",", "torch", ".", "tensor", "(", "[", "slice_max_r", "*", "slice_max_theta", "*", "slice_max_z", ",", "slice_max_theta", "*", "slice_max_z", ",", "slice_max_z", ",", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.__init_pointencoder__": [[227, 231], ["point.encoders.LinearEncoder"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.point.encoders.LinearEncoder"], ["", "def", "__init_pointencoder__", "(", "self", ")", ":", "\n", "        ", "self", ".", "point_encoder", "=", "PE", ".", "LinearEncoder", "(", "\n", "dim_in", "=", "self", ".", "hparams", ".", "data", ".", "input_dim", ",", "\n", "encoder", "=", "self", ".", "hparams", ".", "point_encoder", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.forward": [[233, 259], ["torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "helix4d.compute_point2voxel_map", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "helix4d.Helix4D.point_encoder", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "helix4d.voxelize", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "helix4d.Helix4D.foward_voxel_encoder", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "helix4d.Helix4D.point_decoder", "hasattr", "helix4d.upsample", "helix4d.upsample_backprop"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.compute_point2voxel_map", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.voxelize", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.foward_voxel_encoder", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.upsample", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.upsample_backprop"], ["", "@", "torch", ".", "profiler", ".", "record_function", "(", "f\"FORWARD\"", ")", "\n", "def", "forward", "(", "self", ",", "batch", ",", "batch_size", ",", "batch_idx", ",", "kvp_in", "=", "None", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"VOXELIZE\"", ")", ":", "\n", "            ", "voxel_ind", ",", "point2voxel", "=", "compute_point2voxel_map", "(", "batch", ".", "batch", ",", "batch", ".", "voxelind", ")", "\n", "\n", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"POINT ENCODER\"", ")", ":", "\n", "            ", "point_features", "=", "self", ".", "point_encoder", "(", "batch", ".", "features", ")", "\n", "\n", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"VOXELIZE\"", ")", ":", "\n", "            ", "voxel_features", ",", "voxel_pos", "=", "voxelize", "(", "\n", "point_features", ",", "batch", ".", "pos", ",", "point2voxel", ")", "\n", "\n", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"VOXEL ENCODER\"", ")", ":", "\n", "            ", "voxel_features", ",", "kvp_out", ",", "maps", "=", "self", ".", "foward_voxel_encoder", "(", "\n", "voxel_features", ",", "voxel_pos", ",", "voxel_ind", ",", "\n", "batch_size", ",", "batch_idx", ",", "point2voxel", ",", "batch", ".", "pos", ",", "kvp_in", ")", "\n", "\n", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"UPSAMPLE\"", ")", ":", "\n", "            ", "if", "not", "hasattr", "(", "batch", ",", "\"backprop\"", ")", ":", "\n", "                ", "point_features", "=", "upsample", "(", "point2voxel", ",", "point_features", ",", "voxel_features", ")", "\n", "", "else", ":", "\n", "                ", "point_features", "=", "upsample_backprop", "(", "batch", ".", "backprop", ",", "point2voxel", ",", "point_features", ",", "voxel_features", ")", "\n", "\n", "", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"POINT_DECODER\"", ")", ":", "\n", "            ", "point_prediction", "=", "self", ".", "point_decoder", "(", "point_features", ")", "\n", "", "return", "point_prediction", ",", "point2voxel", ",", "maps", ",", "kvp_out", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.foward_voxel_encoder": [[260, 316], ["helix4d.Helix4D.point2voxel_linear", "helix4d.from_grid_to_spconvgrid", "spconv.SparseConvTensor", "range", "reversed", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "helix4d.retrieve_pos_and_maps", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "helix4d.Helix4D.voxel_transformer", "spconvtensor.replace_feature.replace_feature.replace_feature", "helix4d.Helix4D.log_attention", "range", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "voxel_features_skip.append", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "spconvtensor.replace_feature.replace_feature.replace_feature", "range", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "spconvtensor.replace_feature.replace_feature.replace_feature", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "getattr", "getattr", "getattr", "getattr", "getattr"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.from_grid_to_spconvgrid", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.retrieve_pos_and_maps", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.logging.LoggingModel.log_attention"], ["", "def", "foward_voxel_encoder", "(", "self", ",", "voxel_features", ",", "voxel_pos", ",", "voxel_ind", ",", "batch_size", ",", "batch_idx", ",", "point2voxel", ",", "point_pos", ",", "kvp_in", ")", ":", "\n", "\n", "        ", "voxel_features", "=", "self", ".", "point2voxel_linear", "(", "voxel_features", ")", "\n", "spconvgrid", "=", "from_grid_to_spconvgrid", "(", "voxel_ind", ",", "batch_size", ")", "\n", "\n", "spconvtensor", "=", "spconv", ".", "SparseConvTensor", "(", "\n", "voxel_features", ",", "\n", "spconvgrid", ",", "\n", "self", ".", "voxel_shape", ",", "\n", "batch_size", "*", "self", ".", "avail_slices", "\n", ")", "\n", "\n", "voxel_features_skip", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "hparams", ".", "data", ".", "n_hierarchy", ")", ":", "\n", "            ", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"H{i}\"", ")", ":", "\n", "                ", "spconvtensor", "=", "getattr", "(", "self", ",", "f\"H{i}_before\"", ")", "(", "spconvtensor", ")", "\n", "voxel_features_skip", ".", "append", "(", "spconvtensor", ".", "features", ")", "\n", "\n", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"H{i}_H{i+1}\"", ")", ":", "\n", "                ", "spconvtensor", "=", "getattr", "(", "self", ",", "f\"H{i}_H{i+1}\"", ")", "(", "spconvtensor", ")", "\n", "spconvtensor", "=", "spconvtensor", ".", "replace_feature", "(", "getattr", "(", "self", ",", "f\"H{i}_H{i+1}_norm\"", ")", "(", "spconvtensor", ".", "features", ")", ")", "\n", "\n", "", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"POS\"", ")", ":", "\n", "            ", "voxel_pos", ",", "down_spconvindices", ",", "slice_indices", "=", "retrieve_pos_and_maps", "(", "\n", "voxel_pos", ",", "batch_size", ",", "spconvgrid", ",", "spconvtensor", ".", "indices", ",", "\n", "self", ".", "from_slicegrid_to_sliceindices", ",", "self", ".", "full_split_hierarchy", ")", "\n", "\n", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"XYZT\"", ")", ":", "\n", "            ", "if", "kvp_in", "is", "None", ":", "\n", "                ", "kvp_in", "=", "{", "\n", "\"pos\"", ":", "self", ".", "voxel_transformer", ".", "zero_kvp_in_pos", ",", "\n", "\"grid\"", ":", "self", ".", "voxel_transformer", ".", "zero_kvp_in_grid", ",", "\n", "}", "\n", "for", "iblock", "in", "range", "(", "self", ".", "hparams", ".", "transformer", ".", "n_layers", ")", ":", "\n", "                    ", "kvp_in", "[", "f\"keys_{iblock}\"", "]", "=", "self", ".", "voxel_transformer", ".", "zero_keys", "\n", "kvp_in", "[", "f\"values_{iblock}\"", "]", "=", "self", ".", "voxel_transformer", ".", "zero_values", "\n", "#setattr(kvp_in, f\"keys_{iblock}\", self.voxel_transformer.zero_keys)", "\n", "#setattr(kvp_in, f\"values_{iblock}\", self.voxel_transformer.zero_values)", "\n", "\n", "", "", "newspconvtensorfeatures", ",", "probas", ",", "iq_innermost", ",", "ik_innermost", ",", "_", ",", "kvp_out", "=", "self", ".", "voxel_transformer", "(", "\n", "x", "=", "spconvtensor", ".", "features", ",", "xyz", "=", "voxel_pos", ",", "grid", "=", "slice_indices", ",", "batch_size", "=", "batch_size", ",", "\n", "#in_pos=kvp_in.pos, in_grid=kvp_in.grid, in_keys=kvp_in.keys, in_values=kvp_in.pos)", "\n", "kvp_in_isnone", "=", "kvp_in", "is", "None", ",", "kvp_in", "=", "kvp_in", ")", "\n", "spconvtensor", "=", "spconvtensor", ".", "replace_feature", "(", "newspconvtensorfeatures", ")", "\n", "self", ".", "log_attention", "(", "batch_idx", ",", "probas", ",", "iq_innermost", ",", "ik_innermost", ",", "voxel_pos", ",", "slice_indices", ",", "point_pos", ",", "point2voxel", ",", "maps", "=", "[", "down_spconvindices", "]", ")", "\n", "\n", "", "for", "i", "in", "reversed", "(", "range", "(", "self", ".", "hparams", ".", "data", ".", "n_hierarchy", ")", ")", ":", "\n", "            ", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"H{i+1}_H{i}\"", ")", ":", "\n", "                ", "spconvtensor", "=", "getattr", "(", "self", ",", "f\"H{i+1}_H{i}\"", ")", "(", "spconvtensor", ")", "\n", "spconvtensor", "=", "spconvtensor", ".", "replace_feature", "(", "spconvtensor", ".", "features", "+", "voxel_features_skip", "[", "i", "]", ")", "\n", "\n", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"H{i}\"", ")", ":", "\n", "                ", "spconvtensor", "=", "getattr", "(", "self", ",", "f\"H{i}_after\"", ")", "(", "spconvtensor", ")", "\n", "\n", "", "", "return", "spconvtensor", ".", "features", ",", "kvp_out", ",", "[", "down_spconvindices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.on_train_start": [[317, 334], ["helix4d.Helix4D.logger.log_hyperparams", "helix4d.Helix4D.logger.experiment.add_text", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "helix4d.Helix4D.__repr__().replace", "helix4d.Helix4D.__repr__"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.sparseops.layernorm.MyJitLayerNorm.__repr__"], ["", "def", "on_train_start", "(", "self", ")", ":", "\n", "        ", "results", "=", "{", "\n", "\"Loss_total/val\"", ":", "float", "(", "\"nan\"", ")", ",", "\"Loss/point_crossentropy/val\"", ":", "float", "(", "\"nan\"", ")", ",", "\"IoU/val\"", ":", "float", "(", "\"nan\"", ")", ",", "\n", "\"Loss_total/train\"", ":", "float", "(", "\"nan\"", ")", ",", "\"Loss/point_crossentropy/train\"", ":", "float", "(", "\"nan\"", ")", ",", "\"IoU/train\"", ":", "float", "(", "\"nan\"", ")", "\n", "}", "\n", "if", "self", ".", "hparams", ".", "data", ".", "eval_in_online_setup", ":", "\n", "            ", "results", "[", "f'Online_time (ms.)/get_slice/val'", "]", "=", "float", "(", "\"nan\"", ")", "\n", "results", "[", "f'Online_time (ms.)/global_step/val'", "]", "=", "float", "(", "\"nan\"", ")", "\n", "results", "[", "f'Online_time (ms.)/inference/val'", "]", "=", "float", "(", "\"nan\"", ")", "\n", "results", "[", "f'Online_time (ms.)/acquisition/val'", "]", "=", "float", "(", "\"nan\"", ")", "\n", "results", "[", "f'Online_time (ms.)/latency/val'", "]", "=", "float", "(", "\"nan\"", ")", "\n", "results", "[", "f'Online_time (ms.)/can_idle/val'", "]", "=", "float", "(", "\"nan\"", ")", "\n", "\n", "", "self", ".", "logger", ".", "log_hyperparams", "(", "self", ".", "hparams", ",", "results", ")", "\n", "\n", "self", ".", "logger", ".", "experiment", ".", "add_text", "(", "\n", "\"model\"", ",", "self", ".", "__repr__", "(", ")", ".", "replace", "(", "\"\\n\"", ",", "\"  \\n\"", ")", ",", "global_step", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.global_step": [[335, 381], ["batch.seqid.size", "time.time", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event", "torch.cuda.Event.record", "torch.cuda.Event.record", "helix4d.Helix4D.forward", "helix4d.Helix4D.forward", "torch.cuda.Event.record", "torch.cuda.Event.record", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "helix4d.Helix4D.criterion_crossentropy", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "helix4d.Helix4D.criterion_lovasz", "helix4d.Helix4D.detach", "helix4d.Helix4D.detach", "point_oh_pred.detach().argmax", "point2voxel.detach", "time.time", "torch.cuda.Event.elapsed_time", "torch.cuda.Event.elapsed_time", "point_oh_pred.detach"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.forward", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.forward"], ["", "def", "global_step", "(", "self", ",", "batch", ",", "batch_idx", ",", "tag", ",", "kvp_in", "=", "None", ")", ":", "\n", "        ", "batch_size", "=", "batch", ".", "seqid", ".", "size", "(", "0", ")", "\n", "\n", "if", "tag", "==", "\"train\"", ":", "\n", "            ", "inference_time", "=", "time", ".", "time", "(", ")", "\n", "", "else", ":", "\n", "            ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "start", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "end", "=", "torch", ".", "cuda", ".", "Event", "(", "enable_timing", "=", "True", ")", "\n", "start", ".", "record", "(", ")", "\n", "\n", "\n", "", "if", "self", ".", "hparams", ".", "data", ".", "temporal_transformer", ":", "\n", "            ", "point_oh_pred", ",", "point2voxel", ",", "maps", ",", "kvp_out", "=", "self", ".", "forward", "(", "\n", "batch", ",", "batch_size", ",", "batch_idx", ",", "kvp_in", ")", "\n", "", "else", ":", "\n", "            ", "point_oh_pred", ",", "point2voxel", ",", "maps", ",", "kvp_out", "=", "self", ".", "forward", "(", "\n", "batch", ",", "batch_size", ",", "batch_idx", ")", "\n", "\n", "", "if", "tag", "==", "\"train\"", ":", "\n", "            ", "inference_time", "=", "time", ".", "time", "(", ")", "-", "inference_time", "\n", "", "else", ":", "\n", "            ", "end", ".", "record", "(", ")", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "inference_time", "=", "start", ".", "elapsed_time", "(", "end", ")", "/", "1000.", "\n", "\n", "\n", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"XE\"", ")", ":", "\n", "            ", "point_crossentropy", "=", "self", ".", "criterion_crossentropy", "(", "\n", "point_oh_pred", ",", "batch", ".", "point_y", "\n", ")", "\n", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"LOVASZ\"", ")", ":", "\n", "            ", "point_lovasz", "=", "self", ".", "criterion_lovasz", "(", "point_oh_pred", ",", "batch", ".", "point_y", ")", "\n", "\n", "", "out", "=", "{", "\n", "\"loss\"", ":", "point_crossentropy", "+", "point_lovasz", ",", "\n", "\"point_crossentropy\"", ":", "point_crossentropy", ".", "detach", "(", ")", ",", "\n", "\"point_lovasz\"", ":", "point_lovasz", ".", "detach", "(", ")", ",", "\n", "\"point_pred\"", ":", "point_oh_pred", ".", "detach", "(", ")", ".", "argmax", "(", "1", ")", ",", "\n", "\"inference_time\"", ":", "inference_time", ",", "\n", "\"kvp_out\"", ":", "kvp_out", ",", "\n", "\"point2voxel\"", ":", "point2voxel", ".", "detach", "(", ")", ",", "\n", "\"assignments_maps\"", ":", "maps", ",", "\n", "\"batch_size\"", ":", "batch_size", "\n", "}", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.training_step": [[382, 384], ["helix4d.Helix4D.global_step"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.global_step"], ["", "def", "training_step", "(", "self", ",", "batch", ",", "batch_idx", ")", ":", "\n", "        ", "return", "self", ".", "global_step", "(", "batch", ",", "batch_idx", ",", "'train'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.validation_step": [[385, 388], ["getattr"], "methods", ["None"], ["", "def", "validation_step", "(", "self", ",", "batch", ",", "batch_idx", ")", ":", "\n", "        ", "method", "=", "\"online_step\"", "if", "self", ".", "hparams", ".", "data", ".", "eval_in_online_setup", "else", "\"global_step\"", "\n", "return", "getattr", "(", "self", ",", "method", ")", "(", "batch", ",", "batch_idx", ",", "\"val\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.test_step": [[389, 398], ["getattr", "range", "helix4d.utils.apply_learning_map().cpu().numpy().astype", "helix4d.utils.apply_learning_map().cpu().numpy().astype.tofile", "batch.batch.max", "helix4d.utils.apply_learning_map().cpu().numpy", "helix4d.utils.apply_learning_map().cpu", "helix4d.utils.apply_learning_map"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.semantickitti.apply_learning_map"], ["", "def", "test_step", "(", "self", ",", "batch", ",", "batch_idx", ")", ":", "\n", "        ", "method", "=", "\"online_step\"", "if", "self", ".", "hparams", ".", "data", ".", "eval_in_online_setup", "else", "\"global_step\"", "\n", "out", "=", "getattr", "(", "self", ",", "method", ")", "(", "batch", ",", "batch_idx", ",", "\"test\"", ")", "\n", "\n", "if", "self", ".", "hparams", ".", "data", ".", "save_test_preds", ":", "\n", "            ", "for", "b", "in", "range", "(", "batch", ".", "batch", ".", "max", "(", ")", "+", "1", ")", ":", "\n", "                ", "pred", "=", "apply_learning_map", "(", "out", "[", "\"point_pred\"", "]", "[", "batch", ".", "batch", "[", "batch", ".", "backprop", "]", "==", "b", "]", ",", "self", ".", "hparams", ".", "data", ".", "learning_map_inv", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "uint32", ")", "\n", "pred", ".", "tofile", "(", "f\"sequences/{batch.seqid[b]}/predictions/{batch.scanid[b]:06}.label\"", ")", "\n", "", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.on_test_epoch_start": [[399, 402], ["super().on_test_epoch_start", "helix4d.Helix4D.on_online_epoch_start"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.on_test_epoch_start", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.on_online_epoch_start"], ["", "def", "on_test_epoch_start", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "on_test_epoch_start", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "on_online_epoch_start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.on_test_epoch_end": [[403, 406], ["super().on_test_epoch_end", "helix4d.Helix4D.on_online_epoch_end"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.on_test_epoch_end", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.on_online_epoch_end"], ["", "def", "on_test_epoch_end", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "on_test_epoch_end", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "on_online_epoch_end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.on_validation_epoch_start": [[407, 410], ["super().on_validation_epoch_start", "helix4d.Helix4D.on_online_epoch_start"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.failurecases.FailureCasesLogger.on_validation_epoch_start", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.on_online_epoch_start"], ["", "def", "on_validation_epoch_start", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "on_validation_epoch_start", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "on_online_epoch_start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.on_validation_epoch_end": [[411, 414], ["super().on_validation_epoch_end", "helix4d.Helix4D.on_online_epoch_end"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.on_validation_epoch_end", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.online.OnlineModel.on_online_epoch_end"], ["", "def", "on_validation_epoch_end", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "on_validation_epoch_end", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "on_online_epoch_end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.Helix4D.configure_optimizers": [[415, 444], ["getattr", "helix4d.Helix4D.named_parameters", "helix4d.Helix4D.named_parameters", "helix4d.Helix4D.named_parameters", "helix4d.Helix4D.named_parameters", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau"], "methods", ["None"], ["", "def", "configure_optimizers", "(", "self", ")", ":", "\n", "\n", "        ", "nowd_lr10_params", "=", "[", "p", "[", "1", "]", "for", "p", "in", "self", ".", "named_parameters", "(", ")", "if", "(", "\n", "\"_nowd\"", "in", "p", "[", "0", "]", ")", "and", "(", "\"_lr10\"", "in", "p", "[", "0", "]", ")", "]", "\n", "nowd_params", "=", "[", "p", "[", "1", "]", "for", "p", "in", "self", ".", "named_parameters", "(", ")", "if", "(", "\n", "\"_nowd\"", "in", "p", "[", "0", "]", ")", "and", "(", "\"_lr10\"", "not", "in", "p", "[", "0", "]", ")", "]", "\n", "lr10_params", "=", "[", "p", "[", "1", "]", "for", "p", "in", "self", ".", "named_parameters", "(", ")", "if", "(", "\n", "\"_nowd\"", "not", "in", "p", "[", "0", "]", ")", "and", "(", "\"_lr10\"", "in", "p", "[", "0", "]", ")", "]", "\n", "base_params", "=", "[", "p", "[", "1", "]", "for", "p", "in", "self", ".", "named_parameters", "(", ")", "if", "(", "\n", "\"_nowd\"", "not", "in", "p", "[", "0", "]", ")", "and", "(", "\"_lr10\"", "not", "in", "p", "[", "0", "]", ")", "]", "\n", "\n", "optimizer", "=", "getattr", "(", "torch", ".", "optim", ",", "self", ".", "hparams", ".", "optim", ".", "_target_", ")", "(", "\n", "[", "\n", "{", "'name'", ":", "f\"lr{10*self.hparams.optim.lr}_wd{0}\"", ",", "'params'", ":", "nowd_lr10_params", ",", "\n", "'weight_decay'", ":", "0", ",", "'lr'", ":", "10", "*", "self", ".", "hparams", ".", "optim", ".", "lr", "}", ",", "\n", "{", "'name'", ":", "f\"lr{self.hparams.optim.lr}_wd{0}\"", ",", "\n", "'params'", ":", "nowd_params", ",", "'weight_decay'", ":", "0", "}", ",", "\n", "{", "'name'", ":", "f\"lr{10*self.hparams.optim.lr}_wd{self.hparams.optim.weight_decay}\"", ",", "\n", "'params'", ":", "lr10_params", ",", "'lr'", ":", "10", "*", "self", ".", "hparams", ".", "optim", ".", "lr", "}", ",", "\n", "{", "'name'", ":", "f\"lr{self.hparams.optim.lr}_wd{self.hparams.optim.weight_decay}\"", ",", "'params'", ":", "base_params", "}", "]", ",", "\n", "lr", "=", "self", ".", "hparams", ".", "optim", ".", "lr", ",", "\n", "weight_decay", "=", "self", ".", "hparams", ".", "optim", ".", "weight_decay", "\n", ")", "\n", "\n", "return", "{", "\n", "\"optimizer\"", ":", "optimizer", ",", "\n", "\"lr_scheduler\"", ":", "{", "\n", "\"scheduler\"", ":", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "optimizer", ",", "'max'", ",", "patience", "=", "self", ".", "hparams", ".", "lr_patience", ",", "min_lr", "=", "10e-6", ")", ",", "\n", "\"monitor\"", ":", "\"IoU/val\"", ",", "\n", "}", ",", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.from_grid_to_spconvgrid": [[27, 31], ["grid.to.to", "torch.cat().contiguous", "torch.cat().contiguous", "torch.cat", "torch.cat"], "function", ["None"], ["@", "torch", ".", "jit", ".", "script", "\n", "def", "from_grid_to_spconvgrid", "(", "grid", ":", "torch", ".", "Tensor", ",", "batch_size", ":", "int", ")", ":", "\n", "    ", "grid", "=", "grid", ".", "to", "(", "torch", ".", "int32", ")", "\n", "return", "torch", ".", "cat", "(", "[", "(", "grid", "[", ":", ",", "0", "]", "+", "batch_size", "*", "grid", "[", ":", ",", "1", "]", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "grid", "[", ":", ",", "2", ":", "]", "]", ",", "-", "1", ")", ".", "contiguous", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.retrieve_pos_and_maps": [[32, 49], ["torch.div", "torch.div", "torch.cat", "torch.cat", "torch_scatter.scatter_mean", "torch.div().unsqueeze", "torch.div().unsqueeze", "torch.div", "torch.div"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "retrieve_pos_and_maps", "(", "voxel_pos", ",", "batch_size", ":", "int", ",", "spconvgrid", ",", "slice_indices", ",", "from_slicegrid_to_sliceindices", ",", "full_split_hierarchy", ")", ":", "\n", "    ", "down_spconvgrid", "=", "torch", ".", "div", "(", "spconvgrid", ",", "full_split_hierarchy", ",", "rounding_mode", "=", "\"floor\"", ")", "\n", "\n", "down_spconvindices", "=", "(", "down_spconvgrid", "*", "from_slicegrid_to_sliceindices", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "spconvtensor_indices", "=", "(", "slice_indices", "*", "from_slicegrid_to_sliceindices", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "voxel_pos", "=", "torch_scatter", ".", "scatter_mean", "(", "voxel_pos", ",", "down_spconvindices", ",", "dim", "=", "0", ")", "[", "spconvtensor_indices", "]", "\n", "\n", "slice_indices", "=", "torch", ".", "cat", "(", "[", "\n", "(", "slice_indices", "[", ":", ",", "0", "]", "%", "batch_size", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "(", "torch", ".", "div", "(", "slice_indices", "[", ":", ",", "0", "]", ",", "batch_size", ",", "rounding_mode", "=", "\"floor\"", ")", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "\n", "slice_indices", "[", ":", ",", "1", ":", "]", "]", "\n", ",", "-", "1", ")", "\n", "\n", "return", "voxel_pos", ",", "down_spconvindices", ",", "slice_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.compute_point2voxel_map": [[50, 59], ["torch.cat", "torch.cat", "torch.unique", "torch.unique", "highres_batch.unsqueeze"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "compute_point2voxel_map", "(", "highres_batch", ",", "highres_voxelind", ")", ":", "\n", "    ", "highres_ind", "=", "torch", ".", "cat", "(", "\n", "[", "highres_batch", ".", "unsqueeze", "(", "-", "1", ")", ",", "highres_voxelind", "]", ",", "-", "1", "\n", ")", "\n", "\n", "lowres_ind", ",", "highres2lowres", "=", "torch", ".", "unique", "(", "\n", "highres_ind", ",", "dim", "=", "0", ",", "return_inverse", "=", "True", ")", "\n", "return", "lowres_ind", ",", "highres2lowres", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.voxelize": [[60, 63], ["torch_scatter.scatter_mean", "torch_scatter.scatter_max"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "voxelize", "(", "highres_features", ",", "highres_pos", ",", "highres2lowres", ")", ":", "\n", "    ", "return", "torch_scatter", ".", "scatter_max", "(", "highres_features", ",", "highres2lowres", ",", "0", ")", "[", "0", "]", ",", "torch_scatter", ".", "scatter_mean", "(", "highres_pos", ",", "highres2lowres", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.upsample": [[64, 70], ["torch.cat", "torch.cat", "torch.index_select", "torch.index_select"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "upsample", "(", "point2voxel", ",", "point_features", ",", "voxel_features", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "[", "\n", "point_features", ",", "\n", "torch", ".", "index_select", "(", "voxel_features", ",", "0", ",", "point2voxel", ")", "\n", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.helix4d.upsample_backprop": [[71, 77], ["torch.cat", "torch.cat", "torch.index_select", "torch.index_select"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "upsample_backprop", "(", "backprop", ",", "point2voxel", ",", "point_features", ",", "voxel_features", ")", ":", "\n", "    ", "return", "torch", ".", "cat", "(", "[", "\n", "point_features", "[", "backprop", "]", ",", "\n", "torch", ".", "index_select", "(", "voxel_features", ",", "0", ",", "point2voxel", "[", "backprop", "]", ")", "\n", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.logging.LoggingModel.do_greedy_step": [[18, 20], ["int"], "methods", ["None"], ["    ", "def", "do_greedy_step", "(", "self", ")", ":", "\n", "        ", "return", "(", "self", ".", "current_epoch", "%", "int", "(", "self", ".", "hparams", ".", "log_every_n_epochs", ")", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.logging.LoggingModel.on_train_start": [[21, 58], ["super().on_train_start", "torch.no_grad", "torch.linspace().unsqueeze", "enumerate", "torch.cat().to", "logging.LoggingModel.voxel_transformer.from_dxyz_to_bucket().detach().cpu().numpy", "matplotlib.figure", "matplotlib.plot", "matplotlib.title", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.figure.canvas.print_to_buffer", "matplotlib.clf", "matplotlib.close", "logging.LoggingModel.logger.experiment.add_image", "torch.linspace", "torch.linspace().unsqueeze.detach().cpu().numpy", "numpy.fromstring().reshape", "torch.cat", "logging.LoggingModel.voxel_transformer.from_dxyz_to_bucket().detach().cpu", "torch.linspace().unsqueeze.detach().cpu", "numpy.fromstring", "logging.LoggingModel.voxel_transformer.from_dxyz_to_bucket().detach", "torch.linspace().unsqueeze.detach", "float", "float", "float", "logging.LoggingModel.voxel_transformer.from_dxyz_to_bucket"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.logging.LoggingModel.on_train_start"], ["", "def", "on_train_start", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "hparams", ".", "transformer", ".", "do_relative_positional", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "avail_dr", "=", "torch", ".", "linspace", "(", "-", "self", ".", "hparams", ".", "transformer", ".", "spatial_receptive_field", "-", "2", ",", "self", ".", "hparams", ".", "transformer", ".", "spatial_receptive_field", "+", "2", ",", "1000", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n", "for", "ixyz", ",", "xyz", "in", "enumerate", "(", "[", "\"x\"", ",", "\"y\"", ",", "\"z\"", "]", ")", ":", "\n", "\n", "                    ", "avail_dr3", "=", "torch", ".", "cat", "(", "[", "\n", "avail_dr", "-", "10000", "*", "float", "(", "ixyz", "!=", "0", ")", ",", "\n", "avail_dr", "-", "10000", "*", "float", "(", "ixyz", "!=", "1", ")", ",", "\n", "avail_dr", "-", "10000", "*", "float", "(", "ixyz", "!=", "2", ")", "\n", "]", ",", "-", "1", ")", ".", "to", "(", "self", ".", "voxel_transformer", ".", "mul_buckets", ".", "device", ")", "\n", "\n", "buckets", "=", "self", ".", "voxel_transformer", ".", "from_dxyz_to_bucket", "(", "avail_dr3", ",", "self", ".", "voxel_transformer", ".", "mul_buckets", ",", "\n", "self", ".", "voxel_transformer", ".", "alpha", ",", "\n", "self", ".", "voxel_transformer", ".", "beta", ",", "\n", "self", ".", "voxel_transformer", ".", "gamma", ",", "\n", "self", ".", "voxel_transformer", ".", "gresolution", "\n", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "figure", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "avail_dr", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "buckets", ")", "\n", "\n", "plt", ".", "title", "(", "\"Relative xyz buckets\"", ")", "\n", "plt", ".", "xlabel", "(", "f'd{xyz}'", ")", "\n", "plt", ".", "ylabel", "(", "'Bucket id'", ")", "\n", "s", ",", "(", "width", ",", "height", ")", "=", "figure", ".", "canvas", ".", "print_to_buffer", "(", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "plt", ".", "close", "(", "figure", ")", "\n", "del", "figure", "\n", "\n", "self", ".", "logger", ".", "experiment", ".", "add_image", "(", "\n", "f\"Transformer/positional_relative_{xyz}\"", ",", "np", ".", "fromstring", "(", "s", ",", "np", ".", "uint8", ")", ".", "reshape", "(", "(", "height", ",", "width", ",", "4", ")", ")", ",", "\n", "global_step", "=", "0", ",", "dataformats", "=", "'HWC'", "\n", ")", "\n", "\n", "", "", "", "return", "super", "(", ")", ".", "on_train_start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.logging.LoggingModel.log_attention": [[59, 282], ["torch.no_grad", "hasattr", "hasattr", "logging.LoggingModel.do_greedy_step", "logging.LoggingModel.logger.experiment.add_image", "logging.LoggingModel.log", "logging.LoggingModel.logger.experiment.add_histogram", "enumerate", "enumerate", "torch.stack", "torch.div", "voxel_ind[].detach().cpu().long", "voxel_batch[].long", "point_pos.detach().cpu.detach().cpu.detach().cpu", "voxel_pos.detach().cpu.detach().cpu.detach().cpu", "torch_scatter.scatter_mean", "range", "numpy.logical_and", "range", "numpy.concatenate", "logging.LoggingModel.voxel_transformer.positional.get_display", "logging.LoggingModel.voxel_transformer.positional.get_scale().data.mean", "voxel_ind[].detach().cpu().max", "logging.LoggingModel.logger.experiment.add_histogram", "hasattr", "logging.LoggingModel.logger.experiment.add_histogram", "logging.LoggingModel.logger.experiment.add_histogram", "min", "torch.div.max", "equals.append", "frame_ids.append", "highposs.append", "projections.append", "not_projecteds.append", "batch_point2voxel.append", "numpy.logical_and().astype", "P.append", "range", "range", "logging.LoggingModel.voxel_transformer.positional.get_scale", "isinstance", "hasattr", "len", "voxel_ind[].detach().cpu", "point_pos.detach().cpu.detach().cpu.detach", "voxel_pos.detach().cpu.detach().cpu.detach", "torch.div.detach().cpu().numpy", "[].detach().cpu().numpy", "numpy.logical_and().astype.sum", "numpy.random.choice", "voxel_ind.size", "videos[].permute", "video.flatten().flatten().unsqueeze.flatten().flatten().unsqueeze.flatten().flatten().unsqueeze", "enumerate", "voxel_ind[].detach().cpu", "block.attention.get_T().detach", "enumerate", "logging.LoggingModel.logger.experiment.add_histogram", "enumerate", "hasattr", "torch_scatter.scatter_max", "do_projection", "numpy.logical_and", "numpy.logical_and().astype.sum", "voxel_ind.size", "range", "nokeep.size", "logging.LoggingModel.logger.experiment.add_video", "logging.LoggingModel.voxel_transformer.positional.get_scale", "logging.LoggingModel.logger.experiment.add_histogram", "isinstance", "logging.LoggingModel.logger.experiment.add_histogram", "torch.unique", "voxel_ind[].detach", "range", "range", "torch.div.detach().cpu", "[].detach().cpu", "torch.logical_and", "reversed", "video.flatten().flatten().unsqueeze.flatten().flatten().unsqueeze.flatten().flatten", "video[].flatten().min", "voxel_ind[].detach", "block.attention.get_T", "logging.LoggingModel.logger.experiment.add_histogram", "logging.LoggingModel.logger.experiment.add_histogram", "numpy.logical_and().astype.sum", "range", "torch.zeros().type_as", "torch.cat.unsqueeze", "torch.cat", "getattr", "torch.div.detach", "[].detach", "voxel_ind.size", "len", "torch.from_numpy", "torch.ones", "range", "logging.LoggingModel.get_contours", "logging.LoggingModel.dilatation_image", "contours.unsqueeze().unsqueeze().unsqueeze.unsqueeze().unsqueeze().unsqueeze.unsqueeze().unsqueeze().unsqueeze", "torch.ones.unsqueeze", "torch.cat", "video.flatten().flatten().unsqueeze.flatten().flatten().unsqueeze.flatten", "video[].flatten", "torch.zeros", "helix4d.utils.do_focus_projection", "torch.zeros().bool", "torch.from_numpy", "logging.LoggingModel.dilatation_image", "torch.cat.unsqueeze", "torch.zeros().type_as.max", "numpy.logical_and().astype.size", "numpy.logical_and().astype.size", "contours.unsqueeze().unsqueeze().unsqueeze.unsqueeze().unsqueeze().unsqueeze.unsqueeze().unsqueeze", "contours.unsqueeze().unsqueeze().unsqueeze.unsqueeze().unsqueeze().unsqueeze.float", "torch.tensor().view", "torch.ones.unsqueeze", "voxel_pos[].abs().max", "voxel_ind[].detach().cpu().long.size", "numpy.logical_and().astype.size", "numpy.logical_and().astype.size", "matplotlib.cm.get_cmap", "torch.zeros().type_as.detach().cpu().numpy", "torch.zeros", "do_projection", "contours.unsqueeze().unsqueeze().unsqueeze.unsqueeze().unsqueeze().unsqueeze.float", "voxel_pos[].unsqueeze", "contours.unsqueeze().unsqueeze().unsqueeze.unsqueeze().unsqueeze().unsqueeze.unsqueeze", "torch.tensor", "voxel_pos[].abs", "torch.zeros().type_as.detach().cpu", "torch.zeros().type_as.detach"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.do_greedy_step", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.Attention.get_T", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.logging.LoggingModel.get_contours", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.logging.LoggingModel.dilatation_image", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.projection.do_focus_projection", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.logging.LoggingModel.dilatation_image"], ["", "def", "log_attention", "(", "self", ",", "batch_idx", ",", "probas", ",", "iq", ",", "ik", ",", "voxel_pos", ",", "voxel_ind", ",", "point_pos", ",", "point2voxel", ",", "maps", "=", "None", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "if", "self", ".", "training", "and", "hasattr", "(", "self", ".", "logger", ",", "\"experiment\"", ")", ":", "\n", "                ", "if", "batch_idx", "==", "0", ":", "\n", "                    ", "if", "hasattr", "(", "self", ".", "voxel_transformer", ",", "\"positional\"", ")", ":", "\n", "                        ", "self", ".", "logger", ".", "experiment", ".", "add_image", "(", "\n", "f\"XYZT/positional_absolute\"", ",", "self", ".", "voxel_transformer", ".", "positional", ".", "get_display", "(", ")", ",", "\n", "global_step", "=", "self", ".", "current_epoch", ",", "dataformats", "=", "'HWC'", "\n", ")", "\n", "\n", "self", ".", "log", "(", "f'XYZT/positional/scale_nowd'", ",", "self", ".", "voxel_transformer", ".", "positional", ".", "get_scale", "(", ")", ".", "data", ".", "mean", "(", ")", ",", "\n", "on_step", "=", "False", ",", "on_epoch", "=", "True", ")", "\n", "self", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "\n", "f'XYZT/positional/scale_nowd_hist'", ",", "self", ".", "voxel_transformer", ".", "positional", ".", "get_scale", "(", ")", ".", "data", ",", "global_step", "=", "self", ".", "current_epoch", ")", "\n", "\n", "", "if", "self", ".", "do_greedy_step", "(", ")", ":", "\n", "                        ", "do_projection", ",", "h", ",", "w", "=", "do_up_projection", ",", "PROJ_UP_H", ",", "PROJ_UP_H", "\n", "batch_size", "=", "voxel_ind", "[", ":", ",", "0", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "max", "(", ")", "+", "1", "\n", "\n", "for", "n", ",", "block", "in", "enumerate", "(", "self", ".", "voxel_transformer", ".", "blocks", ")", ":", "\n", "                            ", "self", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "f'XYZT/temperature/{n}'", ",", "block", ".", "attention", ".", "get_T", "(", ")", ".", "detach", "(", ")", ".", "data", ",", "global_step", "=", "self", ".", "current_epoch", ")", "\n", "if", "hasattr", "(", "block", ".", "attention", ",", "\"relative_positional_encoding_nowd\"", ")", ":", "\n", "                                ", "if", "isinstance", "(", "block", ".", "attention", ".", "relative_positional_encoding_nowd", ",", "nn", ".", "ParameterList", ")", ":", "\n", "                                    ", "for", "idrpenowd", ",", "rpenowd", "in", "enumerate", "(", "block", ".", "attention", ".", "relative_positional_encoding_nowd", ")", ":", "\n", "                                        ", "self", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "f'XYZT/relative_posenc/{n}/{idrpenowd}'", ",", "rpenowd", ",", "global_step", "=", "self", ".", "current_epoch", ")", "\n", "", "", "else", ":", "\n", "                                    ", "self", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "f'XYZT/relative_posenc/{n}'", ",", "block", ".", "attention", ".", "relative_positional_encoding_nowd", ",", "global_step", "=", "self", ".", "current_epoch", ")", "\n", "\n", "", "", "", "for", "n", ",", "proba", "in", "enumerate", "(", "probas", ")", ":", "\n", "\n", "                            ", "if", "self", ".", "hparams", ".", "transformer", ".", "DEBUG", ":", "\n", "                                ", "if", "hasattr", "(", "self", ".", "voxel_transformer", ".", "blocks", "[", "n", "]", ",", "\"feed_forward\"", ")", ":", "\n", "                                    ", "for", "ilayer", ",", "layer", "in", "enumerate", "(", "self", ".", "voxel_transformer", ".", "blocks", "[", "n", "]", ".", "feed_forward", ")", ":", "\n", "                                        ", "if", "isinstance", "(", "layer", ",", "torch", ".", "nn", ".", "Linear", ")", ":", "\n", "                                            ", "self", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "\n", "f\"XYZT_block{n}_param/FF_weight{ilayer}\"", ",", "\n", "layer", ".", "weight", ",", "\n", "global_step", "=", "self", ".", "current_epoch", "\n", ")", "\n", "self", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "\n", "f\"XYZT_block{n}_param/FF_bias{ilayer}\"", ",", "\n", "layer", ".", "bias", ",", "\n", "global_step", "=", "self", ".", "current_epoch", "\n", ")", "\n", "\n", "", "", "", "for", "qkvo", "in", "[", "\"q\"", ",", "\"k\"", ",", "\"v\"", ",", "\"o\"", "]", ":", "\n", "                                    ", "if", "hasattr", "(", "self", ".", "voxel_transformer", ".", "blocks", "[", "n", "]", ".", "attention", ",", "f\"{qkvo}_linear\"", ")", ":", "\n", "                                        ", "self", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "\n", "f\"XYZT_block{n}_param/{qkvo}\"", ",", "\n", "getattr", "(", "self", ".", "voxel_transformer", ".", "blocks", "[", "n", "]", ".", "attention", ",", "f\"{qkvo}_linear\"", ")", ".", "weight", ",", "\n", "global_step", "=", "self", ".", "current_epoch", "\n", ")", "\n", "\n", "", "", "", "self", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "\n", "f\"XYZT_proba/{n}\"", ",", "proba", ",", "global_step", "=", "self", ".", "current_epoch", ")", "\n", "self", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "\n", "f\"XYZT_proba/{n}_max_received\"", ",", "torch_scatter", ".", "scatter_max", "(", "proba", ",", "iq", ",", "0", ")", "[", "0", "]", ",", "global_step", "=", "self", ".", "current_epoch", ")", "\n", "\n", "\n", "batch_size_printed", "=", "min", "(", "batch_size", ",", "self", ".", "hparams", ".", "transformer", ".", "N_LOG_ITEM", ")", "\n", "\n", "", "allproba", "=", "torch", ".", "stack", "(", "probas", "[", ":", "self", ".", "hparams", ".", "transformer", ".", "N_LOG_ATT", "]", ",", "-", "1", ")", "\n", "\n", "batch_point2voxel", ",", "equals", ",", "frame_ids", ",", "projections", ",", "highposs", ",", "not_projecteds", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "voxel_frame_id", "=", "torch", ".", "div", "(", "voxel_ind", "[", ":", ",", "1", "]", ",", "self", ".", "hparams", ".", "data", ".", "slices_per_rotation", ",", "rounding_mode", "=", "'floor'", ")", "\n", "n_frameid", "=", "voxel_frame_id", ".", "max", "(", ")", "+", "1", "\n", "\n", "if", "maps", "is", "not", "None", ":", "\n", "                            ", "if", "len", "(", "maps", ")", "==", "1", ":", "\n", "                                ", "point2voxel", "=", "torch", ".", "unique", "(", "maps", "[", "0", "]", ",", "return_inverse", "=", "True", ")", "[", "-", "1", "]", "[", "point2voxel", "]", "\n", "", "else", ":", "\n", "                                ", "for", "map", "in", "maps", ":", "\n", "                                    ", "point2voxel", "=", "map", "[", "point2voxel", "]", "\n", "\n", "", "", "", "point_frame_id", "=", "voxel_frame_id", "[", "point2voxel", "]", "\n", "voxel_batch", "=", "voxel_ind", "[", ":", ",", "0", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "long", "(", ")", "\n", "point_batch", "=", "voxel_batch", "[", "point2voxel", "]", ".", "long", "(", ")", "\n", "\n", "point_pos", "=", "point_pos", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "voxel_pos", "=", "voxel_pos", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "mean_pos", "=", "torch_scatter", ".", "scatter_mean", "(", "voxel_pos", "[", "voxel_frame_id", "==", "0", "]", ",", "voxel_batch", "[", "voxel_frame_id", "==", "0", "]", ",", "0", ")", "\n", "point_pos", "=", "point_pos", "-", "mean_pos", "[", "point_batch", "]", "\n", "voxel_pos", "=", "voxel_pos", "-", "mean_pos", "[", "voxel_batch", "]", "\n", "\n", "for", "b", "in", "range", "(", "batch_size_printed", ")", ":", "\n", "                            ", "equals", ".", "append", "(", "point_batch", "==", "b", ")", "\n", "frame_ids", ".", "append", "(", "point_frame_id", "[", "equals", "[", "-", "1", "]", "]", ")", "\n", "\n", "highposs", ".", "append", "(", "[", "point_pos", "[", "equals", "[", "-", "1", "]", "]", "[", "frame_ids", "[", "-", "1", "]", "==", "frame_id", "]", "for", "frame_id", "in", "range", "(", "n_frameid", ")", "]", ")", "\n", "projections", ".", "append", "(", "[", "do_projection", "(", "p", ")", "for", "p", "in", "highposs", "[", "-", "1", "]", "]", ")", "\n", "not_projecteds", ".", "append", "(", "[", "p", "<", "0", "for", "p", "in", "projections", "[", "-", "1", "]", "]", ")", "\n", "\n", "batch_point2voxel", ".", "append", "(", "[", "point2voxel", "[", "equals", "[", "-", "1", "]", "]", "[", "frame_ids", "[", "-", "1", "]", "==", "frame_id", "]", "for", "frame_id", "in", "range", "(", "n_frameid", ")", "]", ")", "\n", "\n", "", "printvoxel_cond", "=", "np", ".", "logical_and", "(", "voxel_frame_id", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "==", "0", ",", "voxel_pos", "[", ":", ",", ":", "2", "]", ".", "abs", "(", ")", ".", "max", "(", "-", "1", ")", "[", "0", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "<", "PROJ_FOV_XY", ")", "\n", "P", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "batch_size_printed", ")", ":", "\n", "                            ", "p", "=", "np", ".", "logical_and", "(", "printvoxel_cond", ",", "(", "voxel_batch", "==", "b", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "float", ")", "\n", "p", "=", "p", "/", "p", ".", "sum", "(", ")", "\n", "P", ".", "append", "(", "p", "/", "p", ".", "sum", "(", ")", ")", "\n", "\n", "", "printvoxel", "=", "np", ".", "concatenate", "(", "[", "\n", "np", ".", "random", ".", "choice", "(", "\n", "voxel_ind", ".", "size", "(", "0", ")", ",", "\n", "self", ".", "hparams", ".", "transformer", ".", "VIDEO_SUPERVOXEL", ",", "\n", "replace", "=", "False", ",", "\n", "p", "=", "p", "/", "p", ".", "sum", "(", ")", "\n", ")", "for", "p", "in", "P", "]", ")", "\n", "\n", "for", "DO_FOCUS_PROJECTION", "in", "self", ".", "hparams", ".", "transformer", ".", "do_focus_projection", ":", "\n", "                            ", "videos", "=", "[", "None", "for", "_", "in", "range", "(", "batch_size_printed", ")", "]", "\n", "for", "query", "in", "range", "(", "voxel_ind", ".", "size", "(", "0", ")", ")", ":", "\n", "                                ", "batch_query", "=", "voxel_batch", "[", "query", "]", "\n", "if", "batch_query", "<", "batch_size_printed", ":", "\n", "                                    ", "query_frame_id", "=", "voxel_frame_id", "[", "query", "]", "\n", "\n", "if", "query", "in", "printvoxel", ":", "\n", "                                        ", "iskey", "=", "torch", ".", "logical_and", "(", "iq", "==", "query", ",", "ik", "<", "voxel_ind", ".", "size", "(", "0", ")", ")", "\n", "\n", "key", "=", "ik", "[", "iskey", "]", "\n", "\n", "p", "=", "allproba", "[", "iskey", "]", "\n", "\n", "colored_images", "=", "None", "\n", "\n", "for", "frame_id", "in", "reversed", "(", "range", "(", "n_frameid", ")", ")", ":", "\n", "\n", "                                            ", "image", "=", "torch", ".", "zeros", "(", "\n", "(", "voxel_batch", ".", "size", "(", "0", ")", ",", "p", ".", "size", "(", "-", "2", ")", ",", "p", ".", "size", "(", "-", "1", ")", ")", ")", ".", "type_as", "(", "p", ")", "\n", "image", "[", "key", "]", "=", "p", "\n", "\n", "image", "=", "image", "[", "batch_point2voxel", "[", "batch_query", "]", "[", "frame_id", "]", "]", "\n", "\n", "if", "len", "(", "image", ")", "!=", "0", ":", "\n", "\n", "                                                ", "p_is_0", "=", "(", "\n", "image", "!=", "0", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "image", "=", "image", "/", "image", ".", "max", "(", "0", ")", "[", "0", "]", "\n", "\n", "colored_image", "=", "torch", ".", "from_numpy", "(", "cm", ".", "get_cmap", "(", "\n", "\"coolwarm\"", ")", "(", "image", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "[", "...", ",", ":", "-", "1", "]", ")", "\n", "\n", "colored_image", "=", "colored_image", "*", "p_is_0", "\n", "\n", "#seg_image = self.from_labels_to_color(highsegs[batch_query][frame_id], dark=True).unsqueeze(1).unsqueeze(1)", "\n", "#colored_image = colored_image + ~p_is_0*seg_image", "\n", "\n", "if", "DO_FOCUS_PROJECTION", ":", "\n", "# highpos[equals[batch_query]][frame_ids[batch_query]==frame_id]", "\n", "                                                    ", "position_to_project", "=", "highposs", "[", "batch_query", "]", "[", "frame_id", "]", "\n", "focus_id", "=", "(", "\n", "(", "position_to_project", "-", "voxel_pos", "[", "query", "]", ")", "**", "2", ")", ".", "sum", "(", "-", "1", ")", ".", "argmin", "(", ")", "\n", "projection", "=", "do_focus_projection", "(", "\n", "position_to_project", ",", "focus_id", "=", "focus_id", ")", "\n", "colored_image", "=", "colored_image", "[", "projection", "]", "\n", "colored_image", "[", "projection", "<", "0", "]", "=", "1.", "\n", "", "else", ":", "\n", "                                                    ", "colored_image", "=", "colored_image", "[", "projections", "[", "batch_query", "]", "[", "frame_id", "]", "]", "\n", "colored_image", "[", "not_projecteds", "[", "batch_query", "]", "\n", "[", "frame_id", "]", "]", "=", "1.", "\n", "\n", "", "", "else", ":", "\n", "                                                ", "colored_image", "=", "torch", ".", "ones", "(", "\n", "(", "h", ",", "w", ",", "p", ".", "size", "(", "-", "2", ")", ",", "p", ".", "size", "(", "-", "1", ")", ",", "3", ")", ")", "\n", "\n", "", "if", "query_frame_id", "==", "frame_id", ":", "\n", "                                                ", "if", "DO_FOCUS_PROJECTION", ":", "\n", "                                                    ", "inside", "=", "torch", ".", "zeros", "(", "\n", "(", "h", ",", "w", ")", ")", ".", "bool", "(", ")", "\n", "inside", "[", "h", "//", "2", ",", "w", "//", "2", "]", "=", "True", "\n", "", "else", ":", "\n", "                                                    ", "inside", "=", "torch", ".", "from_numpy", "(", "do_projection", "(", "\n", "voxel_pos", "[", "query", "]", ".", "unsqueeze", "(", "0", ")", ")", "!=", "-", "1", ")", "\n", "", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "                                                    ", "inside", "=", "self", ".", "dilatation_image", "(", "\n", "inside", ",", "torch", ".", "logical_or", ")", "\n", "", "contours", "=", "self", ".", "get_contours", "(", "\n", "colored_image", ",", "inside", ")", "\n", "contours", "=", "self", ".", "dilatation_image", "(", "\n", "contours", ",", "torch", ".", "maximum", ")", "\n", "\n", "contours", "=", "contours", ".", "unsqueeze", "(", "\n", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "colored_image", "=", "(", "1", "-", "contours", ".", "float", "(", ")", ")", "*", "colored_image", "+", "contours", ".", "float", "(", "\n", ")", "*", "torch", ".", "tensor", "(", "[", "0.", ",", "1.", ",", "0.", "]", ",", "device", "=", "colored_image", ".", "device", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "1", ",", "-", "1", ")", "\n", "\n", "", "colored_image", "=", "(", "\n", "255", "*", "colored_image", ")", ".", "to", "(", "torch", ".", "uint8", ")", "\n", "\n", "if", "colored_images", "is", "None", ":", "\n", "                                                ", "colored_images", "=", "colored_image", ".", "unsqueeze", "(", "\n", "0", ")", "\n", "", "else", ":", "\n", "                                                ", "colored_images", "=", "torch", ".", "cat", "(", "\n", "[", "colored_images", ",", "colored_image", ".", "unsqueeze", "(", "0", ")", "]", ",", "0", ")", "\n", "\n", "", "", "if", "videos", "[", "batch_query", "]", "is", "None", ":", "\n", "                                            ", "videos", "[", "batch_query", "]", "=", "colored_images", ".", "unsqueeze", "(", "\n", "0", ")", "\n", "", "else", ":", "\n", "                                            ", "videos", "[", "batch_query", "]", "=", "torch", ".", "cat", "(", "\n", "[", "videos", "[", "batch_query", "]", ",", "colored_images", ".", "unsqueeze", "(", "0", ")", "]", ",", "0", ")", "\n", "\n", "\n", "", "", "", "", "for", "b", "in", "range", "(", "batch_size_printed", ")", ":", "\n", "                                ", "video", "=", "videos", "[", "b", "]", ".", "permute", "(", "\n", "5", ",", "0", ",", "6", ",", "4", ",", "2", ",", "1", ",", "3", ")", "\n", "\n", "video", "=", "video", ".", "flatten", "(", "-", "2", ",", "-", "1", ")", ".", "flatten", "(", "-", "3", ",", "-", "2", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "nokeep", "=", "video", "[", "0", "]", ".", "flatten", "(", "0", ",", "-", "2", ")", ".", "min", "(", "0", ")", "[", "0", "]", "==", "255", "\n", "start", ",", "end", "=", "0", ",", "nokeep", ".", "size", "(", "-", "1", ")", "\n", "while", "nokeep", "[", "start", "]", "and", "start", "<", "end", ":", "\n", "                                    ", "start", "+=", "1", "\n", "", "while", "nokeep", "[", "end", "-", "1", "]", "and", "start", "<", "end", ":", "\n", "                                    ", "end", "-=", "1", "\n", "", "video", "=", "video", "[", "...", ",", "start", ":", "end", "]", "\n", "\n", "for", "n", ",", "videon", "in", "enumerate", "(", "video", ")", ":", "\n", "                                    ", "label", "=", "\"FOCUS\"", "if", "DO_FOCUS_PROJECTION", "else", "\"BEV\"", "\n", "self", ".", "logger", ".", "experiment", ".", "add_video", "(", "\n", "f\"attention_{label}_{n}/{b}\"", ",", "videon", ",", "global_step", "=", "self", ".", "current_epoch", ",", "fps", "=", "1", "/", "(", "1.", "+", "DO_FOCUS_PROJECTION", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.logging.LoggingModel.get_contours": [[283, 292], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "inside.float"], "methods", ["None"], ["", "", "", "", "", "", "", "", "def", "get_contours", "(", "self", ",", "colored_image", ",", "inside", ")", ":", "\n", "        ", "contours", "=", "torch", ".", "cat", "(", "[", "inside", "[", "1", ":", "]", ",", "0", "*", "inside", "[", ":", "1", "]", "]", ",", "0", ")", "+", "torch", ".", "cat", "(", "[", "inside", "[", ":", "-", "1", "]", ",", "0", "*", "inside", "[", "-", "1", ":", "]", "]", ",", "0", ")", "+", "torch", ".", "cat", "(", "\n", "[", "inside", "[", ":", ",", "1", ":", "]", ",", "0", "*", "inside", "[", ":", ",", ":", "1", "]", "]", ",", "1", ")", "+", "torch", ".", "cat", "(", "[", "inside", "[", ":", ",", ":", "-", "1", "]", ",", "0", "*", "inside", "[", ":", ",", "-", "1", ":", "]", "]", ",", "1", ")", "\n", "contours", "[", "1", ":", ",", "1", ":", "]", "=", "contours", "[", "1", ":", ",", "1", ":", "]", "+", "inside", "[", ":", "-", "1", ",", ":", "-", "1", "]", "\n", "contours", "[", ":", "-", "1", ",", ":", "-", "1", "]", "=", "contours", "[", ":", "-", "1", ",", ":", "-", "1", "]", "+", "inside", "[", "1", ":", ",", "1", ":", "]", "\n", "contours", "[", ":", "-", "1", ",", "1", ":", "]", "=", "contours", "[", ":", "-", "1", ",", "1", ":", "]", "+", "inside", "[", "1", ":", ",", ":", "-", "1", "]", "\n", "contours", "[", "1", ":", ",", ":", "-", "1", "]", "=", "contours", "[", "1", ":", ",", ":", "-", "1", "]", "+", "inside", "[", ":", "-", "1", ",", "1", ":", "]", "\n", "contours", "=", "(", "contours", "*", "(", "1", "-", "inside", ".", "float", "(", ")", ")", ">", "0", ")", ".", "to", "(", "colored_image", ".", "device", ")", "\n", "return", "contours", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.model.logging.LoggingModel.dilatation_image": [[293, 304], ["func", "func", "func", "func", "func", "func", "func", "func"], "methods", ["None"], ["", "def", "dilatation_image", "(", "self", ",", "inside", ",", "func", "=", "torch", ".", "logical_or", ")", ":", "\n", "        ", "inside", "[", ":", "-", "2", ",", ":", "-", "2", "]", "=", "func", "(", "inside", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ",", "inside", "[", ":", "-", "2", ",", ":", "-", "2", "]", ")", "\n", "inside", "[", "1", ":", "-", "1", ",", ":", "-", "2", "]", "=", "func", "(", "inside", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ",", "inside", "[", "1", ":", "-", "1", ",", ":", "-", "2", "]", ")", "\n", "inside", "[", "2", ":", ",", ":", "-", "2", "]", "=", "func", "(", "inside", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ",", "inside", "[", "2", ":", ",", ":", "-", "2", "]", ")", "\n", "inside", "[", ":", "-", "2", ",", "2", ":", "]", "=", "func", "(", "inside", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ",", "inside", "[", ":", "-", "2", ",", "2", ":", "]", ")", "\n", "inside", "[", "1", ":", "-", "1", ",", "2", ":", "]", "=", "func", "(", "inside", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ",", "inside", "[", "1", ":", "-", "1", ",", "2", ":", "]", ")", "\n", "inside", "[", "2", ":", ",", "2", ":", "]", "=", "func", "(", "inside", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ",", "inside", "[", "2", ":", ",", "2", ":", "]", ")", "\n", "inside", "[", ":", "-", "2", ",", "1", ":", "-", "1", "]", "=", "func", "(", "inside", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ",", "inside", "[", ":", "-", "2", ",", "1", ":", "-", "1", "]", ")", "\n", "inside", "[", "2", ":", ",", "1", ":", "-", "1", "]", "=", "func", "(", "inside", "[", "1", ":", "-", "1", ",", "1", ":", "-", "1", "]", ",", "inside", "[", "2", ":", ",", "1", ":", "-", "1", "]", ")", "\n", "\n", "return", "inside", "\n", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.point.encoders.LinearEncoder": [[3, 13], ["range", "torch.nn.Sequential", "len", "layers.append", "layers.append", "torch.nn.Linear", "layers.append", "torch.nn.ReLU", "torch.nn.BatchNorm1d"], "function", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear"], ["def", "LinearEncoder", "(", "dim_in", "=", "10", ",", "encoder", "=", "[", "128", ",", "128", "]", ",", "norm", "=", "True", ")", ":", "\n", "\n", "    ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "encoder", ")", ")", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "dim_in", "if", "i", "==", "0", "else", "encoder", "[", "i", "-", "1", "]", ",", "encoder", "[", "i", "]", ",", "bias", "=", "not", "norm", ")", ")", "\n", "if", "norm", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "BatchNorm1d", "(", "encoder", "[", "i", "]", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.point.decoders.LinearDecoder": [[3, 14], ["range", "layers.append", "torch.nn.Sequential", "len", "layers.append", "layers.append", "torch.nn.Linear", "torch.nn.Linear", "layers.append", "torch.nn.ReLU", "torch.nn.BatchNorm1d", "len"], "function", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear"], ["def", "LinearDecoder", "(", "dim_in", "=", "128", ",", "decoder", "=", "[", "128", ",", "128", "]", ",", "dim_out", "=", "20", ",", "norm", "=", "True", ")", ":", "\n", "\n", "    ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "decoder", ")", ")", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "dim_in", "if", "i", "==", "0", "else", "decoder", "[", "i", "-", "1", "]", ",", "decoder", "[", "i", "]", ",", "bias", "=", "not", "norm", ")", ")", "\n", "if", "norm", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "BatchNorm1d", "(", "decoder", "[", "i", "]", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "decoder", "[", "-", "1", "]", "if", "len", "(", "decoder", ")", ">", "0", "else", "dim_in", ",", "dim_out", ")", ")", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.MySequential.forward": [[6, 9], ["torch.profiler.record_function", "super().forward"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.forward"], ["    ", "def", "forward", "(", "self", ",", "features", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"MySeq\"", ")", ":", "\n", "            ", "return", "super", "(", ")", ".", "forward", "(", "features", ")", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear": [[10, 21], ["layers.append", "layers.append", "range", "linear.MySequential", "torch.nn.BatchNorm1d", "torch.nn.ReLU", "layers.append", "layers.append", "layers.append", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.ReLU"], "function", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear"], ["", "", "", "def", "Linear", "(", "dim_in", ",", "transformer", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm1d", "(", "dim_in", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "for", "_", "in", "range", "(", "transformer", ".", "n_layers", ")", ":", "\n", "        ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "dim_in", ",", "dim_in", ",", "bias", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm1d", "(", "dim_in", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "", "return", "MySequential", "(", "*", "layers", ")", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.__init__": [[144, 226], ["torch.nn.Module.__init__", "transformer copy.Transformer.register_buffer", "transformer copy.Transformer.register_buffer", "torch.nn.ModuleList", "torch.nn.ModuleList", "transformer copy.Transformer.register_buffer", "transformer copy.Transformer.register_buffer", "transformer copy.Transformer.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "transformer copy.Transformer.register_buffer", "transformer copy.Transformer.register_buffer", "transformer copy.Transformer.register_buffer", "transformer copy.Transformer.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "sparseops.LayerNorm", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "transformer copy.Transformer.register_buffer", "TransformerBlock", "sparseops.LayerNorm", "ValueError", "list.numel", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "list", "transformer copy.Transformer.register_buffer", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "list.numel", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "list.numel", "numpy.array", "list", "numpy.cumsum"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "transformer", ",", "temporal_transformer", "=", "False", ",", "slices_per_rotation", "=", "1", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "spatial_receptive_field", "=", "transformer", ".", "spatial_receptive_field", "\n", "self", ".", "spatial_receptive_field2", "=", "transformer", ".", "spatial_receptive_field", "**", "2", "\n", "self", ".", "force_keep_neighbours", "=", "transformer", ".", "force_keep_neighbours", "\n", "self", ".", "temporal_transformer", "=", "temporal_transformer", "\n", "self", ".", "slices_per_rotation", "=", "slices_per_rotation", "\n", "\n", "self", ".", "register_buffer", "(", "\"zero_kvp_in_pos\"", ",", "torch", ".", "zeros", "(", "(", "0", ",", "4", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"zero_kvp_in_grid\"", ",", "torch", ".", "zeros", "(", "(", "0", ",", "5", ")", ",", "dtype", "=", "torch", ".", "int32", ")", ")", "\n", "\n", "if", "transformer", ".", "do_relative_positional", ":", "\n", "            ", "self", ".", "register_buffer", "(", "\"alpha\"", ",", "torch", ".", "tensor", "(", "\n", "transformer", ".", "relative_positional_alpha", ",", "dtype", "=", "torch", ".", "float16", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"beta\"", ",", "torch", ".", "tensor", "(", "\n", "transformer", ".", "relative_positional_beta", ",", "dtype", "=", "torch", ".", "float16", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"gamma\"", ",", "torch", ".", "tensor", "(", "\n", "transformer", ".", "relative_positional_gamma", ",", "dtype", "=", "torch", ".", "float16", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"gresolution\"", ",", "torch", ".", "tensor", "(", "\n", "transformer", ".", "relative_positional_gresolution", ",", "dtype", "=", "torch", ".", "float16", ")", ")", "\n", "\n", "self", ".", "relative_positional_mode", "=", "transformer", ".", "relative_positional_mode", "\n", "if", "transformer", ".", "relative_positional_mode", "==", "\"mul\"", ":", "\n", "                ", "n_buckets", "=", "2", "*", "torch", ".", "tensor", "(", "transformer", ".", "relative_positional_beta", ")", "+", "1", "\n", "if", "n_buckets", ".", "numel", "(", ")", "==", "1", ":", "\n", "                    ", "mul_buckets", "=", "[", "n_buckets", "**", "2", ",", "n_buckets", ",", "1", "]", "\n", "", "elif", "n_buckets", ".", "numel", "(", ")", "==", "2", ":", "\n", "                    ", "mul_buckets", "=", "[", "n_buckets", "[", "-", "1", "]", ",", "1", "]", "\n", "", "elif", "n_buckets", ".", "numel", "(", ")", "==", "3", ":", "\n", "                    ", "mul_buckets", "=", "[", "n_buckets", "[", "-", "1", "]", "*", "n_buckets", "[", "-", "2", "]", ",", "n_buckets", "[", "-", "1", "]", ",", "1", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "\n", "\n", "", "self", ".", "register_buffer", "(", "\"mul_buckets\"", ",", "torch", ".", "tensor", "(", "mul_buckets", ",", "dtype", "=", "torch", ".", "float16", ")", ")", "\n", "\n", "self", ".", "from_dxyz_to_bucket", "=", "from_dxyz_to_bucket_mul", "\n", "\n", "", "elif", "transformer", ".", "relative_positional_mode", "==", "\"plus\"", ":", "\n", "                ", "n_buckets", "=", "list", "(", "2", "*", "np", ".", "array", "(", "transformer", ".", "relative_positional_beta", ")", "+", "1", ")", "\n", "\n", "if", "transformer", ".", "relative_positional_ntime", "!=", "1", ":", "\n", "                    ", "n_buckets", "+=", "[", "transformer", ".", "relative_positional_ntime", "]", "\n", "\n", "", "self", ".", "register_buffer", "(", "\"mul_buckets\"", ",", "torch", ".", "tensor", "(", "[", "0", "]", "+", "list", "(", "np", ".", "cumsum", "(", "n_buckets", ")", ")", "[", ":", "-", "1", "]", ",", "dtype", "=", "torch", ".", "int64", ")", ")", "\n", "\n", "self", ".", "from_dxyz_to_bucket", "=", "from_dxyz_to_bucket_plus", "\n", "\n", "", "self", ".", "temporal_buckets", "=", "transformer", ".", "temporal_buckets", "\n", "if", "self", ".", "temporal_buckets", ":", "\n", "                ", "self", ".", "n_avail_temporal_block", "=", "transformer", ".", "relative_positional_ntime", "\n", "\n", "if", "transformer", ".", "relative_positional_mode", "==", "\"mul\"", ":", "\n", "                    ", "self", ".", "from_buckets_to_temporalbuckets", "=", "from_buckets_to_temporalbuckets_mul", "\n", "", "elif", "transformer", ".", "relative_positional_mode", "==", "\"plus\"", ":", "\n", "                    ", "self", ".", "from_buckets_to_temporalbuckets", "=", "from_buckets_to_temporalbuckets_plus", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "\n", "\n", "\n", "", "", "", "TransformerBlock", "=", "TransformerBlockFFN", "if", "transformer", ".", "do_ffn", "else", "TransformerBlockNOFFN", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "[", "TransformerBlock", "(", "\n", "dim_in", ",", "transformer", ",", "i", ")", "for", "i", "in", "range", "(", "transformer", ".", "n_layers", ")", "]", ")", "\n", "\n", "self", ".", "do_relative_positional", "=", "transformer", ".", "do_relative_positional", "\n", "\n", "self", ".", "register_buffer", "(", "\"zero_keys\"", ",", "torch", ".", "zeros", "(", "\n", "(", "0", ",", "transformer", ".", "n_heads", ",", "transformer", ".", "dim_qk", "if", "transformer", ".", "dim_qk", "!=", "0", "else", "dim_in", "//", "transformer", ".", "n_heads", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"zero_values\"", ",", "torch", ".", "zeros", "(", "\n", "(", "0", ",", "transformer", ".", "n_heads", ",", "dim_in", "//", "transformer", ".", "n_heads", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"zero_batch\"", ",", "torch", ".", "zeros", "(", "0", ")", ")", "\n", "\n", "if", "transformer", ".", "batchnorm_output", ":", "\n", "            ", "self", ".", "batchnorm_output", "=", "nn", ".", "BatchNorm1d", "(", "dim_in", ")", "\n", "\n", "", "if", "transformer", ".", "architecture", "==", "\"Pre-LN\"", ":", "\n", "            ", "self", ".", "norm_output", "=", "LayerNorm", "(", "dim_in", ")", "\n", "", "elif", "transformer", ".", "architecture", "==", "\"Post-LN\"", ":", "\n", "            ", "self", ".", "norm_input", "=", "LayerNorm", "(", "dim_in", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f'Invalid architecture \"{transformer.architecture}\", should be in [\"Pre-LN\", \"Post-LN\"]'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.forward": [[227, 319], ["transformer copy.Transformer.prepare_kvpos_out", "hasattr", "enumerate", "hasattr", "hasattr", "transformer copy.compute_batch_for_layernorm", "logger[].add_histogram", "transformer copy.Transformer.compute_buckets", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "probas.append", "transformer copy.Transformer.update_kvpos_out", "logger[].add_histogram", "transformer copy.Transformer.norm_output", "transformer copy.Transformer.batchnorm_output", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "transformer copy.Transformer.compute_interactions", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "transformer copy.Transformer.norm_input", "block", "block", "logger[].add_histogram", "logger[].add_histogram", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "logger[].add_histogram", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "transformer copy.Transformer.get_shifts_for_vizu", "getattr", "getattr", "hasattr", "torch.div", "torch.div", "torch.div", "torch.div", "torch_scatter.scatter_add", "range", "transformer copy.Transformer.print_kernel_attention", "transformer copy.Transformer.print_kernel_attention", "torch_scatter.scatter_add", "transformer copy.Transformer.print_kernel_attention_count", "torch_scatter.scatter_add.max", "transformer copy.Transformer.print_kernel_attention_count", "torch_scatter.scatter_add.max", "torch_scatter.scatter_add.max", "torch_scatter.scatter_add.max"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.prepare_kvpos_out", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.compute_batch_for_layernorm", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.compute_buckets", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.update_kvpos_out", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.compute_interactions", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.get_shifts_for_vizu", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.print_kernel_attention", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.print_kernel_attention", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.print_kernel_attention_count", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.print_kernel_attention_count"], ["", "", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "xyz", ":", "torch", ".", "Tensor", ",", "grid", ":", "torch", ".", "Tensor", ",", "batch_size", ":", "int", ",", "kvp_in_isnone", ":", "bool", ",", "iq", "=", "None", ",", "ik", "=", "None", ",", "buckets", "=", "None", ",", "kvp_in", "=", "None", ",", "logger", "=", "None", ")", ":", "\n", "        ", "probas", "=", "[", "]", "\n", "\n", "if", "kvp_in_isnone", ":", "\n", "            ", "batch_for_layernorm", "=", "compute_batch_for_layernorm", "(", "grid", ",", "batch_size", ")", "\n", "", "else", ":", "\n", "            ", "batch_for_layernorm", "=", "self", ".", "zero_batch", "\n", "\n", "", "if", "logger", "is", "not", "None", ":", "\n", "            ", "logger", "[", "\"tb\"", "]", ".", "add_histogram", "(", "\n", "f\"{logger['name']}_forward/0_inp\"", ",", "x", ",", "global_step", "=", "logger", "[", "\"global_step\"", "]", ")", "\n", "\n", "", "if", "iq", "is", "None", "or", "ik", "is", "None", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "iq", ",", "ik", ",", "dxyz16", "=", "self", ".", "compute_interactions", "(", "\n", "grid", ",", "xyz", ",", "batch_size", ",", "kvp_in", ")", "\n", "\n", "", "", "if", "self", ".", "do_relative_positional", "and", "buckets", "is", "None", ":", "\n", "            ", "buckets", "=", "self", ".", "compute_buckets", "(", "dxyz16", ")", "\n", "", "else", ":", "\n", "            ", "buckets", "=", "torch", ".", "tensor", "(", "[", "]", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "\n", "", "kvp_out", "=", "self", ".", "prepare_kvpos_out", "(", "xyz", ",", "grid", ")", "\n", "\n", "if", "hasattr", "(", "self", ",", "\"norm_input\"", ")", ":", "\n", "            ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"NORM\"", ")", ":", "\n", "                ", "x", "=", "self", ".", "norm_input", "(", "x", ",", "batch", "=", "batch_for_layernorm", ")", "\n", "if", "logger", "is", "not", "None", ":", "\n", "                    ", "logger", "[", "\"tb\"", "]", ".", "add_histogram", "(", "\n", "f\"{logger['name']}_forward/3_inp+pos+norm\"", ",", "x", ",", "global_step", "=", "logger", "[", "\"global_step\"", "]", ")", "\n", "\n", "", "", "", "for", "iblock", ",", "block", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "if", "logger", "is", "not", "None", ":", "\n", "                ", "logger", "[", "\"iblock\"", "]", "=", "iblock", "\n", "", "if", "kvp_in", "is", "not", "None", ":", "\n", "                ", "x", ",", "proba", ",", "key", ",", "value", "=", "block", "(", "\n", "x", ",", "batch_for_layernorm", ",", "iq", ",", "ik", ",", "buckets", "=", "buckets", ",", "\n", "keystouse", "=", "getattr", "(", "\n", "kvp_in", ",", "f\"keys_{iblock}\"", ")", ",", "\n", "valuestouse", "=", "getattr", "(", "\n", "kvp_in", ",", "f\"values_{iblock}\"", ")", ")", "\n", "", "else", ":", "\n", "                ", "x", ",", "proba", ",", "key", ",", "value", "=", "block", "(", "x", ",", "batch_for_layernorm", ",", "iq", ",", "ik", ",", "buckets", "=", "buckets", ",", "keystouse", "=", "self", ".", "zero_keys", ",", "valuestouse", "=", "self", ".", "zero_values", ")", "\n", "\n", "", "if", "logger", "is", "not", "None", "and", "self", ".", "do_relative_positional", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "shifts", "=", "self", ".", "get_shifts_for_vizu", "(", ")", "\n", "if", "shifts", "is", "not", "None", "and", "self", ".", "relative_positional_mode", "==", "\"mul\"", ":", "\n", "\n", "                        ", "if", "hasattr", "(", "self", ",", "\"n_avail_temporal_block\"", ")", ":", "\n", "                            ", "dtime", "=", "buckets", "%", "self", ".", "n_avail_temporal_block", "\n", "xyz_buckets", "=", "torch", ".", "div", "(", "buckets", ",", "self", ".", "n_avail_temporal_block", ",", "rounding_mode", "=", "\"floor\"", ")", "\n", "\n", "count", "=", "torch_scatter", ".", "scatter_add", "(", "(", "proba", ">=", "-", "1", ")", ".", "float", "(", ")", ",", "buckets", ",", "0", ",", "dim_size", "=", "self", ".", "n_avail_temporal_block", "*", "shifts", ".", "shape", "[", "0", "]", ")", "\n", "keep_count", "=", "(", "count", ">=", "2.", "*", "count", ".", "max", "(", ")", "/", "100.", ")", ".", "float", "(", ")", "\n", "mean_count", "=", "count", "/", "count", ".", "max", "(", "0", ")", "[", "0", "]", "\n", "\n", "for", "dt", "in", "range", "(", "self", ".", "n_avail_temporal_block", ")", ":", "\n", "                                ", "keep_dt", "=", "dtime", "==", "dt", "\n", "this_dt_bucket", "=", "xyz_buckets", "[", "keep_dt", "]", "\n", "this_dt_proba", "=", "proba", "[", "keep_dt", "]", "\n", "if", "logger", "[", "'iblock'", "]", "==", "0", ":", "\n", "                                    ", "self", ".", "print_kernel_attention_count", "(", "mean_count", "[", "dt", ":", ":", "self", ".", "n_avail_temporal_block", "]", ",", "logger", ",", "shifts", ",", "dt", "=", "dt", ")", "\n", "\n", "", "self", ".", "print_kernel_attention", "(", "this_dt_bucket", ",", "logger", ",", "this_dt_proba", ",", "shifts", ",", "keep_count", "[", "dt", ":", ":", "self", ".", "n_avail_temporal_block", "]", ",", "dt", "=", "dt", ")", "\n", "", "", "else", ":", "\n", "                            ", "if", "logger", "[", "'iblock'", "]", "==", "0", ":", "\n", "                                ", "count", "=", "torch_scatter", ".", "scatter_add", "(", "(", "proba", ">=", "-", "1", ")", ".", "float", "(", ")", ",", "buckets", ",", "0", ",", "dim_size", "=", "shifts", ".", "shape", "[", "0", "]", ")", "\n", "keep_count", "=", "(", "count", ">=", "2.", "*", "count", ".", "max", "(", ")", "/", "100.", ")", ".", "float", "(", ")", "\n", "self", ".", "print_kernel_attention_count", "(", "count", "/", "count", ".", "max", "(", "0", ")", "[", "0", "]", ",", "logger", ",", "shifts", ")", "\n", "", "self", ".", "print_kernel_attention", "(", "buckets", ",", "logger", ",", "proba", ",", "shifts", ",", "keep_count", ")", "\n", "\n", "", "", "", "", "probas", ".", "append", "(", "proba", ")", "\n", "self", ".", "update_kvpos_out", "(", "kvp_out", ",", "iblock", ",", "key", ",", "value", ")", "\n", "\n", "", "if", "logger", "is", "not", "None", ":", "\n", "            ", "logger", "[", "\"tb\"", "]", ".", "add_histogram", "(", "\n", "f\"{logger['name']}_forward/4_inp+pos+norm+T\"", ",", "x", ",", "global_step", "=", "logger", "[", "\"global_step\"", "]", ")", "\n", "\n", "", "if", "hasattr", "(", "self", ",", "\"norm_output\"", ")", ":", "\n", "            ", "x", "=", "self", ".", "norm_output", "(", "x", ",", "batch", "=", "batch_for_layernorm", ")", "\n", "if", "logger", "is", "not", "None", ":", "\n", "                ", "logger", "[", "\"tb\"", "]", ".", "add_histogram", "(", "\n", "f\"{logger['name']}_forward/5_inp+pos+norm+T+norm\"", ",", "x", ",", "global_step", "=", "logger", "[", "\"global_step\"", "]", ")", "\n", "\n", "", "", "if", "hasattr", "(", "self", ",", "\"batchnorm_output\"", ")", ":", "\n", "            ", "x", "=", "self", ".", "batchnorm_output", "(", "x", ")", "\n", "if", "logger", "is", "not", "None", ":", "\n", "                ", "logger", "[", "\"tb\"", "]", ".", "add_histogram", "(", "\n", "f\"{logger['name']}_forward/5_inp+pos+norm+T+batchnorm\"", ",", "x", ",", "global_step", "=", "logger", "[", "\"global_step\"", "]", ")", "\n", "\n", "", "", "return", "x", ",", "probas", ",", "iq", ",", "ik", ",", "buckets", ",", "kvp_out", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.print_kernel_attention_count": [[320, 340], ["tuple", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "image.permute().flatten().flatten.permute().flatten().flatten.detach().cpu", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.pad", "torch.pad", "image.permute().flatten().flatten.permute().flatten().flatten.permute().flatten().flatten", "logger[].add_image", "shifts.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "image.permute().flatten().flatten.permute().flatten().flatten.detach", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "image.permute().flatten().flatten.permute().flatten().flatten.permute().flatten", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "[].detach().cpu", "matplotlib.cm.get_cmap", "image.permute().flatten().flatten.permute().flatten().flatten.detach().cpu().numpy", "image.permute().flatten().flatten.permute().flatten().flatten.permute", "mean.size", "[].detach", "image.permute().flatten().flatten.permute().flatten().flatten.detach().cpu", "image.permute().flatten().flatten.permute().flatten().flatten.detach", "shifts.max"], "methods", ["None"], ["", "def", "print_kernel_attention_count", "(", "self", ",", "mean", ",", "logger", ",", "shifts", ",", "dt", "=", "None", ")", ":", "\n", "        ", "is_3x3x3", "=", "shifts", ".", "size", "(", "0", ")", "==", "27", "\n", "\n", "image_size", "=", "tuple", "(", "torch", ".", "cat", "(", "(", "shifts", ".", "max", "(", "0", ")", "[", "0", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "+", "1", ",", "torch", ".", "tensor", "(", "[", "mean", ".", "size", "(", "-", "1", ")", "]", ")", ")", ")", ")", "\n", "image", "=", "torch", ".", "zeros", "(", "image_size", ",", "device", "=", "mean", ".", "device", ",", "dtype", "=", "mean", ".", "dtype", ")", "\n", "\n", "image", "[", "shifts", "[", ":", ",", "0", "]", ",", "shifts", "[", ":", ",", "1", "]", ",", "shifts", "[", ":", ",", "2", "]", "]", "=", "mean", "\n", "\n", "repeat_interleave", "=", "16", "if", "is_3x3x3", "else", "2", "\n", "image", "=", "torch", ".", "repeat_interleave", "(", "image", ",", "repeat_interleave", ",", "dim", "=", "0", ")", "\n", "image", "=", "torch", ".", "repeat_interleave", "(", "image", ",", "repeat_interleave", ",", "dim", "=", "1", ")", "\n", "image", "=", "image", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "image", "=", "torch", ".", "from_numpy", "(", "cm", ".", "get_cmap", "(", "\"bwr\"", ")", "(", "image", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", ".", "permute", "(", "4", ",", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "image", "=", "F", ".", "pad", "(", "image", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "\"constant\"", ",", "0", ")", "\n", "image", "=", "image", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ")", ".", "flatten", "(", "1", ",", "2", ")", ".", "flatten", "(", "2", ",", "3", ")", "\n", "\n", "logger", "[", "\"tb\"", "]", ".", "add_image", "(", "\n", "f\"attention_{logger['name']}/sum\"", "+", "(", "f\"_dt{dt}\"", "if", "dt", "is", "not", "None", "else", "\"\"", ")", ",", "image", ",", "\n", "global_step", "=", "logger", "[", "\"global_step\"", "]", ",", "dataformats", "=", "'CHW'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.print_kernel_attention": [[342, 367], ["tuple", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave", "image.permute().flatten().flatten.permute().flatten().flatten.detach().cpu", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.pad", "torch.pad", "image.permute().flatten().flatten.permute().flatten().flatten.permute().flatten().flatten", "logger[].add_image", "torch_scatter.scatter_mean", "shifts.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "mean.max", "image.permute().flatten().flatten.permute().flatten().flatten.detach", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "image.permute().flatten().flatten.permute().flatten().flatten.permute().flatten", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "[].detach().cpu", "matplotlib.cm.get_cmap", "image.permute().flatten().flatten.permute().flatten().flatten.detach().cpu().numpy", "image.permute().flatten().flatten.permute().flatten().flatten.permute", "mean.size", "[].detach", "image.permute().flatten().flatten.permute().flatten().flatten.detach().cpu", "image.permute().flatten().flatten.permute().flatten().flatten.detach", "shifts.max"], "methods", ["None"], ["", "def", "print_kernel_attention", "(", "self", ",", "buckets", ",", "logger", ",", "proba", ",", "shifts", ",", "keep_count", ",", "dt", "=", "None", ")", ":", "\n", "        ", "mean", "=", "torch_scatter", ".", "scatter_mean", "(", "proba", ",", "buckets", ",", "0", ",", "dim_size", "=", "shifts", ".", "shape", "[", "0", "]", ")", "*", "keep_count", "\n", "\n", "is_3x3x3", "=", "shifts", ".", "size", "(", "0", ")", "==", "27", "\n", "\n", "if", "not", "is_3x3x3", ":", "\n", "            ", "mean", "/=", "mean", ".", "max", "(", "0", ")", "[", "0", "]", "\n", "\n", "", "image_size", "=", "tuple", "(", "torch", ".", "cat", "(", "(", "shifts", ".", "max", "(", "0", ")", "[", "0", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "+", "1", ",", "torch", ".", "tensor", "(", "[", "mean", ".", "size", "(", "-", "1", ")", "]", ")", ")", ")", ")", "\n", "image", "=", "torch", ".", "zeros", "(", "image_size", ",", "device", "=", "mean", ".", "device", ",", "dtype", "=", "mean", ".", "dtype", ")", "\n", "\n", "image", "[", "shifts", "[", ":", ",", "0", "]", ",", "shifts", "[", ":", ",", "1", "]", ",", "shifts", "[", ":", ",", "2", "]", "]", "=", "mean", "\n", "\n", "repeat_interleave", "=", "16", "if", "is_3x3x3", "else", "2", "\n", "image", "=", "torch", ".", "repeat_interleave", "(", "image", ",", "repeat_interleave", ",", "dim", "=", "0", ")", "\n", "image", "=", "torch", ".", "repeat_interleave", "(", "image", ",", "repeat_interleave", ",", "dim", "=", "1", ")", "\n", "image", "=", "image", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "image", "=", "torch", ".", "from_numpy", "(", "cm", ".", "get_cmap", "(", "\"bwr\"", ")", "(", "image", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", ".", "permute", "(", "4", ",", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "image", "=", "F", ".", "pad", "(", "image", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "\"constant\"", ",", "0", ")", "\n", "image", "=", "image", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ",", "4", ")", ".", "flatten", "(", "1", ",", "2", ")", ".", "flatten", "(", "2", ",", "3", ")", "\n", "\n", "logger", "[", "\"tb\"", "]", ".", "add_image", "(", "\n", "f\"attention_{logger['name']}/{logger['iblock']}\"", "+", "(", "f\"_dt{dt}\"", "if", "dt", "is", "not", "None", "else", "\"\"", ")", ",", "image", ",", "\n", "global_step", "=", "logger", "[", "\"global_step\"", "]", ",", "dataformats", "=", "'CHW'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.get_shifts_for_vizu": [[369, 382], ["transformer copy.Transformer.beta.numel", "torch.stack().flatten().long", "torch.stack().flatten().long", "torch.stack().flatten().long", "torch.stack().flatten().long", "transformer copy.Transformer.beta.numel", "torch.stack().flatten", "torch.stack().flatten", "torch.stack().flatten", "torch.stack().flatten", "transformer copy.Transformer.beta.numel", "torch.stack().flatten().long", "torch.stack().flatten().long", "torch.stack().flatten().long", "torch.stack().flatten().long", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack().flatten", "torch.stack().flatten", "torch.stack().flatten", "torch.stack().flatten", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "range", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["", "def", "get_shifts_for_vizu", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "beta", ".", "numel", "(", ")", "==", "1", ":", "\n", "            ", "shifts_rtz", "=", "torch", ".", "stack", "(", "torch", ".", "meshgrid", "(", "*", "(", "[", "torch", ".", "arange", "(", "2", "*", "self", ".", "beta", "+", "1", ",", "device", "=", "self", ".", "mul_buckets", ".", "device", ")", "for", "_", "in", "range", "(", "3", ")", "]", ")", ",", "\n", "#indexing=\"ij\"", "\n", ")", ",", "-", "1", ")", ".", "flatten", "(", "0", ",", "-", "2", ")", ".", "long", "(", ")", "\n", "", "elif", "self", ".", "beta", ".", "numel", "(", ")", "==", "2", ":", "\n", "            ", "shifts_rtz", "=", "None", "\n", "", "elif", "self", ".", "beta", ".", "numel", "(", ")", "==", "3", ":", "\n", "            ", "shifts_rtz", "=", "torch", ".", "stack", "(", "torch", ".", "meshgrid", "(", "*", "(", "[", "torch", ".", "arange", "(", "2", "*", "beta", "+", "1", ",", "device", "=", "self", ".", "mul_buckets", ".", "device", ")", "for", "beta", "in", "self", ".", "beta", "]", ")", ",", "\n", "#indexing=\"ij\"", "\n", ")", ",", "-", "1", ")", ".", "flatten", "(", "0", ",", "-", "2", ")", ".", "long", "(", ")", "\n", "\n", "", "return", "shifts_rtz", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.compute_buckets": [[383, 392], ["transformer copy.Transformer.from_dxyz_to_bucket", "transformer copy.Transformer.from_buckets_to_temporalbuckets"], "methods", ["None"], ["", "def", "compute_buckets", "(", "self", ",", "dxyz16", ")", ":", "\n", "\n", "        ", "xyz_buckets", "=", "self", ".", "from_dxyz_to_bucket", "(", "dxyz16", "[", "0", "]", ",", "self", ".", "mul_buckets", ",", "self", ".", "alpha", ",", "self", ".", "beta", ",", "self", ".", "gamma", ",", "self", ".", "gresolution", ")", "\n", "#print(xyz_buckets)", "\n", "\n", "if", "self", ".", "temporal_buckets", ":", "\n", "            ", "return", "self", ".", "from_buckets_to_temporalbuckets", "(", "self", ".", "n_avail_temporal_block", ",", "xyz_buckets", ",", "dxyz16", "[", "1", "]", ",", "self", ".", "mul_buckets", "[", "-", "1", "]", ")", "\n", "\n", "", "return", "xyz_buckets", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.prepare_kvpos_out": [[393, 398], ["torch_geometric.data.Data"], "methods", ["None"], ["", "def", "prepare_kvpos_out", "(", "self", ",", "xyz", ",", "grid", ")", ":", "\n", "        ", "kvp_out", "=", "None", "\n", "if", "self", ".", "temporal_transformer", ":", "\n", "            ", "kvp_out", "=", "Data", "(", "pos", "=", "xyz", ",", "grid", "=", "grid", ")", "\n", "", "return", "kvp_out", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.update_kvpos_out": [[399, 403], ["setattr", "setattr"], "methods", ["None"], ["", "def", "update_kvpos_out", "(", "self", ",", "kvp_out", ",", "iblock", ",", "key", ",", "value", ")", ":", "\n", "        ", "if", "self", ".", "temporal_transformer", ":", "\n", "            ", "setattr", "(", "kvp_out", ",", "f\"keys_{iblock}\"", ",", "key", ")", "\n", "setattr", "(", "kvp_out", ",", "f\"values_{iblock}\"", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.Transformer.compute_interactions": [[404, 414], ["torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "transformer copy.jit_compute_interactions"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.jit_compute_interactions"], ["", "", "def", "compute_interactions", "(", "self", ",", "grid", ":", "torch", ".", "Tensor", ",", "xyz", ":", "torch", ".", "Tensor", ",", "batch_size", ":", "int", ",", "kvp_in", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"IJ\"", ")", ":", "\n", "            ", "return", "jit_compute_interactions", "(", "\n", "grid", ",", "xyz", ",", "\n", "kvp_in_pos", "=", "kvp_in", ".", "pos", "if", "kvp_in", "is", "not", "None", "else", "self", ".", "zero_kvp_in_pos", ",", "\n", "kvp_in_grid", "=", "kvp_in", ".", "grid", "if", "kvp_in", "is", "not", "None", "else", "self", ".", "zero_kvp_in_grid", ",", "\n", "force_keep_neighbours", "=", "self", ".", "force_keep_neighbours", ",", "\n", "spatial_receptive_field", "=", "self", ".", "spatial_receptive_field", ",", "\n", "spatial_receptive_field2", "=", "self", ".", "spatial_receptive_field2", ",", "\n", "slices_per_rotation", "=", "self", ".", "slices_per_rotation", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.jit_compute_interactions": [[14, 101], ["grid.to.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "grid.to.to", "grid.to.size", "grid.to.max", "torch.profiler.record_function", "torch.profiler.record_function", "torch.arange", "torch.arange", "torch.profiler.record_function", "torch.profiler.record_function", "torch.cat.to", "torch.hstack", "torch.hstack", "torch.div", "torch.div", "batch.size", "torch.stack().flatten().long", "torch.stack().flatten().long", "torch.stack().flatten", "torch.stack().flatten", "iqik[].long", "torch.profiler.record_function", "torch.profiler.record_function", "torch.index_select", "torch.index_select", "torch.zeros", "torch.zeros", "torch.ceil().to", "torch.ceil().to", "torch.where", "torch.where", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.logical_and", "torch.logical_and", "torch.logical_and", "torch.logical_and", "torch.logical_or", "torch.logical_or", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.logical_or", "torch.logical_or", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.zeros", "torch.zeros", "kvp_in_pos[].int", "torch.stack().flatten", "torch.stack().flatten", "torch.stack", "torch.stack", "grid.to.size", "torch.ceil", "torch.ceil", "torch.meshgrid", "torch.meshgrid", "torch.stack", "torch.stack", "torch.meshgrid", "torch.meshgrid", "batch.unsqueeze", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select"], "function", ["None"], ["@", "torch", ".", "jit", ".", "script", "\n", "def", "jit_compute_interactions", "(", "\n", "grid", ":", "torch", ".", "Tensor", ",", "xyz", ":", "torch", ".", "Tensor", ",", "kvp_in_pos", ":", "torch", ".", "Tensor", ",", "kvp_in_grid", ":", "torch", ".", "Tensor", ",", "\n", "force_keep_neighbours", ":", "bool", ",", "spatial_receptive_field", ":", "float", ",", "spatial_receptive_field2", ":", "float", ",", "slices_per_rotation", ":", "int", "\n", ")", ":", "\n", "    ", "query_size", "=", "grid", ".", "size", "(", "0", ")", "\n", "\n", "xyz", "=", "torch", ".", "cat", "(", "[", "xyz", ",", "kvp_in_pos", "[", ":", ",", "1", ":", "]", "]", ",", "0", ")", "\n", "grid", "=", "torch", ".", "cat", "(", "[", "grid", ",", "kvp_in_grid", "]", ",", "0", ")", "\n", "have_kvp", "=", "query_size", "!=", "grid", ".", "size", "(", "0", ")", "\n", "\n", "assert", "grid", ".", "max", "(", ")", "<", "128", "\n", "grid", "=", "grid", ".", "to", "(", "torch", ".", "int8", ")", "\n", "\n", "batch", "=", "grid", "[", ":", ",", "0", "]", "\n", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"IJ batch\"", ")", ":", "\n", "        ", "i", "=", "torch", ".", "arange", "(", "batch", ".", "size", "(", "\n", "0", ")", ",", "device", "=", "batch", ".", "device", ",", "dtype", "=", "torch", ".", "int32", ")", "#int16 before ! changed for HelixNet !", "\n", "\n", "if", "have_kvp", ":", "\n", "            ", "iqik", "=", "torch", ".", "stack", "(", "torch", ".", "meshgrid", "(", "(", "i", "[", ":", "query_size", "]", ",", "i", ")", ",", "\n", ")", ",", "-", "1", ")", ".", "flatten", "(", "0", ",", "1", ")", ".", "long", "(", ")", "\n", "", "else", ":", "\n", "            ", "iqik", "=", "torch", ".", "stack", "(", "torch", ".", "meshgrid", "(", "(", "i", ",", "i", ")", ",", "\n", ")", ",", "-", "1", ")", ".", "flatten", "(", "0", ",", "1", ")", "\n", "iqik", "=", "iqik", "[", "(", "batch", ".", "unsqueeze", "(", "-", "1", ")", "==", "batch", ")", ".", "flatten", "(", ")", "]", ".", "long", "(", ")", "\n", "\n", "", "", "if", "not", "have_kvp", ":", "\n", "        ", "block", "=", "grid", "[", ":", ",", "1", "]", "\n", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"IJ block\"", ")", ":", "\n", "            ", "blockiqik", "=", "block", "[", "iqik", "]", "\n", "keep_block", "=", "blockiqik", "[", ":", ",", "0", "]", "<=", "blockiqik", "[", ":", ",", "1", "]", "\n", "keep_blocki", "=", "torch", ".", "where", "(", "keep_block", ")", "[", "0", "]", "\n", "iqik", "=", "torch", ".", "index_select", "(", "iqik", ",", "0", ",", "keep_blocki", ")", "\n", "\n", "", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"SPATIAL\"", ")", ":", "\n", "        ", "iqtemp", ",", "iktemp", "=", "iqik", "[", ":", ",", "0", "]", ",", "iqik", "[", ":", ",", "1", "]", "\n", "\n", "if", "force_keep_neighbours", ":", "\n", "            ", "grid_look", "=", "grid", "[", ":", ",", "1", ":", "]", "\n", "grid_look_iq", ",", "grid_look_ik", "=", "torch", ".", "index_select", "(", "\n", "grid_look", ",", "0", ",", "iqtemp", ")", ",", "torch", ".", "index_select", "(", "grid_look", ",", "0", ",", "iktemp", ")", "\n", "forcekeep", "=", "(", "grid_look_iq", "[", ":", ",", "1", ":", "]", "-", "grid_look_ik", "[", ":", ",", "1", ":", "]", ")", ".", "abs", "(", ")", ".", "max", "(", "-", "1", ")", "[", "0", "]", "<=", "1", "\n", "\n", "if", "have_kvp", ":", "\n", "                ", "forcekeep", "=", "torch", ".", "logical_and", "(", "# rtz <= 1 and first block", "\n", "forcekeep", ",", "iktemp", "<", "query_size", ")", "\n", "", "else", ":", "\n", "                ", "forcekeep", "=", "torch", ".", "logical_and", "(", "# rtz <= 1 and same block", "\n", "forcekeep", ",", "grid_look_iq", "[", ":", ",", "0", "]", "==", "grid_look_ik", "[", ":", ",", "0", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "forcekeep", "=", "torch", ".", "zeros", "(", "(", "grid", ".", "size", "(", "0", ")", ",", ")", ",", "dtype", "=", "torch", ".", "bool", ",", "device", "=", "grid", ".", "device", ")", "\n", "\n", "", "xyz16", "=", "xyz", ".", "to", "(", "torch", ".", "float16", ")", "\n", "\n", "# Keep closest points", "\n", "if", "spatial_receptive_field2", "!=", "0", ":", "\n", "\n", "            ", "xy_coarse", "=", "torch", ".", "ceil", "(", "xyz", "[", ":", ",", ":", "2", "]", "/", "spatial_receptive_field", ")", ".", "to", "(", "torch", ".", "int8", ")", "\n", "keep_coarse", "=", "(", "torch", ".", "index_select", "(", "xy_coarse", ",", "0", ",", "iqtemp", ")", "-", "torch", ".", "index_select", "(", "xy_coarse", ",", "0", ",", "iktemp", ")", ")", ".", "abs", "(", ")", ".", "max", "(", "-", "1", ")", "[", "0", "]", "<=", "1", "\n", "if", "force_keep_neighbours", ":", "\n", "                ", "keep_coarse", "=", "torch", ".", "logical_or", "(", "forcekeep", ",", "keep_coarse", ")", "\n", "forcekeep", "=", "forcekeep", "[", "keep_coarse", "]", "\n", "\n", "", "iqik", "=", "iqik", "[", "keep_coarse", "]", "\n", "\n", "dxyz16", "=", "torch", ".", "index_select", "(", "xyz16", ",", "0", ",", "iqik", "[", ":", ",", "0", "]", ")", "-", "torch", ".", "index_select", "(", "xyz16", ",", "0", ",", "iqik", "[", ":", ",", "1", "]", ")", "\n", "keepr", "=", "(", "dxyz16", "**", "2", ")", ".", "sum", "(", "-", "1", ")", "<=", "spatial_receptive_field2", "\n", "if", "force_keep_neighbours", ":", "\n", "                ", "keepr", "=", "torch", ".", "logical_or", "(", "forcekeep", ",", "keepr", ")", "\n", "forcekeep", "=", "forcekeep", "[", "keepr", "]", "\n", "\n", "", "iqik", "=", "iqik", "[", "keepr", "]", "\n", "dxyz16", "=", "dxyz16", "[", "keepr", "]", "\n", "", "else", ":", "\n", "            ", "dxyz16", "=", "torch", ".", "index_select", "(", "xyz16", ",", "0", ",", "iqik", "[", ":", ",", "0", "]", ")", "-", "torch", ".", "index_select", "(", "xyz16", ",", "0", ",", "iqik", "[", ":", ",", "1", "]", ")", "\n", "\n", "", "", "iq", ",", "ik", "=", "iqik", "[", ":", ",", "0", "]", ",", "iqik", "[", ":", ",", "1", "]", "\n", "\n", "if", "have_kvp", ":", "\n", "        ", "scanid", "=", "torch", ".", "hstack", "(", "(", "torch", ".", "zeros", "(", "query_size", ",", "device", "=", "kvp_in_pos", "[", ":", ",", "0", "]", ".", "device", ",", "dtype", "=", "torch", ".", "int", ")", ",", "kvp_in_pos", "[", ":", ",", "0", "]", ".", "int", "(", ")", ")", ")", "\n", "dscanid", "=", "scanid", "[", "ik", "]", "\n", "", "else", ":", "\n", "        ", "scanid", "=", "torch", ".", "div", "(", "grid", "[", ":", ",", "1", "]", ",", "slices_per_rotation", ",", "rounding_mode", "=", "\"floor\"", ")", "\n", "dscanid", "=", "scanid", "[", "ik", "]", "-", "scanid", "[", "iq", "]", "\n", "\n", "", "return", "iq", ",", "ik", ",", "(", "dxyz16", ",", "dscanid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.from_buckets_to_temporalbuckets_mul": [[102, 105], ["None"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "from_buckets_to_temporalbuckets_mul", "(", "n_avail_temporal_block", ":", "int", ",", "xyz_buckets", ",", "dt", ",", "mul_buckets", ")", ":", "\n", "    ", "return", "n_avail_temporal_block", "*", "xyz_buckets", "+", "dt", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.from_buckets_to_temporalbuckets_plus": [[106, 109], ["torch.cat", "torch.cat", "dt.unsqueeze"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "from_buckets_to_temporalbuckets_plus", "(", "n_avail_temporal_block", ":", "int", ",", "xyz_buckets", ",", "dt", ",", "mul_buckets", ")", ":", "\n", "    ", "return", "torch", ".", "cat", "(", "[", "xyz_buckets", ",", "dt", ".", "unsqueeze", "(", "-", "1", ")", "+", "mul_buckets", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.compute_batch_for_layernorm": [[110, 113], ["None"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "compute_batch_for_layernorm", "(", "grid", ",", "batch_size", ":", "int", ")", ":", "\n", "    ", "return", "(", "grid", "[", ":", ",", "0", "]", "+", "batch_size", "*", "grid", "[", ":", ",", "1", "]", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.from_dxyz_to_bucket_base": [[114, 126], ["torch.stack.abs", "torch.clamp", "torch.clamp", "res.size", "torch.stack", "torch.stack", "torch.round().to", "torch.round().to", "torch.sign", "torch.sign", "torch.where", "torch.where", "torch.round", "torch.round", "torch.sqrt", "torch.sqrt", "torch.round", "torch.round", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "from_dxyz_to_bucket_base", "(", "x", ",", "alpha", ",", "beta", ",", "gamma", ",", "res", ")", ":", "\n", "    ", "if", "res", ".", "size", "(", "0", ")", "==", "2", ":", "\n", "        ", "x", "=", "torch", ".", "stack", "(", "[", "torch", ".", "sqrt", "(", "x", "[", ":", ",", "0", "]", "**", "2", "+", "x", "[", ":", ",", "1", "]", "**", "2", ")", ",", "x", "[", ":", ",", "-", "1", "]", "]", ",", "-", "1", ")", "\n", "", "x", "=", "x", "/", "res", "\n", "x_abs", "=", "x", ".", "abs", "(", ")", "\n", "\n", "sup", "=", "torch", ".", "clamp", "(", "torch", ".", "round", "(", "alpha", "-", "(", "beta", "-", "alpha", ")", "*", "torch", ".", "log", "(", "x_abs", "/", "alpha", ")", "/", "torch", ".", "log", "(", "gamma", "/", "alpha", ")", ")", ".", "to", "(", "x", ".", "dtype", ")", ",", "max", "=", "beta", ")", "\n", "sup", "=", "torch", ".", "sign", "(", "x", ")", "*", "sup", "\n", "\n", "buckets", "=", "beta", "+", "torch", ".", "where", "(", "x_abs", "<=", "alpha", ",", "torch", ".", "round", "(", "x", ")", ",", "sup", ")", "\n", "return", "buckets", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.from_dxyz_to_bucket_mul": [[127, 134], ["transformer copy.from_dxyz_to_bucket_base", "from_dxyz_to_bucket_base.long"], "function", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.from_dxyz_to_bucket_base"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "from_dxyz_to_bucket_mul", "(", "x", ":", "torch", ".", "Tensor", ",", "mul_buckets", ":", "torch", ".", "Tensor", ",", "alpha", ":", "torch", ".", "Tensor", ",", "beta", ":", "torch", ".", "Tensor", ",", "gamma", ":", "torch", ".", "Tensor", ",", "res", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "buckets", "=", "from_dxyz_to_bucket_base", "(", "x", ",", "alpha", ",", "beta", ",", "gamma", ",", "res", ")", "\n", "\n", "buckets", "=", "(", "mul_buckets", "*", "buckets", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "return", "buckets", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer copy.from_dxyz_to_bucket_plus": [[135, 141], ["from_dxyz_to_bucket_base().long", "transformer copy.from_dxyz_to_bucket_base", "from_dxyz_to_bucket_base().long.size"], "function", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.from_dxyz_to_bucket_base"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "from_dxyz_to_bucket_plus", "(", "x", ":", "torch", ".", "Tensor", ",", "mul_buckets", ":", "torch", ".", "Tensor", ",", "alpha", ":", "torch", ".", "Tensor", ",", "beta", ":", "torch", ".", "Tensor", ",", "gamma", ":", "torch", ".", "Tensor", ",", "res", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "buckets", "=", "from_dxyz_to_bucket_base", "(", "x", ",", "alpha", ",", "beta", ",", "gamma", ",", "res", ")", ".", "long", "(", ")", "\n", "\n", "buckets", "=", "buckets", "+", "mul_buckets", "[", ":", "buckets", ".", "size", "(", "-", "1", ")", "]", "\n", "return", "buckets", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention_VIZHEADS.Attention.__init__": [[22, 78], ["super().__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "attention_VIZHEADS.Attention.apply", "torch.nn.Parameter", "torch.nn.Parameter", "attention_VIZHEADS.Attention.register_buffer", "torch.nn.Linear", "torch.nn.Linear", "torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.nn.Parameter", "torch.nn.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "list", "torch.nn.Parameter", "torch.nn.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "numpy.array", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "transformer", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dim_in", "=", "dim_in", "\n", "self", ".", "d", "=", "dim_in", "//", "transformer", ".", "n_heads", "\n", "self", ".", "h", "=", "transformer", ".", "n_heads", "\n", "\n", "self", ".", "d_qk", "=", "transformer", ".", "dim_qk", "if", "transformer", ".", "dim_qk", "!=", "0", "else", "dim_in", "//", "transformer", ".", "n_heads", "\n", "\n", "self", ".", "normalize_qk", "=", "transformer", ".", "temperature_qk", ">", "0", "\n", "if", "self", ".", "normalize_qk", ":", "\n", "            ", "self", ".", "temperature_nowd", "=", "nn", ".", "Parameter", "(", "\n", "transformer", ".", "temperature_qk", "*", "torch", ".", "ones", "(", "self", ".", "h", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_buffer", "(", "\"temperature_nowd\"", ",", "\n", "1", "/", "(", "self", ".", "d_qk", "**", ".5", ")", "*", "torch", ".", "ones", "(", "self", ".", "h", ")", ")", "\n", "\n", "", "self", ".", "samequerykey", "=", "transformer", ".", "samequerykey", "\n", "self", ".", "maxi_d", "=", "self", ".", "d", "+", "(", "2", "-", "self", ".", "samequerykey", ")", "*", "self", ".", "d_qk", "\n", "\n", "self", ".", "qkv_linear", "=", "nn", ".", "Linear", "(", "\n", "dim_in", ",", "self", ".", "maxi_d", "*", "self", ".", "h", ",", "bias", "=", "False", ")", "\n", "\n", "if", "transformer", ".", "do_o", ":", "\n", "            ", "self", ".", "o_linear", "=", "nn", ".", "Linear", "(", "dim_in", ",", "dim_in", ")", "\n", "\n", "", "self", ".", "drop_proba", "=", "nn", ".", "Dropout", "(", "transformer", ".", "dropout", ")", "\n", "self", ".", "drop_out", "=", "nn", ".", "Dropout", "(", "transformer", ".", "dropout", ")", "\n", "\n", "self", ".", "do_relative_positional", "=", "transformer", ".", "do_relative_positional", "\n", "\n", "self", ".", "relative_positional_mode", "=", "transformer", ".", "relative_positional_mode", "\n", "\n", "if", "self", ".", "relative_positional_mode", "==", "\"mul\"", ":", "\n", "            ", "n_buckets", "=", "2", "*", "torch", ".", "tensor", "(", "transformer", ".", "relative_positional_beta", ")", "+", "1", "\n", "n_buckets", "=", "torch", ".", "prod", "(", "n_buckets", ")", ".", "item", "(", ")", "\n", "n_buckets", "*=", "transformer", ".", "relative_positional_ntime", "\n", "\n", "self", ".", "relative_positional_encoding_nowd", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "zeros", "(", "(", "n_buckets", ",", "self", ".", "h", ",", "self", ".", "d_qk", ")", ")", ")", "\n", "\n", "self", ".", "compute_relative_posenc", "=", "compute_relative_posenc_mul", "\n", "\n", "", "elif", "self", ".", "relative_positional_mode", "==", "\"plus\"", ":", "\n", "            ", "n_buckets", "=", "list", "(", "2", "*", "np", ".", "array", "(", "transformer", ".", "relative_positional_beta", ")", "+", "1", ")", "\n", "\n", "if", "transformer", ".", "relative_positional_ntime", "!=", "1", ":", "\n", "                ", "n_buckets", "+=", "[", "transformer", ".", "relative_positional_ntime", "]", "\n", "\n", "", "self", ".", "relative_positional_encoding_nowd", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "np", ".", "sum", "(", "n_buckets", ")", ",", "self", ".", "h", ",", "self", ".", "d_qk", ")", ")", ")", "\n", "\n", "self", ".", "compute_relative_posenc", "=", "compute_relative_posenc_plus", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "self", ".", "apply", "(", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention_VIZHEADS.Attention.forward": [[79, 106], ["torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "attention_VIZHEADS.Attention.qkv_linear().view", "attention_VIZHEADS.Attention.compute_proba", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch_scatter.scatter_add().flatten", "hasattr", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "attention_VIZHEADS.Attention.o_linear", "attention_VIZHEADS.Attention.drop_out", "attention_VIZHEADS.Attention.qkv_linear", "torch_scatter.scatter_add", "attention_VIZHEADS.Attention.drop_proba().unsqueeze", "attention_VIZHEADS.Attention.drop_proba"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.Attention.compute_proba"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "forward", "(", "self", ",", "x", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", ",", "valuestouse", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"ATT\"", ")", ":", "\n", "\n", "            ", "query_key_value", "=", "self", ".", "qkv_linear", "(", "x", ")", ".", "view", "(", "-", "1", ",", "self", ".", "h", ",", "self", ".", "maxi_d", ")", "\n", "\n", "if", "self", ".", "samequerykey", ":", "\n", "                ", "query", "=", "key", "=", "query_key_value", "[", "...", ",", ":", "self", ".", "d_qk", "]", "\n", "value", "=", "query_key_value", "[", "...", ",", "-", "self", ".", "d", ":", "]", "\n", "", "else", ":", "\n", "                ", "query", "=", "query_key_value", "[", "...", ",", ":", "self", ".", "d_qk", "]", "\n", "key", "=", "query_key_value", "[", "...", ",", "self", ".", "d_qk", ":", "2", "*", "self", ".", "d_qk", "]", "\n", "value", "=", "query_key_value", "[", "...", ",", "-", "self", ".", "d", ":", "]", "\n", "\n", "", "proba", ",", "key", "=", "self", ".", "compute_proba", "(", "\n", "query", ",", "key", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", "=", "keystouse", ")", "\n", "\n", "value_ik", "=", "torch", ".", "index_select", "(", "\n", "torch", ".", "cat", "(", "[", "value", ",", "valuestouse", "]", ",", "0", ")", ",", "0", ",", "ik", ")", "\n", "\n", "out", "=", "torch_scatter", ".", "scatter_add", "(", "\n", "self", ".", "drop_proba", "(", "proba", ")", ".", "unsqueeze", "(", "-", "1", ")", "*", "value_ik", ",", "iq", ",", "0", ")", ".", "flatten", "(", "-", "2", ",", "-", "1", ")", "\n", "\n", "if", "hasattr", "(", "self", ",", "\"o_linear\"", ")", ":", "\n", "                ", "out", "=", "self", ".", "o_linear", "(", "out", ")", "\n", "\n", "", "return", "self", ".", "drop_out", "(", "out", ")", ",", "proba", ",", "key", ",", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention_VIZHEADS.Attention.get_T": [[107, 110], ["attention_VIZHEADS.Attention.temperature_nowd.view"], "methods", ["None"], ["", "", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "get_T", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "temperature_nowd", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention_VIZHEADS.Attention.do_plot": [[111, 154], ["plt.subplots", "enumerate", "plt.tight_layout", "plt.show", "len", "enumerate", "torch_scatter.scatter_mean", "axs[].plot", "numpy.arange", "int", "numpy.arange", "print", "range", "torch_scatter.scatter_mean.detach().cpu().numpy", "axs[].legend", "axs[].set_xlabel", "axs[].set_ylabel", "axs[].set_title", "len", "numpy.mean", "len", "print", "len", "b[].min().item", "b[].min().item", "list", "torch_scatter.scatter_mean.detach().cpu", "b[].max().item", "b[].max().item", "str", "BX[].detach().cpu().numpy().astype", "b[].min", "b[].min", "torch_scatter.scatter_mean.detach", "b[].max", "b[].max", "BX[].detach().cpu().numpy", "BX[].detach().cpu", "BX[].detach"], "methods", ["None"], ["", "def", "do_plot", "(", "self", ",", "C", ",", "b", ")", ":", "\n", "        ", "import", "matplotlib", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "from", "matplotlib", "import", "rc", "\n", "#rc('font',**{'family':'sans-serif','sans-serif':['Helvetica']})", "\n", "## for Palatino and other serif fonts use:", "\n", "#rc('font',**{'family':'serif','serif':['Palatino']})", "\n", "#rc('text', usetex=True)", "\n", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "len", "(", "C", ")", ",", "self", ".", "h", ",", "figsize", "=", "(", "10", ",", "2.5", "*", "len", "(", "C", ")", ")", ",", "\n", "sharex", "=", "\"col\"", ",", "sharey", "=", "\"row\"", ")", "\n", "\n", "for", "row", ",", "(", "c", ",", "clabel", ")", "in", "enumerate", "(", "C", ")", ":", "\n", "            ", "for", "i", ",", "dim", "in", "enumerate", "(", "[", "\"X\"", ",", "\"Y\"", ",", "\"Z\"", ",", "\"T\"", "]", ")", ":", "\n", "                ", "BX", "=", "torch_scatter", ".", "scatter_mean", "(", "c", ",", "b", "[", ":", ",", "i", "]", "-", "7", "*", "i", ",", "0", ")", "\n", "#plt.subplot(len(C), self.h, 1+i + self.h*row)", "\n", "\n", "\n", "\n", "if", "i", "<=", "3", ":", "\n", "                    ", "DX", "=", "np", ".", "arange", "(", "1", "+", "b", "[", ":", ",", "i", "]", ".", "max", "(", ")", ".", "item", "(", ")", "-", "b", "[", ":", ",", "i", "]", ".", "min", "(", ")", ".", "item", "(", ")", ")", "\n", "DX", "-=", "int", "(", "np", ".", "mean", "(", "DX", ")", ")", "\n", "", "else", ":", "\n", "                    ", "DX", "=", "np", ".", "arange", "(", "1", "+", "b", "[", ":", ",", "i", "]", ".", "max", "(", ")", ".", "item", "(", ")", "-", "b", "[", ":", ",", "i", "]", ".", "min", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "", "if", "row", "==", "0", ":", "\n", "                    ", "print", "(", "dim", ")", "\n", "for", "bin", "in", "range", "(", "len", "(", "DX", ")", ")", ":", "\n", "                        ", "thislist", "=", "[", "str", "(", "bin", ")", "]", "+", "list", "(", "BX", "[", "bin", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "str", ")", ")", "\n", "print", "(", "'\\t'", ".", "join", "(", "thislist", ")", ")", "\n", "#print(f\"{bin}\\t{BX[bin].detach().cpu().numpy().astype(str).join('\\t')}\")", "\n", "\n", "\n", "\n", "\n", "", "", "axs", "[", "row", ",", "i", "]", ".", "plot", "(", "DX", ",", "BX", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "\n", "label", "=", "[", "\"h=1\"", ",", "\"h=2\"", ",", "\"h=3\"", ",", "\"h=4\"", "]", "if", "i", "+", "row", "==", "0", "else", "None", ")", "\n", "if", "i", "+", "row", "==", "0", ":", "axs", "[", "row", ",", "i", "]", ".", "legend", "(", "loc", "=", "\"best\"", ")", "\n", "if", "row", "==", "len", "(", "C", ")", "-", "1", ":", "axs", "[", "row", ",", "i", "]", ".", "set_xlabel", "(", "f\"Delta {dim} (bin)\"", ")", "\n", "if", "i", "==", "0", ":", "axs", "[", "row", ",", "i", "]", ".", "set_ylabel", "(", "clabel", ")", "\n", "if", "row", "==", "0", ":", "axs", "[", "row", ",", "i", "]", ".", "set_title", "(", "f\"{dim}\"", ")", "\n", "", "", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention_VIZHEADS.Attention.compute_proba": [[155, 187], ["torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "attention_VIZHEADS.Attention.do_plot", "print", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "attention_VIZHEADS.Attention.get_T", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch_scatter.scatter_softmax", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "attention_VIZHEADS.Attention.compute_relative_posenc"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention_VIZHEADS.Attention.do_plot", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.Attention.get_T"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "compute_proba", "(", "self", ",", "query", ",", "key", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"PROBAS\"", ")", ":", "\n", "\n", "            ", "if", "self", ".", "normalize_qk", ":", "\n", "# Normalizing keys and queries", "\n", "                ", "query", "=", "F", ".", "normalize", "(", "query", ",", "dim", "=", "-", "1", ")", "\n", "key", "=", "F", ".", "normalize", "(", "key", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "query_iq", "=", "torch", ".", "index_select", "(", "query", ",", "0", ",", "iq", ")", "\n", "oqk", "=", "(", "query_iq", "*", "torch", ".", "index_select", "(", "torch", ".", "cat", "(", "[", "key", ",", "keystouse", "]", ",", "0", ")", ",", "0", ",", "ik", ")", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "if", "self", ".", "do_relative_positional", ":", "\n", "                ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"POSENC\"", ")", ":", "\n", "                    ", "posenc", "=", "(", "query_iq", "*", "self", ".", "compute_relative_posenc", "(", "self", ".", "relative_positional_encoding_nowd", ",", "buckets", ")", ")", ".", "sum", "(", "-", "1", ")", "\n", "qk", "=", "oqk", "+", "posenc", "\n", "\n", "", "", "qk", "=", "qk", "*", "self", ".", "get_T", "(", ")", "\n", "\n", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"NORM PROBA\"", ")", ":", "\n", "                ", "proba_qk", "=", "torch_scatter", ".", "scatter_softmax", "(", "qk", ",", "iq", ",", "0", ")", "\n", "\n", "", "self", ".", "do_plot", "(", "[", "\n", "(", "posenc", ",", "\"k_v^h . PE^h\"", ")", ",", "\n", "(", "oqk", ",", "\"k_v^h . k_u^h\"", ")", ",", "\n", "(", "qk", ",", "\"y_{u,v}^h\"", ")", ",", "\n", "(", "proba_qk", ",", "\"a_{u,v}^h\"", ")", "\n", "]", ",", "buckets", ")", "\n", "\n", "\n", "print", "(", "\"\"", ")", "\n", "return", "proba_qk", ",", "key", "", "", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention_VIZHEADS.compute_relative_posenc_mul": [[9, 12], ["torch.index_select", "torch.index_select"], "function", ["None"], ["@", "torch", ".", "jit", ".", "script", "\n", "def", "compute_relative_posenc_mul", "(", "relative_positional_encoding_nowd", ",", "buckets", ")", ":", "\n", "    ", "return", "torch", ".", "index_select", "(", "relative_positional_encoding_nowd", ",", "0", ",", "buckets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention_VIZHEADS.compute_relative_posenc_plus": [[13, 19], ["buckets.size", "relative_positional_encoding_nowd.size", "torch.index_select", "torch.index_select", "torch.index_select.reshape().sum", "buckets.flatten", "torch.index_select.reshape"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "compute_relative_posenc_plus", "(", "relative_positional_encoding_nowd", ",", "buckets", ")", ":", "\n", "    ", "_", ",", "dim_buckets", "=", "buckets", ".", "size", "(", ")", "\n", "_", ",", "n_heads", ",", "dim", "=", "relative_positional_encoding_nowd", ".", "size", "(", ")", "\n", "posenc_all_dims", "=", "torch", ".", "index_select", "(", "relative_positional_encoding_nowd", ",", "0", ",", "buckets", ".", "flatten", "(", ")", ")", "\n", "return", "posenc_all_dims", ".", "reshape", "(", "-", "1", ",", "dim_buckets", ",", "n_heads", ",", "dim", ")", ".", "sum", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.block.TransformerBlockNOFFN.__init__": [[10, 19], ["super().__init__", "attention.Attention", "sparseops.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "transformer", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "attention", "=", "Attention", "(", "\n", "dim", ",", "transformer", ")", "\n", "self", ".", "norm_attention", "=", "TGLayerNorm", "(", "dim", ")", "\n", "\n", "self", ".", "preln", "=", "transformer", ".", "architecture", "==", "\"Pre-LN\"", "\n", "self", ".", "postln", "=", "transformer", ".", "architecture", "==", "\"Post-LN\"", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.block.TransformerBlockNOFFN.forward": [[20, 26], ["block.TransformerBlockNOFFN.do_attention"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.block.TransformerBlockNOFFN.do_attention"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "forward", "(", "self", ",", "x", ",", "batch", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", ",", "valuestouse", ")", ":", "\n", "        ", "x", ",", "proba", ",", "key", ",", "value", "=", "self", ".", "do_attention", "(", "\n", "x", ",", "batch", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", ",", "valuestouse", ")", "\n", "\n", "return", "x", ",", "proba", ",", "key", ",", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.block.TransformerBlockNOFFN.do_attention": [[27, 39], ["torch.profiler.record_function", "block.TransformerBlockNOFFN.attention", "torch.profiler.record_function", "block.TransformerBlockNOFFN.norm_attention", "torch.profiler.record_function", "block.TransformerBlockNOFFN.norm_attention"], "methods", ["None"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "do_attention", "(", "self", ",", "x", ",", "batch", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", ",", "valuestouse", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"T\"", ")", ":", "\n", "            ", "out_attention", ",", "proba", ",", "key", ",", "value", "=", "self", ".", "attention", "(", "\n", "self", ".", "norm_attention", "(", "x", ",", "batch", "=", "batch", ")", "if", "self", ".", "preln", "else", "x", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", ",", "valuestouse", ")", "\n", "\n", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"+\"", ")", ":", "\n", "                ", "x", "=", "x", "+", "out_attention", "\n", "", "if", "self", ".", "postln", ":", "\n", "                ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"NORM\"", ")", ":", "\n", "                    ", "x", "=", "self", ".", "norm_attention", "(", "x", ",", "batch", "=", "batch", ")", "\n", "", "", "return", "x", ",", "proba", ",", "key", ",", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.block.TransformerBlockFFN.__init__": [[42, 50], ["block.TransformerBlockNOFFN.__init__", "utils.feed_forward", "sparseops.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.utils.feed_forward"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "transformer", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "feed_forward", "=", "feed_forward", "(", "\n", "dim", ",", "drop", "=", "transformer", ".", "dropout", ",", "\n", "mul_feedforward", "=", "transformer", ".", "mul_ff", "\n", ")", "\n", "self", ".", "norm_feed_forward", "=", "TGLayerNorm", "(", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.block.TransformerBlockFFN.forward": [[51, 57], ["block.TransformerBlockNOFFN.forward", "block.TransformerBlockFFN.do_feed_forward"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.forward", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.block.TransformerBlockFFN.do_feed_forward"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "forward", "(", "self", ",", "x", ",", "batch", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", ",", "valuestouse", ")", ":", "\n", "        ", "x", ",", "proba", ",", "key", ",", "value", "=", "super", "(", ")", ".", "forward", "(", "x", ",", "batch", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", ",", "valuestouse", ")", "\n", "x", "=", "self", ".", "do_feed_forward", "(", "x", ",", "batch", ")", "\n", "\n", "return", "x", ",", "proba", ",", "key", ",", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.block.TransformerBlockFFN.do_feed_forward": [[58, 71], ["torch.profiler.record_function", "torch.profiler.record_function", "block.TransformerBlockFFN.feed_forward", "torch.profiler.record_function", "torch.profiler.record_function", "block.TransformerBlockFFN.norm_feed_forward", "block.TransformerBlockFFN.norm_feed_forward"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.utils.feed_forward"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "do_feed_forward", "(", "self", ",", "x", ",", "batch", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"FF\"", ")", ":", "\n", "            ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"ENC\"", ")", ":", "\n", "                ", "out_ff", "=", "self", ".", "feed_forward", "(", "self", ".", "norm_feed_forward", "(", "\n", "x", ",", "batch", "=", "batch", ")", "if", "self", ".", "preln", "else", "x", ")", "\n", "\n", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"+\"", ")", ":", "\n", "                ", "x", "=", "x", "+", "out_ff", "\n", "", "if", "self", ".", "postln", ":", "\n", "                ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"NORM\"", ")", ":", "\n", "                    ", "x", "=", "self", ".", "norm_feed_forward", "(", "x", ",", "batch", "=", "batch", ")", "\n", "", "", "return", "x", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.Attention.__init__": [[22, 78], ["super().__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "attention.Attention.apply", "torch.nn.Parameter", "torch.nn.Parameter", "attention.Attention.register_buffer", "torch.nn.Linear", "torch.nn.Linear", "torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.prod().item", "torch.nn.Parameter", "torch.nn.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "list", "torch.nn.Parameter", "torch.nn.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.prod", "torch.prod", "torch.prod", "torch.prod", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "numpy.array", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "transformer", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dim_in", "=", "dim_in", "\n", "self", ".", "d", "=", "dim_in", "//", "transformer", ".", "n_heads", "\n", "self", ".", "h", "=", "transformer", ".", "n_heads", "\n", "\n", "self", ".", "d_qk", "=", "transformer", ".", "dim_qk", "if", "transformer", ".", "dim_qk", "!=", "0", "else", "dim_in", "//", "transformer", ".", "n_heads", "\n", "\n", "self", ".", "normalize_qk", "=", "transformer", ".", "temperature_qk", ">", "0", "\n", "if", "self", ".", "normalize_qk", ":", "\n", "            ", "self", ".", "temperature_nowd", "=", "nn", ".", "Parameter", "(", "\n", "transformer", ".", "temperature_qk", "*", "torch", ".", "ones", "(", "self", ".", "h", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_buffer", "(", "\"temperature_nowd\"", ",", "\n", "1", "/", "(", "self", ".", "d_qk", "**", ".5", ")", "*", "torch", ".", "ones", "(", "self", ".", "h", ")", ")", "\n", "\n", "", "self", ".", "samequerykey", "=", "transformer", ".", "samequerykey", "\n", "self", ".", "maxi_d", "=", "self", ".", "d", "+", "(", "2", "-", "self", ".", "samequerykey", ")", "*", "self", ".", "d_qk", "\n", "\n", "self", ".", "qkv_linear", "=", "nn", ".", "Linear", "(", "\n", "dim_in", ",", "self", ".", "maxi_d", "*", "self", ".", "h", ",", "bias", "=", "False", ")", "\n", "\n", "if", "transformer", ".", "do_o", ":", "\n", "            ", "self", ".", "o_linear", "=", "nn", ".", "Linear", "(", "dim_in", ",", "dim_in", ")", "\n", "\n", "", "self", ".", "drop_proba", "=", "nn", ".", "Dropout", "(", "transformer", ".", "dropout", ")", "\n", "self", ".", "drop_out", "=", "nn", ".", "Dropout", "(", "transformer", ".", "dropout", ")", "\n", "\n", "self", ".", "do_relative_positional", "=", "transformer", ".", "do_relative_positional", "\n", "\n", "self", ".", "relative_positional_mode", "=", "transformer", ".", "relative_positional_mode", "\n", "\n", "if", "self", ".", "relative_positional_mode", "==", "\"mul\"", ":", "\n", "            ", "n_buckets", "=", "2", "*", "torch", ".", "tensor", "(", "transformer", ".", "relative_positional_beta", ")", "+", "1", "\n", "n_buckets", "=", "torch", ".", "prod", "(", "n_buckets", ")", ".", "item", "(", ")", "\n", "n_buckets", "*=", "transformer", ".", "relative_positional_ntime", "\n", "\n", "self", ".", "relative_positional_encoding_nowd", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "zeros", "(", "(", "n_buckets", ",", "self", ".", "h", ",", "self", ".", "d_qk", ")", ")", ")", "\n", "\n", "self", ".", "compute_relative_posenc", "=", "compute_relative_posenc_mul", "\n", "\n", "", "elif", "self", ".", "relative_positional_mode", "==", "\"plus\"", ":", "\n", "            ", "n_buckets", "=", "list", "(", "2", "*", "np", ".", "array", "(", "transformer", ".", "relative_positional_beta", ")", "+", "1", ")", "\n", "\n", "if", "transformer", ".", "relative_positional_ntime", "!=", "1", ":", "\n", "                ", "n_buckets", "+=", "[", "transformer", ".", "relative_positional_ntime", "]", "\n", "\n", "", "self", ".", "relative_positional_encoding_nowd", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "(", "np", ".", "sum", "(", "n_buckets", ")", ",", "self", ".", "h", ",", "self", ".", "d_qk", ")", ")", ")", "\n", "\n", "self", ".", "compute_relative_posenc", "=", "compute_relative_posenc_plus", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "self", ".", "apply", "(", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.Attention.forward": [[79, 106], ["torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "attention.Attention.qkv_linear().view", "attention.Attention.compute_proba", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch_scatter.scatter_add().flatten", "hasattr", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "attention.Attention.o_linear", "attention.Attention.drop_out", "attention.Attention.qkv_linear", "torch_scatter.scatter_add", "attention.Attention.drop_proba().unsqueeze", "attention.Attention.drop_proba"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.Attention.compute_proba"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "forward", "(", "self", ",", "x", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", ",", "valuestouse", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"ATT\"", ")", ":", "\n", "\n", "            ", "query_key_value", "=", "self", ".", "qkv_linear", "(", "x", ")", ".", "view", "(", "-", "1", ",", "self", ".", "h", ",", "self", ".", "maxi_d", ")", "\n", "\n", "if", "self", ".", "samequerykey", ":", "\n", "                ", "query", "=", "key", "=", "query_key_value", "[", "...", ",", ":", "self", ".", "d_qk", "]", "\n", "value", "=", "query_key_value", "[", "...", ",", "-", "self", ".", "d", ":", "]", "\n", "", "else", ":", "\n", "                ", "query", "=", "query_key_value", "[", "...", ",", ":", "self", ".", "d_qk", "]", "\n", "key", "=", "query_key_value", "[", "...", ",", "self", ".", "d_qk", ":", "2", "*", "self", ".", "d_qk", "]", "\n", "value", "=", "query_key_value", "[", "...", ",", "-", "self", ".", "d", ":", "]", "\n", "\n", "", "proba", ",", "key", "=", "self", ".", "compute_proba", "(", "\n", "query", ",", "key", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", "=", "keystouse", ")", "\n", "\n", "value_ik", "=", "torch", ".", "index_select", "(", "\n", "torch", ".", "cat", "(", "[", "value", ",", "valuestouse", "]", ",", "0", ")", ",", "0", ",", "ik", ")", "\n", "\n", "out", "=", "torch_scatter", ".", "scatter_add", "(", "\n", "self", ".", "drop_proba", "(", "proba", ")", ".", "unsqueeze", "(", "-", "1", ")", "*", "value_ik", ",", "iq", ",", "0", ")", ".", "flatten", "(", "-", "2", ",", "-", "1", ")", "\n", "\n", "if", "hasattr", "(", "self", ",", "\"o_linear\"", ")", ":", "\n", "                ", "out", "=", "self", ".", "o_linear", "(", "out", ")", "\n", "\n", "", "return", "self", ".", "drop_out", "(", "out", ")", ",", "proba", ",", "key", ",", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.Attention.get_T": [[107, 110], ["attention.Attention.temperature_nowd.view"], "methods", ["None"], ["", "", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "get_T", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "temperature_nowd", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.Attention.compute_proba": [[111, 134], ["torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "attention.Attention.get_T", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch_scatter.scatter_softmax", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "attention.Attention.compute_relative_posenc"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.Attention.get_T"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "compute_proba", "(", "self", ",", "query", ",", "key", ",", "iq", ",", "ik", ",", "buckets", ",", "keystouse", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"PROBAS\"", ")", ":", "\n", "\n", "            ", "if", "self", ".", "normalize_qk", ":", "\n", "# Normalizing keys and queries", "\n", "                ", "query", "=", "F", ".", "normalize", "(", "query", ",", "dim", "=", "-", "1", ")", "\n", "key", "=", "F", ".", "normalize", "(", "key", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "query_iq", "=", "torch", ".", "index_select", "(", "query", ",", "0", ",", "iq", ")", "\n", "qk", "=", "(", "query_iq", "*", "torch", ".", "index_select", "(", "torch", ".", "cat", "(", "[", "key", ",", "keystouse", "]", ",", "0", ")", ",", "0", ",", "ik", ")", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "if", "self", ".", "do_relative_positional", ":", "\n", "                ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"POSENC\"", ")", ":", "\n", "                    ", "posenc", "=", "(", "query_iq", "*", "self", ".", "compute_relative_posenc", "(", "self", ".", "relative_positional_encoding_nowd", ",", "buckets", ")", ")", ".", "sum", "(", "-", "1", ")", "\n", "qk", "=", "qk", "+", "posenc", "\n", "\n", "", "", "qk", "=", "qk", "*", "self", ".", "get_T", "(", ")", "\n", "\n", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"NORM PROBA\"", ")", ":", "\n", "                ", "proba_qk", "=", "torch_scatter", ".", "scatter_softmax", "(", "qk", ",", "iq", ",", "0", ")", "\n", "\n", "", "return", "proba_qk", ",", "key", "", "", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.compute_relative_posenc_mul": [[9, 12], ["torch.index_select", "torch.index_select"], "function", ["None"], ["@", "torch", ".", "jit", ".", "script", "\n", "def", "compute_relative_posenc_mul", "(", "relative_positional_encoding_nowd", ",", "buckets", ")", ":", "\n", "    ", "return", "torch", ".", "index_select", "(", "relative_positional_encoding_nowd", ",", "0", ",", "buckets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.attention.compute_relative_posenc_plus": [[13, 19], ["buckets.size", "relative_positional_encoding_nowd.size", "torch.index_select", "torch.index_select", "torch.index_select.reshape().sum", "buckets.flatten", "torch.index_select.reshape"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "compute_relative_posenc_plus", "(", "relative_positional_encoding_nowd", ",", "buckets", ")", ":", "\n", "    ", "_", ",", "dim_buckets", "=", "buckets", ".", "size", "(", ")", "\n", "_", ",", "n_heads", ",", "dim", "=", "relative_positional_encoding_nowd", ".", "size", "(", ")", "\n", "posenc_all_dims", "=", "torch", ".", "index_select", "(", "relative_positional_encoding_nowd", ",", "0", ",", "buckets", ".", "flatten", "(", ")", ")", "\n", "return", "posenc_all_dims", ".", "reshape", "(", "-", "1", ",", "dim_buckets", ",", "n_heads", ",", "dim", ")", ".", "sum", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.__init__": [[144, 226], ["super().__init__", "transformer.Transformer.register_buffer", "transformer.Transformer.register_buffer", "torch.nn.ModuleList", "torch.nn.ModuleList", "transformer.Transformer.register_buffer", "transformer.Transformer.register_buffer", "transformer.Transformer.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "transformer.Transformer.register_buffer", "transformer.Transformer.register_buffer", "transformer.Transformer.register_buffer", "transformer.Transformer.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "sparseops.LayerNorm", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "transformer.Transformer.register_buffer", "TransformerBlock", "sparseops.LayerNorm", "ValueError", "list.numel", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "list", "transformer.Transformer.register_buffer", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "list.numel", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "list.numel", "numpy.array", "list", "numpy.cumsum"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "transformer", ",", "temporal_transformer", "=", "False", ",", "slices_per_rotation", "=", "1", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "spatial_receptive_field", "=", "transformer", ".", "spatial_receptive_field", "\n", "self", ".", "spatial_receptive_field2", "=", "transformer", ".", "spatial_receptive_field", "**", "2", "\n", "self", ".", "force_keep_neighbours", "=", "transformer", ".", "force_keep_neighbours", "\n", "self", ".", "temporal_transformer", "=", "temporal_transformer", "\n", "self", ".", "slices_per_rotation", "=", "slices_per_rotation", "\n", "\n", "self", ".", "register_buffer", "(", "\"zero_kvp_in_pos\"", ",", "torch", ".", "zeros", "(", "(", "0", ",", "4", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"zero_kvp_in_grid\"", ",", "torch", ".", "zeros", "(", "(", "0", ",", "5", ")", ",", "dtype", "=", "torch", ".", "int32", ")", ")", "\n", "\n", "if", "transformer", ".", "do_relative_positional", ":", "\n", "            ", "self", ".", "register_buffer", "(", "\"alpha\"", ",", "torch", ".", "tensor", "(", "\n", "transformer", ".", "relative_positional_alpha", ",", "dtype", "=", "torch", ".", "float16", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"beta\"", ",", "torch", ".", "tensor", "(", "\n", "transformer", ".", "relative_positional_beta", ",", "dtype", "=", "torch", ".", "float16", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"gamma\"", ",", "torch", ".", "tensor", "(", "\n", "transformer", ".", "relative_positional_gamma", ",", "dtype", "=", "torch", ".", "float16", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"gresolution\"", ",", "torch", ".", "tensor", "(", "\n", "transformer", ".", "relative_positional_gresolution", ",", "dtype", "=", "torch", ".", "float16", ")", ")", "\n", "\n", "self", ".", "relative_positional_mode", "=", "transformer", ".", "relative_positional_mode", "\n", "if", "transformer", ".", "relative_positional_mode", "==", "\"mul\"", ":", "\n", "                ", "n_buckets", "=", "2", "*", "torch", ".", "tensor", "(", "transformer", ".", "relative_positional_beta", ")", "+", "1", "\n", "if", "n_buckets", ".", "numel", "(", ")", "==", "1", ":", "\n", "                    ", "mul_buckets", "=", "[", "n_buckets", "**", "2", ",", "n_buckets", ",", "1", "]", "\n", "", "elif", "n_buckets", ".", "numel", "(", ")", "==", "2", ":", "\n", "                    ", "mul_buckets", "=", "[", "n_buckets", "[", "-", "1", "]", ",", "1", "]", "\n", "", "elif", "n_buckets", ".", "numel", "(", ")", "==", "3", ":", "\n", "                    ", "mul_buckets", "=", "[", "n_buckets", "[", "-", "1", "]", "*", "n_buckets", "[", "-", "2", "]", ",", "n_buckets", "[", "-", "1", "]", ",", "1", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "\n", "\n", "", "self", ".", "register_buffer", "(", "\"mul_buckets\"", ",", "torch", ".", "tensor", "(", "mul_buckets", ",", "dtype", "=", "torch", ".", "float16", ")", ")", "\n", "\n", "self", ".", "from_dxyz_to_bucket", "=", "from_dxyz_to_bucket_mul", "\n", "\n", "", "elif", "transformer", ".", "relative_positional_mode", "==", "\"plus\"", ":", "\n", "                ", "n_buckets", "=", "list", "(", "2", "*", "np", ".", "array", "(", "transformer", ".", "relative_positional_beta", ")", "+", "1", ")", "\n", "\n", "if", "transformer", ".", "relative_positional_ntime", "!=", "1", ":", "\n", "                    ", "n_buckets", "+=", "[", "transformer", ".", "relative_positional_ntime", "]", "\n", "\n", "", "self", ".", "register_buffer", "(", "\"mul_buckets\"", ",", "torch", ".", "tensor", "(", "[", "0", "]", "+", "list", "(", "np", ".", "cumsum", "(", "n_buckets", ")", ")", "[", ":", "-", "1", "]", ",", "dtype", "=", "torch", ".", "int64", ")", ")", "\n", "\n", "self", ".", "from_dxyz_to_bucket", "=", "from_dxyz_to_bucket_plus", "\n", "\n", "", "self", ".", "temporal_buckets", "=", "transformer", ".", "temporal_buckets", "\n", "if", "self", ".", "temporal_buckets", ":", "\n", "                ", "self", ".", "n_avail_temporal_block", "=", "transformer", ".", "relative_positional_ntime", "\n", "\n", "if", "transformer", ".", "relative_positional_mode", "==", "\"mul\"", ":", "\n", "                    ", "self", ".", "from_buckets_to_temporalbuckets", "=", "from_buckets_to_temporalbuckets_mul", "\n", "", "elif", "transformer", ".", "relative_positional_mode", "==", "\"plus\"", ":", "\n", "                    ", "self", ".", "from_buckets_to_temporalbuckets", "=", "from_buckets_to_temporalbuckets_plus", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "\n", "\n", "\n", "", "", "", "TransformerBlock", "=", "TransformerBlockFFN", "if", "transformer", ".", "do_ffn", "else", "TransformerBlockNOFFN", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "[", "TransformerBlock", "(", "\n", "dim_in", ",", "transformer", ",", "i", ")", "for", "i", "in", "range", "(", "transformer", ".", "n_layers", ")", "]", ")", "\n", "\n", "self", ".", "do_relative_positional", "=", "transformer", ".", "do_relative_positional", "\n", "\n", "self", ".", "register_buffer", "(", "\"zero_keys\"", ",", "torch", ".", "zeros", "(", "\n", "(", "0", ",", "transformer", ".", "n_heads", ",", "transformer", ".", "dim_qk", "if", "transformer", ".", "dim_qk", "!=", "0", "else", "dim_in", "//", "transformer", ".", "n_heads", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"zero_values\"", ",", "torch", ".", "zeros", "(", "\n", "(", "0", ",", "transformer", ".", "n_heads", ",", "dim_in", "//", "transformer", ".", "n_heads", ")", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"zero_batch\"", ",", "torch", ".", "zeros", "(", "0", ")", ")", "\n", "\n", "if", "transformer", ".", "batchnorm_output", ":", "\n", "            ", "self", ".", "batchnorm_output", "=", "nn", ".", "BatchNorm1d", "(", "dim_in", ")", "\n", "\n", "", "if", "transformer", ".", "architecture", "==", "\"Pre-LN\"", ":", "\n", "            ", "self", ".", "norm_output", "=", "LayerNorm", "(", "dim_in", ")", "\n", "", "elif", "transformer", ".", "architecture", "==", "\"Post-LN\"", ":", "\n", "            ", "self", ".", "norm_input", "=", "LayerNorm", "(", "dim_in", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f'Invalid architecture \"{transformer.architecture}\", should be in [\"Pre-LN\", \"Post-LN\"]'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.forward": [[227, 272], ["transformer.Transformer.prepare_kvpos_out", "hasattr", "enumerate", "hasattr", "hasattr", "transformer.compute_batch_for_layernorm", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "transformer.Transformer.compute_interactions", "transformer.Transformer.compute_buckets", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "block", "probas.append", "transformer.Transformer.update_kvpos_out", "transformer.Transformer.norm_output", "transformer.Transformer.batchnorm_output", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "transformer.Transformer.norm_input", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.prepare_kvpos_out", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.compute_batch_for_layernorm", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.compute_interactions", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.compute_buckets", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.update_kvpos_out"], ["", "", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "xyz", ":", "torch", ".", "Tensor", ",", "grid", ":", "torch", ".", "Tensor", ",", "batch_size", ":", "int", ",", "kvp_in_isnone", ":", "bool", ",", "kvp_in", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ")", ":", "#, iq=None, ik=None, buckets=None):", "\n", "        ", "probas", "=", "[", "]", "\n", "\n", "if", "kvp_in_isnone", ":", "\n", "            ", "batch_for_layernorm", "=", "compute_batch_for_layernorm", "(", "grid", ",", "batch_size", ")", "\n", "", "else", ":", "\n", "            ", "batch_for_layernorm", "=", "self", ".", "zero_batch", "\n", "\n", "#if iq is None or ik is None:", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "iq", ",", "ik", ",", "dxyz16", ",", "dscanid", "=", "self", ".", "compute_interactions", "(", "\n", "grid", ",", "xyz", ",", "batch_size", ",", "kvp_in", "[", "\"pos\"", "]", ",", "kvp_in", "[", "\"grid\"", "]", ")", "\n", "\n", "", "if", "self", ".", "do_relative_positional", ":", "\n", "            ", "buckets", "=", "self", ".", "compute_buckets", "(", "dxyz16", ",", "dscanid", ")", "\n", "", "else", ":", "\n", "            ", "buckets", "=", "torch", ".", "tensor", "(", "[", "]", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "\n", "", "kvp_out", "=", "self", ".", "prepare_kvpos_out", "(", "xyz", ",", "grid", ")", "\n", "\n", "if", "hasattr", "(", "self", ",", "\"norm_input\"", ")", ":", "\n", "            ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"NORM\"", ")", ":", "\n", "                ", "x", "=", "self", ".", "norm_input", "(", "x", ",", "batch", "=", "batch_for_layernorm", ")", "\n", "\n", "", "", "for", "iblock", ",", "block", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "#if kvp_in_isnone:", "\n", "#    x, proba, key, value = block(x, batch_for_layernorm, iq, ik, buckets=buckets, keystouse=self.zero_keys, valuestouse=self.zero_values)", "\n", "#else:", "\n", "            ", "x", ",", "proba", ",", "key", ",", "value", "=", "block", "(", "\n", "x", ",", "batch_for_layernorm", ",", "iq", ",", "ik", ",", "buckets", "=", "buckets", ",", "\n", "keystouse", "=", "kvp_in", "[", "f\"keys_{iblock}\"", "]", ",", "\n", "valuestouse", "=", "kvp_in", "[", "f\"values_{iblock}\"", "]", "\n", ")", "\n", "\n", "probas", ".", "append", "(", "proba", ")", "\n", "self", ".", "update_kvpos_out", "(", "kvp_out", ",", "iblock", ",", "key", ",", "value", ")", "\n", "\n", "", "if", "hasattr", "(", "self", ",", "\"norm_output\"", ")", ":", "\n", "            ", "x", "=", "self", ".", "norm_output", "(", "x", ",", "batch", "=", "batch_for_layernorm", ")", "\n", "\n", "", "if", "hasattr", "(", "self", ",", "\"batchnorm_output\"", ")", ":", "\n", "            ", "x", "=", "self", ".", "batchnorm_output", "(", "x", ")", "\n", "\n", "", "return", "x", ",", "probas", ",", "iq", ",", "ik", ",", "buckets", ",", "kvp_out", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.compute_buckets": [[273, 281], ["transformer.Transformer.from_dxyz_to_bucket", "transformer.Transformer.from_buckets_to_temporalbuckets"], "methods", ["None"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "compute_buckets", "(", "self", ",", "dxyz16", ",", "dscanid", ")", ":", "\n", "        ", "xyz_buckets", "=", "self", ".", "from_dxyz_to_bucket", "(", "dxyz16", ",", "self", ".", "mul_buckets", ",", "self", ".", "alpha", ",", "self", ".", "beta", ",", "self", ".", "gamma", ",", "self", ".", "gresolution", ")", "\n", "\n", "if", "self", ".", "temporal_buckets", ":", "\n", "            ", "return", "self", ".", "from_buckets_to_temporalbuckets", "(", "self", ".", "n_avail_temporal_block", ",", "xyz_buckets", ",", "dscanid", ",", "self", ".", "mul_buckets", "[", "-", "1", "]", ")", "\n", "\n", "", "return", "xyz_buckets", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.prepare_kvpos_out": [[282, 290], ["xyz.detach", "grid.detach"], "methods", ["None"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "prepare_kvpos_out", "(", "self", ",", "xyz", ",", "grid", ")", ":", "\n", "        ", "kvp_out", "=", "{", "}", "\n", "if", "self", ".", "temporal_transformer", ":", "\n", "#kvp_out = Data(pos=xyz, grid=grid)", "\n", "            ", "kvp_out", "=", "{", "\"pos\"", ":", "xyz", ".", "detach", "(", ")", ",", "\"grid\"", ":", "grid", ".", "detach", "(", ")", "}", "\n", "\n", "", "return", "kvp_out", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.update_kvpos_out": [[291, 298], ["key.detach", "value.detach"], "methods", ["None"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "update_kvpos_out", "(", "self", ",", "kvp_out", ":", "Dict", "[", "str", ",", "torch", ".", "Tensor", "]", ",", "iblock", ":", "int", ",", "key", ":", "torch", ".", "Tensor", ",", "value", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "if", "self", ".", "temporal_transformer", ":", "\n", "#setattr(kvp_out, f\"keys_{iblock}\", key)", "\n", "#setattr(kvp_out, f\"values_{iblock}\", value)", "\n", "            ", "kvp_out", "[", "f\"keys_{iblock}\"", "]", "=", "key", ".", "detach", "(", ")", "\n", "kvp_out", "[", "f\"values_{iblock}\"", "]", "=", "value", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.Transformer.compute_interactions": [[299, 310], ["torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "torch.profiler.record_function", "transformer.jit_compute_interactions"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.jit_compute_interactions"], ["", "", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "compute_interactions", "(", "self", ",", "grid", ":", "torch", ".", "Tensor", ",", "xyz", ":", "torch", ".", "Tensor", ",", "batch_size", ":", "int", ",", "kvp_in_pos", ":", "torch", ".", "Tensor", ",", "kvp_in_grid", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"IJ\"", ")", ":", "\n", "            ", "return", "jit_compute_interactions", "(", "\n", "grid", ",", "xyz", ",", "\n", "kvp_in_pos", "=", "kvp_in_pos", ",", "\n", "kvp_in_grid", "=", "kvp_in_grid", ",", "\n", "force_keep_neighbours", "=", "self", ".", "force_keep_neighbours", ",", "\n", "spatial_receptive_field", "=", "self", ".", "spatial_receptive_field", ",", "\n", "spatial_receptive_field2", "=", "self", ".", "spatial_receptive_field2", ",", "\n", "slices_per_rotation", "=", "self", ".", "slices_per_rotation", "\n", ")", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.jit_compute_interactions": [[14, 101], ["grid.to.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "grid.to.to", "grid.to.size", "grid.to.max", "torch.profiler.record_function", "torch.profiler.record_function", "torch.arange", "torch.arange", "torch.profiler.record_function", "torch.profiler.record_function", "torch.cat.to", "torch.hstack", "torch.hstack", "torch.div", "torch.div", "batch.size", "torch.stack().flatten().long", "torch.stack().flatten().long", "torch.stack().flatten", "torch.stack().flatten", "iqik[].long", "torch.profiler.record_function", "torch.profiler.record_function", "torch.index_select", "torch.index_select", "torch.zeros", "torch.zeros", "torch.ceil().to", "torch.ceil().to", "torch.where", "torch.where", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.logical_and", "torch.logical_and", "torch.logical_and", "torch.logical_and", "torch.logical_or", "torch.logical_or", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.logical_or", "torch.logical_or", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.zeros", "torch.zeros", "kvp_in_pos[].int", "torch.stack().flatten", "torch.stack().flatten", "torch.stack", "torch.stack", "grid.to.size", "torch.ceil", "torch.ceil", "torch.meshgrid", "torch.meshgrid", "torch.stack", "torch.stack", "torch.meshgrid", "torch.meshgrid", "batch.unsqueeze", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select"], "function", ["None"], ["@", "torch", ".", "jit", ".", "script", "\n", "def", "jit_compute_interactions", "(", "\n", "grid", ":", "torch", ".", "Tensor", ",", "xyz", ":", "torch", ".", "Tensor", ",", "kvp_in_pos", ":", "torch", ".", "Tensor", ",", "kvp_in_grid", ":", "torch", ".", "Tensor", ",", "\n", "force_keep_neighbours", ":", "bool", ",", "spatial_receptive_field", ":", "float", ",", "spatial_receptive_field2", ":", "float", ",", "slices_per_rotation", ":", "int", "\n", ")", ":", "\n", "    ", "query_size", "=", "grid", ".", "size", "(", "0", ")", "\n", "\n", "xyz", "=", "torch", ".", "cat", "(", "[", "xyz", ",", "kvp_in_pos", "[", ":", ",", "1", ":", "]", "]", ",", "0", ")", "\n", "grid", "=", "torch", ".", "cat", "(", "[", "grid", ",", "kvp_in_grid", "]", ",", "0", ")", "\n", "have_kvp", "=", "query_size", "!=", "grid", ".", "size", "(", "0", ")", "\n", "\n", "assert", "grid", ".", "max", "(", ")", "<", "128", "\n", "grid", "=", "grid", ".", "to", "(", "torch", ".", "int8", ")", "\n", "\n", "batch", "=", "grid", "[", ":", ",", "0", "]", "\n", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"IJ batch\"", ")", ":", "\n", "        ", "i", "=", "torch", ".", "arange", "(", "batch", ".", "size", "(", "\n", "0", ")", ",", "device", "=", "batch", ".", "device", ",", "dtype", "=", "torch", ".", "int32", ")", "#int16 before ! changed for HelixNet !", "\n", "\n", "if", "have_kvp", ":", "\n", "            ", "iqik", "=", "torch", ".", "stack", "(", "torch", ".", "meshgrid", "(", "(", "i", "[", ":", "query_size", "]", ",", "i", ")", ",", "\n", ")", ",", "-", "1", ")", ".", "flatten", "(", "0", ",", "1", ")", ".", "long", "(", ")", "\n", "", "else", ":", "\n", "            ", "iqik", "=", "torch", ".", "stack", "(", "torch", ".", "meshgrid", "(", "(", "i", ",", "i", ")", ",", "\n", ")", ",", "-", "1", ")", ".", "flatten", "(", "0", ",", "1", ")", "\n", "iqik", "=", "iqik", "[", "(", "batch", ".", "unsqueeze", "(", "-", "1", ")", "==", "batch", ")", ".", "flatten", "(", ")", "]", ".", "long", "(", ")", "\n", "\n", "", "", "if", "not", "have_kvp", ":", "\n", "        ", "block", "=", "grid", "[", ":", ",", "1", "]", "\n", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"IJ block\"", ")", ":", "\n", "            ", "blockiqik", "=", "block", "[", "iqik", "]", "\n", "keep_block", "=", "blockiqik", "[", ":", ",", "0", "]", "<=", "blockiqik", "[", ":", ",", "1", "]", "\n", "keep_blocki", "=", "torch", ".", "where", "(", "keep_block", ")", "[", "0", "]", "\n", "iqik", "=", "torch", ".", "index_select", "(", "iqik", ",", "0", ",", "keep_blocki", ")", "\n", "\n", "", "", "with", "torch", ".", "profiler", ".", "record_function", "(", "\"SPATIAL\"", ")", ":", "\n", "        ", "iqtemp", ",", "iktemp", "=", "iqik", "[", ":", ",", "0", "]", ",", "iqik", "[", ":", ",", "1", "]", "\n", "\n", "if", "force_keep_neighbours", ":", "\n", "            ", "grid_look", "=", "grid", "[", ":", ",", "1", ":", "]", "\n", "grid_look_iq", ",", "grid_look_ik", "=", "torch", ".", "index_select", "(", "\n", "grid_look", ",", "0", ",", "iqtemp", ")", ",", "torch", ".", "index_select", "(", "grid_look", ",", "0", ",", "iktemp", ")", "\n", "forcekeep", "=", "(", "grid_look_iq", "[", ":", ",", "1", ":", "]", "-", "grid_look_ik", "[", ":", ",", "1", ":", "]", ")", ".", "abs", "(", ")", ".", "max", "(", "-", "1", ")", "[", "0", "]", "<=", "1", "\n", "\n", "if", "have_kvp", ":", "\n", "                ", "forcekeep", "=", "torch", ".", "logical_and", "(", "# rtz <= 1 and first block", "\n", "forcekeep", ",", "iktemp", "<", "query_size", ")", "\n", "", "else", ":", "\n", "                ", "forcekeep", "=", "torch", ".", "logical_and", "(", "# rtz <= 1 and same block", "\n", "forcekeep", ",", "grid_look_iq", "[", ":", ",", "0", "]", "==", "grid_look_ik", "[", ":", ",", "0", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "forcekeep", "=", "torch", ".", "zeros", "(", "(", "grid", ".", "size", "(", "0", ")", ",", ")", ",", "dtype", "=", "torch", ".", "bool", ",", "device", "=", "grid", ".", "device", ")", "\n", "\n", "", "xyz16", "=", "xyz", ".", "to", "(", "torch", ".", "float16", ")", "\n", "\n", "# Keep closest points", "\n", "if", "spatial_receptive_field2", "!=", "0", ":", "\n", "\n", "            ", "xy_coarse", "=", "torch", ".", "ceil", "(", "xyz", "[", ":", ",", ":", "2", "]", "/", "spatial_receptive_field", ")", ".", "to", "(", "torch", ".", "int8", ")", "\n", "keep_coarse", "=", "(", "torch", ".", "index_select", "(", "xy_coarse", ",", "0", ",", "iqtemp", ")", "-", "torch", ".", "index_select", "(", "xy_coarse", ",", "0", ",", "iktemp", ")", ")", ".", "abs", "(", ")", ".", "max", "(", "-", "1", ")", "[", "0", "]", "<=", "1", "\n", "if", "force_keep_neighbours", ":", "\n", "                ", "keep_coarse", "=", "torch", ".", "logical_or", "(", "forcekeep", ",", "keep_coarse", ")", "\n", "forcekeep", "=", "forcekeep", "[", "keep_coarse", "]", "\n", "\n", "", "iqik", "=", "iqik", "[", "keep_coarse", "]", "\n", "\n", "dxyz16", "=", "torch", ".", "index_select", "(", "xyz16", ",", "0", ",", "iqik", "[", ":", ",", "0", "]", ")", "-", "torch", ".", "index_select", "(", "xyz16", ",", "0", ",", "iqik", "[", ":", ",", "1", "]", ")", "\n", "keepr", "=", "(", "dxyz16", "**", "2", ")", ".", "sum", "(", "-", "1", ")", "<=", "spatial_receptive_field2", "\n", "if", "force_keep_neighbours", ":", "\n", "                ", "keepr", "=", "torch", ".", "logical_or", "(", "forcekeep", ",", "keepr", ")", "\n", "forcekeep", "=", "forcekeep", "[", "keepr", "]", "\n", "\n", "", "iqik", "=", "iqik", "[", "keepr", "]", "\n", "dxyz16", "=", "dxyz16", "[", "keepr", "]", "\n", "", "else", ":", "\n", "            ", "dxyz16", "=", "torch", ".", "index_select", "(", "xyz16", ",", "0", ",", "iqik", "[", ":", ",", "0", "]", ")", "-", "torch", ".", "index_select", "(", "xyz16", ",", "0", ",", "iqik", "[", ":", ",", "1", "]", ")", "\n", "\n", "", "", "iq", ",", "ik", "=", "iqik", "[", ":", ",", "0", "]", ",", "iqik", "[", ":", ",", "1", "]", "\n", "\n", "if", "have_kvp", ":", "\n", "        ", "scanid", "=", "torch", ".", "hstack", "(", "(", "torch", ".", "zeros", "(", "query_size", ",", "device", "=", "kvp_in_pos", "[", ":", ",", "0", "]", ".", "device", ",", "dtype", "=", "torch", ".", "int", ")", ",", "kvp_in_pos", "[", ":", ",", "0", "]", ".", "int", "(", ")", ")", ")", "\n", "dscanid", "=", "scanid", "[", "ik", "]", "\n", "", "else", ":", "\n", "        ", "scanid", "=", "torch", ".", "div", "(", "grid", "[", ":", ",", "1", "]", ",", "slices_per_rotation", ",", "rounding_mode", "=", "\"floor\"", ")", "\n", "dscanid", "=", "scanid", "[", "ik", "]", "-", "scanid", "[", "iq", "]", "\n", "\n", "", "return", "iq", ",", "ik", ",", "dxyz16", ",", "dscanid", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.from_buckets_to_temporalbuckets_mul": [[102, 105], ["None"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "from_buckets_to_temporalbuckets_mul", "(", "n_avail_temporal_block", ":", "int", ",", "xyz_buckets", ",", "dt", ",", "mul_buckets", ")", ":", "\n", "    ", "return", "n_avail_temporal_block", "*", "xyz_buckets", "+", "dt", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.from_buckets_to_temporalbuckets_plus": [[106, 109], ["torch.cat", "torch.cat", "dt.unsqueeze"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "from_buckets_to_temporalbuckets_plus", "(", "n_avail_temporal_block", ":", "int", ",", "xyz_buckets", ",", "dt", ",", "mul_buckets", ")", ":", "\n", "    ", "return", "torch", ".", "cat", "(", "[", "xyz_buckets", ",", "dt", ".", "unsqueeze", "(", "-", "1", ")", "+", "mul_buckets", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.compute_batch_for_layernorm": [[110, 113], ["None"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "compute_batch_for_layernorm", "(", "grid", ",", "batch_size", ":", "int", ")", ":", "\n", "    ", "return", "(", "grid", "[", ":", ",", "0", "]", "+", "batch_size", "*", "grid", "[", ":", ",", "1", "]", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.from_dxyz_to_bucket_base": [[114, 126], ["torch.stack.abs", "torch.clamp", "torch.clamp", "res.size", "torch.stack", "torch.stack", "torch.round().to", "torch.round().to", "torch.sign", "torch.sign", "torch.where", "torch.where", "torch.round", "torch.round", "torch.sqrt", "torch.sqrt", "torch.round", "torch.round", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "from_dxyz_to_bucket_base", "(", "x", ",", "alpha", ",", "beta", ",", "gamma", ",", "res", ")", ":", "\n", "    ", "if", "res", ".", "size", "(", "0", ")", "==", "2", ":", "\n", "        ", "x", "=", "torch", ".", "stack", "(", "[", "torch", ".", "sqrt", "(", "x", "[", ":", ",", "0", "]", "**", "2", "+", "x", "[", ":", ",", "1", "]", "**", "2", ")", ",", "x", "[", ":", ",", "-", "1", "]", "]", ",", "-", "1", ")", "\n", "", "x", "=", "x", "/", "res", "\n", "x_abs", "=", "x", ".", "abs", "(", ")", "\n", "\n", "sup", "=", "torch", ".", "clamp", "(", "torch", ".", "round", "(", "alpha", "-", "(", "beta", "-", "alpha", ")", "*", "torch", ".", "log", "(", "x_abs", "/", "alpha", ")", "/", "torch", ".", "log", "(", "gamma", "/", "alpha", ")", ")", ".", "to", "(", "x", ".", "dtype", ")", ",", "max", "=", "beta", ")", "\n", "sup", "=", "torch", ".", "sign", "(", "x", ")", "*", "sup", "\n", "\n", "buckets", "=", "beta", "+", "torch", ".", "where", "(", "x_abs", "<=", "alpha", ",", "torch", ".", "round", "(", "x", ")", ",", "sup", ")", "\n", "return", "buckets", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.from_dxyz_to_bucket_mul": [[127, 134], ["transformer.from_dxyz_to_bucket_base", "from_dxyz_to_bucket_base.long"], "function", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.from_dxyz_to_bucket_base"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "from_dxyz_to_bucket_mul", "(", "x", ":", "torch", ".", "Tensor", ",", "mul_buckets", ":", "torch", ".", "Tensor", ",", "alpha", ":", "torch", ".", "Tensor", ",", "beta", ":", "torch", ".", "Tensor", ",", "gamma", ":", "torch", ".", "Tensor", ",", "res", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "buckets", "=", "from_dxyz_to_bucket_base", "(", "x", ",", "alpha", ",", "beta", ",", "gamma", ",", "res", ")", "\n", "\n", "buckets", "=", "(", "mul_buckets", "*", "buckets", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "return", "buckets", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.from_dxyz_to_bucket_plus": [[135, 141], ["from_dxyz_to_bucket_base().long", "transformer.from_dxyz_to_bucket_base", "from_dxyz_to_bucket_base().long.size"], "function", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.transformer.from_dxyz_to_bucket_base"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "from_dxyz_to_bucket_plus", "(", "x", ":", "torch", ".", "Tensor", ",", "mul_buckets", ":", "torch", ".", "Tensor", ",", "alpha", ":", "torch", ".", "Tensor", ",", "beta", ":", "torch", ".", "Tensor", ",", "gamma", ":", "torch", ".", "Tensor", ",", "res", ":", "torch", ".", "Tensor", ")", ":", "\n", "    ", "buckets", "=", "from_dxyz_to_bucket_base", "(", "x", ",", "alpha", ",", "beta", ",", "gamma", ",", "res", ")", ".", "long", "(", ")", "\n", "\n", "buckets", "=", "buckets", "+", "mul_buckets", "[", ":", "buckets", ".", "size", "(", "-", "1", ")", "]", "\n", "return", "buckets", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.utils._init_weights": [[3, 11], ["isinstance", "torch.nn.init.xavier_uniform_", "isinstance", "isinstance", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "function", ["None"], ["def", "_init_weights", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.transformer.utils.feed_forward": [[12, 30], ["nn.Sequential.apply", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Dropout"], "function", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear"], ["", "", "def", "feed_forward", "(", "dim_input", ":", "int", "=", "512", ",", "mul_feedforward", ":", "int", "=", "1", ",", "drop", "=", ".25", ")", "->", "nn", ".", "Module", ":", "\n", "\n", "    ", "if", "mul_feedforward", "==", "0", ":", "\n", "        ", "ffn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "dim_input", ",", "dim_input", ")", ",", "\n", "nn", ".", "Dropout", "(", "drop", ")", "\n", ")", "\n", "", "else", ":", "\n", "        ", "ffn", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "dim_input", ",", "mul_feedforward", "*", "dim_input", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "drop", ")", ",", "\n", "nn", ".", "Linear", "(", "mul_feedforward", "*", "dim_input", ",", "dim_input", ")", ",", "\n", "nn", ".", "Dropout", "(", "drop", ")", "\n", ")", "\n", "\n", "", "ffn", ".", "apply", "(", "_init_weights", ")", "\n", "return", "ffn", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.ConvLayer.__init__": [[6, 11], ["torch.nn.Module.__init__", "utils_conv.conv3x3x3", "torch.nn.LeakyReLU", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv3x3x3"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "key", "=", "None", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "ConvLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv3x3x3", "=", "conv3x3x3", "(", "dim_in", ",", "dim_out", ",", "indice_key", "=", "key", "+", "\"_3x3x3\"", ")", "\n", "self", ".", "act", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "dim_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.ConvLayer.forward": [[12, 16], ["utils_conv.ConvLayer.conv3x3x3", "x.replace_feature.replace_feature.replace_feature", "utils_conv.ConvLayer.bn", "utils_conv.ConvLayer.act"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv3x3x3"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv3x3x3", "(", "x", ")", "\n", "x", "=", "x", ".", "replace_feature", "(", "self", ".", "bn", "(", "self", ".", "act", "(", "x", ".", "features", ")", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.AsymConvLayer.__init__": [[18, 38], ["torch.nn.Module.__init__", "utils_conv.conv1x3x3", "torch.nn.BatchNorm1d", "torch.nn.LeakyReLU", "utils_conv.conv3x1x3", "torch.nn.BatchNorm1d", "torch.nn.LeakyReLU", "utils_conv.conv3x1x3", "torch.nn.BatchNorm1d", "torch.nn.LeakyReLU", "utils_conv.conv1x3x3", "torch.nn.BatchNorm1d", "torch.nn.LeakyReLU", "utils_conv.AsymConvLayer.weight_initialization"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv1x3x3", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv3x1x3", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv3x1x3", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv1x3x3", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.AsymConvLayer.weight_initialization"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "key", "=", "None", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "AsymConvLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_A0", "=", "conv1x3x3", "(", "dim_in", ",", "dim_out", ",", "indice_key", "=", "key", "+", "\"_1x3x3\"", ")", "\n", "self", ".", "bn_A0", "=", "nn", ".", "BatchNorm1d", "(", "dim_out", ")", "\n", "self", ".", "act_A0", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "\n", "self", ".", "conv_A1", "=", "conv3x1x3", "(", "dim_out", ",", "dim_out", ",", "indice_key", "=", "key", "+", "\"_3x1x3\"", ")", "\n", "self", ".", "bn_A1", "=", "nn", ".", "BatchNorm1d", "(", "dim_out", ")", "\n", "self", ".", "act_A1", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "\n", "self", ".", "conv_B0", "=", "conv3x1x3", "(", "dim_in", ",", "dim_out", ",", "indice_key", "=", "key", "+", "\"_3x1x3\"", ")", "\n", "self", ".", "bn_B0", "=", "nn", ".", "BatchNorm1d", "(", "dim_out", ")", "\n", "self", ".", "act_B0", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "\n", "self", ".", "conv_B1", "=", "conv1x3x3", "(", "dim_out", ",", "dim_out", ",", "indice_key", "=", "key", "+", "\"_1x3x3\"", ")", "\n", "self", ".", "bn_B1", "=", "nn", ".", "BatchNorm1d", "(", "dim_out", ")", "\n", "self", ".", "act_B1", "=", "nn", ".", "LeakyReLU", "(", ")", "\n", "\n", "self", ".", "weight_initialization", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.AsymConvLayer.weight_initialization": [[39, 44], ["utils_conv.AsymConvLayer.modules", "isinstance", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["None"], ["", "def", "weight_initialization", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.AsymConvLayer.forward": [[45, 60], ["utils_conv.AsymConvLayer.conv_A0", "A.replace_feature.replace_feature.replace_feature", "utils_conv.AsymConvLayer.conv_A1", "A.replace_feature.replace_feature.replace_feature", "utils_conv.AsymConvLayer.conv_B0", "B.replace_feature.replace_feature.replace_feature", "utils_conv.AsymConvLayer.conv_B1", "B.replace_feature.replace_feature.replace_feature", "A.replace_feature.replace_feature.replace_feature", "utils_conv.AsymConvLayer.bn_A0", "utils_conv.AsymConvLayer.bn_A1", "utils_conv.AsymConvLayer.bn_B0", "utils_conv.AsymConvLayer.bn_B1", "utils_conv.AsymConvLayer.act_A0", "utils_conv.AsymConvLayer.act_A1", "utils_conv.AsymConvLayer.act_B0", "utils_conv.AsymConvLayer.act_B1"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "A", "=", "self", ".", "conv_A0", "(", "x", ")", "\n", "A", "=", "A", ".", "replace_feature", "(", "self", ".", "bn_A0", "(", "self", ".", "act_A0", "(", "A", ".", "features", ")", ")", ")", "\n", "\n", "A", "=", "self", ".", "conv_A1", "(", "A", ")", "\n", "A", "=", "A", ".", "replace_feature", "(", "self", ".", "bn_A1", "(", "self", ".", "act_A1", "(", "A", ".", "features", ")", ")", ")", "\n", "\n", "B", "=", "self", ".", "conv_B0", "(", "x", ")", "\n", "B", "=", "B", ".", "replace_feature", "(", "self", ".", "bn_B0", "(", "self", ".", "act_B0", "(", "B", ".", "features", ")", ")", ")", "\n", "\n", "B", "=", "self", ".", "conv_B1", "(", "A", ")", "\n", "B", "=", "B", ".", "replace_feature", "(", "self", ".", "bn_B1", "(", "self", ".", "act_B1", "(", "B", ".", "features", ")", ")", ")", "\n", "\n", "A", "=", "A", ".", "replace_feature", "(", "A", ".", "features", "+", "B", ".", "features", ")", "\n", "return", "A", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.MySubMConv3d.__repr__": [[62, 65], ["str"], "methods", ["None"], ["    ", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "conv", "=", "\"x\"", ".", "join", "(", "[", "str", "(", "ks", ")", "for", "ks", "in", "self", ".", "kernel_size", "]", ")", "\n", "return", "f\"MySubMConv3d({self.in_channels}, {conv}, {self.out_channels})\"", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.MySparseConv3d.__repr__": [[67, 70], ["str"], "methods", ["None"], ["    ", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "conv", "=", "\"x\"", ".", "join", "(", "[", "str", "(", "ks", ")", "for", "ks", "in", "self", ".", "kernel_size", "]", ")", "\n", "return", "f\"MySparseConv3d({self.in_channels}, {conv}, {self.out_channels})\"", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.MySparseInverseConv3d.__repr__": [[72, 75], ["str"], "methods", ["None"], ["    ", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "conv", "=", "\"x\"", ".", "join", "(", "[", "str", "(", "ks", ")", "for", "ks", "in", "self", ".", "kernel_size", "]", ")", "\n", "return", "f\"MySparseInverseConv3d({self.in_channels}, {conv}, {self.out_channels})\"", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv1x1x1.__init__": [[114, 117], ["torch.nn.Module.__init__", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.voxel.linear.Linear"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lin", "=", "nn", ".", "Linear", "(", "in_planes", ",", "out_planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv1x1x1.forward": [[118, 121], ["x.replace_feature.replace_feature.replace_feature", "utils_conv.conv1x1x1.lin"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "replace_feature", "(", "self", ".", "lin", "(", "x", ".", "features", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv1x1x1.__repr__": [[122, 124], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "f\"MySubMConv3d({self.lin.in_features}, 1x1x1, {self.lin.out_features})\"", "", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv3x3x3": [[76, 80], ["utils_conv.MySubMConv3d"], "function", ["None"], ["", "", "def", "conv3x3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "indice_key", "=", "None", ")", ":", "\n", "    ", "return", "MySubMConv3d", "(", "\n", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ",", "indice_key", "=", "indice_key", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv1x3x3": [[82, 86], ["utils_conv.MySubMConv3d"], "function", ["None"], ["", "def", "conv1x3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "indice_key", "=", "None", ")", ":", "\n", "    ", "return", "MySubMConv3d", "(", "\n", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "0", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "indice_key", "=", "indice_key", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv3x1x3": [[88, 92], ["utils_conv.MySubMConv3d"], "function", ["None"], ["", "def", "conv3x1x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "indice_key", "=", "None", ")", ":", "\n", "    ", "return", "MySubMConv3d", "(", "\n", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "(", "3", ",", "1", ",", "3", ")", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "1", ",", "0", ",", "1", ")", ",", "bias", "=", "False", ",", "indice_key", "=", "indice_key", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv1x1x3": [[94, 98], ["utils_conv.MySubMConv3d"], "function", ["None"], ["", "def", "conv1x1x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "indice_key", "=", "None", ")", ":", "\n", "    ", "return", "MySubMConv3d", "(", "\n", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "3", ")", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "0", ",", "0", ",", "1", ")", ",", "bias", "=", "False", ",", "indice_key", "=", "indice_key", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv1x3x1": [[100, 104], ["utils_conv.MySubMConv3d"], "function", ["None"], ["", "def", "conv1x3x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "indice_key", "=", "None", ")", ":", "\n", "    ", "return", "MySubMConv3d", "(", "\n", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "(", "1", ",", "3", ",", "1", ")", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "0", ",", "1", ",", "0", ")", ",", "bias", "=", "False", ",", "indice_key", "=", "indice_key", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.conv.utils_conv.conv3x1x1": [[106, 110], ["utils_conv.MySubMConv3d"], "function", ["None"], ["", "def", "conv3x1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "indice_key", "=", "None", ")", ":", "\n", "    ", "return", "MySubMConv3d", "(", "\n", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "(", "3", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "(", "1", ",", "0", ",", "0", ")", ",", "bias", "=", "False", ",", "indice_key", "=", "indice_key", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.sparseops.layernorm.MyJitLayerNorm.__init__": [[32, 42], ["super().__init__", "torch.nn.Parameter", "torch.nn.Parameter", "layernorm.MyJitLayerNorm.reset_parameters", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.sparseops.layernorm.MyJitLayerNorm.reset_parameters"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "eps", "=", "eps", "\n", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "in_channels", "]", ")", ")", "\n", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "in_channels", "]", ")", ")", "\n", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.sparseops.layernorm.MyJitLayerNorm.reset_parameters": [[43, 46], ["torch_geometric.nn.inits.ones", "torch_geometric.nn.inits.zeros"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "ones", "(", "self", ".", "weight", ")", "\n", "zeros", "(", "self", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.sparseops.layernorm.MyJitLayerNorm.forward": [[47, 72], ["batch.size", "torch_geometric.utils.degree().clamp_", "norm.mul_().view.mul_().view.mul_().view", "torch_scatter.scatter().sum", "x.mean", "int", "torch_scatter.scatter().sum", "mean.index_select", "x.std", "batch.max", "torch_geometric.utils.degree", "norm.mul_().view.mul_().view.mul_", "torch_scatter.scatter", "x.size", "torch_scatter.scatter"], "methods", ["None"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "forward", "(", "self", ",", "x", ":", "Tensor", ",", "batch", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "        ", "if", "batch", ".", "size", "(", "0", ")", "==", "0", ":", "\n", "            ", "x", "=", "x", "-", "x", ".", "mean", "(", ")", "\n", "out", "=", "x", "/", "(", "x", ".", "std", "(", "unbiased", "=", "False", ")", "+", "self", ".", "eps", ")", "\n", "", "else", ":", "\n", "            ", "batch_size", "=", "int", "(", "batch", ".", "max", "(", ")", ")", "+", "1", "\n", "\n", "norm", "=", "degree", "(", "batch", ",", "batch_size", ",", "dtype", "=", "x", ".", "dtype", ")", ".", "clamp_", "(", "min", "=", "1", ")", "\n", "norm", "=", "norm", ".", "mul_", "(", "x", ".", "size", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "\n", "mean", "=", "scatter", "(", "x", ",", "batch", ",", "dim", "=", "0", ",", "dim_size", "=", "batch_size", ",", "\n", "reduce", "=", "'add'", ")", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "/", "norm", "\n", "\n", "x", "=", "x", "-", "mean", ".", "index_select", "(", "0", ",", "batch", ")", "\n", "\n", "var", "=", "scatter", "(", "x", "*", "x", ",", "batch", ",", "dim", "=", "0", ",", "dim_size", "=", "batch_size", ",", "\n", "reduce", "=", "'add'", ")", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "var", "=", "var", "/", "norm", "\n", "\n", "out", "=", "x", "/", "(", "var", "+", "self", ".", "eps", ")", ".", "sqrt", "(", ")", ".", "index_select", "(", "0", ",", "batch", ")", "\n", "\n", "", "out", "=", "out", "*", "self", ".", "weight", "+", "self", ".", "bias", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.sparseops.layernorm.MyJitLayerNorm.__repr__": [[73, 75], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "f'{self.__class__.__name__}({self.in_channels})'", "", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.trainers.zoo.get_trainer": [[8, 32], ["pytorch_lightning.loggers.TensorBoardLogger", "pytorch_lightning.Trainer", "hydra.utils.instantiate", "pytorch_lightning.profiler.PyTorchProfiler", "cfg.model.callbacks.values", "omegaconf.OmegaConf.to_container", "torch.profiler.schedule"], "function", ["None"], ["def", "get_trainer", "(", "cfg", ")", ":", "\n", "\n", "    ", "logger", "=", "pl", ".", "loggers", ".", "TensorBoardLogger", "(", "\".\"", ",", "\"\"", ",", "\"\"", ",", "log_graph", "=", "False", ",", "default_hp_metric", "=", "False", ")", "\n", "\n", "callbacks", "=", "[", "hydra", ".", "utils", ".", "instantiate", "(", "callback", ")", "for", "callback", "in", "cfg", ".", "model", ".", "callbacks", ".", "values", "(", ")", "]", "\n", "\n", "if", "cfg", ".", "profile", ":", "\n", "        ", "profiler", "=", "pl", ".", "profiler", ".", "PyTorchProfiler", "(", "\n", "with_stack", "=", "True", ",", "\n", "record_shapes", "=", "True", ",", "\n", "profile_memory", "=", "cfg", ".", "profile", "==", "2", ",", "\n", "activities", "=", "[", "ProfilerActivity", ".", "CPU", ",", "ProfilerActivity", ".", "CUDA", "]", ",", "\n", "schedule", "=", "torch", ".", "profiler", ".", "schedule", "(", "wait", "=", "10", ",", "warmup", "=", "1", ",", "active", "=", "3", "-", "2", "*", "(", "cfg", ".", "profile", "==", "2", ")", ")", "\n", ")", "\n", "", "else", ":", "\n", "        ", "profiler", "=", "None", "\n", "\n", "", "return", "pl", ".", "Trainer", "(", "\n", "**", "OmegaConf", ".", "to_container", "(", "cfg", ".", "trainer", ")", ",", "\n", "logger", "=", "logger", ",", "\n", "callbacks", "=", "callbacks", ",", "\n", "limit_train_batches", "=", "1.", "if", "not", "cfg", ".", "data", ".", "DEBUG", "else", "0.025", ",", "\n", "num_sanity_val_steps", "=", "0", ",", "\n", "profiler", "=", "profiler", "\n", ")", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.__init__": [[16, 23], ["pytorch_lightning.callbacks.Callback.__init__", "types.SimpleNamespace", "helix4d.utils.apply_learning_map", "int", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.semantickitti.apply_learning_map"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "hparams", "=", "SimpleNamespace", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "class_names", "=", "[", "self", ".", "hparams", ".", "labels", "[", "int", "(", "label", ")", "]", "for", "label", "in", "apply_learning_map", "(", "\n", "np", ".", "arange", "(", "self", ".", "hparams", ".", "output_dim", ")", ",", "self", ".", "hparams", ".", "learning_map_inv", ")", "]", "[", "1", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.do_greedy_step": [[24, 26], ["int"], "methods", ["None"], ["", "def", "do_greedy_step", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "return", "(", "epoch", "%", "int", "(", "self", ".", "hparams", ".", "log_every_n_epochs", ")", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.from_labels_to_color": [[27, 29], ["helix4d.utils.from_sem_to_color", "helix4d.utils.apply_learning_map"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.semantickitti.from_sem_to_color", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.utils.semantickitti.apply_learning_map"], ["", "def", "from_labels_to_color", "(", "self", ",", "labels", ")", ":", "\n", "        ", "return", "from_sem_to_color", "(", "apply_learning_map", "(", "labels", ",", "self", ".", "hparams", ".", "learning_map_inv", ")", ",", "self", ".", "hparams", ".", "color_map", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.greedy_images": [[30, 100], ["zip", "batch.backprop.detach().cpu", "prediction.detach().cpu.detach().cpu.detach().cpu", "batch.point_y.detach().cpu", "range", "torch.stack", "images.view().flatten.view().flatten.permute().flatten", "moduletensorboard.add_image", "batch.pos.detach().cpu", "batch.batch.detach().cpu", "do_projection", "images.view().flatten.view().flatten.append", "torch.stack", "torch.cat", "images.view().flatten.view().flatten.view().flatten", "images.view().flatten.view().flatten.view().flatten", "kwargs.keys", "batch.backprop.detach", "prediction.detach().cpu.detach().cpu.detach", "batch.point_y.detach", "ibatch.max", "pos[].mean", "base.BaseLogger.from_labels_to_color", "base.BaseLogger.from_labels_to_color", "base.BaseLogger.from_labels_to_color", "torch.cat", "torch.from_numpy", "torch.stack.append", "images.view().flatten.view().flatten.permute", "batch.pos.detach", "batch.batch.detach", "pred.long", "torch.from_numpy.min", "images.view().flatten.view().flatten.view", "images.view().flatten.view().flatten.view", "batch.seqid.cpu().numpy", "batch.scanid.cpu().numpy", "kwargs.keys", "torch.randperm", "matplotlib.cm.get_cmap", "torch.from_numpy.detach().cpu().numpy", "batch.seqid.cpu", "batch.scanid.cpu", "torch.from_numpy.max", "torch.from_numpy.detach().cpu", "torch.from_numpy.detach"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.from_labels_to_color", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.from_labels_to_color", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.from_labels_to_color"], ["", "def", "greedy_images", "(", "self", ",", "moduletensorboard", ",", "current_epoch", ",", "batch", ",", "tag", ",", "prediction", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "\n", "        ", "for", "do_projection", ",", "view", ",", "h", ",", "w", "in", "zip", "(", "[", "do_up_projection", "]", ",", "[", "\"top_view\"", "]", ",", "[", "PROJ_UP_H", "]", ",", "[", "PROJ_UP_H", "]", ")", ":", "\n", "            ", "images", "=", "[", "]", "\n", "\n", "do_assignments", "=", "(", "\"assignments\"", "in", "kwargs", ".", "keys", "(", ")", ")", "and", "(", "\n", "kwargs", "[", "\"assignments\"", "]", "is", "not", "None", ")", "\n", "assignments", "=", "[", "]", "\n", "\n", "backprop", "=", "batch", ".", "backprop", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "prediction", "=", "prediction", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "pos", "=", "batch", ".", "pos", ".", "detach", "(", ")", ".", "cpu", "(", ")", "[", "backprop", "]", "\n", "#pos = pos-pos.mean(0) * torch.tensor([1, 1, 0])", "\n", "#point_y = batch.point_y.detach().cpu()[backprop]", "\n", "point_y", "=", "batch", ".", "point_y", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "ibatch", "=", "batch", ".", "batch", ".", "detach", "(", ")", ".", "cpu", "(", ")", "[", "backprop", "]", "\n", "\n", "for", "i", "in", "range", "(", "ibatch", ".", "max", "(", ")", "+", "1", ")", ":", "\n", "                ", "equal", "=", "ibatch", "==", "i", "\n", "pos", "[", "equal", "]", "=", "pos", "[", "equal", "]", "-", "pos", "[", "equal", "]", ".", "mean", "(", "0", ")", "\n", "projection", "=", "do_projection", "(", "pos", "[", "equal", "]", ")", "\n", "\n", "not_projected", "=", "projection", "<", "0", "\n", "\n", "true", "=", "point_y", "[", "equal", "]", "[", "projection", "]", "\n", "pred", "=", "prediction", "[", "equal", "]", "[", "projection", "]", "\n", "c", "=", "300", "+", "(", "70", "-", "300", ")", "*", "(", "true", "==", "pred", ")", "\n", "c", "[", "true", "==", "0", "]", "=", "0", "\n", "\n", "true", "=", "self", ".", "from_labels_to_color", "(", "true", ")", "/", "255.", "\n", "pred", "=", "self", ".", "from_labels_to_color", "(", "pred", ".", "long", "(", ")", ")", "/", "255.", "\n", "c", "=", "self", ".", "from_labels_to_color", "(", "c", ")", "/", "255.", "\n", "true", "[", "not_projected", "]", "=", "1", "\n", "pred", "[", "not_projected", "]", "=", "1", "\n", "c", "[", "not_projected", "]", "=", "1", "\n", "images", ".", "append", "(", "torch", ".", "cat", "(", "[", "true", ",", "pred", ",", "c", "]", ",", "0", ")", ")", "\n", "\n", "if", "do_assignments", ":", "\n", "                    ", "point2voxel", "=", "kwargs", "[", "\"assignments\"", "]", "\n", "if", "(", "\"assignments_maps\"", "in", "kwargs", ".", "keys", "(", ")", ")", "and", "(", "kwargs", "[", "\"assignments_maps\"", "]", "is", "not", "None", ")", ":", "\n", "                        ", "for", "map", "in", "kwargs", "[", "\"assignments_maps\"", "]", ":", "\n", "                            ", "point2voxel", "=", "map", "[", "point2voxel", "]", "\n", "", "", "superpoints", "=", "point2voxel", "[", "backprop", "]", "[", "equal", "]", "[", "projection", "]", "\n", "#superpoints = superpoints - i*np.prod(self.hparams.voxel_shape)", "\n", "superpoints", "=", "superpoints", "-", "superpoints", ".", "min", "(", ")", "\n", "superpoints", "=", "torch", ".", "randperm", "(", "superpoints", ".", "max", "(", ")", "+", "1", ")", "[", "\n", "superpoints", "]", "%", "20", "\n", "superpoints", "=", "torch", ".", "from_numpy", "(", "cm", ".", "get_cmap", "(", "\"tab20\"", ")", "(", "\n", "superpoints", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "[", "...", ",", ":", "-", "1", "]", ")", "\n", "superpoints", "[", "not_projected", "]", "=", "1", "\n", "assignments", ".", "append", "(", "superpoints", ")", "\n", "\n", "", "", "images", "=", "torch", ".", "stack", "(", "images", ")", "\n", "\n", "if", "do_assignments", ":", "\n", "                ", "assignments", "=", "torch", ".", "stack", "(", "assignments", ")", "\n", "images", "=", "torch", ".", "cat", "(", "[", "images", ",", "assignments", "]", ",", "1", ")", "\n", "\n", "", "if", "view", "==", "\"sphere\"", ":", "\n", "                ", "images", "=", "images", ".", "view", "(", "\n", "1", ",", "-", "1", ",", "(", "3", "+", "do_assignments", ")", "*", "h", ",", "w", ",", "3", ")", ".", "flatten", "(", "1", ",", "2", ")", "\n", "", "else", ":", "\n", "                ", "images", "=", "images", ".", "view", "(", "-", "1", ",", "1", ",", "(", "3", "+", "do_assignments", ")", "\n", "*", "h", ",", "w", ",", "3", ")", ".", "flatten", "(", "1", ",", "2", ")", "\n", "", "images", "=", "images", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", ".", "flatten", "(", "1", ",", "2", ")", "\n", "\n", "moduletensorboard", ".", "add_image", "(", "\n", "f\"{tag}/{view}_{batch.seqid.cpu().numpy()}_{batch.scanid.cpu().numpy()}\"", ",", "images", ",", "\n", "global_step", "=", "current_epoch", ",", "dataformats", "=", "'HWC'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.image_confusion_matrix": [[102, 153], ["numpy.nan_to_num", "numpy.hstack", "matplotlib.figure", "matplotlib.imshow", "matplotlib.title", "numpy.arange", "numpy.hstack", "matplotlib.tick_params", "matplotlib.xticks", "matplotlib.yticks", "itertools.product", "matplotlib.tight_layout", "matplotlib.ylabel", "matplotlib.xlabel", "matplotlib.figure.canvas.print_to_buffer", "matplotlib.clf", "matplotlib.close", "numpy.fromstring().reshape", "numpy.hstack.sum", "n_samples.sum", "len", "numpy.hstack.max", "range", "range", "numpy.hstack.astype", "matplotlib.text", "numpy.fromstring", "len", "len", "numpy.around"], "methods", ["None"], ["", "", "def", "image_confusion_matrix", "(", "self", ",", "cm", ",", "curr_iou", ")", ":", "\n", "        ", "\"\"\"\n        Returns a matplotlib figure containing the plotted confusion matrix.\n\n        Args:\n        cm (array, shape = [n, n]): a confusion matrix of integer classes\n        class_names (array, shape = [n]): String names of the integer classes\n        \"\"\"", "\n", "\n", "cm", "=", "cm", "[", "1", ":", ",", "1", ":", "]", "\n", "\n", "curr_iou", "=", "curr_iou", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "n_samples", "=", "cm", ".", "sum", "(", "axis", "=", "1", ")", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "cm", "=", "np", ".", "nan_to_num", "(", "cm", ".", "astype", "(", "'float'", ")", "/", "n_samples", ")", "\n", "\n", "n_samples", "=", "n_samples", "/", "n_samples", ".", "sum", "(", ")", "\n", "\n", "cm", "=", "np", ".", "hstack", "(", "(", "cm", ",", "0", "*", "curr_iou", ",", "curr_iou", ",", "n_samples", ")", ")", "\n", "\n", "figure", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "\n", "2", "+", "(", "self", ".", "hparams", ".", "output_dim", "+", "3", ")", "*", "7", "/", "20.", ",", "\n", "1", "+", "self", ".", "hparams", ".", "output_dim", "*", "7", "/", "20.", "\n", ")", ")", "\n", "plt", ".", "imshow", "(", "cm", ",", "interpolation", "=", "'nearest'", ",", "cmap", "=", "plt", ".", "cm", ".", "Blues", ")", "\n", "plt", ".", "title", "(", "\"Confusion matrix\"", ")", "\n", "yticks_marks", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "class_names", ")", ")", "\n", "xticks_marks", "=", "np", ".", "hstack", "(", "\n", "(", "yticks_marks", ",", "len", "(", "self", ".", "class_names", ")", "+", "1", ",", "len", "(", "self", ".", "class_names", ")", "+", "2", ")", ")", "\n", "plt", ".", "tick_params", "(", "labelright", "=", "True", ",", "right", "=", "True", ")", "\n", "plt", ".", "xticks", "(", "xticks_marks", ",", "self", ".", "class_names", "+", "[", "\"IoU\"", ",", "\"N%\"", "]", ",", "rotation", "=", "60", ")", "\n", "plt", ".", "yticks", "(", "yticks_marks", ",", "self", ".", "class_names", ")", "\n", "\n", "threshold", "=", "cm", ".", "max", "(", ")", "/", "2.", "\n", "\n", "for", "i", ",", "j", "in", "itertools", ".", "product", "(", "range", "(", "cm", ".", "shape", "[", "0", "]", ")", ",", "range", "(", "cm", ".", "shape", "[", "1", "]", ")", ")", ":", "\n", "            ", "if", "j", "!=", "cm", ".", "shape", "[", "0", "]", ":", "\n", "                ", "color", "=", "\"white\"", "if", "cm", "[", "i", ",", "j", "]", ">", "threshold", "else", "\"black\"", "\n", "cmfloat", "=", "np", ".", "around", "(", "\n", "100", "*", "cm", "[", "i", ",", "j", "]", ",", "decimals", "=", "1", "if", "100", "*", "cm", "[", "i", ",", "j", "]", ">=", "10", "else", "2", ")", "if", "cm", "[", "i", ",", "j", "]", "!=", "0", "else", "\"\"", "\n", "plt", ".", "text", "(", "j", ",", "i", ",", "cmfloat", ",", "horizontalalignment", "=", "\"center\"", ",", "color", "=", "color", ")", "\n", "\n", "", "", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "ylabel", "(", "'True label'", ")", "\n", "plt", ".", "xlabel", "(", "'Predicted label'", ")", "\n", "\n", "s", ",", "(", "width", ",", "height", ")", "=", "figure", ".", "canvas", ".", "print_to_buffer", "(", ")", "\n", "plt", ".", "clf", "(", ")", "\n", "plt", ".", "close", "(", "figure", ")", "\n", "del", "figure", "\n", "return", "np", ".", "fromstring", "(", "s", ",", "np", ".", "uint8", ")", ".", "reshape", "(", "(", "height", ",", "width", ",", "4", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.failurecases.FailureCasesLogger.on_validation_epoch_start": [[11, 17], ["torch.tensor().float", "torch.tensor().float", "torch.tensor", "torch.tensor"], "methods", ["None"], ["    ", "def", "on_validation_epoch_start", "(", "self", ",", "trainer", ":", "\"pl.Trainer\"", ",", "pl_module", ":", "\"pl.LightningModule\"", ")", "->", "None", ":", "\n", "        ", "self", ".", "failure_cases", "=", "{", "\n", "\"loss\"", ":", "torch", ".", "tensor", "(", "self", ".", "hparams", ".", "N", "*", "[", "0", "]", ")", ".", "float", "(", ")", ",", "\n", "\"batch\"", ":", "self", ".", "hparams", ".", "N", "*", "[", "[", "]", "]", ",", "\n", "\"pred\"", ":", "self", ".", "hparams", ".", "N", "*", "[", "[", "]", "]", ",", "\n", "\"scanid\"", ":", "torch", ".", "tensor", "(", "self", ".", "hparams", ".", "N", "*", "[", "-", "10", "]", ")", ".", "float", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.failurecases.FailureCasesLogger.on_validation_batch_end": [[19, 28], ["torch.no_grad", "failurecases.FailureCasesLogger.do_greedy_step", "failurecases.FailureCasesLogger.failure_cases[].argmin", "outputs[].detach().cpu", "batch.cpu", "outputs[].detach().cpu", "batch.scanid[].detach().cpu", "torch.abs().min", "failurecases.FailureCasesLogger.failure_cases[].min", "outputs[].detach", "outputs[].detach", "batch.scanid[].detach", "torch.abs", "batch.scanid[].detach().cpu", "batch.scanid[].detach"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.do_greedy_step"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "on_validation_batch_end", "(", "self", ",", "trainer", ":", "\"pl.Trainer\"", ",", "pl_module", ":", "\"pl.LightningModule\"", ",", "outputs", ":", "Optional", "[", "STEP_OUTPUT", "]", ",", "batch", ":", "Any", ",", "batch_idx", ":", "int", ",", "dataloader_idx", ":", "int", ")", "->", "None", ":", "\n", "        ", "if", "self", ".", "do_greedy_step", "(", "pl_module", ".", "current_epoch", ")", ":", "\n", "            ", "if", "(", "torch", ".", "abs", "(", "self", ".", "failure_cases", "[", "\"scanid\"", "]", "-", "batch", ".", "scanid", "[", "0", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ")", ".", "min", "(", ")", ">", "100", ")", "and", "outputs", "[", "\"loss\"", "]", ">", "self", ".", "failure_cases", "[", "\"loss\"", "]", ".", "min", "(", ")", ":", "\n", "                ", "idx", "=", "self", ".", "failure_cases", "[", "\"loss\"", "]", ".", "argmin", "(", ")", "\n", "self", ".", "failure_cases", "[", "\"loss\"", "]", "[", "idx", "]", "=", "outputs", "[", "\"loss\"", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "self", ".", "failure_cases", "[", "\"batch\"", "]", "[", "idx", "]", "=", "batch", ".", "cpu", "(", ")", "\n", "self", ".", "failure_cases", "[", "\"pred\"", "]", "[", "idx", "]", "=", "outputs", "[", "\"point_pred\"", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "self", ".", "failure_cases", "[", "\"scanid\"", "]", "[", "idx", "]", "=", "batch", ".", "scanid", "[", "0", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.failurecases.FailureCasesLogger.on_validation_epoch_end": [[29, 36], ["failurecases.FailureCasesLogger.do_greedy_step", "enumerate", "failurecases.FailureCasesLogger.failure_cases[].argsort", "failurecases.FailureCasesLogger.greedy_images"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.do_greedy_step", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.greedy_images"], ["", "", "", "def", "on_validation_epoch_end", "(", "self", ",", "trainer", ":", "\"pl.Trainer\"", ",", "pl_module", ":", "\"pl.LightningModule\"", ")", "->", "None", ":", "\n", "        ", "if", "self", ".", "do_greedy_step", "(", "pl_module", ".", "current_epoch", ")", ":", "\n", "            ", "for", "i", ",", "idx", "in", "enumerate", "(", "self", ".", "failure_cases", "[", "\"loss\"", "]", ".", "argsort", "(", ")", ")", ":", "\n", "                ", "if", "self", ".", "failure_cases", "[", "\"batch\"", "]", "[", "idx", "]", "!=", "[", "]", ":", "\n", "                    ", "self", ".", "greedy_images", "(", "\n", "pl_module", ".", "logger", ".", "experiment", ",", "pl_module", ".", "current_epoch", ",", "\n", "self", ".", "failure_cases", "[", "\"batch\"", "]", "[", "idx", "]", ",", "f\"val_failurecases/{i}\"", ",", "self", ".", "failure_cases", "[", "\"pred\"", "]", "[", "idx", "]", "\n", ")", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_step": [[11, 13], ["pl_module.log"], "methods", ["None"], ["    ", "def", "log_step", "(", "self", ",", "pl_module", ")", ":", "\n", "        ", "pl_module", ".", "log", "(", "f'step'", ",", "1", "+", "pl_module", ".", "current_epoch", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.greedy_step": [[14, 23], ["monitoring.MonitoringLogger.do_greedy_step", "monitoring.MonitoringLogger.greedy_images", "monitoring.MonitoringLogger.greedy_histograms", "outputs.keys", "outputs.keys"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.do_greedy_step", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.greedy_images", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.greedy_histograms"], ["", "def", "greedy_step", "(", "self", ",", "trainer", ",", "pl_module", ",", "batch", ",", "batch_idx", ",", "tag", ",", "outputs", ")", ":", "\n", "        ", "if", "batch_idx", "==", "0", "and", "self", ".", "do_greedy_step", "(", "pl_module", ".", "current_epoch", ")", ":", "\n", "            ", "if", "tag", "==", "\"train\"", ":", "\n", "                ", "self", ".", "greedy_histograms", "(", "trainer", ",", "pl_module", ",", "pl_module", ".", "current_epoch", ",", "batch", ")", "\n", "", "self", ".", "greedy_images", "(", "\n", "pl_module", ".", "logger", ".", "experiment", ",", "pl_module", ".", "current_epoch", ",", "batch", ",", "tag", ",", "\n", "outputs", "[", "\"point_pred\"", "]", ",", "\n", "assignments", "=", "outputs", "[", "\"point2voxel\"", "]", "if", "\"point2voxel\"", "in", "outputs", ".", "keys", "(", ")", "else", "None", ",", "\n", "assignments_maps", "=", "outputs", "[", "\"assignments_maps\"", "]", "if", "\"assignments_maps\"", "in", "outputs", ".", "keys", "(", ")", "else", "None", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.greedy_histograms": [[25, 50], ["batch.features.detach().cpu", "batch.pos.detach().cpu", "trainer.datamodule.get_features_names", "enumerate", "enumerate", "pl_module.point_encoder[].weight.data.detach().cpu", "range", "pl_module.logger.experiment.add_histogram", "pl_module.point_encoder[].weight.data.detach().cpu.size", "pl_module.logger.experiment.add_histogram", "batch.features.detach", "batch.pos.detach", "batch.features.size", "pl_module.logger.experiment.add_histogram", "pos[].flatten", "pl_module.point_encoder[].weight.data.detach", "weights_first[].flatten", "features[].flatten", "len", "len"], "methods", ["None"], ["", "", "def", "greedy_histograms", "(", "self", ",", "trainer", ",", "pl_module", ",", "current_epoch", ",", "batch", ")", ":", "\n", "        ", "features", "=", "batch", ".", "features", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "pos", "=", "batch", ".", "pos", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "features_names", "=", "trainer", ".", "datamodule", ".", "get_features_names", "(", ")", "\n", "for", "i", ",", "kk", "in", "enumerate", "(", "features_names", ")", ":", "\n", "            ", "if", "i", "<", "batch", ".", "features", ".", "size", "(", "-", "1", ")", ":", "\n", "                ", "pl_module", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "\n", "f\"features/{kk}\"", ",", "\n", "features", "[", ":", ",", "i", "]", ".", "flatten", "(", ")", ",", "\n", "global_step", "=", "current_epoch", "\n", ")", "\n", "", "", "for", "i", ",", "kk", "in", "enumerate", "(", "[", "\"x\"", ",", "\"y\"", ",", "\"z\"", "]", ")", ":", "\n", "            ", "pl_module", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "\n", "f\"positions/{kk}\"", ",", "\n", "pos", "[", ":", ",", "i", "]", ".", "flatten", "(", ")", ",", "\n", "global_step", "=", "current_epoch", "\n", ")", "\n", "\n", "", "weights_first", "=", "pl_module", ".", "point_encoder", "[", "0", "]", ".", "weight", ".", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "for", "i", "in", "range", "(", "weights_first", ".", "size", "(", "-", "1", ")", ")", ":", "\n", "            ", "pl_module", ".", "logger", ".", "experiment", ".", "add_histogram", "(", "\n", "f\"first_layer_weights/{features_names[i] if i < len(features_names) else f'label_{i - len(features_names) + 1}'}\"", ",", "\n", "weights_first", "[", ":", ",", "i", "]", ".", "flatten", "(", ")", ",", "\n", "global_step", "=", "current_epoch", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_metrics": [[52, 69], ["torch.no_grad", "torch.profiler.record_function", "getattr().update", "pl_module.log", "pl_module.log", "pl_module.log", "monitoring.MonitoringLogger.greedy_step", "getattr"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.greedy_step"], ["", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "log_metrics", "(", "self", ",", "trainer", ",", "pl_module", ":", "\"pl.LightningModule\"", ",", "tag", ",", "batch", ",", "batch_idx", ",", "outputs", ")", ":", "\n", "        ", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"LOGGERS\"", ")", ":", "\n", "\n", "            ", "getattr", "(", "pl_module", ",", "f'IoU_{tag}'", ")", ".", "update", "(", "outputs", "[", "\"point_pred\"", "]", ",", "batch", ".", "point_y", ")", "\n", "\n", "pl_module", ".", "log", "(", "f'Loss_total/{tag}'", ",", "\n", "outputs", "[", "\"loss\"", "]", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ",", "batch_size", "=", "outputs", "[", "\"batch_size\"", "]", ")", "\n", "pl_module", ".", "log", "(", "f'Loss/point_crossentropy/{tag}'", ",", "\n", "outputs", "[", "\"point_crossentropy\"", "]", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ",", "batch_size", "=", "outputs", "[", "\"batch_size\"", "]", ")", "\n", "pl_module", ".", "log", "(", "f'Loss/point_lovasz/{tag}'", ",", "\n", "outputs", "[", "\"point_lovasz\"", "]", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ",", "batch_size", "=", "outputs", "[", "\"batch_size\"", "]", ")", "\n", "\n", "self", ".", "greedy_step", "(", "\n", "trainer", ",", "pl_module", ",", "\n", "batch", ",", "batch_idx", ",", "tag", ",", "\n", "outputs", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_ious": [[71, 84], ["getattr().compute().detach().cpu().numpy", "getattr().compute().detach().cpu().numpy.sum", "pl_module.log", "monitoring.MonitoringLogger.do_greedy_step", "getattr().reset", "getattr().compute().detach().cpu", "getattr().compute().detach().cpu().numpy.mean", "torch.profiler.record_function", "pl_module.logger.experiment.add_image", "getattr", "getattr().compute().detach", "monitoring.MonitoringLogger.image_confusion_matrix", "getattr().confmat.detach().cpu().numpy", "getattr().compute", "getattr().confmat.detach().cpu", "getattr", "getattr().confmat.detach", "getattr"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.do_greedy_step", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.base.BaseLogger.image_confusion_matrix"], ["", "", "def", "log_ious", "(", "self", ",", "pl_module", ",", "tag", ")", ":", "\n", "        ", "curr_iou", "=", "getattr", "(", "pl_module", ",", "f\"IoU_{tag}\"", ")", ".", "compute", "(", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "curr_iou", ".", "sum", "(", ")", "!=", "0", ":", "\n", "            ", "pl_module", ".", "log", "(", "f'IoU/{tag}'", ",", "curr_iou", ".", "mean", "(", ")", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ")", "\n", "\n", "if", "self", ".", "do_greedy_step", "(", "pl_module", ".", "current_epoch", ")", ":", "\n", "                ", "with", "torch", ".", "profiler", ".", "record_function", "(", "f\"CONFMAT\"", ")", ":", "\n", "                    ", "pl_module", ".", "logger", ".", "experiment", ".", "add_image", "(", "\n", "f\"confmat/{tag}\"", ",", "self", ".", "image_confusion_matrix", "(", "\n", "getattr", "(", "pl_module", ",", "f\"IoU_{tag}\"", ")", ".", "confmat", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "curr_iou", ")", ",", "\n", "global_step", "=", "pl_module", ".", "current_epoch", ",", "dataformats", "=", "'HWC'", "\n", ")", "\n", "", "", "getattr", "(", "pl_module", ",", "f\"IoU_{tag}\"", ")", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.on_train_batch_end": [[85, 87], ["monitoring.MonitoringLogger.log_metrics"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_metrics"], ["", "", "def", "on_train_batch_end", "(", "self", ",", "trainer", ":", "\"pl.Trainer\"", ",", "pl_module", ":", "\"pl.LightningModule\"", ",", "outputs", ":", "STEP_OUTPUT", ",", "batch", ":", "Any", ",", "batch_idx", ":", "int", ",", "unused", ":", "Optional", "[", "int", "]", "=", "0", ")", "->", "None", ":", "\n", "        ", "self", ".", "log_metrics", "(", "trainer", ",", "pl_module", ",", "\"train\"", ",", "batch", ",", "batch_idx", ",", "outputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.on_validation_batch_end": [[88, 90], ["monitoring.MonitoringLogger.log_metrics"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_metrics"], ["", "def", "on_validation_batch_end", "(", "self", ",", "trainer", ":", "\"pl.Trainer\"", ",", "pl_module", ":", "\"pl.LightningModule\"", ",", "outputs", ":", "Optional", "[", "STEP_OUTPUT", "]", ",", "batch", ":", "Any", ",", "batch_idx", ":", "int", ",", "dataloader_idx", ":", "int", ")", "->", "None", ":", "\n", "        ", "self", ".", "log_metrics", "(", "trainer", ",", "pl_module", ",", "\"val\"", ",", "batch", ",", "batch_idx", ",", "outputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.on_test_batch_end": [[91, 93], ["monitoring.MonitoringLogger.log_metrics"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_metrics"], ["", "def", "on_test_batch_end", "(", "self", ",", "trainer", ":", "\"pl.Trainer\"", ",", "pl_module", ":", "\"pl.LightningModule\"", ",", "outputs", ":", "Optional", "[", "STEP_OUTPUT", "]", ",", "batch", ":", "Any", ",", "batch_idx", ":", "int", ",", "dataloader_idx", ":", "int", ")", "->", "None", ":", "\n", "        ", "self", ".", "log_metrics", "(", "trainer", ",", "pl_module", ",", "\"test\"", ",", "batch", ",", "batch_idx", ",", "outputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.on_train_epoch_end": [[94, 103], ["monitoring.MonitoringLogger.log_ious", "monitoring.MonitoringLogger.log_step", "pl_module.optimizers", "pl_module.log", "pl_module.log", "float", "float"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_ious", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_step"], ["", "def", "on_train_epoch_end", "(", "self", ",", "trainer", ":", "\"pl.Trainer\"", ",", "pl_module", ":", "\"pl.LightningModule\"", ")", "->", "None", ":", "\n", "        ", "self", ".", "log_ious", "(", "pl_module", ",", "\"train\"", ")", "\n", "self", ".", "log_step", "(", "pl_module", ")", "\n", "\n", "for", "param_group", "in", "pl_module", ".", "optimizers", "(", ")", ".", "param_groups", ":", "\n", "            ", "pl_module", ".", "log", "(", "f'epoch/lr/{param_group[\"name\"]}'", ",", "\n", "float", "(", "param_group", "[", "\"lr\"", "]", ")", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ")", "\n", "pl_module", ".", "log", "(", "f'epoch/wd/{param_group[\"name\"]}'", ",", "\n", "float", "(", "param_group", "[", "\"weight_decay\"", "]", ")", ",", "on_step", "=", "False", ",", "on_epoch", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.on_validation_epoch_end": [[104, 107], ["monitoring.MonitoringLogger.log_ious", "monitoring.MonitoringLogger.log_step"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_ious", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_step"], ["", "", "def", "on_validation_epoch_end", "(", "self", ",", "trainer", ":", "\"pl.Trainer\"", ",", "pl_module", ":", "\"pl.LightningModule\"", ")", "->", "None", ":", "\n", "        ", "self", ".", "log_ious", "(", "pl_module", ",", "\"val\"", ")", "\n", "self", ".", "log_step", "(", "pl_module", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.on_test_epoch_end": [[108, 111], ["monitoring.MonitoringLogger.log_ious", "monitoring.MonitoringLogger.log_step"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_ious", "home.repos.pwc.inspect_result.romainloiseau_Helix4D.loggers.monitoring.MonitoringLogger.log_step"], ["", "def", "on_test_epoch_end", "(", "self", ",", "trainer", ":", "\"pl.Trainer\"", ",", "pl_module", ":", "\"pl.LightningModule\"", ")", "->", "None", ":", "\n", "        ", "self", ".", "log_ious", "(", "pl_module", ",", "\"test\"", ")", "\n", "self", ".", "log_step", "(", "pl_module", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__": [[6, 11], ["super().__init__", "lovasz_losses.LovaszLoss.register_buffer", "lovasz_losses.LovaszLoss.register_buffer", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", "=", "20", ",", "ignore_index", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "register_buffer", "(", "\"ignore_index\"", ",", "torch", ".", "tensor", "(", "ignore_index", ")", ")", "\n", "self", ".", "register_buffer", "(", "\"class_to_sum\"", ",", "torch", ".", "arange", "(", "n_classes", ",", "dtype", "=", "torch", ".", "int64", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.romainloiseau_Helix4D.metrics.lovasz_losses.LovaszLoss.forward": [[12, 48], ["torch.softmax", "torch.softmax", "all_fg.sum", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "losses.mean", "vprobas.numel", "torch.gather.cumsum", "torch.gather.cumsum", "vlabels.unsqueeze"], "methods", ["None"], ["", "@", "torch", ".", "jit", ".", "script_method", "\n", "def", "forward", "(", "self", ",", "logits", ":", "torch", ".", "Tensor", ",", "labels", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "probas", "=", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "-", "1", ")", "\n", "\n", "valid", "=", "labels", "!=", "self", ".", "ignore_index", "\n", "\n", "vprobas", "=", "probas", "[", "valid", "]", "\n", "vlabels", "=", "labels", "[", "valid", "]", "\n", "\n", "if", "vprobas", ".", "numel", "(", ")", "==", "0", ":", "\n", "            ", "return", "probas", "*", "0.", "\n", "\n", "", "all_fg", "=", "(", "vlabels", ".", "unsqueeze", "(", "-", "1", ")", "==", "self", ".", "class_to_sum", ")", ".", "float", "(", ")", "\n", "all_gts", "=", "all_fg", ".", "sum", "(", "0", ")", "\n", "has_label", "=", "all_gts", "!=", "0", "\n", "\n", "all_fg", "=", "all_fg", "[", ":", ",", "has_label", "]", "\n", "vprobas", "=", "vprobas", "[", ":", ",", "has_label", "]", "\n", "all_gts", "=", "all_gts", "[", "has_label", "]", "\n", "\n", "all_errors", "=", "(", "all_fg", "-", "vprobas", ")", ".", "abs", "(", ")", "\n", "\n", "all_errors_sorted", ",", "all_perm", "=", "torch", ".", "sort", "(", "all_errors", ",", "0", ",", "descending", "=", "True", ")", "\n", "all_perm", "=", "all_perm", ".", "data", "\n", "\n", "all_fg_sorted", "=", "torch", ".", "gather", "(", "all_fg", ",", "0", ",", "all_perm", ")", "\n", "\n", "all_intersection", "=", "all_gts", "-", "all_fg_sorted", ".", "cumsum", "(", "0", ")", "\n", "all_union", "=", "all_gts", "+", "(", "1.", "-", "all_fg_sorted", ")", ".", "cumsum", "(", "0", ")", "\n", "\n", "all_jaccard", "=", "1.", "-", "all_intersection", "/", "all_union", "\n", "all_jaccard", "[", "1", ":", "]", "=", "all_jaccard", "[", "1", ":", "]", "-", "all_jaccard", "[", ":", "-", "1", "]", "\n", "\n", "losses", "=", "(", "all_errors_sorted", "*", "all_jaccard", ")", ".", "sum", "(", "0", ")", "\n", "\n", "return", "losses", ".", "mean", "(", ")", "", "", "", ""]]}