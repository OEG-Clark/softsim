{"home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.None.train.train": [[22, 53], ["model.train", "optimizer.zero_grad", "train.train.drop_edge"], "function", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.None.train.train"], ["def", "train", "(", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "def", "drop_edge", "(", "idx", ":", "int", ")", ":", "\n", "        ", "global", "drop_weights", "\n", "\n", "if", "param", "[", "'drop_scheme'", "]", "==", "'uniform'", ":", "\n", "            ", "return", "dropout_adj", "(", "data", ".", "edge_index", ",", "p", "=", "param", "[", "f'drop_edge_rate_{idx}'", "]", ")", "[", "0", "]", "\n", "", "elif", "param", "[", "'drop_scheme'", "]", "in", "[", "'degree'", ",", "'evc'", ",", "'pr'", "]", ":", "\n", "            ", "return", "drop_edge_weighted", "(", "data", ".", "edge_index", ",", "drop_weights", ",", "p", "=", "param", "[", "f'drop_edge_rate_{idx}'", "]", ",", "threshold", "=", "0.7", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "f'undefined drop scheme: {param[\"drop_scheme\"]}'", ")", "\n", "\n", "", "", "edge_index_1", "=", "drop_edge", "(", "1", ")", "\n", "edge_index_2", "=", "drop_edge", "(", "2", ")", "\n", "x_1", "=", "drop_feature", "(", "data", ".", "x", ",", "param", "[", "'drop_feature_rate_1'", "]", ")", "\n", "x_2", "=", "drop_feature", "(", "data", ".", "x", ",", "param", "[", "'drop_feature_rate_2'", "]", ")", "\n", "\n", "if", "param", "[", "'drop_scheme'", "]", "in", "[", "'pr'", ",", "'degree'", ",", "'evc'", "]", ":", "\n", "        ", "x_1", "=", "drop_feature_weighted_2", "(", "data", ".", "x", ",", "feature_weights", ",", "param", "[", "'drop_feature_rate_1'", "]", ")", "\n", "x_2", "=", "drop_feature_weighted_2", "(", "data", ".", "x", ",", "feature_weights", ",", "param", "[", "'drop_feature_rate_2'", "]", ")", "\n", "\n", "", "z1", "=", "model", "(", "x_1", ",", "edge_index_1", ")", "\n", "z2", "=", "model", "(", "x_2", ",", "edge_index_2", ")", "\n", "\n", "loss", "=", "model", ".", "loss", "(", "z1", ",", "z2", ",", "batch_size", "=", "1024", "if", "args", ".", "dataset", "==", "'Coauthor-Phy'", "else", "None", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "return", "loss", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.None.train.test": [[55, 75], ["model.eval", "model", "pGRACE.eval.MulticlassEvaluator", "range", "nni.report_final_result", "accs.append", "sum", "len", "pGRACE.eval.log_regression", "nni.report_intermediate_result", "pGRACE.eval.log_regression"], "function", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.MulticlassEvaluator.eval", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.log_regression", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.log_regression"], ["", "def", "test", "(", "final", "=", "False", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "z", "=", "model", "(", "data", ".", "x", ",", "data", ".", "edge_index", ")", "\n", "\n", "evaluator", "=", "MulticlassEvaluator", "(", ")", "\n", "if", "args", ".", "dataset", "==", "'WikiCS'", ":", "\n", "        ", "accs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "20", ")", ":", "\n", "            ", "acc", "=", "log_regression", "(", "z", ",", "dataset", ",", "evaluator", ",", "split", "=", "f'wikics:{i}'", ",", "num_epochs", "=", "800", ")", "[", "'acc'", "]", "\n", "accs", ".", "append", "(", "acc", ")", "\n", "", "acc", "=", "sum", "(", "accs", ")", "/", "len", "(", "accs", ")", "\n", "", "else", ":", "\n", "        ", "acc", "=", "log_regression", "(", "z", ",", "dataset", ",", "evaluator", ",", "split", "=", "'rand:0.1'", ",", "num_epochs", "=", "3000", ",", "preload_split", "=", "split", ")", "[", "'acc'", "]", "\n", "\n", "", "if", "final", "and", "use_nni", ":", "\n", "        ", "nni", ".", "report_final_result", "(", "acc", ")", "\n", "", "elif", "use_nni", ":", "\n", "        ", "nni", ".", "report_intermediate_result", "(", "acc", ")", "\n", "\n", "", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.simple_param.sp.SimpleParam.__init__": [[11, 17], ["dict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "local_dir", ":", "str", "=", "'param'", ",", "default", ":", "Optional", "[", "dict", "]", "=", "None", ")", ":", "\n", "        ", "if", "default", "is", "None", ":", "\n", "            ", "default", "=", "dict", "(", ")", "\n", "\n", "", "self", ".", "local_dir", "=", "local_dir", "\n", "self", ".", "default", "=", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.simple_param.sp.SimpleParam.__call__": [[18, 41], ["source.startswith", "Exception", "source.split", "os.join", "os.join.endswith", "nni.get_next_parameter", "len", "sp.parse_json", "sp.preprocess_nni", "os.join.endswith", "os.join.endswith", "sp.parse_yaml", "Exception"], "methods", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.simple_param.sp.parse_json", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.simple_param.sp.preprocess_nni", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.simple_param.sp.parse_yaml"], ["", "def", "__call__", "(", "self", ",", "source", ":", "str", ",", "preprocess", ":", "str", "=", "'none'", ")", ":", "\n", "        ", "if", "source", "==", "'nni'", ":", "\n", "            ", "return", "{", "**", "self", ".", "default", ",", "**", "nni", ".", "get_next_parameter", "(", ")", "}", "\n", "", "if", "source", ".", "startswith", "(", "'local'", ")", ":", "\n", "            ", "ts", "=", "source", ".", "split", "(", "':'", ")", "\n", "assert", "len", "(", "ts", ")", "==", "2", ",", "'local parameter file should be specified in a form of `local:FILE_NAME`'", "\n", "path", "=", "ts", "[", "-", "1", "]", "\n", "path", "=", "osp", ".", "join", "(", "self", ".", "local_dir", ",", "path", ")", "\n", "if", "path", ".", "endswith", "(", "'.json'", ")", ":", "\n", "                ", "loaded", "=", "parse_json", "(", "path", ")", "\n", "", "elif", "path", ".", "endswith", "(", "'.yaml'", ")", "or", "path", ".", "endswith", "(", "'.yml'", ")", ":", "\n", "                ", "loaded", "=", "parse_yaml", "(", "path", ")", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "'Invalid file name. Should end with .yaml or .json.'", ")", "\n", "\n", "", "if", "preprocess", "==", "'nni'", ":", "\n", "                ", "loaded", "=", "preprocess_nni", "(", "loaded", ")", "\n", "\n", "", "return", "{", "**", "self", ".", "default", ",", "**", "loaded", "}", "\n", "", "if", "source", "==", "'default'", ":", "\n", "            ", "return", "self", ".", "default", "\n", "\n", "", "raise", "Exception", "(", "'invalid source'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.simple_param.sp.preprocess_nni": [[43, 55], ["key.split", "sp.preprocess_nni.process_key"], "function", ["None"], ["", "", "def", "preprocess_nni", "(", "params", ":", "dict", ")", ":", "\n", "    ", "def", "process_key", "(", "key", ":", "str", ")", ":", "\n", "        ", "xs", "=", "key", ".", "split", "(", "'/'", ")", "\n", "if", "len", "(", "xs", ")", "==", "3", ":", "\n", "            ", "return", "xs", "[", "1", "]", "\n", "", "elif", "len", "(", "xs", ")", "==", "1", ":", "\n", "            ", "return", "key", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Unexpected param name '", "+", "key", ")", "\n", "\n", "", "", "return", "{", "\n", "process_key", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.simple_param.sp.parse_yaml": [[58, 61], ["open().read", "yaml.load", "open"], "function", ["None"], ["", "def", "parse_yaml", "(", "path", ":", "str", ")", ":", "\n", "    ", "content", "=", "open", "(", "path", ")", ".", "read", "(", ")", "\n", "return", "yaml", ".", "load", "(", "content", ",", "Loader", "=", "yaml", ".", "Loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.simple_param.sp.parse_json": [[63, 66], ["open().read", "json.loads", "open"], "function", ["None"], ["", "def", "parse_json", "(", "path", ":", "str", ")", ":", "\n", "    ", "content", "=", "open", "(", "path", ")", ".", "read", "(", ")", "\n", "return", "json", ".", "loads", "(", "content", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.MulticlassEvaluator.__init__": [[107, 109], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.MulticlassEvaluator._eval": [[110, 117], ["y_true.view.view.view", "y_pred.view.view.view", "y_true.view.view.size"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_eval", "(", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "y_true", "=", "y_true", ".", "view", "(", "-", "1", ")", "\n", "y_pred", "=", "y_pred", ".", "view", "(", "-", "1", ")", "\n", "total", "=", "y_true", ".", "size", "(", "0", ")", "\n", "correct", "=", "(", "y_true", "==", "y_pred", ")", ".", "to", "(", "torch", ".", "float32", ")", ".", "sum", "(", ")", "\n", "return", "(", "correct", "/", "total", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.MulticlassEvaluator.eval": [[118, 120], ["eval.MulticlassEvaluator._eval"], "methods", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.MulticlassEvaluator._eval"], ["", "def", "eval", "(", "self", ",", "res", ")", ":", "\n", "        ", "return", "{", "'acc'", ":", "self", ".", "_eval", "(", "**", "res", ")", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.get_idx_split": [[10, 40], ["float", "dataset[].x.size", "int", "torch.randperm", "torch.randperm", "dataset.get_idx_split", "split.startswith", "split.split", "int", "RuntimeError", "split.split"], "function", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.get_idx_split"], ["def", "get_idx_split", "(", "dataset", ",", "split", ",", "preload_split", ")", ":", "\n", "    ", "if", "split", "[", ":", "4", "]", "==", "'rand'", ":", "\n", "        ", "train_ratio", "=", "float", "(", "split", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "num_nodes", "=", "dataset", "[", "0", "]", ".", "x", ".", "size", "(", "0", ")", "\n", "train_size", "=", "int", "(", "num_nodes", "*", "train_ratio", ")", "\n", "indices", "=", "torch", ".", "randperm", "(", "num_nodes", ")", "\n", "return", "{", "\n", "'train'", ":", "indices", "[", ":", "train_size", "]", ",", "\n", "'val'", ":", "indices", "[", "train_size", ":", "2", "*", "train_size", "]", ",", "\n", "'test'", ":", "indices", "[", "2", "*", "train_size", ":", "]", "\n", "}", "\n", "", "elif", "split", "==", "'ogb'", ":", "\n", "        ", "return", "dataset", ".", "get_idx_split", "(", ")", "\n", "", "elif", "split", ".", "startswith", "(", "'wikics'", ")", ":", "\n", "        ", "split_idx", "=", "int", "(", "split", ".", "split", "(", "':'", ")", "[", "1", "]", ")", "\n", "return", "{", "\n", "'train'", ":", "dataset", "[", "0", "]", ".", "train_mask", "[", ":", ",", "split_idx", "]", ",", "\n", "'test'", ":", "dataset", "[", "0", "]", ".", "test_mask", ",", "\n", "'val'", ":", "dataset", "[", "0", "]", ".", "val_mask", "[", ":", ",", "split_idx", "]", "\n", "}", "\n", "", "elif", "split", "==", "'preloaded'", ":", "\n", "        ", "assert", "preload_split", "is", "not", "None", ",", "'use preloaded split, but preloaded_split is None'", "\n", "train_mask", ",", "test_mask", ",", "val_mask", "=", "preload_split", "\n", "return", "{", "\n", "'train'", ":", "train_mask", ",", "\n", "'test'", ":", "test_mask", ",", "\n", "'val'", ":", "val_mask", "\n", "}", "\n", "", "else", ":", "\n", "        ", "raise", "RuntimeError", "(", "f'Unknown split type {split}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.log_regression": [[42, 104], ["z.detach().to.detach().to", "z.detach().to.size", "dataset[].y.view().to", "pGRACE.model.LogReg().to", "torch.optim.Adam", "eval.get_idx_split", "torch.LogSoftmax", "torch.NLLLoss", "range", "dataset[].y.max().item", "LogReg().to.parameters", "v.to", "LogReg().to.train", "torch.optim.Adam.zero_grad", "LogReg().to.", "nn.NLLLoss.", "nll_loss.backward", "torch.optim.Adam.step", "z.detach().to.detach", "dataset[].y.view", "pGRACE.model.LogReg", "get_idx_split.items", "nn.LogSoftmax.", "dataset[].y.max", "print", "evaluator.eval", "evaluator.eval", "evaluator.eval", "y[].view", "LogReg().to.argmax().view", "y[].view", "LogReg().to.argmax().view", "y[].view", "LogReg().to.argmax().view", "LogReg().to.argmax", "LogReg().to.argmax", "LogReg().to.argmax", "LogReg().to.", "LogReg().to.", "LogReg().to."], "function", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.get_idx_split", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.None.train.train", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.MulticlassEvaluator.eval", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.MulticlassEvaluator.eval", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.eval.MulticlassEvaluator.eval"], ["", "", "def", "log_regression", "(", "z", ",", "\n", "dataset", ",", "\n", "evaluator", ",", "\n", "num_epochs", ":", "int", "=", "5000", ",", "\n", "test_device", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "split", ":", "str", "=", "'rand:0.1'", ",", "\n", "verbose", ":", "bool", "=", "False", ",", "\n", "preload_split", "=", "None", ")", ":", "\n", "    ", "test_device", "=", "z", ".", "device", "if", "test_device", "is", "None", "else", "test_device", "\n", "z", "=", "z", ".", "detach", "(", ")", ".", "to", "(", "test_device", ")", "\n", "num_hidden", "=", "z", ".", "size", "(", "1", ")", "\n", "y", "=", "dataset", "[", "0", "]", ".", "y", ".", "view", "(", "-", "1", ")", ".", "to", "(", "test_device", ")", "\n", "num_classes", "=", "dataset", "[", "0", "]", ".", "y", ".", "max", "(", ")", ".", "item", "(", ")", "+", "1", "\n", "classifier", "=", "LogReg", "(", "num_hidden", ",", "num_classes", ")", ".", "to", "(", "test_device", ")", "\n", "optimizer", "=", "Adam", "(", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "0.01", ",", "weight_decay", "=", "0.0", ")", "\n", "\n", "split", "=", "get_idx_split", "(", "dataset", ",", "split", ",", "preload_split", ")", "\n", "split", "=", "{", "k", ":", "v", ".", "to", "(", "test_device", ")", "for", "k", ",", "v", "in", "split", ".", "items", "(", ")", "}", "\n", "f", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "-", "1", ")", "\n", "nll_loss", "=", "nn", ".", "NLLLoss", "(", ")", "\n", "\n", "best_test_acc", "=", "0", "\n", "best_val_acc", "=", "0", "\n", "best_epoch", "=", "0", "\n", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "        ", "classifier", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "output", "=", "classifier", "(", "z", "[", "split", "[", "'train'", "]", "]", ")", "\n", "loss", "=", "nll_loss", "(", "f", "(", "output", ")", ",", "y", "[", "split", "[", "'train'", "]", "]", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "(", "epoch", "+", "1", ")", "%", "20", "==", "0", ":", "\n", "            ", "if", "'val'", "in", "split", ":", "\n", "# val split is available", "\n", "                ", "test_acc", "=", "evaluator", ".", "eval", "(", "{", "\n", "'y_true'", ":", "y", "[", "split", "[", "'test'", "]", "]", ".", "view", "(", "-", "1", ",", "1", ")", ",", "\n", "'y_pred'", ":", "classifier", "(", "z", "[", "split", "[", "'test'", "]", "]", ")", ".", "argmax", "(", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "}", ")", "[", "'acc'", "]", "\n", "val_acc", "=", "evaluator", ".", "eval", "(", "{", "\n", "'y_true'", ":", "y", "[", "split", "[", "'val'", "]", "]", ".", "view", "(", "-", "1", ",", "1", ")", ",", "\n", "'y_pred'", ":", "classifier", "(", "z", "[", "split", "[", "'val'", "]", "]", ")", ".", "argmax", "(", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "}", ")", "[", "'acc'", "]", "\n", "if", "val_acc", ">", "best_val_acc", ":", "\n", "                    ", "best_val_acc", "=", "val_acc", "\n", "best_test_acc", "=", "test_acc", "\n", "best_epoch", "=", "epoch", "\n", "", "", "else", ":", "\n", "                ", "acc", "=", "evaluator", ".", "eval", "(", "{", "\n", "'y_true'", ":", "y", "[", "split", "[", "'test'", "]", "]", ".", "view", "(", "-", "1", ",", "1", ")", ",", "\n", "'y_pred'", ":", "classifier", "(", "z", "[", "split", "[", "'test'", "]", "]", ")", ".", "argmax", "(", "-", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "}", ")", "[", "'acc'", "]", "\n", "if", "best_test_acc", "<", "acc", ":", "\n", "                    ", "best_test_acc", "=", "acc", "\n", "best_epoch", "=", "epoch", "\n", "", "", "if", "verbose", ":", "\n", "                ", "print", "(", "f'logreg epoch {epoch}: best test acc {best_test_acc}'", ")", "\n", "\n", "", "", "", "return", "{", "'acc'", ":", "best_test_acc", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.dataset.get_dataset": [[8, 33], ["os.expanduser", "name.startswith", "torch_geometric.datasets.Coauthor", "torch_geometric.datasets.Coauthor", "torch_geometric.datasets.WikiCS", "torch_geometric.datasets.Amazon", "torch_geometric.datasets.Amazon", "ogb.nodeproppred.PygNodePropPredDataset", "os.join", "torch_geometric.NormalizeFeatures", "torch_geometric.NormalizeFeatures", "torch_geometric.NormalizeFeatures", "torch_geometric.NormalizeFeatures", "torch_geometric.NormalizeFeatures", "torch_geometric.NormalizeFeatures", "os.join", "torch_geometric.NormalizeFeatures"], "function", ["None"], ["def", "get_dataset", "(", "path", ",", "name", ")", ":", "\n", "    ", "assert", "name", "in", "[", "'Cora'", ",", "'CiteSeer'", ",", "'PubMed'", ",", "'DBLP'", ",", "'Karate'", ",", "'WikiCS'", ",", "'Coauthor-CS'", ",", "'Coauthor-Phy'", ",", "\n", "'Amazon-Computers'", ",", "'Amazon-Photo'", ",", "'ogbn-arxiv'", ",", "'ogbg-code'", "]", "\n", "name", "=", "'dblp'", "if", "name", "==", "'DBLP'", "else", "name", "\n", "root_path", "=", "osp", ".", "expanduser", "(", "'~/datasets'", ")", "\n", "\n", "if", "name", "==", "'Coauthor-CS'", ":", "\n", "        ", "return", "Coauthor", "(", "root", "=", "path", ",", "name", "=", "'cs'", ",", "transform", "=", "T", ".", "NormalizeFeatures", "(", ")", ")", "\n", "\n", "", "if", "name", "==", "'Coauthor-Phy'", ":", "\n", "        ", "return", "Coauthor", "(", "root", "=", "path", ",", "name", "=", "'physics'", ",", "transform", "=", "T", ".", "NormalizeFeatures", "(", ")", ")", "\n", "\n", "", "if", "name", "==", "'WikiCS'", ":", "\n", "        ", "return", "WikiCS", "(", "root", "=", "path", ",", "transform", "=", "T", ".", "NormalizeFeatures", "(", ")", ")", "\n", "\n", "", "if", "name", "==", "'Amazon-Computers'", ":", "\n", "        ", "return", "Amazon", "(", "root", "=", "path", ",", "name", "=", "'computers'", ",", "transform", "=", "T", ".", "NormalizeFeatures", "(", ")", ")", "\n", "\n", "", "if", "name", "==", "'Amazon-Photo'", ":", "\n", "        ", "return", "Amazon", "(", "root", "=", "path", ",", "name", "=", "'photo'", ",", "transform", "=", "T", ".", "NormalizeFeatures", "(", ")", ")", "\n", "\n", "", "if", "name", ".", "startswith", "(", "'ogbn'", ")", ":", "\n", "        ", "return", "PygNodePropPredDataset", "(", "root", "=", "osp", ".", "join", "(", "root_path", ",", "'OGB'", ")", ",", "name", "=", "name", ",", "transform", "=", "T", ".", "NormalizeFeatures", "(", ")", ")", "\n", "\n", "", "return", "(", "CitationFull", "if", "name", "==", "'dblp'", "else", "Planetoid", ")", "(", "osp", ".", "join", "(", "root_path", ",", "'Citation'", ")", ",", "name", ",", "transform", "=", "T", ".", "NormalizeFeatures", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.dataset.get_path": [[35, 40], ["os.join"], "function", ["None"], ["", "def", "get_path", "(", "base_path", ",", "name", ")", ":", "\n", "    ", "if", "name", "in", "[", "'Cora'", ",", "'CiteSeer'", ",", "'PubMed'", "]", ":", "\n", "        ", "return", "base_path", "\n", "", "else", ":", "\n", "        ", "return", "osp", ".", "join", "(", "base_path", ",", "name", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.Encoder.__init__": [[11, 34], ["torch.nn.Module.__init__", "range", "model.Encoder.conv.append", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Linear", "torch.nn.Linear", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "base_model().jittable", "model.Encoder.conv.append", "base_model", "base_model", "model.Encoder.conv.append", "base_model", "base_model", "base_model"], "methods", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.LogReg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ":", "int", ",", "out_channels", ":", "int", ",", "activation", ",", "base_model", "=", "GCNConv", ",", "k", ":", "int", "=", "2", ",", "skip", "=", "False", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_model", "=", "base_model", "\n", "\n", "assert", "k", ">=", "2", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "skip", "=", "skip", "\n", "if", "not", "self", ".", "skip", ":", "\n", "            ", "self", ".", "conv", "=", "[", "base_model", "(", "in_channels", ",", "2", "*", "out_channels", ")", ".", "jittable", "(", ")", "]", "\n", "for", "_", "in", "range", "(", "1", ",", "k", "-", "1", ")", ":", "\n", "                ", "self", ".", "conv", ".", "append", "(", "base_model", "(", "2", "*", "out_channels", ",", "2", "*", "out_channels", ")", ")", "\n", "", "self", ".", "conv", ".", "append", "(", "base_model", "(", "2", "*", "out_channels", ",", "out_channels", ")", ")", "\n", "self", ".", "conv", "=", "nn", ".", "ModuleList", "(", "self", ".", "conv", ")", "\n", "\n", "self", ".", "activation", "=", "activation", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc_skip", "=", "nn", ".", "Linear", "(", "in_channels", ",", "out_channels", ")", "\n", "self", ".", "conv", "=", "[", "base_model", "(", "in_channels", ",", "out_channels", ")", "]", "\n", "for", "_", "in", "range", "(", "1", ",", "k", ")", ":", "\n", "                ", "self", ".", "conv", ".", "append", "(", "base_model", "(", "out_channels", ",", "out_channels", ")", ")", "\n", "", "self", ".", "conv", "=", "nn", ".", "ModuleList", "(", "self", ".", "conv", ")", "\n", "\n", "self", ".", "activation", "=", "activation", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.Encoder.forward": [[35, 47], ["range", "model.Encoder.activation", "range", "model.Encoder.activation", "model.Encoder.fc_skip", "sum", "hs.append", "model.Encoder.activation"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "edge_index", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "if", "not", "self", ".", "skip", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "k", ")", ":", "\n", "                ", "x", "=", "self", ".", "activation", "(", "self", ".", "conv", "[", "i", "]", "(", "x", ",", "edge_index", ")", ")", "\n", "", "return", "x", "\n", "", "else", ":", "\n", "            ", "h", "=", "self", ".", "activation", "(", "self", ".", "conv", "[", "0", "]", "(", "x", ",", "edge_index", ")", ")", "\n", "hs", "=", "[", "self", ".", "fc_skip", "(", "x", ")", ",", "h", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "k", ")", ":", "\n", "                ", "u", "=", "sum", "(", "hs", ")", "\n", "hs", ".", "append", "(", "self", ".", "activation", "(", "self", ".", "conv", "[", "i", "]", "(", "u", ",", "edge_index", ")", ")", ")", "\n", "", "return", "hs", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.__init__": [[50, 59], ["super().__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.LogReg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "encoder", ":", "Encoder", ",", "num_hidden", ":", "int", ",", "num_proj_hidden", ":", "int", ",", "tau", ":", "float", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "GRACE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", ":", "Encoder", "=", "encoder", "\n", "self", ".", "tau", ":", "float", "=", "tau", "\n", "\n", "self", ".", "fc1", "=", "torch", ".", "nn", ".", "Linear", "(", "num_hidden", ",", "num_proj_hidden", ")", "\n", "self", ".", "fc2", "=", "torch", ".", "nn", ".", "Linear", "(", "num_proj_hidden", ",", "num_hidden", ")", "\n", "\n", "self", ".", "num_hidden", "=", "num_hidden", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.forward": [[60, 62], ["model.GRACE.encoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ",", "edge_index", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "return", "self", ".", "encoder", "(", "x", ",", "edge_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.projection": [[63, 66], ["torch.elu", "torch.elu", "model.GRACE.fc2", "model.GRACE.fc1"], "methods", ["None"], ["", "def", "projection", "(", "self", ",", "z", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "z", "=", "F", ".", "elu", "(", "self", ".", "fc1", "(", "z", ")", ")", "\n", "return", "self", ".", "fc2", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.sim": [[67, 71], ["torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.normalize.t"], "methods", ["None"], ["", "def", "sim", "(", "self", ",", "z1", ":", "torch", ".", "Tensor", ",", "z2", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "z1", "=", "F", ".", "normalize", "(", "z1", ")", "\n", "z2", "=", "F", ".", "normalize", "(", "z2", ")", "\n", "return", "torch", ".", "mm", "(", "z1", ",", "z2", ".", "t", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.semi_loss": [[72, 78], ["f", "f", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "model.GRACE.sim", "model.GRACE.sim", "torch.log", "torch.log", "torch.log", "torch.log", "f.diag", "f.diag", "f.sum", "f.sum"], "methods", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.sim", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.sim"], ["", "def", "semi_loss", "(", "self", ",", "z1", ":", "torch", ".", "Tensor", ",", "z2", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "f", "=", "lambda", "x", ":", "torch", ".", "exp", "(", "x", "/", "self", ".", "tau", ")", "\n", "refl_sim", "=", "f", "(", "self", ".", "sim", "(", "z1", ",", "z1", ")", ")", "\n", "between_sim", "=", "f", "(", "self", ".", "sim", "(", "z1", ",", "z2", ")", ")", "\n", "\n", "return", "-", "torch", ".", "log", "(", "between_sim", ".", "diag", "(", ")", "/", "(", "refl_sim", ".", "sum", "(", "1", ")", "+", "between_sim", ".", "sum", "(", "1", ")", "-", "refl_sim", ".", "diag", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.batched_semi_loss": [[79, 98], ["z1.size", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "f", "f", "losses.append", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "model.GRACE.sim", "model.GRACE.sim", "torch.log", "torch.log", "torch.log", "torch.log", "between_sim[].diag", "refl_sim[].diag", "f.sum", "f.sum"], "methods", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.sim", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.sim"], ["", "def", "batched_semi_loss", "(", "self", ",", "z1", ":", "torch", ".", "Tensor", ",", "z2", ":", "torch", ".", "Tensor", ",", "batch_size", ":", "int", ")", ":", "\n", "# Space complexity: O(BN) (semi_loss: O(N^2))", "\n", "        ", "device", "=", "z1", ".", "device", "\n", "num_nodes", "=", "z1", ".", "size", "(", "0", ")", "\n", "num_batches", "=", "(", "num_nodes", "-", "1", ")", "//", "batch_size", "+", "1", "\n", "f", "=", "lambda", "x", ":", "torch", ".", "exp", "(", "x", "/", "self", ".", "tau", ")", "\n", "indices", "=", "torch", ".", "arange", "(", "0", ",", "num_nodes", ")", ".", "to", "(", "device", ")", "\n", "losses", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "num_batches", ")", ":", "\n", "            ", "mask", "=", "indices", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", "\n", "refl_sim", "=", "f", "(", "self", ".", "sim", "(", "z1", "[", "mask", "]", ",", "z1", ")", ")", "# [B, N]", "\n", "between_sim", "=", "f", "(", "self", ".", "sim", "(", "z1", "[", "mask", "]", ",", "z2", ")", ")", "# [B, N]", "\n", "\n", "losses", ".", "append", "(", "-", "torch", ".", "log", "(", "between_sim", "[", ":", ",", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", ".", "diag", "(", ")", "\n", "/", "(", "refl_sim", ".", "sum", "(", "1", ")", "+", "between_sim", ".", "sum", "(", "1", ")", "\n", "-", "refl_sim", "[", ":", ",", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", ".", "diag", "(", ")", ")", ")", ")", "\n", "\n", "", "return", "torch", ".", "cat", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.loss": [[99, 114], ["model.GRACE.projection", "model.GRACE.projection", "model.GRACE.semi_loss", "model.GRACE.semi_loss", "model.GRACE.batched_semi_loss", "model.GRACE.batched_semi_loss", "ret.mean", "ret.sum"], "methods", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.projection", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.projection", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.semi_loss", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.semi_loss", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.batched_semi_loss", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.GRACE.batched_semi_loss"], ["", "def", "loss", "(", "self", ",", "z1", ":", "torch", ".", "Tensor", ",", "z2", ":", "torch", ".", "Tensor", ",", "mean", ":", "bool", "=", "True", ",", "batch_size", ":", "Optional", "[", "int", "]", "=", "None", ")", ":", "\n", "        ", "h1", "=", "self", ".", "projection", "(", "z1", ")", "\n", "h2", "=", "self", ".", "projection", "(", "z2", ")", "\n", "\n", "if", "batch_size", "is", "None", ":", "\n", "            ", "l1", "=", "self", ".", "semi_loss", "(", "h1", ",", "h2", ")", "\n", "l2", "=", "self", ".", "semi_loss", "(", "h2", ",", "h1", ")", "\n", "", "else", ":", "\n", "            ", "l1", "=", "self", ".", "batched_semi_loss", "(", "h1", ",", "h2", ",", "batch_size", ")", "\n", "l2", "=", "self", ".", "batched_semi_loss", "(", "h2", ",", "h1", ",", "batch_size", ")", "\n", "\n", "", "ret", "=", "(", "l1", "+", "l2", ")", "*", "0.5", "\n", "ret", "=", "ret", ".", "mean", "(", ")", "if", "mean", "else", "ret", ".", "sum", "(", ")", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.LogReg.__init__": [[117, 123], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "model.LogReg.modules", "model.LogReg.weights_init"], "methods", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.LogReg.__init__", "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.LogReg.weights_init"], ["    ", "def", "__init__", "(", "self", ",", "ft_in", ",", "nb_classes", ")", ":", "\n", "        ", "super", "(", "LogReg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "ft_in", ",", "nb_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "self", ".", "weights_init", "(", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.LogReg.weights_init": [[124, 129], ["isinstance", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "m.bias.data.fill_"], "methods", ["None"], ["", "", "def", "weights_init", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ".", "data", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.model.LogReg.forward": [[130, 133], ["model.LogReg.fc"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "seq", ")", ":", "\n", "        ", "ret", "=", "self", ".", "fc", "(", "seq", ")", "\n", "return", "ret", "\n", "", "", ""]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.functional.drop_feature": [[7, 13], ["x.clone.clone", "torch.empty().uniform_", "torch.empty", "x.clone.size"], "function", ["None"], ["def", "drop_feature", "(", "x", ",", "drop_prob", ")", ":", "\n", "    ", "drop_mask", "=", "torch", ".", "empty", "(", "(", "x", ".", "size", "(", "1", ")", ",", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "x", ".", "device", ")", ".", "uniform_", "(", "0", ",", "1", ")", "<", "drop_prob", "\n", "x", "=", "x", ".", "clone", "(", ")", "\n", "x", "[", ":", ",", "drop_mask", "]", "=", "0", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.functional.drop_feature_weighted": [[15, 26], ["w.where.where", "w.where.repeat().view", "torch.bernoulli().to", "x.clone.clone", "x.clone.size", "w.where.mean", "torch.ones_like", "w.where.repeat", "torch.bernoulli", "x.clone.size"], "function", ["None"], ["", "def", "drop_feature_weighted", "(", "x", ",", "w", ",", "p", ":", "float", ",", "threshold", ":", "float", "=", "0.7", ")", ":", "\n", "    ", "w", "=", "w", "/", "w", ".", "mean", "(", ")", "*", "p", "\n", "w", "=", "w", ".", "where", "(", "w", "<", "threshold", ",", "torch", ".", "ones_like", "(", "w", ")", "*", "threshold", ")", "\n", "drop_prob", "=", "w", ".", "repeat", "(", "x", ".", "size", "(", "0", ")", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "drop_mask", "=", "torch", ".", "bernoulli", "(", "drop_prob", ")", ".", "to", "(", "torch", ".", "bool", ")", "\n", "\n", "x", "=", "x", ".", "clone", "(", ")", "\n", "x", "[", "drop_mask", "]", "=", "0.", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.functional.drop_feature_weighted_2": [[28, 39], ["w.where.where", "torch.bernoulli().to", "x.clone.clone", "w.where.mean", "torch.ones_like", "torch.bernoulli"], "function", ["None"], ["", "def", "drop_feature_weighted_2", "(", "x", ",", "w", ",", "p", ":", "float", ",", "threshold", ":", "float", "=", "0.7", ")", ":", "\n", "    ", "w", "=", "w", "/", "w", ".", "mean", "(", ")", "*", "p", "\n", "w", "=", "w", ".", "where", "(", "w", "<", "threshold", ",", "torch", ".", "ones_like", "(", "w", ")", "*", "threshold", ")", "\n", "drop_prob", "=", "w", "\n", "\n", "drop_mask", "=", "torch", ".", "bernoulli", "(", "drop_prob", ")", ".", "to", "(", "torch", ".", "bool", ")", "\n", "\n", "x", "=", "x", ".", "clone", "(", ")", "\n", "x", "[", ":", ",", "drop_mask", "]", "=", "0.", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.functional.feature_drop_weights": [[41, 48], ["x.to().to.to().to", "w.log.log", "x.to().to.t", "x.to().to.to", "w.log.max", "w.log.max", "w.log.mean"], "function", ["None"], ["", "def", "feature_drop_weights", "(", "x", ",", "node_c", ")", ":", "\n", "    ", "x", "=", "x", ".", "to", "(", "torch", ".", "bool", ")", ".", "to", "(", "torch", ".", "float32", ")", "\n", "w", "=", "x", ".", "t", "(", ")", "@", "node_c", "\n", "w", "=", "w", ".", "log", "(", ")", "\n", "s", "=", "(", "w", ".", "max", "(", ")", "-", "w", ")", "/", "(", "w", ".", "max", "(", ")", "-", "w", ".", "mean", "(", ")", ")", "\n", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.functional.feature_drop_weights_dense": [[50, 57], ["x.abs.abs", "w.log.log", "x.abs.t", "w.log.max", "w.log.max", "w.log.mean"], "function", ["None"], ["", "def", "feature_drop_weights_dense", "(", "x", ",", "node_c", ")", ":", "\n", "    ", "x", "=", "x", ".", "abs", "(", ")", "\n", "w", "=", "x", ".", "t", "(", ")", "@", "node_c", "\n", "w", "=", "w", ".", "log", "(", ")", "\n", "s", "=", "(", "w", ".", "max", "(", ")", "-", "w", ")", "/", "(", "w", ".", "max", "(", ")", "-", "w", ".", "mean", "(", ")", ")", "\n", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.functional.drop_edge_weighted": [[59, 65], ["edge_weights.where.where", "torch.bernoulli().to", "edge_weights.where.mean", "torch.ones_like", "torch.bernoulli"], "function", ["None"], ["", "def", "drop_edge_weighted", "(", "edge_index", ",", "edge_weights", ",", "p", ":", "float", ",", "threshold", ":", "float", "=", "1.", ")", ":", "\n", "    ", "edge_weights", "=", "edge_weights", "/", "edge_weights", ".", "mean", "(", ")", "*", "p", "\n", "edge_weights", "=", "edge_weights", ".", "where", "(", "edge_weights", "<", "threshold", ",", "torch", ".", "ones_like", "(", "edge_weights", ")", "*", "threshold", ")", "\n", "sel_mask", "=", "torch", ".", "bernoulli", "(", "1.", "-", "edge_weights", ")", ".", "to", "(", "torch", ".", "bool", ")", "\n", "\n", "return", "edge_index", "[", ":", ",", "sel_mask", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.functional.degree_drop_weights": [[67, 75], ["torch_geometric.utils.to_undirected", "torch_geometric.utils.degree", "deg[].to", "torch.log", "torch.log.max", "torch.log.max", "torch.log.mean"], "function", ["None"], ["", "def", "degree_drop_weights", "(", "edge_index", ")", ":", "\n", "    ", "edge_index_", "=", "to_undirected", "(", "edge_index", ")", "\n", "deg", "=", "degree", "(", "edge_index_", "[", "1", "]", ")", "\n", "deg_col", "=", "deg", "[", "edge_index", "[", "1", "]", "]", ".", "to", "(", "torch", ".", "float32", ")", "\n", "s_col", "=", "torch", ".", "log", "(", "deg_col", ")", "\n", "weights", "=", "(", "s_col", ".", "max", "(", ")", "-", "s_col", ")", "/", "(", "s_col", ".", "max", "(", ")", "-", "s_col", ".", "mean", "(", ")", ")", "\n", "\n", "return", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.functional.pr_drop_weights": [[77, 94], ["pGRACE.utils.compute_pr", "pv[].to", "pv[].to", "torch.log", "torch.log", "s.max", "s.max", "s.mean"], "function", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.utils.compute_pr"], ["", "def", "pr_drop_weights", "(", "edge_index", ",", "aggr", ":", "str", "=", "'sink'", ",", "k", ":", "int", "=", "10", ")", ":", "\n", "    ", "pv", "=", "compute_pr", "(", "edge_index", ",", "k", "=", "k", ")", "\n", "pv_row", "=", "pv", "[", "edge_index", "[", "0", "]", "]", ".", "to", "(", "torch", ".", "float32", ")", "\n", "pv_col", "=", "pv", "[", "edge_index", "[", "1", "]", "]", ".", "to", "(", "torch", ".", "float32", ")", "\n", "s_row", "=", "torch", ".", "log", "(", "pv_row", ")", "\n", "s_col", "=", "torch", ".", "log", "(", "pv_col", ")", "\n", "if", "aggr", "==", "'sink'", ":", "\n", "        ", "s", "=", "s_col", "\n", "", "elif", "aggr", "==", "'source'", ":", "\n", "        ", "s", "=", "s_row", "\n", "", "elif", "aggr", "==", "'mean'", ":", "\n", "        ", "s", "=", "(", "s_col", "+", "s_row", ")", "*", "0.5", "\n", "", "else", ":", "\n", "        ", "s", "=", "s_col", "\n", "", "weights", "=", "(", "s", ".", "max", "(", ")", "-", "s", ")", "/", "(", "s", ".", "max", "(", ")", "-", "s", ".", "mean", "(", ")", ")", "\n", "\n", "return", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.functional.evc_drop_weights": [[96, 107], ["pGRACE.utils.eigenvector_centrality", "evc.where.where", "evc.where.log", "torch.zeros_like", "evc.log.max", "evc.log.max", "evc.log.mean"], "function", ["home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.utils.eigenvector_centrality"], ["", "def", "evc_drop_weights", "(", "data", ")", ":", "\n", "    ", "evc", "=", "eigenvector_centrality", "(", "data", ")", "\n", "evc", "=", "evc", ".", "where", "(", "evc", ">", "0", ",", "torch", ".", "zeros_like", "(", "evc", ")", ")", "\n", "evc", "=", "evc", "+", "1e-8", "\n", "s", "=", "evc", ".", "log", "(", ")", "\n", "\n", "edge_index", "=", "data", ".", "edge_index", "\n", "s_row", ",", "s_col", "=", "s", "[", "edge_index", "[", "0", "]", "]", ",", "s", "[", "edge_index", "[", "1", "]", "]", "\n", "s", "=", "s_col", "\n", "\n", "return", "(", "s", ".", "max", "(", ")", "-", "s", ")", "/", "(", "s", ".", "max", "(", ")", "-", "s", ".", "mean", "(", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.utils.get_base_model": [[30, 56], ["torch_geometric.nn.GATConv", "torch.Sequential", "torch_geometric.nn.GINConv", "torch.Linear", "torch.ELU", "torch.Linear"], "function", ["None"], ["def", "get_base_model", "(", "name", ":", "str", ")", ":", "\n", "    ", "def", "gat_wrapper", "(", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "return", "GATConv", "(", "\n", "in_channels", "=", "in_channels", ",", "\n", "out_channels", "=", "out_channels", "//", "4", ",", "\n", "heads", "=", "4", "\n", ")", "\n", "\n", "", "def", "gin_wrapper", "(", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "mlp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_channels", ",", "2", "*", "out_channels", ")", ",", "\n", "nn", ".", "ELU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2", "*", "out_channels", ",", "out_channels", ")", "\n", ")", "\n", "return", "GINConv", "(", "mlp", ")", "\n", "\n", "", "base_models", "=", "{", "\n", "'GCNConv'", ":", "GCNConv", ",", "\n", "'SGConv'", ":", "SGConv", ",", "\n", "'SAGEConv'", ":", "SAGEConv", ",", "\n", "'GATConv'", ":", "gat_wrapper", ",", "\n", "'GraphConv'", ":", "GraphConv", ",", "\n", "'GINConv'", ":", "gin_wrapper", "\n", "}", "\n", "\n", "return", "base_models", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.utils.get_activation": [[58, 69], ["torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.PReLU"], "function", ["None"], ["", "def", "get_activation", "(", "name", ":", "str", ")", ":", "\n", "    ", "activations", "=", "{", "\n", "'relu'", ":", "F", ".", "relu", ",", "\n", "'hardtanh'", ":", "F", ".", "hardtanh", ",", "\n", "'elu'", ":", "F", ".", "elu", ",", "\n", "'leakyrelu'", ":", "F", ".", "leaky_relu", ",", "\n", "'prelu'", ":", "torch", ".", "nn", ".", "PReLU", "(", ")", ",", "\n", "'rrelu'", ":", "F", ".", "rrelu", "\n", "}", "\n", "\n", "return", "activations", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.utils.compute_pr": [[71, 83], ["torch_geometric.utils.degree", "torch.ones().to().to", "torch.ones().to().to", "torch.ones().to().to", "range", "edge_index.max().item", "torch_scatter.scatter", "torch.ones().to", "torch.ones().to", "torch.ones().to", "edge_index.max", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "compute_pr", "(", "edge_index", ",", "damp", ":", "float", "=", "0.85", ",", "k", ":", "int", "=", "10", ")", ":", "\n", "    ", "num_nodes", "=", "edge_index", ".", "max", "(", ")", ".", "item", "(", ")", "+", "1", "\n", "deg_out", "=", "degree", "(", "edge_index", "[", "0", "]", ")", "\n", "x", "=", "torch", ".", "ones", "(", "(", "num_nodes", ",", ")", ")", ".", "to", "(", "edge_index", ".", "device", ")", ".", "to", "(", "torch", ".", "float32", ")", "\n", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "        ", "edge_msg", "=", "x", "[", "edge_index", "[", "0", "]", "]", "/", "deg_out", "[", "edge_index", "[", "0", "]", "]", "\n", "agg_msg", "=", "scatter", "(", "edge_msg", ",", "edge_index", "[", "1", "]", ",", "reduce", "=", "'sum'", ")", "\n", "\n", "x", "=", "(", "1", "-", "damp", ")", "*", "x", "+", "damp", "*", "agg_msg", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.utils.eigenvector_centrality": [[85, 90], ["torch_geometric.utils.to_networkx", "networkx.eigenvector_centrality_numpy", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "range", "torch.tensor", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "def", "eigenvector_centrality", "(", "data", ")", ":", "\n", "    ", "graph", "=", "to_networkx", "(", "data", ")", "\n", "x", "=", "nx", ".", "eigenvector_centrality_numpy", "(", "graph", ")", "\n", "x", "=", "[", "x", "[", "i", "]", "for", "i", "in", "range", "(", "data", ".", "num_nodes", ")", "]", "\n", "return", "torch", ".", "tensor", "(", "x", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "to", "(", "data", ".", "edge_index", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.CRIPAC-DIG_GCA.pGRACE.utils.generate_split": [[92, 109], ["int", "int", "torch.utils.data.random_split", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.arange", "torch.arange", "torch.arange", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "function", ["None"], ["", "def", "generate_split", "(", "num_samples", ":", "int", ",", "train_ratio", ":", "float", ",", "val_ratio", ":", "float", ")", ":", "\n", "    ", "train_len", "=", "int", "(", "num_samples", "*", "train_ratio", ")", "\n", "val_len", "=", "int", "(", "num_samples", "*", "val_ratio", ")", "\n", "test_len", "=", "num_samples", "-", "train_len", "-", "val_len", "\n", "\n", "train_set", ",", "test_set", ",", "val_set", "=", "random_split", "(", "torch", ".", "arange", "(", "0", ",", "num_samples", ")", ",", "(", "train_len", ",", "test_len", ",", "val_len", ")", ")", "\n", "\n", "idx_train", ",", "idx_test", ",", "idx_val", "=", "train_set", ".", "indices", ",", "test_set", ".", "indices", ",", "val_set", ".", "indices", "\n", "train_mask", "=", "torch", ".", "zeros", "(", "(", "num_samples", ",", ")", ")", ".", "to", "(", "torch", ".", "bool", ")", "\n", "test_mask", "=", "torch", ".", "zeros", "(", "(", "num_samples", ",", ")", ")", ".", "to", "(", "torch", ".", "bool", ")", "\n", "val_mask", "=", "torch", ".", "zeros", "(", "(", "num_samples", ",", ")", ")", ".", "to", "(", "torch", ".", "bool", ")", "\n", "\n", "train_mask", "[", "idx_train", "]", "=", "True", "\n", "test_mask", "[", "idx_test", "]", "=", "True", "\n", "val_mask", "[", "idx_val", "]", "=", "True", "\n", "\n", "return", "train_mask", ",", "test_mask", ",", "val_mask", "\n", "\n"]]}