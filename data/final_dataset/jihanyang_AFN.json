{"home.repos.pwc.inspect_result.jihanyang_AFN.code.train.get_L2norm_loss_self_driven": [[66, 72], ["x.norm().detach", "x.norm", "x.norm"], "function", ["None"], ["", "else", ":", "\n", "    ", "raise", "ValueError", "(", "'Unexpected value of args.model'", ")", ";", "\n", "", "netF", "=", "ResClassifier", "(", "class_num", "=", "args", ".", "class_num", ",", "extract", "=", "args", ".", "extract", ")", ".", "cuda", "(", ")", "\n", "netF", ".", "apply", "(", "weights_init", ")", "\n", "\n", "\n", "def", "get_L2norm_loss_self_driven", "(", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.code.train.get_cls_loss": [[62, 65], ["torch.nll_loss", "torch.log_softmax"], "function", ["None"], ["if", "args", ".", "model", "==", "'resnet101'", ":", "\n", "    ", "netG", "=", "ResBase101", "(", ")", ".", "cuda", "(", ")", "\n", "", "elif", "args", ".", "model", "==", "'resnet50'", ":", "\n", "    ", "netG", "=", "ResBase50", "(", ")", ".", "cuda", "(", ")", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.code.train_ent.get_cls_loss": [[64, 67], ["torch.nll_loss", "torch.log_softmax"], "function", ["None"], ["def", "get_cls_loss", "(", "pred", ",", "gt", ")", ":", "\n", "    ", "cls_loss", "=", "F", ".", "nll_loss", "(", "F", ".", "log_softmax", "(", "pred", ")", ",", "gt", ")", "\n", "return", "cls_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.code.train_ent.get_L2norm_loss_self_driven": [[68, 74], ["x.norm().detach", "x.norm", "x.norm"], "function", ["None"], ["", "def", "get_L2norm_loss_self_driven", "(", "x", ")", ":", "\n", "    ", "radius", "=", "x", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "detach", "(", ")", "\n", "assert", "radius", ".", "requires_grad", "==", "False", "\n", "radius", "=", "radius", "+", "1.0", "\n", "l", "=", "(", "(", "x", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", "-", "radius", ")", "**", "2", ")", ".", "mean", "(", ")", "\n", "return", "args", ".", "weight_L2norm", "*", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.code.train_ent.get_entropy_loss": [[75, 80], ["p_softmax.ge", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.masked_select", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "float", "torch.log", "torch.log", "torch.log", "torch.log", "p_softmax.size"], "function", ["None"], ["", "def", "get_entropy_loss", "(", "p_softmax", ")", ":", "\n", "    ", "mask", "=", "p_softmax", ".", "ge", "(", "0.000001", ")", "\n", "mask_out", "=", "torch", ".", "masked_select", "(", "p_softmax", ",", "mask", ")", "\n", "entropy", "=", "-", "(", "torch", ".", "sum", "(", "mask_out", "*", "torch", ".", "log", "(", "mask_out", ")", ")", ")", "\n", "return", "args", ".", "weight_entropy", "*", "(", "entropy", "/", "float", "(", "p_softmax", ".", "size", "(", "0", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.VisDAImage.__init__": [[32, 39], ["data_load.make_dataset"], "methods", ["home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "label", ",", "transform", "=", "None", ",", "loader", "=", "default_loader", ")", ":", "\n", "        ", "imgs", "=", "make_dataset", "(", "root", ",", "label", ")", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "label", "=", "label", "\n", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.VisDAImage.__getitem__": [[40, 48], ["data_load.VisDAImage.loader", "data_load.VisDAImage.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", ",", "target", "=", "self", ".", "imgs", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "path", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.VisDAImage.__len__": [[49, 51], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.is_image_file": [[13, 15], ["any", "filename.endswith"], "function", ["None"], ["def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "return", "any", "(", "filename", ".", "endswith", "(", "extension", ")", "for", "extension", "in", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.default_loader": [[16, 18], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "return", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.make_dataset": [[19, 30], ["open", "line.strip().split", "data_load.is_image_file", "int", "images.append", "os.path.join", "line.strip"], "function", ["home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.is_image_file"], ["", "def", "make_dataset", "(", "root", ",", "label", ")", ":", "\n", "    ", "images", "=", "[", "]", "\n", "labeltxt", "=", "open", "(", "label", ")", "\n", "for", "line", "in", "labeltxt", ":", "\n", "        ", "data", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ")", "\n", "if", "is_image_file", "(", "data", "[", "0", "]", ")", ":", "\n", "            ", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "data", "[", "0", "]", ")", "\n", "", "gt", "=", "int", "(", "data", "[", "1", "]", ")", "\n", "item", "=", "(", "path", ",", "gt", ")", "\n", "images", ".", "append", "(", "item", ")", "\n", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.__init__.weights_init": [[3, 14], ["classname.find", "m.weight.data.normal_", "m.bias.data.normal_", "classname.find", "m.weight.data.normal_", "m.bias.data.fill_", "classname.find", "m.weight.data.normal_", "m.bias.data.normal_"], "function", ["None"], ["def", "weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.01", ")", "\n", "m", ".", "bias", ".", "data", ".", "normal_", "(", "0.0", ",", "0.01", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.01", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "", "elif", "classname", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", ":", "\n", "        ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.01", ")", "\n", "m", ".", "bias", ".", "data", ".", "normal_", "(", "0.0", ",", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.__init__.print_args": [[15, 22], ["print", "print", "print", "args.__dict__.items", "print", "print"], "function", ["None"], ["", "", "def", "print_args", "(", "args", ")", ":", "\n", "    ", "print", "(", "\"==========================================\"", ")", "\n", "print", "(", "\"==========       CONFIG      =============\"", ")", "\n", "print", "(", "\"==========================================\"", ")", "\n", "for", "arg", ",", "content", "in", "args", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "        ", "print", "(", "\"{}:{}\"", ".", "format", "(", "arg", ",", "content", ")", ")", "\n", "", "print", "(", "\"\\n\"", ")", "", "", ""]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.OfficeImage.__init__": [[32, 39], ["data_load.make_dataset"], "methods", ["home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "label", ",", "transform", "=", "None", ",", "loader", "=", "default_loader", ")", ":", "\n", "        ", "imgs", "=", "make_dataset", "(", "root", ",", "label", ")", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "label", "=", "label", "\n", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.OfficeImage.__getitem__": [[40, 48], ["data_load.OfficeImage.loader", "data_load.OfficeImage.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", ",", "target", "=", "self", ".", "imgs", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "path", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.OfficeImage.__len__": [[49, 51], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.__init__.get_dataset_length": [[26, 28], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.CLEFImage.__init__": [[32, 39], ["data_load.make_dataset"], "methods", ["home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "label", ",", "transform", "=", "None", ",", "loader", "=", "default_loader", ")", ":", "\n", "        ", "imgs", "=", "make_dataset", "(", "root", ",", "label", ")", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "label", "=", "label", "\n", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.CLEFImage.__getitem__": [[40, 48], ["data_load.CLEFImage.loader", "data_load.CLEFImage.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", ",", "target", "=", "self", ".", "imgs", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "path", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.utils.data_load.CLEFImage.__len__": [[49, 51], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.model.net.ResBase101.__init__": [[12, 24], ["torch.Module.__init__", "torchvision.models.resnet101"], "methods", ["home.repos.pwc.inspect_result.jihanyang_AFN.model.net.DSNClassifier.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResBase101", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model_resnet101", "=", "models", ".", "resnet101", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "conv1", "=", "model_resnet101", ".", "conv1", "\n", "self", ".", "bn1", "=", "model_resnet101", ".", "bn1", "\n", "self", ".", "relu", "=", "model_resnet101", ".", "relu", "\n", "self", ".", "maxpool", "=", "model_resnet101", ".", "maxpool", "\n", "self", ".", "layer1", "=", "model_resnet101", ".", "layer1", "\n", "self", ".", "layer2", "=", "model_resnet101", ".", "layer2", "\n", "self", ".", "layer3", "=", "model_resnet101", ".", "layer3", "\n", "self", ".", "layer4", "=", "model_resnet101", ".", "layer4", "\n", "self", ".", "avgpool", "=", "model_resnet101", ".", "avgpool", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.model.net.ResBase101.forward": [[25, 37], ["net.ResBase101.conv1", "net.ResBase101.bn1", "net.ResBase101.relu", "net.ResBase101.maxpool", "net.ResBase101.layer1", "net.ResBase101.layer2", "net.ResBase101.layer3", "net.ResBase101.layer4", "net.ResBase101.avgpool", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.model.net.ResBase50.__init__": [[12, 24], ["torch.Module.__init__", "torchvision.models.resnet50"], "methods", ["home.repos.pwc.inspect_result.jihanyang_AFN.model.net.DSNClassifier.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResBase101", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model_resnet101", "=", "models", ".", "resnet101", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "conv1", "=", "model_resnet101", ".", "conv1", "\n", "self", ".", "bn1", "=", "model_resnet101", ".", "bn1", "\n", "self", ".", "relu", "=", "model_resnet101", ".", "relu", "\n", "self", ".", "maxpool", "=", "model_resnet101", ".", "maxpool", "\n", "self", ".", "layer1", "=", "model_resnet101", ".", "layer1", "\n", "self", ".", "layer2", "=", "model_resnet101", ".", "layer2", "\n", "self", ".", "layer3", "=", "model_resnet101", ".", "layer3", "\n", "self", ".", "layer4", "=", "model_resnet101", ".", "layer4", "\n", "self", ".", "avgpool", "=", "model_resnet101", ".", "avgpool", "\n", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.model.net.ResBase50.forward": [[25, 38], ["net.ResBase50.conv1", "net.ResBase50.bn1", "net.ResBase50.relu", "net.ResBase50.maxpool", "net.ResBase50.layer1", "net.ResBase50.layer2", "net.ResBase50.layer3", "net.ResBase50.layer4", "net.ResBase50.avgpool", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n", "", "", "class", "ResBase50", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.model.net.ResClassifier.__init__": [[41, 52], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.jihanyang_AFN.model.net.DSNClassifier.__init__"], ["model_resnet50", "=", "models", ".", "resnet50", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "conv1", "=", "model_resnet50", ".", "conv1", "\n", "self", ".", "bn1", "=", "model_resnet50", ".", "bn1", "\n", "self", ".", "relu", "=", "model_resnet50", ".", "relu", "\n", "self", ".", "maxpool", "=", "model_resnet50", ".", "maxpool", "\n", "self", ".", "layer1", "=", "model_resnet50", ".", "layer1", "\n", "self", ".", "layer2", "=", "model_resnet50", ".", "layer2", "\n", "self", ".", "layer3", "=", "model_resnet50", ".", "layer3", "\n", "self", ".", "layer4", "=", "model_resnet50", ".", "layer4", "\n", "self", ".", "avgpool", "=", "model_resnet50", ".", "avgpool", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.model.net.ResClassifier.forward": [[53, 62], ["net.ResClassifier.fc1", "net.ResClassifier.fc2", "net.ResClassifier.mul_", "math.sqrt"], "methods", ["None"], ["        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.model.net.DSNClassifier.__init__": [[69, 74], ["torch.Module.__init__", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.jihanyang_AFN.model.net.DSNClassifier.__init__"], ["nn", ".", "Linear", "(", "2048", ",", "1000", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "1000", ",", "affine", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", "\n", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Sequential", "(", "\n"]], "home.repos.pwc.inspect_result.jihanyang_AFN.model.net.DSNClassifier.forward": [[75, 82], ["net.DSNClassifier.avgpool", "avg.view.view.view", "net.DSNClassifier.fc", "avg.view.view.size"], "methods", ["None"], ["nn", ".", "Linear", "(", "1000", ",", "1000", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "1000", ",", "affine", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", "\n", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "1000", ",", "class_num", ")", "\n", "self", ".", "extract", "=", "extract", "\n", "\n"]]}