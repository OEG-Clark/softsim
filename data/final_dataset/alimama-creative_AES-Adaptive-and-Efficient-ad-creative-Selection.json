{"home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.gen_ctr.StatsPolicy.__init__": [[9, 27], ["policy.tree_datastruct.TreeNode", "gen_ctr.StatsPolicy.init_tree", "gen_ctr.StatsPolicy.set_constraint", "len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "gen_ctr.StatsPolicy.set_creative"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.init_tree", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.set_constraint", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Baseline.set_creative"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ")", ":", "\n", "        ", "self", ".", "root", "=", "TreeNode", "(", "None", ",", "\"t\"", ",", "1", ",", "[", "'0'", "]", ")", "\n", "self", ".", "node_list", "=", "[", "self", ".", "root", "]", "\n", "self", ".", "size", "=", "1", "\n", "self", ".", "step", "=", "[", "]", "\n", "self", ".", "record", "=", "{", "}", "\n", "self", ".", "features", "=", "[", "]", "\n", "self", ".", "total_pv", "=", "0", "\n", "if", "creative", "!=", "\"\"", ":", "\n", "            ", "self", ".", "index_all", "=", "{", "}", "\n", "creative_len", "=", "len", "(", "creative", ")", "\n", "self", ".", "b_vec", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "pv", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "clk", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "ctr", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "set_creative", "(", "creative", ")", "\n", "", "self", ".", "init_tree", "(", "tree_model", ")", "\n", "self", ".", "set_constraint", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.gen_ctr.StatsPolicy.set_constraint": [[28, 42], ["open", "f.readlines", "range", "lines[].replace().replace().split", "policy.util.find", "print", "numpy.zeros", "range", "int", "lines[].replace().split", "range", "int", "lines[].replace().replace", "int", "int", "int", "int", "lines[].replace", "lines[].replace"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.find", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print"], ["", "def", "set_constraint", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "\"data/tree_constraint.txt\"", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "i", "=", "0", "\n", "for", "_", "in", "range", "(", "self", ".", "size", "-", "1", ")", ":", "\n", "                ", "elems", "=", "lines", "[", "i", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "\",\"", ")", "\n", "node", "=", "util", ".", "find", "(", "self", ".", "root", ",", "elems", "[", "0", "]", ")", "\n", "print", "(", "elems", ")", "\n", "node", ".", "constraint", "=", "np", ".", "zeros", "(", "(", "int", "(", "elems", "[", "1", "]", ")", ",", "int", "(", "elems", "[", "2", "]", ")", ")", ")", "\n", "for", "j", "in", "range", "(", "int", "(", "elems", "[", "1", "]", ")", ")", ":", "\n", "                    ", "datas", "=", "lines", "[", "i", "+", "j", "+", "1", "]", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", ")", "\n", "for", "t", "in", "range", "(", "int", "(", "elems", "[", "2", "]", ")", ")", ":", "\n", "                        ", "node", ".", "constraint", "[", "j", "]", "[", "t", "]", "=", "int", "(", "datas", "[", "t", "]", ")", "\n", "", "", "i", "+=", "int", "(", "elems", "[", "1", "]", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.gen_ctr.StatsPolicy.set_creative": [[43, 54], ["str", "gen_ctr.StatsPolicy.features.append", "str"], "methods", ["None"], ["", "", "", "def", "set_creative", "(", "self", ",", "creative", ")", ":", "\n", "        ", "i", "=", "0", "\n", "for", "key", "in", "creative", ":", "\n", "            ", "str1", "=", "\"\"", "\n", "for", "k", "in", "creative", "[", "key", "]", "[", "0", ":", "-", "2", "]", ":", "\n", "                ", "str1", "=", "str1", "+", "str", "(", "k", ")", "+", "\" \"", "\n", "", "str1", "+=", "str", "(", "creative", "[", "key", "]", "[", "-", "2", "]", ")", "\n", "self", ".", "index_all", "[", "str1", "]", "=", "i", "\n", "self", ".", "ctr", "[", "i", "]", "=", "creative", "[", "key", "]", "[", "-", "1", "]", "\n", "self", ".", "features", ".", "append", "(", "str1", ")", "\n", "i", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.gen_ctr.StatsPolicy.init_tree": [[55, 65], ["open", "f.readlines", "numpy.zeros", "line.replace().replace().split", "policy.util.find", "policy.tree_datastruct.TreeNode", "gen_ctr.StatsPolicy.node_list.append", "policy.util.find.children.append", "int", "line.replace().replace", "line.replace"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.find"], ["", "", "def", "init_tree", "(", "self", ",", "tree_model", ")", ":", "\n", "        ", "with", "open", "(", "tree_model", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "                ", "self", ".", "size", "+=", "1", "\n", "elems", "=", "line", ".", "replace", "(", "' '", ",", "''", ")", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "\",\"", ")", "\n", "node", "=", "util", ".", "find", "(", "self", ".", "root", ",", "elems", "[", "0", "]", ")", "\n", "new_node", "=", "TreeNode", "(", "node", ",", "elems", "[", "1", "]", ",", "int", "(", "elems", "[", "2", "]", ")", ",", "elems", "[", "3", ":", "]", ")", "\n", "self", ".", "node_list", ".", "append", "(", "new_node", ")", "\n", "node", ".", "children", ".", "append", "(", "new_node", ")", "\n", "", "self", ".", "step", "=", "np", ".", "zeros", "(", "self", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.gen_ctr.StatsPolicy.get_creative": [[66, 68], ["None"], "methods", ["None"], ["", "", "def", "get_creative", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.gen_ctr.StatsPolicy.create_random_ctr": [[69, 89], ["policy.util.random_vertex_weight", "policy.util.cartesian_product", "open", "gen_ctr.StatsPolicy.sum_vertex_weight", "open.write", "range", "open.write", "str", "int", "len", "open.write", "range", "float", "str", "i.split", "str", "float", "round"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.random_vertex_weight", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.cartesian_product", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.gen_ctr.StatsPolicy.sum_vertex_weight"], ["", "def", "create_random_ctr", "(", "self", ")", ":", "\n", "# util.random_weight(self.root)", "\n", "        ", "util", ".", "random_vertex_weight", "(", "self", ".", "root", ")", "\n", "value_list", "=", "[", "[", "str", "(", "y", ")", "for", "y", "in", "range", "(", "x", ".", "dimension", ")", "]", "for", "x", "in", "self", ".", "node_list", "]", "\n", "creatives", "=", "util", ".", "cartesian_product", "(", "value_list", ")", "\n", "f", "=", "open", "(", "\"data/ctr_new2.txt\"", ",", "\"w\"", ")", "\n", "id", "=", "10000", "\n", "for", "i", "in", "creatives", ":", "\n", "            ", "t", "=", "self", ".", "sum_vertex_weight", "(", "i", ")", "\n", "if", "t", "<", "-", "50000", ":", "\n", "                ", "continue", "\n", "# t = float(t)/(60.*float(self.size))*6.", "\n", "# ctr = sigmoid(t)/40. + 0.02", "\n", "", "ctr", "=", "0.02", "+", "float", "(", "t", ")", "/", "450", "/", "float", "(", "self", ".", "size", "-", "1", ")", "\n", "f", ".", "write", "(", "str", "(", "id", ")", "+", "\" \"", ")", "\n", "param", "=", "[", "int", "(", "x", ")", "for", "x", "in", "i", ".", "split", "(", "\" \"", ")", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "self", ".", "node_list", ")", ")", ":", "\n", "                ", "f", ".", "write", "(", "self", ".", "node_list", "[", "j", "]", ".", "value", "[", "param", "[", "j", "]", "]", "+", "\" \"", ")", "\n", "", "f", ".", "write", "(", "str", "(", "round", "(", "ctr", ",", "6", ")", ")", "+", "\"\\n\"", ")", "\n", "id", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.gen_ctr.StatsPolicy.sum_vertex_weight": [[90, 101], ["range", "int", "len", "parameters.split"], "methods", ["None"], ["", "", "def", "sum_vertex_weight", "(", "self", ",", "parameters", ")", ":", "\n", "        ", "res", "=", "0", "\n", "# print(parameters)", "\n", "param", "=", "[", "int", "(", "x", ")", "for", "x", "in", "parameters", ".", "split", "(", "\" \"", ")", "]", "\n", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "param", "[", "0", "]", "}", "\n", "for", "j", "in", "range", "(", "1", ",", "len", "(", "param", ")", ")", ":", "\n", "            ", "record", "[", "self", ".", "node_list", "[", "j", "]", ".", "name", "]", "=", "param", "[", "j", "]", "\n", "res", "+=", "3.0", "*", "self", ".", "node_list", "[", "j", "]", ".", "propose_w", "[", "record", "[", "self", ".", "node_list", "[", "j", "]", ".", "parent", ".", "name", "]", "]", "[", "param", "[", "j", "]", "]", "\n", "res", "+=", "self", ".", "node_list", "[", "j", "]", ".", "propose_v", "[", "param", "[", "j", "]", "]", "\n", "# print(param[j],self.node_list[j].propose_v[param[j]])", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.gen_ctr.StatsPolicy.save_tree": [[103, 106], ["open", "gen_ctr.StatsPolicy.root.fprint"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.fprint"], ["", "def", "save_tree", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "f", "=", "open", "(", "filepath", ",", "\"w\"", ")", "\n", "self", ".", "root", ".", "fprint", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.run.sigmoid": [[19, 22], ["numpy.exp"], "function", ["None"], ["def", "sigmoid", "(", "x", ")", ":", "\n", "    ", "s", "=", "1", "/", "(", "1", "+", "np", ".", "exp", "(", "-", "x", ")", ")", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.run.click": [[24, 29], ["float", "random.randint"], "function", ["None"], ["", "def", "click", "(", "ctr", ")", ":", "\n", "    ", "if", "float", "(", "random", ".", "randint", "(", "1", ",", "10000", ")", ")", "/", "10000.", "<", "ctr", ":", "\n", "        ", "return", "1", "\n", "", "else", ":", "\n", "        ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.run.get_pv": [[33, 49], ["open", "f.readlines", "line.split", "str", "res.append", "float"], "function", ["None"], ["def", "get_pv", "(", "path", ",", "num", ")", ":", "\n", "    ", "res", "=", "[", "]", "\n", "t", "=", "0", "\n", "with", "open", "(", "path", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "for", "line", "in", "lines", ":", "\n", "            ", "if", "t", ">=", "num", ":", "\n", "                ", "break", "\n", "", "t", "+=", "1", "\n", "creative", "=", "line", ".", "split", "(", ")", "\n", "str1", "=", "\"\"", "\n", "for", "k", "in", "creative", "[", "0", ":", "-", "2", "]", ":", "\n", "                ", "str1", "=", "str1", "+", "k", "+", "\" \"", "\n", "", "str1", "+=", "str", "(", "creative", "[", "-", "2", "]", ")", "\n", "res", ".", "append", "(", "[", "str1", ",", "float", "(", "creative", "[", "-", "1", "]", ")", "]", ")", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.run.evaluate": [[51, 97], ["policy.get_creative", "range", "ans.append", "regret_ans.append", "range", "policy.recommend", "run.click", "reward_list.append", "regret_list.append", "policy.update", "logger.info", "res.append", "float", "float"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Baseline.get_creative", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.recommend", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.run.click", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.update"], ["", "def", "evaluate", "(", "p_dict", ",", "policy", ",", "best_ctr", ")", ":", "\n", "    ", "global", "ans", "\n", "score", "=", "0.0", "\n", "total_count", "=", "0.0", "\n", "pv_count", "=", "0.0", "\n", "window_cnt", "=", "0.0", "\n", "window_clk", "=", "0.0", "\n", "batch_size", "=", "p_dict", "[", "\"batch_num\"", "]", "\n", "creative_set", "=", "policy", ".", "get_creative", "(", ")", "\n", "reward_list", "=", "[", "]", "\n", "r_sum", "=", "0", "\n", "regret_list", "=", "[", "]", "\n", "res", "=", "[", "]", "\n", "record_time", "=", "[", "0.5", ",", "1", ",", "1.5", ",", "2", ",", "2.5", ",", "3", ",", "3.5", ",", "4", ",", "4.5", ",", "5", ",", "5.5", ",", "6", ",", "6.5", ",", "7", ",", "7.5", ",", "8", ",", "8.5", ",", "9", ",", "9.5", ",", "10", ",", "10.5", ",", "11", ",", "11.5", ",", "12", ",", "12.5", ",", "13", ",", "13.5", ",", "14", ",", "14.5", ",", "15", ",", "15.5", ",", "16", ",", "16.5", ",", "17", ",", "17.5", ",", "18", ",", "18.5", ",", "19", ",", "19.5", ",", "20", ",", "20.5", ",", "21", ",", "21.5", ",", "22", ",", "22.5", ",", "23", ",", "23.5", ",", "24", ",", "24.5", ",", "25", ",", "25.5", ",", "26", ",", "26.5", ",", "27", ",", "27.5", ",", "28", ",", "28.5", ",", "29", ",", "29.5", ",", "30", ",", "30.5", ",", "31", ",", "31.5", ",", "32", ",", "32.5", ",", "33", ",", "33.5", ",", "34", ",", "34.5", ",", "35", ",", "35.5", ",", "36", ",", "36.5", ",", "37", ",", "37.5", ",", "38", ",", "38.5", ",", "39", ",", "39.5", ",", "40", ",", "40.5", ",", "41", ",", "41.5", ",", "42", ",", "42.5", ",", "43", ",", "43.5", ",", "44", ",", "44.5", ",", "45", ",", "45.5", ",", "46", ",", "46.5", ",", "47", ",", "47.5", ",", "48", ",", "48.5", ",", "49", ",", "49.5", ",", "50", ",", "50.5", ",", "51", ",", "51.5", ",", "52", ",", "52.5", ",", "53", ",", "53.5", ",", "54", ",", "54.5", ",", "55", ",", "55.5", ",", "56", ",", "56.5", ",", "57", ",", "57.5", ",", "58", ",", "58.5", ",", "59", ",", "59.5", ",", "60", ",", "60.5", ",", "61", ",", "61.5", ",", "62", ",", "62.5", ",", "63", ",", "63.5", ",", "64", ",", "64.5", ",", "65", ",", "65.5", ",", "66", ",", "66.5", ",", "67", ",", "67.5", ",", "68", ",", "68.5", ",", "69", ",", "69.5", ",", "70", ",", "70.5", ",", "71", ",", "71.5", ",", "72", ",", "72.5", ",", "73", ",", "73.5", ",", "74", ",", "74.5", ",", "75", ",", "75.5", ",", "76", ",", "76.5", ",", "77", ",", "77.5", ",", "78", ",", "78.5", ",", "79", ",", "79.5", ",", "80", ",", "80.5", ",", "81", ",", "81.5", ",", "82", ",", "82.5", ",", "83", ",", "83.5", ",", "84", ",", "84.5", ",", "85", ",", "85.5", ",", "86", ",", "86.5", ",", "87", ",", "87.5", ",", "88", ",", "88.5", ",", "89", ",", "89.5", ",", "90", ",", "90.5", ",", "91", ",", "91.5", ",", "92", ",", "92.5", ",", "93", ",", "93.5", ",", "94", ",", "94.5", ",", "95", ",", "95.5", ",", "96", ",", "96.5", ",", "97", ",", "97.5", ",", "98", ",", "98.5", ",", "99", ",", "99.5", ",", "100", ",", "100.5", ",", "101", ",", "101.5", ",", "102", ",", "102.5", ",", "103", ",", "103.5", ",", "104", ",", "104.5", ",", "105", ",", "105.5", ",", "106", ",", "106.5", ",", "107", ",", "107.5", ",", "108", ",", "108.5", ",", "109", ",", "109.5", ",", "110", ",", "110.5", ",", "111", ",", "111.5", ",", "112", ",", "112.5", ",", "113", ",", "113.5", ",", "114", ",", "114.5", ",", "115", ",", "115.5", ",", "116", ",", "116.5", ",", "117", ",", "117.5", ",", "118", ",", "118.5", ",", "119", ",", "119.5", ",", "120", ",", "120.5", ",", "121", ",", "121.5", ",", "122", ",", "122.5", ",", "123", ",", "123.5", ",", "124", ",", "124.5", ",", "125", ",", "125.5", ",", "126", ",", "126.5", ",", "127", ",", "127.5", ",", "128", ",", "128.5", ",", "129", ",", "129.5", ",", "130", ",", "130.5", ",", "131", ",", "131.5", ",", "132", ",", "132.5", ",", "133", ",", "133.5", ",", "134", ",", "134.5", ",", "135", ",", "135.5", ",", "136", ",", "136.5", ",", "137", ",", "137.5", ",", "138", ",", "138.5", ",", "139", ",", "139.5", ",", "140", ",", "140.5", ",", "141", ",", "141.5", ",", "142", ",", "142.5", ",", "143", ",", "143.5", ",", "144", ",", "144.5", ",", "145", ",", "145.5", ",", "146", ",", "146.5", ",", "147", ",", "147.5", ",", "148", ",", "148.5", ",", "149", ",", "149.5", ",", "150", ",", "150.5", ",", "151", ",", "151.5", ",", "152", ",", "152.5", ",", "153", ",", "153.5", ",", "154", ",", "154.5", ",", "155", ",", "155.5", ",", "156", ",", "156.5", ",", "157", ",", "157.5", ",", "158", ",", "158.5", ",", "159", ",", "159.5", ",", "160", ",", "160.5", ",", "161", ",", "161.5", ",", "162", ",", "162.5", ",", "163", ",", "163.5", ",", "164", ",", "164.5", ",", "165", ",", "165.5", ",", "166", ",", "166.5", ",", "167", ",", "167.5", ",", "168", ",", "168.5", ",", "169", ",", "169.5", ",", "170", ",", "170.5", ",", "171", ",", "171.5", ",", "172", ",", "172.5", ",", "173", ",", "173.5", ",", "174", ",", "174.5", ",", "175", ",", "175.5", ",", "176", ",", "176.5", ",", "177", ",", "177.5", ",", "178", ",", "178.5", ",", "179", ",", "179.5", ",", "180", ",", "180.5", ",", "181", ",", "181.5", ",", "182", ",", "182.5", ",", "183", ",", "183.5", ",", "184", ",", "184.5", ",", "185", ",", "185.5", ",", "186", ",", "186.5", ",", "187", ",", "187.5", ",", "188", ",", "188.5", ",", "189", ",", "189.5", ",", "190", ",", "190.5", ",", "191", ",", "191.5", ",", "192", ",", "192.5", ",", "193", ",", "193.5", ",", "194", ",", "194.5", ",", "195", ",", "195.5", ",", "196", ",", "196.5", ",", "197", ",", "197.5", ",", "198", ",", "198.5", ",", "199", ",", "199.5", ",", "200", ",", "200.5", ",", "201", ",", "201.5", ",", "202", ",", "202.5", ",", "203", ",", "203.5", ",", "204", ",", "204.5", ",", "205", ",", "205.5", ",", "206", ",", "206.5", ",", "207", ",", "207.5", ",", "208", ",", "208.5", ",", "209", ",", "209.5", ",", "210", ",", "210.5", ",", "211", ",", "211.5", ",", "212", ",", "212.5", ",", "213", ",", "213.5", ",", "214", ",", "214.5", ",", "215", ",", "215.5", ",", "216", ",", "216.5", ",", "217", ",", "217.5", ",", "218", ",", "218.5", ",", "219", ",", "219.5", ",", "220", ",", "220.5", ",", "221", ",", "221.5", ",", "222", ",", "222.5", ",", "223", ",", "223.5", ",", "224", ",", "224.5", ",", "225", ",", "225.5", ",", "226", ",", "226.5", ",", "227", ",", "227.5", ",", "228", ",", "228.5", ",", "229", ",", "229.5", ",", "230", ",", "230.5", ",", "231", ",", "231.5", ",", "232", ",", "232.5", ",", "233", ",", "233.5", ",", "234", ",", "234.5", ",", "235", ",", "235.5", ",", "236", ",", "236.5", ",", "237", ",", "237.5", ",", "238", ",", "238.5", ",", "239", ",", "239.5", ",", "240", "]", "\n", "t", "=", "0", "\n", "\n", "\n", "for", "_", "in", "range", "(", "1", ")", ":", "\n", "        ", "for", "pv", "in", "range", "(", "p_dict", "[", "\"pv_num\"", "]", ")", ":", "\n", "            ", "idx", ",", "creative_ctr", "=", "policy", ".", "recommend", "(", "creative_set", ",", "t", ")", "\n", "reward", "=", "click", "(", "creative_ctr", ")", "\n", "if", "reward", "==", "0", ":", "\n", "                ", "r_n", "=", "0", "\n", "", "else", ":", "\n", "                ", "r_n", "=", "1", "\n", "", "reward_list", ".", "append", "(", "[", "idx", ",", "r_n", "]", ")", "\n", "pv_count", "+=", "1", "\n", "total_count", "+=", "1", "\n", "score", "+=", "reward", "\n", "r_sum", "+=", "reward", "\n", "if", "pv_count", "%", "100000", "==", "0", ":", "\n", "                ", "regret_list", ".", "append", "(", "best_ctr", "-", "float", "(", "r_sum", ")", "/", "100000.0", ")", "\n", "r_sum", "=", "0", "\n", "\n", "", "if", "pv_count", "%", "batch_size", "==", "0", ":", "\n", "                ", "t", "=", "1", "\n", "policy", ".", "update", "(", "reward_list", ")", "\n", "reward_list", "=", "[", "]", "\n", "\n", "", "if", "float", "(", "pv_count", ")", "/", "10000.0", "in", "record_time", ":", "\n", "                ", "logger", ".", "info", "(", "'{} ---- ctr:{:5f}'", ".", "format", "(", "pv_count", ",", "score", "/", "pv_count", ")", ")", "\n", "res", ".", "append", "(", "score", "/", "pv_count", ")", "\n", "\n", "\n", "", "", "", "ans", ".", "append", "(", "res", ")", "\n", "regret_ans", ".", "append", "(", "regret_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.run.run": [[99, 142], ["numpy.loadtxt", "policy.baseline.Random", "policy.baseline.Random.get_best_reward", "run.evaluate", "float", "float", "float", "policy.baseline.EpsilonGreedy", "int", "policy.baseline.thompson", "policy.baseline.UCB", "policy.stats_policy.Epsilon1", "policy.stats_policy.Reg_TS", "policy.linucb.LinUCB", "policy.two_folds.Reg2pv", "policy.full_edge.Full_Ts", "policy.linucb.lints", "policy.full_edge.Full_probit", "policy.two_folds.Reg2Ts", "policy.baseline.Random"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.EpsilonGreedy.get_best_reward", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.None.run.evaluate", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson.thompson"], ["", "def", "run", "(", "creative_file", ",", "policy_type", ",", "other", ",", "constraints", ",", "p_dict", ")", ":", "\n", "# load creative parameters into array", "\n", "    ", "creative_np", "=", "np", ".", "loadtxt", "(", "creative_file", ")", "\n", "creative", "=", "{", "}", "\n", "best_ctr", "=", "0", "\n", "for", "art", "in", "creative_np", ":", "\n", "        ", "creative", "[", "int", "(", "art", "[", "0", "]", ")", "]", "=", "[", "float", "(", "x", ")", "for", "x", "in", "art", "[", "1", ":", "]", "]", "\n", "if", "best_ctr", "<", "float", "(", "art", "[", "-", "1", "]", ")", ":", "\n", "            ", "best_ctr", "=", "float", "(", "art", "[", "-", "1", "]", ")", "\n", "", "", "if", "policy_type", "==", "\"Random\"", ":", "\n", "        ", "policy", "=", "Random", "(", "creative", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "\"EGreedy\"", ":", "\n", "        ", "policy", "=", "EpsilonGreedy", "(", "creative", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "\"thompson\"", ":", "\n", "        ", "policy", "=", "thompson", "(", "creative", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "\"ucb\"", ":", "\n", "        ", "policy", "=", "UCB", "(", "creative", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "\"IndEgreedy\"", ":", "\n", "        ", "policy", "=", "Epsilon1", "(", "creative", ",", "other", ",", "constraints", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "\"Edge_TS\"", ":", "\n", "        ", "policy", "=", "Reg_TS", "(", "creative", ",", "other", ",", "constraints", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "\"LinUCB\"", ":", "\n", "        ", "policy", "=", "LinUCB", "(", "creative", ",", "other", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "\"TEgreedy\"", ":", "\n", "        ", "policy", "=", "Reg2pv", "(", "creative", ",", "other", ",", "constraints", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "\"Full_TS\"", ":", "\n", "        ", "policy", "=", "Full_Ts", "(", "creative", ",", "other", ",", "constraints", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "'Vertex_TS'", ":", "\n", "        ", "policy", "=", "lints", "(", "creative", ",", "other", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "'MVT'", ":", "\n", "        ", "policy", "=", "Full_probit", "(", "creative", ",", "other", ",", "constraints", ",", "p_dict", ")", "\n", "", "elif", "policy_type", "==", "\"AES\"", ":", "\n", "        ", "policy", "=", "Reg2Ts", "(", "creative", ",", "other", ",", "constraints", ",", "p_dict", ")", "\n", "", "else", ":", "\n", "        ", "policy", "=", "Random", "(", "creative", ",", "p_dict", ")", "\n", "\n", "", "if", "p_dict", "[", "\"get_best\"", "]", "==", "1", ":", "\n", "        ", "s", "=", "policy", ".", "get_best_reward", "(", ")", "\n", "return", "s", "\n", "", "else", ":", "\n", "        ", "evaluate", "(", "p_dict", ",", "policy", ",", "best_ctr", ")", "\n", "# policy.print()", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.LinUCB.__init__": [[5, 20], ["len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "linucb.LinUCB.get_one_hot", "linucb.LinUCB.set_creative"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.LinUCB.get_one_hot", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Baseline.set_creative"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "p_dict", ")", ":", "\n", "        ", "self", ".", "epsilon", "=", "p_dict", "[", "\"epsilon\"", "]", "\n", "self", ".", "alpha", "=", "p_dict", "[", "\"alpha\"", "]", "# the coefficient of the upper bound", "\n", "self", ".", "index_all", "=", "{", "}", "\n", "creative_len", "=", "len", "(", "creative", ")", "\n", "self", ".", "features", "=", "[", "]", "\n", "self", ".", "ctr", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "\n", "self", ".", "pv", "=", "np", ".", "zeros", "(", "creative_len", ")", "\n", "self", ".", "clk", "=", "np", ".", "zeros", "(", "creative_len", ")", "\n", "self", ".", "get_one_hot", "(", "tree_model", ")", "\n", "self", ".", "set_creative", "(", "creative", ")", "\n", "\n", "self", ".", "total_pv", "=", "0", "\n", "self", ".", "ini_pv", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.LinUCB.set_creative": [[21, 53], ["len", "sum", "numpy.zeros", "numpy.zeros", "numpy.zeros", "str", "linucb.LinUCB.features.append", "numpy.array", "numpy.eye", "linucb.LinUCB.ele[].index", "str", "str", "int"], "methods", ["None"], ["", "def", "set_creative", "(", "self", ",", "creative", ")", ":", "\n", "        ", "i", "=", "0", "\n", "creative_len", "=", "len", "(", "creative", ")", "\n", "self", ".", "full_A", "=", "{", "}", "\n", "self", ".", "theta_a", "=", "{", "}", "\n", "dim", "=", "sum", "(", "self", ".", "num_list", ")", "\n", "self", ".", "feature_arms", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "dim", ")", ")", "\n", "self", ".", "p_arm", "=", "np", ".", "zeros", "(", "(", "creative_len", ")", ")", "\n", "self", ".", "b", "=", "{", "}", "# save the res of ctr+upper bound", "\n", "for", "key", "in", "creative", ":", "\n", "            ", "str1", "=", "\"\"", "\n", "vec_feature", "=", "[", "]", "\n", "for", "k", "in", "creative", "[", "key", "]", "[", "0", ":", "-", "2", "]", ":", "\n", "                ", "str1", "=", "str1", "+", "str", "(", "k", ")", "+", "\" \"", "\n", "", "str1", "+=", "str", "(", "creative", "[", "key", "]", "[", "-", "2", "]", ")", "\n", "ii", "=", "0", "\n", "for", "s", "in", "creative", "[", "key", "]", "[", "1", ":", "-", "1", "]", ":", "\n", "# print(self.num_list[ii],s)", "\n", "                ", "sub_one_hot", "=", "[", "0", "]", "*", "self", ".", "num_list", "[", "ii", "]", "\n", "iidx", "=", "self", ".", "ele", "[", "ii", "]", ".", "index", "(", "str", "(", "int", "(", "s", ")", ")", ")", "\n", "sub_one_hot", "[", "iidx", "]", "=", "1", "\n", "# print(sub_one_hot)", "\n", "vec_feature", "+=", "sub_one_hot", "\n", "ii", "+=", "1", "\n", "", "self", ".", "index_all", "[", "str1", "]", "=", "i", "\n", "self", ".", "features", ".", "append", "(", "str1", ")", "\n", "self", ".", "ctr", "[", "i", "]", "=", "creative", "[", "key", "]", "[", "-", "1", "]", "\n", "\n", "self", ".", "feature_arms", "[", "i", "]", "=", "np", ".", "array", "(", "vec_feature", ")", "\n", "i", "+=", "1", "\n", "", "self", ".", "full_A", "=", "0.01", "*", "np", ".", "eye", "(", "dim", ")", "\n", "self", ".", "b", "=", "np", ".", "zeros", "(", "(", "dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.LinUCB.get_creative": [[54, 56], ["linucb.LinUCB.index_all.keys"], "methods", ["None"], ["", "def", "get_creative", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "index_all", ".", "keys", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.LinUCB.get_one_hot": [[57, 71], ["linucb.LinUCB.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print"], ["", "def", "get_one_hot", "(", "self", ",", "tree_model", ")", ":", "\n", "        ", "self", ".", "num_list", "=", "[", "]", "\n", "self", ".", "ele", "=", "[", "]", "\n", "with", "open", "(", "tree_model", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "for", "line", "in", "lines", ":", "\n", "                ", "line", "=", "line", ".", "split", "(", "\"\\n\"", ")", "[", "0", "]", "\n", "ss", "=", "line", ".", "split", "(", "\", \"", ")", "\n", "num", "=", "int", "(", "ss", "[", "2", "]", ")", "\n", "self", ".", "ele", ".", "append", "(", "ss", "[", "3", ":", "]", ")", "\n", "self", ".", "num_list", ".", "append", "(", "num", ")", "\n", "\n", "", "", "print", "(", "self", ".", "num_list", ")", "\n", "print", "(", "self", ".", "ele", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.LinUCB.update": [[72, 91], ["numpy.linalg.inv", "numpy.matmul", "range", "numpy.matmul", "len", "numpy.matmul", "numpy.matmul", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.matmul", "numpy.transpose", "numpy.sqrt"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "reward_list", ")", ":", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "idx", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "idx", "]", "+=", "1", "\n", "self", ".", "clk", "[", "idx", "]", "+=", "reward", "[", "1", "]", "\n", "\n", "features", "=", "self", ".", "feature_arms", "[", "idx", "]", "# shape (dim,)", "\n", "features_a", "=", "features", "[", "np", ".", "newaxis", ",", ":", "]", "\n", "self", ".", "full_A", "+=", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "features_a", ")", ",", "features_a", ")", "\n", "self", ".", "b", "+=", "reward", "[", "1", "]", "*", "np", ".", "transpose", "(", "features", ")", "\n", "\n", "\n", "", "self", ".", "A_inv", "=", "np", ".", "linalg", ".", "inv", "(", "self", ".", "full_A", ")", "\n", "self", ".", "theta_a", "=", "np", ".", "matmul", "(", "self", ".", "A_inv", ",", "self", ".", "b", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "feature_arms", ")", ")", ":", "\n", "            ", "features", "=", "self", ".", "feature_arms", "[", "i", "]", "\n", "eva_ctr", "=", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "self", ".", "theta_a", ")", ",", "features", ")", "\n", "upper", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "features", ",", "self", ".", "A_inv", ")", ",", "np", ".", "transpose", "(", "features", ")", ")", "\n", "self", ".", "p_arm", "[", "i", "]", "=", "eva_ctr", "+", "self", ".", "alpha", "*", "np", ".", "sqrt", "(", "upper", ")", "\n", "# print(eva_ctr,upper)", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.LinUCB.recommend": [[97, 105], ["numpy.argmax", "random.randint", "len", "int"], "methods", ["None"], ["", "", "def", "recommend", "(", "self", ",", "choices", ",", "t", "=", "1", ")", ":", "\n", "        ", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "\n", "", "self", ".", "index", "=", "np", ".", "argmax", "(", "self", ".", "p_arm", ")", "\n", "# index = random.randint(0, len(choices)-1)", "\n", "return", "self", ".", "features", "[", "int", "(", "self", ".", "index", ")", "]", ",", "self", ".", "ctr", "[", "self", ".", "index", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.LinUCB.print": [[106, 109], ["linucb.LinUCB.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print"], ["", "def", "print", "(", "self", ")", ":", "\n", "# print(self.p_arm)", "\n", "        ", "print", "(", "self", ".", "pv", ",", "self", ".", "clk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.lints.__init__": [[111, 113], ["linucb.LinUCB.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "p_dict", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "creative", ",", "tree_model", ",", "p_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.lints.update": [[114, 129], ["numpy.linalg.inv", "numpy.matmul", "numpy.sqrt", "numpy.matmul", "numpy.diagonal", "numpy.transpose", "numpy.transpose"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "reward_list", ")", ":", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "idx", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "idx", "]", "+=", "1", "\n", "self", ".", "clk", "[", "idx", "]", "+=", "reward", "[", "1", "]", "\n", "\n", "features", "=", "self", ".", "feature_arms", "[", "idx", "]", "# shape (dim,)", "\n", "features_a", "=", "features", "[", "np", ".", "newaxis", ",", ":", "]", "\n", "self", ".", "full_A", "+=", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "features_a", ")", ",", "features_a", ")", "\n", "self", ".", "b", "+=", "reward", "[", "1", "]", "*", "np", ".", "transpose", "(", "features", ")", "\n", "\n", "\n", "", "self", ".", "A_inv", "=", "np", ".", "linalg", ".", "inv", "(", "self", ".", "full_A", ")", "\n", "self", ".", "theta_a", "=", "np", ".", "matmul", "(", "self", ".", "A_inv", ",", "self", ".", "b", ")", "\n", "self", ".", "diag_A_inv", "=", "np", ".", "sqrt", "(", "np", ".", "diagonal", "(", "self", ".", "A_inv", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.linucb.lints.recommend": [[131, 141], ["numpy.matmul", "numpy.argmax", "random.randint", "numpy.random.multivariate_normal", "len", "int"], "methods", ["None"], ["", "def", "recommend", "(", "self", ",", "choices", ",", "t", "=", "1", ")", ":", "\n", "        ", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "weight", "=", "np", ".", "random", ".", "multivariate_normal", "(", "mean", "=", "self", ".", "theta_a", ",", "cov", "=", "self", ".", "alpha", "*", "self", ".", "A_inv", ",", "size", "=", "1", ")", "[", "0", "]", "\n", "# weight = np.random.normal(loc=self.theta_a,scale=self.alpha * self.diag_A_inv)", "\n", "self", ".", "score", "=", "np", ".", "matmul", "(", "self", ".", "feature_arms", ",", "weight", ")", "\n", "self", ".", "index", "=", "np", ".", "argmax", "(", "self", ".", "score", ")", "\n", "# index = random.randint(0, len(choices)-1)", "\n", "return", "self", ".", "features", "[", "int", "(", "self", ".", "index", ")", "]", ",", "self", ".", "ctr", "[", "self", ".", "index", "]", "[", "0", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.__init__": [[10, 34], ["policy.tree_datastruct.TreeNode", "two_folds.Stats2.init_tree", "two_folds.Stats2.set_constraint", "two_folds.Stats2.root.print", "len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "two_folds.Stats2.set_creative"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.init_tree", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.set_constraint", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Baseline.set_creative"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", ":", "\n", "        ", "self", ".", "epsilon", "=", "p_dict", "[", "\"epsilon\"", "]", "\n", "self", ".", "ee", "=", "p_dict", "[", "\"ee\"", "]", "\n", "self", ".", "bias", "=", "p_dict", "[", "\"bias\"", "]", "\n", "self", ".", "root", "=", "TreeNode", "(", "None", ",", "\"t\"", ",", "1", ",", "[", "'0'", "]", ")", "\n", "self", ".", "node_list", "=", "[", "self", ".", "root", "]", "\n", "self", ".", "size", "=", "1", "\n", "self", ".", "step", "=", "[", "]", "\n", "self", ".", "record", "=", "{", "}", "\n", "self", ".", "features", "=", "[", "]", "\n", "self", ".", "total_pv", "=", "0", "\n", "self", ".", "constraint_path", "=", "constraints", "\n", "if", "creative", "!=", "\"\"", ":", "\n", "            ", "self", ".", "index_all", "=", "{", "}", "\n", "creative_len", "=", "len", "(", "creative", ")", "\n", "self", ".", "b_vec", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "pv", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "clk", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "ctr", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "set_creative", "(", "creative", ")", "\n", "", "self", ".", "init_tree", "(", "tree_model", ")", "\n", "self", ".", "set_constraint", "(", ")", "\n", "self", ".", "root", ".", "print", "(", ")", "\n", "self", ".", "alpha", "=", "p_dict", "[", "\"alpha\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.set_creative": [[36, 47], ["str", "two_folds.Stats2.features.append", "str"], "methods", ["None"], ["", "def", "set_creative", "(", "self", ",", "creative", ")", ":", "\n", "        ", "i", "=", "0", "\n", "for", "key", "in", "creative", ":", "\n", "            ", "str1", "=", "\"\"", "\n", "for", "k", "in", "creative", "[", "key", "]", "[", "0", ":", "-", "2", "]", ":", "\n", "                ", "str1", "=", "str1", "+", "str", "(", "k", ")", "+", "\" \"", "\n", "", "str1", "+=", "str", "(", "creative", "[", "key", "]", "[", "-", "2", "]", ")", "\n", "self", ".", "index_all", "[", "str1", "]", "=", "i", "\n", "self", ".", "ctr", "[", "i", "]", "=", "creative", "[", "key", "]", "[", "-", "1", "]", "\n", "self", ".", "features", ".", "append", "(", "str1", ")", "\n", "i", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.init_tree": [[48, 58], ["open", "f.readlines", "numpy.zeros", "line.replace().replace().split", "policy.util.find", "policy.tree_datastruct.TreeNode", "two_folds.Stats2.node_list.append", "policy.util.find.children.append", "int", "line.replace().replace", "line.replace"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.find"], ["", "", "def", "init_tree", "(", "self", ",", "tree_model", ")", ":", "\n", "        ", "with", "open", "(", "tree_model", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "                ", "self", ".", "size", "+=", "1", "\n", "elems", "=", "line", ".", "replace", "(", "' '", ",", "''", ")", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "\",\"", ")", "\n", "node", "=", "util", ".", "find", "(", "self", ".", "root", ",", "elems", "[", "0", "]", ")", "\n", "new_node", "=", "TreeNode", "(", "node", ",", "elems", "[", "1", "]", ",", "int", "(", "elems", "[", "2", "]", ")", ",", "elems", "[", "3", ":", "]", ")", "\n", "self", ".", "node_list", ".", "append", "(", "new_node", ")", "\n", "node", ".", "children", ".", "append", "(", "new_node", ")", "\n", "", "self", ".", "step", "=", "np", ".", "zeros", "(", "self", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.get_creative": [[59, 61], ["None"], "methods", ["None"], ["", "", "def", "get_creative", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.set_constraint": [[62, 78], ["open", "f.readlines", "range", "lines[].replace().replace().split", "policy.util.find", "numpy.zeros", "range", "int", "lines[].replace().split", "range", "int", "lines[].replace().replace", "int", "int", "int", "int", "lines[].replace", "int", "lines[].replace"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.find"], ["", "def", "set_constraint", "(", "self", ")", ":", "\n", "        ", "file_path", "=", "self", ".", "constraint_path", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "i", "=", "0", "\n", "for", "_", "in", "range", "(", "self", ".", "size", "-", "1", ")", ":", "\n", "                ", "elems", "=", "lines", "[", "i", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "\",\"", ")", "\n", "node", "=", "util", ".", "find", "(", "self", ".", "root", ",", "elems", "[", "0", "]", ")", "\n", "node", ".", "constraint", "=", "np", ".", "zeros", "(", "(", "int", "(", "elems", "[", "1", "]", ")", ",", "int", "(", "elems", "[", "2", "]", ")", ")", ")", "\n", "for", "j", "in", "range", "(", "int", "(", "elems", "[", "1", "]", ")", ")", ":", "\n", "                    ", "datas", "=", "lines", "[", "i", "+", "j", "+", "1", "]", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", ")", "\n", "for", "t", "in", "range", "(", "int", "(", "elems", "[", "2", "]", ")", ")", ":", "\n", "                        ", "node", ".", "constraint", "[", "j", "]", "[", "t", "]", "=", "int", "(", "datas", "[", "t", "]", ")", "\n", "if", "int", "(", "datas", "[", "t", "]", ")", "==", "0", ":", "\n", "                            ", "node", ".", "weight", "[", "j", "]", "[", "t", "]", "=", "-", "1000000", "\n", "", "", "", "i", "+=", "int", "(", "elems", "[", "1", "]", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.recommend": [[79, 124], ["random.randint", "policy.util.dynamic2search", "policy.util.dynamic2search", "str", "random.random", "float", "len", "random.randint", "random.random", "random.randint", "str", "random.randint", "random.randint", "random.randint", "float", "int", "int"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic2search", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic2search"], ["", "", "", "def", "recommend", "(", "self", ",", "a", "=", "None", ",", "t", "=", "1", ")", ":", "\n", "        ", "epsilon", "=", "self", ".", "epsilon", "\n", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "if", "self", ".", "ee", "==", "2", ":", "\n", "            ", "util", ".", "dynamic2search", "(", "self", ".", "root", ",", "self", ".", "epsilon", ")", "\n", "epsilon", "=", "0", "\n", "", "else", ":", "\n", "            ", "util", ".", "dynamic2search", "(", "self", ".", "root", ",", "0", ")", "\n", "", "i", "=", "1", "\n", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "if", "self", ".", "ee", "!=", "1", ":", "\n", "            ", "if", "random", ".", "random", "(", ")", "<", "1", "-", "epsilon", ":", "\n", "                ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "", "else", ":", "\n", "                ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "", "", "else", ":", "\n", "            ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                ", "if", "random", ".", "random", "(", ")", ">", "1", "-", "epsilon", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "", "else", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "# get defined ctr", "\n", "", "", "str1", "=", "\"\"", "\n", "i", "=", "0", "\n", "for", "node", "in", "self", ".", "node_list", "[", ":", "-", "1", "]", ":", "\n", "            ", "str1", "=", "str1", "+", "str", "(", "float", "(", "node", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "+", "\" \"", "\n", "i", "+=", "1", "\n", "", "str1", "=", "str1", "+", "str", "(", "float", "(", "self", ".", "node_list", "[", "-", "1", "]", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "\n", "return", "str1", ",", "self", ".", "ctr", "[", "self", ".", "index_all", "[", "str1", "]", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.curr_best_creative": [[125, 140], ["policy.util.dynamic_search", "str", "float", "str", "float", "int", "int"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic_search"], ["", "def", "curr_best_creative", "(", "self", ")", ":", "\n", "        ", "util", ".", "dynamic_search", "(", "self", ".", "root", ",", "0", ")", "\n", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "i", "=", "1", "\n", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "            ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "str1", "=", "\"\"", "\n", "i", "=", "0", "\n", "for", "node", "in", "self", ".", "node_list", "[", ":", "-", "1", "]", ":", "\n", "            ", "str1", "=", "str1", "+", "str", "(", "float", "(", "node", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "+", "\" \"", "\n", "i", "+=", "1", "\n", "", "str1", "=", "str1", "+", "str", "(", "float", "(", "self", ".", "node_list", "[", "-", "1", "]", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "\n", "return", "self", ".", "index_all", "[", "str1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.set_pv_info": [[141, 149], ["idx.split", "range", "len", "range", "len", "float", "float"], "methods", ["None"], ["", "def", "set_pv_info", "(", "self", ",", "idx", ")", ":", "\n", "        ", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "params", "=", "idx", ".", "split", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "params", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "node_list", "[", "i", "]", ".", "value", ")", ")", ":", "\n", "                ", "if", "float", "(", "self", ".", "node_list", "[", "i", "]", ".", "value", "[", "j", "]", ")", "==", "float", "(", "params", "[", "i", "]", ")", ":", "\n", "                    ", "self", ".", "record", "[", "self", ".", "node_list", "[", "i", "]", ".", "name", "]", "=", "j", "\n", "self", ".", "step", "[", "i", "]", "=", "j", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.get_A_matrix": [[150, 210], ["policy.util.cartesian_product", "numpy.cumsum", "range", "numpy.mat", "open", "f.readlines", "sum", "len", "two_folds.Stats2.sum_weight", "numpy.zeros", "range", "range", "numpy.mat.append", "line.replace().replace().split", "int", "node_features.append", "node_num.append", "node_list.append", "str", "int", "len", "numpy.zeros.tolist", "int", "len", "pos.append", "pos.append", "range", "i.split", "len", "line.replace().replace", "line.replace", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.cartesian_product", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.sum_weight"], ["", "", "", "", "def", "get_A_matrix", "(", "self", ",", "tree_model", ")", ":", "\n", "        ", "pos", "=", "[", "]", "\n", "leng", "=", "0", "\n", "parent", "=", "{", "\"t\"", ":", "None", "}", "\n", "record", "=", "{", "\"t\"", ":", "1", "}", "\n", "node_num", "=", "[", "1", "]", "\n", "node_features", "=", "[", "[", "\"0\"", "]", "]", "\n", "node_list", "=", "[", "\"t\"", "]", "\n", "index", "=", "{", "}", "\n", "with", "open", "(", "tree_model", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "last_len", "=", "0", "\n", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "                ", "elems", "=", "line", ".", "replace", "(", "' '", ",", "''", ")", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "\",\"", ")", "\n", "record", "[", "elems", "[", "1", "]", "]", "=", "int", "(", "elems", "[", "2", "]", ")", "\n", "parent", "[", "elems", "[", "1", "]", "]", "=", "elems", "[", "0", "]", "\n", "feature", "=", "[", "x", "for", "x", "in", "elems", "[", "3", ":", "]", "]", "\n", "node_features", ".", "append", "(", "feature", ")", "\n", "node_num", ".", "append", "(", "int", "(", "elems", "[", "2", "]", ")", ")", "\n", "node_list", ".", "append", "(", "elems", "[", "1", "]", ")", "\n", "if", "len", "(", "pos", ")", "==", "0", ":", "\n", "                    ", "pos", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                    ", "last_len", "+=", "pos", "[", "len", "(", "pos", ")", "-", "1", "]", "\n", "pos", ".", "append", "(", "last_len", ")", "\n", "", "last_len", "=", "record", "[", "elems", "[", "0", "]", "]", "*", "record", "[", "elems", "[", "1", "]", "]", "\n", "leng", "+=", "last_len", "\n", "\n", "", "", "res", "=", "[", "]", "\n", "value_list", "=", "[", "[", "str", "(", "y", ")", "for", "y", "in", "range", "(", "x", ")", "]", "for", "x", "in", "node_num", "]", "\n", "creatives", "=", "util", ".", "cartesian_product", "(", "value_list", ")", "\n", "row_cnt", "=", "0", "\n", "node_cum", "=", "np", ".", "cumsum", "(", "node_num", ")", "\n", "node_bias", "=", "sum", "(", "node_num", ")", "-", "1", "\n", "leng", "+=", "node_bias", "\n", "self", ".", "node_bias", "=", "node_bias", "\n", "# print(node_cum)", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "node_list", "[", "1", ":", "]", ")", ")", ":", "\n", "            ", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "pos", "=", "pos", "[", "i", "]", "\n", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "self_pos", "=", "node_cum", "[", "i", "]", "-", "1", "\n", "# print(self.node_list[i+1].name,self.node_list[i+1].value,self.node_list[i+1].pos,self.node_list[i+1].self_pos)", "\n", "", "for", "i", "in", "creatives", ":", "\n", "            ", "t", "=", "self", ".", "sum_weight", "(", "i", ")", "\n", "if", "t", "<", "-", "50000", ":", "\n", "                ", "continue", "\n", "", "param", "=", "[", "int", "(", "x", ")", "for", "x", "in", "i", ".", "split", "(", "\" \"", ")", "]", "\n", "temp", "=", "np", ".", "zeros", "(", "leng", ")", "\n", "record2", "=", "{", "\"t\"", ":", "0", "}", "\n", "for", "j", "in", "range", "(", "1", ",", "len", "(", "param", ")", ")", ":", "\n", "                ", "record2", "[", "node_list", "[", "j", "]", "]", "=", "param", "[", "j", "]", "\n", "temp", "[", "node_cum", "[", "j", "-", "1", "]", "-", "1", "+", "param", "[", "j", "]", "]", "=", "1", "\n", "temp", "[", "node_bias", "+", "pos", "[", "j", "-", "1", "]", "+", "param", "[", "j", "]", "+", "record2", "[", "parent", "[", "node_list", "[", "j", "]", "]", "]", "*", "node_num", "[", "j", "]", "]", "=", "1", "\n", "", "str1", "=", "\"\"", "\n", "for", "j", "in", "range", "(", "len", "(", "node_list", ")", "-", "1", ")", ":", "\n", "                ", "str1", "=", "str1", "+", "node_features", "[", "j", "]", "[", "param", "[", "j", "]", "]", "+", "\" \"", "\n", "", "str1", "=", "str1", "+", "node_features", "[", "len", "(", "node_list", ")", "-", "1", "]", "[", "param", "[", "len", "(", "node_list", ")", "-", "1", "]", "]", "\n", "index", "[", "str1", "]", "=", "row_cnt", "\n", "row_cnt", "+=", "1", "\n", "res", ".", "append", "(", "temp", ".", "tolist", "(", ")", ")", "\n", "", "res", "=", "np", ".", "mat", "(", "res", ")", "\n", "return", "res", ",", "index", ",", "leng", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.sum_weight": [[211, 219], ["range", "int", "len", "parameters.split"], "methods", ["None"], ["", "def", "sum_weight", "(", "self", ",", "parameters", ")", ":", "\n", "        ", "res", "=", "0", "\n", "param", "=", "[", "int", "(", "x", ")", "for", "x", "in", "parameters", ".", "split", "(", "\" \"", ")", "]", "\n", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "param", "[", "0", "]", "}", "\n", "for", "j", "in", "range", "(", "1", ",", "len", "(", "param", ")", ")", ":", "\n", "            ", "record", "[", "self", ".", "node_list", "[", "j", "]", ".", "name", "]", "=", "param", "[", "j", "]", "\n", "res", "+=", "self", ".", "node_list", "[", "j", "]", ".", "weight", "[", "record", "[", "self", ".", "node_list", "[", "j", "]", ".", "parent", ".", "name", "]", "]", "[", "param", "[", "j", "]", "]", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Stats2.panduan": [[220, 225], ["range", "int"], "methods", ["None"], ["", "def", "panduan", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "1", ",", "self", ".", "size", ")", ":", "\n", "            ", "pos", "=", "int", "(", "self", ".", "step", "[", "i", "]", ")", "\n", "if", "self", ".", "node_list", "[", "i", "]", ".", "weight", "[", "self", ".", "record", "[", "self", ".", "node_list", "[", "i", "]", ".", "parent", ".", "name", "]", "]", "[", "pos", "]", "<", "-", "50000", ":", "\n", "                ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Reg2pv.__init__": [[227, 232], ["two_folds.Stats2.__init__", "two_folds.Reg2pv.get_A_matrix", "numpy.linalg.pinv", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.get_A_matrix"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", ":", "\n", "        ", "super", "(", "Reg2pv", ",", "self", ")", ".", "__init__", "(", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", "\n", "self", ".", "mtx_A", ",", "self", ".", "idx_for_ctr", ",", "self", ".", "leng", "=", "self", ".", "get_A_matrix", "(", "tree_model", ")", "\n", "self", ".", "mtx_A_inv", "=", "np", ".", "linalg", ".", "pinv", "(", "self", ".", "mtx_A", ")", "\n", "self", ".", "weight_vec", "=", "np", ".", "zeros", "(", "(", "self", ".", "leng", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Reg2pv.update": [[233, 249], ["numpy.shape", "numpy.matmul", "numpy.linalg.pinv", "numpy.matmul", "numpy.matmul", "two_folds.Reg2pv.set_weight", "numpy.eye", "numpy.matmul", "numpy.matmul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.set_weight"], ["", "def", "update", "(", "self", ",", "reward_list", ",", "pv_type", "=", "True", ")", ":", "\n", "# print(self.weight_vec)", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "curr", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "curr", "]", "+=", "1", "\n", "self", ".", "clk", "[", "curr", "]", "+=", "reward", "[", "1", "]", "\n", "beta_clk", "=", "self", ".", "clk", "[", "curr", "]", "\n", "beta_pv", "=", "self", ".", "pv", "[", "curr", "]", "\n", "self", ".", "b_vec", "[", "curr", "]", "=", "beta_clk", "/", "beta_pv", "-", "self", ".", "bias", "\n", "", "(", "s", ",", "t", ")", "=", "np", ".", "shape", "(", "self", ".", "pv", ")", "\n", "weight_mtx", "=", "self", ".", "pv", "*", "np", ".", "eye", "(", "s", ")", "\n", "mtx", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "mtx_A", ".", "T", ",", "weight_mtx", ")", ",", "self", ".", "mtx_A", ")", "\n", "inv_mtx", "=", "np", ".", "linalg", ".", "pinv", "(", "mtx", ")", "\n", "self", ".", "mtx_A_inv", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "inv_mtx", ",", "self", ".", "mtx_A", ".", "T", ")", ",", "weight_mtx", ")", "\n", "self", ".", "weight_vec", "=", "np", ".", "matmul", "(", "self", ".", "mtx_A_inv", ",", "self", ".", "b_vec", ")", "\n", "self", ".", "set_weight", "(", "self", ".", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Reg2pv.set_weight": [[250, 263], ["node.is_root", "range", "two_folds.Reg2pv.set_weight", "range"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.is_root", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.set_weight"], ["", "def", "set_weight", "(", "self", ",", "node", ")", ":", "\n", "        ", "if", "not", "node", ".", "is_root", "(", ")", ":", "\n", "            ", "(", "w", ",", "h", ")", "=", "node", ".", "weight", ".", "shape", "\n", "for", "j", "in", "range", "(", "h", ")", ":", "\n", "                ", "node", ".", "self_weight", "[", "j", "]", "=", "self", ".", "weight_vec", "[", "node", ".", "self_pos", "+", "j", "]", "\n", "# print(node.name,node.self_weight,w,h)", "\n", "for", "i", "in", "range", "(", "w", ")", ":", "\n", "                    ", "if", "node", ".", "weight", "[", "i", "]", "[", "j", "]", "<", "-", "10000", ":", "\n", "                        ", "continue", "\n", "", "node", ".", "weight", "[", "i", "]", "[", "j", "]", "=", "self", ".", "weight_vec", "[", "self", ".", "node_bias", "+", "node", ".", "pos", "+", "i", "*", "h", "+", "j", "]", "\n", "", "", "", "for", "nex", "in", "node", ".", "children", ":", "\n", "            ", "self", ".", "set_weight", "(", "nex", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Reg2Ts.__init__": [[281, 286], ["two_folds.Reg2pv.__init__", "numpy.ones", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", ":", "\n", "        ", "super", "(", "Reg2Ts", ",", "self", ")", ".", "__init__", "(", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", "\n", "self", ".", "inv_mtx", "=", "np", ".", "ones", "(", "(", "self", ".", "leng", ",", "self", ".", "leng", ")", ")", "\n", "self", ".", "expected_weight", "=", "np", ".", "zeros", "(", "(", "self", ".", "leng", ")", ")", "\n", "self", ".", "search_time", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Reg2Ts.update": [[287, 310], ["numpy.shape", "numpy.linalg.pinv", "numpy.matmul", "numpy.matmul", "numpy.eye", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.eye"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "reward_list", ",", "pv_type", "=", "True", ")", ":", "\n", "# print(np.linalg.norm(self.inv_mtx))", "\n", "# print(self.expected_weight)", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "curr", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "curr", "]", "+=", "1", "\n", "self", ".", "clk", "[", "curr", "]", "+=", "reward", "[", "1", "]", "\n", "beta_clk", "=", "self", ".", "clk", "[", "curr", "]", "\n", "beta_pv", "=", "self", ".", "pv", "[", "curr", "]", "\n", "self", ".", "b_vec", "[", "curr", "]", "=", "beta_clk", "/", "beta_pv", "-", "self", ".", "bias", "\n", "\n", "", "bias_n", "=", "1", "\n", "\n", "(", "s", ",", "t", ")", "=", "np", ".", "shape", "(", "self", ".", "pv", ")", "\n", "weight_mtx", "=", "self", ".", "pv", "*", "np", ".", "eye", "(", "s", ")", "\n", "mtx", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "mtx_A", ".", "T", ",", "weight_mtx", ")", ",", "self", ".", "mtx_A", ")", "+", "0.1", "*", "np", ".", "eye", "(", "self", ".", "leng", ")", "\n", "\n", "# mtx = np.matmul(self.mtx_A.T, self.mtx_A)/bias_n/bias_n + 1/bias_w/bias_w        ", "\n", "self", ".", "inv_mtx", "=", "np", ".", "linalg", ".", "pinv", "(", "mtx", ")", "\n", "\n", "sss", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "inv_mtx", ",", "self", ".", "mtx_A", ".", "T", ")", ",", "weight_mtx", ")", "\n", "www", "=", "np", ".", "matmul", "(", "sss", ",", "self", ".", "b_vec", ")", "\n", "self", ".", "expected_weight", "=", "www", ".", "T", ".", "A", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.two_folds.Reg2Ts.recommend": [[311, 363], ["two_folds.Reg2Ts.set_weight", "time.clock", "random.randint", "numpy.random.multivariate_normal", "policy.util.dynamic2search", "policy.util.dynamic2search", "time.clock", "str", "random.random", "float", "len", "random.randint", "random.random", "random.randint", "str", "random.randint", "random.randint", "random.randint", "float", "int", "int"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.set_weight", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic2search", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic2search"], ["", "def", "recommend", "(", "self", ",", "a", "=", "None", ",", "t", "=", "1", ")", ":", "\n", "        ", "epsilon", "=", "self", ".", "epsilon", "\n", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "self", ".", "weight_vec", "=", "np", ".", "random", ".", "multivariate_normal", "(", "mean", "=", "self", ".", "expected_weight", ",", "cov", "=", "self", ".", "alpha", "*", "self", ".", "inv_mtx", ",", "size", "=", "1", ")", "[", "0", "]", "\n", "# total_ctr = np.matmul(self.mtx_A,self.weight_vec)", "\n", "# idx = np.argmax(total_ctr)", "\n", "# return self.features[idx],self.ctr[idx]", "\n", "self", ".", "set_weight", "(", "self", ".", "root", ")", "\n", "t1", "=", "time", ".", "clock", "(", ")", "\n", "if", "self", ".", "ee", "==", "2", ":", "\n", "            ", "util", ".", "dynamic2search", "(", "self", ".", "root", ",", "self", ".", "epsilon", ")", "\n", "epsilon", "=", "0", "\n", "", "else", ":", "\n", "            ", "util", ".", "dynamic2search", "(", "self", ".", "root", ",", "0", ")", "\n", "", "i", "=", "1", "\n", "self", ".", "search_time", "+=", "time", ".", "clock", "(", ")", "-", "t1", "\n", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "if", "self", ".", "ee", "!=", "1", ":", "\n", "            ", "if", "random", ".", "random", "(", ")", "<", "1", "-", "epsilon", ":", "\n", "                ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "", "else", ":", "\n", "                ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "", "", "else", ":", "\n", "            ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                ", "if", "random", ".", "random", "(", ")", ">", "1", "-", "epsilon", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "", "else", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "# get defined ctr", "\n", "", "", "str1", "=", "\"\"", "\n", "i", "=", "0", "\n", "for", "node", "in", "self", ".", "node_list", "[", ":", "-", "1", "]", ":", "\n", "            ", "str1", "=", "str1", "+", "str", "(", "float", "(", "node", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "+", "\" \"", "\n", "i", "+=", "1", "\n", "", "str1", "=", "str1", "+", "str", "(", "float", "(", "self", ".", "node_list", "[", "-", "1", "]", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "\n", "return", "str1", ",", "self", ".", "ctr", "[", "self", ".", "index_all", "[", "str1", "]", "]", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.__init__": [[4, 29], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "parent", ",", "name", ",", "num", ",", "value", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "parent", "=", "parent", "\n", "self", ".", "children", "=", "[", "]", "\n", "self", ".", "pos", "=", "0", "\n", "self", ".", "dimension", "=", "num", "\n", "self", ".", "dynamic_arr", "=", "[", "]", "\n", "self", ".", "added_weight", "=", "[", "]", "\n", "self", ".", "constraint", "=", "[", "]", "\n", "self", ".", "pv", "=", "np", ".", "zeros", "(", "num", ")", "\n", "self", ".", "clk", "=", "np", ".", "zeros", "(", "num", ")", "\n", "self", ".", "self_weight", "=", "np", ".", "zeros", "(", "num", ")", "\n", "self", ".", "self_pos", "=", "0", "\n", "if", "parent", "is", "None", ":", "\n", "            ", "self", ".", "weight", "=", "[", "]", "\n", "self", ".", "value", "=", "value", "\n", "self", ".", "pv_num", "=", "np", ".", "zeros", "(", "num", ")", "\n", "self", ".", "clk_num", "=", "np", ".", "zeros", "(", "num", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "weight", "=", "np", ".", "zeros", "(", "(", "self", ".", "parent", ".", "dimension", ",", "num", ")", ")", "\n", "self", ".", "value", "=", "value", "\n", "self", ".", "pv_num", "=", "np", ".", "zeros", "(", "(", "self", ".", "parent", ".", "dimension", ",", "num", ")", ")", "\n", "self", ".", "clk_num", "=", "np", ".", "zeros", "(", "(", "self", ".", "parent", ".", "dimension", ",", "num", ")", ")", "\n", "", "self", ".", "propose_w", "=", "[", "]", "\n", "self", ".", "propose_v", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.is_leaf": [[31, 33], ["None"], "methods", ["None"], ["", "def", "is_leaf", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "children", "==", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.is_root": [[34, 36], ["None"], "methods", ["None"], ["", "def", "is_root", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "parent", "is", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.print": [[37, 45], ["tree_datastruct.TreeNode.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print"], ["", "def", "print", "(", "self", ")", ":", "\n", "        ", "print", "(", "self", ".", "name", ")", "\n", "print", "(", "self", ".", "weight", ")", "\n", "print", "(", "self", ".", "dynamic_arr", ")", "\n", "print", "(", "self", ".", "self_weight", ")", "\n", "for", "nex", "in", "self", ".", "children", ":", "\n", "            ", "nex", ".", "print", "(", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.fprint": [[46, 55], ["f.write", "f.write", "f.write", "f.write", "nex.fprint", "str"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.fprint"], ["", "def", "fprint", "(", "self", ",", "f", ")", ":", "\n", "        ", "f", ".", "write", "(", "self", ".", "name", ")", "\n", "f", ".", "write", "(", "'\\n'", ")", "\n", "for", "row", "in", "self", ".", "propose_w", ":", "\n", "            ", "f", ".", "write", "(", "' '", ".", "join", "(", "[", "str", "(", "num", ")", "for", "num", "in", "row", "]", ")", ")", "\n", "f", ".", "write", "(", "'\\n'", ")", "\n", "", "for", "nex", "in", "self", ".", "children", ":", "\n", "            ", "nex", ".", "fprint", "(", "f", ")", "\n", "", "return", "\n", "", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Reg.__init__": [[9, 27], ["len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "full_edge.Full_Reg.set_creative"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Baseline.set_creative"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", ":", "\n", "        ", "self", ".", "epsilon", "=", "p_dict", "[", "\"epsilon\"", "]", "\n", "self", ".", "ee", "=", "p_dict", "[", "\"ee\"", "]", "\n", "self", ".", "size", "=", "1", "\n", "self", ".", "step", "=", "[", "]", "\n", "self", ".", "record", "=", "{", "}", "\n", "self", ".", "features", "=", "[", "]", "\n", "self", ".", "total_pv", "=", "0", "\n", "self", ".", "constraint_path", "=", "constraints", "\n", "if", "creative", "!=", "\"\"", ":", "\n", "            ", "self", ".", "index_all", "=", "{", "}", "\n", "creative_len", "=", "len", "(", "creative", ")", "\n", "self", ".", "b_vec", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "pv", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "clk", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "ctr", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "set_creative", "(", "creative", ")", "\n", "", "self", ".", "alpha", "=", "p_dict", "[", "\"alpha\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Reg.set_creative": [[28, 40], ["full_edge.Full_Reg.set_full_feat", "str", "full_edge.Full_Reg.features.append", "str"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Reg.set_full_feat"], ["", "def", "set_creative", "(", "self", ",", "creative", ")", ":", "\n", "        ", "i", "=", "0", "\n", "for", "key", "in", "creative", ":", "\n", "            ", "str1", "=", "\"\"", "\n", "for", "k", "in", "creative", "[", "key", "]", "[", "0", ":", "-", "2", "]", ":", "\n", "                ", "str1", "=", "str1", "+", "str", "(", "k", ")", "+", "\" \"", "\n", "", "str1", "+=", "str", "(", "creative", "[", "key", "]", "[", "-", "2", "]", ")", "\n", "self", ".", "index_all", "[", "str1", "]", "=", "i", "\n", "self", ".", "ctr", "[", "i", "]", "=", "creative", "[", "key", "]", "[", "-", "1", "]", "\n", "self", ".", "features", ".", "append", "(", "str1", ")", "\n", "i", "+=", "1", "\n", "", "self", ".", "set_full_feat", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Reg.set_full_feat": [[41, 83], ["numpy.array", "numpy.shape", "range", "print", "numpy.cumsum", "sklearn.preprocessing.OneHotEncoder", "sklearn.preprocessing.OneHotEncoder.fit_transform().toarray", "print", "line.split.split.split", "X.append", "numpy.unique", "enumerate", "encode_list.append", "len", "fields_offset.append", "range", "numpy.array", "numpy.concatenate", "new_feature.append", "int", "numpy.unique", "len", "range", "sklearn.preprocessing.OneHotEncoder.fit_transform", "float", "len", "numpy.concatenate.append"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print"], ["", "def", "set_full_feat", "(", "self", ")", ":", "\n", "        ", "X", "=", "[", "]", "\n", "# print(self.features)", "\n", "for", "line", "in", "self", ".", "features", ":", "\n", "            ", "line", "=", "line", ".", "split", "(", ")", "\n", "encode", "=", "[", "int", "(", "float", "(", "x", ")", ")", "for", "x", "in", "line", "]", "\n", "X", ".", "append", "(", "encode", ")", "\n", "\n", "", "x_array", "=", "np", ".", "array", "(", "X", ")", "\n", "_", ",", "fields", "=", "np", ".", "shape", "(", "x_array", ")", "\n", "self", ".", "fields", "=", "fields", "\n", "fields_offset", "=", "[", "0", "]", "\n", "encode_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "fields", ")", ":", "\n", "            ", "t", "=", "np", ".", "unique", "(", "x_array", "[", ":", ",", "i", "]", ")", "\n", "encode_dict", "=", "{", "}", "\n", "for", "idx", ",", "item", "in", "enumerate", "(", "t", ")", ":", "\n", "# print(idx,item)", "\n", "                ", "encode_dict", "[", "item", "]", "=", "idx", "\n", "", "encode_list", ".", "append", "(", "encode_dict", ")", "\n", "font_len", "=", "len", "(", "np", ".", "unique", "(", "x_array", "[", ":", ",", "i", "]", ")", ")", "\n", "fields_offset", ".", "append", "(", "font_len", ")", "\n", "\n", "", "print", "(", "fields_offset", ")", "\n", "self", ".", "fields_offset", "=", "fields_offset", "[", "1", ":", "]", "\n", "cum_offset", "=", "np", ".", "cumsum", "(", "fields_offset", ")", "\n", "\n", "new_feature", "=", "[", "]", "\n", "for", "x", "in", "X", ":", "\n", "# feature of node is determined", "\n", "            ", "feat", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "x", ")", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "x", ")", ")", ":", "\n", "# print(i,j,x[i],x[j],fields_offset[i],fields_offset[j],x[i]*fields_offset[j] + x[j],x[i]*fields_offset[i] + x[j])", "\n", "                    ", "feat", ".", "append", "(", "x", "[", "i", "]", "*", "fields_offset", "[", "j", "+", "1", "]", "+", "x", "[", "j", "]", ")", "\n", "", "", "feat", "=", "np", ".", "array", "(", "feat", ")", "\n", "feat", "=", "np", ".", "concatenate", "(", "(", "x", ",", "feat", ")", ")", "\n", "new_feature", ".", "append", "(", "feat", ")", "\n", "\n", "", "one_hot", "=", "preprocessing", ".", "OneHotEncoder", "(", "categories", "=", "'auto'", ")", "\n", "self", ".", "mtx_A", "=", "one_hot", ".", "fit_transform", "(", "new_feature", ")", ".", "toarray", "(", ")", "\n", "print", "(", "self", ".", "mtx_A", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Reg.get_creative": [[84, 86], ["None"], "methods", ["None"], ["", "def", "get_creative", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Reg.update": [[87, 103], ["numpy.shape", "numpy.matmul", "numpy.linalg.pinv", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.eye", "numpy.matmul", "numpy.matmul"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "reward_list", ",", "pv_type", "=", "True", ")", ":", "\n", "# print(self.weight_vec)", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "curr", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "curr", "]", "+=", "1", "\n", "self", ".", "clk", "[", "curr", "]", "+=", "reward", "[", "1", "]", "\n", "beta_clk", "=", "self", ".", "clk", "[", "curr", "]", "\n", "beta_pv", "=", "self", ".", "pv", "[", "curr", "]", "\n", "self", ".", "b_vec", "[", "curr", "]", "=", "beta_clk", "/", "beta_pv", "\n", "", "(", "s", ",", "t", ")", "=", "np", ".", "shape", "(", "self", ".", "pv", ")", "\n", "weight_mtx", "=", "self", ".", "pv", "*", "np", ".", "eye", "(", "s", ")", "\n", "mtx", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "mtx_A", ".", "T", ",", "weight_mtx", ")", ",", "self", ".", "mtx_A", ")", "\n", "inv_mtx", "=", "np", ".", "linalg", ".", "pinv", "(", "mtx", ")", "\n", "self", ".", "mtx_A_inv", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "inv_mtx", ",", "self", ".", "mtx_A", ".", "T", ")", ",", "weight_mtx", ")", "\n", "self", ".", "weight_vec", "=", "np", ".", "matmul", "(", "self", ".", "mtx_A_inv", ",", "self", ".", "b_vec", ")", "\n", "self", ".", "total_ctr", "=", "np", ".", "matmul", "(", "self", ".", "mtx_A", ",", "self", ".", "weight_vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Reg.recommend": [[104, 112], ["numpy.argmax", "random.randint", "random.random", "len"], "methods", ["None"], ["", "def", "recommend", "(", "self", ",", "a", "=", "None", ",", "t", "=", "1", ")", ":", "\n", "        ", "epsilon", "=", "self", ".", "epsilon", "\n", "if", "t", "==", "0", "or", "random", ".", "random", "(", ")", "<", "1", "-", "epsilon", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "# total_ctr = np.matmul(self.mtx_A,self.weight_vec)", "\n", "", "idx", "=", "np", ".", "argmax", "(", "self", ".", "total_ctr", ")", "\n", "return", "self", ".", "features", "[", "idx", "]", ",", "self", ".", "ctr", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Reg.curr_best_creative": [[113, 128], ["policy.util.dynamic_search", "str", "float", "str", "float", "int", "int"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic_search"], ["", "def", "curr_best_creative", "(", "self", ")", ":", "\n", "        ", "util", ".", "dynamic_search", "(", "self", ".", "root", ",", "0", ")", "\n", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "i", "=", "1", "\n", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "            ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "str1", "=", "\"\"", "\n", "i", "=", "0", "\n", "for", "node", "in", "self", ".", "node_list", "[", ":", "-", "1", "]", ":", "\n", "            ", "str1", "=", "str1", "+", "str", "(", "float", "(", "node", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "+", "\" \"", "\n", "i", "+=", "1", "\n", "", "str1", "=", "str1", "+", "str", "(", "float", "(", "self", ".", "node_list", "[", "-", "1", "]", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "\n", "return", "self", ".", "index_all", "[", "str1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Reg.set_pv_info": [[129, 137], ["idx.split", "range", "len", "range", "len", "float", "float"], "methods", ["None"], ["", "def", "set_pv_info", "(", "self", ",", "idx", ")", ":", "\n", "        ", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "params", "=", "idx", ".", "split", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "params", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "node_list", "[", "i", "]", ".", "value", ")", ")", ":", "\n", "                ", "if", "float", "(", "self", ".", "node_list", "[", "i", "]", ".", "value", "[", "j", "]", ")", "==", "float", "(", "params", "[", "i", "]", ")", ":", "\n", "                    ", "self", ".", "record", "[", "self", ".", "node_list", "[", "i", "]", ".", "name", "]", "=", "j", "\n", "self", ".", "step", "[", "i", "]", "=", "j", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Ts.__init__": [[139, 141], ["full_edge.Full_Reg.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Ts.update": [[142, 157], ["numpy.shape", "numpy.matmul", "numpy.linalg.pinv", "numpy.matmul", "numpy.matmul", "numpy.eye", "numpy.matmul", "numpy.matmul"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "reward_list", ",", "pv_type", "=", "True", ")", ":", "\n", "# print(self.weight_vec)", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "curr", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "curr", "]", "+=", "1", "\n", "self", ".", "clk", "[", "curr", "]", "+=", "reward", "[", "1", "]", "\n", "beta_clk", "=", "self", ".", "clk", "[", "curr", "]", "\n", "beta_pv", "=", "self", ".", "pv", "[", "curr", "]", "\n", "self", ".", "b_vec", "[", "curr", "]", "=", "beta_clk", "/", "beta_pv", "\n", "", "(", "s", ",", "t", ")", "=", "np", ".", "shape", "(", "self", ".", "pv", ")", "\n", "weight_mtx", "=", "self", ".", "pv", "*", "np", ".", "eye", "(", "s", ")", "\n", "mtx", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "mtx_A", ".", "T", ",", "weight_mtx", ")", ",", "self", ".", "mtx_A", ")", "\n", "self", ".", "inv_mtx", "=", "np", ".", "linalg", ".", "pinv", "(", "mtx", ")", "\n", "self", ".", "mtx_A_inv", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "inv_mtx", ",", "self", ".", "mtx_A", ".", "T", ")", ",", "weight_mtx", ")", "\n", "self", ".", "expected_weight", "=", "np", ".", "matmul", "(", "self", ".", "mtx_A_inv", ",", "self", ".", "b_vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_Ts.recommend": [[158, 168], ["full_edge.Full_Ts.expected_weight.flatten", "numpy.matmul", "numpy.argmax", "random.randint", "numpy.random.multivariate_normal", "len"], "methods", ["None"], ["", "def", "recommend", "(", "self", ",", "a", "=", "None", ",", "t", "=", "1", ")", ":", "\n", "        ", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "mean_vec", "=", "self", ".", "expected_weight", ".", "flatten", "(", ")", "\n", "# print(mean_vec.shape)", "\n", "self", ".", "weight_vec", "=", "np", ".", "random", ".", "multivariate_normal", "(", "mean", "=", "mean_vec", ",", "cov", "=", "self", ".", "alpha", "*", "self", ".", "inv_mtx", ",", "size", "=", "1", ")", "[", "0", "]", "\n", "total_ctr", "=", "np", ".", "matmul", "(", "self", ".", "mtx_A", ",", "self", ".", "weight_vec", ")", "\n", "idx", "=", "np", ".", "argmax", "(", "total_ctr", ")", "\n", "return", "self", ".", "features", "[", "idx", "]", ",", "self", ".", "ctr", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_probit.__init__": [[170, 172], ["full_edge.Full_Reg.__init__"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_probit.update": [[173, 187], ["numpy.shape", "numpy.matmul", "numpy.linalg.pinv", "numpy.matmul", "numpy.matmul", "numpy.eye", "numpy.matmul", "numpy.matmul"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "reward_list", ",", "pv_type", "=", "True", ")", ":", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "curr", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "curr", "]", "+=", "1", "\n", "self", ".", "clk", "[", "curr", "]", "+=", "reward", "[", "1", "]", "\n", "beta_clk", "=", "self", ".", "clk", "[", "curr", "]", "\n", "beta_pv", "=", "self", ".", "pv", "[", "curr", "]", "\n", "self", ".", "b_vec", "[", "curr", "]", "=", "beta_clk", "/", "beta_pv", "\n", "", "(", "s", ",", "t", ")", "=", "np", ".", "shape", "(", "self", ".", "pv", ")", "\n", "weight_mtx", "=", "self", ".", "pv", "*", "np", ".", "eye", "(", "s", ")", "\n", "mtx", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "mtx_A", ".", "T", ",", "weight_mtx", ")", ",", "self", ".", "mtx_A", ")", "\n", "self", ".", "inv_mtx", "=", "np", ".", "linalg", ".", "pinv", "(", "mtx", ")", "\n", "self", ".", "mtx_A_inv", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "inv_mtx", ",", "self", ".", "mtx_A", ".", "T", ")", ",", "weight_mtx", ")", "\n", "self", ".", "expected_weight", "=", "np", ".", "matmul", "(", "self", ".", "mtx_A_inv", ",", "self", ".", "b_vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_probit.recommend": [[188, 197], ["full_edge.Full_probit.expected_weight.flatten", "full_edge.Full_probit.hill_climb", "random.randint", "numpy.random.multivariate_normal", "len"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_probit.hill_climb"], ["", "def", "recommend", "(", "self", ",", "a", "=", "None", ",", "t", "=", "1", ")", ":", "\n", "        ", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "mean_vec", "=", "self", ".", "expected_weight", ".", "flatten", "(", ")", "\n", "# print(mean_vec.shape)", "\n", "self", ".", "weight_vec", "=", "np", ".", "random", ".", "multivariate_normal", "(", "mean", "=", "mean_vec", ",", "cov", "=", "self", ".", "alpha", "*", "self", ".", "inv_mtx", ",", "size", "=", "1", ")", "[", "0", "]", "\n", "final_idx", "=", "self", ".", "hill_climb", "(", ")", "\n", "return", "self", ".", "features", "[", "final_idx", "]", ",", "self", ".", "ctr", "[", "final_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.full_edge.Full_probit.hill_climb": [[198, 225], ["range", "max", "random.randint", "str0.split", "copy.deepcopy", "range", "random.randint", "range", "numpy.matmul", "numpy.argmax", "full_edge.Full_probit.features[].split", "len", "str", "float", "full_edge.Full_probit.index_all.keys", "idx_pool.append"], "methods", ["None"], ["", "def", "hill_climb", "(", "self", ",", "s", "=", "2", ",", "k", "=", "3", ")", ":", "\n", "# pick out A_0 randomly", "\n", "        ", "for", "ss", "in", "range", "(", "s", ")", ":", "\n", "            ", "final_idx_reward", "=", "{", "}", "\n", "rdn_idx", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "str0", "=", "self", ".", "features", "[", "rdn_idx", "]", "\n", "all_ele", "=", "str0", ".", "split", "(", ")", "\n", "# print(all_ele)", "\n", "ele_list", "=", "copy", ".", "deepcopy", "(", "all_ele", ")", "\n", "for", "kk", "in", "range", "(", "k", ")", ":", "\n", "                ", "field_idx", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "fields", "-", "1", ")", "\n", "idx_pool", "=", "[", "]", "\n", "# feat_pool = []", "\n", "for", "xx", "in", "range", "(", "self", ".", "fields_offset", "[", "field_idx", "]", ")", ":", "\n", "# print(field_idx,xx,self.fields_offset[field_idx],self.fields_offset)", "\n", "                    ", "ele_list", "[", "field_idx", "]", "=", "str", "(", "float", "(", "xx", ")", ")", "\n", "str_list", "=", "\" \"", ".", "join", "(", "ele_list", ")", "\n", "if", "str_list", "in", "self", ".", "index_all", ".", "keys", "(", ")", ":", "\n", "                        ", "idx_pool", ".", "append", "(", "self", ".", "index_all", "[", "str_list", "]", ")", "\n", "# feat_pool.append(str_list.split())", "\n", "", "", "feat", "=", "self", ".", "mtx_A", "[", "idx_pool", "]", "\n", "reward", "=", "np", ".", "matmul", "(", "feat", ",", "self", ".", "weight_vec", ")", "\n", "idx_this", "=", "np", ".", "argmax", "(", "reward", ")", "\n", "ele_list", "=", "self", ".", "features", "[", "idx_this", "]", ".", "split", "(", ")", "\n", "", "final_idx_reward", "[", "idx_this", "]", "=", "reward", "[", "idx_this", "]", "\n", "", "res", "=", "max", "(", "final_idx_reward", ",", "key", "=", "lambda", "x", ":", "final_idx_reward", "[", "x", "]", ")", "\n", "return", "res", "\n", "", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.__init__": [[8, 32], ["policy.tree_datastruct.TreeNode", "stats_policy.StatsPolicy.init_tree", "stats_policy.StatsPolicy.set_constraint", "stats_policy.StatsPolicy.root.print", "len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "stats_policy.StatsPolicy.set_creative"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.init_tree", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.set_constraint", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Baseline.set_creative"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", ":", "\n", "        ", "self", ".", "epsilon", "=", "p_dict", "[", "\"epsilon\"", "]", "\n", "self", ".", "ee", "=", "p_dict", "[", "\"ee\"", "]", "\n", "self", ".", "bias", "=", "p_dict", "[", "\"bias\"", "]", "\n", "self", ".", "root", "=", "TreeNode", "(", "None", ",", "\"t\"", ",", "1", ",", "[", "'0'", "]", ")", "\n", "self", ".", "node_list", "=", "[", "self", ".", "root", "]", "\n", "self", ".", "size", "=", "1", "\n", "self", ".", "step", "=", "[", "]", "\n", "self", ".", "record", "=", "{", "}", "\n", "self", ".", "features", "=", "[", "]", "\n", "self", ".", "total_pv", "=", "0", "\n", "self", ".", "constraint_path", "=", "constraints", "\n", "if", "creative", "!=", "\"\"", ":", "\n", "            ", "self", ".", "index_all", "=", "{", "}", "\n", "creative_len", "=", "len", "(", "creative", ")", "\n", "self", ".", "b_vec", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "pv", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "clk", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "ctr", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "set_creative", "(", "creative", ")", "\n", "", "self", ".", "init_tree", "(", "tree_model", ")", "\n", "self", ".", "set_constraint", "(", ")", "\n", "self", ".", "root", ".", "print", "(", ")", "\n", "self", ".", "alpha", "=", "p_dict", "[", "\"alpha\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.set_creative": [[34, 45], ["str", "stats_policy.StatsPolicy.features.append", "str"], "methods", ["None"], ["", "def", "set_creative", "(", "self", ",", "creative", ")", ":", "\n", "        ", "i", "=", "0", "\n", "for", "key", "in", "creative", ":", "\n", "            ", "str1", "=", "\"\"", "\n", "for", "k", "in", "creative", "[", "key", "]", "[", "0", ":", "-", "2", "]", ":", "\n", "                ", "str1", "=", "str1", "+", "str", "(", "k", ")", "+", "\" \"", "\n", "", "str1", "+=", "str", "(", "creative", "[", "key", "]", "[", "-", "2", "]", ")", "\n", "self", ".", "index_all", "[", "str1", "]", "=", "i", "\n", "self", ".", "ctr", "[", "i", "]", "=", "creative", "[", "key", "]", "[", "-", "1", "]", "\n", "self", ".", "features", ".", "append", "(", "str1", ")", "\n", "i", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.init_tree": [[46, 56], ["open", "f.readlines", "numpy.zeros", "line.replace().replace().split", "policy.util.find", "policy.tree_datastruct.TreeNode", "stats_policy.StatsPolicy.node_list.append", "policy.util.find.children.append", "int", "line.replace().replace", "line.replace"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.find"], ["", "", "def", "init_tree", "(", "self", ",", "tree_model", ")", ":", "\n", "        ", "with", "open", "(", "tree_model", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "                ", "self", ".", "size", "+=", "1", "\n", "elems", "=", "line", ".", "replace", "(", "' '", ",", "''", ")", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "\",\"", ")", "\n", "node", "=", "util", ".", "find", "(", "self", ".", "root", ",", "elems", "[", "0", "]", ")", "\n", "new_node", "=", "TreeNode", "(", "node", ",", "elems", "[", "1", "]", ",", "int", "(", "elems", "[", "2", "]", ")", ",", "elems", "[", "3", ":", "]", ")", "\n", "self", ".", "node_list", ".", "append", "(", "new_node", ")", "\n", "node", ".", "children", ".", "append", "(", "new_node", ")", "\n", "", "self", ".", "step", "=", "np", ".", "zeros", "(", "self", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.get_creative": [[57, 59], ["None"], "methods", ["None"], ["", "", "def", "get_creative", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.set_constraint": [[60, 75], ["open", "f.readlines", "range", "lines[].replace().replace().split", "policy.util.find", "numpy.zeros", "range", "int", "lines[].replace().split", "range", "int", "lines[].replace().replace", "int", "int", "int", "int", "lines[].replace", "int", "lines[].replace"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.find"], ["", "def", "set_constraint", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "constraint_path", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "i", "=", "0", "\n", "for", "_", "in", "range", "(", "self", ".", "size", "-", "1", ")", ":", "\n", "                ", "elems", "=", "lines", "[", "i", "]", ".", "replace", "(", "' '", ",", "''", ")", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "\",\"", ")", "\n", "node", "=", "util", ".", "find", "(", "self", ".", "root", ",", "elems", "[", "0", "]", ")", "\n", "node", ".", "constraint", "=", "np", ".", "zeros", "(", "(", "int", "(", "elems", "[", "1", "]", ")", ",", "int", "(", "elems", "[", "2", "]", ")", ")", ")", "\n", "for", "j", "in", "range", "(", "int", "(", "elems", "[", "1", "]", ")", ")", ":", "\n", "                    ", "datas", "=", "lines", "[", "i", "+", "j", "+", "1", "]", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", ")", "\n", "for", "t", "in", "range", "(", "int", "(", "elems", "[", "2", "]", ")", ")", ":", "\n", "                        ", "node", ".", "constraint", "[", "j", "]", "[", "t", "]", "=", "int", "(", "datas", "[", "t", "]", ")", "\n", "if", "int", "(", "datas", "[", "t", "]", ")", "==", "0", ":", "\n", "                            ", "node", ".", "weight", "[", "j", "]", "[", "t", "]", "=", "-", "1000000", "\n", "", "", "", "i", "+=", "int", "(", "elems", "[", "1", "]", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.recommend": [[76, 121], ["random.randint", "policy.util.dynamic_search", "policy.util.dynamic_search", "str", "random.random", "float", "len", "random.randint", "random.random", "random.randint", "str", "random.randint", "random.randint", "random.randint", "float", "int", "int"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic_search", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic_search"], ["", "", "", "def", "recommend", "(", "self", ",", "a", "=", "None", ",", "t", "=", "1", ")", ":", "\n", "        ", "epsilon", "=", "self", ".", "epsilon", "\n", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "if", "self", ".", "ee", "==", "2", ":", "\n", "            ", "util", ".", "dynamic_search", "(", "self", ".", "root", ",", "self", ".", "epsilon", ")", "\n", "epsilon", "=", "0", "\n", "", "else", ":", "\n", "            ", "util", ".", "dynamic_search", "(", "self", ".", "root", ",", "0", ")", "\n", "", "i", "=", "1", "\n", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "if", "self", ".", "ee", "!=", "1", ":", "\n", "            ", "if", "random", ".", "random", "(", ")", "<", "1", "-", "epsilon", ":", "\n", "                ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "", "else", ":", "\n", "                ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "", "", "else", ":", "\n", "            ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                ", "if", "random", ".", "random", "(", ")", ">", "1", "-", "epsilon", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "", "else", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "# get defined ctr", "\n", "", "", "str1", "=", "\"\"", "\n", "i", "=", "0", "\n", "for", "node", "in", "self", ".", "node_list", "[", ":", "-", "1", "]", ":", "\n", "            ", "str1", "=", "str1", "+", "str", "(", "float", "(", "node", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "+", "\" \"", "\n", "i", "+=", "1", "\n", "", "str1", "=", "str1", "+", "str", "(", "float", "(", "self", ".", "node_list", "[", "-", "1", "]", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "\n", "return", "str1", ",", "self", ".", "ctr", "[", "self", ".", "index_all", "[", "str1", "]", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.curr_best_creative": [[122, 137], ["policy.util.dynamic_search", "str", "float", "str", "float", "int", "int"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic_search"], ["", "def", "curr_best_creative", "(", "self", ")", ":", "\n", "        ", "util", ".", "dynamic_search", "(", "self", ".", "root", ",", "0", ")", "\n", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "i", "=", "1", "\n", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "            ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "str1", "=", "\"\"", "\n", "i", "=", "0", "\n", "for", "node", "in", "self", ".", "node_list", "[", ":", "-", "1", "]", ":", "\n", "            ", "str1", "=", "str1", "+", "str", "(", "float", "(", "node", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "+", "\" \"", "\n", "i", "+=", "1", "\n", "", "str1", "=", "str1", "+", "str", "(", "float", "(", "self", ".", "node_list", "[", "-", "1", "]", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "\n", "return", "self", ".", "index_all", "[", "str1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.set_pv_info": [[138, 146], ["idx.split", "range", "len", "range", "len", "float", "float"], "methods", ["None"], ["", "def", "set_pv_info", "(", "self", ",", "idx", ")", ":", "\n", "        ", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "params", "=", "idx", ".", "split", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "params", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "node_list", "[", "i", "]", ".", "value", ")", ")", ":", "\n", "                ", "if", "float", "(", "self", ".", "node_list", "[", "i", "]", ".", "value", "[", "j", "]", ")", "==", "float", "(", "params", "[", "i", "]", ")", ":", "\n", "                    ", "self", ".", "record", "[", "self", ".", "node_list", "[", "i", "]", ".", "name", "]", "=", "j", "\n", "self", ".", "step", "[", "i", "]", "=", "j", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.get_A_matrix": [[147, 205], ["range", "policy.util.cartesian_product", "numpy.mat", "open", "f.readlines", "len", "stats_policy.StatsPolicy.sum_weight", "numpy.zeros", "range", "range", "numpy.mat.append", "line.replace().replace().split", "int", "node_features.append", "node_num.append", "node_list.append", "str", "int", "len", "numpy.zeros.tolist", "int", "len", "pos.append", "pos.append", "range", "i.split", "len", "line.replace().replace", "line.replace", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.cartesian_product", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.sum_weight"], ["", "", "", "", "def", "get_A_matrix", "(", "self", ",", "tree_model", ")", ":", "\n", "        ", "pos", "=", "[", "]", "\n", "leng", "=", "0", "\n", "parent", "=", "{", "\"t\"", ":", "None", "}", "\n", "record", "=", "{", "\"t\"", ":", "1", "}", "\n", "node_num", "=", "[", "1", "]", "\n", "node_features", "=", "[", "[", "\"0\"", "]", "]", "\n", "node_list", "=", "[", "\"t\"", "]", "\n", "index", "=", "{", "}", "\n", "with", "open", "(", "tree_model", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "last_len", "=", "0", "\n", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "                ", "elems", "=", "line", ".", "replace", "(", "' '", ",", "''", ")", ".", "replace", "(", "'\\n'", ",", "''", ")", ".", "split", "(", "\",\"", ")", "\n", "record", "[", "elems", "[", "1", "]", "]", "=", "int", "(", "elems", "[", "2", "]", ")", "\n", "parent", "[", "elems", "[", "1", "]", "]", "=", "elems", "[", "0", "]", "\n", "feature", "=", "[", "x", "for", "x", "in", "elems", "[", "3", ":", "]", "]", "\n", "node_features", ".", "append", "(", "feature", ")", "\n", "node_num", ".", "append", "(", "int", "(", "elems", "[", "2", "]", ")", ")", "\n", "node_list", ".", "append", "(", "elems", "[", "1", "]", ")", "\n", "if", "len", "(", "pos", ")", "==", "0", ":", "\n", "                    ", "pos", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                    ", "last_len", "+=", "pos", "[", "len", "(", "pos", ")", "-", "1", "]", "\n", "pos", ".", "append", "(", "last_len", ")", "\n", "", "last_len", "=", "record", "[", "elems", "[", "0", "]", "]", "*", "record", "[", "elems", "[", "1", "]", "]", "\n", "leng", "+=", "last_len", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "node_list", "[", "1", ":", "]", ")", ")", ":", "\n", "            ", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "pos", "=", "pos", "[", "i", "]", "\n", "", "res", "=", "[", "]", "\n", "value_list", "=", "[", "[", "str", "(", "y", ")", "for", "y", "in", "range", "(", "x", ")", "]", "for", "x", "in", "node_num", "]", "\n", "creatives", "=", "util", ".", "cartesian_product", "(", "value_list", ")", "\n", "row_cnt", "=", "0", "\n", "for", "i", "in", "creatives", ":", "\n", "            ", "t", "=", "self", ".", "sum_weight", "(", "i", ")", "\n", "if", "t", "<", "-", "50000", ":", "\n", "                ", "continue", "\n", "", "param", "=", "[", "int", "(", "x", ")", "for", "x", "in", "i", ".", "split", "(", "\" \"", ")", "]", "\n", "temp", "=", "np", ".", "zeros", "(", "leng", ")", "\n", "record2", "=", "{", "\"t\"", ":", "0", "}", "\n", "for", "j", "in", "range", "(", "1", ",", "len", "(", "param", ")", ")", ":", "\n", "                ", "record2", "[", "node_list", "[", "j", "]", "]", "=", "param", "[", "j", "]", "\n", "temp", "[", "pos", "[", "j", "-", "1", "]", "+", "param", "[", "j", "]", "+", "record2", "[", "parent", "[", "node_list", "[", "j", "]", "]", "]", "*", "node_num", "[", "j", "]", "]", "=", "1", "\n", "", "str1", "=", "\"\"", "\n", "for", "j", "in", "range", "(", "len", "(", "node_list", ")", "-", "1", ")", ":", "\n", "                ", "str1", "=", "str1", "+", "node_features", "[", "j", "]", "[", "param", "[", "j", "]", "]", "+", "\" \"", "\n", "", "str1", "=", "str1", "+", "node_features", "[", "len", "(", "node_list", ")", "-", "1", "]", "[", "param", "[", "len", "(", "node_list", ")", "-", "1", "]", "]", "\n", "index", "[", "str1", "]", "=", "row_cnt", "\n", "row_cnt", "+=", "1", "\n", "res", ".", "append", "(", "temp", ".", "tolist", "(", ")", ")", "\n", "", "res", "=", "np", ".", "mat", "(", "res", ")", "\n", "# print(res)", "\n", "# idx_del = []", "\n", "# for i in range(leng):", "\n", "#     if np.all(res[:,i]==0):", "\n", "#         idx_del.append(i)", "\n", "# res = np.delete(res,idx_del,axis=1)", "\n", "# print( leng - len(idx_del),np.shape(res))", "\n", "return", "res", ",", "index", ",", "leng", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.sum_weight": [[206, 214], ["range", "int", "len", "parameters.split"], "methods", ["None"], ["", "def", "sum_weight", "(", "self", ",", "parameters", ")", ":", "\n", "        ", "res", "=", "0", "\n", "param", "=", "[", "int", "(", "x", ")", "for", "x", "in", "parameters", ".", "split", "(", "\" \"", ")", "]", "\n", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "param", "[", "0", "]", "}", "\n", "for", "j", "in", "range", "(", "1", ",", "len", "(", "param", ")", ")", ":", "\n", "            ", "record", "[", "self", ".", "node_list", "[", "j", "]", ".", "name", "]", "=", "param", "[", "j", "]", "\n", "res", "+=", "self", ".", "node_list", "[", "j", "]", ".", "weight", "[", "record", "[", "self", ".", "node_list", "[", "j", "]", ".", "parent", ".", "name", "]", "]", "[", "param", "[", "j", "]", "]", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.panduan": [[215, 220], ["range", "int"], "methods", ["None"], ["", "def", "panduan", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "1", ",", "self", ".", "size", ")", ":", "\n", "            ", "pos", "=", "int", "(", "self", ".", "step", "[", "i", "]", ")", "\n", "if", "self", ".", "node_list", "[", "i", "]", ".", "weight", "[", "self", ".", "record", "[", "self", ".", "node_list", "[", "i", "]", ".", "parent", ".", "name", "]", "]", "[", "pos", "]", "<", "-", "50000", ":", "\n", "                ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.get_best_reward": [[221, 234], ["numpy.argmax", "stats_policy.StatsPolicy.set_pv_info", "range", "range", "int", "print", "stats_policy.StatsPolicy.recommend", "int"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.set_pv_info", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.recommend"], ["", "", "", "def", "get_best_reward", "(", "self", ")", ":", "\n", "        ", "pos", "=", "np", ".", "argmax", "(", "self", ".", "ctr", ")", "\n", "self", ".", "set_pv_info", "(", "self", ".", "features", "[", "int", "(", "pos", ")", "]", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "size", ")", ":", "\n", "            ", "poss", "=", "int", "(", "self", ".", "step", "[", "i", "]", ")", "\n", "print", "(", "self", ".", "record", "[", "self", ".", "node_list", "[", "i", "]", ".", "parent", ".", "name", "]", ",", "poss", ")", "\n", "self", ".", "node_list", "[", "i", "]", ".", "weight", "[", "self", ".", "record", "[", "self", ".", "node_list", "[", "i", "]", ".", "parent", ".", "name", "]", "]", "[", "poss", "]", "=", "100", "\n", "", "sum", "=", "0", "\n", "for", "_", "in", "range", "(", "100000", ")", ":", "\n", "            ", "item", "=", "self", ".", "recommend", "(", ")", "\n", "sum", "+=", "item", "[", "1", "]", "\n", "", "sum", "/=", "100000.0", "\n", "return", "sum", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.__init__": [[237, 242], ["stats_policy.StatsPolicy.__init__", "stats_policy.Reg.get_A_matrix", "numpy.linalg.pinv", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.__init__", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.StatsPolicy.get_A_matrix"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", ":", "\n", "        ", "super", "(", "Reg", ",", "self", ")", ".", "__init__", "(", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", "\n", "self", ".", "mtx_A", ",", "self", ".", "idx_for_ctr", ",", "self", ".", "leng", "=", "self", ".", "get_A_matrix", "(", "tree_model", ")", "\n", "self", ".", "mtx_A_inv", "=", "np", ".", "linalg", ".", "pinv", "(", "self", ".", "mtx_A", ")", "\n", "self", ".", "weight_vec", "=", "np", ".", "zeros", "(", "(", "self", ".", "leng", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.update": [[243, 255], ["numpy.matmul", "stats_policy.Reg.set_weight"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.set_weight"], ["", "def", "update", "(", "self", ",", "reward_list", ")", ":", "\n", "# print(self.weight_vec)", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "self", ".", "curr", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "self", ".", "curr", "]", "+=", "1", "\n", "self", ".", "clk", "[", "self", ".", "curr", "]", "+=", "reward", "[", "1", "]", "\n", "beta_clk", "=", "self", ".", "clk", "[", "self", ".", "curr", "]", "\n", "beta_pv", "=", "self", ".", "pv", "[", "self", ".", "curr", "]", "\n", "self", ".", "b_vec", "[", "self", ".", "curr", "]", "=", "beta_clk", "/", "beta_pv", "\n", "", "self", ".", "weight_vec", "=", "np", ".", "matmul", "(", "self", ".", "mtx_A_inv", ",", "self", ".", "b_vec", ")", "\n", "# print(self.mtx_A_inv, self.weight_vec)", "\n", "self", ".", "set_weight", "(", "self", ".", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.set_weight": [[256, 267], ["node.is_root", "range", "stats_policy.Reg.set_weight", "range"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.is_root", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.set_weight"], ["", "def", "set_weight", "(", "self", ",", "node", ")", ":", "\n", "        ", "if", "not", "node", ".", "is_root", "(", ")", ":", "\n", "            ", "(", "w", ",", "h", ")", "=", "node", ".", "weight", ".", "shape", "\n", "for", "i", "in", "range", "(", "w", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "h", ")", ":", "\n", "                    ", "if", "node", ".", "weight", "[", "i", "]", "[", "j", "]", "<", "-", "10000", ":", "\n", "                        ", "continue", "\n", "", "node", ".", "weight", "[", "i", "]", "[", "j", "]", "=", "self", ".", "weight_vec", "[", "node", ".", "pos", "+", "i", "*", "h", "+", "j", "]", "\n", "", "", "", "for", "nex", "in", "node", ".", "children", ":", "\n", "            ", "self", ".", "set_weight", "(", "nex", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.print": [[268, 272], ["range", "stats_policy.Reg.root.print", "len", "stats_policy.Reg.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print"], ["", "def", "print", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "pv", ")", ")", ":", "\n", "            ", "print", "(", "int", "(", "self", ".", "pv", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "self", ".", "clk", "[", "i", "]", "[", "0", "]", ")", ")", "\n", "", "self", ".", "root", ".", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg_Pv.update": [[275, 291], ["numpy.shape", "numpy.matmul", "numpy.linalg.pinv", "numpy.matmul", "numpy.matmul", "stats_policy.Reg_Pv.set_weight", "numpy.eye", "numpy.matmul", "numpy.matmul"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.set_weight"], ["    ", "def", "update", "(", "self", ",", "reward_list", ",", "pv_type", "=", "True", ")", ":", "\n", "# print(self.weight_vec)", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "curr", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "curr", "]", "+=", "1", "\n", "self", ".", "clk", "[", "curr", "]", "+=", "reward", "[", "1", "]", "\n", "beta_clk", "=", "self", ".", "clk", "[", "curr", "]", "\n", "beta_pv", "=", "self", ".", "pv", "[", "curr", "]", "\n", "self", ".", "b_vec", "[", "curr", "]", "=", "beta_clk", "/", "beta_pv", "-", "self", ".", "bias", "\n", "", "(", "s", ",", "t", ")", "=", "np", ".", "shape", "(", "self", ".", "pv", ")", "\n", "weight_mtx", "=", "self", ".", "pv", "*", "np", ".", "eye", "(", "s", ")", "\n", "mtx", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "mtx_A", ".", "T", ",", "weight_mtx", ")", ",", "self", ".", "mtx_A", ")", "\n", "inv_mtx", "=", "np", ".", "linalg", ".", "pinv", "(", "mtx", ")", "\n", "self", ".", "mtx_A_inv", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "inv_mtx", ",", "self", ".", "mtx_A", ".", "T", ")", ",", "weight_mtx", ")", "\n", "self", ".", "weight_vec", "=", "np", ".", "matmul", "(", "self", ".", "mtx_A_inv", ",", "self", ".", "b_vec", ")", "\n", "self", ".", "set_weight", "(", "self", ".", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg_Pv.print": [[292, 296], ["range", "stats_policy.Reg_Pv.root.print", "len", "stats_policy.Reg_Pv.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print"], ["", "def", "print", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "pv", ")", ")", ":", "\n", "            ", "print", "(", "int", "(", "self", ".", "pv", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "self", ".", "clk", "[", "i", "]", "[", "0", "]", ")", ")", "\n", "", "self", ".", "root", ".", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Epsilon1.update": [[299, 312], ["reward[].split", "range", "range", "len", "len", "float", "float"], "methods", ["None"], ["    ", "def", "update", "(", "self", ",", "reward_list", ")", ":", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "curr", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "curr", "]", "+=", "1", "\n", "self", ".", "clk", "[", "curr", "]", "+=", "reward", "[", "1", "]", "\n", "params", "=", "reward", "[", "0", "]", ".", "split", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "params", ")", "-", "1", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "value", ")", ")", ":", "\n", "# print(self.node_list[i][1][j], params[i])", "\n", "                    ", "if", "float", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "value", "[", "j", "]", ")", "==", "float", "(", "params", "[", "i", "+", "1", "]", ")", ":", "\n", "                        ", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "pv", "[", "j", "]", "+=", "1", "\n", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "clk", "[", "j", "]", "+=", "reward", "[", "1", "]", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Epsilon1.recommend": [[313, 346], ["range", "random.randint", "range", "random.random", "random.randint", "len", "random.randint", "len", "float", "random.random", "random.randint", "str", "len", "float", "float", "float"], "methods", ["None"], ["", "", "", "", "", "def", "recommend", "(", "self", ",", "a", "=", "None", ",", "t", "=", "1", ")", ":", "\n", "        ", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "if", "self", ".", "ee", "==", "0", ":", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "1", "-", "self", ".", "epsilon", ":", "\n", "                ", "self", ".", "curr", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "self", ".", "curr", "]", ",", "self", ".", "ctr", "[", "self", ".", "curr", "]", "[", "0", "]", "\n", "", "", "str1", "=", "\"0.0 \"", "\n", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "for", "i", "in", "range", "(", "self", ".", "size", "-", "1", ")", ":", "\n", "            ", "node", "=", "self", ".", "node_list", "[", "i", "+", "1", "]", "\n", "max", "=", "0", "\n", "pos", "=", "0", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "pv", ")", ")", ":", "\n", "                ", "if", "float", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "pv", "[", "k", "]", ")", "==", "0", ":", "\n", "                    ", "t", "=", "0", "\n", "", "else", ":", "\n", "                    ", "t", "=", "float", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "clk", "[", "k", "]", ")", "/", "float", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "pv", "[", "k", "]", ")", "\n", "", "if", "t", ">", "max", ":", "\n", "                    ", "max", "=", "t", "\n", "pos", "=", "k", "\n", "", "", "self", ".", "record", "[", "node", ".", "name", "]", "=", "pos", "\n", "if", "self", ".", "ee", "==", "1", ":", "\n", "                ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "epsilon", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "\n", "", "", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "pos", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "str1", "=", "str1", "+", "str", "(", "float", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "value", "[", "pos", "]", ")", ")", "+", "\" \"", "\n", "", "str1", "=", "str1", "[", ":", "-", "1", "]", "\n", "return", "str1", ",", "self", ".", "ctr", "[", "self", ".", "index_all", "[", "str1", "]", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Epsilon1.curr_best_creative": [[347, 366], ["range", "range", "len", "float", "str", "float", "float", "float"], "methods", ["None"], ["", "def", "curr_best_creative", "(", "self", ")", ":", "\n", "        ", "str1", "=", "\"0.0 \"", "\n", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "for", "i", "in", "range", "(", "self", ".", "size", "-", "1", ")", ":", "\n", "            ", "node", "=", "self", ".", "node_list", "[", "i", "+", "1", "]", "\n", "max", "=", "0", "\n", "pos", "=", "0", "\n", "for", "k", "in", "range", "(", "len", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "pv", ")", ")", ":", "\n", "                ", "if", "float", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "pv", "[", "k", "]", ")", "==", "0", ":", "\n", "                    ", "t", "=", "0", "\n", "", "else", ":", "\n", "                    ", "t", "=", "float", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "clk", "[", "k", "]", ")", "/", "float", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "pv", "[", "k", "]", ")", "\n", "", "if", "t", ">", "max", ":", "\n", "                    ", "max", "=", "t", "\n", "pos", "=", "k", "\n", "", "", "self", ".", "record", "[", "node", ".", "name", "]", "=", "pos", "\n", "str1", "=", "str1", "+", "str", "(", "float", "(", "self", ".", "node_list", "[", "i", "+", "1", "]", ".", "value", "[", "pos", "]", ")", ")", "+", "\" \"", "\n", "", "str1", "=", "str1", "[", ":", "-", "1", "]", "\n", "return", "self", ".", "index_all", "[", "str1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Epsilon1.print": [[367, 372], ["range", "range", "len", "stats_policy.Epsilon1.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print"], ["", "def", "print", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "pv", ")", ")", ":", "\n", "            ", "print", "(", "int", "(", "self", ".", "pv", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "self", ".", "clk", "[", "i", "]", "[", "0", "]", ")", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "node_list", ")", ")", ":", "\n", "            ", "print", "(", "self", ".", "node_list", "[", "i", "]", ".", "pv", ",", "self", ".", "node_list", "[", "i", "]", ".", "clk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg_TS.__init__": [[374, 378], ["stats_policy.Reg.__init__", "numpy.ones", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", ":", "\n", "        ", "super", "(", "Reg_TS", ",", "self", ")", ".", "__init__", "(", "creative", ",", "tree_model", ",", "constraints", ",", "p_dict", ")", "\n", "self", ".", "inv_mtx", "=", "np", ".", "ones", "(", "(", "self", ".", "leng", ",", "self", ".", "leng", ")", ")", "\n", "self", ".", "expected_weight", "=", "np", ".", "zeros", "(", "(", "self", ".", "leng", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg_TS.update": [[380, 402], ["numpy.shape", "numpy.linalg.pinv", "numpy.matmul", "numpy.matmul", "numpy.eye", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.eye"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "reward_list", ",", "pv_type", "=", "True", ")", ":", "\n", "# print(np.linalg.norm(self.inv_mtx))", "\n", "# print(self.expected_weight)", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "curr", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "curr", "]", "+=", "1", "\n", "self", ".", "clk", "[", "curr", "]", "+=", "reward", "[", "1", "]", "\n", "beta_clk", "=", "self", ".", "clk", "[", "curr", "]", "\n", "beta_pv", "=", "self", ".", "pv", "[", "curr", "]", "\n", "self", ".", "b_vec", "[", "curr", "]", "=", "beta_clk", "/", "beta_pv", "-", "self", ".", "bias", "\n", "", "bias_n", "=", "1", "\n", "\n", "(", "s", ",", "t", ")", "=", "np", ".", "shape", "(", "self", ".", "pv", ")", "\n", "weight_mtx", "=", "self", ".", "pv", "*", "np", ".", "eye", "(", "s", ")", "\n", "mtx", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "mtx_A", ".", "T", ",", "weight_mtx", ")", ",", "self", ".", "mtx_A", ")", "+", "0.01", "*", "np", ".", "eye", "(", "self", ".", "leng", ")", "\n", "\n", "# mtx = np.matmul(self.mtx_A.T, self.mtx_A)/bias_n/bias_n + 1/bias_w/bias_w        ", "\n", "self", ".", "inv_mtx", "=", "np", ".", "linalg", ".", "pinv", "(", "mtx", ")", "\n", "\n", "sss", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "self", ".", "inv_mtx", ",", "self", ".", "mtx_A", ".", "T", ")", ",", "weight_mtx", ")", "\n", "www", "=", "np", ".", "matmul", "(", "sss", ",", "self", ".", "b_vec", ")", "\n", "self", ".", "expected_weight", "=", "www", ".", "T", ".", "A", "[", "0", "]", "\n", "# self.weight_vec = np.random.multivariate_normal(mean=self.expected_weight, cov=self.inv_mtx, size=1)[0]", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg_TS.recommend": [[406, 453], ["stats_policy.Reg_TS.set_weight", "random.randint", "numpy.random.multivariate_normal", "policy.util.dynamic_search", "policy.util.dynamic_search", "str", "random.random", "float", "len", "random.randint", "random.random", "random.randint", "str", "random.randint", "random.randint", "random.randint", "float", "int", "int"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.stats_policy.Reg.set_weight", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic_search", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic_search"], ["", "def", "recommend", "(", "self", ",", "a", "=", "None", ",", "t", "=", "1", ")", ":", "\n", "        ", "epsilon", "=", "self", ".", "epsilon", "\n", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "self", ".", "weight_vec", "=", "np", ".", "random", ".", "multivariate_normal", "(", "mean", "=", "self", ".", "expected_weight", ",", "cov", "=", "self", ".", "alpha", "*", "self", ".", "inv_mtx", ",", "size", "=", "1", ")", "[", "0", "]", "\n", "self", ".", "set_weight", "(", "self", ".", "root", ")", "\n", "if", "self", ".", "ee", "==", "2", ":", "\n", "            ", "util", ".", "dynamic_search", "(", "self", ".", "root", ",", "self", ".", "epsilon", ")", "\n", "epsilon", "=", "0", "\n", "", "else", ":", "\n", "            ", "util", ".", "dynamic_search", "(", "self", ".", "root", ",", "0", ")", "\n", "", "i", "=", "1", "\n", "self", ".", "record", "=", "{", "self", ".", "node_list", "[", "0", "]", ".", "name", ":", "0", "}", "\n", "if", "self", ".", "ee", "!=", "1", ":", "\n", "            ", "if", "random", ".", "random", "(", ")", "<", "1", "-", "epsilon", ":", "\n", "                ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "", "else", ":", "\n", "                ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "", "", "", "else", ":", "\n", "            ", "for", "node", "in", "self", ".", "node_list", "[", "1", ":", "]", ":", "\n", "                ", "if", "random", ".", "random", "(", ")", ">", "1", "-", "epsilon", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "", "else", ":", "\n", "                    ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "node", ".", "dynamic_arr", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "\n", "while", "node", ".", "weight", "[", "self", ".", "record", "[", "node", ".", "parent", ".", "name", "]", "]", "[", "self", ".", "record", "[", "node", ".", "name", "]", "]", "<", "-", "10000", ":", "\n", "                        ", "self", ".", "record", "[", "node", ".", "name", "]", "=", "random", ".", "randint", "(", "0", ",", "node", ".", "dimension", "-", "1", ")", "\n", "", "", "self", ".", "step", "[", "i", "]", "=", "self", ".", "record", "[", "node", ".", "name", "]", "\n", "i", "+=", "1", "\n", "# get defined ctr", "\n", "", "", "str1", "=", "\"\"", "\n", "i", "=", "0", "\n", "for", "node", "in", "self", ".", "node_list", "[", ":", "-", "1", "]", ":", "\n", "            ", "str1", "=", "str1", "+", "str", "(", "float", "(", "node", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "+", "\" \"", "\n", "i", "+=", "1", "\n", "", "str1", "=", "str1", "+", "str", "(", "float", "(", "self", ".", "node_list", "[", "-", "1", "]", ".", "value", "[", "int", "(", "self", ".", "step", "[", "i", "]", ")", "]", ")", ")", "\n", "return", "str1", ",", "self", ".", "ctr", "[", "self", ".", "index_all", "[", "str1", "]", "]", "[", "0", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.sigmoid": [[4, 7], ["numpy.exp"], "function", ["None"], ["def", "sigmoid", "(", "x", ")", ":", "\n", "    ", "s", "=", "1", "/", "(", "1", "+", "np", ".", "exp", "(", "-", "x", ")", ")", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.find": [[9, 17], ["util.find"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.find"], ["", "def", "find", "(", "node", ",", "name", ")", ":", "\n", "    ", "if", "name", "==", "node", ".", "name", ":", "\n", "        ", "return", "node", "\n", "", "for", "nex", "in", "node", ".", "children", ":", "\n", "        ", "t", "=", "find", "(", "nex", ",", "name", ")", "\n", "if", "t", "is", "not", "None", ":", "\n", "            ", "return", "t", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic_search": [[19, 35], ["node.is_root", "node.weight.copy", "node.weight.copy.argmax", "range", "util.dynamic_search", "len", "random.random", "random.randint", "range", "random.randint", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.is_root", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic_search"], ["", "def", "dynamic_search", "(", "node", ",", "epsilon", ")", ":", "\n", "    ", "for", "nex", "in", "node", ".", "children", ":", "\n", "        ", "dynamic_search", "(", "nex", ",", "epsilon", ")", "\n", "", "if", "node", ".", "is_root", "(", ")", ":", "\n", "        ", "return", "\n", "", "w", "=", "node", ".", "weight", ".", "copy", "(", ")", "\n", "for", "nex", "in", "node", ".", "children", ":", "\n", "        ", "w", "+=", "nex", ".", "added_weight", "\n", "", "node", ".", "dynamic_arr", "=", "w", ".", "argmax", "(", "axis", "=", "1", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "node", ".", "dynamic_arr", ")", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", ">", "1", "-", "epsilon", ":", "\n", "            ", "node", ".", "dynamic_arr", "[", "i", "]", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "w", "[", "i", "]", ")", "-", "1", ")", "\n", "while", "w", "[", "i", "]", "[", "node", ".", "dynamic_arr", "[", "i", "]", "]", "<", "-", "1000", ":", "\n", "                ", "node", ".", "dynamic_arr", "[", "i", "]", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "w", "[", "i", "]", ")", "-", "1", ")", "\n", "", "", "", "node", ".", "added_weight", "=", "[", "w", "[", "i", "]", "[", "node", ".", "dynamic_arr", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "w", ")", ")", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic2search": [[36, 57], ["node.is_root", "node.weight.copy", "node.weight.copy.argmax", "range", "util.dynamic2search", "len", "random.random", "random.randint", "range", "random.randint", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.is_root", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.dynamic2search"], ["", "def", "dynamic2search", "(", "node", ",", "epsilon", ")", ":", "\n", "    ", "for", "nex", "in", "node", ".", "children", ":", "\n", "        ", "dynamic2search", "(", "nex", ",", "epsilon", ")", "\n", "", "if", "node", ".", "is_root", "(", ")", ":", "\n", "# node.print()", "\n", "# print(node.dynamic_arr)", "\n", "        ", "return", "\n", "", "w", "=", "node", ".", "weight", ".", "copy", "(", ")", "\n", "for", "nex", "in", "node", ".", "children", ":", "\n", "        ", "w", "+=", "nex", ".", "added_weight", "\n", "# print(node.name,np.shape(node.self_weight),np.shape(w),np.shape(node.added_weight))", "\n", "", "w", "+=", "node", ".", "self_weight", "\n", "node", ".", "dynamic_arr", "=", "w", ".", "argmax", "(", "axis", "=", "1", ")", "\n", "# print(node.name,np.shape(node.self_weight),np.shape(w),np.shape(node.dynamic_arr),np.shape(node.added_weight))", "\n", "for", "i", "in", "range", "(", "len", "(", "node", ".", "dynamic_arr", ")", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", ">", "1", "-", "epsilon", ":", "\n", "            ", "node", ".", "dynamic_arr", "[", "i", "]", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "w", "[", "i", "]", ")", "-", "1", ")", "\n", "while", "w", "[", "i", "]", "[", "node", ".", "dynamic_arr", "[", "i", "]", "]", "<", "-", "1000", ":", "\n", "                ", "node", ".", "dynamic_arr", "[", "i", "]", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "w", "[", "i", "]", ")", "-", "1", ")", "\n", "", "", "", "node", ".", "added_weight", "=", "[", "w", "[", "i", "]", "[", "node", ".", "dynamic_arr", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "w", ")", ")", "]", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.two_rl": [[59, 68], ["res_list.append", "res_list.append", "str", "float"], "function", ["None"], ["", "def", "two_rl", "(", "list1", ",", "list2", ")", ":", "\n", "    ", "res_list", "=", "[", "]", "\n", "for", "str1", "in", "list1", ":", "\n", "        ", "for", "str2", "in", "list2", ":", "\n", "            ", "if", "str2", "==", "\"/\"", ":", "\n", "                ", "res_list", ".", "append", "(", "str1", "+", "' '", "+", "str2", ")", "\n", "", "else", ":", "\n", "                ", "res_list", ".", "append", "(", "str1", "+", "' '", "+", "str", "(", "float", "(", "str2", ")", ")", ")", "\n", "", "", "", "return", "res_list", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.cartesian_product_rl": [[70, 80], ["util.two_rl", "two_rl.append", "two_rl.append", "str", "float"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.two_rl"], ["", "def", "cartesian_product_rl", "(", "list_of_list", ")", ":", "\n", "    ", "list1", "=", "[", "]", "\n", "for", "i", "in", "list_of_list", "[", "0", "]", ":", "\n", "        ", "if", "i", "==", "\"/\"", ":", "\n", "            ", "list1", ".", "append", "(", "i", ")", "\n", "", "else", ":", "\n", "            ", "list1", ".", "append", "(", "str", "(", "float", "(", "i", ")", ")", ")", "\n", "", "", "for", "list2", "in", "list_of_list", "[", "1", ":", "]", ":", "\n", "        ", "list1", "=", "two_rl", "(", "list1", ",", "list2", ")", "\n", "", "return", "list1", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.two": [[82, 88], ["res_list.append"], "function", ["None"], ["", "def", "two", "(", "list1", ",", "list2", ")", ":", "\n", "    ", "res_list", "=", "[", "]", "\n", "for", "str1", "in", "list1", ":", "\n", "        ", "for", "str2", "in", "list2", ":", "\n", "            ", "res_list", ".", "append", "(", "str1", "+", "' '", "+", "str2", ")", "\n", "", "", "return", "res_list", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.cartesian_product": [[90, 95], ["util.two"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.two"], ["", "def", "cartesian_product", "(", "list_of_list", ")", ":", "\n", "    ", "list1", "=", "list_of_list", "[", "0", "]", "\n", "for", "list2", "in", "list_of_list", "[", "1", ":", "]", ":", "\n", "        ", "list1", "=", "two", "(", "list1", ",", "list2", ")", "\n", "", "return", "list1", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.random_weight": [[97, 113], ["node.is_root", "numpy.random.normal", "range", "util.random_weight", "range"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.is_root", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.random_weight"], ["", "def", "random_weight", "(", "node", ")", ":", "\n", "    ", "weight_range", "=", "[", "0", ",", "500", ",", "1500", ",", "3000", ",", "5000", "]", "\n", "if", "not", "node", ".", "is_root", "(", ")", ":", "\n", "# node.propose_w = np.random.randint(-1500, 1500, (node.weight.shape[0], node.weight.shape[1]))", "\n", "        ", "node", ".", "propose_w", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "(", "node", ".", "weight", ".", "shape", "[", "0", "]", ",", "node", ".", "weight", ".", "shape", "[", "1", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "node", ".", "weight", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "node", ".", "weight", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "if", "node", ".", "constraint", "[", "i", "]", "[", "j", "]", "==", "0", ":", "\n", "                    ", "node", ".", "propose_w", "[", "i", "]", "[", "j", "]", "=", "-", "1000000", "\n", "# node.propose_w = np.zeros((node.weight.shape[0], node.weight.shape[1]))", "\n", "# for i in node.propose_w:", "\n", "#     for j in range(len(i)):", "\n", "#         i[j] = np.random.randint(weight_range[j], weight_range[j + 1])", "\n", "", "", "", "", "for", "nex", "in", "node", ".", "children", ":", "\n", "        ", "random_weight", "(", "nex", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.random_vertex_weight": [[114, 131], ["node.is_root", "numpy.random.normal", "range", "util.random_vertex_weight", "numpy.random.randn", "range"], "function", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.tree_datastruct.TreeNode.is_root", "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.util.random_vertex_weight"], ["", "def", "random_vertex_weight", "(", "node", ")", ":", "\n", "    ", "weight_range", "=", "[", "0", ",", "500", ",", "1500", ",", "3000", ",", "5000", "]", "\n", "if", "not", "node", ".", "is_root", "(", ")", ":", "\n", "# node.propose_w = np.random.randint(-1500, 1500, (node.weight.shape[0], node.weight.shape[1]))", "\n", "        ", "node", ".", "propose_w", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "(", "node", ".", "weight", ".", "shape", "[", "0", "]", ",", "node", ".", "weight", ".", "shape", "[", "1", "]", ")", ")", "\n", "node", ".", "propose_v", "=", "0.3", "*", "np", ".", "random", ".", "randn", "(", "node", ".", "weight", ".", "shape", "[", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "node", ".", "weight", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "node", ".", "weight", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "if", "node", ".", "constraint", "[", "i", "]", "[", "j", "]", "==", "0", ":", "\n", "                    ", "node", ".", "propose_w", "[", "i", "]", "[", "j", "]", "=", "-", "1000000", "\n", "# node.propose_w = np.zeros((node.weight.shape[0], node.weight.shape[1]))", "\n", "# for i in node.propose_w:", "\n", "#     for j in range(len(i)):", "\n", "#         i[j] = np.random.randint(weight_range[j], weight_range[j + 1])", "\n", "", "", "", "", "for", "nex", "in", "node", ".", "children", ":", "\n", "        ", "random_vertex_weight", "(", "nex", ")", "\n", "", "return", "", "", ""]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Baseline.__init__": [[5, 19], ["len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "baseline.Baseline.set_creative"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Baseline.set_creative"], ["    ", "def", "__init__", "(", "self", ",", "creative", ",", "p_dict", ")", ":", "\n", "        ", "self", ".", "epsilon", "=", "p_dict", "[", "\"epsilon\"", "]", "\n", "self", ".", "index_all", "=", "{", "}", "\n", "creative_len", "=", "len", "(", "creative", ")", "\n", "self", ".", "curr", "=", "0", "\n", "self", ".", "features", "=", "[", "]", "\n", "self", ".", "weight", "=", "np", ".", "zeros", "(", "creative_len", ")", "\n", "self", ".", "pv", "=", "np", ".", "zeros", "(", "creative_len", ")", "\n", "self", ".", "clk", "=", "np", ".", "zeros", "(", "creative_len", ")", "\n", "self", ".", "ctr", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "\n", "self", ".", "b", "=", "np", ".", "zeros", "(", "(", "creative_len", ",", "1", ")", ")", "# save the res of ctr+upper bound", "\n", "self", ".", "set_creative", "(", "creative", ")", "\n", "self", ".", "total_pv", "=", "0", "\n", "self", ".", "ini_pv", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Baseline.set_creative": [[20, 31], ["str", "baseline.Baseline.features.append", "str"], "methods", ["None"], ["", "def", "set_creative", "(", "self", ",", "creative", ")", ":", "\n", "        ", "i", "=", "0", "\n", "for", "key", "in", "creative", ":", "\n", "            ", "str1", "=", "\"\"", "\n", "for", "k", "in", "creative", "[", "key", "]", "[", "0", ":", "-", "2", "]", ":", "\n", "                ", "str1", "=", "str1", "+", "str", "(", "k", ")", "+", "\" \"", "\n", "", "str1", "+=", "str", "(", "creative", "[", "key", "]", "[", "-", "2", "]", ")", "\n", "self", ".", "index_all", "[", "str1", "]", "=", "i", "\n", "self", ".", "features", ".", "append", "(", "str1", ")", "\n", "self", ".", "ctr", "[", "i", "]", "=", "creative", "[", "key", "]", "[", "-", "1", "]", "\n", "i", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Baseline.get_creative": [[32, 34], ["baseline.Baseline.index_all.keys"], "methods", ["None"], ["", "", "def", "get_creative", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "index_all", ".", "keys", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Random.update": [[37, 39], ["None"], "methods", ["None"], ["    ", "def", "update", "(", "self", ",", "reward", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.Random.recommend": [[40, 43], ["random.randint", "len"], "methods", ["None"], ["", "def", "recommend", "(", "self", ",", "choices", ",", "t", "=", "1", ")", ":", "\n", "        ", "index", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "choices", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "index", "]", ",", "self", ".", "ctr", "[", "index", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson.update": [[46, 51], ["None"], "methods", ["None"], ["    ", "def", "update", "(", "self", ",", "reward_list", ")", ":", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "idx", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "idx", "]", "+=", "1", "\n", "self", ".", "clk", "[", "idx", "]", "+=", "reward", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson.recommend": [[52, 59], ["list", "numpy.argmax", "random.randint", "map", "len", "int"], "methods", ["None"], ["", "", "def", "recommend", "(", "self", ",", "choices", ",", "t", "=", "1", ")", ":", "\n", "        ", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "thompson_list", "=", "list", "(", "map", "(", "self", ".", "thompson", ",", "self", ".", "pv", ",", "self", ".", "clk", ")", ")", "\n", "self", ".", "index", "=", "np", ".", "argmax", "(", "thompson_list", ")", "\n", "return", "self", ".", "features", "[", "int", "(", "self", ".", "index", ")", "]", ",", "self", ".", "ctr", "[", "self", ".", "index", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson.thompson": [[60, 62], ["numpy.random.beta"], "methods", ["None"], ["", "def", "thompson", "(", "self", ",", "pv_num", ",", "click_num", ")", ":", "\n", "        ", "return", "np", ".", "random", ".", "beta", "(", "1", "+", "click_num", ",", "50", "+", "pv_num", "-", "click_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.__init__": [[67, 73], ["baseline.Baseline.__init__", "numpy.zeros", "numpy.zeros", "numpy.ones", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.__init__"], ["def", "__init__", "(", "self", ",", "creative", ",", "p_dict", ")", ":", "\n", "        ", "super", "(", "thompson2", ",", "self", ")", ".", "__init__", "(", "creative", ",", "p_dict", ")", "\n", "self", ".", "mean", "=", "np", ".", "zeros", "(", "(", "len", "(", "creative", ")", ")", ")", "\n", "self", ".", "sum_var", "=", "np", ".", "zeros", "(", "(", "len", "(", "creative", ")", ")", ")", "\n", "self", ".", "std2", "=", "np", ".", "ones", "(", "(", "len", "(", "creative", ")", ")", ")", "\n", "self", ".", "alpha", "=", "p_dict", "[", "\"alpha\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.update": [[74, 84], ["numpy.sqrt"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "reward_list", ")", ":", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "idx", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "mean_old", "=", "self", ".", "clk", "[", "idx", "]", "/", "self", ".", "pv", "[", "idx", "]", "if", "self", ".", "pv", "[", "idx", "]", ">", "0", "else", "0", "\n", "self", ".", "pv", "[", "idx", "]", "+=", "1", "\n", "self", ".", "clk", "[", "idx", "]", "+=", "reward", "[", "1", "]", "\n", "mean_new", "=", "self", ".", "clk", "[", "idx", "]", "/", "self", ".", "pv", "[", "idx", "]", "\n", "self", ".", "mean", "[", "idx", "]", "=", "mean_new", "\n", "self", ".", "sum_var", "[", "idx", "]", "+=", "(", "reward", "[", "1", "]", "-", "mean_old", ")", "*", "(", "reward", "[", "1", "]", "-", "mean_new", ")", "\n", "self", ".", "std2", "[", "idx", "]", "=", "np", ".", "sqrt", "(", "self", ".", "sum_var", "[", "idx", "]", "/", "self", ".", "pv", "[", "idx", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.recommend": [[85, 93], ["list", "numpy.argmax", "random.randint", "map", "len", "int"], "methods", ["None"], ["", "", "def", "recommend", "(", "self", ",", "choices", ",", "t", "=", "1", ")", ":", "\n", "        ", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "thompson_list", "=", "list", "(", "map", "(", "self", ".", "sample_norm", ",", "self", ".", "mean", ",", "self", ".", "std2", ")", ")", "\n", "self", ".", "index", "=", "np", ".", "argmax", "(", "thompson_list", ")", "\n", "# print(self.index)", "\n", "return", "self", ".", "features", "[", "int", "(", "self", ".", "index", ")", "]", ",", "self", ".", "ctr", "[", "self", ".", "index", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.thompson2.sample_norm": [[94, 96], ["numpy.random.normal"], "methods", ["None"], ["", "def", "sample_norm", "(", "self", ",", "u", ",", "o", ")", ":", "\n", "        ", "return", "np", ".", "random", ".", "normal", "(", "u", ",", "self", ".", "alpha", "*", "o", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.EpsilonGreedy.update": [[99, 106], ["None"], "methods", ["None"], ["    ", "def", "update", "(", "self", ",", "reward_list", ")", ":", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "self", ".", "curr", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "clk", "[", "self", ".", "curr", "]", "+=", "reward", "[", "1", "]", "\n", "self", ".", "pv", "[", "self", ".", "curr", "]", "+=", "1", "\n", "self", ".", "weight", "[", "self", ".", "curr", "]", "=", "self", ".", "clk", "[", "self", ".", "curr", "]", "/", "self", ".", "pv", "[", "self", ".", "curr", "]", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.EpsilonGreedy.recommend": [[107, 115], ["baseline.EpsilonGreedy.weight.argmax", "random.randint", "random.random", "random.randint", "len", "len"], "methods", ["None"], ["", "def", "recommend", "(", "self", ",", "choices", ",", "t", "=", "1", ")", ":", "\n", "        ", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "\n", "", "self", ".", "curr", "=", "self", ".", "weight", ".", "argmax", "(", ")", "\n", "if", "random", ".", "random", "(", ")", ">", "1", "-", "self", ".", "epsilon", ":", "\n", "            ", "self", ".", "curr", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "", "return", "self", ".", "features", "[", "self", ".", "curr", "]", ",", "self", ".", "ctr", "[", "self", ".", "curr", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.EpsilonGreedy.get_best_reward": [[116, 125], ["numpy.argmax", "range", "baseline.EpsilonGreedy.recommend"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.recommend"], ["", "def", "get_best_reward", "(", "self", ")", ":", "\n", "        ", "pos", "=", "np", ".", "argmax", "(", "self", ".", "ctr", ")", "\n", "self", ".", "weight", "[", "pos", "]", "=", "100000", "\n", "sum", "=", "0", "\n", "for", "_", "in", "range", "(", "100000", ")", ":", "\n", "            ", "item", "=", "self", ".", "recommend", "(", "None", ",", "1", ")", "\n", "sum", "+=", "item", "[", "1", "]", "\n", "", "sum", "/=", "100000.0", "\n", "return", "sum", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.EpsilonGreedy.curr_best_creative": [[126, 128], ["baseline.EpsilonGreedy.weight.argmax"], "methods", ["None"], ["", "def", "curr_best_creative", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "weight", ".", "argmax", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.EpsilonGreedy.print": [[129, 131], ["baseline.EpsilonGreedy.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print"], ["", "def", "print", "(", "self", ")", ":", "\n", "        ", "print", "(", "self", ".", "pv", ",", "self", ".", "clk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.update": [[134, 146], ["numpy.sqrt", "numpy.log"], "methods", ["None"], ["    ", "def", "update", "(", "self", ",", "reward_list", ")", ":", "\n", "        ", "for", "reward", "in", "reward_list", ":", "\n", "            ", "self", ".", "total_pv", "+=", "1", "\n", "idx", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "self", ".", "pv", "[", "idx", "]", "+=", "1", "\n", "self", ".", "clk", "[", "idx", "]", "+=", "reward", "[", "1", "]", "\n", "\n", "", "for", "reward", "in", "reward_list", ":", "\n", "            ", "idx", "=", "self", ".", "index_all", "[", "reward", "[", "0", "]", "]", "\n", "pvpv", "=", "self", ".", "pv", "[", "idx", "]", "\n", "clkclk", "=", "self", ".", "clk", "[", "idx", "]", "\n", "self", ".", "b", "[", "idx", "]", "=", "clkclk", "/", "pvpv", "+", "0.03", "*", "np", ".", "sqrt", "(", "2", "*", "np", ".", "log", "(", "self", ".", "total_pv", ")", "/", "pvpv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.recommend": [[147, 158], ["numpy.argmax", "len", "random.randint", "len", "int", "int"], "methods", ["None"], ["", "", "def", "recommend", "(", "self", ",", "choices", ",", "t", "=", "1", ")", ":", "\n", "        ", "if", "self", ".", "ini_pv", "<", "len", "(", "self", ".", "pv", ")", ":", "\n", "            ", "self", ".", "index", "=", "self", ".", "ini_pv", "\n", "self", ".", "ini_pv", "+=", "1", "\n", "return", "self", ".", "features", "[", "int", "(", "self", ".", "index", ")", "]", ",", "self", ".", "ctr", "[", "self", ".", "index", "]", "[", "0", "]", "\n", "\n", "", "if", "t", "==", "0", ":", "\n", "            ", "r", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "features", ")", "-", "1", ")", "\n", "return", "self", ".", "features", "[", "r", "]", ",", "self", ".", "ctr", "[", "r", "]", "[", "0", "]", "\n", "", "self", ".", "index", "=", "np", ".", "argmax", "(", "self", ".", "b", ")", "\n", "return", "self", ".", "features", "[", "int", "(", "self", ".", "index", ")", "]", ",", "self", ".", "ctr", "[", "self", ".", "index", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.curr_best_creative": [[159, 161], ["int", "numpy.argmax"], "methods", ["None"], ["", "def", "curr_best_creative", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "np", ".", "argmax", "(", "self", ".", "b", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print": [[162, 166], ["baseline.UCB.print"], "methods", ["home.repos.pwc.inspect_result.alimama-creative_AES-Adaptive-and-Efficient-ad-creative-Selection.policy.baseline.UCB.print"], ["", "def", "print", "(", "self", ")", ":", "\n", "        ", "print", "(", "self", ".", "pv", ")", "\n", "print", "(", "self", ".", "clk", ")", "\n", "print", "(", "self", ".", "b", ")", "\n", "", "", ""]]}