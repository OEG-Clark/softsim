{"home.repos.pwc.inspect_result.zbr17_avsl.collectors.avsl_collector.AVSLCollector.__init__": [[18, 75], ["gedml.core.collectors._DefaultGlobalCollector.__init__", "gedml.core.collectors.BaseCollector.__init__", "len", "avsl_collector.AVSLCollector.initiate_params", "range", "range", "avsl_collector.AVSLCollector.to_record_list.extend", "avsl_collector.AVSLCollector.to_record_list.extend"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.__init__", "home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.__init__", "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.initiate_params"], ["def", "__init__", "(", "\n", "self", ",", "\n", "feature_dim_list", "=", "[", "512", ",", "1024", ",", "2048", "]", ",", "\n", "embed_dim", "=", "512", ",", "\n", "num_classes", "=", "100", ",", "\n", "is_normalize", "=", "True", ",", "\n", "use_proxy", "=", "False", ",", "\n", "split_num", "=", "None", ",", "\n", "topk_corr", "=", "128", ",", "\n", "prob_gamma", "=", "10", ",", "\n", "m", "=", "0.5", ",", "\n", "index_p", "=", "2", ",", "\n", "loss0_weight", "=", "0.1", ",", "\n", "loss1_weight", "=", "0.2", ",", "\n", "loss2_weight", "=", "0.4", ",", "\n", "*", "args", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "        ", "_DefaultGlobalCollector", ".", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "BaseCollector", ".", "__init__", "(", "self", ",", "metric", "=", "None", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "feature_dim_list", "=", "feature_dim_list", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "is_normalize", "=", "is_normalize", "\n", "self", ".", "use_proxy", "=", "use_proxy", "\n", "self", ".", "topk_corr", "=", "topk_corr", "\n", "self", ".", "prob_gamma", "=", "prob_gamma", "\n", "self", ".", "m", "=", "m", "\n", "self", ".", "index_p", "=", "index_p", "\n", "self", ".", "loss0_weight", "=", "loss0_weight", "\n", "self", ".", "loss1_weight", "=", "loss1_weight", "\n", "self", ".", "loss2_weight", "=", "loss2_weight", "\n", "\n", "self", ".", "split_num", "=", "split_num", "\n", "self", ".", "feature_len", "=", "len", "(", "feature_dim_list", ")", "\n", "\n", "self", ".", "is_global_initiate", "=", "False", "\n", "self", ".", "is_link_initiate", "=", "False", "\n", "self", ".", "initiate_params", "(", ")", "\n", "\n", "# NOTE: log variables", "\n", "self", ".", "to_record_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "feature_len", "-", "1", ")", ":", "\n", "            ", "self", ".", "to_record_list", ".", "extend", "(", "[", "\n", "\"delta_link_{}to{}_mean\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "\n", "\"delta_link_{}to{}_max\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "\n", "]", ")", "\n", "", "for", "i", "in", "range", "(", "self", ".", "feature_len", ")", ":", "\n", "            ", "self", ".", "to_record_list", ".", "extend", "(", "[", "\n", "\"prob_coef_{}_max\"", ".", "format", "(", "i", ")", ",", "\n", "\"prob_coef_{}_min\"", ".", "format", "(", "i", ")", ",", "\n", "\"prob_coef_{}_std\"", ".", "format", "(", "i", ")", ",", "\n", "\"prob_coef_{}_mean\"", ".", "format", "(", "i", ")", ",", "\n", "\"prob_bias_{}_max\"", ".", "format", "(", "i", ")", ",", "\n", "\"prob_bias_{}_min\"", ".", "format", "(", "i", ")", ",", "\n", "\"prob_bias_{}_std\"", ".", "format", "(", "i", ")", ",", "\n", "\"prob_bias_{}_mean\"", ".", "format", "(", "i", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.collectors.avsl_collector.AVSLCollector.stats": [[78, 91], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "getattr", "getattr", "setattr", "setattr", "setattr", "setattr", "setattr", "setattr", "setattr", "setattr", "getattr.max", "getattr.min", "getattr.std", "getattr.mean", "getattr.max", "getattr.min", "getattr.std", "getattr.mean"], "methods", ["None"], ["", "", "def", "stats", "(", "self", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "feature_len", ")", ":", "\n", "                ", "prob_coef", "=", "getattr", "(", "self", ",", "\"prob_coef_{}\"", ".", "format", "(", "i", ")", ")", "\n", "prob_bias", "=", "getattr", "(", "self", ",", "\"prob_bias_{}\"", ".", "format", "(", "i", ")", ")", "\n", "setattr", "(", "self", ",", "\"prob_coef_{}_max\"", ".", "format", "(", "i", ")", ",", "prob_coef", ".", "max", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"prob_coef_{}_min\"", ".", "format", "(", "i", ")", ",", "prob_coef", ".", "min", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"prob_coef_{}_std\"", ".", "format", "(", "i", ")", ",", "prob_coef", ".", "std", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"prob_coef_{}_mean\"", ".", "format", "(", "i", ")", ",", "prob_coef", ".", "mean", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"prob_bias_{}_max\"", ".", "format", "(", "i", ")", ",", "prob_bias", ".", "max", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"prob_bias_{}_min\"", ".", "format", "(", "i", ")", ",", "prob_bias", ".", "min", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"prob_bias_{}_std\"", ".", "format", "(", "i", ")", ",", "prob_bias", ".", "std", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"prob_bias_{}_mean\"", ".", "format", "(", "i", ")", ",", "prob_bias", ".", "mean", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.collectors.avsl_collector.AVSLCollector.stats_links": [[93, 101], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "getattr", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "setattr", "setattr", "torch.abs.mean", "torch.abs.mean", "torch.abs.mean", "torch.abs.mean", "torch.abs.max", "torch.abs.max", "torch.abs.max", "torch.abs.max"], "methods", ["None"], ["", "", "", "def", "stats_links", "(", "self", ",", "links", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "feature_len", "-", "1", ")", ":", "\n", "                ", "new_link", "=", "links", "[", "i", "]", "\n", "buffer_link", "=", "getattr", "(", "self", ",", "\"link_{}to{}\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ")", "\n", "delta_link", "=", "torch", ".", "abs", "(", "new_link", "-", "buffer_link", ")", "\n", "setattr", "(", "self", ",", "\"delta_link_{}to{}_mean\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "delta_link", ".", "mean", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"delta_link_{}to{}_max\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "delta_link", ".", "max", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.collectors.avsl_collector.AVSLCollector.initiate_params": [[102, 121], ["range", "range", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "avsl_collector.AVSLCollector.register_buffer", "range", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "setattr", "setattr", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "avsl_collector.AVSLCollector.register_buffer", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.kaiming_normal_", "torch.kaiming_normal_", "torch.kaiming_normal_", "torch.kaiming_normal_", "setattr", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "math.sqrt"], "methods", ["None"], ["", "", "", "def", "initiate_params", "(", "self", ")", ":", "\n", "# proxy", "\n", "        ", "if", "self", ".", "use_proxy", ":", "\n", "            ", "proxy_labels", "=", "torch", ".", "arange", "(", "self", ".", "num_classes", ")", "\n", "self", ".", "register_buffer", "(", "\"proxy_labels\"", ",", "proxy_labels", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "feature_len", ")", ":", "\n", "                ", "proxy", "=", "torch", ".", "randn", "(", "self", ".", "num_classes", ",", "self", ".", "embed_dim", ")", "\n", "init", ".", "kaiming_normal_", "(", "proxy", ",", "a", "=", "math", ".", "sqrt", "(", "5", ")", ")", "\n", "setattr", "(", "self", ",", "\"proxy_{}\"", ".", "format", "(", "i", ")", ",", "nn", ".", "Parameter", "(", "proxy", ")", ")", "\n", "# prob", "\n", "", "", "for", "i", "in", "range", "(", "self", ".", "feature_len", ")", ":", "\n", "            ", "prob_coef", "=", "torch", ".", "ones", "(", "self", ".", "embed_dim", ")", "\n", "prob_bias", "=", "torch", ".", "zeros", "(", "self", ".", "embed_dim", ")", "\n", "setattr", "(", "self", ",", "\"prob_coef_{}\"", ".", "format", "(", "i", ")", ",", "nn", ".", "Parameter", "(", "prob_coef", ")", ")", "\n", "setattr", "(", "self", ",", "\"prob_bias_{}\"", ".", "format", "(", "i", ")", ",", "nn", ".", "Parameter", "(", "prob_bias", ")", ")", "\n", "# link", "\n", "", "for", "i", "in", "range", "(", "self", ".", "feature_len", "-", "1", ")", ":", "\n", "            ", "link", "=", "torch", ".", "zeros", "(", "self", ".", "embed_dim", ",", "self", ".", "embed_dim", ")", "\n", "self", ".", "register_buffer", "(", "\"link_{}to{}\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "link", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.collectors.avsl_collector.AVSLCollector.update_links": [[122, 134], ["range", "getattr"], "methods", ["None"], ["", "", "def", "update_links", "(", "self", ",", "links", ")", ":", "\n", "# NOTE: log variables", "\n", "# if self.is_link_initiate:", "\n", "#     self.stats_links(links)", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "feature_len", "-", "1", ")", ":", "\n", "            ", "new_link", "=", "links", "[", "i", "]", "\n", "buffer_link", "=", "getattr", "(", "self", ",", "\"link_{}to{}\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ")", "\n", "if", "not", "self", ".", "is_link_initiate", ":", "\n", "                ", "buffer_link", ".", "data", "=", "new_link", ".", "data", "\n", "", "else", ":", "\n", "                ", "buffer_link", ".", "data", "=", "self", ".", "m", "*", "buffer_link", ".", "data", "+", "(", "1", "-", "self", ".", "m", ")", "*", "new_link", ".", "data", "\n", "", "", "self", ".", "is_link_initiate", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.collectors.avsl_collector.AVSLCollector.forward": [[135, 205], ["avsl_collector.AVSLCollector.update_links", "avsl_collector.AVSLCollector.compute_all_mat", "avsl_collector.AVSLCollector.extend", "tuple", "embed_list[].size", "embed_list2[].size", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "misc.utils.generate_slice", "misc.utils.generate_slice.values", "range", "avsl_collector.AVSLCollector.compute_all_mat", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "embed_list2.append", "certainty_list2.append", "labels.unsqueeze", "col_labels.unsqueeze", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "getattr", "getattr", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "certainty_list[].mean"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.collectors.avsl_collector.AVSLCollector.update_links", "home.repos.pwc.inspect_result.zbr17_avsl.collectors.avsl_collector.AVSLCollector.compute_all_mat", "home.repos.pwc.inspect_result.zbr17_avsl.misc.utils.generate_slice", "home.repos.pwc.inspect_result.zbr17_avsl.collectors.avsl_collector.AVSLCollector.compute_all_mat"], ["", "def", "forward", "(", "\n", "self", ",", "\n", "embed_list", ",", "\n", "certainty_list", ",", "\n", "labels", ",", "\n", "embed_list2", "=", "None", ",", "\n", "certainty_list2", "=", "None", ",", "\n", "link_list", "=", "None", ",", "\n", ")", "->", "tuple", ":", "\n", "# NOTE: log variables", "\n", "# self.stats()", "\n", "        ", "if", "self", ".", "training", ":", "\n", "# train mode", "\n", "            ", "assert", "link_list", "is", "not", "None", "\n", "# update links", "\n", "self", ".", "update_links", "(", "link_list", ")", "\n", "# compute metric_mat", "\n", "if", "self", ".", "use_proxy", ":", "\n", "                ", "if", "self", ".", "num_classes", "<=", "1000", ":", "\n", "                    ", "col_labels", "=", "self", ".", "proxy_labels", "\n", "", "else", ":", "\n", "                    ", "label_set", "=", "torch", ".", "unique", "(", "labels", ")", "# regard as indices and proxy-labels", "\n", "col_labels", "=", "label_set", "\n", "", "embed_list2", ",", "certainty_list2", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "feature_len", ")", ":", "\n", "                    ", "if", "self", ".", "num_classes", "<=", "1000", ":", "\n", "                        ", "proxy", "=", "getattr", "(", "self", ",", "\"proxy_{}\"", ".", "format", "(", "i", ")", ")", "\n", "", "else", ":", "\n", "                        ", "proxy", "=", "getattr", "(", "self", ",", "\"proxy_{}\"", ".", "format", "(", "i", ")", ")", "[", "col_labels", "]", "\n", "", "embed_list2", ".", "append", "(", "proxy", ")", "\n", "certainty_list2", ".", "append", "(", "\n", "torch", ".", "ones_like", "(", "proxy", ")", "*", "certainty_list", "[", "i", "]", ".", "mean", "(", ")", "\n", ")", "\n", "", "", "else", ":", "\n", "                ", "col_labels", "=", "labels", "\n", "certainty_list2", "=", "certainty_list", "\n", "embed_list2", "=", "embed_list", "\n", "", "output_list", "=", "self", ".", "compute_all_mat", "(", "\n", "embed_list", ",", "\n", "embed_list2", ",", "\n", "certainty_list", ",", "\n", "certainty_list2", "\n", ")", "\n", "output_list", ".", "extend", "(", "[", "\n", "labels", ".", "unsqueeze", "(", "1", ")", ",", "\n", "col_labels", ".", "unsqueeze", "(", "0", ")", ",", "\n", "not", "self", ".", "use_proxy", ",", "\n", "self", ".", "loss0_weight", ",", "\n", "self", ".", "loss1_weight", ",", "\n", "self", ".", "loss2_weight", "\n", "]", ")", "\n", "return", "tuple", "(", "output_list", ")", "\n", "", "else", ":", "\n", "            ", "assert", "self", ".", "split_num", "is", "not", "None", "\n", "bs", "=", "embed_list", "[", "0", "]", ".", "size", "(", "0", ")", "\n", "device", "=", "embed_list", "[", "0", "]", ".", "device", "\n", "embed_list2", "=", "embed_list", "if", "embed_list2", "is", "None", "else", "embed_list2", "\n", "certainty_list2", "=", "certainty_list", "if", "certainty_list2", "is", "None", "else", "certainty_list2", "\n", "bs2", "=", "embed_list2", "[", "0", "]", ".", "size", "(", "0", ")", "\n", "metric_mat", "=", "torch", ".", "zeros", "(", "(", "bs", ",", "bs2", ")", ")", ".", "to", "(", "device", ")", "\n", "slice_dict", "=", "generate_slice", "(", "bs", ",", "self", ".", "split_num", ")", "\n", "for", "slice_index", "in", "slice_dict", ".", "values", "(", ")", ":", "\n", "                ", "metric_mat", "[", "slice_index", ",", ":", "]", "=", "self", ".", "compute_all_mat", "(", "\n", "embed_list", ",", "\n", "embed_list2", ",", "\n", "certainty_list", ",", "\n", "certainty_list2", ",", "\n", "slice_index", "=", "slice_index", "\n", ")", "\n", "", "return", "metric_mat", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.collectors.avsl_collector.AVSLCollector.compute_all_mat": [[206, 266], ["range", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "embed1.unsqueeze.unsqueeze.unsqueeze", "embed2.unsqueeze.unsqueeze.unsqueeze", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "metric_mat_list.append", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.abs().pow.detach", "torch.abs().pow.detach", "torch.abs().pow.detach", "torch.abs().pow.detach", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "misc.utils.topk_mask().byte", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "getattr", "getattr", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "getattr", "misc.utils.topk_mask", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs().pow.detach", "torch.abs().pow.detach", "torch.abs().pow.detach", "torch.abs().pow.detach", "cert1.unsqueeze", "cert2.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.misc.utils.topk_mask"], ["", "", "def", "compute_all_mat", "(", "\n", "self", ",", "\n", "embed_list1", ",", "\n", "embed_list2", ",", "\n", "certainty_list1", ",", "\n", "certainty_list2", ",", "\n", "slice_index", "=", "None", ",", "\n", "slice_index2", "=", "None", ",", "\n", ")", ":", "\n", "        ", "diff_embed_mat_hat", "=", "None", "\n", "metric_mat_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "feature_len", ")", ":", "\n", "            ", "embed1", ",", "embed2", "=", "embed_list1", "[", "i", "]", ",", "embed_list2", "[", "i", "]", "\n", "embed1", "=", "embed1", "[", "slice_index", "]", "if", "slice_index", "is", "not", "None", "else", "embed1", "\n", "embed2", "=", "embed2", "[", "slice_index2", "]", "if", "slice_index2", "is", "not", "None", "else", "embed2", "\n", "cert1", ",", "cert2", "=", "certainty_list1", "[", "i", "]", ",", "certainty_list2", "[", "i", "]", "\n", "cert1", "=", "cert1", "[", "slice_index", "]", "if", "slice_index", "is", "not", "None", "else", "cert1", "\n", "cert2", "=", "cert2", "[", "slice_index2", "]", "if", "slice_index2", "is", "not", "None", "else", "cert2", "\n", "\n", "# batch normalization", "\n", "embed1", ",", "embed2", "=", "F", ".", "normalize", "(", "embed1", ",", "dim", "=", "-", "1", ",", "p", "=", "self", ".", "index_p", ")", ",", "F", ".", "normalize", "(", "embed2", ",", "dim", "=", "-", "1", ",", "p", "=", "self", ".", "index_p", ")", "\n", "# compute diff_embed_mat", "\n", "embed1", "=", "embed1", ".", "unsqueeze", "(", "1", ")", "\n", "embed2", "=", "embed2", ".", "unsqueeze", "(", "0", ")", "\n", "diff_embed_mat", "=", "torch", ".", "abs", "(", "embed1", "-", "embed2", ")", ".", "pow", "(", "self", ".", "index_p", ")", "\n", "\n", "# compute metric_mat", "\n", "cur_metric_mat", "=", "torch", ".", "sum", "(", "diff_embed_mat", ",", "dim", "=", "-", "1", ")", "\n", "metric_mat_list", ".", "append", "(", "cur_metric_mat", ")", "\n", "\n", "if", "diff_embed_mat_hat", "is", "None", ":", "\n", "                ", "diff_embed_mat_hat", "=", "diff_embed_mat", ".", "detach", "(", ")", "\n", "", "else", ":", "\n", "# conversion", "\n", "                ", "link", "=", "torch", ".", "relu", "(", "getattr", "(", "self", ",", "\"link_{}to{}\"", ".", "format", "(", "i", "-", "1", ",", "i", ")", ")", ")", "\n", "mask", "=", "topk_mask", "(", "link", ",", "k", "=", "self", ".", "topk_corr", ",", "dim", "=", "0", ",", "ismax", "=", "True", ")", ".", "byte", "(", ")", "\n", "link_star", "=", "link", "*", "mask", "\n", "link_star", "=", "link_star", "/", "(", "torch", ".", "sum", "(", "link_star", ",", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "+", "1e-8", ")", "\n", "diff_embed_mat_trans", "=", "torch", ".", "matmul", "(", "diff_embed_mat_hat", ",", "link_star", ")", "\n", "\n", "# certainty", "\n", "prob_coef", "=", "getattr", "(", "self", ",", "\"prob_coef_{}\"", ".", "format", "(", "i", ")", ")", "\n", "prob_bias", "=", "getattr", "(", "self", ",", "\"prob_bias_{}\"", ".", "format", "(", "i", ")", ")", "\n", "prob", "=", "cert1", ".", "unsqueeze", "(", "1", ")", "*", "cert2", ".", "unsqueeze", "(", "0", ")", "*", "prob_coef", "+", "prob_bias", "\n", "prob", "=", "torch", ".", "sigmoid", "(", "self", ".", "prob_gamma", "*", "prob", ")", "# probability for certainty", "\n", "\n", "diff_embed_mat_hat", "=", "(", "\n", "diff_embed_mat", ".", "detach", "(", ")", "*", "prob", "+", "\n", "diff_embed_mat_trans", "*", "(", "1", "-", "prob", ")", "\n", ")", "\n", "\n", "# compute final output", "\n", "", "", "final_metric_mat", "=", "torch", ".", "sum", "(", "diff_embed_mat_hat", ",", "dim", "=", "-", "1", ")", "\n", "\n", "# output", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "[", "final_metric_mat", "]", "+", "metric_mat_list", "\n", "", "else", ":", "\n", "            ", "return", "final_metric_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.testers.tester_from_mat.TesterFromMat.__init__": [[12, 15], ["gedml.launcher.testers.BaseTester.__init__"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "split_num", "=", "None", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "TesterFromMat", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "split_num", "=", "split_num", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.testers.tester_from_mat.TesterFromMat.prepare": [[16, 32], ["None"], "methods", ["None"], ["", "def", "prepare", "(", "\n", "self", ",", "\n", "models", ",", "\n", "collectors", ",", "\n", "datasets", ",", "\n", "evaluators", ",", "\n", "device", ",", "\n", "device_ids", ",", "\n", ")", ":", "\n", "# pass parameters", "\n", "        ", "self", ".", "models", "=", "models", "\n", "self", ".", "collectors", "=", "collectors", "\n", "self", ".", "datasets", "=", "datasets", "\n", "self", ".", "evaluators", "=", "evaluators", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "device_ids", "=", "device_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.testers.tester_from_mat.TesterFromMat.get_embeddings": [[33, 63], ["torchdistlog.logging.info", "torchdistlog.tqdm.tqdm", "torch.cat", "info_dict[].to", "info_dict[].to", "embeddings_list.append", "certainty_list.append", "labels_list.append", "torch.cat", "torch.cat", "range", "range", "len", "len"], "methods", ["None"], ["", "def", "get_embeddings", "(", "self", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\n", "\"Compute eval embeddings\"", "\n", ")", "\n", "pbar", "=", "tqdm", "(", "self", ".", "dataloader_iter", ")", "\n", "embeddings_list", ",", "certainty_list", ",", "labels_list", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "info_dict", "in", "pbar", ":", "\n", "# get data", "\n", "            ", "data", "=", "info_dict", "[", "\"data\"", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "label", "=", "info_dict", "[", "\"labels\"", "]", ".", "to", "(", "self", ".", "device", ")", "\n", "# forward", "\n", "feat_tuple", "=", "self", ".", "models", "[", "\"trunk\"", "]", "(", "data", ")", "\n", "embed_tuple", ",", "certainty_tuple", ",", "*", "_", "=", "self", ".", "models", "[", "\"embedder\"", "]", "(", "feat_tuple", ")", "\n", "embeddings_list", ".", "append", "(", "embed_tuple", ")", "\n", "certainty_list", ".", "append", "(", "certainty_tuple", ")", "\n", "labels_list", ".", "append", "(", "label", ")", "\n", "", "self", ".", "embeddings", "=", "[", "\n", "torch", ".", "cat", "(", "[", "\n", "item", "[", "i", "]", "for", "item", "in", "embeddings_list", "\n", "]", ",", "dim", "=", "0", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "embeddings_list", "[", "0", "]", ")", ")", "\n", "]", "\n", "self", ".", "certainty", "=", "[", "\n", "torch", ".", "cat", "(", "[", "\n", "item", "[", "i", "]", "for", "item", "in", "certainty_list", "\n", "]", ",", "dim", "=", "0", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "certainty_list", "[", "0", "]", ")", ")", "\n", "]", "\n", "self", ".", "labels", "=", "torch", ".", "cat", "(", "labels_list", ")", "\n", "self", ".", "collectors", "[", "\"collector\"", "]", ".", "split_num", "=", "100", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.testers.tester_from_mat.TesterFromMat.compute_metrics": [[64, 133], ["tester_from_mat.TesterFromMat.metric_mat.cpu().numpy", "tester_from_mat.TesterFromMat.labels.cpu().numpy", "tester_from_mat.TesterFromMat.evaluators[].get_accuracy", "isinstance", "misc.utils.generate_slice", "torchdistlog.tqdm.tqdm", "list", "tester_from_mat.TesterFromMat.embeddings[].size", "tester_from_mat.TesterFromMat.embeddings.size", "misc.utils.generate_slice.items", "metric_mat.cpu().detach().numpy.cpu().detach().numpy.cpu().detach().numpy", "sub_labels.cpu().numpy.cpu().numpy.cpu().numpy", "col_metrics_dict.append", "col_metrics_dict[].keys", "numpy.mean", "tester_from_mat.TesterFromMat.metric_mat.cpu", "tester_from_mat.TesterFromMat.labels.cpu", "tester_from_mat.TesterFromMat.evaluators[].get_accuracy", "metric_mat.cpu().detach().numpy.cpu().detach().numpy.cpu().detach", "sub_labels.cpu().numpy.cpu().numpy.cpu", "tester_from_mat.TesterFromMat.labels.cpu().numpy", "metric_mat.cpu().detach().numpy.cpu().detach().numpy.cpu", "tester_from_mat.TesterFromMat.labels.cpu"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.misc.utils.generate_slice"], ["", "def", "compute_metrics", "(", "self", ")", ":", "\n", "# for CUB200 and Cars196", "\n", "        ", "if", "self", ".", "split_num", "is", "None", ":", "\n", "            ", "self", ".", "metric_mat", ",", "*", "_", "=", "self", ".", "collectors", "[", "\"collector\"", "]", "(", "\n", "embed_list", "=", "self", ".", "embeddings", ",", "\n", "certainty_list", "=", "self", ".", "certainty", ",", "\n", "labels", "=", "None", ",", "\n", ")", "\n", "self", ".", "metric_mat", "=", "self", ".", "metric_mat", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "self", ".", "labels", "=", "self", ".", "labels", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "metrics_dict", "=", "self", ".", "evaluators", "[", "\"default\"", "]", ".", "get_accuracy", "(", "\n", "self", ".", "metric_mat", ",", "\n", "self", ".", "labels", ",", "\n", "self", ".", "labels", ",", "\n", "True", ",", "\n", "device_ids", "=", "self", ".", "device_ids", "\n", ")", "\n", "# for Online-products", "\n", "", "else", ":", "\n", "            ", "col_metrics_dict", "=", "[", "]", "\n", "is_list", "=", "isinstance", "(", "self", ".", "embeddings", ",", "list", ")", "\n", "if", "is_list", ":", "\n", "                ", "total_bs", "=", "self", ".", "embeddings", "[", "0", "]", ".", "size", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "total_bs", "=", "self", ".", "embeddings", ".", "size", "(", "0", ")", "\n", "", "slice_dict", "=", "generate_slice", "(", "total_bs", ",", "self", ".", "split_num", ")", "\n", "for", "idx", ",", "slice_index", "in", "tqdm", "(", "slice_dict", ".", "items", "(", ")", ")", ":", "\n", "# split slice", "\n", "                ", "if", "is_list", ":", "\n", "                    ", "embed1", "=", "[", "item", "[", "slice_index", "]", "for", "item", "in", "self", ".", "embeddings", "]", "\n", "cert1", "=", "[", "item", "[", "slice_index", "]", "for", "item", "in", "self", ".", "certainty", "]", "\n", "", "else", ":", "\n", "                    ", "embed1", "=", "self", ".", "embeddings", "[", "slice_index", "]", "\n", "cert1", "=", "self", ".", "certainty", "[", "slice_index", "]", "\n", "", "sub_labels", "=", "self", ".", "labels", "[", "slice_index", "]", "\n", "embed2", "=", "self", ".", "embeddings", "\n", "cert2", "=", "self", ".", "certainty", "\n", "\n", "# forward collector", "\n", "metric_mat", ",", "*", "_", "=", "self", ".", "collectors", "[", "\"collector\"", "]", "(", "\n", "embed_list", "=", "embed1", ",", "\n", "certainty_list", "=", "cert1", ",", "\n", "embed_list2", "=", "embed2", ",", "\n", "certainty_list2", "=", "cert2", ",", "\n", "labels", "=", "None", "\n", ")", "\n", "# to numpy", "\n", "metric_mat", "=", "metric_mat", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "sub_labels", "=", "sub_labels", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "col_metrics_dict", ".", "append", "(", "\n", "self", ".", "evaluators", "[", "\"default\"", "]", ".", "get_accuracy", "(", "\n", "metric_mat", ",", "\n", "sub_labels", ",", "\n", "self", ".", "labels", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "\n", "True", ",", "\n", "device_ids", "=", "self", ".", "device_ids", "\n", ")", "\n", ")", "\n", "# calculate mean", "\n", "", "keys_list", "=", "list", "(", "col_metrics_dict", "[", "0", "]", ".", "keys", "(", ")", ")", "\n", "metrics_dict", "=", "{", "}", "\n", "for", "key", "in", "keys_list", ":", "\n", "                ", "result_list", "=", "[", "\n", "item", "[", "key", "]", "for", "item", "in", "col_metrics_dict", "\n", "]", "\n", "metrics_dict", "[", "key", "]", "=", "np", ".", "mean", "(", "result_list", ")", "\n", "\n", "", "", "return", "metrics_dict", "", "", "", ""]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.__init__": [[14, 42], ["gedml.core.modules.WithRecorder.__init__", "len", "avsl_embedder.AVSLEmbedder.initiate_params", "range", "range", "avsl_embedder.AVSLEmbedder.to_record_list.extend", "avsl_embedder.AVSLEmbedder.to_record_list.extend"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.__init__", "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.initiate_params"], ["def", "__init__", "(", "\n", "self", ",", "\n", "feature_dim_list", "=", "[", "576", ",", "1056", ",", "1024", "]", ",", "\n", "output_dim", "=", "512", ",", "\n", "*", "args", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "        ", "super", "(", "AVSLEmbedder", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "feature_dim_list", "=", "feature_dim_list", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "self", ".", "feature_len", "=", "len", "(", "feature_dim_list", ")", "\n", "self", ".", "initiate_params", "(", ")", "\n", "\n", "# NOTE: log variables", "\n", "self", ".", "to_record_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "feature_len", "-", "1", ")", ":", "\n", "            ", "self", ".", "to_record_list", ".", "extend", "(", "[", "\n", "\"link_{}to{}_std\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "\n", "\"link_{}to{}_max\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "\n", "\"link_{}to{}_min\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "\n", "\"link_{}to{}_mean\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "\n", "]", ")", "\n", "", "for", "i", "in", "range", "(", "self", ".", "feature_len", ")", ":", "\n", "            ", "self", ".", "to_record_list", ".", "extend", "(", "[", "\n", "\"certainty_{}_std\"", ".", "format", "(", "i", ")", ",", "\n", "\"certainty_{}_max\"", ".", "format", "(", "i", ")", ",", "\n", "\"certainty_{}_min\"", ".", "format", "(", "i", ")", ",", "\n", "\"certainty_{}_mean\"", ".", "format", "(", "i", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.stats": [[44, 56], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "enumerate", "setattr", "setattr", "setattr", "setattr", "setattr", "setattr", "setattr", "setattr", "link.std", "link.max", "link.min", "link.mean", "certainty.std", "certainty.max", "certainty.min", "certainty.mean"], "methods", ["None"], ["", "", "def", "stats", "(", "self", ",", "links_list", ",", "certainty_list", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "link", "in", "enumerate", "(", "links_list", ")", ":", "\n", "                ", "setattr", "(", "self", ",", "\"link_{}to{}_std\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "link", ".", "std", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"link_{}to{}_max\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "link", ".", "max", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"link_{}to{}_min\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "link", ".", "min", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"link_{}to{}_mean\"", ".", "format", "(", "i", ",", "i", "+", "1", ")", ",", "link", ".", "mean", "(", ")", ")", "\n", "", "for", "i", ",", "certainty", "in", "enumerate", "(", "certainty_list", ")", ":", "\n", "                ", "setattr", "(", "self", ",", "\"certainty_{}_std\"", ".", "format", "(", "i", ")", ",", "certainty", ".", "std", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"certainty_{}_max\"", ".", "format", "(", "i", ")", ",", "certainty", ".", "max", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"certainty_{}_min\"", ".", "format", "(", "i", ")", ",", "certainty", ".", "min", "(", ")", ")", "\n", "setattr", "(", "self", ",", "\"certainty_{}_mean\"", ".", "format", "(", "i", ")", ",", "certainty", ".", "mean", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.initiate_params": [[57, 74], ["torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "enumerate", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.kaiming_normal_", "torch.kaiming_normal_", "torch.kaiming_normal_", "torch.kaiming_normal_", "torch.constant_", "torch.constant_", "torch.constant_", "torch.constant_", "setattr"], "methods", ["None"], ["", "", "", "def", "initiate_params", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        The maxpooling operation makes the embeddings tend towards a positive bias distribution.\n        \"\"\"", "\n", "# pooling", "\n", "self", ".", "adavgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "admaxpool", "=", "nn", ".", "AdaptiveMaxPool2d", "(", "1", ")", "\n", "\n", "for", "idx", ",", "dim", "in", "enumerate", "(", "self", ".", "feature_dim_list", ")", ":", "\n", "# 1x1 conv", "\n", "            ", "conv", "=", "nn", ".", "Conv2d", "(", "dim", ",", "self", ".", "output_dim", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "init", ".", "kaiming_normal_", "(", "conv", ".", "weight", ",", "mode", "=", "\"fan_out\"", ")", "\n", "init", ".", "constant_", "(", "conv", ".", "bias", ",", "0", ")", "\n", "setattr", "(", "\n", "self", ",", "\n", "\"conv1x1_{}\"", ".", "format", "(", "idx", ")", ",", "\n", "conv", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_embedding_at_i": [[76, 87], ["avsl_embedder.AVSLEmbedder.adavgpool", "avsl_embedder.AVSLEmbedder.admaxpool", "getattr", "getattr.", "output.view.view.view", "output.view.view.size"], "methods", ["None"], ["", "", "def", "compute_embedding_at_i", "(", "self", ",", "idx", ",", "input", ")", ":", "\n", "# pooling", "\n", "        ", "ap_feat", "=", "self", ".", "adavgpool", "(", "input", ")", "\n", "mp_feat", "=", "self", ".", "admaxpool", "(", "input", ")", "\n", "output", "=", "ap_feat", "+", "mp_feat", "\n", "# get parameters", "\n", "conv", "=", "getattr", "(", "self", ",", "\"conv1x1_{}\"", ".", "format", "(", "idx", ")", ")", "\n", "# compute embeddigs", "\n", "output", "=", "conv", "(", "output", ")", "\n", "output", "=", "output", ".", "view", "(", "output", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_embed": [[88, 94], ["avsl_embedder.AVSLEmbedder.compute_embedding_at_i", "enumerate"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_embedding_at_i"], ["", "def", "compute_embed", "(", "self", ",", "features", ")", ":", "\n", "        ", "embed_list", "=", "[", "\n", "self", ".", "compute_embedding_at_i", "(", "idx", ",", "item", ")", "\n", "for", "idx", ",", "item", "in", "enumerate", "(", "features", ")", "\n", "]", "\n", "return", "embed_list", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder._linearize": [[95, 104], ["input.size", "input.size", "torch.max_unpool2d", "torch.max_unpool2d", "torch.max_unpool2d", "torch.max_unpool2d", "torch.adaptive_max_pool2d", "torch.adaptive_max_pool2d", "torch.adaptive_max_pool2d", "torch.adaptive_max_pool2d"], "methods", ["None"], ["", "def", "_linearize", "(", "self", ",", "input", ")", ":", "\n", "        ", "H", ",", "W", "=", "input", ".", "size", "(", "2", ")", ",", "input", ".", "size", "(", "3", ")", "\n", "out", "=", "F", ".", "max_unpool2d", "(", "\n", "*", "F", ".", "adaptive_max_pool2d", "(", "\n", "input", ",", "output_size", "=", "1", ",", "return_indices", "=", "True", "\n", ")", ",", "\n", "kernel_size", "=", "(", "H", ",", "W", ")", "\n", ")", "*", "H", "*", "W", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_cam_at_i": [[105, 115], ["input.detach", "avsl_embedder.AVSLEmbedder._linearize", "getattr", "getattr.", "input.detach"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder._linearize"], ["", "def", "compute_cam_at_i", "(", "self", ",", "idx", ",", "input", ")", ":", "\n", "# linearize", "\n", "        ", "ap_output", "=", "input", ".", "detach", "(", ")", "\n", "am_output", "=", "self", ".", "_linearize", "(", "input", ".", "detach", "(", ")", ")", "\n", "output", "=", "ap_output", "+", "am_output", "\n", "# get parameters", "\n", "conv", "=", "getattr", "(", "self", ",", "\"conv1x1_{}\"", ".", "format", "(", "idx", ")", ")", "\n", "# compute cam", "\n", "output", "=", "conv", "(", "output", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_cam": [[116, 122], ["avsl_embedder.AVSLEmbedder.compute_cam_at_i", "enumerate"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_cam_at_i"], ["", "def", "compute_cam", "(", "self", ",", "features", ")", ":", "\n", "        ", "cam_list", "=", "[", "\n", "self", ".", "compute_cam_at_i", "(", "idx", ",", "item", ")", "\n", "for", "idx", ",", "item", "in", "enumerate", "(", "features", ")", "\n", "]", "\n", "return", "cam_list", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_certainty": [[123, 134], ["torch.normalize.flatten", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize.std", "certainty_list.append", "torch.normalize.min"], "methods", ["None"], ["", "def", "compute_certainty", "(", "self", ",", "cams", ")", ":", "# FIXME", "\n", "        ", "certainty_list", "=", "[", "]", "\n", "for", "item", "in", "cams", ":", "\n", "# normalize", "\n", "            ", "item", "=", "item", "-", "item", ".", "min", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "item", "=", "item", ".", "flatten", "(", "2", ")", "\n", "item", "=", "F", ".", "normalize", "(", "item", ",", "dim", "=", "-", "1", ",", "p", "=", "1", ")", "\n", "# std", "\n", "certainty", "=", "item", ".", "std", "(", "dim", "=", "-", "1", ")", "\n", "certainty_list", ".", "append", "(", "certainty", ")", "\n", "", "return", "certainty_list", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_link_at_i": [[135, 153], ["torch.adaptive_avg_pool2d.detach", "torch.normalize.detach", "torch.adaptive_avg_pool2d.flatten", "torch.normalize.flatten", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.adaptive_avg_pool2d.size", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.adaptive_avg_pool2d.size", "torch.normalize.size", "torch.normalize.size"], "methods", ["None"], ["", "def", "compute_link_at_i", "(", "self", ",", "low_input", ":", "torch", ".", "Tensor", ",", "high_input", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "low_input", "=", "low_input", ".", "detach", "(", ")", "\n", "high_input", "=", "high_input", ".", "detach", "(", ")", "\n", "# pooling if necessary", "\n", "if", "low_input", ".", "size", "(", ")", "[", "2", ":", "]", "!=", "high_input", ".", "size", "(", ")", "[", "2", ":", "]", ":", "\n", "            ", "low_input", "=", "F", ".", "adaptive_avg_pool2d", "(", "\n", "low_input", ",", "\n", "output_size", "=", "high_input", ".", "size", "(", ")", "[", "2", ":", "]", "\n", ")", "\n", "", "low_input", "=", "low_input", ".", "flatten", "(", "2", ")", "\n", "high_input", "=", "high_input", ".", "flatten", "(", "2", ")", "\n", "# normalize", "\n", "low_input", "=", "F", ".", "normalize", "(", "low_input", ",", "p", "=", "2", ",", "dim", "=", "-", "1", ")", "\n", "high_input", "=", "F", ".", "normalize", "(", "high_input", ",", "p", "=", "2", ",", "dim", "=", "-", "1", ")", "\n", "# compute link", "\n", "bs", "=", "low_input", ".", "size", "(", "0", ")", "\n", "link", "=", "torch", ".", "einsum", "(", "\"imj, inj -> mn\"", ",", "low_input", ",", "high_input", ")", "/", "bs", "\n", "return", "link", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.forward": [[154, 189], ["avsl_embedder.AVSLEmbedder.compute_embed", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "avsl_embedder.AVSLEmbedder.compute_cam", "avsl_embedder.AVSLEmbedder.compute_certainty", "range", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "avsl_embedder.AVSLEmbedder.compute_cam", "avsl_embedder.AVSLEmbedder.compute_certainty", "cam_list[].detach", "cam_list[].detach", "avsl_embedder.AVSLEmbedder.compute_link_at_i", "links_list.append"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_embed", "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_cam", "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_certainty", "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_cam", "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_certainty", "home.repos.pwc.inspect_result.zbr17_avsl.models.avsl_embedder.AVSLEmbedder.compute_link_at_i"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "\"\"\"\n        From low level to high level\n        \"\"\"", "\n", "# compute the reduced output", "\n", "embed_list", "=", "self", ".", "compute_embed", "(", "features", ")", "\n", "\n", "# for training ", "\n", "if", "self", ".", "training", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "cam_list", "=", "self", ".", "compute_cam", "(", "features", ")", "\n", "certainty_list", "=", "self", ".", "compute_certainty", "(", "cam_list", ")", "\n", "# compute links", "\n", "links_list", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "self", ".", "feature_len", "-", "1", ")", ":", "\n", "                    ", "cam_low", "=", "cam_list", "[", "idx", "]", ".", "detach", "(", ")", "\n", "cam_high", "=", "cam_list", "[", "idx", "+", "1", "]", ".", "detach", "(", ")", "\n", "link", "=", "self", ".", "compute_link_at_i", "(", "cam_low", ",", "cam_high", ")", "\n", "links_list", ".", "append", "(", "link", ")", "\n", "# NOTE: log variables", "\n", "# self.stats(links_list, certainty_list)", "\n", "", "", "return", "(", "\n", "embed_list", ",", "\n", "certainty_list", ",", "\n", "links_list", "\n", ")", "\n", "# for testing", "\n", "", "else", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "cam_list", "=", "self", ".", "compute_cam", "(", "features", ")", "\n", "certainty_list", "=", "self", ".", "compute_certainty", "(", "cam_list", ")", "\n", "", "return", "(", "\n", "embed_list", ",", "\n", "certainty_list", ",", "\n", "None", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.resnet50_decom.resnet50Decom.__init__": [[12, 26], ["torch.Module.__init__", "torchvision.models.resnet50", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "resnet50_decom.resnet50Decom.model.modules", "isinstance", "m.eval", "m.weight.requires_grad_", "m.bias.requires_grad_"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", "=", "True", ",", "bn_freeze", "=", "True", ")", ":", "\n", "        ", "super", "(", "resnet50Decom", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "model", "=", "raw_resnet50", "(", "pretrained", ")", "\n", "self", ".", "num_ftrs", "=", "self", ".", "model", ".", "fc", ".", "in_features", "\n", "self", ".", "model", ".", "gap", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "model", ".", "gmp", "=", "nn", ".", "AdaptiveMaxPool2d", "(", "1", ")", "\n", "\n", "if", "bn_freeze", ":", "\n", "            ", "for", "m", "in", "self", ".", "model", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                    ", "m", ".", "eval", "(", ")", "\n", "m", ".", "weight", ".", "requires_grad_", "(", "False", ")", "\n", "m", ".", "bias", ".", "requires_grad_", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.resnet50_decom.resnet50Decom.forward": [[27, 47], ["resnet50_decom.resnet50Decom.model.conv1", "resnet50_decom.resnet50Decom.model.bn1", "resnet50_decom.resnet50Decom.model.relu", "resnet50_decom.resnet50Decom.model.maxpool", "resnet50_decom.resnet50Decom.model.layer1", "resnet50_decom.resnet50Decom.model.layer2", "resnet50_decom.resnet50Decom.model.layer3", "resnet50_decom.resnet50Decom.model.layer4"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "# FIXME: use resnet50 to do experiments", "\n", "        ", "x", "=", "self", ".", "model", ".", "conv1", "(", "x", ")", "# B x 64 x 112 x 112", "\n", "x", "=", "self", ".", "model", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "model", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "model", ".", "maxpool", "(", "x", ")", "# B x 64 x 56 x 56", "\n", "x", "=", "self", ".", "model", ".", "layer1", "(", "x", ")", "# B x 256 x 56 x 56", "\n", "x_layer2", "=", "self", ".", "model", ".", "layer2", "(", "x", ")", "# B x 512 x 28 x 28", "\n", "x_layer3", "=", "self", ".", "model", ".", "layer3", "(", "x_layer2", ")", "# B x 1024 x 14 x 14", "\n", "x_layer4", "=", "self", ".", "model", ".", "layer4", "(", "x_layer3", ")", "# B x 2048 x 7 x 7", "\n", "\n", "# avg_x = self.model.gap(x)", "\n", "# max_x = self.model.gmp(x)", "\n", "\n", "# x = max_x + avg_x", "\n", "# x = x.view(x.size(0), -1)", "\n", "\n", "return", "[", "# Mustn't use tuple type", "\n", "x_layer2", ",", "\n", "x_layer3", ",", "\n", "x_layer4", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.bninception_decom.Aggregator.__init__": [[27, 29], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Aggregator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.bninception_decom.Aggregator.forward": [[30, 32], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "dim", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "input", ",", "dim", "=", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.bninception_decom.BNInception.__init__": [[35, 266], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "bninception_decom.Aggregator", "bninception_decom.Aggregator", "bninception_decom.Aggregator"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "super", "(", "BNInception", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inplace", "=", "True", "\n", "self", ".", "conv1_7x7_s2", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "3", ",", "3", ")", ")", "\n", "self", ".", "conv1_7x7_s2_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "conv1_relu_7x7", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "pool1_3x3_s2", "=", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "dilation", "=", "(", "1", ",", "1", ")", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "conv2_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv2_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "conv2_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "conv2_3x3", "=", "nn", ".", "Conv2d", "(", "64", ",", "192", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv2_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", "\n", "self", ".", "conv2_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "pool2_3x3_s2", "=", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "dilation", "=", "(", "1", ",", "1", ")", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "inception_3a_1x1", "=", "nn", ".", "Conv2d", "(", "192", ",", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3a_1x1_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3a_relu_1x1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3a_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "192", ",", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3a_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3a_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3a_3x3", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3a_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3a_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3a_double_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "192", ",", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3a_double_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3a_relu_double_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3a_double_3x3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "96", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3a_double_3x3_1_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3a_relu_double_3x3_1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3a_double_3x3_2", "=", "nn", ".", "Conv2d", "(", "96", ",", "96", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3a_double_3x3_2_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3a_relu_double_3x3_2", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3a_pool", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "True", ")", "\n", "self", ".", "inception_3a_pool_proj", "=", "nn", ".", "Conv2d", "(", "192", ",", "32", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3a_pool_proj_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3a_relu_pool_proj", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3b_1x1", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3b_1x1_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3b_relu_1x1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3b_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3b_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3b_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3b_3x3", "=", "nn", ".", "Conv2d", "(", "64", ",", "96", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3b_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3b_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3b_double_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3b_double_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3b_relu_double_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3b_double_3x3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "96", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3b_double_3x3_1_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3b_relu_double_3x3_1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3b_double_3x3_2", "=", "nn", ".", "Conv2d", "(", "96", ",", "96", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3b_double_3x3_2_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3b_relu_double_3x3_2", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3b_pool", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "True", ")", "\n", "self", ".", "inception_3b_pool_proj", "=", "nn", ".", "Conv2d", "(", "256", ",", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3b_pool_proj_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3b_relu_pool_proj", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3c_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "320", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3c_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3c_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3c_3x3", "=", "nn", ".", "Conv2d", "(", "128", ",", "160", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3c_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "160", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3c_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3c_double_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "320", ",", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3c_double_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3c_relu_double_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3c_double_3x3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "96", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3c_double_3x3_1_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3c_relu_double_3x3_1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3c_double_3x3_2", "=", "nn", ".", "Conv2d", "(", "96", ",", "96", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_3c_double_3x3_2_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_3c_relu_double_3x3_2", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_3c_pool", "=", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "dilation", "=", "(", "1", ",", "1", ")", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "inception_4a_1x1", "=", "nn", ".", "Conv2d", "(", "576", ",", "224", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4a_1x1_bn", "=", "nn", ".", "BatchNorm2d", "(", "224", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4a_relu_1x1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4a_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "576", ",", "64", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4a_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4a_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4a_3x3", "=", "nn", ".", "Conv2d", "(", "64", ",", "96", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4a_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4a_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4a_double_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "576", ",", "96", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4a_double_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4a_relu_double_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4a_double_3x3_1", "=", "nn", ".", "Conv2d", "(", "96", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4a_double_3x3_1_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4a_relu_double_3x3_1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4a_double_3x3_2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4a_double_3x3_2_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4a_relu_double_3x3_2", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4a_pool", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "True", ")", "\n", "self", ".", "inception_4a_pool_proj", "=", "nn", ".", "Conv2d", "(", "576", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4a_pool_proj_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4a_relu_pool_proj", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4b_1x1", "=", "nn", ".", "Conv2d", "(", "576", ",", "192", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4b_1x1_bn", "=", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4b_relu_1x1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4b_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "576", ",", "96", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4b_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4b_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4b_3x3", "=", "nn", ".", "Conv2d", "(", "96", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4b_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4b_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4b_double_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "576", ",", "96", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4b_double_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4b_relu_double_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4b_double_3x3_1", "=", "nn", ".", "Conv2d", "(", "96", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4b_double_3x3_1_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4b_relu_double_3x3_1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4b_double_3x3_2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4b_double_3x3_2_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4b_relu_double_3x3_2", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4b_pool", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "True", ")", "\n", "self", ".", "inception_4b_pool_proj", "=", "nn", ".", "Conv2d", "(", "576", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4b_pool_proj_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4b_relu_pool_proj", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4c_1x1", "=", "nn", ".", "Conv2d", "(", "576", ",", "160", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4c_1x1_bn", "=", "nn", ".", "BatchNorm2d", "(", "160", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4c_relu_1x1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4c_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "576", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4c_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4c_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4c_3x3", "=", "nn", ".", "Conv2d", "(", "128", ",", "160", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4c_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "160", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4c_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4c_double_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "576", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4c_double_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4c_relu_double_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4c_double_3x3_1", "=", "nn", ".", "Conv2d", "(", "128", ",", "160", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4c_double_3x3_1_bn", "=", "nn", ".", "BatchNorm2d", "(", "160", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4c_relu_double_3x3_1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4c_double_3x3_2", "=", "nn", ".", "Conv2d", "(", "160", ",", "160", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4c_double_3x3_2_bn", "=", "nn", ".", "BatchNorm2d", "(", "160", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4c_relu_double_3x3_2", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4c_pool", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "True", ")", "\n", "self", ".", "inception_4c_pool_proj", "=", "nn", ".", "Conv2d", "(", "576", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4c_pool_proj_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4c_relu_pool_proj", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4d_1x1", "=", "nn", ".", "Conv2d", "(", "608", ",", "96", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4d_1x1_bn", "=", "nn", ".", "BatchNorm2d", "(", "96", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4d_relu_1x1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4d_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "608", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4d_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4d_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4d_3x3", "=", "nn", ".", "Conv2d", "(", "128", ",", "192", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4d_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4d_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4d_double_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "608", ",", "160", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4d_double_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "160", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4d_relu_double_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4d_double_3x3_1", "=", "nn", ".", "Conv2d", "(", "160", ",", "192", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4d_double_3x3_1_bn", "=", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4d_relu_double_3x3_1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4d_double_3x3_2", "=", "nn", ".", "Conv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4d_double_3x3_2_bn", "=", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4d_relu_double_3x3_2", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4d_pool", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "True", ")", "\n", "self", ".", "inception_4d_pool_proj", "=", "nn", ".", "Conv2d", "(", "608", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4d_pool_proj_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4d_relu_pool_proj", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4e_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "608", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4e_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4e_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4e_3x3", "=", "nn", ".", "Conv2d", "(", "128", ",", "192", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4e_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4e_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4e_double_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "608", ",", "192", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4e_double_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4e_relu_double_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4e_double_3x3_1", "=", "nn", ".", "Conv2d", "(", "192", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4e_double_3x3_1_bn", "=", "nn", ".", "BatchNorm2d", "(", "256", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4e_relu_double_3x3_1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4e_double_3x3_2", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_4e_double_3x3_2_bn", "=", "nn", ".", "BatchNorm2d", "(", "256", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_4e_relu_double_3x3_2", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_4e_pool", "=", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "dilation", "=", "(", "1", ",", "1", ")", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "inception_5a_1x1", "=", "nn", ".", "Conv2d", "(", "1056", ",", "352", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5a_1x1_bn", "=", "nn", ".", "BatchNorm2d", "(", "352", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5a_relu_1x1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5a_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "1056", ",", "192", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5a_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5a_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5a_3x3", "=", "nn", ".", "Conv2d", "(", "192", ",", "320", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5a_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "320", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5a_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5a_double_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "1056", ",", "160", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5a_double_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "160", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5a_relu_double_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5a_double_3x3_1", "=", "nn", ".", "Conv2d", "(", "160", ",", "224", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5a_double_3x3_1_bn", "=", "nn", ".", "BatchNorm2d", "(", "224", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5a_relu_double_3x3_1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5a_double_3x3_2", "=", "nn", ".", "Conv2d", "(", "224", ",", "224", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5a_double_3x3_2_bn", "=", "nn", ".", "BatchNorm2d", "(", "224", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5a_relu_double_3x3_2", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5a_pool", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "True", ")", "\n", "self", ".", "inception_5a_pool_proj", "=", "nn", ".", "Conv2d", "(", "1056", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5a_pool_proj_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5a_relu_pool_proj", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5b_1x1", "=", "nn", ".", "Conv2d", "(", "1024", ",", "352", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5b_1x1_bn", "=", "nn", ".", "BatchNorm2d", "(", "352", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5b_relu_1x1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5b_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "1024", ",", "192", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5b_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5b_relu_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5b_3x3", "=", "nn", ".", "Conv2d", "(", "192", ",", "320", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5b_3x3_bn", "=", "nn", ".", "BatchNorm2d", "(", "320", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5b_relu_3x3", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5b_double_3x3_reduce", "=", "nn", ".", "Conv2d", "(", "1024", ",", "192", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5b_double_3x3_reduce_bn", "=", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5b_relu_double_3x3_reduce", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5b_double_3x3_1", "=", "nn", ".", "Conv2d", "(", "192", ",", "224", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5b_double_3x3_1_bn", "=", "nn", ".", "BatchNorm2d", "(", "224", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5b_relu_double_3x3_1", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5b_double_3x3_2", "=", "nn", ".", "Conv2d", "(", "224", ",", "224", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5b_double_3x3_2_bn", "=", "nn", ".", "BatchNorm2d", "(", "224", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5b_relu_double_3x3_2", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "inception_5b_pool", "=", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "dilation", "=", "(", "1", ",", "1", ")", ",", "ceil_mode", "=", "True", ")", "\n", "self", ".", "inception_5b_pool_proj", "=", "nn", ".", "Conv2d", "(", "1024", ",", "128", ",", "kernel_size", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "inception_5b_pool_proj_bn", "=", "nn", ".", "BatchNorm2d", "(", "128", ",", "affine", "=", "True", ")", "\n", "self", ".", "inception_5b_relu_pool_proj", "=", "nn", ".", "ReLU", "(", "inplace", ")", "\n", "self", ".", "global_pool", "=", "nn", ".", "AvgPool2d", "(", "7", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "ceil_mode", "=", "True", ",", "count_include_pad", "=", "True", ")", "\n", "self", ".", "last_linear", "=", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", "\n", "\n", "self", ".", "adavgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "admaxpool", "=", "nn", ".", "AdaptiveMaxPool2d", "(", "1", ")", "\n", "\n", "self", ".", "layer_4b", "=", "Aggregator", "(", ")", "\n", "self", ".", "layer_4e", "=", "Aggregator", "(", ")", "\n", "self", ".", "layer_5b", "=", "Aggregator", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.bninception_decom.BNInception.features": [[267, 504], ["bninception_decom.BNInception.conv1_7x7_s2", "bninception_decom.BNInception.conv1_7x7_s2_bn", "bninception_decom.BNInception.conv1_relu_7x7", "bninception_decom.BNInception.pool1_3x3_s2", "bninception_decom.BNInception.conv2_3x3_reduce", "bninception_decom.BNInception.conv2_3x3_reduce_bn", "bninception_decom.BNInception.conv2_relu_3x3_reduce", "bninception_decom.BNInception.conv2_3x3", "bninception_decom.BNInception.conv2_3x3_bn", "bninception_decom.BNInception.conv2_relu_3x3", "bninception_decom.BNInception.pool2_3x3_s2", "bninception_decom.BNInception.inception_3a_1x1", "bninception_decom.BNInception.inception_3a_1x1_bn", "bninception_decom.BNInception.inception_3a_relu_1x1", "bninception_decom.BNInception.inception_3a_3x3_reduce", "bninception_decom.BNInception.inception_3a_3x3_reduce_bn", "bninception_decom.BNInception.inception_3a_relu_3x3_reduce", "bninception_decom.BNInception.inception_3a_3x3", "bninception_decom.BNInception.inception_3a_3x3_bn", "bninception_decom.BNInception.inception_3a_relu_3x3", "bninception_decom.BNInception.inception_3a_double_3x3_reduce", "bninception_decom.BNInception.inception_3a_double_3x3_reduce_bn", "bninception_decom.BNInception.inception_3a_relu_double_3x3_reduce", "bninception_decom.BNInception.inception_3a_double_3x3_1", "bninception_decom.BNInception.inception_3a_double_3x3_1_bn", "bninception_decom.BNInception.inception_3a_relu_double_3x3_1", "bninception_decom.BNInception.inception_3a_double_3x3_2", "bninception_decom.BNInception.inception_3a_double_3x3_2_bn", "bninception_decom.BNInception.inception_3a_relu_double_3x3_2", "bninception_decom.BNInception.inception_3a_pool", "bninception_decom.BNInception.inception_3a_pool_proj", "bninception_decom.BNInception.inception_3a_pool_proj_bn", "bninception_decom.BNInception.inception_3a_relu_pool_proj", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bninception_decom.BNInception.inception_3b_1x1", "bninception_decom.BNInception.inception_3b_1x1_bn", "bninception_decom.BNInception.inception_3b_relu_1x1", "bninception_decom.BNInception.inception_3b_3x3_reduce", "bninception_decom.BNInception.inception_3b_3x3_reduce_bn", "bninception_decom.BNInception.inception_3b_relu_3x3_reduce", "bninception_decom.BNInception.inception_3b_3x3", "bninception_decom.BNInception.inception_3b_3x3_bn", "bninception_decom.BNInception.inception_3b_relu_3x3", "bninception_decom.BNInception.inception_3b_double_3x3_reduce", "bninception_decom.BNInception.inception_3b_double_3x3_reduce_bn", "bninception_decom.BNInception.inception_3b_relu_double_3x3_reduce", "bninception_decom.BNInception.inception_3b_double_3x3_1", "bninception_decom.BNInception.inception_3b_double_3x3_1_bn", "bninception_decom.BNInception.inception_3b_relu_double_3x3_1", "bninception_decom.BNInception.inception_3b_double_3x3_2", "bninception_decom.BNInception.inception_3b_double_3x3_2_bn", "bninception_decom.BNInception.inception_3b_relu_double_3x3_2", "bninception_decom.BNInception.inception_3b_pool", "bninception_decom.BNInception.inception_3b_pool_proj", "bninception_decom.BNInception.inception_3b_pool_proj_bn", "bninception_decom.BNInception.inception_3b_relu_pool_proj", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bninception_decom.BNInception.inception_3c_3x3_reduce", "bninception_decom.BNInception.inception_3c_3x3_reduce_bn", "bninception_decom.BNInception.inception_3c_relu_3x3_reduce", "bninception_decom.BNInception.inception_3c_3x3", "bninception_decom.BNInception.inception_3c_3x3_bn", "bninception_decom.BNInception.inception_3c_relu_3x3", "bninception_decom.BNInception.inception_3c_double_3x3_reduce", "bninception_decom.BNInception.inception_3c_double_3x3_reduce_bn", "bninception_decom.BNInception.inception_3c_relu_double_3x3_reduce", "bninception_decom.BNInception.inception_3c_double_3x3_1", "bninception_decom.BNInception.inception_3c_double_3x3_1_bn", "bninception_decom.BNInception.inception_3c_relu_double_3x3_1", "bninception_decom.BNInception.inception_3c_double_3x3_2", "bninception_decom.BNInception.inception_3c_double_3x3_2_bn", "bninception_decom.BNInception.inception_3c_relu_double_3x3_2", "bninception_decom.BNInception.inception_3c_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bninception_decom.BNInception.inception_4a_1x1", "bninception_decom.BNInception.inception_4a_1x1_bn", "bninception_decom.BNInception.inception_4a_relu_1x1", "bninception_decom.BNInception.inception_4a_3x3_reduce", "bninception_decom.BNInception.inception_4a_3x3_reduce_bn", "bninception_decom.BNInception.inception_4a_relu_3x3_reduce", "bninception_decom.BNInception.inception_4a_3x3", "bninception_decom.BNInception.inception_4a_3x3_bn", "bninception_decom.BNInception.inception_4a_relu_3x3", "bninception_decom.BNInception.inception_4a_double_3x3_reduce", "bninception_decom.BNInception.inception_4a_double_3x3_reduce_bn", "bninception_decom.BNInception.inception_4a_relu_double_3x3_reduce", "bninception_decom.BNInception.inception_4a_double_3x3_1", "bninception_decom.BNInception.inception_4a_double_3x3_1_bn", "bninception_decom.BNInception.inception_4a_relu_double_3x3_1", "bninception_decom.BNInception.inception_4a_double_3x3_2", "bninception_decom.BNInception.inception_4a_double_3x3_2_bn", "bninception_decom.BNInception.inception_4a_relu_double_3x3_2", "bninception_decom.BNInception.inception_4a_pool", "bninception_decom.BNInception.inception_4a_pool_proj", "bninception_decom.BNInception.inception_4a_pool_proj_bn", "bninception_decom.BNInception.inception_4a_relu_pool_proj", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bninception_decom.BNInception.inception_4b_1x1", "bninception_decom.BNInception.inception_4b_1x1_bn", "bninception_decom.BNInception.inception_4b_relu_1x1", "bninception_decom.BNInception.inception_4b_3x3_reduce", "bninception_decom.BNInception.inception_4b_3x3_reduce_bn", "bninception_decom.BNInception.inception_4b_relu_3x3_reduce", "bninception_decom.BNInception.inception_4b_3x3", "bninception_decom.BNInception.inception_4b_3x3_bn", "bninception_decom.BNInception.inception_4b_relu_3x3", "bninception_decom.BNInception.inception_4b_double_3x3_reduce", "bninception_decom.BNInception.inception_4b_double_3x3_reduce_bn", "bninception_decom.BNInception.inception_4b_relu_double_3x3_reduce", "bninception_decom.BNInception.inception_4b_double_3x3_1", "bninception_decom.BNInception.inception_4b_double_3x3_1_bn", "bninception_decom.BNInception.inception_4b_relu_double_3x3_1", "bninception_decom.BNInception.inception_4b_double_3x3_2", "bninception_decom.BNInception.inception_4b_double_3x3_2_bn", "bninception_decom.BNInception.inception_4b_relu_double_3x3_2", "bninception_decom.BNInception.inception_4b_pool", "bninception_decom.BNInception.inception_4b_pool_proj", "bninception_decom.BNInception.inception_4b_pool_proj_bn", "bninception_decom.BNInception.inception_4b_relu_pool_proj", "bninception_decom.BNInception.layer_4b", "bninception_decom.BNInception.inception_4c_1x1", "bninception_decom.BNInception.inception_4c_1x1_bn", "bninception_decom.BNInception.inception_4c_relu_1x1", "bninception_decom.BNInception.inception_4c_3x3_reduce", "bninception_decom.BNInception.inception_4c_3x3_reduce_bn", "bninception_decom.BNInception.inception_4c_relu_3x3_reduce", "bninception_decom.BNInception.inception_4c_3x3", "bninception_decom.BNInception.inception_4c_3x3_bn", "bninception_decom.BNInception.inception_4c_relu_3x3", "bninception_decom.BNInception.inception_4c_double_3x3_reduce", "bninception_decom.BNInception.inception_4c_double_3x3_reduce_bn", "bninception_decom.BNInception.inception_4c_relu_double_3x3_reduce", "bninception_decom.BNInception.inception_4c_double_3x3_1", "bninception_decom.BNInception.inception_4c_double_3x3_1_bn", "bninception_decom.BNInception.inception_4c_relu_double_3x3_1", "bninception_decom.BNInception.inception_4c_double_3x3_2", "bninception_decom.BNInception.inception_4c_double_3x3_2_bn", "bninception_decom.BNInception.inception_4c_relu_double_3x3_2", "bninception_decom.BNInception.inception_4c_pool", "bninception_decom.BNInception.inception_4c_pool_proj", "bninception_decom.BNInception.inception_4c_pool_proj_bn", "bninception_decom.BNInception.inception_4c_relu_pool_proj", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bninception_decom.BNInception.inception_4d_1x1", "bninception_decom.BNInception.inception_4d_1x1_bn", "bninception_decom.BNInception.inception_4d_relu_1x1", "bninception_decom.BNInception.inception_4d_3x3_reduce", "bninception_decom.BNInception.inception_4d_3x3_reduce_bn", "bninception_decom.BNInception.inception_4d_relu_3x3_reduce", "bninception_decom.BNInception.inception_4d_3x3", "bninception_decom.BNInception.inception_4d_3x3_bn", "bninception_decom.BNInception.inception_4d_relu_3x3", "bninception_decom.BNInception.inception_4d_double_3x3_reduce", "bninception_decom.BNInception.inception_4d_double_3x3_reduce_bn", "bninception_decom.BNInception.inception_4d_relu_double_3x3_reduce", "bninception_decom.BNInception.inception_4d_double_3x3_1", "bninception_decom.BNInception.inception_4d_double_3x3_1_bn", "bninception_decom.BNInception.inception_4d_relu_double_3x3_1", "bninception_decom.BNInception.inception_4d_double_3x3_2", "bninception_decom.BNInception.inception_4d_double_3x3_2_bn", "bninception_decom.BNInception.inception_4d_relu_double_3x3_2", "bninception_decom.BNInception.inception_4d_pool", "bninception_decom.BNInception.inception_4d_pool_proj", "bninception_decom.BNInception.inception_4d_pool_proj_bn", "bninception_decom.BNInception.inception_4d_relu_pool_proj", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bninception_decom.BNInception.inception_4e_3x3_reduce", "bninception_decom.BNInception.inception_4e_3x3_reduce_bn", "bninception_decom.BNInception.inception_4e_relu_3x3_reduce", "bninception_decom.BNInception.inception_4e_3x3", "bninception_decom.BNInception.inception_4e_3x3_bn", "bninception_decom.BNInception.inception_4e_relu_3x3", "bninception_decom.BNInception.inception_4e_double_3x3_reduce", "bninception_decom.BNInception.inception_4e_double_3x3_reduce_bn", "bninception_decom.BNInception.inception_4e_relu_double_3x3_reduce", "bninception_decom.BNInception.inception_4e_double_3x3_1", "bninception_decom.BNInception.inception_4e_double_3x3_1_bn", "bninception_decom.BNInception.inception_4e_relu_double_3x3_1", "bninception_decom.BNInception.inception_4e_double_3x3_2", "bninception_decom.BNInception.inception_4e_double_3x3_2_bn", "bninception_decom.BNInception.inception_4e_relu_double_3x3_2", "bninception_decom.BNInception.inception_4e_pool", "bninception_decom.BNInception.layer_4e", "bninception_decom.BNInception.inception_5a_1x1", "bninception_decom.BNInception.inception_5a_1x1_bn", "bninception_decom.BNInception.inception_5a_relu_1x1", "bninception_decom.BNInception.inception_5a_3x3_reduce", "bninception_decom.BNInception.inception_5a_3x3_reduce_bn", "bninception_decom.BNInception.inception_5a_relu_3x3_reduce", "bninception_decom.BNInception.inception_5a_3x3", "bninception_decom.BNInception.inception_5a_3x3_bn", "bninception_decom.BNInception.inception_5a_relu_3x3", "bninception_decom.BNInception.inception_5a_double_3x3_reduce", "bninception_decom.BNInception.inception_5a_double_3x3_reduce_bn", "bninception_decom.BNInception.inception_5a_relu_double_3x3_reduce", "bninception_decom.BNInception.inception_5a_double_3x3_1", "bninception_decom.BNInception.inception_5a_double_3x3_1_bn", "bninception_decom.BNInception.inception_5a_relu_double_3x3_1", "bninception_decom.BNInception.inception_5a_double_3x3_2", "bninception_decom.BNInception.inception_5a_double_3x3_2_bn", "bninception_decom.BNInception.inception_5a_relu_double_3x3_2", "bninception_decom.BNInception.inception_5a_pool", "bninception_decom.BNInception.inception_5a_pool_proj", "bninception_decom.BNInception.inception_5a_pool_proj_bn", "bninception_decom.BNInception.inception_5a_relu_pool_proj", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "bninception_decom.BNInception.inception_5b_1x1", "bninception_decom.BNInception.inception_5b_1x1_bn", "bninception_decom.BNInception.inception_5b_relu_1x1", "bninception_decom.BNInception.inception_5b_3x3_reduce", "bninception_decom.BNInception.inception_5b_3x3_reduce_bn", "bninception_decom.BNInception.inception_5b_relu_3x3_reduce", "bninception_decom.BNInception.inception_5b_3x3", "bninception_decom.BNInception.inception_5b_3x3_bn", "bninception_decom.BNInception.inception_5b_relu_3x3", "bninception_decom.BNInception.inception_5b_double_3x3_reduce", "bninception_decom.BNInception.inception_5b_double_3x3_reduce_bn", "bninception_decom.BNInception.inception_5b_relu_double_3x3_reduce", "bninception_decom.BNInception.inception_5b_double_3x3_1", "bninception_decom.BNInception.inception_5b_double_3x3_1_bn", "bninception_decom.BNInception.inception_5b_relu_double_3x3_1", "bninception_decom.BNInception.inception_5b_double_3x3_2", "bninception_decom.BNInception.inception_5b_double_3x3_2_bn", "bninception_decom.BNInception.inception_5b_relu_double_3x3_2", "bninception_decom.BNInception.inception_5b_pool", "bninception_decom.BNInception.inception_5b_pool_proj", "bninception_decom.BNInception.inception_5b_pool_proj_bn", "bninception_decom.BNInception.inception_5b_relu_pool_proj", "bninception_decom.BNInception.layer_5b"], "methods", ["None"], ["", "def", "features", "(", "self", ",", "input", ")", ":", "\n", "        ", "conv1_7x7_s2_out", "=", "self", ".", "conv1_7x7_s2", "(", "input", ")", "\n", "conv1_7x7_s2_bn_out", "=", "self", ".", "conv1_7x7_s2_bn", "(", "conv1_7x7_s2_out", ")", "\n", "conv1_relu_7x7_out", "=", "self", ".", "conv1_relu_7x7", "(", "conv1_7x7_s2_bn_out", ")", "\n", "pool1_3x3_s2_out", "=", "self", ".", "pool1_3x3_s2", "(", "conv1_relu_7x7_out", ")", "\n", "conv2_3x3_reduce_out", "=", "self", ".", "conv2_3x3_reduce", "(", "pool1_3x3_s2_out", ")", "\n", "conv2_3x3_reduce_bn_out", "=", "self", ".", "conv2_3x3_reduce_bn", "(", "conv2_3x3_reduce_out", ")", "\n", "conv2_relu_3x3_reduce_out", "=", "self", ".", "conv2_relu_3x3_reduce", "(", "conv2_3x3_reduce_bn_out", ")", "\n", "conv2_3x3_out", "=", "self", ".", "conv2_3x3", "(", "conv2_relu_3x3_reduce_out", ")", "\n", "conv2_3x3_bn_out", "=", "self", ".", "conv2_3x3_bn", "(", "conv2_3x3_out", ")", "\n", "conv2_relu_3x3_out", "=", "self", ".", "conv2_relu_3x3", "(", "conv2_3x3_bn_out", ")", "\n", "pool2_3x3_s2_out", "=", "self", ".", "pool2_3x3_s2", "(", "conv2_relu_3x3_out", ")", "\n", "inception_3a_1x1_out", "=", "self", ".", "inception_3a_1x1", "(", "pool2_3x3_s2_out", ")", "\n", "inception_3a_1x1_bn_out", "=", "self", ".", "inception_3a_1x1_bn", "(", "inception_3a_1x1_out", ")", "\n", "inception_3a_relu_1x1_out", "=", "self", ".", "inception_3a_relu_1x1", "(", "inception_3a_1x1_bn_out", ")", "\n", "inception_3a_3x3_reduce_out", "=", "self", ".", "inception_3a_3x3_reduce", "(", "pool2_3x3_s2_out", ")", "\n", "inception_3a_3x3_reduce_bn_out", "=", "self", ".", "inception_3a_3x3_reduce_bn", "(", "inception_3a_3x3_reduce_out", ")", "\n", "inception_3a_relu_3x3_reduce_out", "=", "self", ".", "inception_3a_relu_3x3_reduce", "(", "inception_3a_3x3_reduce_bn_out", ")", "\n", "inception_3a_3x3_out", "=", "self", ".", "inception_3a_3x3", "(", "inception_3a_relu_3x3_reduce_out", ")", "\n", "inception_3a_3x3_bn_out", "=", "self", ".", "inception_3a_3x3_bn", "(", "inception_3a_3x3_out", ")", "\n", "inception_3a_relu_3x3_out", "=", "self", ".", "inception_3a_relu_3x3", "(", "inception_3a_3x3_bn_out", ")", "\n", "inception_3a_double_3x3_reduce_out", "=", "self", ".", "inception_3a_double_3x3_reduce", "(", "pool2_3x3_s2_out", ")", "\n", "inception_3a_double_3x3_reduce_bn_out", "=", "self", ".", "inception_3a_double_3x3_reduce_bn", "(", "inception_3a_double_3x3_reduce_out", ")", "\n", "inception_3a_relu_double_3x3_reduce_out", "=", "self", ".", "inception_3a_relu_double_3x3_reduce", "(", "inception_3a_double_3x3_reduce_bn_out", ")", "\n", "inception_3a_double_3x3_1_out", "=", "self", ".", "inception_3a_double_3x3_1", "(", "inception_3a_relu_double_3x3_reduce_out", ")", "\n", "inception_3a_double_3x3_1_bn_out", "=", "self", ".", "inception_3a_double_3x3_1_bn", "(", "inception_3a_double_3x3_1_out", ")", "\n", "inception_3a_relu_double_3x3_1_out", "=", "self", ".", "inception_3a_relu_double_3x3_1", "(", "inception_3a_double_3x3_1_bn_out", ")", "\n", "inception_3a_double_3x3_2_out", "=", "self", ".", "inception_3a_double_3x3_2", "(", "inception_3a_relu_double_3x3_1_out", ")", "\n", "inception_3a_double_3x3_2_bn_out", "=", "self", ".", "inception_3a_double_3x3_2_bn", "(", "inception_3a_double_3x3_2_out", ")", "\n", "inception_3a_relu_double_3x3_2_out", "=", "self", ".", "inception_3a_relu_double_3x3_2", "(", "inception_3a_double_3x3_2_bn_out", ")", "\n", "inception_3a_pool_out", "=", "self", ".", "inception_3a_pool", "(", "pool2_3x3_s2_out", ")", "\n", "inception_3a_pool_proj_out", "=", "self", ".", "inception_3a_pool_proj", "(", "inception_3a_pool_out", ")", "\n", "inception_3a_pool_proj_bn_out", "=", "self", ".", "inception_3a_pool_proj_bn", "(", "inception_3a_pool_proj_out", ")", "\n", "inception_3a_relu_pool_proj_out", "=", "self", ".", "inception_3a_relu_pool_proj", "(", "inception_3a_pool_proj_bn_out", ")", "\n", "inception_3a_output_out", "=", "torch", ".", "cat", "(", "[", "inception_3a_relu_1x1_out", ",", "inception_3a_relu_3x3_out", ",", "inception_3a_relu_double_3x3_2_out", ",", "inception_3a_relu_pool_proj_out", "]", ",", "1", ")", "\n", "inception_3b_1x1_out", "=", "self", ".", "inception_3b_1x1", "(", "inception_3a_output_out", ")", "\n", "inception_3b_1x1_bn_out", "=", "self", ".", "inception_3b_1x1_bn", "(", "inception_3b_1x1_out", ")", "\n", "inception_3b_relu_1x1_out", "=", "self", ".", "inception_3b_relu_1x1", "(", "inception_3b_1x1_bn_out", ")", "\n", "inception_3b_3x3_reduce_out", "=", "self", ".", "inception_3b_3x3_reduce", "(", "inception_3a_output_out", ")", "\n", "inception_3b_3x3_reduce_bn_out", "=", "self", ".", "inception_3b_3x3_reduce_bn", "(", "inception_3b_3x3_reduce_out", ")", "\n", "inception_3b_relu_3x3_reduce_out", "=", "self", ".", "inception_3b_relu_3x3_reduce", "(", "inception_3b_3x3_reduce_bn_out", ")", "\n", "inception_3b_3x3_out", "=", "self", ".", "inception_3b_3x3", "(", "inception_3b_relu_3x3_reduce_out", ")", "\n", "inception_3b_3x3_bn_out", "=", "self", ".", "inception_3b_3x3_bn", "(", "inception_3b_3x3_out", ")", "\n", "inception_3b_relu_3x3_out", "=", "self", ".", "inception_3b_relu_3x3", "(", "inception_3b_3x3_bn_out", ")", "\n", "inception_3b_double_3x3_reduce_out", "=", "self", ".", "inception_3b_double_3x3_reduce", "(", "inception_3a_output_out", ")", "\n", "inception_3b_double_3x3_reduce_bn_out", "=", "self", ".", "inception_3b_double_3x3_reduce_bn", "(", "inception_3b_double_3x3_reduce_out", ")", "\n", "inception_3b_relu_double_3x3_reduce_out", "=", "self", ".", "inception_3b_relu_double_3x3_reduce", "(", "inception_3b_double_3x3_reduce_bn_out", ")", "\n", "inception_3b_double_3x3_1_out", "=", "self", ".", "inception_3b_double_3x3_1", "(", "inception_3b_relu_double_3x3_reduce_out", ")", "\n", "inception_3b_double_3x3_1_bn_out", "=", "self", ".", "inception_3b_double_3x3_1_bn", "(", "inception_3b_double_3x3_1_out", ")", "\n", "inception_3b_relu_double_3x3_1_out", "=", "self", ".", "inception_3b_relu_double_3x3_1", "(", "inception_3b_double_3x3_1_bn_out", ")", "\n", "inception_3b_double_3x3_2_out", "=", "self", ".", "inception_3b_double_3x3_2", "(", "inception_3b_relu_double_3x3_1_out", ")", "\n", "inception_3b_double_3x3_2_bn_out", "=", "self", ".", "inception_3b_double_3x3_2_bn", "(", "inception_3b_double_3x3_2_out", ")", "\n", "inception_3b_relu_double_3x3_2_out", "=", "self", ".", "inception_3b_relu_double_3x3_2", "(", "inception_3b_double_3x3_2_bn_out", ")", "\n", "inception_3b_pool_out", "=", "self", ".", "inception_3b_pool", "(", "inception_3a_output_out", ")", "\n", "inception_3b_pool_proj_out", "=", "self", ".", "inception_3b_pool_proj", "(", "inception_3b_pool_out", ")", "\n", "inception_3b_pool_proj_bn_out", "=", "self", ".", "inception_3b_pool_proj_bn", "(", "inception_3b_pool_proj_out", ")", "\n", "inception_3b_relu_pool_proj_out", "=", "self", ".", "inception_3b_relu_pool_proj", "(", "inception_3b_pool_proj_bn_out", ")", "\n", "inception_3b_output_out", "=", "torch", ".", "cat", "(", "[", "inception_3b_relu_1x1_out", ",", "inception_3b_relu_3x3_out", ",", "inception_3b_relu_double_3x3_2_out", ",", "inception_3b_relu_pool_proj_out", "]", ",", "1", ")", "\n", "inception_3c_3x3_reduce_out", "=", "self", ".", "inception_3c_3x3_reduce", "(", "inception_3b_output_out", ")", "\n", "inception_3c_3x3_reduce_bn_out", "=", "self", ".", "inception_3c_3x3_reduce_bn", "(", "inception_3c_3x3_reduce_out", ")", "\n", "inception_3c_relu_3x3_reduce_out", "=", "self", ".", "inception_3c_relu_3x3_reduce", "(", "inception_3c_3x3_reduce_bn_out", ")", "\n", "inception_3c_3x3_out", "=", "self", ".", "inception_3c_3x3", "(", "inception_3c_relu_3x3_reduce_out", ")", "\n", "inception_3c_3x3_bn_out", "=", "self", ".", "inception_3c_3x3_bn", "(", "inception_3c_3x3_out", ")", "\n", "inception_3c_relu_3x3_out", "=", "self", ".", "inception_3c_relu_3x3", "(", "inception_3c_3x3_bn_out", ")", "\n", "inception_3c_double_3x3_reduce_out", "=", "self", ".", "inception_3c_double_3x3_reduce", "(", "inception_3b_output_out", ")", "\n", "inception_3c_double_3x3_reduce_bn_out", "=", "self", ".", "inception_3c_double_3x3_reduce_bn", "(", "inception_3c_double_3x3_reduce_out", ")", "\n", "inception_3c_relu_double_3x3_reduce_out", "=", "self", ".", "inception_3c_relu_double_3x3_reduce", "(", "inception_3c_double_3x3_reduce_bn_out", ")", "\n", "inception_3c_double_3x3_1_out", "=", "self", ".", "inception_3c_double_3x3_1", "(", "inception_3c_relu_double_3x3_reduce_out", ")", "\n", "inception_3c_double_3x3_1_bn_out", "=", "self", ".", "inception_3c_double_3x3_1_bn", "(", "inception_3c_double_3x3_1_out", ")", "\n", "inception_3c_relu_double_3x3_1_out", "=", "self", ".", "inception_3c_relu_double_3x3_1", "(", "inception_3c_double_3x3_1_bn_out", ")", "\n", "inception_3c_double_3x3_2_out", "=", "self", ".", "inception_3c_double_3x3_2", "(", "inception_3c_relu_double_3x3_1_out", ")", "\n", "inception_3c_double_3x3_2_bn_out", "=", "self", ".", "inception_3c_double_3x3_2_bn", "(", "inception_3c_double_3x3_2_out", ")", "\n", "inception_3c_relu_double_3x3_2_out", "=", "self", ".", "inception_3c_relu_double_3x3_2", "(", "inception_3c_double_3x3_2_bn_out", ")", "\n", "inception_3c_pool_out", "=", "self", ".", "inception_3c_pool", "(", "inception_3b_output_out", ")", "\n", "inception_3c_output_out", "=", "torch", ".", "cat", "(", "[", "inception_3c_relu_3x3_out", ",", "inception_3c_relu_double_3x3_2_out", ",", "inception_3c_pool_out", "]", ",", "1", ")", "\n", "inception_4a_1x1_out", "=", "self", ".", "inception_4a_1x1", "(", "inception_3c_output_out", ")", "\n", "inception_4a_1x1_bn_out", "=", "self", ".", "inception_4a_1x1_bn", "(", "inception_4a_1x1_out", ")", "\n", "inception_4a_relu_1x1_out", "=", "self", ".", "inception_4a_relu_1x1", "(", "inception_4a_1x1_bn_out", ")", "\n", "inception_4a_3x3_reduce_out", "=", "self", ".", "inception_4a_3x3_reduce", "(", "inception_3c_output_out", ")", "\n", "inception_4a_3x3_reduce_bn_out", "=", "self", ".", "inception_4a_3x3_reduce_bn", "(", "inception_4a_3x3_reduce_out", ")", "\n", "inception_4a_relu_3x3_reduce_out", "=", "self", ".", "inception_4a_relu_3x3_reduce", "(", "inception_4a_3x3_reduce_bn_out", ")", "\n", "inception_4a_3x3_out", "=", "self", ".", "inception_4a_3x3", "(", "inception_4a_relu_3x3_reduce_out", ")", "\n", "inception_4a_3x3_bn_out", "=", "self", ".", "inception_4a_3x3_bn", "(", "inception_4a_3x3_out", ")", "\n", "inception_4a_relu_3x3_out", "=", "self", ".", "inception_4a_relu_3x3", "(", "inception_4a_3x3_bn_out", ")", "\n", "inception_4a_double_3x3_reduce_out", "=", "self", ".", "inception_4a_double_3x3_reduce", "(", "inception_3c_output_out", ")", "\n", "inception_4a_double_3x3_reduce_bn_out", "=", "self", ".", "inception_4a_double_3x3_reduce_bn", "(", "inception_4a_double_3x3_reduce_out", ")", "\n", "inception_4a_relu_double_3x3_reduce_out", "=", "self", ".", "inception_4a_relu_double_3x3_reduce", "(", "inception_4a_double_3x3_reduce_bn_out", ")", "\n", "inception_4a_double_3x3_1_out", "=", "self", ".", "inception_4a_double_3x3_1", "(", "inception_4a_relu_double_3x3_reduce_out", ")", "\n", "inception_4a_double_3x3_1_bn_out", "=", "self", ".", "inception_4a_double_3x3_1_bn", "(", "inception_4a_double_3x3_1_out", ")", "\n", "inception_4a_relu_double_3x3_1_out", "=", "self", ".", "inception_4a_relu_double_3x3_1", "(", "inception_4a_double_3x3_1_bn_out", ")", "\n", "inception_4a_double_3x3_2_out", "=", "self", ".", "inception_4a_double_3x3_2", "(", "inception_4a_relu_double_3x3_1_out", ")", "\n", "inception_4a_double_3x3_2_bn_out", "=", "self", ".", "inception_4a_double_3x3_2_bn", "(", "inception_4a_double_3x3_2_out", ")", "\n", "inception_4a_relu_double_3x3_2_out", "=", "self", ".", "inception_4a_relu_double_3x3_2", "(", "inception_4a_double_3x3_2_bn_out", ")", "\n", "inception_4a_pool_out", "=", "self", ".", "inception_4a_pool", "(", "inception_3c_output_out", ")", "\n", "inception_4a_pool_proj_out", "=", "self", ".", "inception_4a_pool_proj", "(", "inception_4a_pool_out", ")", "\n", "inception_4a_pool_proj_bn_out", "=", "self", ".", "inception_4a_pool_proj_bn", "(", "inception_4a_pool_proj_out", ")", "\n", "inception_4a_relu_pool_proj_out", "=", "self", ".", "inception_4a_relu_pool_proj", "(", "inception_4a_pool_proj_bn_out", ")", "\n", "inception_4a_output_out", "=", "torch", ".", "cat", "(", "[", "inception_4a_relu_1x1_out", ",", "inception_4a_relu_3x3_out", ",", "inception_4a_relu_double_3x3_2_out", ",", "inception_4a_relu_pool_proj_out", "]", ",", "1", ")", "\n", "inception_4b_1x1_out", "=", "self", ".", "inception_4b_1x1", "(", "inception_4a_output_out", ")", "\n", "inception_4b_1x1_bn_out", "=", "self", ".", "inception_4b_1x1_bn", "(", "inception_4b_1x1_out", ")", "\n", "inception_4b_relu_1x1_out", "=", "self", ".", "inception_4b_relu_1x1", "(", "inception_4b_1x1_bn_out", ")", "\n", "inception_4b_3x3_reduce_out", "=", "self", ".", "inception_4b_3x3_reduce", "(", "inception_4a_output_out", ")", "\n", "inception_4b_3x3_reduce_bn_out", "=", "self", ".", "inception_4b_3x3_reduce_bn", "(", "inception_4b_3x3_reduce_out", ")", "\n", "inception_4b_relu_3x3_reduce_out", "=", "self", ".", "inception_4b_relu_3x3_reduce", "(", "inception_4b_3x3_reduce_bn_out", ")", "\n", "inception_4b_3x3_out", "=", "self", ".", "inception_4b_3x3", "(", "inception_4b_relu_3x3_reduce_out", ")", "\n", "inception_4b_3x3_bn_out", "=", "self", ".", "inception_4b_3x3_bn", "(", "inception_4b_3x3_out", ")", "\n", "inception_4b_relu_3x3_out", "=", "self", ".", "inception_4b_relu_3x3", "(", "inception_4b_3x3_bn_out", ")", "\n", "inception_4b_double_3x3_reduce_out", "=", "self", ".", "inception_4b_double_3x3_reduce", "(", "inception_4a_output_out", ")", "\n", "inception_4b_double_3x3_reduce_bn_out", "=", "self", ".", "inception_4b_double_3x3_reduce_bn", "(", "inception_4b_double_3x3_reduce_out", ")", "\n", "inception_4b_relu_double_3x3_reduce_out", "=", "self", ".", "inception_4b_relu_double_3x3_reduce", "(", "inception_4b_double_3x3_reduce_bn_out", ")", "\n", "inception_4b_double_3x3_1_out", "=", "self", ".", "inception_4b_double_3x3_1", "(", "inception_4b_relu_double_3x3_reduce_out", ")", "\n", "inception_4b_double_3x3_1_bn_out", "=", "self", ".", "inception_4b_double_3x3_1_bn", "(", "inception_4b_double_3x3_1_out", ")", "\n", "inception_4b_relu_double_3x3_1_out", "=", "self", ".", "inception_4b_relu_double_3x3_1", "(", "inception_4b_double_3x3_1_bn_out", ")", "\n", "inception_4b_double_3x3_2_out", "=", "self", ".", "inception_4b_double_3x3_2", "(", "inception_4b_relu_double_3x3_1_out", ")", "\n", "inception_4b_double_3x3_2_bn_out", "=", "self", ".", "inception_4b_double_3x3_2_bn", "(", "inception_4b_double_3x3_2_out", ")", "\n", "inception_4b_relu_double_3x3_2_out", "=", "self", ".", "inception_4b_relu_double_3x3_2", "(", "inception_4b_double_3x3_2_bn_out", ")", "\n", "inception_4b_pool_out", "=", "self", ".", "inception_4b_pool", "(", "inception_4a_output_out", ")", "\n", "inception_4b_pool_proj_out", "=", "self", ".", "inception_4b_pool_proj", "(", "inception_4b_pool_out", ")", "\n", "inception_4b_pool_proj_bn_out", "=", "self", ".", "inception_4b_pool_proj_bn", "(", "inception_4b_pool_proj_out", ")", "\n", "inception_4b_relu_pool_proj_out", "=", "self", ".", "inception_4b_relu_pool_proj", "(", "inception_4b_pool_proj_bn_out", ")", "\n", "# inception_4b_output_out = torch.cat([inception_4b_relu_1x1_out,inception_4b_relu_3x3_out,inception_4b_relu_double_3x3_2_out,inception_4b_relu_pool_proj_out], 1)", "\n", "inception_4b_output_out", "=", "self", ".", "layer_4b", "(", "[", "inception_4b_relu_1x1_out", ",", "inception_4b_relu_3x3_out", ",", "inception_4b_relu_double_3x3_2_out", ",", "inception_4b_relu_pool_proj_out", "]", ",", "1", ")", "\n", "inception_4c_1x1_out", "=", "self", ".", "inception_4c_1x1", "(", "inception_4b_output_out", ")", "\n", "inception_4c_1x1_bn_out", "=", "self", ".", "inception_4c_1x1_bn", "(", "inception_4c_1x1_out", ")", "\n", "inception_4c_relu_1x1_out", "=", "self", ".", "inception_4c_relu_1x1", "(", "inception_4c_1x1_bn_out", ")", "\n", "inception_4c_3x3_reduce_out", "=", "self", ".", "inception_4c_3x3_reduce", "(", "inception_4b_output_out", ")", "\n", "inception_4c_3x3_reduce_bn_out", "=", "self", ".", "inception_4c_3x3_reduce_bn", "(", "inception_4c_3x3_reduce_out", ")", "\n", "inception_4c_relu_3x3_reduce_out", "=", "self", ".", "inception_4c_relu_3x3_reduce", "(", "inception_4c_3x3_reduce_bn_out", ")", "\n", "inception_4c_3x3_out", "=", "self", ".", "inception_4c_3x3", "(", "inception_4c_relu_3x3_reduce_out", ")", "\n", "inception_4c_3x3_bn_out", "=", "self", ".", "inception_4c_3x3_bn", "(", "inception_4c_3x3_out", ")", "\n", "inception_4c_relu_3x3_out", "=", "self", ".", "inception_4c_relu_3x3", "(", "inception_4c_3x3_bn_out", ")", "\n", "inception_4c_double_3x3_reduce_out", "=", "self", ".", "inception_4c_double_3x3_reduce", "(", "inception_4b_output_out", ")", "\n", "inception_4c_double_3x3_reduce_bn_out", "=", "self", ".", "inception_4c_double_3x3_reduce_bn", "(", "inception_4c_double_3x3_reduce_out", ")", "\n", "inception_4c_relu_double_3x3_reduce_out", "=", "self", ".", "inception_4c_relu_double_3x3_reduce", "(", "inception_4c_double_3x3_reduce_bn_out", ")", "\n", "inception_4c_double_3x3_1_out", "=", "self", ".", "inception_4c_double_3x3_1", "(", "inception_4c_relu_double_3x3_reduce_out", ")", "\n", "inception_4c_double_3x3_1_bn_out", "=", "self", ".", "inception_4c_double_3x3_1_bn", "(", "inception_4c_double_3x3_1_out", ")", "\n", "inception_4c_relu_double_3x3_1_out", "=", "self", ".", "inception_4c_relu_double_3x3_1", "(", "inception_4c_double_3x3_1_bn_out", ")", "\n", "inception_4c_double_3x3_2_out", "=", "self", ".", "inception_4c_double_3x3_2", "(", "inception_4c_relu_double_3x3_1_out", ")", "\n", "inception_4c_double_3x3_2_bn_out", "=", "self", ".", "inception_4c_double_3x3_2_bn", "(", "inception_4c_double_3x3_2_out", ")", "\n", "inception_4c_relu_double_3x3_2_out", "=", "self", ".", "inception_4c_relu_double_3x3_2", "(", "inception_4c_double_3x3_2_bn_out", ")", "\n", "inception_4c_pool_out", "=", "self", ".", "inception_4c_pool", "(", "inception_4b_output_out", ")", "\n", "inception_4c_pool_proj_out", "=", "self", ".", "inception_4c_pool_proj", "(", "inception_4c_pool_out", ")", "\n", "inception_4c_pool_proj_bn_out", "=", "self", ".", "inception_4c_pool_proj_bn", "(", "inception_4c_pool_proj_out", ")", "\n", "inception_4c_relu_pool_proj_out", "=", "self", ".", "inception_4c_relu_pool_proj", "(", "inception_4c_pool_proj_bn_out", ")", "\n", "inception_4c_output_out", "=", "torch", ".", "cat", "(", "[", "inception_4c_relu_1x1_out", ",", "inception_4c_relu_3x3_out", ",", "inception_4c_relu_double_3x3_2_out", ",", "inception_4c_relu_pool_proj_out", "]", ",", "1", ")", "\n", "inception_4d_1x1_out", "=", "self", ".", "inception_4d_1x1", "(", "inception_4c_output_out", ")", "\n", "inception_4d_1x1_bn_out", "=", "self", ".", "inception_4d_1x1_bn", "(", "inception_4d_1x1_out", ")", "\n", "inception_4d_relu_1x1_out", "=", "self", ".", "inception_4d_relu_1x1", "(", "inception_4d_1x1_bn_out", ")", "\n", "inception_4d_3x3_reduce_out", "=", "self", ".", "inception_4d_3x3_reduce", "(", "inception_4c_output_out", ")", "\n", "inception_4d_3x3_reduce_bn_out", "=", "self", ".", "inception_4d_3x3_reduce_bn", "(", "inception_4d_3x3_reduce_out", ")", "\n", "inception_4d_relu_3x3_reduce_out", "=", "self", ".", "inception_4d_relu_3x3_reduce", "(", "inception_4d_3x3_reduce_bn_out", ")", "\n", "inception_4d_3x3_out", "=", "self", ".", "inception_4d_3x3", "(", "inception_4d_relu_3x3_reduce_out", ")", "\n", "inception_4d_3x3_bn_out", "=", "self", ".", "inception_4d_3x3_bn", "(", "inception_4d_3x3_out", ")", "\n", "inception_4d_relu_3x3_out", "=", "self", ".", "inception_4d_relu_3x3", "(", "inception_4d_3x3_bn_out", ")", "\n", "inception_4d_double_3x3_reduce_out", "=", "self", ".", "inception_4d_double_3x3_reduce", "(", "inception_4c_output_out", ")", "\n", "inception_4d_double_3x3_reduce_bn_out", "=", "self", ".", "inception_4d_double_3x3_reduce_bn", "(", "inception_4d_double_3x3_reduce_out", ")", "\n", "inception_4d_relu_double_3x3_reduce_out", "=", "self", ".", "inception_4d_relu_double_3x3_reduce", "(", "inception_4d_double_3x3_reduce_bn_out", ")", "\n", "inception_4d_double_3x3_1_out", "=", "self", ".", "inception_4d_double_3x3_1", "(", "inception_4d_relu_double_3x3_reduce_out", ")", "\n", "inception_4d_double_3x3_1_bn_out", "=", "self", ".", "inception_4d_double_3x3_1_bn", "(", "inception_4d_double_3x3_1_out", ")", "\n", "inception_4d_relu_double_3x3_1_out", "=", "self", ".", "inception_4d_relu_double_3x3_1", "(", "inception_4d_double_3x3_1_bn_out", ")", "\n", "inception_4d_double_3x3_2_out", "=", "self", ".", "inception_4d_double_3x3_2", "(", "inception_4d_relu_double_3x3_1_out", ")", "\n", "inception_4d_double_3x3_2_bn_out", "=", "self", ".", "inception_4d_double_3x3_2_bn", "(", "inception_4d_double_3x3_2_out", ")", "\n", "inception_4d_relu_double_3x3_2_out", "=", "self", ".", "inception_4d_relu_double_3x3_2", "(", "inception_4d_double_3x3_2_bn_out", ")", "\n", "inception_4d_pool_out", "=", "self", ".", "inception_4d_pool", "(", "inception_4c_output_out", ")", "\n", "inception_4d_pool_proj_out", "=", "self", ".", "inception_4d_pool_proj", "(", "inception_4d_pool_out", ")", "\n", "inception_4d_pool_proj_bn_out", "=", "self", ".", "inception_4d_pool_proj_bn", "(", "inception_4d_pool_proj_out", ")", "\n", "inception_4d_relu_pool_proj_out", "=", "self", ".", "inception_4d_relu_pool_proj", "(", "inception_4d_pool_proj_bn_out", ")", "\n", "inception_4d_output_out", "=", "torch", ".", "cat", "(", "[", "inception_4d_relu_1x1_out", ",", "inception_4d_relu_3x3_out", ",", "inception_4d_relu_double_3x3_2_out", ",", "inception_4d_relu_pool_proj_out", "]", ",", "1", ")", "\n", "inception_4e_3x3_reduce_out", "=", "self", ".", "inception_4e_3x3_reduce", "(", "inception_4d_output_out", ")", "\n", "inception_4e_3x3_reduce_bn_out", "=", "self", ".", "inception_4e_3x3_reduce_bn", "(", "inception_4e_3x3_reduce_out", ")", "\n", "inception_4e_relu_3x3_reduce_out", "=", "self", ".", "inception_4e_relu_3x3_reduce", "(", "inception_4e_3x3_reduce_bn_out", ")", "\n", "inception_4e_3x3_out", "=", "self", ".", "inception_4e_3x3", "(", "inception_4e_relu_3x3_reduce_out", ")", "\n", "inception_4e_3x3_bn_out", "=", "self", ".", "inception_4e_3x3_bn", "(", "inception_4e_3x3_out", ")", "\n", "inception_4e_relu_3x3_out", "=", "self", ".", "inception_4e_relu_3x3", "(", "inception_4e_3x3_bn_out", ")", "\n", "inception_4e_double_3x3_reduce_out", "=", "self", ".", "inception_4e_double_3x3_reduce", "(", "inception_4d_output_out", ")", "\n", "inception_4e_double_3x3_reduce_bn_out", "=", "self", ".", "inception_4e_double_3x3_reduce_bn", "(", "inception_4e_double_3x3_reduce_out", ")", "\n", "inception_4e_relu_double_3x3_reduce_out", "=", "self", ".", "inception_4e_relu_double_3x3_reduce", "(", "inception_4e_double_3x3_reduce_bn_out", ")", "\n", "inception_4e_double_3x3_1_out", "=", "self", ".", "inception_4e_double_3x3_1", "(", "inception_4e_relu_double_3x3_reduce_out", ")", "\n", "inception_4e_double_3x3_1_bn_out", "=", "self", ".", "inception_4e_double_3x3_1_bn", "(", "inception_4e_double_3x3_1_out", ")", "\n", "inception_4e_relu_double_3x3_1_out", "=", "self", ".", "inception_4e_relu_double_3x3_1", "(", "inception_4e_double_3x3_1_bn_out", ")", "\n", "inception_4e_double_3x3_2_out", "=", "self", ".", "inception_4e_double_3x3_2", "(", "inception_4e_relu_double_3x3_1_out", ")", "\n", "inception_4e_double_3x3_2_bn_out", "=", "self", ".", "inception_4e_double_3x3_2_bn", "(", "inception_4e_double_3x3_2_out", ")", "\n", "inception_4e_relu_double_3x3_2_out", "=", "self", ".", "inception_4e_relu_double_3x3_2", "(", "inception_4e_double_3x3_2_bn_out", ")", "\n", "inception_4e_pool_out", "=", "self", ".", "inception_4e_pool", "(", "inception_4d_output_out", ")", "\n", "# inception_4e_output_out = torch.cat([inception_4e_relu_3x3_out,inception_4e_relu_double_3x3_2_out,inception_4e_pool_out], 1)", "\n", "inception_4e_output_out", "=", "self", ".", "layer_4e", "(", "[", "inception_4e_relu_3x3_out", ",", "inception_4e_relu_double_3x3_2_out", ",", "inception_4e_pool_out", "]", ",", "1", ")", "\n", "inception_5a_1x1_out", "=", "self", ".", "inception_5a_1x1", "(", "inception_4e_output_out", ")", "\n", "inception_5a_1x1_bn_out", "=", "self", ".", "inception_5a_1x1_bn", "(", "inception_5a_1x1_out", ")", "\n", "inception_5a_relu_1x1_out", "=", "self", ".", "inception_5a_relu_1x1", "(", "inception_5a_1x1_bn_out", ")", "\n", "inception_5a_3x3_reduce_out", "=", "self", ".", "inception_5a_3x3_reduce", "(", "inception_4e_output_out", ")", "\n", "inception_5a_3x3_reduce_bn_out", "=", "self", ".", "inception_5a_3x3_reduce_bn", "(", "inception_5a_3x3_reduce_out", ")", "\n", "inception_5a_relu_3x3_reduce_out", "=", "self", ".", "inception_5a_relu_3x3_reduce", "(", "inception_5a_3x3_reduce_bn_out", ")", "\n", "inception_5a_3x3_out", "=", "self", ".", "inception_5a_3x3", "(", "inception_5a_relu_3x3_reduce_out", ")", "\n", "inception_5a_3x3_bn_out", "=", "self", ".", "inception_5a_3x3_bn", "(", "inception_5a_3x3_out", ")", "\n", "inception_5a_relu_3x3_out", "=", "self", ".", "inception_5a_relu_3x3", "(", "inception_5a_3x3_bn_out", ")", "\n", "inception_5a_double_3x3_reduce_out", "=", "self", ".", "inception_5a_double_3x3_reduce", "(", "inception_4e_output_out", ")", "\n", "inception_5a_double_3x3_reduce_bn_out", "=", "self", ".", "inception_5a_double_3x3_reduce_bn", "(", "inception_5a_double_3x3_reduce_out", ")", "\n", "inception_5a_relu_double_3x3_reduce_out", "=", "self", ".", "inception_5a_relu_double_3x3_reduce", "(", "inception_5a_double_3x3_reduce_bn_out", ")", "\n", "inception_5a_double_3x3_1_out", "=", "self", ".", "inception_5a_double_3x3_1", "(", "inception_5a_relu_double_3x3_reduce_out", ")", "\n", "inception_5a_double_3x3_1_bn_out", "=", "self", ".", "inception_5a_double_3x3_1_bn", "(", "inception_5a_double_3x3_1_out", ")", "\n", "inception_5a_relu_double_3x3_1_out", "=", "self", ".", "inception_5a_relu_double_3x3_1", "(", "inception_5a_double_3x3_1_bn_out", ")", "\n", "inception_5a_double_3x3_2_out", "=", "self", ".", "inception_5a_double_3x3_2", "(", "inception_5a_relu_double_3x3_1_out", ")", "\n", "inception_5a_double_3x3_2_bn_out", "=", "self", ".", "inception_5a_double_3x3_2_bn", "(", "inception_5a_double_3x3_2_out", ")", "\n", "inception_5a_relu_double_3x3_2_out", "=", "self", ".", "inception_5a_relu_double_3x3_2", "(", "inception_5a_double_3x3_2_bn_out", ")", "\n", "inception_5a_pool_out", "=", "self", ".", "inception_5a_pool", "(", "inception_4e_output_out", ")", "\n", "inception_5a_pool_proj_out", "=", "self", ".", "inception_5a_pool_proj", "(", "inception_5a_pool_out", ")", "\n", "inception_5a_pool_proj_bn_out", "=", "self", ".", "inception_5a_pool_proj_bn", "(", "inception_5a_pool_proj_out", ")", "\n", "inception_5a_relu_pool_proj_out", "=", "self", ".", "inception_5a_relu_pool_proj", "(", "inception_5a_pool_proj_bn_out", ")", "\n", "inception_5a_output_out", "=", "torch", ".", "cat", "(", "[", "inception_5a_relu_1x1_out", ",", "inception_5a_relu_3x3_out", ",", "inception_5a_relu_double_3x3_2_out", ",", "inception_5a_relu_pool_proj_out", "]", ",", "1", ")", "\n", "inception_5b_1x1_out", "=", "self", ".", "inception_5b_1x1", "(", "inception_5a_output_out", ")", "\n", "inception_5b_1x1_bn_out", "=", "self", ".", "inception_5b_1x1_bn", "(", "inception_5b_1x1_out", ")", "\n", "inception_5b_relu_1x1_out", "=", "self", ".", "inception_5b_relu_1x1", "(", "inception_5b_1x1_bn_out", ")", "\n", "inception_5b_3x3_reduce_out", "=", "self", ".", "inception_5b_3x3_reduce", "(", "inception_5a_output_out", ")", "\n", "inception_5b_3x3_reduce_bn_out", "=", "self", ".", "inception_5b_3x3_reduce_bn", "(", "inception_5b_3x3_reduce_out", ")", "\n", "inception_5b_relu_3x3_reduce_out", "=", "self", ".", "inception_5b_relu_3x3_reduce", "(", "inception_5b_3x3_reduce_bn_out", ")", "\n", "inception_5b_3x3_out", "=", "self", ".", "inception_5b_3x3", "(", "inception_5b_relu_3x3_reduce_out", ")", "\n", "inception_5b_3x3_bn_out", "=", "self", ".", "inception_5b_3x3_bn", "(", "inception_5b_3x3_out", ")", "\n", "inception_5b_relu_3x3_out", "=", "self", ".", "inception_5b_relu_3x3", "(", "inception_5b_3x3_bn_out", ")", "\n", "inception_5b_double_3x3_reduce_out", "=", "self", ".", "inception_5b_double_3x3_reduce", "(", "inception_5a_output_out", ")", "\n", "inception_5b_double_3x3_reduce_bn_out", "=", "self", ".", "inception_5b_double_3x3_reduce_bn", "(", "inception_5b_double_3x3_reduce_out", ")", "\n", "inception_5b_relu_double_3x3_reduce_out", "=", "self", ".", "inception_5b_relu_double_3x3_reduce", "(", "inception_5b_double_3x3_reduce_bn_out", ")", "\n", "inception_5b_double_3x3_1_out", "=", "self", ".", "inception_5b_double_3x3_1", "(", "inception_5b_relu_double_3x3_reduce_out", ")", "\n", "inception_5b_double_3x3_1_bn_out", "=", "self", ".", "inception_5b_double_3x3_1_bn", "(", "inception_5b_double_3x3_1_out", ")", "\n", "inception_5b_relu_double_3x3_1_out", "=", "self", ".", "inception_5b_relu_double_3x3_1", "(", "inception_5b_double_3x3_1_bn_out", ")", "\n", "inception_5b_double_3x3_2_out", "=", "self", ".", "inception_5b_double_3x3_2", "(", "inception_5b_relu_double_3x3_1_out", ")", "\n", "inception_5b_double_3x3_2_bn_out", "=", "self", ".", "inception_5b_double_3x3_2_bn", "(", "inception_5b_double_3x3_2_out", ")", "\n", "inception_5b_relu_double_3x3_2_out", "=", "self", ".", "inception_5b_relu_double_3x3_2", "(", "inception_5b_double_3x3_2_bn_out", ")", "\n", "inception_5b_pool_out", "=", "self", ".", "inception_5b_pool", "(", "inception_5a_output_out", ")", "\n", "inception_5b_pool_proj_out", "=", "self", ".", "inception_5b_pool_proj", "(", "inception_5b_pool_out", ")", "\n", "inception_5b_pool_proj_bn_out", "=", "self", ".", "inception_5b_pool_proj_bn", "(", "inception_5b_pool_proj_out", ")", "\n", "inception_5b_relu_pool_proj_out", "=", "self", ".", "inception_5b_relu_pool_proj", "(", "inception_5b_pool_proj_bn_out", ")", "\n", "# inception_5b_output_out = torch.cat([inception_5b_relu_1x1_out,inception_5b_relu_3x3_out,inception_5b_relu_double_3x3_2_out,inception_5b_relu_pool_proj_out], 1)", "\n", "inception_5b_output_out", "=", "self", ".", "layer_5b", "(", "[", "inception_5b_relu_1x1_out", ",", "inception_5b_relu_3x3_out", ",", "inception_5b_relu_double_3x3_2_out", ",", "inception_5b_relu_pool_proj_out", "]", ",", "1", ")", "\n", "return", "(", "\n", "inception_4b_output_out", ",", "\n", "inception_4e_output_out", ",", "\n", "inception_5b_output_out", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.bninception_decom.BNInception.pooling": [[506, 512], ["bninception_decom.BNInception.adavgpool", "bninception_decom.BNInception.admaxpool", "output.view.view.view", "output.view.view.size"], "methods", ["None"], ["", "def", "pooling", "(", "self", ",", "input", ")", ":", "\n", "        ", "ap_feat", "=", "self", ".", "adavgpool", "(", "input", ")", "\n", "mp_feat", "=", "self", ".", "admaxpool", "(", "input", ")", "\n", "output", "=", "ap_feat", "+", "mp_feat", "\n", "output", "=", "output", ".", "view", "(", "output", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.bninception_decom.BNInception.forward": [[513, 516], ["bninception_decom.BNInception.features", "list"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.models.bninception_decom.BNInception.features"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "feat_tuple", "=", "self", ".", "features", "(", "input", ")", "\n", "return", "list", "(", "feat_tuple", ")", "# NOTE: mustn't be a tuple type", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.models.bninception_decom.BninceptionDecom": [[517, 546], ["bninception_decom.BNInception", "BNInception.load_state_dict", "BNInception.parameters", "BNInception.modules", "torch.load_url", "isinstance", "m.eval", "m.weight.requires_grad_", "m.bias.requires_grad_"], "function", ["None"], ["", "", "def", "BninceptionDecom", "(", "num_classes", "=", "1000", ",", "pretrained", "=", "'imagenet'", ",", "bn_freeze", "=", "True", ",", "freeze_all", "=", "False", ")", ":", "\n", "    ", "r\"\"\"BNInception model architecture from <https://arxiv.org/pdf/1502.03167.pdf>`_ paper.\n    \"\"\"", "\n", "model", "=", "BNInception", "(", "num_classes", "=", "1000", ")", "\n", "if", "pretrained", "is", "not", "None", ":", "\n", "        ", "settings", "=", "pretrained_settings", "[", "'bninception'", "]", "[", "pretrained", "]", "\n", "assert", "num_classes", "==", "settings", "[", "'num_classes'", "]", ",", "\"num_classes should be {}, but is {}\"", ".", "format", "(", "settings", "[", "'num_classes'", "]", ",", "num_classes", ")", "\n", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "settings", "[", "'url'", "]", ")", ")", "\n", "model", ".", "input_space", "=", "settings", "[", "'input_space'", "]", "\n", "model", ".", "input_size", "=", "settings", "[", "'input_size'", "]", "\n", "model", ".", "input_range", "=", "settings", "[", "'input_range'", "]", "\n", "model", ".", "mean", "=", "settings", "[", "'mean'", "]", "\n", "model", ".", "std", "=", "settings", "[", "'std'", "]", "\n", "\n", "# freeze all parameters", "\n", "", "if", "freeze_all", ":", "\n", "        ", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "# bn freeze", "\n", "", "", "if", "bn_freeze", ":", "\n", "        ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "eval", "(", ")", "\n", "m", ".", "weight", ".", "requires_grad_", "(", "False", ")", "\n", "m", ".", "bias", ".", "requires_grad_", "(", "False", ")", "\n", "\n", "", "", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.misc.pca.pca": [[3, 15], ["torch.matmul", "torch.svd", "torch.mean", "A.t"], "function", ["None"], ["def", "pca", "(", "A", ",", "decenter", "=", "True", ",", "topk", "=", "None", ")", ":", "\n", "# svd", "\n", "    ", "if", "decenter", ":", "\n", "        ", "mean", "=", "torch", ".", "mean", "(", "A", ",", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "A", "=", "A", "-", "mean", "\n", "", "cor_mat", "=", "torch", ".", "matmul", "(", "A", ".", "t", "(", ")", ",", "A", ")", "\n", "U", ",", "S", ",", "V", "=", "torch", ".", "svd", "(", "cor_mat", ")", "\n", "# return value", "\n", "if", "topk", "is", "None", ":", "\n", "        ", "return", "U", ".", "data", "\n", "", "else", ":", "\n", "        ", "return", "U", "[", ":", ",", ":", "topk", "]", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.misc.utils.topk_mask": [[4, 13], ["torch.topk", "torch.min", "torch.max"], "function", ["None"], ["def", "topk_mask", "(", "input", ",", "k", ",", "dim", "=", "0", ",", "ismax", "=", "True", ",", "eps", "=", "1e-8", ")", ":", "\n", "    ", "topk_value", "=", "torch", ".", "topk", "(", "input", ",", "k", "=", "k", ",", "dim", "=", "dim", ",", "largest", "=", "ismax", ")", "[", "0", "]", "\n", "if", "ismax", ":", "\n", "        ", "topk_value_bound", "=", "torch", ".", "min", "(", "topk_value", ",", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "[", "0", "]", "-", "eps", "\n", "topk_mask", "=", "input", ">=", "topk_value_bound", "\n", "", "else", ":", "\n", "        ", "topk_value_bound", "=", "torch", ".", "max", "(", "topk_value", ",", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "[", "0", "]", "+", "eps", "\n", "topk_mask", "=", "input", "<=", "topk_value_bound", "\n", "", "return", "topk_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.misc.utils.generate_slice": [[14, 45], ["numpy.arange", "int", "int", "int", "int", "numpy.arange", "range", "numpy.arange", "numpy.arange"], "function", ["None"], ["", "def", "generate_slice", "(", "batch_size", ",", "split_num", ")", ":", "\n", "    ", "if", "batch_size", "<=", "split_num", ":", "\n", "        ", "return", "{", "\n", "0", ":", "np", ".", "arange", "(", "batch_size", ")", "\n", "}", "\n", "", "else", ":", "\n", "        ", "num_last_group", "=", "int", "(", "batch_size", ")", "%", "int", "(", "split_num", ")", "\n", "interval", "=", "int", "(", "batch_size", ")", "//", "int", "(", "split_num", ")", "\n", "# generate split-dict", "\n", "slice_dict", "=", "{", "\n", "i", ":", "np", ".", "arange", "(", "i", "*", "interval", ",", "(", "i", "+", "1", ")", "*", "interval", ")", "\n", "for", "i", "in", "range", "(", "split_num", ")", "\n", "}", "\n", "# add the last", "\n", "if", "num_last_group", "!=", "0", ":", "\n", "            ", "index", "=", "split_num", "\n", "while", "(", "num_last_group", ">", "0", ")", ":", "\n", "                ", "if", "num_last_group", ">", "interval", ":", "\n", "                    ", "slice_dict", "[", "index", "]", "=", "np", ".", "arange", "(", "\n", "index", "*", "interval", ",", "\n", "(", "index", "+", "1", ")", "*", "interval", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "slice_dict", "[", "index", "]", "=", "np", ".", "arange", "(", "\n", "index", "*", "interval", ",", "\n", "index", "*", "interval", "+", "num_last_group", "\n", ")", "\n", "", "index", "+=", "1", "\n", "num_last_group", "-=", "interval", "\n", "\n", "", "", "return", "slice_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.__init__": [[10, 29], ["gedml.core.losses.base_loss.BaseLoss.__init__"], "methods", ["home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "pos_margin", "=", "0.9", ",", "\n", "neg_margin", "=", "0.8", ",", "\n", "alpha", "=", "16", ",", "\n", "gamma", "=", "-", "0.1", ",", "\n", "**", "kwargs", "\n", ")", ":", "\n", "        ", "super", "(", "ProxyAnchorLoss", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "pos_margin", "=", "pos_margin", "\n", "self", ".", "neg_margin", "=", "neg_margin", "\n", "self", ".", "gamma", "=", "gamma", "\n", "\n", "# NOTE: log variables", "\n", "self", ".", "to_record_list", "=", "[", "\n", "\"pos_dist_max\"", ",", "\"pos_dist_min\"", ",", "\"pos_dist_mean\"", ",", "\n", "\"neg_dist_max\"", ",", "\"neg_dist_min\"", ",", "\"neg_dist_mean\"", ",", "\n", "\"dist_max\"", ",", "\"dist_min\"", ",", "\"dist_mean\"", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.stats": [[32, 47], ["torch.no_grad", "metric_mat.max", "metric_mat.min", "metric_mat.mean", "pos_mat.max", "pos_mat.min", "pos_mat.mean", "neg_mat.max", "neg_mat.min", "neg_mat.mean"], "methods", ["None"], ["", "def", "stats", "(", "self", ",", "metric_mat", ",", "pos_mask", ",", "neg_mask", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "self", ".", "dist_max", "=", "metric_mat", ".", "max", "(", ")", "\n", "self", ".", "dist_min", "=", "metric_mat", ".", "min", "(", ")", "\n", "self", ".", "dist_mean", "=", "metric_mat", ".", "mean", "(", ")", "\n", "# pos pair", "\n", "pos_mat", "=", "metric_mat", "[", "pos_mask", "]", "\n", "self", ".", "pos_dist_max", "=", "pos_mat", ".", "max", "(", ")", "\n", "self", ".", "pos_dist_min", "=", "pos_mat", ".", "min", "(", ")", "\n", "self", ".", "pos_dist_mean", "=", "pos_mat", ".", "mean", "(", ")", "\n", "# neg pair", "\n", "neg_mat", "=", "metric_mat", "[", "neg_mask", "]", "\n", "self", ".", "neg_dist_max", "=", "neg_mat", ".", "max", "(", ")", "\n", "self", ".", "neg_dist_min", "=", "neg_mat", ".", "min", "(", ")", "\n", "self", ".", "neg_dist_mean", "=", "neg_mat", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.required_metric": [[48, 50], ["None"], "methods", ["None"], ["", "", "def", "required_metric", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"cosine\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.losses.proxy_anchor_loss.ProxyAnchorLoss.compute_loss": [[51, 90], ["gedml.core.misc.loss_function.logsumexp().squeeze", "gedml.core.misc.loss_function.logsumexp().squeeze", "torch.mean", "pos_mask.fill_diagonal_", "torch.where", "len", "torch.sum", "torch.mean", "gedml.core.misc.loss_function.logsumexp", "gedml.core.misc.loss_function.logsumexp", "torch.sum"], "methods", ["None"], ["", "def", "compute_loss", "(", "\n", "self", ",", "\n", "metric_mat", ",", "\n", "row_labels", ",", "\n", "col_labels", ",", "\n", "indices_tuple", "=", "None", ",", "\n", "weights", "=", "None", ",", "\n", "is_same_source", "=", "False", ",", "\n", ")", "->", "torch", ".", "Tensor", ":", "\n", "\n", "        ", "pos_mask", "=", "row_labels", "==", "col_labels", "\n", "neg_mask", "=", "~", "pos_mask", "\n", "if", "is_same_source", ":", "\n", "            ", "pos_mask", ".", "fill_diagonal_", "(", "False", ")", "\n", "\n", "", "with_pos_proxies", "=", "torch", ".", "where", "(", "torch", ".", "sum", "(", "pos_mask", ",", "dim", "=", "0", ")", "!=", "0", ")", "[", "0", "]", "\n", "\n", "pos_term", "=", "l_f", ".", "logsumexp", "(", "\n", "self", ".", "alpha", "*", "(", "metric_mat", "-", "self", ".", "pos_margin", ")", ",", "\n", "keep_mask", "=", "pos_mask", ",", "\n", "add_one", "=", "True", ",", "\n", "dim", "=", "0", "\n", ")", ".", "squeeze", "(", ")", "\n", "neg_term", "=", "l_f", ".", "logsumexp", "(", "\n", "-", "self", ".", "alpha", "*", "(", "metric_mat", "-", "self", ".", "neg_margin", ")", ",", "\n", "keep_mask", "=", "neg_mask", ",", "\n", "add_one", "=", "True", ",", "\n", "dim", "=", "0", "\n", ")", ".", "squeeze", "(", ")", "\n", "# NOTE: log variables", "\n", "# self.stats(metric_mat.detach(), pos_mask, neg_mask)", "\n", "\n", "if", "len", "(", "with_pos_proxies", ")", "==", "0", ":", "\n", "            ", "pos_loss", "=", "torch", ".", "sum", "(", "metric_mat", "*", "0", ")", "\n", "", "else", ":", "\n", "            ", "pos_loss", "=", "torch", ".", "mean", "(", "pos_term", "[", "with_pos_proxies", "]", ")", "\n", "", "neg_loss", "=", "torch", ".", "mean", "(", "neg_term", ")", "\n", "\n", "return", "pos_loss", "+", "neg_loss", "", "", "", ""]], "home.repos.pwc.inspect_result.zbr17_avsl.examples.demo.main": [[19, 43], ["os.path.abspath", "gedml.launcher.misc.ParserWithConvert", "gedml.launcher.misc.ParserWithConvert.render", "os.path.join", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "os.path.join", "random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "getattr", "torch.spawn", "demo.main_worker"], "function", ["home.repos.pwc.inspect_result.zbr17_avsl.examples.demo.main_worker"], ["def", "main", "(", ")", ":", "\n", "# argparser", "\n", "    ", "csv_path", "=", "os", ".", "path", ".", "abspath", "(", "opj", "(", "__file__", ",", "\"../config/args.csv\"", ")", ")", "\n", "parser", "=", "ParserWithConvert", "(", "csv_path", "=", "csv_path", ",", "name", "=", "\"AVSL\"", ")", "\n", "opt", ",", "convert_dict", "=", "parser", ".", "render", "(", ")", "\n", "\n", "# args postprocess", "\n", "opt", ".", "save_path", "=", "opj", "(", "opt", ".", "save_path", ",", "opt", ".", "save_name", ")", "\n", "if", "opt", ".", "is_resume", ":", "\n", "        ", "opt", ".", "delete_old", "=", "False", "\n", "\n", "", "if", "opt", ".", "seed", "is", "not", "None", ":", "\n", "        ", "random", ".", "seed", "(", "opt", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "opt", ".", "seed", ")", "\n", "", "cudnn", ".", "deterministic", "=", "opt", ".", "not_deterministic", "\n", "cudnn", ".", "benchmark", "=", "opt", ".", "not_benchmark", "\n", "\n", "opt", ".", "ngpus_per_node", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "if", "opt", ".", "is_distributed", ":", "\n", "        ", "assert", "getattr", "(", "opt", ",", "\"machine_size\"", ",", "False", ")", "\n", "opt", ".", "world_size", "=", "opt", ".", "machine_size", "*", "opt", ".", "ngpus_per_node", "\n", "mp", ".", "spawn", "(", "main_worker", ",", "nprocs", "=", "opt", ".", "ngpus_per_node", ",", "args", "=", "(", "convert_dict", ",", "opt", ")", ")", "\n", "", "else", ":", "\n", "        ", "main_worker", "(", "opt", ".", "device", ",", "convert_dict", ",", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbr17_avsl.examples.demo.main_worker": [[44, 128], ["torchdistlog.logging.getLogger().setLevel", "torchdistlog.logging.set_dist", "torchdistlog.logging.info", "print", "os.path.abspath", "os.path.join", "os.path.join", "os.path.join", "gedml.launcher.creators.ConfigHandler", "gedml.launcher.creators.ConfigHandler.register_packages", "gedml.launcher.creators.ConfigHandler.register_packages", "gedml.launcher.creators.ConfigHandler.register_packages", "gedml.launcher.creators.ConfigHandler.register_packages", "gedml.launcher.creators.ConfigHandler.get_params_dict", "gedml.launcher.creators.ConfigHandler.create_all", "gedml.launcher.misc.utils.get_default", "utils.get_default.run", "torch.init_process_group", "int", "int", "os.path.join", "torchdistlog.logging.getLogger", "int"], "function", ["None"], ["", "", "def", "main_worker", "(", "device", ",", "convert_dict", ",", "opt", ")", ":", "\n", "# config logger", "\n", "    ", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "logging", ".", "set_dist", "(", "is_dist", "=", "opt", ".", "is_distributed", ")", "\n", "\n", "opt", ".", "device", "=", "device", "\n", "if", "opt", ".", "is_distributed", ":", "\n", "# initiate torch.distributed", "\n", "        ", "opt", ".", "rank", "=", "opt", ".", "ngpus_per_node", "*", "opt", ".", "machine_rank", "+", "int", "(", "device", ")", "\n", "dist", ".", "init_process_group", "(", "\n", "backend", "=", "opt", ".", "dist_backend", ",", "\n", "init_method", "=", "opt", ".", "dist_url", ",", "\n", "world_size", "=", "opt", ".", "world_size", ",", "\n", "rank", "=", "opt", ".", "rank", "\n", ")", "\n", "", "logging", ".", "info", "(", "\"Logging: GPU: {}\"", ".", "format", "(", "device", ")", ")", "\n", "print", "(", "\"Print: GPU: {}\"", ".", "format", "(", "device", ")", ")", "\n", "\n", "# initiate objects", "\n", "## hyper-parameters", "\n", "start_epoch", "=", "0", "\n", "\n", "if", "opt", ".", "is_distributed", ":", "\n", "## split in each process", "\n", "        ", "assert", "(", "opt", ".", "batch_size", "%", "opt", ".", "world_size", ")", "==", "0", ",", "\"batch-size must be an integer multiple of world-size\"", "\n", "assert", "(", "opt", ".", "num_workers", "%", "opt", ".", "world_size", ")", "==", "0", ",", "\"num-workers must be an integer multiple of world-size\"", "\n", "opt", ".", "batch_size", "=", "int", "(", "opt", ".", "batch_size", "/", "opt", ".", "world_size", ")", "# only for trainer", "\n", "opt", ".", "num_workers", "=", "int", "(", "opt", ".", "num_workers", "/", "opt", ".", "world_size", ")", "# only for trainer", "\n", "\n", "## get config-handler", "\n", "", "config_root", "=", "os", ".", "path", ".", "abspath", "(", "opj", "(", "__file__", ",", "\"../config/\"", ")", ")", "\n", "opt", ".", "link_path", "=", "opj", "(", "config_root", ",", "\"links\"", ",", "\"link_{}.yaml\"", ".", "format", "(", "opt", ".", "setting", ")", ")", "\n", "opt", ".", "assert_path", "=", "opj", "(", "config_root", ",", "\"assert.yaml\"", ")", "\n", "opt", ".", "param_path", "=", "opj", "(", "config_root", ",", "\"param\"", ")", "\n", "\n", "config_handler", "=", "ConfigHandler", "(", "\n", "convert_dict", "=", "convert_dict", ",", "\n", "link_path", "=", "opt", ".", "link_path", ",", "\n", "assert_path", "=", "opt", ".", "assert_path", ",", "\n", "params_path", "=", "opt", ".", "param_path", ",", "\n", "is_confirm_first", "=", "False", "\n", ")", "\n", "\n", "# register modules", "\n", "from", "avsl", "import", "models", ",", "collectors", ",", "testers", ",", "losses", "\n", "config_handler", ".", "register_packages", "(", "\"models\"", ",", "models", ")", "\n", "config_handler", ".", "register_packages", "(", "\"collectors\"", ",", "collectors", ")", "\n", "config_handler", ".", "register_packages", "(", "\"testers\"", ",", "testers", ")", "\n", "config_handler", ".", "register_packages", "(", "\"losses\"", ",", "losses", ")", "\n", "\n", "## initiate params_dict", "\n", "modify_link_dict", "=", "{", "\n", "\"datasets\"", ":", "[", "\n", "{", "\"train\"", ":", "\"{}_train.yaml\"", ".", "format", "(", "opt", ".", "dataset", ")", "}", ",", "\n", "{", "\"test\"", ":", "\"{}_test.yaml\"", ".", "format", "(", "opt", ".", "dataset", ")", "}", "\n", "]", "\n", "}", "\n", "if", "\"avsl\"", "in", "opt", ".", "setting", ":", "\n", "        ", "modify_link_dict", "[", "\"models\"", "]", "=", "[", "\n", "{", "\"trunk\"", ":", "\"{}_decom.yaml\"", ".", "format", "(", "opt", ".", "model", ")", "}", ",", "\n", "{", "\"embedder\"", ":", "\"{}_mlp_avsl.yaml\"", ".", "format", "(", "opt", ".", "model", ")", "}", "\n", "]", "\n", "", "else", ":", "\n", "        ", "modify_link_dict", "[", "\"models\"", "]", "=", "[", "\n", "{", "\"trunk\"", ":", "\"{}.yaml\"", ".", "format", "(", "opt", ".", "model", ")", "}", ",", "\n", "{", "\"embedder\"", ":", "\"{}_mlp.yaml\"", ".", "format", "(", "opt", ".", "model", ")", "}", "\n", "]", "\n", "", "params_dict", "=", "config_handler", ".", "get_params_dict", "(", "modify_link_dict", "=", "modify_link_dict", ")", "\n", "\n", "# modify parameters", "\n", "objects_dict", "=", "config_handler", ".", "create_all", "(", "change_dict", "=", "opt", ".", "__dict__", ")", "\n", "\n", "# get manager and start", "\n", "manager", "=", "utils", ".", "get_default", "(", "objects_dict", ",", "\"managers\"", ")", "\n", "manager", ".", "run", "(", "\n", "phase", "=", "opt", ".", "phase", ",", "\n", "start_epoch", "=", "start_epoch", ",", "\n", "is_test", "=", "opt", ".", "not_test", ",", "\n", "is_save", "=", "opt", ".", "not_save", ",", "\n", "interval", "=", "opt", ".", "interval", ",", "\n", "warm_up", "=", "opt", ".", "warm_up", ",", "\n", "warm_up_list", "=", "opt", ".", "warm_up_list", "\n", ")", "\n"]]}