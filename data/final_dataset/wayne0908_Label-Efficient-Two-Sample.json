{"home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.main.main": [[12, 74], ["parser.parse_args", "print", "random.seed", "numpy.random.seed", "print", "GetDirectory", "print", "GetData", "LabelEfficientTwoSample", "PlotFDivergence", "PlotFDivergence2", "PlotResultsTrend", "PlotDimensionTrend", "PlotCI"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.GetDirectory", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.CreateDataset.Dataset.GetData", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.CollectStatistics.LabelEfficientTwoSample", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotFDivergence", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotFDivergence2", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotResultsTrend", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotDimensionTrend", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotCI"], ["def", "main", "(", ")", ":", "\n", "\n", "\t", "\"\"\"\n\tSet up parameters\n\t\"\"\"", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\"\"\"\n\tSet random seed \n\t\"\"\"", "\n", "print", "(", "'======================= Random number with seed %d ========================='", "%", "args", ".", "Trial", ")", "\n", "random", ".", "seed", "(", "args", ".", "Trial", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "Trial", ")", "\n", "\"\"\"\n\tBuild directory\n\t\"\"\"", "\n", "print", "(", "'========================= Build directory =============================='", ")", "\n", "StatsPath", ",", "FigurePath", ",", "QueryLoadPath", ",", "QueryLoadFigPath", "=", "GetDirectory", "(", "args", ")", "\n", "\n", "\"\"\"\n\tAcquire data\n\t\"\"\"", "\n", "print", "(", "'======================= Acquiring data =============================='", ")", "\n", "HoldoutData", ",", "TrData", "=", "GetData", "(", "args", ")", "\n", "\n", "\n", "\"\"\"\n\tLabel efficient two-sample test\n\t\"\"\"", "\n", "LabelEfficientTwoSample", "(", "args", ",", "TrData", ",", "HoldoutData", ",", "StatsPath", ",", "FigurePath", ",", "QueryLoadPath", ")", "\n", "\n", "\n", "\"\"\"\n\tPlot F-divergence\n\t\"\"\"", "\n", "if", "args", ".", "Plot_FD", "==", "1", ":", "\n", "\t\t", "PlotFDivergence", "(", "args", ",", "QueryLoadPath", ",", "QueryLoadFigPath", ")", "\n", "\n", "\n", "", "\"\"\"\n\tCompute F-divergence\n\t\"\"\"", "\n", "if", "args", ".", "Plot_FD2", "==", "1", ":", "\n", "\t\t", "PlotFDivergence2", "(", "args", ",", "TrData", ",", "QueryLoadPath", ")", "\n", "\n", "", "\"\"\"\n\tPlot Type I/II error\n\t\"\"\"", "\n", "if", "args", ".", "Plot_Trend", "==", "1", ":", "\n", "\t\t", "PlotResultsTrend", "(", "args", ",", "StatsPath", ",", "FigurePath", ")", "\n", "\n", "", "\"\"\"\n\tPlotDimensionResults\n\t\"\"\"", "\n", "if", "args", ".", "Plot_Dimension", "==", "1", ":", "\n", "\t\t", "PlotDimensionTrend", "(", "args", ",", "FigurePath", ")", "\n", "\n", "", "\"\"\"\n\tplot Type I error confidence itnerval \n\t\"\"\"", "\n", "if", "args", ".", "Plot_CI", "==", "1", ":", "\n", "\t\t", "PlotCI", "(", "args", ",", "StatsPath", ",", "FigurePath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.SetPltProp": [[16, 42], ["ax.xaxis.get_major_ticks", "ax.yaxis.get_major_ticks", "ax.spines[].set_linewidth", "tick.label1.set_fontsize", "tick.label1.set_fontweight", "tick.label1.set_fontsize", "tick.label1.set_fontweight", "ax.grid", "ax.set_xlabel", "ax.set_ylabel", "ax.set_title", "ax.legend", "ax.legend"], "function", ["None"], ["def", "SetPltProp", "(", "ax", ",", "xn", "=", "None", ",", "yn", "=", "None", ",", "title", "=", "None", ",", "grid", "=", "True", ",", "bbox_to_anchor", "=", "None", ",", "legend", "=", "True", ",", "pos", "=", "'upper left'", ",", "borderpad", "=", "None", ")", ":", "\n", "\t", "fontsize", "=", "14", "\n", "for", "axis", "in", "[", "'top'", ",", "'bottom'", ",", "'left'", ",", "'right'", "]", ":", "\n", "\t\t", "ax", ".", "spines", "[", "axis", "]", ".", "set_linewidth", "(", "2.5", ")", "\n", "\n", "", "for", "tick", "in", "ax", ".", "xaxis", ".", "get_major_ticks", "(", ")", ":", "\n", "\t    ", "tick", ".", "label1", ".", "set_fontsize", "(", "fontsize", ")", "\n", "tick", ".", "label1", ".", "set_fontweight", "(", "'bold'", ")", "\n", "", "for", "tick", "in", "ax", ".", "yaxis", ".", "get_major_ticks", "(", ")", ":", "\n", "\t    ", "tick", ".", "label1", ".", "set_fontsize", "(", "fontsize", ")", "\n", "tick", ".", "label1", ".", "set_fontweight", "(", "'bold'", ")", "\n", "\n", "", "if", "legend", ":", "\n", "\t\t", "if", "bbox_to_anchor", "==", "None", ":", "\n", "\t\t\t", "ax", ".", "legend", "(", "loc", "=", "pos", ",", "shadow", "=", "True", ",", "prop", "=", "{", "'weight'", ":", "'bold'", ",", "'size'", ":", "10", "}", ",", "borderpad", "=", "borderpad", ")", "\n", "", "else", ":", "\n", "\t\t\t", "ax", ".", "legend", "(", "loc", "=", "pos", ",", "shadow", "=", "True", ",", "bbox_to_anchor", "=", "bbox_to_anchor", ",", "prop", "=", "{", "'weight'", ":", "'bold'", ",", "'size'", ":", "10", "}", ",", "borderpad", "=", "borderpad", ")", "\n", "", "", "if", "grid", ":", "\n", "\t\t", "ax", ".", "grid", "(", "linewidth", "=", "'1.5'", ",", "linestyle", "=", "'dashed'", ")", "\n", "", "if", "xn", "!=", "None", ":", "\n", "\t\t", "ax", ".", "set_xlabel", "(", "xn", ",", "fontweight", "=", "'bold'", ")", "\n", "", "if", "yn", "!=", "None", ":", "\n", "\t\t", "ax", ".", "set_ylabel", "(", "yn", ",", "fontweight", "=", "'bold'", ")", "\n", "", "if", "title", "!=", "None", ":", "\n", "\t\t", "ax", ".", "set_title", "(", "title", ",", "fontweight", "=", "'bold'", ")", "\n", "", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.SetScatterProp": [[43, 57], ["ax.set_yticklabels", "ax.set_xticklabels", "ax.spines[].set_linewidth", "ax.legend", "ax.set_title"], "function", ["None"], ["", "def", "SetScatterProp", "(", "ax", ",", "xn", "=", "None", ",", "yn", "=", "None", ",", "title", "=", "None", ",", "legend", "=", "True", ",", "Loc", "=", "'upper right'", ")", ":", "\n", "\t", "fontsize", "=", "14", "\n", "for", "axis", "in", "[", "'top'", ",", "'bottom'", ",", "'left'", ",", "'right'", "]", ":", "\n", "\t\t", "ax", ".", "spines", "[", "axis", "]", ".", "set_linewidth", "(", "2.5", ")", "\n", "\n", "", "ax", ".", "set_yticklabels", "(", "[", "]", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "]", ")", "\n", "\n", "if", "legend", ":", "\n", "\t\t", "ax", ".", "legend", "(", "loc", "=", "Loc", ",", "shadow", "=", "True", ",", "prop", "=", "{", "'weight'", ":", "'bold'", "}", ")", "\n", "\n", "", "if", "title", "!=", "None", ":", "\n", "\t\t", "ax", ".", "set_title", "(", "title", ",", "fontweight", "=", "'bold'", ")", "\n", "", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.DrawData": [[58, 80], ["print", "matplotlib.figure", "plt.figure.gca", "SetScatterProp.scatter", "SetScatterProp.scatter", "matplotlib.axis", "Utility.SetScatterProp", "SetScatterProp.set_aspect", "plt.figure.savefig", "matplotlib.close", "os.getcwd", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.SetScatterProp"], ["", "def", "DrawData", "(", "Args", ",", "data", ",", "BER", ")", ":", "\n", "\t", "\"\"\"\n\tArgs: parser(). Parameter options\n\tdata: array. Dataset\n\tBER: Bayes error rate\n\t\"\"\"", "\n", "print", "(", "'Drawing synthetic dataset...'", ")", "\n", "Path", "=", "os", ".", "getcwd", "(", ")", "+", "'/Figures/%s/Data/'", "%", "Args", ".", "DataType", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "Path", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "Path", ")", "\n", "", "Fig", "=", "plt", ".", "figure", "(", ")", ";", "ax", "=", "Fig", ".", "gca", "(", ")", "\n", "\n", "Feat", "=", "data", "[", ":", ",", ":", "-", "1", "]", "\n", "Label", "=", "data", "[", ":", ",", "-", "1", "]", "\n", "\n", "ax", ".", "scatter", "(", "Feat", "[", "Label", "==", "0", ",", "0", "]", ",", "Feat", "[", "Label", "==", "0", ",", "1", "]", ",", "c", "=", "'r'", ",", "label", "=", "'Class 0'", ",", "s", "=", "30", ")", "\n", "ax", ".", "scatter", "(", "Feat", "[", "Label", "==", "1", ",", "0", "]", ",", "Feat", "[", "Label", "==", "1", ",", "1", "]", ",", "c", "=", "'b'", ",", "label", "=", "'Class 1'", ",", "s", "=", "30", ")", "\n", "plt", ".", "axis", "(", "aspect", "=", "'equal'", ")", "\n", "ax", "=", "SetScatterProp", "(", "ax", ",", "legend", "=", "True", ",", "Loc", "=", "'upper left'", ")", "\n", "ax", ".", "set_aspect", "(", "aspect", "=", "'equal'", ")", "\n", "Fig", ".", "savefig", "(", "Path", "+", "'SynSep%.2fDel%.2fSize%d.png'", "%", "(", "Args", ".", "Sep", ",", "Args", ".", "Del", ",", "Args", ".", "S", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.GetDirectory": [[81, 103], ["os.getcwd", "os.getcwd", "os.getcwd", "os.getcwd", "os.getcwd", "os.getcwd", "os.getcwd", "os.getcwd"], "function", ["None"], ["", "def", "GetDirectory", "(", "Args", ")", ":", "\n", "\n", "\t", "if", "Args", ".", "DataType", "==", "'Syn'", ":", "\n", "\t\t", "StatsPath1", "=", "os", ".", "getcwd", "(", ")", "+", "'/Stats/%s/D%dSep%.2fDel%.2fSize%d/%s/Alpha%.2f/'", "%", "(", "Args", ".", "DataType", ",", "Args", ".", "FeatLen", ",", "Args", ".", "Sep", ",", "Args", ".", "Del", ",", "Args", ".", "S", ",", "Args", ".", "TestType", ",", "Args", ".", "alpha", ")", "\n", "FigurePath1", "=", "os", ".", "getcwd", "(", ")", "+", "'/Figures/%s/D%dSep%.2fDel%.2fSize%d/%s/Alpha%.2f/'", "%", "(", "Args", ".", "DataType", ",", "Args", ".", "FeatLen", ",", "Args", ".", "Sep", ",", "Args", ".", "Del", ",", "Args", ".", "S", ",", "Args", ".", "TestType", ",", "Args", ".", "alpha", ")", "\n", "", "else", ":", "\n", "\t\t", "StatsPath1", "=", "os", ".", "getcwd", "(", ")", "+", "'/Stats/%s/%s/'", "%", "(", "Args", ".", "DataType", ",", "Args", ".", "TestType", ")", "\n", "FigurePath1", "=", "os", ".", "getcwd", "(", ")", "+", "'/Figures/%s/%s/'", "%", "(", "Args", ".", "DataType", ",", "Args", ".", "TestType", ")", "\n", "", "if", "Args", ".", "TestType", "==", "'Chen'", ":", "\n", "\t\t", "StatsPath1", "+=", "'(M=%d)'", "%", "(", "Args", ".", "ChenM", ")", "\n", "FigurePath1", "+=", "'(M=%d)'", "%", "(", "Args", ".", "ChenM", ")", "\n", "\n", "", "\"\"\"\n\tLoad query index\n\t\"\"\"", "\n", "if", "Args", ".", "DataType", "==", "'Syn'", ":", "\n", "\t\t", "QueryLoadPath", "=", "os", ".", "getcwd", "(", ")", "+", "'/Stats/%s/D%dSep%.2fDel%.2fSize%d/'", "%", "(", "Args", ".", "DataType", ",", "Args", ".", "FeatLen", ",", "Args", ".", "Sep", ",", "Args", ".", "Del", ",", "Args", ".", "S", ")", "\n", "QueryLoadFigPath", "=", "os", ".", "getcwd", "(", ")", "+", "'/Figures/%s/D%dSep%.2fDel%.2fSize%d/'", "%", "(", "Args", ".", "DataType", ",", "Args", ".", "FeatLen", ",", "Args", ".", "Sep", ",", "Args", ".", "Del", ",", "Args", ".", "S", ")", "\n", "", "else", ":", "\n", "\t\t", "QueryLoadPath", "=", "os", ".", "getcwd", "(", ")", "+", "'/Stats/%s/'", "%", "(", "Args", ".", "DataType", ")", "\n", "QueryLoadFigPath", "=", "os", ".", "getcwd", "(", ")", "+", "'/Figures/%s/'", "%", "(", "Args", ".", "DataType", ")", "\n", "", "return", "StatsPath1", ",", "FigurePath1", ",", "QueryLoadPath", ",", "QueryLoadFigPath", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotStatsDistri2": [[105, 119], ["numpy.load", "numpy.save", "numpy.save", "Utility.WriteToExcel"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.WriteToExcel"], ["", "def", "PlotStatsDistri2", "(", "args", ",", "StatsPath", ",", "FigurePath", ",", "StatsName", ")", ":", "\n", "\t", "\"\"\"\n\tFor permutation distribution generation\n\tArgs: input argument \n\tStatsPath: str. Path to the stats directory  \n\tFigurePath: str. Path to the figure directory\n\tStatsName: str. Name of stats\n\t\"\"\"", "\n", "stats", "=", "np", ".", "load", "(", "StatsPath", "+", "'CutEdgeNumTrial%d.npy'", "%", "(", "args", ".", "Trial", ")", ")", "\n", "\n", "PVal", "=", "stats", "[", "0", "]", ";", "Reject", "=", "stats", "[", "1", "]", "\n", "\n", "np", ".", "save", "(", "StatsPath", "+", "'Reject%d.npy'", "%", "args", ".", "Trial", ",", "Reject", ")", ";", "np", ".", "save", "(", "StatsPath", "+", "'PVal%d.npy'", "%", "args", ".", "Trial", ",", "PVal", ")", "\n", "WriteToExcel", "(", "StatsPath", ",", "StatsName", ",", "Reject", ",", "PVal", ",", "args", ".", "Trial", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotFDivergence": [[121, 164], ["numpy.arange", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "openpyxl.load_workbook", "openpyxl.load_workbook", "openpyxl.load_workbook", "openpyxl.load_workbook", "range", "matplotlib.figure", "plt.figure.gca", "SetPltProp.plot", "SetPltProp.fill_between", "SetPltProp.plot", "SetPltProp.fill_between", "SetPltProp.plot", "SetPltProp.fill_between", "SetPltProp.plot", "SetPltProp.fill_between", "Utility.SetPltProp", "plt.figure.savefig", "matplotlib.close", "os.path.exists", "os.makedirs", "len", "len", "len", "len", "len", "len", "len", "len", "len", "range", "numpy.std", "numpy.std", "numpy.std", "numpy.std"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.SetPltProp"], ["", "def", "PlotFDivergence", "(", "args", ",", "StatsPath", ",", "FigurePath", ")", ":", "\n", "\t", "Per", "=", "np", ".", "arange", "(", "args", ".", "Interval", ",", "args", ".", "Per", "+", "args", ".", "Interval", ",", "args", ".", "Interval", ")", ";", "\n", "FigurePath2", "=", "FigurePath", "+", "'MI/'", ";", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "FigurePath2", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "FigurePath2", ")", "\n", "", "PassiveMI", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "EUMI", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "EUMI2", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "USMI", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", "\n", "PassiveMIstd", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "EUMIstd", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "EUMI2std", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "USMIstd", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", "\n", "PassiveMIV", "=", "np", ".", "zeros", "(", "args", ".", "Trial", ")", ";", "EUMIV", "=", "np", ".", "zeros", "(", "args", ".", "Trial", ")", ";", "EUMI2V", "=", "np", ".", "zeros", "(", "args", ".", "Trial", ")", ";", "USMIV", "=", "np", ".", "zeros", "(", "args", ".", "Trial", ")", "\n", "\n", "Path1", "=", "StatsPath", "+", "'QueryIndex(ClsUncertaintyQuery)/%s/MI/'", "%", "(", "'Passive'", ")", "\n", "Path2", "=", "StatsPath", "+", "'QueryIndex(ClsUncertaintyQuery)/%s/%s/MI/InitTrainingSize%d/'", "%", "(", "'Uncertainty'", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "Path3", "=", "StatsPath", "+", "'QueryIndex(ClsUncertaintyQuery)/%s/%s/MI/InitTrainingSize%d/'", "%", "(", "'Certainty'", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "Path4", "=", "StatsPath", "+", "'QueryIndex(ClsUncertaintyQuery)/%s/%s/MI/InitTrainingSize%d/'", "%", "(", "'Bimodal'", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "pwb", "=", "load_workbook", "(", "Path1", "+", "'MI.xlsx'", ",", "data_only", "=", "True", ")", ";", "pws", "=", "pwb", "[", "\"FDivergence\"", "]", ";", "\n", "ewb", "=", "load_workbook", "(", "Path2", "+", "'MI.xlsx'", ",", "data_only", "=", "True", ")", ";", "ews", "=", "ewb", "[", "\"FDivergence\"", "]", ";", "\n", "uwb", "=", "load_workbook", "(", "Path3", "+", "'MI.xlsx'", ",", "data_only", "=", "True", ")", ";", "uws", "=", "uwb", "[", "\"FDivergence\"", "]", ";", "\n", "ewb2", "=", "load_workbook", "(", "Path4", "+", "'MI.xlsx'", ",", "data_only", "=", "True", ")", ";", "ews2", "=", "ewb2", "[", "\"FDivergence\"", "]", ";", "\n", "Alphabet", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "Per", ")", ")", ":", "\n", "\t\t", "for", "t", "in", "range", "(", "args", ".", "Trial", ")", ":", "\n", "\t\t\t", "PassiveMI", "[", "i", "]", "+=", "pws", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", ";", "PassiveMIV", "[", "t", "]", "=", "pws", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", "\n", "EUMI", "[", "i", "]", "+=", "ews", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", ";", "EUMIV", "[", "t", "]", "=", "ews", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", "\n", "USMI", "[", "i", "]", "+=", "uws", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", ";", "USMIV", "[", "t", "]", "=", "uws", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", "\n", "EUMI2", "[", "i", "]", "+=", "ews2", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", ";", "EUMI2V", "[", "t", "]", "=", "ews2", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", "\n", "", "PassiveMIstd", "[", "i", "]", "=", "np", ".", "std", "(", "PassiveMIV", ")", ";", "EUMIstd", "[", "i", "]", "=", "np", ".", "std", "(", "EUMIV", ")", ";", "\n", "EUMI2std", "[", "i", "]", "=", "np", ".", "std", "(", "EUMI2V", ")", ";", "USMIstd", "[", "i", "]", "=", "np", ".", "std", "(", "USMIV", ")", "\n", "\n", "", "PassiveMI", "/=", "args", ".", "Trial", ";", "EUMI", "/=", "args", ".", "Trial", ";", "USMI", "/=", "args", ".", "Trial", ";", "EUMI2", "/=", "args", ".", "Trial", "\n", "\n", "Fig", "=", "plt", ".", "figure", "(", ")", ";", "ax", "=", "Fig", ".", "gca", "(", ")", "\n", "\n", "ax", ".", "plot", "(", "Per", ",", "PassiveMI", ",", "marker", "=", "'o'", ",", "c", "=", "'g'", ",", "markersize", "=", "8", ",", "label", "=", "'Passive'", ",", "linewidth", "=", "3", ")", ";", "\n", "ax", ".", "fill_between", "(", "Per", ",", "PassiveMI", "+", "PassiveMIstd", ",", "PassiveMI", "-", "PassiveMIstd", ",", "color", "=", "'g'", ",", "alpha", "=", "0.15", ")", ";", "\n", "ax", ".", "plot", "(", "Per", ",", "USMI", ",", "marker", "=", "'o'", ",", "c", "=", "'r'", ",", "markersize", "=", "8", ",", "label", "=", "'Certainty'", ",", "linewidth", "=", "3", ")", ";", "\n", "ax", ".", "fill_between", "(", "Per", ",", "USMI", "+", "USMIstd", ",", "USMI", "-", "USMIstd", ",", "color", "=", "'r'", ",", "alpha", "=", "0.15", ")", ";", "\n", "ax", ".", "plot", "(", "Per", ",", "EUMI", ",", "marker", "=", "'o'", ",", "c", "=", "'b'", ",", "markersize", "=", "8", ",", "label", "=", "'Uncertainty'", ",", "linewidth", "=", "3", ")", ";", "\n", "ax", ".", "fill_between", "(", "Per", ",", "EUMI", "+", "EUMIstd", ",", "EUMI", "-", "EUMIstd", ",", "color", "=", "'b'", ",", "alpha", "=", "0.15", ")", ";", "\n", "ax", ".", "plot", "(", "Per", ",", "EUMI2", ",", "marker", "=", "'o'", ",", "c", "=", "'c'", ",", "markersize", "=", "8", ",", "label", "=", "'Bimodal(Proposed)'", ",", "linewidth", "=", "3", ")", ";", "\n", "ax", ".", "fill_between", "(", "Per", ",", "EUMI2", "+", "EUMI2std", ",", "EUMI2", "-", "EUMI2std", ",", "color", "=", "'c'", ",", "alpha", "=", "0.15", ")", ";", "\n", "ax", "=", "SetPltProp", "(", "ax", ",", "xn", "=", "'Proportion of queries '", ",", "yn", "=", "'f-divergence'", ",", "pos", "=", "'upper right'", ")", "\n", "Fig", ".", "savefig", "(", "FigurePath2", "+", "'FD%s.png'", "%", "args", ".", "cls", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotResultsTrend": [[165, 228], ["numpy.arange", "os.path.exists", "os.makedirs", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "openpyxl.load_workbook", "openpyxl.load_workbook", "openpyxl.load_workbook", "openpyxl.load_workbook", "print", "range", "matplotlib.figure", "plt.figure.gca", "SetPltProp.plot", "SetPltProp.plot", "SetPltProp.plot", "SetPltProp.plot", "plt.figure.savefig", "matplotlib.close", "len", "len", "len", "len", "len", "range", "Utility.SetPltProp", "Utility.SetPltProp", "print", "SetPltProp.plot", "numpy.ones", "len"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.SetPltProp", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.SetPltProp"], ["", "def", "PlotResultsTrend", "(", "args", ",", "StatsPath", ",", "FigurePath", ")", ":", "\n", "\t", "Per", "=", "np", ".", "arange", "(", "args", ".", "Interval", ",", "args", ".", "Per", "+", "args", ".", "Interval", ",", "args", ".", "Interval", ")", ";", "\n", "# Per = np.arange(args.Interval, args.Per, args.Interval); ", "\n", "FigurePath2", "=", "FigurePath", "+", "'MI/'", ";", "wbn", "=", "[", "'Reject'", ",", "'PVal'", "]", ";", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "FigurePath2", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "FigurePath2", ")", "\n", "\n", "", "for", "wbn2", "in", "wbn", ":", "\n", "\t\t", "PassiveMI", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "EUMI", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "EUMI2", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "USMI", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", "\n", "\n", "if", "args", ".", "DataType", "==", "'MNIST'", "or", "args", ".", "DataType", "==", "'MNISTNull'", ":", "\n", "\t\t\t", "PassiveCls", "=", "'NN'", "\n", "", "elif", "args", ".", "DataType", "==", "'ADNI'", ":", "\n", "\t\t\t", "PassiveCls", "=", "'logistic'", "\n", "", "elif", "args", ".", "DataType", "==", "'Syn'", ":", "\n", "\t\t\t", "PassiveCls", "=", "'logistic'", "\n", "", "Path1", "=", "StatsPath", "+", "'FoundCutEdges(ClsUncertaintyQuery)/Passive/RunDistri/'", "# assume passive learning results are stored in the SVC folder", "\n", "Path2", "=", "StatsPath", "+", "'FoundCutEdges(ClsUncertaintyQuery)/Certainty/%s/RunDistri/InitTrainingSize%d/'", "%", "(", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "Path3", "=", "StatsPath", "+", "'FoundCutEdges(ClsUncertaintyQuery)/Uncertainty/%s/RunDistri/InitTrainingSize%d/'", "%", "(", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "Path4", "=", "StatsPath", "+", "'FoundCutEdges(ClsUncertaintyQuery)/Bimodal/%s/RunDistri/InitTrainingSize%d/'", "%", "(", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "\n", "pwb", "=", "load_workbook", "(", "Path1", "+", "'ClsUncertaintyQuery.xlsx'", ",", "data_only", "=", "True", ")", ";", "pws", "=", "pwb", "[", "wbn2", "]", ";", "\n", "ewb", "=", "load_workbook", "(", "Path2", "+", "'ClsUncertaintyQuery.xlsx'", ",", "data_only", "=", "True", ")", ";", "ews", "=", "ewb", "[", "wbn2", "]", ";", "\n", "uwb", "=", "load_workbook", "(", "Path3", "+", "'ClsUncertaintyQuery.xlsx'", ",", "data_only", "=", "True", ")", ";", "uws", "=", "uwb", "[", "wbn2", "]", ";", "\n", "ewb2", "=", "load_workbook", "(", "Path4", "+", "'ClsUncertaintyQuery.xlsx'", ",", "data_only", "=", "True", ")", ";", "ews2", "=", "ewb2", "[", "wbn2", "]", ";", "\n", "Alphabet", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", "]", "\n", "# print method name and data type", "\n", "print", "(", "'%s, %s'", "%", "(", "m", ",", "args", ".", "DataType", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "Per", ")", ")", ":", "\n", "\t\t\t", "for", "t", "in", "range", "(", "args", ".", "Trial", ")", ":", "\n", "\t\t\t\t", "print", "(", "t", ")", "\n", "PassiveMI", "[", "i", "]", "+=", "pws", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", "\n", "EUMI", "[", "i", "]", "+=", "ews", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", "\n", "USMI", "[", "i", "]", "+=", "uws", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", "\n", "EUMI2", "[", "i", "]", "+=", "ews2", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", "\n", "", "", "if", "wbn2", "==", "'PVal'", ":", "\n", "\t\t\t", "PassiveMI", "/=", "args", ".", "Trial", ";", "EUMI", "/=", "args", ".", "Trial", ";", "USMI", "/=", "args", ".", "Trial", ";", "EUMI2", "/=", "args", ".", "Trial", "\n", "", "else", ":", "\n", "\t\t\t", "ErrorType", "=", "'TypeI'", "\n", "if", "args", ".", "DataType", "==", "'Syn'", "and", "not", "(", "args", ".", "Sep", "==", "0", "and", "args", ".", "Del", "==", "0", ")", ":", "\n", "\t\t\t\t", "ErrorType", "=", "'TypeII'", "\n", "", "elif", "args", ".", "DataType", "==", "'MNIST'", "or", "args", ".", "DataType", "==", "'MNIST2'", "or", "args", ".", "DataType", "==", "'ADNI'", ":", "\n", "\t\t\t\t", "ErrorType", "=", "'TypeII'", "\n", "", "if", "ErrorType", "==", "'TypeI'", ":", "\n", "\t\t\t\t", "PassiveMI", "/=", "args", ".", "Trial", ";", "EUMI", "/=", "args", ".", "Trial", ";", "USMI", "/=", "args", ".", "Trial", ";", "EUMI2", "/=", "args", ".", "Trial", "\n", "", "elif", "ErrorType", "==", "'TypeII'", ":", "\n", "\t\t\t\t", "PassiveMI", "=", "args", ".", "Trial", "-", "PassiveMI", ";", "EUMI", "=", "args", ".", "Trial", "-", "EUMI", ";", "\n", "USMI", "=", "args", ".", "Trial", "-", "USMI", ";", "EUMI2", "=", "args", ".", "Trial", "-", "EUMI2", ";", "\n", "PassiveMI", "/=", "args", ".", "Trial", ";", "EUMI", "/=", "args", ".", "Trial", ";", "USMI", "/=", "args", ".", "Trial", ";", "EUMI2", "/=", "args", ".", "Trial", "\n", "", "", "Fig", "=", "plt", ".", "figure", "(", ")", ";", "ax", "=", "Fig", ".", "gca", "(", ")", "\n", "ax", ".", "plot", "(", "Per", ",", "PassiveMI", ",", "marker", "=", "'o'", ",", "c", "=", "'g'", ",", "markersize", "=", "8", ",", "label", "=", "'Passive'", ",", "linewidth", "=", "3", ")", ";", "\n", "ax", ".", "plot", "(", "Per", ",", "USMI", ",", "marker", "=", "'o'", ",", "c", "=", "'b'", ",", "markersize", "=", "8", ",", "label", "=", "'Uncertainty'", ",", "linewidth", "=", "3", ")", ";", "\n", "ax", ".", "plot", "(", "Per", ",", "EUMI", ",", "marker", "=", "'o'", ",", "c", "=", "'r'", ",", "markersize", "=", "8", ",", "label", "=", "'Certainty'", ",", "linewidth", "=", "3", ")", ";", "\n", "ax", ".", "plot", "(", "Per", ",", "EUMI2", ",", "marker", "=", "'o'", ",", "c", "=", "'c'", ",", "markersize", "=", "8", ",", "label", "=", "'Bimodal(Proposed)'", ",", "linewidth", "=", "3", ")", ";", "\n", "if", "wbn2", "==", "'PVal'", ":", "\n", "\t\t\t", "ax", "=", "SetPltProp", "(", "ax", ",", "xn", "=", "'Proportion of queries '", ",", "yn", "=", "wbn2", ",", "pos", "=", "'upper right'", ")", "\n", "", "else", ":", "\n", "\t\t\t", "if", "ErrorType", "==", "'TypeI'", ":", "\n", "\t\t\t\t", "ax", ".", "plot", "(", "Per", ",", "np", ".", "ones", "(", "len", "(", "Per", ")", ")", "*", "args", ".", "alpha", ",", "'o--'", ",", "c", "=", "'m'", ",", "markersize", "=", "8", ",", "label", "=", "'\\u03B1=%.2f'", "%", "args", ".", "alpha", ",", "linewidth", "=", "3", ")", ";", "\n", "", "ax", "=", "SetPltProp", "(", "ax", ",", "xn", "=", "'Proportion of queries '", ",", "yn", "=", "ErrorType", ",", "pos", "=", "'upper right'", ")", "\n", "", "Fig", ".", "savefig", "(", "FigurePath2", "+", "'%s%s%sInitSize%d.png'", "%", "(", "m", ",", "wbn2", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotDimensionTrend": [[229, 274], ["numpy.arange", "os.path.exists", "os.makedirs", "range", "len", "matplotlib.figure", "plt.figure.gca", "enumerate", "plt.figure.savefig", "matplotlib.close", "numpy.zeros", "numpy.zeros", "enumerate", "SetPltProp.plot", "Utility.SetPltProp", "Utility.SetPltProp", "len", "openpyxl.load_workbook", "range", "len", "os.getcwd", "os.getcwd"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.SetPltProp", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.SetPltProp"], ["", "", "def", "PlotDimensionTrend", "(", "args", ",", "FigurePath", ")", ":", "\n", "\t", "Per", "=", "np", ".", "arange", "(", "args", ".", "Interval", ",", "args", ".", "Per", "+", "args", ".", "Interval", ",", "args", ".", "Interval", ")", ";", "\n", "FigurePath2", "=", "FigurePath", "+", "'Dimension/'", ";", "wbn", "=", "[", "'Reject'", ",", "'PVal'", "]", "\n", "\n", "# QueryMethods = ['Passive', 'EnhanceUncertainty', 'uncertainty_sampling', 'EnhanceUncertainty2']", "\n", "QueryMethods", "=", "[", "'Passive'", ",", "'Bimodal'", "]", "\n", "# Label = ['Passive', 'Unimodal', 'Uncertainty', 'Bimodal(Proposed)']; ", "\n", "Label", "=", "[", "'Passive'", ",", "'Bimodal(Proposed)'", "]", ";", "\n", "# Color = ['g', 'r', 'b', 'c']", "\n", "Color", "=", "[", "'g'", ",", "'c'", "]", "\n", "Dimension", "=", "[", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", "14", ",", "16", ",", "18", "]", ";", "Alphabet", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", "]", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "FigurePath2", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "FigurePath2", ")", "\n", "\n", "", "for", "wbn2", "in", "wbn", ":", "\n", "\t\t", "for", "i", "in", "range", "(", "len", "(", "Per", ")", ")", ":", "\n", "\t\t\t", "Fig", "=", "plt", ".", "figure", "(", ")", ";", "ax", "=", "Fig", ".", "gca", "(", ")", "\n", "for", "count1", ",", "q", "in", "enumerate", "(", "QueryMethods", ")", ":", "\n", "\t\t\t\t", "Results", "=", "np", ".", "zeros", "(", "len", "(", "Dimension", ")", ")", ";", "Pval", "=", "np", ".", "zeros", "(", "(", "args", ".", "Trial", ",", "len", "(", "Dimension", ")", ")", ")", "\n", "for", "count2", ",", "d", "in", "enumerate", "(", "Dimension", ")", ":", "\n", "\t\t\t\t\t", "if", "q", "!=", "'Passive'", ":", "\n", "\t\t\t\t\t\t", "Path", "=", "os", ".", "getcwd", "(", ")", "+", "'/Stats/%s/D%dSep%.2fDel%.2fSize%d/FR/Alpha%.2f/FoundCutEdges(ClsUncertaintyQuery)/%s/%s/RunDistri/InitTrainingSize%d/'", "%", "(", "args", ".", "DataType", ",", "d", ",", "args", ".", "Sep", ",", "args", ".", "Del", ",", "args", ".", "S", ",", "args", ".", "alpha", ",", "q", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "Path", "=", "os", ".", "getcwd", "(", ")", "+", "'/Stats/%s/D%dSep%.2fDel%.2fSize%d/FR/Alpha%.2f/FoundCutEdges(ClsUncertaintyQuery)/%s/RunDistri/'", "%", "(", "args", ".", "DataType", ",", "d", ",", "args", ".", "Sep", ",", "args", ".", "Del", ",", "args", ".", "S", ",", "args", ".", "alpha", ",", "q", ")", "\n", "", "wb", "=", "load_workbook", "(", "Path", "+", "'ClsUncertaintyQuery.xlsx'", ",", "data_only", "=", "True", ")", ";", "ws", "=", "wb", "[", "wbn2", "]", "\n", "for", "t", "in", "range", "(", "args", ".", "Trial", ")", ":", "\n", "# print(q, d, t)", "\n", "\t\t\t\t\t\t", "Results", "[", "count2", "]", "+=", "ws", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "t", "+", "1", ")", "]", ".", "value", "\n", "# Pval[t, count2] = ws['%s%d'%(Alphabet[i], t + 1)].value", "\n", "", "if", "wbn2", "==", "'PVal'", ":", "\n", "\t\t\t\t\t\t", "Results", "[", "count2", "]", "/=", "args", ".", "Trial", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "Results", "[", "count2", "]", "=", "(", "args", ".", "Trial", "-", "Results", "[", "count2", "]", ")", "/", "args", ".", "Trial", "\n", "\n", "", "", "ax", ".", "plot", "(", "Dimension", ",", "Results", ",", "marker", "=", "'o'", ",", "c", "=", "Color", "[", "count1", "]", ",", "markersize", "=", "8", ",", "label", "=", "Label", "[", "count1", "]", ",", "linewidth", "=", "3", ")", ";", "\n", "# if wbn2!= 'Reject':", "\n", "# \tStd = np.std(Pval, 0)", "\n", "# \tpdb.set_trace()", "\n", "# \tax.fill_between(Dimension, Results + Std, Results - Std, color=Color[count1], alpha = 0.55); ", "\n", "", "if", "wbn2", "==", "'Reject'", ":", "\n", "\t\t\t\t", "ax", "=", "SetPltProp", "(", "ax", ",", "xn", "=", "'Dimension'", ",", "yn", "=", "'TypeII Error'", ",", "pos", "=", "'upper left'", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "ax", "=", "SetPltProp", "(", "ax", ",", "xn", "=", "'Dimension'", ",", "yn", "=", "wbn2", ",", "pos", "=", "'upper left'", ")", "\n", "", "Fig", ".", "savefig", "(", "FigurePath2", "+", "'%s%.2f.png'", "%", "(", "wbn2", ",", "Per", "[", "i", "]", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotFDivergence2": [[275, 313], ["numpy.arange", "os.path.isfile", "numpy.int64", "enumerate", "openpyxl.Workbook.save", "os.path.exists", "os.makedirs", "openpyxl.load_workbook", "openpyxl.Workbook", "openpyxl.Workbook.create_sheet", "openpyxl.Workbook.create_sheet", "open", "pickle.load", "FDStats2", "wb.create_sheet.cell", "wb.create_sheet.cell", "openpyxl.Workbook.create_sheet", "openpyxl.Workbook.create_sheet", "numpy.sort", "numpy.sort", "int", "int", "len", "len"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.FDStats2"], ["", "", "", "def", "PlotFDivergence2", "(", "args", ",", "Data", ",", "QueryPath", ")", ":", "\n", "\n", "\t", "if", "args", ".", "qs", "!=", "'Passive'", ":", "\n", "\t\t", "MIPath", "=", "QueryPath", "+", "'QueryIndex(ClsUncertaintyQuery)/%s/%s/MI/InitTrainingSize%d/'", "%", "(", "args", ".", "qs", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "QueryIndexPath", "=", "QueryPath", "+", "'QueryIndex(ClsUncertaintyQuery)/%s/%s/RunDistri/InitTrainingSize%d/'", "%", "(", "args", ".", "qs", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "", "else", ":", "\n", "\t\t", "MIPath", "=", "QueryPath", "+", "'QueryIndex(ClsUncertaintyQuery)/Passive/MI/'", "\n", "QueryIndexPath", "=", "QueryPath", "+", "'QueryIndex(ClsUncertaintyQuery)/Passive/RunDistri/'", "\n", "", "Per", "=", "np", ".", "arange", "(", "args", ".", "Interval", ",", "args", ".", "Per", "+", "args", ".", "Interval", ",", "args", ".", "Interval", ")", ";", "\n", "X", "=", "Data", "[", ":", ",", ":", "-", "1", "]", ";", "Y", "=", "Data", "[", ":", ",", "-", "1", "]", ";", "Alphabet", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "MIPath", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "MIPath", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "isfile", "(", "MIPath", "+", "'MI.xlsx'", ")", ":", "\n", "\t\t", "wb", "=", "load_workbook", "(", "MIPath", "+", "'MI.xlsx'", ")", ";", "\n", "if", "not", "'FDivergence'", "in", "wb", ".", "sheetnames", "or", "not", "'Cutedge'", "in", "wb", ".", "sheetnames", ":", "\n", "\t\t\t", "ws1", "=", "wb", ".", "create_sheet", "(", "\"FDivergence\"", ")", "\n", "ws2", "=", "wb", ".", "create_sheet", "(", "\"Cutedge\"", ")", "\n", "", "else", ":", "\n", "\t\t\t", "ws1", "=", "wb", "[", "\"FDivergence\"", "]", "\n", "ws2", "=", "wb", "[", "\"Cutedge\"", "]", "\n", "", "", "else", ":", "\n", "\t\t", "wb", "=", "Workbook", "(", ")", ";", "ws1", "=", "wb", ".", "create_sheet", "(", "\"FDivergence\"", ")", ";", "ws2", "=", "wb", ".", "create_sheet", "(", "\"Cutedge\"", ")", ";", "\n", "\n", "", "with", "open", "(", "QueryIndexPath", "+", "'QueryIndex%d.txt'", "%", "args", ".", "Trial", ",", "'rb'", ")", "as", "fp", ":", "QueryIndex", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "QueryIndex", "=", "np", ".", "int64", "(", "QueryIndex", ")", "\n", "for", "i", ",", "p", "in", "enumerate", "(", "Per", ")", ":", "\n", "\n", "\t\t", "SubX", "=", "X", "[", "np", ".", "sort", "(", "QueryIndex", "[", ":", "int", "(", "len", "(", "QueryIndex", ")", "*", "p", ")", "]", ")", "]", ";", "SubY", "=", "Y", "[", "np", ".", "sort", "(", "QueryIndex", "[", ":", "int", "(", "len", "(", "QueryIndex", ")", "*", "p", ")", "]", ")", "]", ";", "\n", "I", ",", "cutedgenum", "=", "FDStats2", "(", "args", ",", "SubX", "[", "SubY", "==", "0", "]", ",", "SubX", "[", "SubY", "==", "1", "]", ")", ";", "\n", "ws1", ".", "cell", "(", "row", "=", "args", ".", "Trial", ",", "column", "=", "i", "+", "1", ",", "value", "=", "I", ")", "\n", "ws1", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "args", ".", "Trial", "+", "1", ")", "]", "=", "'=AVERAGE(%s%d:%s%d)'", "%", "(", "Alphabet", "[", "i", "]", ",", "1", ",", "Alphabet", "[", "i", "]", ",", "args", ".", "Trial", ")", "\n", "\n", "ws2", ".", "cell", "(", "row", "=", "args", ".", "Trial", ",", "column", "=", "i", "+", "1", ",", "value", "=", "cutedgenum", ")", "\n", "ws2", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "args", ".", "Trial", "+", "1", ")", "]", "=", "'=AVERAGE(%s%d:%s%d)'", "%", "(", "Alphabet", "[", "i", "]", ",", "1", ",", "Alphabet", "[", "i", "]", ",", "args", ".", "Trial", ")", "\n", "\n", "", "wb", ".", "save", "(", "MIPath", "+", "'MI.xlsx'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotCI": [[315, 359], ["numpy.arange", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "range", "matplotlib.figure", "plt.figure.gca", "SetPltProp.plot", "Utility.SetPltProp", "plt.figure.savefig", "matplotlib.close", "os.path.exists", "os.makedirs", "len", "len", "len", "numpy.load", "len", "statsmodels.stats.proportion.proportion_confint", "SetPltProp.errorbar", "SetPltProp.errorbar", "numpy.ones", "SetPltProp.errorbar", "len", "SetPltProp.errorbar"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.SetPltProp"], ["", "def", "PlotCI", "(", "args", ",", "StatsPath", ",", "FigurePath", ")", ":", "\n", "\t", "if", "args", ".", "qs", "!=", "'Passive'", ":", "\n", "\t\t", "Path", "=", "StatsPath", "+", "'FoundCutEdges(ClsUncertaintyQuery)/%s/%s/RunDistri/InitTrainingSize%d/'", "%", "(", "args", ".", "qs", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "", "else", ":", "\n", "\t\t", "Path", "=", "StatsPath", "+", "'FoundCutEdges(ClsUncertaintyQuery)/%s/RunDistri/'", "%", "(", "args", ".", "qs", ")", "\n", "", "FigurePath2", "=", "FigurePath", "+", "'CI/'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "FigurePath2", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "FigurePath2", ")", "\n", "", "Per", "=", "np", ".", "arange", "(", "args", ".", "Interval", ",", "args", ".", "Per", "+", "args", ".", "Interval", ",", "args", ".", "Interval", ")", ";", "\n", "Alphabet", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", "]", "\n", "SuccessNum", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "Upp_CI", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", ";", "Low_CI", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", ")", "\n", "\n", "for", "t", "in", "range", "(", "args", ".", "Trial", ")", ":", "\n", "\t\t", "Reject", "=", "np", ".", "load", "(", "Path", "+", "'Reject%d.npy'", "%", "(", "t", "+", "1", ")", ")", ";", "\n", "SuccessNum", "+=", "Reject", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "Per", ")", ")", ":", "\n", "\n", "\t\t", "Low_CI", "[", "i", "]", ",", "Upp_CI", "[", "i", "]", "=", "proportion_confint", "(", "SuccessNum", "[", "i", "]", ",", "args", ".", "Trial", ",", "alpha", "=", "0.05", ",", "method", "=", "'wilson'", ")", "\n", "", "TypeIError", "=", "SuccessNum", "/", "args", ".", "Trial", "\n", "Fig", "=", "plt", ".", "figure", "(", ")", ";", "ax", "=", "Fig", ".", "gca", "(", ")", "\n", "if", "args", ".", "qs", "==", "'Passive'", ":", "\n", "# ax.plot(Per, TypeIError, marker = 'o', c='b', markersize = 8, label='Passive', linewidth = 3); ", "\n", "# ax.fill_between(Per, Low_CI[i], Upp_CI[i], color='b', alpha = 0.15);", "\n", "\t\t", "ax", ".", "errorbar", "(", "Per", ",", "TypeIError", ",", "yerr", "=", "[", "TypeIError", "-", "Low_CI", ",", "Upp_CI", "-", "TypeIError", "]", ",", "\n", "label", "=", "'Passive'", ",", "color", "=", "\"black\"", ",", "capsize", "=", "3", ",", "linestyle", "=", "\"None\"", ",", "\n", "marker", "=", "\"s\"", ",", "markersize", "=", "7", ",", "mfc", "=", "\"black\"", ",", "mec", "=", "\"black\"", ")", "\n", "", "elif", "args", ".", "qs", "==", "'Uncertainty'", ":", "\n", "\t\t", "ax", ".", "errorbar", "(", "Per", ",", "TypeIError", ",", "yerr", "=", "[", "TypeIError", "-", "Low_CI", ",", "Upp_CI", "-", "TypeIError", "]", ",", "\n", "label", "=", "'Uncertainty'", ",", "color", "=", "\"black\"", ",", "capsize", "=", "3", ",", "linestyle", "=", "\"None\"", ",", "\n", "marker", "=", "\"s\"", ",", "markersize", "=", "7", ",", "mfc", "=", "\"black\"", ",", "mec", "=", "\"black\"", ")", "\n", "", "elif", "args", ".", "qs", "==", "'Certainty'", ":", "\n", "\t\t", "ax", ".", "errorbar", "(", "Per", ",", "TypeIError", ",", "yerr", "=", "[", "TypeIError", "-", "Low_CI", ",", "Upp_CI", "-", "TypeIError", "]", ",", "\n", "label", "=", "'Certainty'", ",", "color", "=", "\"black\"", ",", "capsize", "=", "3", ",", "linestyle", "=", "\"None\"", ",", "\n", "marker", "=", "\"s\"", ",", "markersize", "=", "7", ",", "mfc", "=", "\"black\"", ",", "mec", "=", "\"black\"", ")", "\n", "", "elif", "args", ".", "qs", "==", "'Bimodal'", ":", "\n", "\t\t", "ax", ".", "errorbar", "(", "Per", ",", "TypeIError", ",", "yerr", "=", "[", "TypeIError", "-", "Low_CI", ",", "Upp_CI", "-", "TypeIError", "]", ",", "\n", "label", "=", "'Bimodal'", ",", "color", "=", "\"black\"", ",", "capsize", "=", "3", ",", "linestyle", "=", "\"None\"", ",", "\n", "marker", "=", "\"s\"", ",", "markersize", "=", "7", ",", "mfc", "=", "\"black\"", ",", "mec", "=", "\"black\"", ")", "\n", "\n", "", "ax", ".", "plot", "(", "Per", ",", "np", ".", "ones", "(", "len", "(", "Per", ")", ")", "*", "args", ".", "alpha", ",", "c", "=", "'r'", ",", "label", "=", "\"Alpha=%.2f\"", "%", "args", ".", "alpha", ")", "\n", "ax", "=", "SetPltProp", "(", "ax", ",", "xn", "=", "'Query proportion'", ",", "yn", "=", "'Type I error'", ",", "legend", "=", "True", ")", ";", "\n", "Fig", ".", "savefig", "(", "FigurePath2", "+", "'TypeIErrCI%s%s.png'", "%", "(", "args", ".", "qs", ",", "args", ".", "cls", ")", ",", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.WriteToExcel": [[360, 380], ["os.path.isfile", "range", "openpyxl.Workbook.save", "openpyxl.load_workbook", "openpyxl.Workbook", "openpyxl.Workbook.create_sheet", "openpyxl.Workbook.create_sheet", "len", "wb.create_sheet.cell", "wb.create_sheet.cell", "openpyxl.Workbook.create_sheet", "openpyxl.Workbook.create_sheet"], "function", ["None"], ["", "def", "WriteToExcel", "(", "StatsPath", ",", "StatsName", ",", "Reject", ",", "PVal", ",", "Trial", ")", ":", "\n", "\t", "if", "os", ".", "path", ".", "isfile", "(", "StatsPath", "+", "'%s.xlsx'", "%", "StatsName", ")", ":", "\n", "\t\t", "wb", "=", "load_workbook", "(", "StatsPath", "+", "'%s.xlsx'", "%", "StatsName", ")", ";", "\n", "if", "not", "'Reject'", "in", "wb", ".", "sheetnames", ":", "\n", "\t\t\t", "ws1", "=", "wb", ".", "create_sheet", "(", "\"Reject\"", ")", "\n", "", "else", ":", "\n", "\t\t\t", "ws1", "=", "wb", "[", "\"Reject\"", "]", "\n", "", "if", "not", "'PVal'", "in", "wb", ".", "sheetnames", ":", "\n", "\t\t\t", "ws2", "=", "wb", ".", "create_sheet", "(", "\"PVal\"", ")", "\n", "", "else", ":", "\n", "\t\t\t", "ws2", "=", "wb", "[", "\"PVal\"", "]", "\n", "", "", "else", ":", "\n", "\t\t", "wb", "=", "Workbook", "(", ")", ";", "ws1", "=", "wb", ".", "create_sheet", "(", "\"Reject\"", ")", ";", "ws2", "=", "wb", ".", "create_sheet", "(", "\"PVal\"", ")", "\n", "", "Alphabet", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "Reject", ")", ")", ":", "\n", "\t\t", "ws1", ".", "cell", "(", "row", "=", "Trial", ",", "column", "=", "i", "+", "1", ",", "value", "=", "Reject", "[", "i", "]", ")", "\n", "ws2", ".", "cell", "(", "row", "=", "Trial", ",", "column", "=", "i", "+", "1", ",", "value", "=", "PVal", "[", "i", "]", ")", "\n", "ws1", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "Trial", "+", "1", ")", "]", "=", "'=SUM(%s%d:%s%d)'", "%", "(", "Alphabet", "[", "i", "]", ",", "1", ",", "Alphabet", "[", "i", "]", ",", "Trial", ")", "\n", "ws2", "[", "'%s%d'", "%", "(", "Alphabet", "[", "i", "]", ",", "Trial", "+", "1", ")", "]", "=", "'=AVERAGE(%s%d:%s%d)'", "%", "(", "Alphabet", "[", "i", "]", ",", "1", ",", "Alphabet", "[", "i", "]", ",", "Trial", ")", "\n", "", "wb", ".", "save", "(", "StatsPath", "+", "'%s.xlsx'", "%", "StatsName", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.CollectStatistics.LabelEfficientTwoSample": [[14, 93], ["print", "numpy.arange", "numpy.zeros", "print", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.isfile", "print", "numpy.arange", "numpy.int64", "enumerate", "numpy.save", "print", "PlotStatsDistri2", "open", "pickle.load", "len", "os.path.isfile", "ComputeStatistics.GetActiveClassifier2", "os.path.isfile", "open", "pickle.dump", "len", "numpy.hstack", "time.time", "print", "numpy.random.permutation", "ComputeStatistics.Hotelling", "time.time", "len", "ComputeStatistics.GetActiveClassifier", "numpy.sort", "numpy.sort", "SubY.reshape", "ComputeStatistics.Chen", "time.time", "ComputeStatistics.FR", "time.time", "ComputeStatistics.PermuChen", "time.time", "int", "int", "ComputeStatistics.PermuHotelling", "time.time", "ComputeStatistics.PermuFR", "time.time", "len", "len"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.PlotStatsDistri2", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.GetActiveClassifier2", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Hotelling", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.GetActiveClassifier", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Chen", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.FR", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.PermuChen", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.PermuHotelling", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.PermuFR"], ["def", "LabelEfficientTwoSample", "(", "args", ",", "Data", ",", "HoldoutData", ",", "StatsPath", ",", "FigurePath", ",", "QueryLoadPath", ")", ":", "\n", "\t", "if", "args", ".", "RunTest", "==", "1", ":", "\n", "\n", "# Create directory", "\n", "\t\t", "print", "(", "'========================= Running label efficient two-sample test =============================='", ")", "\n", "if", "args", ".", "qs", "!=", "'Passive'", ":", "\n", "\t\t\t", "QueryIndexPath", "=", "QueryLoadPath", "+", "'QueryIndex(ClsUncertaintyQuery)/%s/%s/RunDistri/InitTrainingSize%d/'", "%", "(", "args", ".", "qs", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "DistriPath", "=", "StatsPath", "+", "'FoundCutEdges(ClsUncertaintyQuery)/%s/%s/RunDistri/InitTrainingSize%d/'", "%", "(", "args", ".", "qs", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "DistriFigurePath", "=", "FigurePath", "+", "'StatsDistribution(ClsUncertaintyQuery)/%s/%s/InitTrainingSize%d/'", "%", "(", "args", ".", "qs", ",", "args", ".", "cls", ",", "args", ".", "InitSize", ")", "\n", "", "else", ":", "\n", "\t\t\t", "QueryIndexPath", "=", "QueryLoadPath", "+", "'QueryIndex(ClsUncertaintyQuery)/%s/RunDistri/'", "%", "(", "args", ".", "qs", ")", "\n", "DistriPath", "=", "StatsPath", "+", "'FoundCutEdges(ClsUncertaintyQuery)/%s/RunDistri/'", "%", "(", "args", ".", "qs", ")", "\n", "DistriFigurePath", "=", "FigurePath", "+", "'StatsDistribution(ClsUncertaintyQuery)/%s/'", "%", "(", "args", ".", "qs", ")", "\n", "\n", "", "Per", "=", "np", ".", "arange", "(", "args", ".", "Interval", ",", "args", ".", "Per", "+", "args", ".", "Interval", ",", "args", ".", "Interval", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "QueryIndexPath", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "QueryIndexPath", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "DistriPath", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "DistriPath", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "DistriFigurePath", ")", ":", "\n", "\t\t\t", "os", ".", "makedirs", "(", "DistriFigurePath", ")", "\n", "# Whether or not to load the saved query index  ", "\n", "\n", "", "if", "args", ".", "LoadQuery", "==", "1", "and", "os", ".", "path", ".", "isfile", "(", "QueryIndexPath", "+", "'QueryIndex%d.txt'", "%", "(", "args", ".", "Trial", ")", ")", ":", "\n", "\t\t\t", "with", "open", "(", "QueryIndexPath", "+", "'QueryIndex%d.txt'", "%", "(", "args", ".", "Trial", ")", ",", "'rb'", ")", "as", "fp", ":", "QueryIndex", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "print", "(", "'Load label query successfully!'", ")", "\n", "\n", "", "PemuCutEdgeNum", "=", "np", ".", "zeros", "(", "(", "2", ",", "len", "(", "Per", ")", ")", ")", ";", "\n", "\n", "# Extract features and labels ", "\n", "X", "=", "Data", "[", ":", ",", ":", "-", "1", "]", ";", "Y", "=", "Data", "[", ":", ",", "-", "1", "]", ";", "\n", "\n", "# Query label", "\n", "if", "not", "(", "args", ".", "LoadQuery", "==", "1", "and", "os", ".", "path", ".", "isfile", "(", "QueryIndexPath", "+", "'QueryIndex%d.txt'", "%", "(", "args", ".", "Trial", ")", ")", ")", ":", "\n", "# Bimodal query", "\n", "\t\t\t", "if", "args", ".", "qs", "==", "'Bimodal'", ":", "\n", "\t\t\t\t", "QueryIndex", "=", "GetActiveClassifier2", "(", "args", ",", "Data", ",", "HoldoutData", ")", "\n", "# Passive query", "\n", "", "elif", "args", ".", "qs", "==", "'Passive'", ":", "\n", "\t\t\t\t", "QueryIndex", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "Data", ")", ")", ";", "\n", "# Certainty query or uncertain query ", "\n", "", "elif", "(", "args", ".", "qs", "==", "'Certainty'", "or", "args", ".", "qs", "==", "'Uncertainty'", ")", ":", "\n", "\t\t\t\t", "QueryIndex", "=", "GetActiveClassifier", "(", "args", ",", "Data", ",", "HoldoutData", ")", "\n", "\n", "", "", "if", "not", "(", "args", ".", "LoadQuery", "==", "1", "and", "os", ".", "path", ".", "isfile", "(", "QueryIndexPath", "+", "'QueryIndex%d.txt'", "%", "(", "args", ".", "Trial", ")", ")", ")", ":", "\n", "\t\t\t", "with", "open", "(", "QueryIndexPath", "+", "'QueryIndex%d.txt'", "%", "(", "args", ".", "Trial", ")", ",", "'wb'", ")", "as", "rp", ":", "\n", "\t\t\t\t", "pickle", ".", "dump", "(", "QueryIndex", ",", "rp", ")", "\n", "\n", "", "", "print", "(", "'maximum query complexity: %d'", "%", "len", "(", "QueryIndex", ")", ")", "# temparory code", "\n", "if", "args", ".", "Plot_Stats", "==", "1", ":", "\n", "\t\t\t", "Per", "=", "np", ".", "arange", "(", "args", ".", "Interval", ",", "args", ".", "Per", "+", "args", ".", "Interval", ",", "args", ".", "Interval", ")", ";", "QueryIndex", "=", "np", ".", "int64", "(", "QueryIndex", ")", "\n", "\n", "# Obtain statistis at each proportion of query ", "\n", "for", "u", ",", "p", "in", "enumerate", "(", "Per", ")", ":", "\n", "# stop early for permutation test", "\n", "\t\t\t\t", "if", "p", ">", "args", ".", "BP", "and", "(", "args", ".", "TestType", "==", "'PermuFR'", "or", "args", ".", "TestType", "==", "'PermuChen'", "or", "args", ".", "TestType", "==", "'PermuHotelling'", ")", ":", "\n", "\t\t\t\t\t", "break", "\n", "", "SubX", "=", "X", "[", "np", ".", "sort", "(", "QueryIndex", "[", ":", "int", "(", "len", "(", "QueryIndex", ")", "*", "p", ")", "]", ")", "]", ";", "SubY", "=", "Y", "[", "np", ".", "sort", "(", "QueryIndex", "[", ":", "int", "(", "len", "(", "QueryIndex", ")", "*", "p", ")", "]", ")", "]", ";", "\n", "SubData", "=", "np", ".", "hstack", "(", "(", "SubX", ",", "SubY", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", ")", ")", ";", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "args", ".", "TestType", "==", "'Hotelling'", ":", "\n", "\t\t\t\t\t", "PemuCutEdgeNum", "[", "0", ",", "u", "]", ",", "PemuCutEdgeNum", "[", "1", ",", "u", "]", ",", "_", "=", "Hotelling", "(", "args", ",", "SubX", "[", "SubY", "==", "0", "]", ",", "SubX", "[", "SubY", "==", "1", "]", ")", ";", "end", "=", "time", ".", "time", "(", ")", "\n", "", "elif", "args", ".", "TestType", "==", "'Chen'", ":", "\n", "\t\t\t\t\t", "PemuCutEdgeNum", "[", "0", ",", "u", "]", ",", "PemuCutEdgeNum", "[", "1", ",", "u", "]", ",", "_", "=", "Chen", "(", "args", ",", "SubX", "[", "SubY", "==", "0", "]", ",", "SubX", "[", "SubY", "==", "1", "]", ",", "M", "=", "args", ".", "ChenM", ")", ";", "end", "=", "time", ".", "time", "(", ")", "\n", "", "elif", "args", ".", "TestType", "==", "'FR'", ":", "\n", "\t\t\t\t\t", "PemuCutEdgeNum", "[", "0", ",", "u", "]", ",", "PemuCutEdgeNum", "[", "1", ",", "u", "]", ",", "_", "=", "FR", "(", "args", ",", "SubX", "[", "SubY", "==", "0", "]", ",", "SubX", "[", "SubY", "==", "1", "]", ")", ";", "end", "=", "time", ".", "time", "(", ")", "\n", "", "elif", "args", ".", "TestType", "==", "'PermuChen'", ":", "\n", "\t\t\t\t\t", "PemuCutEdgeNum", "[", "0", ",", "u", "]", ",", "PemuCutEdgeNum", "[", "1", ",", "u", "]", "=", "PermuChen", "(", "args", ",", "SubX", ",", "SubY", ")", ";", "end", "=", "time", ".", "time", "(", ")", "\n", "", "elif", "args", ".", "TestType", "==", "'PermuHotelling'", ":", "\n", "\t\t\t\t\t", "PemuCutEdgeNum", "[", "0", ",", "u", "]", ",", "PemuCutEdgeNum", "[", "1", ",", "u", "]", "=", "PermuHotelling", "(", "args", ",", "SubX", ",", "SubY", ")", ";", "end", "=", "time", ".", "time", "(", ")", "\n", "", "elif", "args", ".", "TestType", "==", "'PermuFR'", ":", "\n", "\t\t\t\t\t", "PemuCutEdgeNum", "[", "0", ",", "u", "]", ",", "PemuCutEdgeNum", "[", "1", ",", "u", "]", "=", "PermuFR", "(", "args", ",", "SubX", ",", "SubY", ")", ";", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "print", "(", "'========== Test: %s, %.2f proportion, Reject:%d, Pvalue:%.8f, permutation trial %d, %.2fs elapsed =========='", "%", "(", "args", ".", "TestType", ",", "p", ",", "PemuCutEdgeNum", "[", "1", ",", "u", "]", ",", "PemuCutEdgeNum", "[", "0", ",", "u", "]", ",", "args", ".", "Trial", ",", "end", "-", "start", ")", ")", "\n", "\n", "", "np", ".", "save", "(", "DistriPath", "+", "'CutEdgeNumTrial%d.npy'", "%", "args", ".", "Trial", ",", "PemuCutEdgeNum", ")", "\n", "print", "(", "'========================= ploting statistic distribution =============================='", ")", "\n", "PlotStatsDistri2", "(", "args", ",", "DistriPath", ",", "DistriFigurePath", ",", "'ClsUncertaintyQuery'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Torch_Model.__init__": [[320, 328], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Torch_Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "W", ")", ":", "\n", "        ", "super", "(", "Torch_Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "W", "=", "W", "\n", "self", ".", "fcs", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "W", ",", "32", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "32", ",", "2", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Torch_Model.forward": [[330, 335], ["x.float", "ComputeStatistics.Torch_Model.view", "ComputeStatistics.Torch_Model.fcs"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "x", ".", "float", "(", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "self", ".", "W", ")", "\n", "out", "=", "self", ".", "fcs", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.GetPosterior": [[30, 60], ["numpy.zeros", "numpy.zeros", "numpy.diag", "numpy.diag", "scipy.stats.multivariate_normal.pdf", "scipy.stats.multivariate_normal.pdf", "numpy.mean", "numpy.ones", "KMeans().fit", "numpy.zeros", "numpy.zeros", "range", "numpy.mean", "numpy.ones", "len", "len", "range", "KMeans", "numpy.sum", "sum", "numpy.sum", "sum"], "function", ["None"], ["def", "GetPosterior", "(", "args", ",", "X", ",", "Y", ",", "cluster_num", "=", "16", ",", "option", "=", "'Emp'", ")", ":", "\n", "\t", "\"\"\"\n\tGet f-divergence. If data is synthetic, we use close-form posterior probability otherwise\n\twe use empirical probabilty.\n\t\"\"\"", "\n", "# closed form estimation", "\n", "if", "option", "==", "'Closed'", ":", "\n", "\t\t", "Mean0", "=", "np", ".", "zeros", "(", "args", ".", "FeatLen", ")", ";", "Mean1", "=", "np", ".", "zeros", "(", "args", ".", "FeatLen", ")", ";", "\n", "Mean0", "[", "0", "]", "=", "Mean0", "[", "0", "]", "-", "args", ".", "Sep", "/", "2", ";", "Mean1", "[", "0", "]", "=", "Mean1", "[", "0", "]", "+", "args", ".", "Sep", "/", "2", "\n", "Cov0", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "args", ".", "FeatLen", ")", ")", ";", "Cov1", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "args", ".", "FeatLen", ")", "+", "args", ".", "Del", ")", "\n", "\n", "P0", "=", "multivariate_normal", ".", "pdf", "(", "X", ",", "mean", "=", "Mean0", ",", "cov", "=", "Cov0", ")", ";", "\n", "P1", "=", "multivariate_normal", ".", "pdf", "(", "X", ",", "mean", "=", "Mean1", ",", "cov", "=", "Cov1", ")", ";", "\n", "\n", "Pos0", "=", "P0", "*", "0.5", "/", "(", "P0", "*", "0.5", "+", "P1", "*", "0.5", ")", "\n", "Pos1", "=", "P1", "*", "0.5", "/", "(", "P0", "*", "0.5", "+", "P1", "*", "0.5", ")", "\n", "# empirical estimation", "\n", "", "elif", "option", "==", "'Emp'", ":", "\n", "\t    ", "kmeans", "=", "KMeans", "(", "n_clusters", "=", "cluster_num", ",", "random_state", "=", "args", ".", "Trial", ")", ".", "fit", "(", "X", ")", ";", "Label", "=", "kmeans", ".", "labels_", "\n", "Pos0", "=", "np", ".", "zeros", "(", "len", "(", "X", ")", ")", ";", "Pos1", "=", "np", ".", "zeros", "(", "len", "(", "X", ")", ")", ";", "\n", "for", "i", "in", "range", "(", "cluster_num", ")", ":", "\n", "\t        ", "for", "j", "in", "range", "(", "2", ")", ":", "\n", "\t            ", "if", "j", "==", "0", ":", "\n", "\t            \t", "Pos0", "[", "Label", "==", "i", "]", "=", "np", ".", "sum", "(", "Y", "[", "Label", "==", "i", "]", "==", "j", ")", "/", "sum", "(", "Label", "==", "i", ")", "\n", "", "else", ":", "\n", "\t            \t", "Pos1", "[", "Label", "==", "i", "]", "=", "np", ".", "sum", "(", "Y", "[", "Label", "==", "i", "]", "==", "j", ")", "/", "sum", "(", "Label", "==", "i", ")", "\n", "\n", "", "", "", "", "R", "=", "2", "*", "np", ".", "mean", "(", "Pos0", ")", "*", "np", ".", "mean", "(", "Pos1", ")", "\n", "\n", "return", "Pos0", ",", "Pos1", ",", "R", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.MIStats": [[61, 82], ["ComputeStatistics.GetPosterior", "numpy.mean", "numpy.mean", "KMeans().fit", "len", "range", "range", "numpy.mean", "KMeans", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.GetPosterior"], ["", "def", "MIStats", "(", "args", ",", "X", ",", "Y", ",", "cluster_num", "=", "16", ")", ":", "\n", "    ", "\"\"\"\n    Mutual information calculation\n    StatsPath: str. Path to save\n    X: array. Features; Y: array. Labels\n    p: proportion of used queried labels\n    qs: str. query strategy\n    \"\"\"", "\n", "if", "args", ".", "DataType", "==", "'Syn'", ":", "\n", "    \t", "Pos0", ",", "Pos1", ",", "R", "=", "GetPosterior", "(", "args", ",", "X", ",", "Y", ")", ";", "u", "=", "np", ".", "mean", "(", "Pos0", ")", ";", "v", "=", "np", ".", "mean", "(", "Pos1", ")", "\n", "I", "=", "-", "(", "u", "*", "np", ".", "log", "(", "u", ")", "+", "v", "*", "np", ".", "log", "(", "v", ")", ")", "-", "(", "-", "np", ".", "mean", "(", "Pos0", "*", "np", ".", "log", "(", "Pos0", ")", "+", "Pos1", "*", "np", ".", "log", "(", "Pos1", ")", ")", ")", "\n", "", "else", ":", "\n", "\t    ", "kmeans", "=", "KMeans", "(", "n_clusters", "=", "cluster_num", ",", "random_state", "=", "args", ".", "Trial", ")", ".", "fit", "(", "X", ")", ";", "Label", "=", "kmeans", ".", "labels_", "\n", "N", "=", "len", "(", "X", ")", ";", "I", "=", "0", "\n", "for", "i", "in", "range", "(", "cluster_num", ")", ":", "\n", "\t        ", "for", "j", "in", "range", "(", "2", ")", ":", "\n", "\t            ", "p_xy", "=", "np", ".", "sum", "(", "Y", "[", "Label", "==", "i", "]", "==", "j", ")", "/", "N", ";", "p_x", "=", "np", ".", "sum", "(", "Label", "==", "i", ")", "/", "N", ";", "p_y", "=", "np", ".", "sum", "(", "Y", "==", "j", ")", "/", "N", "\n", "# print(p_xy, p_x, p_y)", "\n", "if", "p_xy", "!=", "0", ":", "\n", "\t                ", "I", "+=", "p_xy", "*", "np", ".", "log", "(", "p_xy", "/", "(", "p_x", "*", "p_y", ")", ")", "\n", "", "", "", "", "return", "I", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.FDStats2": [[84, 92], ["ComputeStatistics.FR", "numpy.sqrt", "len", "len"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.FR"], ["", "def", "FDStats2", "(", "args", ",", "X", ",", "Y", ")", ":", "\n", "\t", "\"\"\"\n\tnon-parametric method to compute F-divergence\n\t\"\"\"", "\n", "P", ",", "reject", ",", "S", "=", "FR", "(", "args", ",", "X", ",", "Y", ")", ";", "\n", "I", "=", "-", "S", "/", "np", ".", "sqrt", "(", "len", "(", "X", ")", "+", "len", "(", "Y", ")", ")", "\n", "\n", "return", "I", ",", "S", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Hotelling": [[93, 109], ["numpy.cov", "numpy.cov", "scipy.stats.f", "numpy.mean", "numpy.mean", "numpy.matmul", "scipy.stats.f.cdf", "numpy.matmul", "delta.transpose", "numpy.linalg.inv"], "function", ["None"], ["", "def", "Hotelling", "(", "arg", ",", "X", ",", "Y", ")", ":", "\n", "\t", "nx", ",", "p", "=", "X", ".", "shape", "\n", "ny", ",", "_", "=", "Y", ".", "shape", "\n", "delta", "=", "np", ".", "mean", "(", "X", ",", "axis", "=", "0", ")", "-", "np", ".", "mean", "(", "Y", ",", "axis", "=", "0", ")", "\n", "Sx", "=", "np", ".", "cov", "(", "X", ",", "rowvar", "=", "False", ")", "\n", "Sy", "=", "np", ".", "cov", "(", "Y", ",", "rowvar", "=", "False", ")", "\n", "S_pooled", "=", "(", "(", "nx", "-", "1", ")", "*", "Sx", "+", "(", "ny", "-", "1", ")", "*", "Sy", ")", "/", "(", "nx", "+", "ny", "-", "2", ")", "\n", "t_squared", "=", "(", "nx", "*", "ny", ")", "/", "(", "nx", "+", "ny", ")", "*", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "delta", ".", "transpose", "(", ")", ",", "np", ".", "linalg", ".", "inv", "(", "S_pooled", ")", ")", ",", "delta", ")", "\n", "statistic", "=", "t_squared", "*", "(", "nx", "+", "ny", "-", "p", "-", "1", ")", "/", "(", "p", "*", "(", "nx", "+", "ny", "-", "2", ")", ")", "\n", "F", "=", "f", "(", "p", ",", "nx", "+", "ny", "-", "p", "-", "1", ")", "\n", "pvalue", "=", "1", "-", "F", ".", "cdf", "(", "statistic", ")", "\n", "if", "pvalue", "<", "arg", ".", "alpha", ":", "\n", "\t\t", "reject", "=", "1", "\n", "", "else", ":", "\n", "\t\t", "reject", "=", "0", "\n", "", "return", "pvalue", ",", "reject", ",", "statistic", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.PermuPvalue": [[116, 136], ["plt.figure", "plt.gca", "plt.gca.hist", "numpy.hstack", "plt.close", "sum", "len", "sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["def", "PermuPvalue", "(", "args", ",", "PermuStats", ",", "side", "=", "'left'", ")", ":", "\n", "\t", "NullStats", "=", "PermuStats", "[", ":", "-", "1", "]", ";", "ObservedStats", "=", "PermuStats", "[", "-", "1", "]", "\n", "Fig", "=", "plt", ".", "figure", "(", ")", ";", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "T", "=", "ax", ".", "hist", "(", "NullStats", ",", "50", ",", "density", "=", "True", ",", "facecolor", "=", "'blue'", ")", ";", "\n", "p", "=", "T", "[", "0", "]", ";", "bins", "=", "T", "[", "1", "]", ";", "p2", "=", "np", ".", "hstack", "(", "(", "0", ",", "p", ")", ")", ";", "\n", "if", "side", "==", "'left'", ":", "\n", "\t\t", "binnum", "=", "sum", "(", "bins", "<=", "ObservedStats", ")", "\n", "", "elif", "side", "==", "'right'", ":", "\n", "\t\t", "binnum", "=", "sum", "(", "bins", ">=", "ObservedStats", ")", "\n", "\n", "", "if", "binnum", "==", "len", "(", "bins", ")", ":", "\n", "\t\t", "pvalue", "=", "1", "\n", "", "elif", "side", "==", "'left'", ":", "\n", "\t\t", "pvalue", "=", "np", ".", "sum", "(", "p2", "[", ":", "binnum", "+", "1", "]", "*", "(", "bins", "[", "-", "1", "]", "-", "bins", "[", "0", "]", ")", "/", "50", ")", ";", "\n", "", "elif", "side", "==", "'right'", ":", "\n", "\t \t", "pvalue", "=", "np", ".", "sum", "(", "p2", "[", "-", "binnum", ":", "]", "*", "(", "bins", "[", "-", "1", "]", "-", "bins", "[", "0", "]", ")", "/", "50", ")", ";", "\n", "\n", "", "reject", "=", "pvalue", "<=", "args", ".", "alpha", ";", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "return", "pvalue", ",", "reject", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.PermuHotelling": [[137, 148], ["numpy.zeros", "typer.echo", "ComputeStatistics.Hotelling", "ComputeStatistics.PermuPvalue", "typer.progressbar", "range", "numpy.random.permutation", "ComputeStatistics.Hotelling"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Hotelling", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.PermuPvalue", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Hotelling"], ["", "def", "PermuHotelling", "(", "args", ",", "X", ",", "Y", ")", ":", "\n", "\t", "PermuStats", "=", "np", ".", "zeros", "(", "args", ".", "PermuTrial", "+", "1", ")", ";", "total", "=", "0", "\n", "with", "typer", ".", "progressbar", "(", "range", "(", "args", ".", "PermuTrial", ")", ")", "as", "progress", ":", "\n", "\t\t", "for", "value", "in", "progress", ":", "\n", "\t\t\t", "PermutedY", "=", "np", ".", "random", ".", "permutation", "(", "Y", ")", ";", "\n", "_", ",", "_", ",", "PermuStats", "[", "total", "]", "=", "Hotelling", "(", "args", ",", "X", "[", "PermutedY", "==", "0", "]", ",", "X", "[", "PermutedY", "==", "1", "]", ")", "\n", "total", "+=", "1", "\n", "", "", "typer", ".", "echo", "(", "f\"Processed {total} permutation.\"", ")", "\n", "_", ",", "_", ",", "PermuStats", "[", "-", "1", "]", "=", "Hotelling", "(", "args", ",", "X", "[", "Y", "==", "0", "]", ",", "X", "[", "Y", "==", "1", "]", ")", "\n", "pvalue", ",", "reject", "=", "PermuPvalue", "(", "args", ",", "PermuStats", ",", "side", "=", "'right'", ")", "\n", "return", "pvalue", ",", "reject", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.FR": [[150, 200], ["multiprocessing.cpu_count", "numpy.hstack", "numpy.hstack", "numpy.vstack", "sklearn.metrics.pairwise_distances", "range", "scipy.sparse.csgraph.minimum_spanning_tree", "scipy.sparse.csgraph.minimum_spanning_tree.toarray", "range", "Tcsr.toarray.astype().astype", "len", "len", "range", "range", "scipy.stats.norm.cdf", "len", "scipy.sparse.csr_matrix", "len", "len", "range", "len", "numpy.sqrt", "numpy.zeros", "numpy.ones", "Tcsr.toarray.astype", "len", "numpy.where", "sum", "len", "len", "numpy.where"], "function", ["None"], ["", "def", "FR", "(", "arg", ",", "X", ",", "Y", ",", "show", "=", "True", ")", ":", "\n", "\t", "\"\"\"\n\tFridman Rafsky statstic\n\t\"\"\"", "\n", "\n", "\"\"\"\n\tConstruct minimum spanning tree\n\t\"\"\"", "\n", "NumCores", "=", "mp", ".", "cpu_count", "(", ")", ";", "\n", "Sample0", "=", "np", ".", "hstack", "(", "(", "X", ",", "np", ".", "zeros", "(", "(", "len", "(", "X", ")", ",", "1", ")", ")", ")", ")", ";", "Sample1", "=", "np", ".", "hstack", "(", "(", "Y", ",", "np", ".", "ones", "(", "(", "len", "(", "Y", ")", ",", "1", ")", ")", ")", ")", "\n", "Data", "=", "np", ".", "vstack", "(", "(", "Sample0", ",", "Sample1", ")", ")", ";", "GraphMatrix", "=", "pairwise_distances", "(", "Data", "[", ":", ",", ":", "-", "1", "]", ",", "n_jobs", "=", "NumCores", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "GraphMatrix", ")", ")", ":", "\n", "\t\t", "GraphMatrix", "[", "i", ",", ":", "i", "+", "1", "]", "=", "0", "\n", "", "Tcsr", "=", "minimum_spanning_tree", "(", "csr_matrix", "(", "GraphMatrix", ")", ")", "\n", "Tree", "=", "Tcsr", ".", "toarray", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "Tree", ")", ")", ":", "\n", "\t\t", "Tree", "[", "np", ".", "where", "(", "Tree", "[", "i", "]", "!=", "0", ")", ",", "i", "]", "=", "Tree", "[", "i", "]", "[", "np", ".", "where", "(", "Tree", "[", "i", "]", "!=", "0", ")", "]", "\n", "", "BaseG", "=", "Tree", ".", "astype", "(", "bool", ")", ".", "astype", "(", "int", ")", ";", "\n", "\n", "\"\"\"\n\tCut-edge count\n\t\"\"\"", "\n", "R", "=", "0", ";", "G", "=", "0", ";", "n", "=", "len", "(", "X", ")", ";", "m", "=", "len", "(", "Y", ")", ";", "N", "=", "m", "+", "n", ";", "\n", "for", "i", "in", "range", "(", "len", "(", "BaseG", ")", ")", ":", "\n", "\t\t", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "BaseG", ")", ")", ":", "\n", "\t\t\t", "if", "BaseG", "[", "i", ",", "j", "]", "==", "1", ":", "\n", "\t\t\t\t", "G", "+=", "1", "\n", "if", "Data", "[", "i", ",", "-", "1", "]", "!=", "Data", "[", "j", ",", "-", "1", "]", ":", "\n", "\t\t\t\t\t", "R", "+=", "1", "\n", "", "", "", "", "\"\"\"\n\tNumber of shared edges\n\t\"\"\"", "\n", "C", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "BaseG", ")", ")", ":", "\n", "\t\t", "C", "+=", "0.5", "*", "sum", "(", "BaseG", "[", "i", "]", "==", "1", ")", "**", "2", "\n", "", "C", "-=", "G", "\n", "\n", "E", "=", "2", "*", "m", "*", "n", "/", "N", "+", "1", ";", "\n", "Var", "=", "2", "*", "m", "*", "n", "/", "(", "N", "*", "(", "N", "-", "1", ")", ")", "*", "(", "(", "2", "*", "m", "*", "n", "-", "N", ")", "/", "N", "+", "(", "C", "-", "N", "+", "2", ")", "/", "(", "(", "N", "-", "2", ")", "*", "(", "N", "-", "3", ")", ")", "*", "(", "N", "*", "(", "N", "-", "1", ")", "-", "4", "*", "m", "*", "n", "+", "2", ")", ")", "\n", "S", "=", "(", "R", "-", "E", ")", "/", "np", ".", "sqrt", "(", "Var", ")", "\n", "\n", "\"\"\"\n\tP-value\n\t\"\"\"", "\n", "P", "=", "norm", ".", "cdf", "(", "S", ")", ";", "\n", "if", "P", "<", "arg", ".", "alpha", ":", "\n", "\t\t", "reject", "=", "1", "\n", "", "else", ":", "\n", "\t\t", "reject", "=", "0", "\n", "", "return", "P", ",", "reject", ",", "S", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.PermuFR": [[201, 212], ["numpy.zeros", "typer.echo", "ComputeStatistics.FR", "ComputeStatistics.PermuPvalue", "typer.progressbar", "range", "numpy.random.permutation", "ComputeStatistics.FR"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.FR", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.PermuPvalue", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.FR"], ["", "def", "PermuFR", "(", "args", ",", "X", ",", "Y", ")", ":", "\n", "\t", "PermuStats", "=", "np", ".", "zeros", "(", "args", ".", "PermuTrial", "+", "1", ")", ";", "total", "=", "0", "\n", "with", "typer", ".", "progressbar", "(", "range", "(", "args", ".", "PermuTrial", ")", ")", "as", "progress", ":", "\n", "\t\t", "for", "value", "in", "progress", ":", "\n", "\t\t\t", "PermutedY", "=", "np", ".", "random", ".", "permutation", "(", "Y", ")", ";", "\n", "_", ",", "_", ",", "PermuStats", "[", "total", "]", "=", "FR", "(", "args", ",", "X", "[", "PermutedY", "==", "0", "]", ",", "X", "[", "PermutedY", "==", "1", "]", ")", "\n", "total", "+=", "1", "\n", "", "", "typer", ".", "echo", "(", "f\"Processed {total} permutation.\"", ")", "\n", "_", ",", "_", ",", "PermuStats", "[", "-", "1", "]", "=", "FR", "(", "args", ",", "X", "[", "Y", "==", "0", "]", ",", "X", "[", "Y", "==", "1", "]", ")", "\n", "pvalue", ",", "reject", "=", "PermuPvalue", "(", "args", ",", "PermuStats", ",", "side", "=", "'left'", ")", "\n", "return", "pvalue", ",", "reject", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Chen": [[214, 283], ["multiprocessing.cpu_count", "numpy.hstack", "numpy.hstack", "numpy.vstack", "sklearn.metrics.pairwise_distances", "range", "range", "scipy.sparse.csgraph.minimum_spanning_tree", "scipy.sparse.csgraph.minimum_spanning_tree.toarray", "range", "Tcsr.toarray.astype().astype", "len", "len", "range", "range", "numpy.array().reshape", "numpy.linalg.inv", "np.array().reshape.reshape", "numpy.matmul", "len", "GraphMatrix[].argsort", "len", "scipy.sparse.csr_matrix", "len", "len", "range", "len", "numpy.array", "numpy.matmul", "numpy.zeros", "numpy.ones", "Tcsr.toarray.astype", "len", "numpy.array", "scipy.stats.chi2.cdf", "numpy.where", "sum", "len", "len", "numpy.where"], "function", ["None"], ["", "def", "Chen", "(", "arg", ",", "X", ",", "Y", ",", "M", "=", "1", ")", ":", "\n", "\t", "\"\"\"\n\tChen's statstic: from paper a new graph-based...\n\t\"\"\"", "\n", "\"\"\"\n\tConstruct minimum spanning tree\n\t\"\"\"", "\n", "\n", "NumCores", "=", "mp", ".", "cpu_count", "(", ")", ";", "\n", "Sample0", "=", "np", ".", "hstack", "(", "(", "X", ",", "np", ".", "zeros", "(", "(", "len", "(", "X", ")", ",", "1", ")", ")", ")", ")", ";", "Sample1", "=", "np", ".", "hstack", "(", "(", "Y", ",", "np", ".", "ones", "(", "(", "len", "(", "Y", ")", ",", "1", ")", ")", ")", ")", ";", "\n", "Data", "=", "np", ".", "vstack", "(", "(", "Sample0", ",", "Sample1", ")", ")", ";", "GraphMatrix", "=", "pairwise_distances", "(", "Data", "[", ":", ",", ":", "-", "1", "]", ",", "n_jobs", "=", "NumCores", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "GraphMatrix", ")", ")", ":", "\n", "\t\t", "Indx", "=", "GraphMatrix", "[", "i", "]", ".", "argsort", "(", ")", "\n", "GraphMatrix", "[", "i", ",", "Indx", "[", ":", "M", "]", "]", "=", "np", ".", "inf", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "GraphMatrix", ")", ")", ":", "\n", "\t\t", "GraphMatrix", "[", "i", ",", ":", "i", "+", "1", "]", "=", "0", "\n", "", "Tcsr", "=", "minimum_spanning_tree", "(", "csr_matrix", "(", "GraphMatrix", ")", ")", "\n", "Tree", "=", "Tcsr", ".", "toarray", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "Tree", ")", ")", ":", "\n", "\t\t", "Tree", "[", "np", ".", "where", "(", "Tree", "[", "i", "]", "!=", "0", ")", ",", "i", "]", "=", "Tree", "[", "i", "]", "[", "np", ".", "where", "(", "Tree", "[", "i", "]", "!=", "0", ")", "]", "\n", "", "BaseG", "=", "Tree", ".", "astype", "(", "bool", ")", ".", "astype", "(", "int", ")", ";", "\n", "\n", "\"\"\"\n\tEdge count\n\t\"\"\"", "\n", "R1", "=", "0", ";", "R2", "=", "0", ";", "G", "=", "0", ";", "n", "=", "len", "(", "X", ")", ";", "m", "=", "len", "(", "Y", ")", ";", "N", "=", "m", "+", "n", "\n", "for", "i", "in", "range", "(", "len", "(", "BaseG", ")", ")", ":", "\n", "\t\t", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "BaseG", ")", ")", ":", "\n", "\t\t\t", "if", "BaseG", "[", "i", ",", "j", "]", "==", "1", ":", "\n", "\t\t\t\t", "G", "+=", "1", "\n", "if", "Data", "[", "i", ",", "-", "1", "]", "==", "0", "and", "Data", "[", "j", ",", "-", "1", "]", "==", "0", ":", "\n", "\t\t\t\t\t", "R1", "+=", "1", ";", "\n", "", "elif", "Data", "[", "i", ",", "-", "1", "]", "==", "1", "and", "Data", "[", "j", ",", "-", "1", "]", "==", "1", ":", "\n", "\t\t\t\t\t", "R2", "+=", "1", "\n", "", "", "", "", "mu1", "=", "G", "*", "n", "*", "(", "n", "-", "1", ")", "/", "(", "N", "*", "(", "N", "-", "1", ")", ")", ";", "mu2", "=", "G", "*", "m", "*", "(", "m", "-", "1", ")", "/", "(", "N", "*", "(", "N", "-", "1", ")", ")", ";", "\n", "\n", "\"\"\"\n\tNumber of shared edges\n\t\"\"\"", "\n", "C", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "BaseG", ")", ")", ":", "\n", "\t\t", "C", "+=", "0.5", "*", "sum", "(", "BaseG", "[", "i", "]", "==", "1", ")", "**", "2", "\n", "# C-=G", "\n", "", "C", "-=", "(", "N", "-", "1", ")", "\n", "\"\"\"\n\tCovariance count\n\t\"\"\"", "\n", "Delta11", "=", "mu1", "*", "(", "1", "-", "mu1", ")", "+", "2", "*", "C", "*", "n", "*", "(", "n", "-", "1", ")", "*", "(", "n", "-", "2", ")", "/", "(", "N", "*", "(", "N", "-", "1", ")", "*", "(", "N", "-", "2", ")", ")", "+", "(", "G", "*", "(", "G", "-", "1", ")", "-", "2", "*", "C", ")", "*", "n", "*", "(", "n", "-", "1", ")", "*", "(", "n", "-", "2", ")", "*", "(", "n", "-", "3", ")", "/", "(", "N", "*", "(", "N", "-", "1", ")", "*", "(", "N", "-", "2", ")", "*", "(", "N", "-", "3", ")", ")", ";", "\n", "Delta22", "=", "mu2", "*", "(", "1", "-", "mu2", ")", "+", "2", "*", "C", "*", "m", "*", "(", "m", "-", "1", ")", "*", "(", "m", "-", "2", ")", "/", "(", "N", "*", "(", "N", "-", "1", ")", "*", "(", "N", "-", "2", ")", ")", "+", "(", "G", "*", "(", "G", "-", "1", ")", "-", "2", "*", "C", ")", "*", "m", "*", "(", "m", "-", "1", ")", "*", "(", "m", "-", "2", ")", "*", "(", "m", "-", "3", ")", "/", "(", "N", "*", "(", "N", "-", "1", ")", "*", "(", "N", "-", "2", ")", "*", "(", "N", "-", "3", ")", ")", ";", "\n", "Delta12", "=", "(", "G", "*", "(", "G", "-", "1", ")", "-", "2", "*", "C", ")", "*", "n", "*", "m", "*", "(", "n", "-", "1", ")", "*", "(", "m", "-", "1", ")", "/", "(", "N", "*", "(", "N", "-", "1", ")", "*", "(", "N", "-", "2", ")", "*", "(", "N", "-", "3", ")", ")", "-", "mu1", "*", "mu2", ";", "\n", "Delta21", "=", "Delta12", "\n", "\n", "A", "=", "np", ".", "array", "(", "(", "R1", "-", "mu1", ",", "R2", "-", "mu2", ")", ")", ".", "reshape", "(", "(", "1", ",", "2", ")", ")", ";", "\n", "B", "=", "np", ".", "linalg", ".", "inv", "(", "np", ".", "array", "(", "(", "(", "Delta11", ",", "Delta12", ")", ",", "(", "Delta21", ",", "Delta22", ")", ")", ")", ")", ";", "\n", "A2", "=", "A", ".", "reshape", "(", "(", "2", ",", "1", ")", ")", ";", "S", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "A", ",", "B", ")", ",", "A2", ")", ";", "\n", "\n", "\"\"\"\n\tP-value\n\t\"\"\"", "\n", "P", "=", "1", "-", "chi2", ".", "cdf", "(", "S", ",", "df", "=", "2", ")", "[", "0", ",", "0", "]", ";", "\n", "if", "P", "<", "arg", ".", "alpha", ":", "\n", "\t\t", "reject", "=", "1", "\n", "", "else", ":", "\n", "\t\t", "reject", "=", "0", "\n", "", "return", "P", ",", "reject", ",", "S", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.PermuChen": [[284, 295], ["numpy.zeros", "typer.echo", "ComputeStatistics.Chen", "ComputeStatistics.PermuPvalue", "typer.progressbar", "range", "numpy.random.permutation", "ComputeStatistics.Chen"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Chen", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.PermuPvalue", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Chen"], ["", "def", "PermuChen", "(", "args", ",", "X", ",", "Y", ")", ":", "\n", "\t", "PermuStats", "=", "np", ".", "zeros", "(", "args", ".", "PermuTrial", "+", "1", ")", ";", "total", "=", "0", "\n", "with", "typer", ".", "progressbar", "(", "range", "(", "args", ".", "PermuTrial", ")", ")", "as", "progress", ":", "\n", "\t\t", "for", "value", "in", "progress", ":", "\n", "\t\t\t", "PermutedY", "=", "np", ".", "random", ".", "permutation", "(", "Y", ")", ";", "\n", "_", ",", "_", ",", "PermuStats", "[", "total", "]", "=", "Chen", "(", "args", ",", "X", "[", "PermutedY", "==", "0", "]", ",", "X", "[", "PermutedY", "==", "1", "]", ",", "M", "=", "args", ".", "ChenM", ")", "\n", "total", "+=", "1", "\n", "", "", "typer", ".", "echo", "(", "f\"Processed {total} permutation.\"", ")", "\n", "_", ",", "_", ",", "PermuStats", "[", "-", "1", "]", "=", "Chen", "(", "args", ",", "X", "[", "Y", "==", "0", "]", ",", "X", "[", "Y", "==", "1", "]", ",", "M", "=", "args", ".", "ChenM", ")", "\n", "pvalue", ",", "reject", "=", "PermuPvalue", "(", "args", ",", "PermuStats", ",", "side", "=", "'right'", ")", "\n", "return", "pvalue", ",", "reject", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.GetPassiveClassifier": [[297, 318], ["sklearn.neighbors.KNeighborsClassifier", "BuildNN.fit", "BuildNN.predict_proba", "sklearn.linear_model.LogisticRegression().fit", "BuildNN.predict_proba", "sklearn.svm.NuSVC().fit", "sklearn.linear_model.LogisticRegression", "BuildNN.predict_proba", "sklearn.svm.SVC().fit", "sklearn.svm.NuSVC", "BuildNN.predict_proba", "ComputeStatistics.BuildNN", "BuildNN.fit", "sklearn.svm.SVC", "len", "BuildNN.predict_proba"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.BuildNN"], ["", "def", "GetPassiveClassifier", "(", "args", ",", "Trdata", ",", "TestFeat", ")", ":", "\n", "\t", "\"\"\"\n\tClassifier for passive learning\n\t\"\"\"", "\n", "X", "=", "Trdata", "[", ":", ",", ":", "-", "1", "]", ";", "Y", "=", "Trdata", "[", ":", ",", "-", "1", "]", "\n", "if", "args", ".", "cls", "==", "'knn'", ":", "\n", "\t\t", "Cls", "=", "KNeighborsClassifier", "(", "n_neighbors", "=", "5", ")", ";", "\n", "Cls", ".", "fit", "(", "X", ",", "Y", ")", ";", "Score", "=", "Cls", ".", "predict_proba", "(", "TestFeat", ")", "[", ":", ",", "-", "1", "]", "\n", "", "elif", "args", ".", "cls", "==", "'logistic'", ":", "\n", "\t\t", "Cls", "=", "LogisticRegression", "(", "random_state", "=", "args", ".", "Trial", ")", ".", "fit", "(", "X", ",", "Y", ")", "\n", "Score", "=", "Cls", ".", "predict_proba", "(", "TestFeat", ")", "[", ":", ",", "-", "1", "]", "\n", "", "elif", "args", ".", "cls", "==", "'NuSVC'", ":", "\n", "\t\t", "Cls", "=", "svm", ".", "NuSVC", "(", "gamma", "=", "'auto'", ",", "random_state", "=", "args", ".", "Trial", ")", ".", "fit", "(", "X", ",", "Y", ")", "\n", "Score", "=", "Cls", ".", "predict_proba", "(", "TestFeat", ")", "[", ":", ",", "-", "1", "]", "\n", "", "elif", "args", ".", "cls", "==", "'SVC'", ":", "\n", "\t\t", "Cls", "=", "SVC", "(", "gamma", "=", "'auto'", ",", "random_state", "=", "args", ".", "Trial", ",", "probability", "=", "True", ")", ".", "fit", "(", "X", ",", "Y", ")", "\n", "Score", "=", "Cls", ".", "predict_proba", "(", "TestFeat", ")", "[", ":", ",", "-", "1", "]", "\n", "", "elif", "args", ".", "cls", "==", "'NN'", ":", "\n", "\t\t", "Cls", "=", "BuildNN", "(", "len", "(", "X", ")", ")", ";", "Cls", ".", "fit", "(", "X", ",", "Y", ")", "\n", "Score", "=", "Cls", ".", "predict_proba", "(", "TestFeat", ")", "[", ":", ",", "-", "1", "]", "\n", "", "return", "Cls", ",", "Score", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.BuildNN": [[336, 349], ["skorch.NeuralNetClassifier", "torch.cuda.is_available", "ComputeStatistics.Torch_Model"], "function", ["None"], ["", "", "def", "BuildNN", "(", "W", "=", "20", ")", ":", "\n", "\t", "\"\"\"\n\tNeural network classifier\n\tW: int. Width of first layer\n\t\"\"\"", "\n", "device", "=", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", "\n", "Cls", "=", "NeuralNetClassifier", "(", "Torch_Model", "(", "W", ")", ",", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", ",", "\n", "optimizer", "=", "torch", ".", "optim", ".", "Adam", ",", "\n", "train_split", "=", "None", ",", "\n", "verbose", "=", "0", ",", "\n", "device", "=", "\"cpu\"", ")", "\n", "return", "Cls", "\n", "", "def", "Certainty", "(", "classifier", ",", "X_pool", ")", ":", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Certainty": [[349, 354], ["numpy.abs", "numpy.argmax", "classifier.predict_proba"], "function", ["None"], ["", "def", "Certainty", "(", "classifier", ",", "X_pool", ")", ":", "\n", "\n", "\t", "Prob", "=", "classifier", ".", "predict_proba", "(", "X_pool", ")", "[", ":", ",", "-", "1", "]", ";", "uncertainty", "=", "np", ".", "abs", "(", "Prob", "-", "0.5", ")", "\n", "query_idx", "=", "np", ".", "argmax", "(", "uncertainty", ")", "\n", "return", "query_idx", ",", "X_pool", "[", "query_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.Bimodal": [[356, 362], ["numpy.argmax", "numpy.argmin", "classifier.predict_proba"], "function", ["None"], ["", "def", "Bimodal", "(", "classifier", ",", "X_pool", ")", ":", "\n", "\n", "\t", "Prob", "=", "classifier", ".", "predict_proba", "(", "X_pool", ")", "[", ":", ",", "-", "1", "]", ";", "\n", "query_idx0", "=", "np", ".", "argmax", "(", "Prob", ")", ";", "query_idx1", "=", "np", ".", "argmin", "(", "Prob", ")", "\n", "query_idx", "=", "[", "query_idx0", ",", "query_idx1", "]", ";", "\n", "return", "query_idx", ",", "X_pool", "[", "query_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.GetActiveClassifier": [[364, 409], ["numpy.zeros", "numpy.copy", "numpy.arange", "numpy.zeros", "range", "len", "numpy.random.permutation", "numpy.delete", "numpy.delete", "sklearn.linear_model.LogisticRegression", "modAL.models.ActiveLearner", "len", "modAL.models.ActiveLearner.query", "len", "len", "sklearn.svm.SVC", "modAL.models.ActiveLearner", "X_pool[].reshape", "y_pool[].reshape", "numpy.delete", "numpy.delete", "ComputeStatistics.BuildNN", "torch.tensor().float", "torch.tensor().long", "torch.tensor().float", "torch.tensor().float", "torch.tensor().long", "len", "ComputeStatistics.BuildNN", "sklearn.calibration.CalibratedClassifierCV", "torch.tensor().float", "torch.tensor().long", "torch.tensor().float", "torch.tensor().float", "torch.tensor().long", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len", "sklearn.svm.SVC", "sklearn.calibration.CalibratedClassifierCV", "torch.tensor().long.reshape", "torch.tensor().long.reshape", "multiprocessing.cpu_count", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor().long.reshape", "torch.tensor().long.reshape", "multiprocessing.cpu_count"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.BuildNN", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.BuildNN"], ["", "def", "GetActiveClassifier", "(", "args", ",", "Trdata", ",", "HoldoutData", ")", ":", "\n", "\t", "\"\"\"\n\tClassifier for active learning\n\t\"\"\"", "\n", "QueryIndex", "=", "np", ".", "zeros", "(", "len", "(", "Trdata", ")", ")", ";", "PoolData", "=", "np", ".", "copy", "(", "Trdata", ")", ";", "\n", "\n", "X_pool", "=", "PoolData", "[", ":", ",", ":", "-", "1", "]", ";", "y_pool", "=", "PoolData", "[", ":", ",", "-", "1", "]", ";", "Per", "=", "np", ".", "arange", "(", "args", ".", "Interval", ",", "args", ".", "Per", "+", "args", ".", "Interval", ",", "args", ".", "Interval", ")", ";", "\n", "RandomIndex", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "Trdata", ")", ")", "[", ":", "args", ".", "InitSize", "]", ";", "InitTrX", "=", "X_pool", "[", "RandomIndex", "]", ";", "InitTrY", "=", "y_pool", "[", "RandomIndex", "]", ";", "\n", "QueryIndex", "[", ":", "args", ".", "InitSize", "]", "=", "RandomIndex", ";", "X_pool", ",", "y_pool", "=", "np", ".", "delete", "(", "X_pool", ",", "RandomIndex", ",", "axis", "=", "0", ")", ",", "np", ".", "delete", "(", "y_pool", ",", "RandomIndex", ")", "\n", "HoldoutFeat", "=", "HoldoutData", "[", ":", ",", ":", "-", "1", "]", "\n", "Score", "=", "np", ".", "zeros", "(", "len", "(", "Per", ")", "-", "1", ")", ";", "Count", "=", "0", "\n", "\n", "if", "args", ".", "cls", "==", "'logistic'", ":", "\n", "\t\t", "Cls", "=", "LogisticRegression", "(", "random_state", "=", "args", ".", "Trial", ")", "\n", "", "elif", "args", ".", "cls", "==", "'SVC'", ":", "\n", "\t\t", "Cls", "=", "SVC", "(", "gamma", "=", "'auto'", ",", "random_state", "=", "args", ".", "Trial", ",", "probability", "=", "True", ")", "\n", "", "elif", "args", ".", "cls", "==", "'NN'", ":", "\n", "\t\t", "Cls", "=", "BuildNN", "(", "len", "(", "X_pool", "[", "0", "]", ")", ")", ";", "\n", "X_pool", "=", "torch", ".", "tensor", "(", "X_pool", ")", ".", "float", "(", ")", ";", "y_pool", "=", "torch", ".", "tensor", "(", "y_pool", ".", "reshape", "(", "-", "1", ")", ")", ".", "long", "(", ")", ";", "\n", "HoldoutFeat", "=", "torch", ".", "tensor", "(", "HoldoutFeat", ")", ".", "float", "(", ")", ";", "\n", "InitTrX", "=", "torch", ".", "tensor", "(", "InitTrX", ")", ".", "float", "(", ")", ";", "InitTrY", "=", "torch", ".", "tensor", "(", "InitTrY", ".", "reshape", "(", "-", "1", ")", ")", ".", "long", "(", ")", "\n", "", "elif", "args", ".", "cls", "==", "'CaliNN'", ":", "\n", "\t\t", "Base_Cls", "=", "BuildNN", "(", "len", "(", "X_pool", "[", "0", "]", ")", ")", ";", "\n", "Cls", "=", "CalibratedClassifierCV", "(", "base_estimator", "=", "Base_Cls", ",", "n_jobs", "=", "mp", ".", "cpu_count", "(", ")", ",", "ensemble", "=", "False", ")", "\n", "X_pool", "=", "torch", ".", "tensor", "(", "X_pool", ")", ".", "float", "(", ")", ";", "y_pool", "=", "torch", ".", "tensor", "(", "y_pool", ".", "reshape", "(", "-", "1", ")", ")", ".", "long", "(", ")", ";", "\n", "HoldoutFeat", "=", "torch", ".", "tensor", "(", "HoldoutFeat", ")", ".", "float", "(", ")", ";", "\n", "InitTrX", "=", "torch", ".", "tensor", "(", "InitTrX", ")", ".", "float", "(", ")", ";", "InitTrY", "=", "torch", ".", "tensor", "(", "InitTrY", ".", "reshape", "(", "-", "1", ")", ")", ".", "long", "(", ")", "\n", "", "elif", "args", ".", "cls", "==", "'CaliSVC'", ":", "\n", "\t\t", "Base_Cls", "=", "SVC", "(", "random_state", "=", "args", ".", "Trial", ",", "gamma", "=", "'auto'", ",", "probability", "=", "True", ")", "\n", "Cls", "=", "CalibratedClassifierCV", "(", "base_estimator", "=", "Base_Cls", ",", "n_jobs", "=", "mp", ".", "cpu_count", "(", ")", ",", "ensemble", "=", "False", ")", ";", "\n", "# Choose certainty query or uncertainty query", "\n", "", "if", "args", ".", "qs", "==", "'Certainty'", ":", "\n", "\t\t", "learner", "=", "ActiveLearner", "(", "estimator", "=", "Cls", ",", "query_strategy", "=", "Certainty", ",", "X_training", "=", "InitTrX", ",", "y_training", "=", "InitTrY", ")", "\n", "", "elif", "args", ".", "qs", "==", "'Uncertainty'", ":", "\n", "\t\t", "learner", "=", "ActiveLearner", "(", "estimator", "=", "Cls", ",", "X_training", "=", "InitTrX", ",", "y_training", "=", "InitTrY", ")", "\n", "\n", "", "Count2", "=", "args", ".", "InitSize", ";", "\n", "for", "i", "in", "range", "(", "args", ".", "InitSize", ",", "len", "(", "Trdata", ")", ")", ":", "\n", "# active query", "\n", "\t\t", "query_index", ",", "query_instance", "=", "learner", ".", "query", "(", "X_pool", ")", ";", "\n", "Count2", "+=", "1", ";", "QueryIndex", "[", "i", "]", "=", "query_index", "\n", "X", ",", "y", "=", "X_pool", "[", "query_index", "]", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "y_pool", "[", "query_index", "]", ".", "reshape", "(", "1", ",", ")", "\n", "X_pool", ",", "y_pool", "=", "np", ".", "delete", "(", "X_pool", ",", "query_index", ",", "axis", "=", "0", ")", ",", "np", ".", "delete", "(", "y_pool", ",", "query_index", ")", "\n", "\n", "", "return", "QueryIndex", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.GetActiveClassifier2": [[410, 464], ["numpy.zeros", "numpy.copy", "numpy.arange", "modAL.models.ActiveLearner", "len", "numpy.random.permutation", "numpy.delete", "numpy.delete", "sklearn.linear_model.LogisticRegression", "len", "modAL.models.ActiveLearner.query", "len", "sklearn.svm.SVC", "len", "numpy.delete", "numpy.delete", "ComputeStatistics.BuildNN", "torch.tensor().float", "torch.tensor().long", "torch.tensor().float", "torch.tensor().float", "torch.tensor().long", "X_pool[].reshape", "y_pool[].reshape", "len", "ComputeStatistics.BuildNN", "sklearn.calibration.CalibratedClassifierCV", "torch.tensor().float", "torch.tensor().long", "torch.tensor().float", "torch.tensor().float", "torch.tensor().long", "X_pool[].reshape", "y_pool[].reshape", "query_index[].reshape", "y_pool[].reshape", "query_index[].reshape", "y_pool[].reshape", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len", "sklearn.svm.SVC", "sklearn.calibration.CalibratedClassifierCV", "torch.tensor().long.reshape", "torch.tensor().long.reshape", "multiprocessing.cpu_count", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor().long.reshape", "torch.tensor().long.reshape", "multiprocessing.cpu_count"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.BuildNN", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.Statsticscollection.ComputeStatistics.BuildNN"], ["", "def", "GetActiveClassifier2", "(", "args", ",", "Trdata", ",", "HoldoutData", ")", ":", "\n", "\t", "\"\"\"\n\tClassifier for active learning\n\t\"\"\"", "\n", "QueryIndex", "=", "np", ".", "zeros", "(", "len", "(", "Trdata", ")", ")", ";", "PoolData", "=", "np", ".", "copy", "(", "Trdata", ")", ";", "\n", "X_pool", "=", "PoolData", "[", ":", ",", ":", "-", "1", "]", ";", "y_pool", "=", "PoolData", "[", ":", ",", "-", "1", "]", ";", "Per", "=", "np", ".", "arange", "(", "args", ".", "Interval", ",", "args", ".", "Per", "+", "args", ".", "Interval", ",", "args", ".", "Interval", ")", ";", "\n", "HoldoutFeat", "=", "HoldoutData", "[", ":", ",", ":", "-", "1", "]", "\n", "RandomIndex", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "Trdata", ")", ")", "[", ":", "args", ".", "InitSize", "]", ";", "InitTrX", "=", "X_pool", "[", "RandomIndex", "]", ";", "InitTrY", "=", "y_pool", "[", "RandomIndex", "]", ";", "\n", "QueryIndex", "[", ":", "args", ".", "InitSize", "]", "=", "RandomIndex", ";", "X_pool", ",", "y_pool", "=", "np", ".", "delete", "(", "X_pool", ",", "RandomIndex", ",", "axis", "=", "0", ")", ",", "np", ".", "delete", "(", "y_pool", ",", "RandomIndex", ")", "\n", "Count", "=", "0", "\n", "\n", "if", "args", ".", "cls", "==", "'logistic'", ":", "\n", "\t\t", "Cls", "=", "LogisticRegression", "(", "random_state", "=", "args", ".", "Trial", ")", "\n", "", "elif", "args", ".", "cls", "==", "'SVC'", ":", "\n", "\t\t", "Cls", "=", "SVC", "(", "random_state", "=", "args", ".", "Trial", ",", "gamma", "=", "'auto'", ",", "probability", "=", "True", ")", "\n", "", "elif", "args", ".", "cls", "==", "'NN'", ":", "\n", "\t\t", "Cls", "=", "BuildNN", "(", "len", "(", "X_pool", "[", "0", "]", ")", ")", ";", "\n", "X_pool", "=", "torch", ".", "tensor", "(", "X_pool", ")", ".", "float", "(", ")", ";", "y_pool", "=", "torch", ".", "tensor", "(", "y_pool", ".", "reshape", "(", "-", "1", ")", ")", ".", "long", "(", ")", ";", "\n", "HoldoutFeat", "=", "torch", ".", "tensor", "(", "HoldoutFeat", ")", ".", "float", "(", ")", ";", "\n", "InitTrX", "=", "torch", ".", "tensor", "(", "InitTrX", ")", ".", "float", "(", ")", ";", "InitTrY", "=", "torch", ".", "tensor", "(", "InitTrY", ".", "reshape", "(", "-", "1", ")", ")", ".", "long", "(", ")", "\n", "", "elif", "args", ".", "cls", "==", "'CaliNN'", ":", "\n", "\t\t", "Base_Cls", "=", "BuildNN", "(", "len", "(", "X_pool", "[", "0", "]", ")", ")", ";", "\n", "Cls", "=", "CalibratedClassifierCV", "(", "base_estimator", "=", "Base_Cls", ",", "n_jobs", "=", "mp", ".", "cpu_count", "(", ")", ",", "ensemble", "=", "False", ")", ";", "\n", "X_pool", "=", "torch", ".", "tensor", "(", "X_pool", ")", ".", "float", "(", ")", ";", "y_pool", "=", "torch", ".", "tensor", "(", "y_pool", ".", "reshape", "(", "-", "1", ")", ")", ".", "long", "(", ")", ";", "\n", "HoldoutFeat", "=", "torch", ".", "tensor", "(", "HoldoutFeat", ")", ".", "float", "(", ")", ";", "\n", "InitTrX", "=", "torch", ".", "tensor", "(", "InitTrX", ")", ".", "float", "(", ")", ";", "InitTrY", "=", "torch", ".", "tensor", "(", "InitTrY", ".", "reshape", "(", "-", "1", ")", ")", ".", "long", "(", ")", "\n", "", "elif", "args", ".", "cls", "==", "'CaliSVC'", ":", "\n", "\t\t", "Base_Cls", "=", "SVC", "(", "random_state", "=", "args", ".", "Trial", ",", "gamma", "=", "'auto'", ",", "probability", "=", "True", ")", "\n", "Cls", "=", "CalibratedClassifierCV", "(", "base_estimator", "=", "Base_Cls", ",", "n_jobs", "=", "mp", ".", "cpu_count", "(", ")", ",", "ensemble", "=", "False", ")", ";", "\n", "\n", "\n", "", "learner", "=", "ActiveLearner", "(", "estimator", "=", "Cls", ",", "query_strategy", "=", "Bimodal", ",", "X_training", "=", "InitTrX", ",", "y_training", "=", "InitTrY", ")", "\n", "\n", "Count2", "=", "args", ".", "InitSize", ";", "\n", "\n", "while", "(", "len", "(", "y_pool", ")", ">", "0", ")", ":", "\n", "\t\t", "query_index", ",", "query_instance", "=", "learner", ".", "query", "(", "X_pool", ")", ";", "\n", "# print(Count2, len(X_pool))", "\n", "if", "len", "(", "query_index", ")", "==", "1", ":", "\n", "\t\t\t", "QueryIndex", "[", "Count2", "]", "=", "query_index", "[", "0", "]", ";", "Count2", "+=", "1", "\n", "X", ",", "y", "=", "X_pool", "[", "query_index", "[", "0", "]", "]", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "y_pool", "[", "query_index", "[", "0", "]", "]", ".", "reshape", "(", "1", ",", ")", ";", "\n", "", "else", ":", "\n", "\t\t\t", "if", "query_index", "[", "0", "]", "==", "query_index", "[", "1", "]", ":", "\n", "\t\t\t\t", "QueryIndex", "[", "Count2", "]", "=", "query_index", "[", "0", "]", ";", "Count2", "+=", "1", "\n", "X", ",", "y", "=", "X_pool", "[", "query_index", "[", "0", "]", "]", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "y_pool", "[", "query_index", "[", "0", "]", "]", ".", "reshape", "(", "1", ",", ")", ";", "\n", "", "else", ":", "\n", "\t\t\t\t", "QueryIndex", "[", "Count2", "]", "=", "query_index", "[", "0", "]", ";", "QueryIndex", "[", "Count2", "+", "1", "]", "=", "query_index", "[", "1", "]", ";", "\n", "Count2", "+=", "2", "\n", "X1", ",", "y1", "=", "query_index", "[", "0", "]", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "y_pool", "[", "query_index", "[", "0", "]", "]", ".", "reshape", "(", "1", ",", ")", ";", "\n", "X2", ",", "y2", "=", "query_index", "[", "1", "]", ".", "reshape", "(", "1", ",", "-", "1", ")", ",", "y_pool", "[", "query_index", "[", "1", "]", "]", ".", "reshape", "(", "1", ",", ")", ";", "\n", "\n", "", "", "X_pool", ",", "y_pool", "=", "np", ".", "delete", "(", "X_pool", ",", "query_index", ",", "axis", "=", "0", ")", ",", "np", ".", "delete", "(", "y_pool", ",", "query_index", ")", "\n", "\n", "", "return", "QueryIndex", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.CreateDataset.CreateADNI.main": [[7, 25], ["openpyxl.load_workbook", "numpy.zeros", "range", "numpy.save", "os.path.dirname", "os.getcwd", "numpy.array", "numpy.vstack", "np.array.reshape"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "\t", "\"\"\"\n\tR: AV45; V: CDRSB; W: ADAS11; X:ADAS13;  Z: MMSE; AA: RAVLT_immediate \n\t\"\"\"", "\n", "Path", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "getcwd", "(", ")", ")", "+", "'/Stats/ADNI/Data/'", ";", "\n", "ANDIwb", "=", "load_workbook", "(", "Path", "+", "'ADNIMERGE.xlsx'", ",", "data_only", "=", "True", ")", ";", "ANDIws", "=", "ANDIwb", "[", "'ADNIMERGE'", "]", "\n", "\n", "Data", "=", "np", ".", "zeros", "(", "(", "0", ",", "6", ")", ")", "\n", "for", "i", "in", "range", "(", "2", ",", "ANDIws", ".", "max_row", ")", ":", "\n", "\t\t", "if", "(", "ANDIws", "[", "'R%d'", "%", "i", "]", ".", "value", "!=", "None", "and", "ANDIws", "[", "'V%d'", "%", "i", "]", ".", "value", "!=", "None", "and", "\n", "ANDIws", "[", "'W%d'", "%", "i", "]", ".", "value", "!=", "None", "and", "ANDIws", "[", "'X%d'", "%", "i", "]", ".", "value", "!=", "None", "and", "\n", "ANDIws", "[", "'Z%d'", "%", "i", "]", ".", "value", "!=", "None", "and", "ANDIws", "[", "'AA%d'", "%", "i", "]", ".", "value", "!=", "None", ")", ":", "\n", "\t\t\t", "Data0", "=", "np", ".", "array", "(", "(", "ANDIws", "[", "'V%d'", "%", "i", "]", ".", "value", ",", "ANDIws", "[", "'W%d'", "%", "i", "]", ".", "value", ",", "\n", "ANDIws", "[", "'X%d'", "%", "i", "]", ".", "value", ",", "ANDIws", "[", "'Z%d'", "%", "i", "]", ".", "value", ",", "\n", "ANDIws", "[", "'AA%d'", "%", "i", "]", ".", "value", ",", "ANDIws", "[", "'R%d'", "%", "i", "]", ".", "value", ")", ")", "\n", "Data", "=", "np", ".", "vstack", "(", "(", "Data", ",", "Data0", ".", "reshape", "(", "(", "1", ",", "6", ")", ")", ")", ")", "\n", "\n", "", "", "np", ".", "save", "(", "Path", "+", "'Data.npy'", ",", "Data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.CreateDataset.Dataset.ClassifierEval": [[13, 46], ["numpy.zeros", "numpy.zeros", "numpy.diag", "numpy.diag", "scipy.stats.multivariate_normal.pdf", "scipy.stats.multivariate_normal.pdf", "os.path.isfile", "wb.create_sheet.cell", "Workbook.save", "numpy.ones", "numpy.corrcoef", "load_workbook", "Workbook", "Workbook.create_sheet", "numpy.ones", "Workbook.create_sheet"], "function", ["None"], ["def", "ClassifierEval", "(", "args", ",", "StatsPath", ",", "Score", ",", "X", ",", "p", ",", "qs", ")", ":", "\n", "    ", "\"\"\"\n    Mutual information calculation\n    StatsPath: str. Path to save\n    X: array. Features;\n    Score: class one posterial probability of classifier\n    p: proportion of used queried labels\n    qs: str. query strategy\n    \"\"\"", "\n", "Mean0", "=", "np", ".", "zeros", "(", "args", ".", "FeatLen", ")", ";", "Mean1", "=", "np", ".", "zeros", "(", "args", ".", "FeatLen", ")", ";", "\n", "Mean0", "[", "0", "]", "=", "Mean0", "[", "0", "]", "-", "args", ".", "Sep", "/", "2", ";", "Mean1", "[", "0", "]", "=", "Mean1", "[", "0", "]", "+", "args", ".", "Sep", "/", "2", "\n", "Cov0", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "args", ".", "FeatLen", ")", ")", ";", "Cov1", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "args", ".", "FeatLen", ")", "+", "args", ".", "Del", ")", "\n", "\n", "P0", "=", "multivariate_normal", ".", "pdf", "(", "X", ",", "mean", "=", "Mean0", ",", "cov", "=", "Cov0", ")", ";", "\n", "P1", "=", "multivariate_normal", ".", "pdf", "(", "X", ",", "mean", "=", "Mean1", ",", "cov", "=", "Cov1", ")", ";", "\n", "\n", "Pos0", "=", "P0", "*", "0.5", "/", "(", "P0", "*", "0.5", "+", "P0", "*", "0.5", ")", "\n", "Pos1", "=", "P1", "*", "0.5", "/", "(", "P0", "*", "0.5", "+", "P0", "*", "0.5", ")", "\n", "I", "=", "np", ".", "corrcoef", "(", "Score", ",", "Pos1", ")", "[", "0", ",", "1", "]", ";", "\n", "\n", "if", "os", ".", "path", ".", "isfile", "(", "StatsPath", "+", "'%s.xlsx'", "%", "qs", ")", ":", "\n", "        ", "wb", "=", "load_workbook", "(", "StatsPath", "+", "'%s.xlsx'", "%", "qs", ")", ";", "\n", "if", "not", "'corr'", "in", "wb", ".", "sheetnames", ":", "\n", "            ", "ws1", "=", "wb", ".", "create_sheet", "(", "\"corr\"", ")", "\n", "", "else", ":", "\n", "            ", "ws1", "=", "wb", "[", "\"corr\"", "]", "\n", "", "", "else", ":", "\n", "        ", "wb", "=", "Workbook", "(", ")", ";", "ws1", "=", "wb", ".", "create_sheet", "(", "\"corr\"", ")", ";", "\n", "", "Alphabet", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", "]", "\n", "ws1", ".", "cell", "(", "row", "=", "args", ".", "Trial", ",", "column", "=", "p", ",", "value", "=", "I", ")", "\n", "ws1", "[", "'%s%d'", "%", "(", "Alphabet", "[", "p", "-", "1", "]", ",", "args", ".", "Trial", "+", "1", ")", "]", "=", "'=AVERAGE(%s%d:%s%d)'", "%", "(", "Alphabet", "[", "p", "-", "1", "]", ",", "1", ",", "Alphabet", "[", "p", "-", "1", "]", ",", "args", ".", "Trial", ")", "\n", "wb", ".", "save", "(", "StatsPath", "+", "'%s.xlsx'", "%", "qs", ")", "\n", "return", "I", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.CreateDataset.Dataset.GetBER": [[47, 55], ["numpy.zeros", "scipy.stats.multivariate_normal.cdf"], "function", ["None"], ["", "def", "GetBER", "(", "args", ",", "Mean", ")", ":", "\n", "    ", "\"\"\"\n    numerically compute BER\n    Mean: center of the second component\n    \"\"\"", "\n", "X", "=", "np", ".", "zeros", "(", "args", ".", "FeatLen", ")", ";", "X", "[", "0", "]", "=", "0", ";", "X", "[", "1", ":", "]", "=", "np", ".", "inf", "\n", "BER", "=", "multivariate_normal", ".", "cdf", "(", "X", ",", "mean", "=", "Mean", ")", "\n", "return", "BER", "\n", "\n"]], "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.CreateDataset.Dataset.GetData": [[56, 143], ["numpy.zeros", "numpy.zeros", "numpy.diag", "numpy.diag", "Dataset.GetBER", "print", "int", "scipy.stats.multivariate_normal", "scipy.stats.multivariate_normal", "scipy.stats.multivariate_normal", "scipy.stats.multivariate_normal", "scipy.stats.multivariate_normal.rvs", "scipy.stats.multivariate_normal.rvs", "scipy.stats.multivariate_normal.rvs", "scipy.stats.multivariate_normal.rvs", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.random.RandomState().permutation", "numpy.random.RandomState().permutation", "numpy.ones", "os.getcwd", "os.path.exists", "os.makedirs", "DrawData", "print", "random.sample", "random.sample", "numpy.load", "numpy.load", "numpy.load", "numpy.random.RandomState().permutation", "numpy.load", "numpy.load", "numpy.load", "numpy.random.RandomState().permutation", "numpy.vstack", "numpy.vstack", "numpy.random.RandomState().permutation", "numpy.random.RandomState().permutation", "numpy.ones", "numpy.zeros", "numpy.zeros", "numpy.ones", "numpy.ones", "numpy.random.RandomState", "numpy.random.RandomState", "os.getcwd", "list", "list", "len", "len", "print", "list", "random.randint", "random.sample", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.vstack", "numpy.vstack", "numpy.random.RandomState().permutation", "numpy.random.RandomState().permutation", "numpy.arange", "numpy.arange", "numpy.random.RandomState", "numpy.int64", "numpy.int64", "numpy.random.RandomState", "numpy.int64", "numpy.int64", "numpy.random.RandomState", "numpy.random.RandomState", "os.getcwd", "itertools.permutations", "list", "print", "numpy.load", "numpy.random.RandomState().permutation", "numpy.random.RandomState().permutation", "numpy.vstack", "numpy.vstack", "numpy.random.RandomState().permutation", "numpy.random.RandomState().permutation", "numpy.arange", "numpy.arange", "numpy.random.RandomState", "numpy.random.RandomState", "os.getcwd", "len", "len", "numpy.random.RandomState", "numpy.random.RandomState", "numpy.int64", "numpy.int64", "numpy.int64", "numpy.int64", "numpy.random.RandomState", "numpy.random.RandomState", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.CreateDataset.Dataset.GetBER", "home.repos.pwc.inspect_result.wayne0908_Label-Efficient-Two-Sample.None.Utility.DrawData"], ["", "def", "GetData", "(", "Args", ")", ":", "\n", "    ", "if", "Args", ".", "DataType", "==", "'Syn'", ":", "\n", "        ", "Mean0", "=", "np", ".", "zeros", "(", "Args", ".", "FeatLen", ")", ";", "Mean1", "=", "np", ".", "zeros", "(", "Args", ".", "FeatLen", ")", ";", "\n", "Mean0", "[", "0", "]", "=", "Mean0", "[", "0", "]", "-", "Args", ".", "Sep", "/", "2", ";", "Mean1", "[", "0", "]", "=", "Mean1", "[", "0", "]", "+", "Args", ".", "Sep", "/", "2", "\n", "Cov0", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "Args", ".", "FeatLen", ")", ")", ";", "Cov1", "=", "np", ".", "diag", "(", "np", ".", "ones", "(", "Args", ".", "FeatLen", ")", "+", "Args", ".", "Del", ")", "\n", "BER", "=", "GetBER", "(", "Args", ",", "Mean1", ")", "# numerically compute BER", "\n", "print", "(", "'Creating synthetic dataset of two component gaussian. Sample Size: %d, Speration:%.2f, Delta:%2f, Dimension: %d, BER:%.2f'", "%", "(", "Args", ".", "S", ",", "Args", ".", "Sep", ",", "Args", ".", "Del", ",", "Args", ".", "FeatLen", ",", "BER", ")", ")", "\n", "StatsPath", "=", "os", ".", "getcwd", "(", ")", "+", "'/Stats/%s/Data/D%d/Sep%.2f/Delta%.2f/Size%d/'", "%", "(", "Args", ".", "DataType", ",", "Args", ".", "FeatLen", ",", "Args", ".", "Sep", ",", "Args", ".", "Del", ",", "Args", ".", "S", ")", "\n", "\n", "S1", "=", "int", "(", "Args", ".", "S", "/", "2", ")", ";", "\n", "mn0", "=", "multivariate_normal", "(", "Mean0", ",", "Cov0", ")", ";", "\n", "mn1", "=", "multivariate_normal", "(", "Mean1", ",", "Cov1", ")", ";", "\n", "trmn0", "=", "multivariate_normal", "(", "Mean0", ",", "Cov0", ")", ";", "\n", "trmn1", "=", "multivariate_normal", "(", "Mean1", ",", "Cov1", ")", ";", "\n", "Feat0", "=", "mn0", ".", "rvs", "(", "size", "=", "S1", ",", "random_state", "=", "Args", ".", "Trial", ")", ";", "Feat1", "=", "mn1", ".", "rvs", "(", "size", "=", "S1", ",", "random_state", "=", "Args", ".", "Trial", "+", "1", ")", "\n", "TrFeat0", "=", "trmn0", ".", "rvs", "(", "size", "=", "S1", ",", "random_state", "=", "Args", ".", "Trial", "+", "2", ")", ";", "TrFeat1", "=", "trmn1", ".", "rvs", "(", "size", "=", "S1", ",", "random_state", "=", "Args", ".", "Trial", "+", "3", ")", "\n", "\n", "Data0", "=", "np", ".", "concatenate", "(", "(", "Feat0", ",", "np", ".", "zeros", "(", "(", "S1", ",", "1", ")", ")", ")", ",", "1", ")", ";", "TrData0", "=", "np", ".", "concatenate", "(", "(", "TrFeat0", ",", "np", ".", "zeros", "(", "(", "S1", ",", "1", ")", ")", ")", ",", "1", ")", "\n", "Data1", "=", "np", ".", "concatenate", "(", "(", "Feat1", ",", "np", ".", "ones", "(", "(", "S1", ",", "1", ")", ")", ")", ",", "1", ")", ";", "TrData1", "=", "np", ".", "concatenate", "(", "(", "TrFeat1", ",", "np", ".", "ones", "(", "(", "S1", ",", "1", ")", ")", ")", ",", "1", ")", "\n", "\n", "Data", "=", "np", ".", "concatenate", "(", "(", "Data0", ",", "Data1", ")", ",", "0", ")", ";", "TrData", "=", "np", ".", "concatenate", "(", "(", "TrData0", ",", "TrData1", ")", ",", "0", ")", ";", "\n", "Data", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "Data", ")", ";", "TrData", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "TrData", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "StatsPath", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "StatsPath", ")", "\n", "", "if", "Args", ".", "SaveData", ":", "\n", "# np.save(StatsPath + 'SynSep%.2fDel%.2fSize%d.npy'%(Args.Sep, Args.Del, Args.S), Data); ", "\n", "# np.save(StatsPath + 'TrSynSep%.2fDel%.2fSize%d.npy'%(Args.Sep, Args.Del, Args.S), TrData)", "\n", "            ", "DrawData", "(", "Args", ",", "TrData", ",", "BER", ")", "\n", "\n", "\n", "", "", "elif", "Args", ".", "DataType", "==", "'MNIST'", ":", "\n", "        ", "print", "(", "'loading %s dataset'", "%", "Args", ".", "DataType", ")", "\n", "StatsPath", "=", "os", ".", "getcwd", "(", ")", "+", "'/Stats/%s/Data/Feat1/'", "%", "(", "Args", ".", "DataType", ")", ";", "\n", "# perm = list(permutations(np.arange(10),2))", "\n", "# SampleX = np.load(StatsPath + 'MNISTl%dR0.npy'%perm[Args.Trial - 1][0]); SampleY = np.load(StatsPath + 'MNISTl%dR0.npy'%perm[Args.Trial-1][1]); ", "\n", "# SampleX[:, -1] = 0; SampleY[:, -1] = 1; ", "\n", "TwoDigitId", "=", "random", ".", "sample", "(", "list", "(", "np", ".", "arange", "(", "10", ")", ")", ",", "2", ")", ";", "TwoR", "=", "random", ".", "sample", "(", "list", "(", "np", ".", "arange", "(", "10", ")", ")", ",", "2", ")", "\n", "# SampleX = np.load(StatsPath + 'MNISTl%dR%d.npy'%(perm[(Args.Trial - 1)%90][0], Args.Trial/90)); SampleY = np.load(StatsPath + 'MNISTl%dR%d.npy'%(perm[(Args.Trial - 1)%90][0], Args.Trial/90 + 1));", "\n", "# SampleY2 = np.load(StatsPath + 'MNISTl%dR%d.npy'%(perm[(Args.Trial - 1)%90][1], Args.Trial/90 + 1)); QueryIndex = np.random.RandomState(Args.Trial-1).permutation(len(SampleY2))", "\n", "\n", "SampleX", "=", "np", ".", "load", "(", "StatsPath", "+", "'MNISTl%dR%d.npy'", "%", "(", "TwoDigitId", "[", "0", "]", ",", "TwoR", "[", "0", "]", ")", ")", ";", "SampleY", "=", "np", ".", "load", "(", "StatsPath", "+", "'MNISTl%dR%d.npy'", "%", "(", "TwoDigitId", "[", "0", "]", ",", "(", "TwoR", "[", "0", "]", "+", "1", ")", "%", "10", ")", ")", ";", "\n", "SampleY2", "=", "np", ".", "load", "(", "StatsPath", "+", "'MNISTl%dR%d.npy'", "%", "(", "TwoDigitId", "[", "1", "]", ",", "TwoR", "[", "0", "]", ")", ")", ";", "QueryIndex", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "len", "(", "SampleY2", ")", ")", "\n", "SampleY", "[", "np", ".", "int64", "(", "QueryIndex", "[", ":", "300", "]", ")", "]", "=", "SampleY2", "[", "np", ".", "int64", "(", "QueryIndex", "[", ":", "300", "]", ")", "]", ";", "\n", "SampleX", "[", ":", ",", "-", "1", "]", "=", "0", ";", "SampleY", "[", ":", ",", "-", "1", "]", "=", "1", ";", "\n", "\n", "TrSampleX", "=", "np", ".", "load", "(", "StatsPath", "+", "'MNISTl%dR%d.npy'", "%", "(", "TwoDigitId", "[", "0", "]", ",", "(", "TwoR", "[", "0", "]", "+", "2", ")", "%", "10", ")", ")", ";", "TrSampleY", "=", "np", ".", "load", "(", "StatsPath", "+", "'MNISTl%dR%d.npy'", "%", "(", "TwoDigitId", "[", "0", "]", ",", "(", "TwoR", "[", "0", "]", "+", "3", ")", "%", "10", ")", ")", ";", "\n", "TrSampleY2", "=", "np", ".", "load", "(", "StatsPath", "+", "'MNISTl%dR%d.npy'", "%", "(", "TwoDigitId", "[", "1", "]", ",", "(", "TwoR", "[", "0", "]", "+", "1", ")", "%", "10", ")", ")", ";", "QueryIndex", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "len", "(", "TrSampleY2", ")", ")", "\n", "TrSampleY", "[", "np", ".", "int64", "(", "QueryIndex", "[", ":", "300", "]", ")", "]", "=", "TrSampleY2", "[", "np", ".", "int64", "(", "QueryIndex", "[", ":", "300", "]", ")", "]", "\n", "TrSampleX", "[", ":", ",", "-", "1", "]", "=", "0", ";", "TrSampleY", "[", ":", ",", "-", "1", "]", "=", "1", ";", "\n", "\n", "Data", "=", "np", ".", "vstack", "(", "(", "SampleX", ",", "SampleY", ")", ")", ";", "TrData", "=", "np", ".", "vstack", "(", "(", "TrSampleX", ",", "TrSampleY", ")", ")", ";", "\n", "Data", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "Data", ")", ";", "TrData", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "TrData", ")", "\n", "\n", "", "elif", "Args", ".", "DataType", "==", "'MNISTNull'", ":", "\n", "\n", "        ", "print", "(", "'loading %s dataset'", "%", "Args", ".", "DataType", ")", "\n", "StatsPath", "=", "os", ".", "getcwd", "(", ")", "+", "'/Stats/MNIST/Data/Feat1/'", ";", "perm", "=", "list", "(", "permutations", "(", "np", ".", "arange", "(", "10", ")", ",", "2", ")", ")", "\n", "# SampleX = np.load(StatsPath + 'MNISTl%dR0.npy'%perm[Args.Trial - 1][0]); SampleY = np.load(StatsPath + 'MNISTl%dR0.npy'%perm[Args.Trial-1][1]); ", "\n", "# SampleX[:, -1] = 0; SampleY[:, -1] = 1; ", "\n", "# DigitId = (Args.Trial - 1)/10; R = (Args.Trial - 1) % 10", "\n", "# SampleX = np.load(StatsPath + 'MNISTl%dR%d.npy'%(int(DigitId), int(perm[R][0]))); SampleY = np.load(StatsPath + 'MNISTl%dR%d.npy'%(int(DigitId), int(perm[R][1]))); ", "\n", "\n", "DigitId", "=", "random", ".", "randint", "(", "0", ",", "9", ")", ";", "TwoR", "=", "random", ".", "sample", "(", "list", "(", "np", ".", "arange", "(", "10", ")", ")", ",", "2", ")", "\n", "SampleX", "=", "np", ".", "load", "(", "StatsPath", "+", "'MNISTl%dR%d.npy'", "%", "(", "int", "(", "DigitId", ")", ",", "int", "(", "TwoR", "[", "0", "]", ")", ")", ")", ";", "SampleY", "=", "np", ".", "load", "(", "StatsPath", "+", "'MNISTl%dR%d.npy'", "%", "(", "int", "(", "DigitId", ")", ",", "int", "(", "TwoR", "[", "1", "]", ")", ")", ")", ";", "\n", "SampleX", "[", ":", ",", "-", "1", "]", "=", "0", ";", "SampleY", "[", ":", ",", "-", "1", "]", "=", "1", ";", "\n", "\n", "TrSampleX", "=", "np", ".", "load", "(", "StatsPath", "+", "'MNISTl%dR%d.npy'", "%", "(", "int", "(", "DigitId", ")", ",", "int", "(", "TwoR", "[", "0", "]", "+", "1", ")", "%", "10", ")", ")", ";", "TrSampleY", "=", "np", ".", "load", "(", "StatsPath", "+", "'MNISTl%dR%d.npy'", "%", "(", "int", "(", "DigitId", ")", ",", "int", "(", "TwoR", "[", "1", "]", "+", "1", ")", "%", "10", ")", ")", ";", "\n", "TrSampleX", "[", ":", ",", "-", "1", "]", "=", "0", ";", "TrSampleY", "[", ":", ",", "-", "1", "]", "=", "1", ";", "\n", "\n", "Data", "=", "np", ".", "vstack", "(", "(", "SampleX", ",", "SampleY", ")", ")", ";", "TrData", "=", "np", ".", "vstack", "(", "(", "TrSampleX", ",", "TrSampleY", ")", ")", ";", "\n", "Data", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "Data", ")", ";", "TrData", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "TrData", ")", "\n", "\n", "", "elif", "Args", ".", "DataType", "==", "'ADNI'", ":", "\n", "        ", "print", "(", "'loading %s dataset'", "%", "Args", ".", "DataType", ")", "\n", "StatsPath", "=", "os", ".", "getcwd", "(", ")", "+", "'/Stats/%s/Data/'", "%", "(", "Args", ".", "DataType", ")", ";", "Data", "=", "np", ".", "load", "(", "StatsPath", "+", "'NomalizedData.npy'", ")", "\n", "Data0", "=", "Data", "[", "Data", "[", ":", ",", "-", "1", "]", "==", "0", "]", ";", "Data1", "=", "Data", "[", "Data", "[", ":", ",", "-", "1", "]", "==", "1", "]", ";", "\n", "QueryIndex0", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "len", "(", "Data0", ")", ")", "\n", "QueryIndex1", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "len", "(", "Data1", ")", ")", "\n", "\n", "\n", "TrSample0", "=", "Data0", "[", "np", ".", "int64", "(", "QueryIndex0", "[", ":", "750", "]", ")", "]", ";", "TrSample1", "=", "Data1", "[", "np", ".", "int64", "(", "QueryIndex1", "[", ":", "250", "]", ")", "]", ";", "\n", "Sample0", "=", "Data0", "[", "np", ".", "int64", "(", "QueryIndex0", "[", "750", ":", "]", ")", "]", ";", "Sample1", "=", "Data1", "[", "np", ".", "int64", "(", "QueryIndex1", "[", "250", ":", "500", "]", ")", "]", ";", "\n", "\n", "Data", "=", "np", ".", "vstack", "(", "(", "Sample0", ",", "Sample1", ")", ")", ";", "TrData", "=", "np", ".", "vstack", "(", "(", "TrSample0", ",", "TrSample1", ")", ")", ";", "\n", "Data", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "Data", ")", ";", "TrData", "=", "np", ".", "random", ".", "RandomState", "(", "Args", ".", "Trial", "-", "1", ")", ".", "permutation", "(", "TrData", ")", "\n", "", "return", "Data", ",", "TrData", "", "", ""]]}