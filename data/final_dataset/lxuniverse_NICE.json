{"home.repos.pwc.inspect_result.lxuniverse_NICE.None.main.main": [[11, 85], ["torch.device", "torch.device", "torch.device", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "util.nice_func.NICE().to", "NICE().to.cnn.load_state_dict", "NICE().to.cnn.parameters", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.StepLR", "range", "torch.save", "torch.save", "torch.save", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torch.load", "torch.load", "torch.load", "NICE().to.parameters", "NICE().to.train", "enumerate", "lrsch.StepLR.step", "NICE().to.eval", "len", "print", "os.path.exists", "os.makedirs", "NICE().to.state_dict", "util.nice_func.NICE", "xb.to", "yb.to", "NICE().to.", "torch.nn.functional.nll_loss", "torch.mean", "torch.mean", "torch.mean", "torch.optim.Adam.zero_grad", "loss.backward", "torch.optim.Adam.step", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "NICE().to.", "torch.nn.functional.nll_loss().item", "output.argmax", "output.argmax.eq().sum().item", "len", "loss.item", "F.nll_loss.item", "data.to", "target.to", "len", "torchvision.transforms.ToTensor", "torchvision.transforms.ToTensor", "torch.mean.item", "torch.nn.functional.nll_loss", "output.argmax.eq().sum", "output.argmax.eq", "target.view_as"], "function", ["None"], ["def", "main", "(", "args", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "\"cuda\"", ")", "\n", "r", "=", "args", ".", "r", "\n", "\n", "# load data", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "MNIST", "(", "'../data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "100", ",", "shuffle", "=", "True", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "MNIST", "(", "'../data'", ",", "train", "=", "False", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "100", ",", "shuffle", "=", "True", ")", "\n", "\n", "# creat NICE model", "\n", "model", "=", "NICE", "(", ")", ".", "to", "(", "device", ")", "\n", "model", ".", "cnn", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'pretrained_model/model.pth'", ")", ")", "\n", "\n", "# freeze target model", "\n", "for", "p", "in", "model", ".", "cnn", ".", "parameters", "(", ")", ":", "\n", "        ", "p", ".", "requires_grad", "=", "False", "\n", "\n", "# optimizer", "\n", "", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "0.001", ")", "\n", "scheduler", "=", "lrsch", ".", "StepLR", "(", "optimizer", ",", "step_size", "=", "5", ",", "gamma", "=", "0.1", ")", "\n", "\n", "# Train the model", "\n", "for", "epoch", "in", "range", "(", "10", ")", ":", "\n", "\n", "        ", "model", ".", "train", "(", ")", "\n", "for", "batch_idx", ",", "(", "xb", ",", "yb", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "# Convert numpy arrays to torch tensors", "\n", "            ", "inputs", "=", "xb", ".", "to", "(", "device", ")", "\n", "targets", "=", "yb", ".", "to", "(", "device", ")", "\n", "\n", "# Forward pass", "\n", "outputs", ",", "z", ",", "loss2", "=", "model", "(", "inputs", ")", "\n", "\n", "loss1", "=", "F", ".", "nll_loss", "(", "outputs", ",", "targets", ")", "\n", "loss2", "=", "torch", ".", "mean", "(", "loss2", ")", "\n", "loss", "=", "loss1", "+", "r", "*", "loss2", "\n", "\n", "# Backward and optimize", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "", "scheduler", ".", "step", "(", ")", "\n", "if", "(", "epoch", "+", "1", ")", "%", "1", "==", "0", ":", "\n", "            ", "print", "(", "'Epoch [{}/{}], Loss: {:.4f}, Loss1: {:.4f}, Loss2: {:.4f}'", ".", "format", "(", "epoch", "+", "1", ",", "10", ",", "loss", ".", "item", "(", ")", ",", "\n", "loss1", ".", "item", "(", ")", ",", "loss2", ".", "item", "(", ")", "*", "r", ")", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "data", ",", "target", "in", "test_loader", ":", "\n", "                ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "output", ",", "_", ",", "_", "=", "model", "(", "data", ")", "\n", "test_loss", "+=", "F", ".", "nll_loss", "(", "output", ",", "target", ")", ".", "item", "(", ")", "# sum up batch loss", "\n", "pred", "=", "output", ".", "argmax", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# get the index of the max log-probability", "\n", "correct", "+=", "pred", ".", "eq", "(", "target", ".", "view_as", "(", "pred", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "", "test_loss", "/=", "len", "(", "test_loader", ".", "dataset", ")", "\n", "\n", "print", "(", "'\\nTest set: Average loss: {:.4f}, Accuracy: {}/{} ({:.0f}%)\\n'", ".", "format", "(", "\n", "test_loss", ",", "correct", ",", "len", "(", "test_loader", ".", "dataset", ")", ",", "\n", "100.", "*", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", ")", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'nice_model'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'nice_model'", ")", "\n", "", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "'nice_model/model_r_{}.pth'", ".", "format", "(", "r", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.compute_mask": [[11, 31], ["model.load_state_dict", "model.eval", "xo_ll.append", "z_ll.append", "torch.load", "torch.no_grad", "numpy.vstack", "numpy.vstack", "model.saliency_l.evaluate", "xo_l.append", "z_l.append", "data.to", "target.to", "inputs.cpu().numpy", "model.saliency_l.evaluate.cpu().numpy", "inputs.cpu", "model.saliency_l.evaluate.cpu"], "function", ["home.repos.pwc.inspect_result.lxuniverse_NICE.util.nice_func.Generator.evaluate"], ["def", "compute_mask", "(", "model", ",", "test_loader", ")", ":", "\n", "    ", "xo_ll", "=", "[", "]", "\n", "z_ll", "=", "[", "]", "\n", "for", "r", "in", "[", "1", ",", "5", ",", "10", ",", "15", ",", "20", "]", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "'nice_model/model_r_{}.pth'", ".", "format", "(", "r", ")", ")", ")", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "xo_l", "=", "[", "]", "\n", "z_l", "=", "[", "]", "\n", "for", "data", ",", "target", "in", "test_loader", ":", "\n", "                ", "inputs", ",", "targets", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "z", "=", "model", ".", "saliency_l", ".", "evaluate", "(", "inputs", ")", "\n", "xo_l", ".", "append", "(", "inputs", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "z_l", ".", "append", "(", "z", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "xo", "=", "np", ".", "vstack", "(", "xo_l", ")", "\n", "z", "=", "np", ".", "vstack", "(", "z_l", ")", "\n", "", "xo_ll", ".", "append", "(", "xo", ")", "\n", "z_ll", ".", "append", "(", "z", ")", "\n", "", "return", "z_ll", ",", "xo_ll", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask": [[33, 35], ["None"], "function", ["None"], ["", "def", "get_mask", "(", "r_idx", ",", "im_idx", ",", "z_ll", ")", ":", "\n", "    ", "return", "z_ll", "[", "r_idx", "]", "[", "im_idx", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_xo": [[37, 39], ["None"], "function", ["None"], ["", "def", "get_xo", "(", "im_idx", ",", "xo_ll", ")", ":", "\n", "    ", "return", "xo_ll", "[", "0", "]", "[", "im_idx", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.plot2": [[41, 73], ["matplotlib.subplots", "axarr[].imshow", "axarr[].set_title", "axarr[].imshow", "axarr[].set_title", "axarr[].imshow", "axarr[].set_title", "axarr[].imshow", "axarr[].set_title", "axarr[].imshow", "axarr[].set_title", "axarr[].imshow", "axarr[].set_title", "axarr[].imshow", "axarr[].set_title", "axarr[].imshow", "axarr[].imshow", "axarr[].imshow", "axarr[].imshow", "axarr[].imshow", "f.savefig", "matplotlib.show", "visualize_explanation.get_xo", "visualize_explanation.get_mask", "visualize_explanation.get_mask", "visualize_explanation.get_mask", "visualize_explanation.get_mask", "visualize_explanation.get_mask", "visualize_explanation.get_xo", "visualize_explanation.get_mask", "visualize_explanation.get_mask", "visualize_explanation.get_mask", "visualize_explanation.get_mask", "visualize_explanation.get_mask", "axi.set_axis_off", "axarr.ravel"], "function", ["home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_xo", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_xo", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.get_mask"], ["", "def", "plot2", "(", "z_ll", ",", "xo_ll", ")", ":", "\n", "    ", "imid1", "=", "15", "\n", "imid2", "=", "110", "\n", "\n", "f", ",", "axarr", "=", "plt", ".", "subplots", "(", "2", ",", "6", ",", "figsize", "=", "(", "13", ",", "4", ")", ")", "\n", "\n", "axarr", "[", "0", ",", "0", "]", ".", "imshow", "(", "get_xo", "(", "imid1", ",", "xo_ll", ")", ",", "cmap", "=", "'gray'", ")", "\n", "axarr", "[", "0", ",", "0", "]", ".", "set_title", "(", "'Input'", ")", "\n", "axarr", "[", "0", ",", "1", "]", ".", "imshow", "(", "get_mask", "(", "0", ",", "imid1", ",", "z_ll", ")", ",", "cmap", "=", "'Reds'", ")", "\n", "axarr", "[", "0", ",", "1", "]", ".", "set_title", "(", "'Lambda = 1'", ")", "\n", "axarr", "[", "0", ",", "2", "]", ".", "imshow", "(", "get_mask", "(", "1", ",", "imid1", ",", "z_ll", ")", ",", "cmap", "=", "'Reds'", ")", "\n", "axarr", "[", "0", ",", "2", "]", ".", "set_title", "(", "'Lambda = 5'", ")", "\n", "axarr", "[", "0", ",", "3", "]", ".", "imshow", "(", "get_mask", "(", "2", ",", "imid1", ",", "z_ll", ")", ",", "cmap", "=", "'Reds'", ")", "\n", "axarr", "[", "0", ",", "3", "]", ".", "set_title", "(", "'Lambda = 10'", ")", "\n", "axarr", "[", "0", ",", "4", "]", ".", "imshow", "(", "get_mask", "(", "3", ",", "imid1", ",", "z_ll", ")", ",", "cmap", "=", "'Reds'", ")", "\n", "axarr", "[", "0", ",", "4", "]", ".", "set_title", "(", "'Lambda = 15'", ")", "\n", "axarr", "[", "0", ",", "5", "]", ".", "imshow", "(", "get_mask", "(", "4", ",", "imid1", ",", "z_ll", ")", ",", "cmap", "=", "'Reds'", ")", "\n", "axarr", "[", "0", ",", "5", "]", ".", "set_title", "(", "'Lambda = 20'", ")", "\n", "\n", "axarr", "[", "1", ",", "0", "]", ".", "imshow", "(", "get_xo", "(", "imid2", ",", "xo_ll", ")", ",", "cmap", "=", "'gray'", ")", "\n", "axarr", "[", "1", ",", "0", "]", ".", "set_title", "(", "'Input'", ")", "\n", "axarr", "[", "1", ",", "1", "]", ".", "imshow", "(", "get_mask", "(", "0", ",", "imid2", ",", "z_ll", ")", ",", "cmap", "=", "'Reds'", ")", "\n", "axarr", "[", "1", ",", "2", "]", ".", "imshow", "(", "get_mask", "(", "1", ",", "imid2", ",", "z_ll", ")", ",", "cmap", "=", "'Reds'", ")", "\n", "axarr", "[", "1", ",", "3", "]", ".", "imshow", "(", "get_mask", "(", "2", ",", "imid2", ",", "z_ll", ")", ",", "cmap", "=", "'Reds'", ")", "\n", "axarr", "[", "1", ",", "4", "]", ".", "imshow", "(", "get_mask", "(", "3", ",", "imid2", ",", "z_ll", ")", ",", "cmap", "=", "'Reds'", ")", "\n", "axarr", "[", "1", ",", "5", "]", ".", "imshow", "(", "get_mask", "(", "4", ",", "imid2", ",", "z_ll", ")", ",", "cmap", "=", "'Reds'", ")", "\n", "\n", "[", "axi", ".", "set_axis_off", "(", ")", "for", "axi", "in", "axarr", ".", "ravel", "(", ")", "]", "\n", "\n", "f", ".", "savefig", "(", "'vis/masks.png'", ",", "dpi", "=", "100", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.main": [[75, 91], ["util.nice_func.NICE().to", "torch.utils.data.DataLoader", "visualize_explanation.compute_mask", "visualize_explanation.plot2", "torchvision.datasets.MNIST", "os.path.exists", "os.makedirs", "util.nice_func.NICE", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor"], "function", ["home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.compute_mask", "home.repos.pwc.inspect_result.lxuniverse_NICE.None.visualize_explanation.plot2"], ["", "def", "main", "(", ")", ":", "\n", "    ", "model", "=", "NICE", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "MNIST", "(", "'../data'", ",", "train", "=", "False", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "#                        transforms.Normalize((0.1307,), (0.3081,))", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "100", ",", "shuffle", "=", "False", ")", "\n", "\n", "z_ll", ",", "xo_ll", "=", "compute_mask", "(", "model", ",", "test_loader", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'vis'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'vis'", ")", "\n", "\n", "", "plot2", "(", "z_ll", ",", "xo_ll", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.models.Net.__init__": [[6, 12], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.lxuniverse_NICE.util.nice_func.NICE.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "20", ",", "5", ",", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "20", ",", "50", ",", "5", ",", "1", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "4", "*", "4", "*", "50", ",", "500", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "500", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.models.Net.forward": [[13, 22], ["torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "models.Net.view", "torch.relu", "torch.relu", "models.Net.fc2", "torch.log_softmax", "torch.log_softmax", "models.Net.conv1", "models.Net.conv2", "models.Net.fc1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "2", ",", "2", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "2", ",", "2", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "4", "*", "4", "*", "50", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "fc1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.hc_func.hard_concrete.__init__": [[7, 15], ["torch.Sigmoid", "torch.Sigmoid", "torch.Hardtanh", "torch.Hardtanh", "numpy.log"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "eps", "=", "1e-20", "\n", "self", ".", "sig", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "hardtanh", "=", "nn", ".", "Hardtanh", "(", "0", ",", "1", ")", "\n", "self", ".", "gamma", "=", "-", "0.1", "\n", "self", ".", "zeta", "=", "1.1", "\n", "self", ".", "beta", "=", "0.66", "\n", "self", ".", "const1", "=", "self", ".", "beta", "*", "np", ".", "log", "(", "-", "self", ".", "gamma", "/", "self", ".", "zeta", "+", "self", ".", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.hc_func.hard_concrete.l0_train": [[16, 22], ["torch.rand().cuda", "torch.rand().cuda", "torch.rand().cuda", "torch.rand().cuda", "hc_func.hard_concrete.sig", "hc_func.hard_concrete.hardtanh", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "logAlpha.size", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "l0_train", "(", "self", ",", "logAlpha", ")", ":", "\n", "        ", "U", "=", "torch", ".", "rand", "(", "logAlpha", ".", "size", "(", ")", ")", ".", "cuda", "(", ")", "\n", "s", "=", "self", ".", "sig", "(", "(", "torch", ".", "log", "(", "U", "+", "self", ".", "eps", ")", "-", "torch", ".", "log", "(", "1", "-", "U", "+", "self", ".", "eps", ")", "+", "logAlpha", "+", "self", ".", "eps", ")", "/", "self", ".", "beta", ")", "\n", "s_bar", "=", "s", "*", "(", "self", ".", "zeta", "-", "self", ".", "gamma", ")", "+", "self", ".", "gamma", "\n", "mask", "=", "self", ".", "hardtanh", "(", "s_bar", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.hc_func.hard_concrete.l0_test": [[23, 28], ["hc_func.hard_concrete.sig", "hc_func.hard_concrete.hardtanh"], "methods", ["None"], ["", "def", "l0_test", "(", "self", ",", "logAlpha", ")", ":", "\n", "        ", "s", "=", "self", ".", "sig", "(", "logAlpha", ")", "\n", "s_bar", "=", "s", "*", "(", "self", ".", "zeta", "-", "self", ".", "gamma", ")", "+", "self", ".", "gamma", "\n", "mask", "=", "self", ".", "hardtanh", "(", "s_bar", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.hc_func.hard_concrete.get_loss2": [[29, 31], ["hc_func.hard_concrete.sig"], "methods", ["None"], ["", "def", "get_loss2", "(", "self", ",", "logAlpha", ")", ":", "\n", "        ", "return", "self", ".", "sig", "(", "logAlpha", "-", "self", ".", "const1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.nice_func.Generator.__init__": [[7, 12], ["torch.Module.__init__", "torch.Conv2d", "torch.Sigmoid", "hc_func.hard_concrete"], "methods", ["home.repos.pwc.inspect_result.lxuniverse_NICE.util.nice_func.NICE.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "sig", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "hc", "=", "hard_concrete", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.nice_func.Generator.forward": [[13, 18], ["nice_func.Generator.conv1", "nice_func.Generator.hc.l0_train", "nice_func.Generator.hc.get_loss2"], "methods", ["home.repos.pwc.inspect_result.lxuniverse_NICE.util.hc_func.hard_concrete.l0_train", "home.repos.pwc.inspect_result.lxuniverse_NICE.util.hc_func.hard_concrete.get_loss2"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "logAlpha", "=", "self", ".", "conv1", "(", "x", ")", "\n", "mask", "=", "self", ".", "hc", ".", "l0_train", "(", "logAlpha", ")", "\n", "loss2", "=", "self", ".", "hc", ".", "get_loss2", "(", "logAlpha", ")", "\n", "return", "mask", ",", "loss2", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.nice_func.Generator.evaluate": [[19, 23], ["nice_func.Generator.conv1", "nice_func.Generator.hc.l0_test"], "methods", ["home.repos.pwc.inspect_result.lxuniverse_NICE.util.hc_func.hard_concrete.l0_test"], ["", "def", "evaluate", "(", "self", ",", "x", ")", ":", "\n", "        ", "logAlpha", "=", "self", ".", "conv1", "(", "x", ")", "\n", "mask", "=", "self", ".", "hc", ".", "l0_test", "(", "logAlpha", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.nice_func.NICE.__init__": [[26, 30], ["torch.Module.__init__", "util.models.Net", "nice_func.Generator"], "methods", ["home.repos.pwc.inspect_result.lxuniverse_NICE.util.nice_func.NICE.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NICE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cnn", "=", "Net", "(", ")", "\n", "self", ".", "saliency_l", "=", "Generator", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lxuniverse_NICE.util.nice_func.NICE.forward": [[31, 36], ["nice_func.NICE.saliency_l", "nice_func.NICE.cnn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "z", ",", "loss2", "=", "self", ".", "saliency_l", "(", "x", ")", "\n", "rationale", "=", "x", "*", "z", "\n", "out", "=", "self", ".", "cnn", "(", "rationale", ")", "\n", "return", "out", ",", "z", ",", "loss2", "\n", "", "", ""]]}