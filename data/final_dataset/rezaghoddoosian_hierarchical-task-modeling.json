{"home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.__init__": [[8, 33], ["video_dataset.Dataset.read_breakfast_from_disk", "video_dataset.Dataset.train_test_idx", "video_dataset.Dataset.classwise_feature_mapping", "video_dataset.Dataset.dishwise_feature_mapping", "video_dataset.Dataset.get_dish_weights", "print", "print", "print", "utils.strlist2multihot", "utils.strlist2multihot"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.read_breakfast_from_disk", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.train_test_idx", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.classwise_feature_mapping", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.dishwise_feature_mapping", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.get_dish_weights", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.strlist2multihot", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.strlist2multihot"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "\n", "        ", "self", ".", "feature_type", "=", "args", ".", "feature_type", "\n", "self", ".", "split", "=", "args", ".", "split", "\n", "self", ".", "pca", "=", "True", "\n", "self", ".", "extended_attr", "=", "False", "\n", "if", "self", ".", "extended_attr", ":", "\n", "            ", "print", "(", "\"Attributes Extended\"", ")", "\n", "", "self", ".", "path_to_data", "=", "args", ".", "dataset_path", "\n", "self", ".", "read_breakfast_from_disk", "(", "self", ".", "path_to_data", ",", "pca_used", "=", "self", ".", "pca", ",", "feature_type", "=", "self", ".", "feature_type", ")", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "self", ".", "t_max", "=", "args", ".", "max_seqlen", "\n", "self", ".", "trainidx", "=", "[", "]", "\n", "self", ".", "testidx", "=", "[", "]", "\n", "self", ".", "classwiseidx", "=", "[", "]", "\n", "self", ".", "dishwiseidx", "=", "[", "]", "\n", "self", ".", "currenttestidx", "=", "0", "\n", "self", ".", "labels_multihot", "=", "[", "utils", ".", "strlist2multihot", "(", "labs", ",", "self", ".", "classlist", ")", "for", "labs", "in", "self", ".", "labels", "]", "\n", "self", ".", "dish_labels_onehot", "=", "[", "utils", ".", "strlist2multihot", "(", "labs", ",", "self", ".", "dish_classlist", ")", "for", "labs", "in", "self", ".", "dish_labels", "]", "\n", "self", ".", "train_test_idx", "(", ")", "\n", "self", ".", "classwise_feature_mapping", "(", ")", "\n", "self", ".", "dishwise_feature_mapping", "(", ")", "\n", "self", ".", "dish_W", "=", "self", ".", "get_dish_weights", "(", ")", "\n", "print", "(", "\" \"", ")", "\n", "print", "(", "\"Data Read!,Split : {} \"", ".", "format", "(", "self", ".", "split", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.read_breakfast_from_disk": [[36, 72], ["utils_folder.read_breakfast_dataset.Breakfast_Dataset", "print", "video_dataset.Dataset.filenames.append", "video_dataset.Dataset.frame_level_gt.append", "video_dataset.Dataset.features.append", "video_dataset.Dataset.labels.append", "video_dataset.Dataset.dish_labels.append", "video_dataset.Dataset.attribute_transcript.append", "video_dataset.Dataset.segment_interval.append", "numpy.transpose", "video_dataset.Dataset.features.append", "video_dataset.Dataset.labels.append", "video_dataset.Dataset.dish_labels.append", "video_dataset.Dataset.attribute_transcript.append", "video_dataset.Dataset.segment_interval.append", "numpy.concatenate", "numpy.transpose"], "methods", ["None"], ["", "def", "read_breakfast_from_disk", "(", "self", ",", "base_path", ",", "pca_used", "=", "False", ",", "feature_type", "=", "'i3d'", ")", ":", "\n", "        ", "self", ".", "filenames", "=", "[", "]", "\n", "self", ".", "features", "=", "[", "]", "\n", "self", ".", "labels", "=", "[", "]", "\n", "self", ".", "dish_labels", "=", "[", "]", "\n", "self", ".", "frame_level_gt", "=", "[", "]", "\n", "self", ".", "attribute_transcript", "=", "[", "]", "\n", "self", ".", "segment_interval", "=", "[", "]", "\n", "self", ".", "dish_index2label", "=", "{", "}", "\n", "breakfast_data", "=", "Breakfast_Dataset", "(", "base_path", ",", "self", ".", "split", ",", "self", ".", "extended_attr", ",", "pca_used", "=", "pca_used", ",", "feature_type", "=", "feature_type", ")", "\n", "self", ".", "index2label", "=", "breakfast_data", ".", "index2label", "\n", "self", ".", "num_attr", "=", "breakfast_data", ".", "nAttributes", "\n", "self", ".", "classlist", "=", "breakfast_data", ".", "attr_classlist", "\n", "self", ".", "dish_classlist", "=", "breakfast_data", ".", "dish_classlist", ";", "self", ".", "dish_index2label", "=", "self", ".", "dish_classlist", "\n", "self", ".", "subset", "=", "breakfast_data", ".", "subset", "\n", "self", ".", "num_dish", "=", "breakfast_data", ".", "nDishes", "\n", "for", "video", "in", "breakfast_data", ".", "final_annot", ":", "\n", "            ", "name", "=", "video", "[", "0", "]", "\n", "self", ".", "filenames", ".", "append", "(", "name", ")", "\n", "if", "self", ".", "feature_type", "==", "\"i3d\"", ":", "\n", "                ", "self", ".", "features", ".", "append", "(", "np", ".", "transpose", "(", "np", ".", "concatenate", "(", "[", "video", "[", "3", "]", ",", "video", "[", "4", "]", "]", ",", "axis", "=", "0", ")", ")", ")", "\n", "self", ".", "labels", ".", "append", "(", "video", "[", "5", "]", ")", "\n", "self", ".", "dish_labels", ".", "append", "(", "[", "video", "[", "6", "]", "]", ")", "\n", "self", ".", "attribute_transcript", ".", "append", "(", "video", "[", "7", "]", ")", "\n", "self", ".", "segment_interval", ".", "append", "(", "video", "[", "8", "]", ")", "\n", "", "elif", "self", ".", "feature_type", "==", "\"idt\"", ":", "\n", "                ", "self", ".", "features", ".", "append", "(", "np", ".", "transpose", "(", "video", "[", "3", "]", ")", ")", "\n", "self", ".", "labels", ".", "append", "(", "video", "[", "4", "]", ")", "\n", "self", ".", "dish_labels", ".", "append", "(", "[", "video", "[", "5", "]", "]", ")", "\n", "self", ".", "attribute_transcript", ".", "append", "(", "video", "[", "6", "]", ")", "\n", "self", ".", "segment_interval", ".", "append", "(", "video", "[", "7", "]", ")", "\n", "\n", "", "self", ".", "frame_level_gt", ".", "append", "(", "video", "[", "1", "]", ")", "\n", "\n", "", "self", ".", "feature_size", "=", "self", ".", "features", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "print", "(", "\"feature size is {}\"", ".", "format", "(", "self", ".", "feature_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.train_test_idx": [[75, 85], ["enumerate", "s.decode", "video_dataset.Dataset.trainidx.append", "video_dataset.Dataset.filenames_train.append", "s.decode", "video_dataset.Dataset.testidx.append", "video_dataset.Dataset.filenames_test.append"], "methods", ["None"], ["", "def", "train_test_idx", "(", "self", ")", ":", "\n", "        ", "self", ".", "filenames_train", "=", "[", "]", "\n", "self", ".", "filenames_test", "=", "[", "]", "\n", "for", "i", ",", "s", "in", "enumerate", "(", "self", ".", "subset", ")", ":", "\n", "            ", "if", "s", ".", "decode", "(", "'utf-8'", ")", "==", "'training'", ":", "\n", "                ", "self", ".", "trainidx", ".", "append", "(", "i", ")", "\n", "self", ".", "filenames_train", ".", "append", "(", "self", ".", "filenames", "[", "i", "]", ")", "\n", "", "elif", "s", ".", "decode", "(", "'utf-8'", ")", "==", "'test'", ":", "\n", "                ", "self", ".", "testidx", ".", "append", "(", "i", ")", "\n", "self", ".", "filenames_test", ".", "append", "(", "self", ".", "filenames", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.classwise_feature_mapping": [[88, 97], ["range", "len", "video_dataset.Dataset.classwiseidx.append", "idx.append"], "methods", ["None"], ["", "", "", "def", "classwise_feature_mapping", "(", "self", ")", ":", "\n", "        ", "for", "c", "in", "range", "(", "len", "(", "self", ".", "classlist", ")", ")", ":", "\n", "            ", "category", "=", "self", ".", "classlist", "[", "c", "]", "\n", "idx", "=", "[", "]", "\n", "for", "i", "in", "self", ".", "trainidx", ":", "\n", "                ", "for", "label", "in", "self", ".", "labels", "[", "i", "]", ":", "\n", "                    ", "if", "label", "==", "category", ":", "\n", "                        ", "idx", ".", "append", "(", "i", ")", ";", "break", ";", "\n", "", "", "", "self", ".", "classwiseidx", ".", "append", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.dishwise_feature_mapping": [[98, 107], ["range", "len", "video_dataset.Dataset.dishwiseidx.append", "idx.append"], "methods", ["None"], ["", "", "def", "dishwise_feature_mapping", "(", "self", ")", ":", "\n", "        ", "for", "d", "in", "range", "(", "len", "(", "self", ".", "dish_classlist", ")", ")", ":", "\n", "            ", "dish", "=", "self", ".", "dish_classlist", "[", "d", "]", "\n", "idx", "=", "[", "]", "\n", "for", "i", "in", "self", ".", "trainidx", ":", "\n", "                ", "for", "label", "in", "self", ".", "dish_labels", "[", "i", "]", ":", "\n", "                    ", "if", "label", "==", "dish", ":", "\n", "                        ", "idx", ".", "append", "(", "i", ")", ";", "break", ";", "\n", "", "", "", "self", ".", "dishwiseidx", ".", "append", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.get_dish_weights": [[109, 116], ["numpy.zeros", "numpy.sum", "len", "numpy.sum", "numpy.sum", "numpy.argmax"], "methods", ["None"], ["", "", "def", "get_dish_weights", "(", "self", ")", ":", "\n", "        ", "count", "=", "np", ".", "zeros", "(", "[", "self", ".", "num_dish", "]", ")", "\n", "for", "i", "in", "self", ".", "trainidx", ":", "\n", "            ", "count", "[", "np", ".", "argmax", "(", "self", ".", "dish_labels_onehot", "[", "i", "]", ")", "]", "+=", "1", "\n", "", "assert", "np", ".", "sum", "(", "count", ")", "==", "len", "(", "self", ".", "trainidx", ")", "\n", "dish_fact", "=", "np", ".", "sum", "(", "count", ")", "/", "count", "\n", "return", "dish_fact", "/", "np", ".", "sum", "(", "dish_fact", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.load_data": [[119, 159], ["numpy.ones", "range", "enumerate", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.random.choice", "idx.append", "labels.append", "len", "numpy.array", "len", "numpy.random.choice", "numpy.argmax", "numpy.unique", "utils.process_feat", "len", "len"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.process_feat"], ["", "def", "load_data", "(", "self", ",", "is_training", "=", "True", ",", "Wiftdf", "=", "None", ")", ":", "\n", "\n", "        ", "if", "is_training", "==", "True", ":", "\n", "            ", "idx", "=", "[", "]", "\n", "W", "=", "np", ".", "ones", "(", "[", "self", ".", "batch_size", ",", "self", ".", "num_attr", "]", ")", "\n", "labels", "=", "[", "]", "\n", "for", "r_id", "in", "range", "(", "self", ".", "batch_size", ")", ":", "\n", "                ", "rand_sampleid", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "trainidx", ")", ",", "size", "=", "1", ")", "\n", "while", "self", ".", "trainidx", "[", "rand_sampleid", "[", "0", "]", "]", "in", "idx", ":", "\n", "                    ", "rand_sampleid", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "trainidx", ")", ",", "size", "=", "1", ")", "\n", "", "r", "=", "rand_sampleid", "[", "0", "]", "\n", "idx", ".", "append", "(", "self", ".", "trainidx", "[", "r", "]", ")", "\n", "labels", ".", "append", "(", "np", ".", "argmax", "(", "self", ".", "dish_labels_onehot", "[", "self", ".", "trainidx", "[", "r", "]", "]", ")", ")", "\n", "\n", "", "assert", "len", "(", "np", ".", "unique", "(", "idx", ")", ")", "==", "self", ".", "batch_size", ",", "\"all videos should be unique in one batch\"", "\n", "# weights for the cross entropy loss based on the tf*idf weights", "\n", "for", "j", ",", "i", "in", "enumerate", "(", "idx", ")", ":", "\n", "                ", "W", "[", "j", ",", ":", "]", "=", "Wiftdf", "[", "self", ".", "filenames", "[", "i", "]", "]", "\n", "\n", "\n", "\n", "", "feat", "=", "np", ".", "array", "(", "[", "utils", ".", "process_feat", "(", "self", ".", "features", "[", "i", "]", ",", "self", ".", "t_max", ")", "for", "i", "in", "idx", "]", ")", "\n", "lab", "=", "np", ".", "array", "(", "[", "self", ".", "labels_multihot", "[", "i", "]", "for", "i", "in", "idx", "]", ")", "\n", "d_lab", "=", "np", ".", "array", "(", "[", "self", ".", "dish_labels_onehot", "[", "i", "]", "for", "i", "in", "idx", "]", ")", "\n", "names", "=", "np", ".", "array", "(", "[", "self", ".", "filenames", "[", "i", "]", "for", "i", "in", "idx", "]", ")", "\n", "\n", "return", "feat", ",", "lab", ",", "d_lab", ",", "W", ",", "names", "\n", "\n", "", "else", ":", "\n", "            ", "labs", "=", "self", ".", "labels_multihot", "[", "self", ".", "testidx", "[", "self", ".", "currenttestidx", "]", "]", "\n", "dish_labs", "=", "self", ".", "dish_labels_onehot", "[", "self", ".", "testidx", "[", "self", ".", "currenttestidx", "]", "]", "\n", "feat", "=", "self", ".", "features", "[", "self", ".", "testidx", "[", "self", ".", "currenttestidx", "]", "]", "\n", "names", "=", "self", ".", "filenames", "[", "self", ".", "testidx", "[", "self", ".", "currenttestidx", "]", "]", "\n", "\n", "if", "self", ".", "currenttestidx", "==", "len", "(", "self", ".", "testidx", ")", "-", "1", ":", "\n", "                ", "done", "=", "True", ";", "self", ".", "currenttestidx", "=", "0", "\n", "", "else", ":", "\n", "                ", "done", "=", "False", ";", "self", ".", "currenttestidx", "+=", "1", "\n", "\n", "", "return", "np", ".", "array", "(", "[", "feat", "]", ")", ",", "labs", ",", "dish_labs", ",", "names", ",", "done", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.train.compute_loss": [[13, 30], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.autograd.Variable", "torch.log_softmax", "torch.autograd.Variable", "torch.log_softmax", "torch.autograd.Variable", "torch.log_softmax", "torch.autograd.Variable", "torch.log_softmax", "torch.autograd.Variable", "torch.log_softmax", "torch.autograd.Variable", "torch.log_softmax", "torch.autograd.Variable", "torch.log_softmax"], "function", ["None"], ["def", "compute_loss", "(", "itr", ",", "W", ",", "SHS_dish_logits_list", ",", "THS_dish_logits_list", ",", "final_logits", ",", "labels", ",", "dish_labels", ")", ":", "\n", "################", "\n", "    ", "dish_logits1", ",", "dish_logits2", ",", "dish_logits3", ",", "dish_logits_total", "=", "THS_dish_logits_list", "\n", "psi_a_logits", ",", "psi_c_logits", "=", "SHS_dish_logits_list", "\n", "attribute_loss", "=", "-", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "torch", ".", "Tensor", "(", "W", ")", "*", "(", "Variable", "(", "labels", ")", "*", "F", ".", "log_softmax", "(", "psi_a_logits", ",", "dim", "=", "1", ")", ")", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "dish_loss", "=", "-", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "Variable", "(", "dish_labels", ")", "*", "F", ".", "log_softmax", "(", "psi_c_logits", ",", "dim", "=", "1", ")", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "L_sh", "=", "(", "0.9", "*", "attribute_loss", "+", "0.1", "*", "dish_loss", ")", "\n", "################", "\n", "dish_stage1", "=", "-", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "Variable", "(", "dish_labels", ")", "*", "F", ".", "log_softmax", "(", "dish_logits1", ",", "dim", "=", "1", ")", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "dish_stage2", "=", "-", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "Variable", "(", "dish_labels", ")", "*", "F", ".", "log_softmax", "(", "dish_logits2", ",", "dim", "=", "1", ")", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "dish_stage3", "=", "-", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "Variable", "(", "dish_labels", ")", "*", "F", ".", "log_softmax", "(", "dish_logits3", ",", "dim", "=", "1", ")", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "dish_milloss_total", "=", "-", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "Variable", "(", "dish_labels", ")", "*", "F", ".", "log_softmax", "(", "dish_logits_total", ",", "dim", "=", "1", ")", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "L_th", "=", "dish_stage1", "+", "dish_stage2", "+", "dish_stage3", "+", "dish_milloss_total", "\n", "################", "\n", "L_fused", "=", "-", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "Variable", "(", "dish_labels", ")", "*", "F", ".", "log_softmax", "(", "final_logits", ",", "dim", "=", "1", ")", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "\n", "return", "L_sh", "+", "0.25", "*", "L_th", "+", "L_fused", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.train.train": [[34, 49], ["dataset.load_data", "numpy.sum", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "model", "train.compute_loss", "optimizer.zero_grad", "compute_loss.backward", "optimizer.step", "torch.autograd.Variable", "print", "numpy.max", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "numpy.abs", "numpy.max", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "compute_loss.data.cpu().numpy", "compute_loss.data.cpu"], "function", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.load_data", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.train.compute_loss"], ["", "def", "train", "(", "itr", ",", "dataset", ",", "args", ",", "model", ",", "optimizer", ",", "device", ",", "s", "=", "8", ")", ":", "\n", "\n", "    ", "features", ",", "labels", ",", "dish_labels", ",", "W_tfidf", ",", "filenames", "=", "dataset", ".", "load_data", "(", "is_training", "=", "True", ",", "Wiftdf", "=", "model", ".", "W", ")", "\n", "seq_len", "=", "np", ".", "sum", "(", "np", ".", "max", "(", "np", ".", "abs", "(", "features", ")", ",", "axis", "=", "2", ")", ">", "0", ",", "axis", "=", "1", ")", "\n", "features", "=", "features", "[", ":", ",", ":", "np", ".", "max", "(", "seq_len", ")", ",", ":", "]", "\n", "features", "=", "torch", ".", "from_numpy", "(", "features", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "labels", "=", "torch", ".", "from_numpy", "(", "labels", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "dish_labels", "=", "torch", ".", "from_numpy", "(", "dish_labels", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "SHS_logits", ",", "THS_logits", ",", "final_logits", "=", "model", "(", "itr", ",", "filenames", ",", "Variable", "(", "features", ")", ",", "device", ",", "s", ",", "seq_len", ")", "\n", "total_loss", "=", "compute_loss", "(", "itr", ",", "W_tfidf", ",", "SHS_logits", ",", "THS_logits", ",", "final_logits", ",", "labels", ",", "dish_labels", ")", "\n", "if", "itr", "%", "100", "==", "0", ":", "\n", "        ", "print", "(", "'Iteration: %d, Loss: %.3f'", "%", "(", "itr", ",", "total_loss", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.TwoSH_Model.__init__": [[23, 50], ["super().__init__", "len", "TwoSH_model.TwoSH_Model.build_TC", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "TwoSH_model.TwoSH_Model.apply", "TwoSH_model.TwoSH_Model.attr2dish_fc_list.append", "TwoSH_model.TwoSH_Model.attr2dish_fc_list.append", "TwoSH_model.TwoSH_Model.attr2dish_fc_list.append", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.__init__", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.TwoSH_Model.build_TC"], ["    ", "def", "__init__", "(", "self", ",", "n_nodes", ",", "conv_len", ",", "n_feature", ",", "n_class", ",", "n_dish", ",", "W_tfidf", ",", "W", ",", "classlist", ")", ":", "\n", "        ", "super", "(", "TwoSH_Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classlist", "=", "classlist", "\n", "self", ".", "n_dish", "=", "n_dish", "\n", "self", ".", "W_tfidf", "=", "W_tfidf", "\n", "self", ".", "W", "=", "W", "\n", "self", ".", "n_layers", "=", "len", "(", "n_nodes", ")", "\n", "self", ".", "n_nodes", "=", "n_nodes", "\n", "self", ".", "conv_len", "=", "conv_len", "\n", "self", ".", "n_feature", "=", "n_feature", "\n", "self", ".", "build_TC", "(", ")", "\n", "self", ".", "fc_1", "=", "nn", ".", "Linear", "(", "n_feature", ",", "n_feature", ")", "\n", "self", ".", "nStages", "=", "3", "\n", "self", ".", "attr2dish_fc_list", "=", "[", "]", "\n", "self", ".", "x2dish_fc1", "=", "nn", ".", "Linear", "(", "self", ".", "n_nodes", "[", "-", "1", "]", ",", "n_dish", ")", ";", "self", ".", "x2dish_fc2", "=", "nn", ".", "Linear", "(", "self", ".", "n_nodes", "[", "-", "1", "]", ",", "n_dish", ")", ";", "self", ".", "x2dish_fc3", "=", "nn", ".", "Linear", "(", "self", ".", "n_nodes", "[", "-", "1", "]", ",", "n_dish", ")", "\n", "self", ".", "tfidf_fc", "=", "nn", ".", "Linear", "(", "n_class", ",", "n_dish", ")", "\n", "self", ".", "tfidf_fc", ".", "weight", ".", "requires_grad", "=", "True", "\n", "self", ".", "tfidf_fc", ".", "bias", ".", "requires_grad", "=", "False", "\n", "self", ".", "classifier_dish", "=", "nn", ".", "Linear", "(", "self", ".", "nStages", "*", "n_dish", ",", "n_dish", ")", "\n", "self", ".", "classifier_dish", ".", "bias", ".", "requires_grad", "=", "False", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "self", ".", "n_nodes", "[", "-", "1", "]", ",", "n_class", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.7", ")", "\n", "self", ".", "w_alpha", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "(", "1", ",", "n_dish", ")", ",", "requires_grad", "=", "True", ")", ")", "\n", "self", ".", "apply", "(", "weights_init", ")", "\n", "self", ".", "attr2dish_fc_list", ".", "append", "(", "self", ".", "x2dish_fc1", ")", "\n", "self", ".", "attr2dish_fc_list", ".", "append", "(", "self", ".", "x2dish_fc2", ")", "\n", "self", ".", "attr2dish_fc_list", ".", "append", "(", "self", ".", "x2dish_fc3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.TwoSH_Model.build_TC": [[53, 69], ["range", "int", "TwoSH_model.TwoSH_Model.Conv1d.append", "TwoSH_model.TwoSH_Model.BNorm.append", "TwoSH_model.TwoSH_Model.Drop_out.append", "TwoSH_model.TwoSH_Model.Relu.append", "TwoSH_model.TwoSH_Model.Max_pool.append", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Dropout2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool1d", "torch.MaxPool1d", "torch.MaxPool1d", "torch.MaxPool1d"], "methods", ["None"], ["", "def", "build_TC", "(", "self", ")", ":", "\n", "        ", "self", ".", "Conv1d", "=", "[", "]", "\n", "self", ".", "BNorm", "=", "[", "]", "\n", "self", ".", "Drop_out", "=", "[", "]", "\n", "self", ".", "Relu", "=", "[", "]", "\n", "self", ".", "Max_pool", "=", "[", "]", "\n", "input_n_nodes", "=", "self", ".", "n_feature", "\n", "# ---- Encoder ----", "\n", "for", "i", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "p", "=", "int", "(", "(", "self", ".", "conv_len", "-", "1", ")", "/", "2", ")", "\n", "self", ".", "Conv1d", ".", "append", "(", "nn", ".", "Conv1d", "(", "in_channels", "=", "input_n_nodes", ",", "out_channels", "=", "self", ".", "n_nodes", "[", "i", "]", ",", "kernel_size", "=", "self", ".", "conv_len", ",", "padding", "=", "p", ",", "bias", "=", "False", ")", ")", "\n", "self", ".", "BNorm", ".", "append", "(", "nn", ".", "BatchNorm1d", "(", "self", ".", "n_nodes", "[", "i", "]", ")", ")", "\n", "self", ".", "Drop_out", ".", "append", "(", "nn", ".", "Dropout2d", "(", "0.1", ")", ")", "# Input should be [B,C,1,T]", "\n", "self", ".", "Relu", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "Max_pool", ".", "append", "(", "nn", ".", "MaxPool1d", "(", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ")", ")", "\n", "input_n_nodes", "=", "self", ".", "n_nodes", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.TwoSH_Model.SHS": [[71, 93], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "TwoSH_model.TwoSH_Model.classifier", "range", "numpy.sqrt", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "TwoSH_model.TwoSH_Model.tfidf_fc", "int", "numpy.ceil().astype", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "numpy.transpose", "TwoSH_model.TwoSH_Model.dropout", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "TwoSH_model.TwoSH_Model.size", "numpy.ceil", "int", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "", "def", "SHS", "(", "self", ",", "phi", ",", "seq_len", ",", "s", ",", "device", ",", "is_training", ")", ":", "\n", "\n", "        ", "psi_a_logits", "=", "torch", ".", "zeros", "(", "0", ")", ".", "to", "(", "device", ")", "\n", "Psi", "=", "self", ".", "classifier", "(", "phi", ")", "\n", "for", "i", "in", "range", "(", "Psi", ".", "size", "(", ")", "[", "0", "]", ")", ":", "\n", "            ", "out_t", "=", "int", "(", "seq_len", "[", "i", "]", ")", "\n", "k", "=", "np", ".", "ceil", "(", "out_t", "/", "s", ")", ".", "astype", "(", "'int32'", ")", "\n", "tmp", ",", "_", "=", "torch", ".", "topk", "(", "Psi", "[", "i", "]", "[", ":", "out_t", "]", ",", "k", "=", "int", "(", "k", ")", ",", "dim", "=", "0", ")", "\n", "psi_a_logits", "=", "torch", ".", "cat", "(", "[", "psi_a_logits", ",", "torch", ".", "mean", "(", "tmp", ",", "0", ",", "keepdim", "=", "True", ")", "]", ",", "dim", "=", "0", ")", "\n", "####", "\n", "# the mask is initialized with W_tfidf, however, after a few itertions turns into a binary mask.", "\n", "", "self", ".", "W_tfidf", "[", "self", ".", "W_tfidf", "!=", "0", "]", "=", "np", ".", "sqrt", "(", "self", ".", "W_tfidf", "[", "self", ".", "W_tfidf", "!=", "0", "]", ")", "\n", "M_tfidf", "=", "torch", ".", "Tensor", "(", "np", ".", "transpose", "(", "self", ".", "W_tfidf", ")", ")", "\n", "self", ".", "tfidf_fc", ".", "weight", ".", "data", "=", "self", ".", "tfidf_fc", ".", "weight", ".", "data", "*", "M_tfidf", "\n", "####", "\n", "if", "is_training", ":", "\n", "            ", "psi_a_logits_do", "=", "self", ".", "dropout", "(", "psi_a_logits", ")", "\n", "", "else", ":", "\n", "            ", "psi_a_logits_do", "=", "psi_a_logits", "\n", "", "psi_c_logits", "=", "self", ".", "tfidf_fc", "(", "F", ".", "relu", "(", "psi_a_logits_do", ")", ")", "\n", "\n", "return", "psi_a_logits", ",", "psi_c_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.TwoSH_Model.THS": [[94, 129], ["range", "range", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "TwoSH_model.TwoSH_Model.classifier_dish", "stage_video_features_list.append", "int", "range", "range", "range", "stage_dish_logits_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "phi.size", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "TwoSH_model.TwoSH_Model.dropout", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "int", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "phi.size", "numpy.random.choice", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "THS", "(", "self", ",", "phi", ",", "seq_len", ",", "device", ",", "is_training", ")", ":", "\n", "        ", "stage_video_features_list", "=", "[", "]", "\n", "for", "kappa", "in", "range", "(", "self", ".", "nStages", ")", ":", "\n", "            ", "stage_video_features_list", ".", "append", "(", "torch", ".", "zeros", "(", "0", ")", ".", "to", "(", "device", ")", ")", "\n", "", "for", "i", "in", "range", "(", "phi", ".", "size", "(", ")", "[", "0", "]", ")", ":", "\n", "            ", "out_t", "=", "int", "(", "seq_len", "[", "i", "]", ")", "\n", "for", "kappa", "in", "range", "(", "self", ".", "nStages", ")", ":", "\n", "                ", "d", "=", "out_t", "//", "self", ".", "nStages", "\n", "begin", "=", "kappa", "*", "d", ";", "end", "=", "(", "kappa", "+", "1", ")", "*", "d", "\n", "h", "=", "torch", ".", "mean", "(", "phi", "[", "i", "]", "[", "begin", ":", "end", ",", ":", "]", ",", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "stage_video_features_list", "[", "kappa", "]", "=", "torch", ".", "cat", "(", "[", "stage_video_features_list", "[", "kappa", "]", ",", "h", "]", ",", "dim", "=", "0", ")", "\n", "\n", "", "", "if", "is_training", ":", "\n", "            ", "for", "kappa", "in", "range", "(", "self", ".", "nStages", ")", ":", "\n", "                ", "stage_video_features_list", "[", "kappa", "]", "=", "self", ".", "dropout", "(", "stage_video_features_list", "[", "kappa", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "kappa", "in", "range", "(", "self", ".", "nStages", ")", ":", "\n", "                ", "stage_video_features_list", "[", "kappa", "]", "=", "stage_video_features_list", "[", "kappa", "]", "\n", "\n", "", "", "stage_dish_logits_list", "=", "[", "]", "\n", "dish_logits_bundle", "=", "torch", ".", "zeros", "(", "0", ")", ".", "to", "(", "device", ")", "\n", "for", "kappa", "in", "range", "(", "self", ".", "nStages", ")", ":", "\n", "            ", "stage_dish_logits_list", ".", "append", "(", "self", ".", "attr2dish_fc_list", "[", "kappa", "]", "(", "stage_video_features_list", "[", "kappa", "]", ")", ")", "\n", "dish_logits_bundle", "=", "torch", ".", "cat", "(", "[", "dish_logits_bundle", ",", "F", ".", "relu", "(", "stage_dish_logits_list", "[", "kappa", "]", ")", "]", ",", "dim", "=", "1", ")", "\n", "####The Stage Aggregation Function#####", "\n", "", "if", "is_training", ":", "\n", "            ", "for", "item", "in", "range", "(", "phi", ".", "size", "(", ")", "[", "0", "]", ")", ":", "\n", "                ", "rand_sampleid", "=", "int", "(", "np", ".", "random", ".", "choice", "(", "self", ".", "nStages", ",", "size", "=", "1", ")", ")", "\n", "mask", "=", "torch", ".", "ones", "(", "(", "1", ",", "self", ".", "nStages", "*", "self", ".", "n_dish", ")", ")", "\n", "mask", "[", "0", ",", "rand_sampleid", "*", "self", ".", "n_dish", ":", "(", "rand_sampleid", "+", "1", ")", "*", "self", ".", "n_dish", "]", "=", "0", "\n", "dish_logits_bundle", "[", "item", "]", "=", "dish_logits_bundle", "[", "item", ",", ":", "]", "*", "mask", "\n", "", "dish_logits_bundle", "=", "dish_logits_bundle", "*", "self", ".", "nStages", "/", "(", "self", ".", "nStages", "-", "1", ")", "\n", "", "dish_logits_total", "=", "self", ".", "classifier_dish", "(", "dish_logits_bundle", ")", "\n", "#######################################", "\n", "return", "[", "stage_dish_logits_list", "[", "0", "]", ",", "stage_dish_logits_list", "[", "1", "]", ",", "stage_dish_logits_list", "[", "2", "]", ",", "dish_logits_total", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.TwoSH_Model.Stream_Fusion": [[131, 141], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "torch.sign", "SHS_logits.detach", "THS_logits.detach", "SHS_logits.detach", "THS_logits.detach"], "methods", ["None"], ["", "def", "Stream_Fusion", "(", "self", ",", "SHS_logits", ",", "THS_logits", ",", "is_training", ")", ":", "\n", "\n", "        ", "alpha", "=", "torch", ".", "sigmoid", "(", "self", ".", "w_alpha", ")", "\n", "H_alpha", "=", "(", "torch", ".", "sign", "(", "alpha", ".", "data", "-", "0.5", ")", "+", "1", ")", "/", "2", "\n", "if", "is_training", ":", "\n", "            ", "dish_logits_final", "=", "(", "1", "-", "alpha", ")", "*", "SHS_logits", ".", "detach", "(", ")", "+", "alpha", "*", "THS_logits", ".", "detach", "(", ")", "\n", "", "else", ":", "\n", "            ", "dish_logits_final", "=", "(", "1", "-", "H_alpha", ")", "*", "SHS_logits", ".", "detach", "(", ")", "+", "H_alpha", "*", "THS_logits", ".", "detach", "(", ")", "\n", "\n", "", "return", "dish_logits_final", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.TwoSH_Model.forward": [[142, 161], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "TwoSH_model.TwoSH_Model.permute", "range", "phi.permute.permute.permute", "TwoSH_model.TwoSH_Model.SHS", "TwoSH_model.TwoSH_Model.THS", "TwoSH_model.TwoSH_Model.Stream_Fusion", "TwoSH_model.TwoSH_Model.fc_1", "TwoSH_model.TwoSH_Model.dropout"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.TwoSH_Model.SHS", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.TwoSH_Model.THS", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.TwoSH_Model.Stream_Fusion"], ["", "def", "forward", "(", "self", ",", "itr", ",", "filenames", ",", "inputs", ",", "device", ",", "s", ",", "seq_len", ",", "is_training", "=", "True", ")", ":", "\n", "\n", "        ", "g_x", "=", "F", ".", "relu", "(", "self", ".", "fc_1", "(", "inputs", ")", ")", "\n", "if", "is_training", ":", "\n", "            ", "g_x", "=", "self", ".", "dropout", "(", "g_x", ")", "\n", "####TC##### forward", "\n", "", "g_x", "=", "g_x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "            ", "phi", "=", "self", ".", "Conv1d", "[", "i", "]", "(", "g_x", ")", "\n", "phi", "=", "self", ".", "Relu", "[", "i", "]", "(", "phi", ")", "\n", "####TC#####", "\n", "", "phi", "=", "phi", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "SHS_logits_list", "=", "self", ".", "SHS", "(", "phi", ",", "seq_len", ",", "s", ",", "device", ",", "is_training", ")", "\n", "THS_logits_list", "=", "self", ".", "THS", "(", "phi", ",", "seq_len", ",", "device", ",", "is_training", ")", "\n", "dish_logits_final", "=", "self", ".", "Stream_Fusion", "(", "SHS_logits_list", "[", "-", "1", "]", ",", "THS_logits_list", "[", "-", "1", "]", ",", "is_training", ")", "\n", "\n", "\n", "return", "SHS_logits_list", ",", "THS_logits_list", ",", "dish_logits_final", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.TwoSH_model.weights_init": [[9, 18], ["classname.find", "classname.find", "classname.find", "classname.find", "torch.xavier_uniform_", "m.bias.data.fill_", "torch.xavier_uniform_"], "function", ["None"], ["def", "weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", "or", "classname", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", "or", "classname", ".", "find", "(", "'TC_Model'", ")", "!=", "-", "1", ":", "\n", "        ", "if", "classname", ".", "find", "(", "'TC_Model'", ")", "==", "-", "1", ":", "\n", "            ", "torch_init", ".", "xavier_uniform_", "(", "m", ".", "weight", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "", "else", ":", "\n", "            ", "for", "c", "in", "m", ".", "Conv1d", ":", "\n", "                ", "torch_init", ".", "xavier_uniform_", "(", "c", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.test.test": [[10, 78], ["print", "print", "numpy.array", "numpy.array", "Evaluation.Evaluation", "print", "Evaluation.Evaluation.eval_fn", "print", "print", "Evaluation.Evaluation.eval_fn", "print", "Evaluation.Evaluation.eval_fn", "print", "Evaluation.Evaluation.eval_fn", "print", "print", "Evaluation.Evaluation.eval_fn", "print", "print", "Evaluation.Evaluation.eval_fn", "Evaluation.Evaluation.dish_mAP", "Evaluation.Evaluation.per_dish_acc", "dataset.load_data", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.from_numpy().float().to", "torch.softmax().cpu().data.numpy", "SHS_logits_list[].cpu().data.numpy", "THS_logits_list[].cpu().data.numpy", "THS_logits_list[].cpu().data.numpy", "THS_logits_list[].cpu().data.numpy", "THS_logits_list[].cpu().data.numpy", "torch.softmax().cpu().data.numpy", "np.array.append", "dish_logits_SHS_stack.append", "dish_logits_stack1.append", "dish_logits_stack2.append", "dish_logits_stack3.append", "dish_logits_total_stack.append", "dish_final_stack.append", "dish_vec_label_stack.append", "dish_vec_score_stack.append", "np.array.append", "dish_labels_stack.append", "Evaluation.Evaluation.multi_logit_dish_report", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "int", "int", "int", "int", "int", "int", "int", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.autograd.Variable", "numpy.asarray", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "numpy.argmax", "torch.softmax().cpu", "SHS_logits_list[].cpu", "THS_logits_list[].cpu", "THS_logits_list[].cpu", "THS_logits_list[].cpu", "THS_logits_list[].cpu", "torch.softmax().cpu", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "len", "torch.softmax", "torch.softmax"], "function", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.eval_fn", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.eval_fn", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.eval_fn", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.eval_fn", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.eval_fn", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.eval_fn", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.dish_mAP", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.per_dish_acc", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.video_dataset.Dataset.load_data", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.multi_logit_dish_report"], ["def", "test", "(", "itr", ",", "dataset", ",", "args", ",", "model", ",", "device", ",", "s", "=", "8", ")", ":", "\n", "    ", "print", "(", "\"Test Iteration: {}\"", ".", "format", "(", "itr", ")", ")", "\n", "print", "(", "\" \"", ")", "\n", "done", "=", "False", "\n", "attribute_logits_stack", "=", "[", "]", "\n", "dish_vec_score_stack", "=", "[", "]", "\n", "dish_vec_label_stack", "=", "[", "]", "\n", "dish_logits_SHS_stack", "=", "[", "]", "\n", "dish_logits_stack1", "=", "[", "]", "\n", "dish_logits_stack2", "=", "[", "]", "\n", "dish_logits_stack3", "=", "[", "]", "\n", "dish_logits_total_stack", "=", "[", "]", "\n", "dish_final_stack", "=", "[", "]", "\n", "labels_stack", "=", "[", "]", "\n", "dish_labels_stack", "=", "[", "]", "\n", "while", "not", "done", ":", "\n", "        ", "features", ",", "labels", ",", "dish_labels", ",", "filename", ",", "done", "=", "dataset", ".", "load_data", "(", "is_training", "=", "False", ")", "\n", "features", "=", "torch", ".", "from_numpy", "(", "features", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "SHS_logits_list", ",", "THS_logits_list", ",", "dish_logits_final", "=", "model", "(", "itr", ",", "itr", ",", "Variable", "(", "features", ")", ",", "device", ",", "s", ",", "np", ".", "asarray", "(", "[", "len", "(", "features", "[", "0", "]", ")", "]", ")", ",", "is_training", "=", "False", ")", "\n", "\n", "", "attribute_vector_probability_np", "=", "F", ".", "softmax", "(", "SHS_logits_list", "[", "0", "]", ",", "dim", "=", "-", "1", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "dish_logits_SHS_np", "=", "SHS_logits_list", "[", "1", "]", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n", "dish_logits1_np", "=", "THS_logits_list", "[", "0", "]", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "dish_logits2_np", "=", "THS_logits_list", "[", "1", "]", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "dish_logits3_np", "=", "THS_logits_list", "[", "2", "]", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "dish_logits_total_np", "=", "THS_logits_list", "[", "3", "]", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n", "dish_score_final_np", "=", "F", ".", "softmax", "(", "dish_logits_final", ",", "dim", "=", "-", "1", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n", "attribute_logits_stack", ".", "append", "(", "attribute_vector_probability_np", "[", "0", "]", ")", "\n", "dish_logits_SHS_stack", ".", "append", "(", "int", "(", "np", ".", "argmax", "(", "dish_logits_SHS_np", ")", ")", ")", "\n", "dish_logits_stack1", ".", "append", "(", "int", "(", "np", ".", "argmax", "(", "dish_logits1_np", ")", ")", ")", "\n", "dish_logits_stack2", ".", "append", "(", "int", "(", "np", ".", "argmax", "(", "dish_logits2_np", ")", ")", ")", "\n", "dish_logits_stack3", ".", "append", "(", "int", "(", "np", ".", "argmax", "(", "dish_logits3_np", ")", ")", ")", "\n", "dish_logits_total_stack", ".", "append", "(", "int", "(", "np", ".", "argmax", "(", "dish_logits_total_np", ")", ")", ")", "\n", "dish_final_stack", ".", "append", "(", "int", "(", "np", ".", "argmax", "(", "dish_score_final_np", ")", ")", ")", "\n", "dish_vec_label_stack", ".", "append", "(", "dish_labels", ")", "\n", "dish_vec_score_stack", ".", "append", "(", "dish_score_final_np", "[", "0", "]", ")", "\n", "labels_stack", ".", "append", "(", "labels", ")", "\n", "dish_labels_stack", ".", "append", "(", "int", "(", "np", ".", "argmax", "(", "dish_labels", ")", ")", ")", "\n", "\n", "", "attribute_logits_stack", "=", "np", ".", "array", "(", "attribute_logits_stack", ")", "\n", "labels_stack", "=", "np", ".", "array", "(", "labels_stack", ")", "\n", "eval", "=", "Evaluation", "(", "dataset", ".", "index2label", ",", "dataset", ".", "dish_index2label", ")", "\n", "\n", "print", "(", "\"Semantic Hierarchy Stream:\"", ")", "\n", "eval", ".", "eval_fn", "(", "dataset", ".", "filenames_test", ",", "attribute_logits_stack", ",", "labels_stack", ",", "dish_logits_SHS_stack", ",", "dish_labels_stack", ")", "\n", "print", "(", "\"------------------------------------------------\"", ")", "\n", "print", "(", "\"Stage #1:\"", ")", "\n", "eval", ".", "eval_fn", "(", "dataset", ".", "filenames_test", ",", "attribute_logits_stack", ",", "labels_stack", ",", "dish_logits_stack1", ",", "dish_labels_stack", ")", "\n", "print", "(", "\"Stage #2:\"", ")", "\n", "eval", ".", "eval_fn", "(", "dataset", ".", "filenames_test", ",", "attribute_logits_stack", ",", "labels_stack", ",", "dish_logits_stack2", ",", "dish_labels_stack", ")", "\n", "print", "(", "\"Stage #3:\"", ")", "\n", "eval", ".", "eval_fn", "(", "dataset", ".", "filenames_test", ",", "attribute_logits_stack", ",", "labels_stack", ",", "dish_logits_stack3", ",", "dish_labels_stack", ")", "\n", "print", "(", "\"------------------------------------------------\"", ")", "\n", "print", "(", "\"Stage-Aggregated:\"", ")", "\n", "eval", ".", "eval_fn", "(", "dataset", ".", "filenames_test", ",", "attribute_logits_stack", ",", "labels_stack", ",", "dish_logits_total_stack", ",", "dish_labels_stack", ")", "\n", "print", "(", "\"------------------------------------------------\"", ")", "\n", "print", "(", "\"Final:\"", ")", "\n", "eval", ".", "eval_fn", "(", "dataset", ".", "filenames_test", ",", "attribute_logits_stack", ",", "labels_stack", ",", "dish_final_stack", ",", "dish_labels_stack", ")", "\n", "eval", ".", "dish_mAP", "(", "dish_vec_score_stack", ",", "dish_vec_label_stack", ")", "\n", "\n", "if", "itr", "%", "10000", "==", "0", ":", "\n", "        ", "eval", ".", "multi_logit_dish_report", "(", "dataset", ".", "filenames_test", ",", "dish_logits_stack1", ",", "dish_logits_stack2", ",", "dish_logits_stack3", ",", "dish_logits_total_stack", ",", "3", ")", "\n", "\n", "", "eval", ".", "per_dish_acc", "(", "dish_final_stack", ")", "\n", "#utils.save_predictions(dataset.filenames_test,dish_final_stack,dish_labels_stack,dataset.dish_index2label,'./logs/split{}/predictions_{}.txt'.format(dataset.split,itr))", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.str2ind": [[14, 16], ["range", "len"], "function", ["None"], ["def", "str2ind", "(", "categoryname", ",", "classlist", ")", ":", "\n", "   ", "return", "[", "i", "for", "i", "in", "range", "(", "len", "(", "classlist", ")", ")", "if", "categoryname", "==", "classlist", "[", "i", "]", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.strlist2indlist": [[17, 19], ["utils.str2ind"], "function", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.str2ind"], ["", "def", "strlist2indlist", "(", "strlist", ",", "classlist", ")", ":", "\n", "\t", "return", "[", "str2ind", "(", "s", ",", "classlist", ")", "for", "s", "in", "strlist", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.strlist2multihot": [[20, 22], ["numpy.sum", "numpy.eye", "len", "utils.strlist2indlist"], "function", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.strlist2indlist"], ["", "def", "strlist2multihot", "(", "strlist", ",", "classlist", ")", ":", "\n", "\t", "return", "np", ".", "sum", "(", "np", ".", "eye", "(", "len", "(", "classlist", ")", ")", "[", "strlist2indlist", "(", "strlist", ",", "classlist", ")", "]", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.idx2multihot": [[23, 25], ["numpy.sum", "numpy.eye"], "function", ["None"], ["", "def", "idx2multihot", "(", "id_list", ",", "num_class", ")", ":", "\n", "   ", "return", "np", ".", "sum", "(", "np", ".", "eye", "(", "num_class", ")", "[", "id_list", "]", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.random_extract": [[26, 29], ["numpy.random.randint", "len"], "function", ["None"], ["", "def", "random_extract", "(", "feat", ",", "t_max", ")", ":", "\n", "   ", "r", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "feat", ")", "-", "t_max", ")", "\n", "return", "feat", "[", "r", ":", "r", "+", "t_max", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.pad": [[30, 35], ["numpy.pad", "numpy.shape", "numpy.shape"], "function", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.pad"], ["", "def", "pad", "(", "feat", ",", "min_len", ")", ":", "\n", "    ", "if", "np", ".", "shape", "(", "feat", ")", "[", "0", "]", "<=", "min_len", ":", "\n", "       ", "return", "np", ".", "pad", "(", "feat", ",", "(", "(", "0", ",", "min_len", "-", "np", ".", "shape", "(", "feat", ")", "[", "0", "]", ")", ",", "(", "0", ",", "0", ")", ")", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0", ")", "\n", "", "else", ":", "\n", "       ", "return", "feat", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.process_feat": [[36, 41], ["len", "utils.random_extract", "utils.pad"], "function", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.random_extract", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.pad"], ["", "", "def", "process_feat", "(", "feat", ",", "length", ")", ":", "\n", "    ", "if", "len", "(", "feat", ")", ">", "length", ":", "\n", "        ", "return", "random_extract", "(", "feat", ",", "length", ")", "\n", "", "else", ":", "\n", "        ", "return", "pad", "(", "feat", ",", "length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.write_to_file": [[42, 48], ["open", "str", "open.write", "open.close"], "function", ["None"], ["", "", "def", "write_to_file", "(", "dname", ",", "cmap", ",", "itr", ")", ":", "\n", "    ", "fid", "=", "open", "(", "dname", "+", "'-results.log'", ",", "'a+'", ")", "\n", "string_to_write", "=", "str", "(", "itr", ")", "\n", "string_to_write", "+=", "' '", "+", "'%.2f'", "%", "cmap", "\n", "fid", ".", "write", "(", "string_to_write", "+", "'\\n'", ")", "\n", "fid", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.modify_labs": [[49, 60], ["lab_wght[].append", "lab_wght[].append", "float", "float"], "function", ["None"], ["", "def", "modify_labs", "(", "lab_wght", ",", "state_attr", ",", "A_", ")", ":", "\n", "    ", "a1", ",", "a2", "=", "state_attr", "[", "0", "]", ",", "state_attr", "[", "1", "]", "\n", "fg1", "=", "a1", "in", "A_", ";", "fg2", "=", "a2", "in", "A_", "and", "a2", "!=", "a1", "\n", "lbl", "=", "1", "/", "(", "float", "(", "fg1", ")", "+", "float", "(", "fg2", ")", "+", "1e-10", ")", "\n", "if", "a1", "in", "A_", ":", "\n", "        ", "if", "a1", "not", "in", "lab_wght", ":", "lab_wght", "[", "a1", "]", "=", "[", "]", "\n", "lab_wght", "[", "a1", "]", ".", "append", "(", "lbl", ")", "\n", "", "if", "a2", "in", "A_", "and", "a2", "!=", "a1", ":", "\n", "        ", "if", "a2", "not", "in", "lab_wght", ":", "lab_wght", "[", "a2", "]", "=", "[", "]", "\n", "lab_wght", "[", "a2", "]", ".", "append", "(", "lbl", ")", "\n", "", "return", "lab_wght", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.update_training_labels": [[61, 70], ["range", "len", "len", "numpy.mean"], "function", ["None"], ["", "def", "update_training_labels", "(", "prev_labels", ",", "A_attr_labels", ",", "trainidx", ")", ":", "\n", "    ", "for", "i", "in", "trainidx", ":", "\n", "        ", "assert", "len", "(", "A_attr_labels", "[", "i", "]", ")", "!=", "0", "\n", "for", "j", "in", "range", "(", "len", "(", "prev_labels", "[", "i", "]", ")", ")", ":", "\n", "            ", "if", "j", "in", "A_attr_labels", "[", "i", "]", ":", "\n", "                ", "prev_labels", "[", "i", "]", "[", "j", "]", "=", "np", ".", "mean", "(", "A_attr_labels", "[", "i", "]", "[", "j", "]", ")", "\n", "", "else", ":", "\n", "                ", "prev_labels", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "", "", "return", "prev_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.get_tSNE": [[72, 101], ["len", "sklearn.manifold.TSNE().fit_transform", "dict", "dict", "matplotlib.rainbow", "itertools.cycle", "itertools.cycle", "range", "matplotlib.figure", "plt.figure.add_subplot", "enumerate", "fig.add_subplot.get_position", "fig.add_subplot.set_position", "fig.add_subplot.legend", "matplotlib.title", "matplotlib.savefig", "matplotlib.close", "numpy.unique", "numpy.linspace", "len", "data_x[].append", "data_y[].append", "numpy.asarray", "numpy.asarray", "fig.add_subplot.scatter", "sklearn.manifold.TSNE", "groups.append", "next", "next"], "function", ["None"], ["", "def", "get_tSNE", "(", "X", ",", "labels", ",", "dish_classlist", ",", "save_path", ",", "itr", ")", ":", "\n", "    ", "nclass", "=", "len", "(", "np", ".", "unique", "(", "labels", ")", ")", "\n", "X_embedded", "=", "TSNE", "(", "n_components", "=", "2", ")", ".", "fit_transform", "(", "X", ")", "\n", "# Create data", "\n", "data_x", "=", "dict", "(", ")", ";", "data_y", "=", "dict", "(", ")", "\n", "colors", "=", "cm", ".", "rainbow", "(", "np", ".", "linspace", "(", "0", ",", "1", ",", "nclass", ")", ")", "\n", "edgecolors", "=", "itertools", ".", "cycle", "(", "[", "\"r\"", ",", "\"b\"", ",", "\"k\"", ",", "\"m\"", ",", "\"g\"", "]", ")", "\n", "marks", "=", "itertools", ".", "cycle", "(", "[", "\"o\"", ",", "\"v\"", ",", "\"s\"", ",", "\"P\"", ",", "\"X\"", "]", ")", "\n", "groups", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "labels", ")", ")", ":", "\n", "        ", "group", "=", "dish_classlist", "[", "labels", "[", "i", "]", "]", "\n", "if", "group", "not", "in", "data_x", ":", "\n", "            ", "data_x", "[", "group", "]", "=", "[", "]", ";", "data_y", "[", "group", "]", "=", "[", "]", ";", "groups", ".", "append", "(", "group", ")", "\n", "", "x", "=", "X_embedded", "[", "i", ",", "0", "]", ";", "y", "=", "X_embedded", "[", "i", ",", "1", "]", "\n", "data_x", "[", "group", "]", ".", "append", "(", "x", ")", "\n", "data_y", "[", "group", "]", ".", "append", "(", "y", ")", "\n", "# Create plot", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "1", ",", "1", ")", "\n", "for", "i", ",", "group", "in", "enumerate", "(", "groups", ")", ":", "\n", "        ", "x", "=", "np", ".", "asarray", "(", "data_x", "[", "group", "]", ")", ";", "y", "=", "np", ".", "asarray", "(", "data_y", "[", "group", "]", ")", "\n", "ax", ".", "scatter", "(", "x", ",", "y", ",", "alpha", "=", "0.8", ",", "color", "=", "colors", "[", "i", "]", ",", "edgecolors", "=", "next", "(", "edgecolors", ")", ",", "marker", "=", "next", "(", "marks", ")", ",", "s", "=", "30", ",", "label", "=", "group", ")", "\n", "", "box", "=", "ax", ".", "get_position", "(", ")", "\n", "ax", ".", "set_position", "(", "[", "box", ".", "x0", ",", "box", ".", "y0", ",", "box", ".", "width", "*", "0.8", ",", "box", ".", "height", "]", ")", "\n", "ax", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ",", "ncol", "=", "1", ")", "\n", "plt", ".", "title", "(", "'TSNE plot-itr: {}'", ".", "format", "(", "itr", ")", ")", "\n", "# plt.show()", "\n", "plt", ".", "savefig", "(", "save_path", "+", "\"{}.png\"", ".", "format", "(", "itr", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.get_tfidf": [[102, 143], ["numpy.zeros", "enumerate", "enumerate", "range", "numpy.zeros", "numpy.transpose", "numpy.log", "len", "numpy.argmax", "range", "numpy.linspace", "range", "len", "numpy.where", "numpy.max", "numpy.exp", "scipy.special.factorial", "numpy.argsort", "len", "numpy.sum", "numpy.sum", "numpy.sum", "len"], "function", ["None"], ["", "def", "get_tfidf", "(", "dataset", ",", "normalized", "=", "\"none\"", ")", ":", "\n", "    ", "TFIDF", "=", "np", ".", "zeros", "(", "[", "dataset", ".", "num_attr", ",", "dataset", ".", "num_dish", "]", ")", "\n", "Docs", "=", "{", "}", "\n", "for", "dish_id", ",", "dish", "in", "enumerate", "(", "dataset", ".", "dish_classlist", ")", ":", "\n", "        ", "words", "=", "np", ".", "zeros", "(", "[", "dataset", ".", "num_attr", "]", ")", "\n", "list_of_vids", "=", "dataset", ".", "dishwiseidx", "[", "dish_id", "]", "\n", "for", "v", "in", "list_of_vids", ":", "\n", "            ", "tmp", "=", "dataset", ".", "labels_multihot", "[", "v", "]", "\n", "words", "=", "tmp", "+", "words", "\n", "", "if", "len", "(", "list_of_vids", ")", "!=", "0", ":", "\n", "            ", "words", "=", "words", "/", "len", "(", "list_of_vids", ")", "\n", "", "Docs", "[", "dish", "]", "=", "words", "\n", "TFIDF", "[", ":", ",", "dish_id", "]", "=", "np", ".", "transpose", "(", "words", ")", "\n", "", "for", "attr_id", ",", "attr", "in", "enumerate", "(", "dataset", ".", "classlist", ")", ":", "\n", "        ", "d_clms", "=", "np", ".", "where", "(", "TFIDF", "[", "attr_id", ",", ":", "]", ">", "0", ")", "[", "0", "]", "\n", "idf", "=", "np", ".", "log", "(", "(", "dataset", ".", "num_dish", "+", "1", ")", "/", "(", "len", "(", "d_clms", ")", "+", "1", ")", ")", "\n", "TFIDF", "[", "attr_id", ",", ":", "]", "=", "TFIDF", "[", "attr_id", ",", ":", "]", "*", "idf", "\n", "\n", "", "W", "=", "{", "}", "# This blockis for the weights used for the attr recognition loss", "\n", "for", "i", "in", "range", "(", "len", "(", "dataset", ".", "filenames_train", ")", ")", ":", "\n", "        ", "ds_id", "=", "dataset", ".", "trainidx", "[", "i", "]", "\n", "dish_lb", "=", "np", ".", "argmax", "(", "dataset", ".", "dish_labels_onehot", "[", "ds_id", "]", ")", "\n", "W", "[", "dataset", ".", "filenames_train", "[", "i", "]", "]", "=", "TFIDF", "[", ":", ",", "dish_lb", "]", "*", "dataset", ".", "labels_multihot", "[", "ds_id", "]", "\n", "W", "[", "dataset", ".", "filenames_train", "[", "i", "]", "]", "=", "W", "[", "dataset", ".", "filenames_train", "[", "i", "]", "]", "/", "(", "np", ".", "sum", "(", "W", "[", "dataset", ".", "filenames_train", "[", "i", "]", "]", ")", "+", "0.000000001", ")", "\n", "\n", "", "if", "normalized", "==", "\"linear\"", ":", "\n", "        ", "TFIDF", "=", "TFIDF", "/", "(", "np", ".", "sum", "(", "TFIDF", ",", "axis", "=", "0", ")", "+", "0.000000001", ")", "\n", "", "if", "normalized", "==", "'none'", ":", "\n", "        ", "for", "col", "in", "range", "(", "TFIDF", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "best", "=", "np", ".", "max", "(", "TFIDF", "[", ":", ",", "col", "]", ")", "\n", "coeff", "=", "1", "/", "(", "best", "+", "0.000000001", ")", "\n", "TFIDF", "[", ":", ",", "col", "]", "*=", "coeff", "\n", "", "", "if", "normalized", "==", "'non-linear'", ":", "\n", "        ", "k", "=", "np", ".", "linspace", "(", "1", ",", "20", ",", "TFIDF", ".", "shape", "[", "0", "]", ")", "\n", "non_lin", "=", "(", "np", ".", "exp", "(", "-", "1", ")", ")", "/", "factorial", "(", "k", ")", "\n", "for", "col", "in", "range", "(", "TFIDF", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "idx", "=", "np", ".", "argsort", "(", "-", "TFIDF", "[", ":", ",", "col", "]", ")", "\n", "TFIDF", "[", "idx", ",", "col", "]", "=", "TFIDF", "[", "idx", ",", "col", "]", "*", "non_lin", "\n", "", "TFIDF", "=", "TFIDF", "/", "(", "np", ".", "sum", "(", "TFIDF", ",", "axis", "=", "0", ")", "+", "0.000000001", ")", "\n", "\n", "", "return", "TFIDF", ",", "W", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.get_anchor_positive_triplet_mask": [[145, 164], ["numpy.eye", "numpy.logical_not", "numpy.equal", "numpy.logical_and", "np.logical_and.astype", "len", "numpy.expand_dims", "numpy.expand_dims"], "function", ["None"], ["", "def", "get_anchor_positive_triplet_mask", "(", "labels", ",", "PK", ")", ":", "\n", "# reference: https://github.com/omoindrot/tensorflow-triplet-loss/blob/master/model/triplet_loss.py", "\n", "    ", "\"\"\"Return a 2D mask where mask[a, p] is True iff a and p are distinct and have same label.\n    Args:\n        labels: int `list` with shape [batch_size]\n        PK: int scalar referring to the size of the anchor pool\n    Returns:\n        mask: float `array` with shape [PK, batch_size]\n    \"\"\"", "\n", "# Check that i and j are distinct", "\n", "indices_equal", "=", "np", ".", "eye", "(", "PK", ",", "len", "(", "labels", ")", ",", "dtype", "=", "bool", ")", "\n", "indices_not_equal", "=", "np", ".", "logical_not", "(", "indices_equal", ")", "\n", "\n", "# Check if labels[i] == labels[j]", "\n", "# Uses broadcasting where the 1st argument has shape (1, batch_size) and the 2nd (batch_size, 1)", "\n", "labels_equal", "=", "np", ".", "equal", "(", "np", ".", "expand_dims", "(", "labels", ",", "0", ")", ",", "np", ".", "expand_dims", "(", "labels", "[", ":", "PK", "]", ",", "1", ")", ")", "\n", "# Combine the two masks", "\n", "mask", "=", "np", ".", "logical_and", "(", "indices_not_equal", ",", "labels_equal", ")", "\n", "return", "mask", ".", "astype", "(", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.get_anchor_negative_triplet_mask": [[165, 170], ["numpy.equal", "numpy.logical_not", "np.logical_not.astype", "numpy.expand_dims", "numpy.expand_dims"], "function", ["None"], ["", "def", "get_anchor_negative_triplet_mask", "(", "labels", ",", "PK", ")", ":", "\n", "# reference: https://github.com/omoindrot/tensorflow-triplet-loss/blob/master/model/triplet_loss.py", "\n", "    ", "labels_equal", "=", "np", ".", "equal", "(", "np", ".", "expand_dims", "(", "labels", ",", "0", ")", ",", "np", ".", "expand_dims", "(", "labels", "[", ":", "PK", "]", ",", "1", ")", ")", "\n", "mask", "=", "np", ".", "logical_not", "(", "labels_equal", ")", "\n", "return", "mask", ".", "astype", "(", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.find_pos_neg_idx": [[171, 201], ["numpy.matmul", "numpy.argmin", "numpy.argsort", "numpy.expand_dims", "numpy.expand_dims", "numpy.linalg.norm", "numpy.argmax", "numpy.argsort", "numpy.transpose", "numpy.expand_dims", "numpy.expand_dims", "numpy.transpose", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.amax"], "function", ["None"], ["", "def", "find_pos_neg_idx", "(", "embeddings", ",", "PK", ",", "dataset", ",", "Similarity", "=", "True", ")", ":", "\n", "    ", "\"\"\"Compute the 2D matrix of distances between all the embeddings.\n    Args:\n        embeddings: array of shape (batch_size, embed_dim), values should be >=0\n        PK: int scalar referring to the size of the anchor pool\n    Returns:\n        pairwise_cos_similarity: array of shape (PK, batch_size)\n    \"\"\"", "\n", "if", "Similarity", ":", "\n", "# Get the dot product between embeddings", "\n", "        ", "dot_product", "=", "np", ".", "matmul", "(", "embeddings", "[", ":", "PK", "]", ",", "np", ".", "transpose", "(", "embeddings", ")", ")", "\n", "a", "=", "1", "/", "(", "np", ".", "linalg", ".", "norm", "(", "embeddings", "[", ":", "PK", "]", ",", "2", ",", "axis", "=", "1", ")", "+", "1e-10", ")", "# (PK,)", "\n", "b", "=", "1", "/", "(", "np", ".", "linalg", ".", "norm", "(", "embeddings", ",", "2", ",", "axis", "=", "1", ")", "+", "1e-10", ")", "# (batch,)", "\n", "c", "=", "np", ".", "expand_dims", "(", "a", ",", "1", ")", "*", "np", ".", "expand_dims", "(", "b", ",", "0", ")", "#(Pk, batch)", "\n", "similarity", "=", "c", "*", "dot_product", "#cosine similarity btw anchor embeddings and all other embeddings", "\n", "anchor_positive_sim", "=", "(", "similarity", "-", "1.1", ")", "*", "(", "dataset", ".", "mask_anchor_positive", ")", "\n", "p", "=", "np", ".", "argmin", "(", "anchor_positive_sim", ",", "axis", "=", "1", ")", "\n", "anchor_negative_sim", "=", "similarity", "*", "dataset", ".", "mask_anchor_negative", "\n", "n", "=", "np", ".", "argsort", "(", "-", "anchor_negative_sim", ",", "axis", "=", "1", ")", "\n", "\n", "", "else", ":", "\n", "        ", "augmentedA", "=", "np", ".", "expand_dims", "(", "embeddings", "[", ":", "PK", "]", ",", "2", ")", "# (PK,d,1)", "\n", "augmentedB", "=", "np", ".", "expand_dims", "(", "np", ".", "transpose", "(", "embeddings", ")", ",", "0", ")", "# (1,d,batch)", "\n", "diff_mat", "=", "augmentedA", "-", "augmentedB", "\n", "dist_mat", "=", "np", ".", "linalg", ".", "norm", "(", "diff_mat", ",", "2", ",", "axis", "=", "1", ")", "# (PK,batch)", "\n", "masked_p_dist", "=", "dist_mat", "*", "dataset", ".", "mask_anchor_positive", "\n", "p", "=", "np", ".", "argmax", "(", "masked_p_dist", ",", "axis", "=", "1", ")", "\n", "masked_p_dist", "=", "(", "dist_mat", "-", "np", ".", "amax", "(", "dist_mat", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ")", "*", "(", "dataset", ".", "mask_anchor_negative", ")", "\n", "n", "=", "np", ".", "argsort", "(", "masked_p_dist", ",", "axis", "=", "1", ")", "\n", "", "return", "p", ",", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.find_pos_neg_idx_test": [[203, 259], ["print", "range", "print", "print", "print", "numpy.matmul", "numpy.expand_dims", "numpy.expand_dims", "numpy.linalg.norm", "numpy.argsort", "print", "numpy.argsort", "print", "len", "print", "range", "print", "print", "numpy.transpose", "numpy.expand_dims", "numpy.expand_dims", "numpy.transpose", "numpy.sum", "len", "numpy.mean", "numpy.linalg.norm", "numpy.linalg.norm", "print", "ranks.append", "print", "numpy.asarray", "numpy.mean", "numpy.array", "str", "dish_wise_rank[].append"], "function", ["None"], ["", "def", "find_pos_neg_idx_test", "(", "embeddings", ",", "dataset", ",", "dish_labels", ",", "Similarity", ")", ":", "\n", "    ", "\"\"\"\n\n    \"\"\"", "\n", "# Get the dot product between embeddings", "\n", "if", "Similarity", ":", "\n", "        ", "dot_product", "=", "np", ".", "matmul", "(", "embeddings", ",", "np", ".", "transpose", "(", "embeddings", ")", ")", "\n", "a", "=", "1", "/", "(", "np", ".", "linalg", ".", "norm", "(", "embeddings", ",", "2", ",", "axis", "=", "1", ")", "+", "1e-10", ")", "# (batch,)", "\n", "b", "=", "1", "/", "(", "np", ".", "linalg", ".", "norm", "(", "embeddings", ",", "2", ",", "axis", "=", "1", ")", "+", "1e-10", ")", "# (batch,)", "\n", "c", "=", "np", ".", "expand_dims", "(", "a", ",", "1", ")", "*", "np", ".", "expand_dims", "(", "b", ",", "0", ")", "#(batch, batch)", "\n", "similarity", "=", "c", "*", "dot_product", "#cosine similarity btw anchor embeddings and all other embeddings", "\n", "", "else", ":", "\n", "        ", "augmentedA", "=", "np", ".", "expand_dims", "(", "embeddings", ",", "2", ")", "# (batch,d,1)", "\n", "augmentedB", "=", "np", ".", "expand_dims", "(", "np", ".", "transpose", "(", "embeddings", ")", ",", "0", ")", "# (1,d,batch)", "\n", "diff_mat", "=", "augmentedA", "-", "augmentedB", "\n", "similarity", "=", "np", ".", "linalg", ".", "norm", "(", "diff_mat", ",", "2", ",", "axis", "=", "1", ")", "# (batch,batch)", "\n", "", "print", "(", "\"Here is how close attr predictions of test samples are to each other from closest to furthest in order:\"", ")", "\n", "if", "Similarity", ":", "\n", "        ", "idx", "=", "np", ".", "argsort", "(", "-", "similarity", ",", "axis", "=", "1", ")", "\n", "print", "(", "\"Results based on cosine similarity\"", ")", "\n", "", "else", ":", "\n", "        ", "idx", "=", "np", ".", "argsort", "(", "similarity", ",", "axis", "=", "1", ")", "\n", "print", "(", "\"Results based on L2 distance\"", ")", "\n", "", "total_proximity", "=", "0", "\n", "ranks", "=", "[", "]", ";", "counter", "=", "0", ";", "dish_wise_rank", "=", "{", "}", "\n", "for", "a", "in", "range", "(", "len", "(", "embeddings", ")", ")", ":", "\n", "        ", "if", "np", ".", "sum", "(", "np", ".", "array", "(", "dish_labels", ")", "==", "dish_labels", "[", "a", "]", ")", "==", "1", ":", "#only videos that have another video of the same dish", "\n", "            ", "continue", "\n", "", "proximity", "=", "0", "\n", "print", "(", "\"# For \"", "+", "str", "(", "dataset", ".", "dish_classlist", "[", "dish_labels", "[", "a", "]", "]", ")", "+", "\"->\"", ",", "end", "=", "' '", ")", "\n", "for", "p", "in", "range", "(", "1", ",", "len", "(", "similarity", "[", "a", ",", ":", "]", ")", ")", ":", "\n", "            ", "v_id", "=", "idx", "[", "a", ",", "p", "]", "\n", "if", "p", "<", "6", ":", "print", "(", "dataset", ".", "dish_classlist", "[", "dish_labels", "[", "v_id", "]", "]", ",", "end", "=", "','", ")", "\n", "if", "dish_labels", "[", "v_id", "]", "==", "dish_labels", "[", "a", "]", ":", "\n", "                ", "if", "dish_labels", "[", "a", "]", "not", "in", "dish_wise_rank", ":", "\n", "                    ", "dish_wise_rank", "[", "dish_labels", "[", "a", "]", "]", "=", "[", "p", "]", "\n", "", "else", ":", "\n", "                    ", "dish_wise_rank", "[", "dish_labels", "[", "a", "]", "]", ".", "append", "(", "p", ")", "\n", "", "proximity", "=", "proximity", "+", "similarity", "[", "a", ",", "v_id", "]", ";", "ranks", ".", "append", "(", "p", ")", "#;print(similarity[a, v_id],end=',')", "\n", "if", "p", "<", "4", ":", "counter", "=", "counter", "+", "1", "\n", "if", "p", "==", "1", ":", "\n", "                    ", "proximity", "=", "proximity", "-", "similarity", "[", "a", ",", "idx", "[", "a", ",", "2", "]", "]", "#;print(similarity[a, idx[a, 2]],end=',')", "\n", "", "print", "(", "\"#{}\"", ".", "format", "(", "p", ")", ",", "end", "=", "','", ")", "\n", "break", "\n", "", "elif", "p", "==", "1", ":", "\n", "                ", "proximity", "=", "proximity", "-", "similarity", "[", "a", ",", "v_id", "]", "#;print(similarity[a, v_id],end=',')", "\n", "", "", "total_proximity", "+=", "proximity", "\n", "print", "(", "\"proximity is {:.5f}\"", ".", "format", "(", "proximity", ")", ")", "\n", "\n", "", "print", "(", "\"Total proximity is {:.5f} and average rank is {}, and {} vids are in top-three\"", ".", "format", "(", "total_proximity", ",", "np", ".", "mean", "(", "np", ".", "asarray", "(", "ranks", ")", ")", ",", "counter", ")", ")", "\n", "print", "(", "\" \"", ")", "\n", "for", "dish_id", "in", "dish_wise_rank", ":", "\n", "        ", "print", "(", "\"{}: {:.2f}\"", ".", "format", "(", "dataset", ".", "dish_classlist", "[", "dish_id", "]", ",", "np", ".", "mean", "(", "dish_wise_rank", "[", "dish_id", "]", ")", ")", ")", "\n", "\n", "", "print", "(", "\" \"", ")", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.torch_cos_similarity_matrix": [[261, 272], ["torch.matmul", "torch.matmul", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "str", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.max", "torch.max", "torch.min", "torch.min", "str", "torch.min", "torch.min", "torch.max", "torch.max"], "function", ["None"], ["", "def", "torch_cos_similarity_matrix", "(", "embeddingsA", ",", "embeddingsB", ")", ":", "\n", "    ", "\"\"\"\n        embeddingsA=    (T_a,d)\n        embeddingsB=    (T_b,d)\n    \"\"\"", "\n", "dot_product", "=", "torch", ".", "matmul", "(", "embeddingsA", ",", "torch", ".", "transpose", "(", "embeddingsB", ",", "1", ",", "0", ")", ")", "#(Ta,Tb)", "\n", "norm_a", "=", "1", "/", "(", "torch", ".", "norm", "(", "embeddingsA", ",", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "1e-10", ")", "# (T_a,1)", "\n", "norm_p", "=", "1", "/", "(", "torch", ".", "norm", "(", "embeddingsB", ",", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "1e-10", ")", "# (T_b,1)", "\n", "sim_mat", "=", "dot_product", "*", "norm_a", "*", "torch", ".", "transpose", "(", "norm_p", ",", "1", ",", "0", ")", "# (T_a,T_b)", "\n", "assert", "torch", ".", "max", "(", "sim_mat", ")", "<=", "1.01", "and", "torch", ".", "min", "(", "sim_mat", ")", ">=", "-", "1.01", ",", "str", "(", "torch", ".", "max", "(", "sim_mat", ")", ")", "+", "\" \"", "+", "str", "(", "torch", ".", "min", "(", "sim_mat", ")", ")", "\n", "return", "sim_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.torch_L2_distance_matrix": [[275, 286], ["torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.norm", "torch.norm", "torch.transpose", "torch.transpose"], "function", ["None"], ["", "def", "torch_L2_distance_matrix", "(", "embeddingsA", ",", "embeddingsB", ")", ":", "\n", "    ", "\"\"\"\n        embeddingsA=    (T_a,d)\n        embeddingsB=    (T_b,d)\n    \"\"\"", "\n", "augmentedA", "=", "torch", ".", "unsqueeze", "(", "embeddingsA", ",", "2", ")", "#(Ta,d,1)", "\n", "augmentedB", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "transpose", "(", "embeddingsB", ",", "1", ",", "0", ")", ",", "0", ")", "#(1,d,Tb)", "\n", "diff_mat", "=", "augmentedA", "-", "augmentedB", "\n", "dist_mat", "=", "torch", ".", "norm", "(", "diff_mat", ",", "2", ",", "dim", "=", "1", ")", "# (Ta,Tb)", "\n", "assert", "dist_mat", ".", "shape", "[", "0", "]", "==", "embeddingsA", ".", "shape", "[", "0", "]", "and", "dist_mat", ".", "shape", "[", "1", "]", "==", "embeddingsB", ".", "shape", "[", "0", "]", "\n", "return", "dist_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.soft_topk": [[287, 300], ["torch.linspace().to", "torch.linspace().to", "torch.topk", "torch.topk", "hard_topk_argmax.cpu().data.numpy", "torch.zeros().to", "torch.zeros().to", "range", "torch.softmax", "torch.matmul", "torch.matmul", "utils.soft_topk.peaked_softmax"], "function", ["None"], ["", "def", "soft_topk", "(", "s", ",", "a", ",", "k", ",", "device", ")", ":", "\n", "# z:[T], s=[T]", "\n", "    ", "T", "=", "s", ".", "shape", "[", "0", "]", "\n", "z", "=", "torch", ".", "linspace", "(", "0", ",", "T", "-", "1", ",", "T", ")", ".", "to", "(", "device", ")", "\n", "def", "peaked_softmax", "(", "s", ",", "z", ",", "a", ")", ":", "\n", "        ", "exp_s", "=", "F", ".", "softmax", "(", "a", "*", "s", ",", "dim", "=", "0", ")", "\n", "return", "torch", ".", "matmul", "(", "z", ",", "exp_s", ")", "\n", "", "m", ",", "hard_topk_argmax", "=", "torch", ".", "topk", "(", "s", ",", "k", "=", "int", "(", "k", ")", ")", ";", "hard_topk_argmax_np", "=", "hard_topk_argmax", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "Z_", "=", "torch", ".", "zeros", "(", "0", ")", ".", "to", "(", "device", ")", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "        ", "z_", "=", "peaked_softmax", "(", "-", "(", "s", "-", "m", "[", "i", "]", ")", "**", "2", ",", "z", ",", "a", ")", "\n", "Z_", "=", "torch", ".", "cat", "(", "[", "Z_", ",", "torch", ".", "unsqueeze", "(", "z_", ",", "0", ")", "]", ",", "dim", "=", "0", ")", "\n", "", "return", "Z_", ",", "Z_", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "hard_topk_argmax_np", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.topk_visual": [[301, 327], ["torch.sort", "torch.sort", "indices.cpu().data.numpy.cpu().data.numpy", "idx.cpu().data.numpy.cpu().data.numpy", "matplotlib.rainbow", "matplotlib.figure", "plt.figure.add_subplot", "numpy.sort", "numpy.argsort", "enumerate", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.xlim", "fig.add_subplot.get_position", "fig.add_subplot.set_position", "fig.add_subplot.legend", "matplotlib.savefig", "matplotlib.close", "numpy.linspace", "fig.add_subplot.plot", "len", "indices.cpu().data.numpy.cpu", "idx.cpu().data.numpy.cpu", "min", "min"], "function", ["None"], ["", "def", "topk_visual", "(", "itr", ",", "out_t", ",", "indices", ",", "all_values", ",", "kvalues", ",", "filename", ",", "W_tfidf", ",", "attr_idx", ",", "classlist", ",", "A_", ",", "save_path", ")", ":", "\n", "    ", "indices", ",", "idx", "=", "torch", ".", "sort", "(", "indices", ",", "dim", "=", "0", ")", "\n", "indices", "=", "indices", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ";", "idx", "=", "idx", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "colors", "=", "cm", ".", "rainbow", "(", "np", ".", "linspace", "(", "0", ",", "1", ",", "len", "(", "attr_idx", ")", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "1", ",", "1", ")", "\n", "indices_sorted", "=", "np", ".", "sort", "(", "indices", ",", "0", ")", "\n", "k", "=", "indices", ".", "shape", "[", "0", "]", "\n", "selected_labels", "=", "np", ".", "argsort", "(", "-", "W_tfidf", ")", "\n", "for", "i", ",", "a", "in", "enumerate", "(", "attr_idx", ")", ":", "\n", "# if selected_labels[i] in A_:continue", "\n", "# label=classlist[selected_labels[i]]", "\n", "        ", "label", "=", "classlist", "[", "a", "]", "\n", "x", "=", "indices", "[", "i", "*", "(", "k", "//", "3", ")", ":", "min", "(", "(", "i", "+", "1", ")", "*", "(", "k", "//", "3", ")", ",", "k", ")", ",", "0", "]", "\n", "y", "=", "kvalues", "[", "idx", "[", "i", "*", "(", "k", "//", "3", ")", ":", "min", "(", "(", "i", "+", "1", ")", "*", "(", "k", "//", "3", ")", ",", "k", ")", ",", "0", "]", ",", "0", "]", "\n", "# x=np.linspace(0,out_t-1,out_t)", "\n", "# y =all_values[:,a]", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "'.'", ",", "alpha", "=", "0.8", ",", "color", "=", "colors", "[", "i", "]", ",", "label", "=", "label", ")", "\n", "", "plt", ".", "xlabel", "(", "'Frame Number'", ")", "\n", "plt", ".", "ylabel", "(", "'Full Video Logits'", ")", "\n", "plt", ".", "xlim", "(", "(", "0", ",", "out_t", ")", ")", "\n", "box", "=", "ax", ".", "get_position", "(", ")", "\n", "ax", ".", "set_position", "(", "[", "box", ".", "x0", ",", "box", ".", "y0", ",", "box", ".", "width", "*", "0.8", ",", "box", ".", "height", "]", ")", "\n", "ax", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ",", "ncol", "=", "1", ")", "\n", "plt", ".", "savefig", "(", "save_path", "+", "\"{}_{}.png\"", ".", "format", "(", "filename", ",", "itr", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.HMM_visual": [[328, 345], ["matplotlib.rainbow", "matplotlib.figure", "plt.figure.add_subplot", "enumerate", "fig.add_subplot.get_position", "fig.add_subplot.set_position", "fig.add_subplot.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.xlim", "matplotlib.savefig", "matplotlib.close", "numpy.linspace", "numpy.asarray", "values[].cpu().data.numpy", "fig.add_subplot.plot", "len", "values[].cpu"], "function", ["None"], ["", "def", "HMM_visual", "(", "itr", ",", "out_t", ",", "indices", ",", "values", ",", "filename", ",", "A_", ",", "classlist", ",", "save_path", ")", ":", "\n", "    ", "colors", "=", "cm", ".", "rainbow", "(", "np", ".", "linspace", "(", "0", ",", "1", ",", "len", "(", "A_", ")", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "1", ",", "1", ")", "\n", "for", "i", ",", "a", "in", "enumerate", "(", "A_", ")", ":", "\n", "        ", "label", "=", "classlist", "[", "a", "]", "\n", "x", "=", "np", ".", "asarray", "(", "indices", "[", "a", "]", ")", "\n", "y", "=", "values", "[", "a", "]", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "alpha", "=", "0.8", ",", "color", "=", "colors", "[", "i", "]", ",", "label", "=", "label", ")", "\n", "", "box", "=", "ax", ".", "get_position", "(", ")", "\n", "ax", ".", "set_position", "(", "[", "box", ".", "x0", ",", "box", ".", "y0", ",", "box", ".", "width", "*", "0.8", ",", "box", ".", "height", "]", ")", "\n", "ax", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ",", "ncol", "=", "1", ")", "\n", "plt", ".", "xlabel", "(", "'Frame Number'", ")", "\n", "plt", ".", "ylabel", "(", "'HMM_decoding'", ")", "\n", "plt", ".", "xlim", "(", "(", "0", ",", "out_t", ")", ")", "\n", "plt", ".", "savefig", "(", "save_path", "+", "\"{}_{}.png\"", ".", "format", "(", "filename", ",", "itr", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.attention_visual": [[346, 354], ["matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.savefig", "matplotlib.close"], "function", ["None"], ["", "def", "attention_visual", "(", "itr", ",", "T", ",", "indices", ",", "values", ",", "filename", ",", "save_path", ")", ":", "\n", "    ", "x", "=", "indices", "[", ":", ",", "0", "]", "\n", "y", "=", "values", "[", ":", ",", "0", "]", "\n", "plt", ".", "plot", "(", "x", ",", "y", ",", "'.'", ")", "\n", "plt", ".", "xlabel", "(", "'Frame Number'", ")", "\n", "plt", ".", "ylabel", "(", "'Selected (1/0)'", ")", "\n", "plt", ".", "savefig", "(", "save_path", "+", "\"{}_{}_Attention.png\"", ".", "format", "(", "filename", ",", "itr", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.save_to_file": [[356, 362], ["open", "open.close", "open.write", "str", "str", "numpy.mean"], "function", ["None"], ["", "def", "save_to_file", "(", "attr_k", ",", "classlist", ",", "filename", ")", ":", "\n", "    ", "file1", "=", "open", "(", "filename", ",", "\"w+\"", ")", "\n", "for", "a", "in", "attr_k", ":", "\n", "        ", "file1", ".", "write", "(", "str", "(", "classlist", "[", "a", "]", ")", "+", "\" : \"", "+", "str", "(", "np", ".", "mean", "(", "attr_k", "[", "a", "]", ")", ")", "+", "'\\n'", ")", "\n", "\n", "", "file1", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.topk_visual_test": [[366, 387], ["int", "matplotlib.rainbow", "matplotlib.figure", "plt.figure.add_subplot", "range", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.xlim", "fig.add_subplot.get_position", "fig.add_subplot.set_position", "fig.add_subplot.legend", "matplotlib.savefig", "matplotlib.close", "numpy.sum", "numpy.linspace", "len", "numpy.linspace", "fig.add_subplot.plot"], "function", ["None"], ["", "def", "topk_visual_test", "(", "itr", ",", "out_t", ",", "attr_scores", ",", "all_values", ",", "attr_label", ",", "filename", ",", "classlist", ",", "save_path", ")", ":", "\n", "    ", "I", "=", "int", "(", "np", ".", "sum", "(", "attr_label", ")", ")", "\n", "colors", "=", "cm", ".", "rainbow", "(", "np", ".", "linspace", "(", "0", ",", "1", ",", "I", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "1", ",", "1", ")", "\n", "i", "=", "-", "1", "\n", "for", "a", "in", "range", "(", "len", "(", "attr_label", ")", ")", ":", "\n", "        ", "if", "attr_label", "[", "a", "]", "==", "0", ":", "continue", "\n", "i", "=", "i", "+", "1", "\n", "label", "=", "classlist", "[", "a", "]", "\n", "x", "=", "np", ".", "linspace", "(", "0", ",", "out_t", "-", "1", ",", "out_t", ")", "\n", "y", "=", "all_values", "[", ":", ",", "a", "]", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "'.'", ",", "alpha", "=", "0.8", ",", "color", "=", "colors", "[", "i", "]", ",", "label", "=", "label", ")", "\n", "", "plt", ".", "xlabel", "(", "'Frame Number'", ")", "\n", "plt", ".", "ylabel", "(", "'Full Video Logits'", ")", "\n", "plt", ".", "xlim", "(", "(", "0", ",", "out_t", ")", ")", "\n", "box", "=", "ax", ".", "get_position", "(", ")", "\n", "ax", ".", "set_position", "(", "[", "box", ".", "x0", ",", "box", ".", "y0", ",", "box", ".", "width", "*", "0.8", ",", "box", ".", "height", "]", ")", "\n", "ax", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ",", "ncol", "=", "1", ")", "\n", "plt", ".", "savefig", "(", "save_path", "+", "\"{}_{}.png\"", ".", "format", "(", "filename", ",", "itr", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.video_stage_visual": [[388, 409], ["torch.sort", "torch.sort", "indices.cpu().data.numpy.cpu().data.numpy", "idx.cpu().data.numpy.cpu().data.numpy", "matplotlib.rainbow", "matplotlib.figure", "plt.figure.add_subplot", "range", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.xlim", "fig.add_subplot.get_position", "fig.add_subplot.set_position", "fig.add_subplot.legend", "matplotlib.savefig", "matplotlib.close", "numpy.linspace", "fig.add_subplot.plot", "indices.cpu().data.numpy.cpu", "idx.cpu().data.numpy.cpu", "min", "min"], "function", ["None"], ["", "def", "video_stage_visual", "(", "itr", ",", "indices", ",", "kvalues", ",", "attr_idx", ",", "n_stages", ",", "out_t", ",", "filename", ",", "save_path", ")", ":", "\n", "    ", "indices", ",", "idx", "=", "torch", ".", "sort", "(", "indices", ",", "dim", "=", "0", ")", "\n", "indices", "=", "indices", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ";", "\n", "idx", "=", "idx", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "colors", "=", "cm", ".", "rainbow", "(", "np", ".", "linspace", "(", "0", ",", "1", ",", "n_stages", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "1", ",", "1", ")", "\n", "k", "=", "indices", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "n_stages", ")", ":", "\n", "        ", "label", "=", "\"stage {}\"", ".", "format", "(", "i", "+", "1", ")", "\n", "x", "=", "indices", "[", "i", "*", "(", "k", "//", "3", ")", ":", "min", "(", "(", "i", "+", "1", ")", "*", "(", "k", "//", "3", ")", ",", "k", ")", ",", "attr_idx", "[", "0", "]", "]", "\n", "y", "=", "kvalues", "[", "idx", "[", "i", "*", "(", "k", "//", "3", ")", ":", "min", "(", "(", "i", "+", "1", ")", "*", "(", "k", "//", "3", ")", ",", "k", ")", ",", "0", "]", ",", "attr_idx", "[", "0", "]", "]", "\n", "ax", ".", "plot", "(", "x", ",", "y", ",", "'.'", ",", "alpha", "=", "0.8", ",", "color", "=", "colors", "[", "i", "]", ",", "label", "=", "label", ")", "\n", "", "plt", ".", "xlabel", "(", "'Frame Number'", ")", "\n", "plt", ".", "ylabel", "(", "'Full Video Logits'", ")", "\n", "plt", ".", "xlim", "(", "(", "0", ",", "out_t", ")", ")", "\n", "box", "=", "ax", ".", "get_position", "(", ")", "\n", "ax", ".", "set_position", "(", "[", "box", ".", "x0", ",", "box", ".", "y0", ",", "box", ".", "width", "*", "0.8", ",", "box", ".", "height", "]", ")", "\n", "ax", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ",", "ncol", "=", "1", ")", "\n", "plt", ".", "savefig", "(", "save_path", "+", "\"{}_{}.png\"", ".", "format", "(", "filename", ",", "itr", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.attr_softmax_visual": [[410, 426], ["matplotlib.rainbow", "matplotlib.figure", "plt.figure.add_subplot", "enumerate", "matplotlib.xlabel", "matplotlib.ylabel", "fig.add_subplot.get_position", "fig.add_subplot.set_position", "fig.add_subplot.legend", "matplotlib.savefig", "matplotlib.close", "numpy.linspace", "numpy.argsort", "fig.add_subplot.bar", "data.cpu().data.numpy", "data.cpu"], "function", ["None"], ["", "def", "attr_softmax_visual", "(", "itr", ",", "data", ",", "filename", ",", "classlist", ",", "I", ",", "save_path", ")", ":", "\n", "# plot the scores for the top I attrs", "\n", "    ", "colors", "=", "cm", ".", "rainbow", "(", "np", ".", "linspace", "(", "0", ",", "1", ",", "I", ")", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "10", ")", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "1", ",", "1", ",", "1", ")", "\n", "labels_sorted", "=", "np", ".", "argsort", "(", "-", "data", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ")", "[", "0", ":", "I", "]", "\n", "for", "i", ",", "label", "in", "enumerate", "(", "labels_sorted", ")", ":", "\n", "        ", "ax", ".", "bar", "(", "i", ",", "data", "[", "label", "]", ",", "color", "=", "colors", "[", "i", "]", ",", "width", "=", "0.25", ",", "label", "=", "classlist", "[", "label", "]", ")", "\n", "\n", "", "plt", ".", "xlabel", "(", "'Attribute'", ")", "\n", "plt", ".", "ylabel", "(", "'Softmax Value'", ")", "\n", "box", "=", "ax", ".", "get_position", "(", ")", "\n", "ax", ".", "set_position", "(", "[", "box", ".", "x0", ",", "box", ".", "y0", ",", "box", ".", "width", "*", "0.8", ",", "box", ".", "height", "]", ")", "\n", "ax", ".", "legend", "(", "loc", "=", "'center left'", ",", "bbox_to_anchor", "=", "(", "1", ",", "0.5", ")", ",", "ncol", "=", "1", ")", "\n", "plt", ".", "savefig", "(", "save_path", "+", "\"{}_{}.png\"", ".", "format", "(", "filename", ",", "itr", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.save_predictions": [[428, 434], ["open", "range", "open.close", "len", "open.write"], "function", ["None"], ["", "def", "save_predictions", "(", "filenames", ",", "dish_predicted", ",", "dish_labels", ",", "dish_index2label", ",", "save_path", ")", ":", "\n", "    ", "file1", "=", "open", "(", "save_path", ",", "\"w+\"", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "filenames", ")", ")", ":", "\n", "        ", "f", "=", "filenames", "[", "i", "]", ";", "p", "=", "dish_predicted", "[", "i", "]", ";", "y", "=", "dish_labels", "[", "i", "]", "\n", "file1", ".", "write", "(", "f", "+", "\"***\"", "+", "dish_index2label", "[", "p", "]", "+", "\"***\"", "+", "dish_index2label", "[", "y", "]", "+", "'\\n'", ")", "\n", "", "file1", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.utils.find_attr_stage_relation": [[436, 458], ["numpy.zeros", "print", "print", "len", "numpy.sum", "range", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "find_attr_stage_relation", "(", "attr", ",", "dish_label", ",", "dataset", ",", "n_stages", "=", "3", ")", ":", "\n", "    ", "dishes", ",", "frame_level_gt", ",", "classlist", ",", "testidx", "=", "dataset", ".", "dish_labels", ",", "dataset", ".", "frame_level_gt", ",", "dataset", ".", "index2label", ",", "dataset", ".", "testidx", "\n", "attr_label", "=", "classlist", "[", "attr", "]", "\n", "attr_freq_per_stage", "=", "np", ".", "zeros", "(", "[", "n_stages", "]", ")", "\n", "relavent_vid_count", "=", "0", "\n", "for", "v", "in", "testidx", ":", "\n", "        ", "out_t", "=", "len", "(", "frame_level_gt", "[", "v", "]", ")", "\n", "attr_total_frames", "=", "np", ".", "sum", "(", "frame_level_gt", "[", "v", "]", "==", "attr", ")", "\n", "if", "attr_total_frames", "==", "0", ":", "continue", "\n", "if", "dishes", "[", "v", "]", "[", "0", "]", "!=", "dish_label", ":", "continue", "\n", "relavent_vid_count", "+=", "1", "\n", "for", "q", "in", "range", "(", "n_stages", ")", ":", "\n", "            ", "d", "=", "out_t", "//", "n_stages", "\n", "begin", "=", "q", "*", "d", ";", "\n", "end", "=", "(", "q", "+", "1", ")", "*", "d", "\n", "if", "0.50", "<", "np", ".", "sum", "(", "attr", "==", "frame_level_gt", "[", "v", "]", "[", "begin", ":", "end", "]", ")", "/", "attr_total_frames", ":", "\n", "                ", "attr_freq_per_stage", "[", "q", "]", "=", "attr_freq_per_stage", "[", "q", "]", "+", "1", "\n", "\n", "# assert np.sum(attr_freq_per_stage)==relavent_vid_count", "\n", "", "", "", "attr_freq_per_stage", "=", "attr_freq_per_stage", "/", "np", ".", "sum", "(", "attr_freq_per_stage", ")", "\n", "print", "(", "\"Frequency per stage for attribute {} :\"", ".", "format", "(", "attr_label", ")", ")", "\n", "print", "(", "attr_freq_per_stage", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.__init__": [[5, 8], ["None"], "methods", ["None"], ["   ", "def", "__init__", "(", "self", ",", "index2label", ",", "dish_index2label", ")", ":", "\n", "       ", "self", ".", "index2label", "=", "index2label", "\n", "self", ".", "dish_index2label", "=", "dish_index2label", "\n", "", "def", "eval_fn", "(", "self", ",", "filenames", ",", "predictions", ",", "gt", ",", "predicted_dish", ",", "gt_dish", ")", ":", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.eval_fn": [[8, 13], ["utils_folder.metrics.ComputeMetrics", "Evaluation.Evaluation.metrics.video_level_mAP", "Evaluation.Evaluation.metrics.dish_acc_direct", "print"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.video_level_mAP", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.dish_acc_direct"], ["", "def", "eval_fn", "(", "self", ",", "filenames", ",", "predictions", ",", "gt", ",", "predicted_dish", ",", "gt_dish", ")", ":", "\n", "      ", "self", ".", "metrics", "=", "ComputeMetrics", "(", "self", ".", "index2label", ",", "self", ".", "dish_index2label", ",", "filenames", ",", "predictions", ",", "gt", ",", "predicted_dish", ",", "gt_dish", ")", "\n", "self", ".", "mAP", "=", "self", ".", "metrics", ".", "video_level_mAP", "(", ")", "\n", "self", ".", "dish_acc", "=", "self", ".", "metrics", ".", "dish_acc_direct", "(", ")", "\n", "print", "(", "'Dish accuracy is : %f'", "%", "self", ".", "dish_acc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.dish_mAP": [[14, 17], ["Evaluation.Evaluation.metrics.dish_mAP", "print", "numpy.asarray", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.dish_mAP"], ["", "def", "dish_mAP", "(", "self", ",", "predicted_dish_vec", ",", "gt_dish_vec", ")", ":", "\n", "      ", "self", ".", "dish_mAP", "=", "self", ".", "metrics", ".", "dish_mAP", "(", "np", ".", "asarray", "(", "predicted_dish_vec", ")", ",", "np", ".", "asarray", "(", "gt_dish_vec", ")", ")", "\n", "print", "(", "'Dish mAP is : %f'", "%", "self", ".", "dish_mAP", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.multi_logit_dish_report": [[18, 26], ["print", "Evaluation.Evaluation.metrics.one_logit_dish_report", "Evaluation.Evaluation.metrics.two_logit_dish_report", "Evaluation.Evaluation.metrics.three_logit_dish_report"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.one_logit_dish_report", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.two_logit_dish_report", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.three_logit_dish_report"], ["", "def", "multi_logit_dish_report", "(", "self", ",", "filenames", ",", "logits1", ",", "logits2", ",", "logits3", ",", "logits_total", ",", "N", ")", ":", "\n", "      ", "if", "N", "==", "1", ":", "\n", "         ", "self", ".", "best_case_dish_acc", "=", "self", ".", "metrics", ".", "one_logit_dish_report", "(", "filenames", ",", "logits_total", ")", "\n", "", "if", "N", "==", "2", ":", "\n", "         ", "self", ".", "best_case_dish_acc", "=", "self", ".", "metrics", ".", "two_logit_dish_report", "(", "filenames", ",", "logits1", ",", "logits2", ",", "logits_total", ")", "\n", "", "if", "N", "==", "3", ":", "\n", "         ", "self", ".", "best_case_dish_acc", "=", "self", ".", "metrics", ".", "three_logit_dish_report", "(", "filenames", ",", "logits1", ",", "logits2", ",", "logits3", ",", "logits_total", ")", "\n", "", "print", "(", "'Best case dish accuracy : %f'", "%", "self", ".", "best_case_dish_acc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.per_dish_acc": [[27, 29], ["Evaluation.Evaluation.metrics.per_dish_acc"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.per_dish_acc"], ["", "def", "per_dish_acc", "(", "self", ",", "predicted_dish", ")", ":", "\n", "      ", "self", ".", "metrics", ".", "per_dish_acc", "(", "predicted_dish", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.None.Evaluation.Evaluation.per_dish_stage_acc": [[30, 32], ["Evaluation.Evaluation.metrics.per_dish_stage_acc"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.per_dish_stage_acc"], ["", "def", "per_dish_stage_acc", "(", "self", ",", "filenames", ",", "logits1", ",", "logits2", ",", "logits3", ",", "logits_total", ",", "n_dishes", ")", ":", "\n", "      ", "self", ".", "metrics", ".", "per_dish_stage_acc", "(", "filenames", ",", "logits1", ",", "logits2", ",", "logits3", ",", "logits_total", ",", "n_dishes", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.save_annotation": [[10, 14], ["print", "open", "pickle.dump"], "methods", ["None"], ["    ", "def", "save_annotation", "(", "self", ",", "file", ")", ":", "\n", "        ", "with", "open", "(", "file", ",", "\"wb\"", ")", "as", "fp", ":", "\n", "            ", "pickle", ".", "dump", "(", "self", ".", "final_annot", ",", "fp", ")", "\n", "", "print", "(", "\"annotations saved to the disk\"", ")", "\n", "", "def", "load_annotation", "(", "self", ",", "file", ")", ":", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.load_annotation": [[14, 18], ["print", "open", "pickle.load"], "methods", ["None"], ["", "def", "load_annotation", "(", "self", ",", "file", ")", ":", "\n", "        ", "with", "open", "(", "file", ",", "\"rb\"", ")", "as", "fp", ":", "# Pickling", "\n", "            ", "self", ".", "final_annot", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "print", "(", "\"annotations loaded from the disk\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.calculate_pca": [[19, 34], ["enumerate", "print", "numpy.transpose", "sklearn.decomposition.PCA", "sklearn.decomposition.PCA.fit", "numpy.concatenate"], "methods", ["None"], ["", "def", "calculate_pca", "(", "self", ",", "final_annot", ",", "Ncomponents", ",", "mode", ")", ":", "\n", "        ", "for", "i", ",", "video", "in", "enumerate", "(", "final_annot", ")", ":", "\n", "            ", "if", "mode", "==", "'rgb'", ":", "\n", "                ", "feat", "=", "video", "[", "3", "]", "\n", "", "if", "mode", "==", "'flow'", ":", "\n", "                ", "feat", "=", "video", "[", "4", "]", "\n", "", "if", "i", "==", "0", ":", "\n", "                ", "all_feat", "=", "feat", "\n", "", "else", ":", "\n", "                ", "all_feat", "=", "np", ".", "concatenate", "(", "[", "all_feat", ",", "feat", "]", ",", "axis", "=", "-", "1", ")", "\n", "", "", "print", "(", "\"size is: {}\"", ".", "format", "(", "all_feat", ".", "shape", ")", ")", "\n", "all_feat", "=", "np", ".", "transpose", "(", "all_feat", ")", "\n", "pca", "=", "PCA", "(", "n_components", "=", "Ncomponents", ")", "\n", "pca", ".", "fit", "(", "all_feat", ")", "\n", "return", "pca", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.apply_pca": [[35, 39], ["enumerate", "numpy.transpose", "numpy.transpose", "pca_rgb.transform", "pca_flow.transform", "numpy.transpose", "numpy.transpose"], "methods", ["None"], ["", "def", "apply_pca", "(", "self", ",", "samples", ",", "pca_rgb", ",", "pca_flow", ")", ":", "\n", "        ", "for", "i", ",", "video", "in", "enumerate", "(", "samples", ")", ":", "\n", "            ", "samples", "[", "i", "]", "[", "3", "]", "=", "np", ".", "transpose", "(", "pca_rgb", ".", "transform", "(", "np", ".", "transpose", "(", "samples", "[", "i", "]", "[", "3", "]", ")", ")", ")", "\n", "samples", "[", "i", "]", "[", "4", "]", "=", "np", ".", "transpose", "(", "pca_flow", ".", "transform", "(", "np", ".", "transpose", "(", "samples", "[", "i", "]", "[", "4", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.ignore_repetition": [[40, 52], ["numpy.asarray", "numpy.where", "len", "numpy.sum", "numpy.asarray", "numpy.append"], "methods", ["None"], ["", "", "def", "ignore_repetition", "(", "self", ",", "actions", ")", ":", "\n", "        ", "actions", "=", "np", ".", "asarray", "(", "actions", ")", "\n", "temp", "=", "actions", "[", "1", ":", "]", "-", "actions", "[", "0", ":", "-", "1", "]", "\n", "idx", "=", "np", ".", "where", "(", "temp", "!=", "0", ")", "\n", "if", "np", ".", "sum", "(", "idx", ")", "==", "0", ":", "\n", "            ", "u_action", "=", "np", ".", "asarray", "(", "[", "actions", "[", "-", "1", "]", "]", ")", "\n", "return", "u_action", "\n", "", "u_action", "=", "actions", "[", "idx", "]", "\n", "if", "len", "(", "actions", "!=", "0", ")", ":", "\n", "            ", "u_action", "=", "np", ".", "append", "(", "u_action", ",", "actions", "[", "-", "1", "]", ")", "\n", "\n", "", "return", "u_action", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.pack_data": [[55, 72], ["read_breakfast_dataset.Breakfast_Dataset.final_annot.append", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append", "list", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append", "read_breakfast_dataset.Breakfast_Dataset.final_annot[].append"], "methods", ["None"], ["", "def", "pack_data", "(", "self", ",", "v", ",", "data", ")", ":", "\n", "        ", "[", "video_name", ",", "gt", ",", "transcripts", ",", "features", ",", "attributes", ",", "dish", ",", "attribute_transcript", ",", "intervals", "]", "=", "data", "\n", "self", ".", "final_annot", ".", "append", "(", "[", "video_name", "]", ")", "\n", "if", "self", ".", "feature_type", "==", "\"i3d\"", ":", "\n", "            ", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "gt", ")", "\n", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "transcripts", ")", "\n", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "features", "[", "0", "]", ")", "\n", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "features", "[", "1", "]", ")", "\n", "", "elif", "self", ".", "feature_type", "==", "'idt'", ":", "\n", "            ", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "gt", ")", "\n", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "transcripts", ")", "\n", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "features", "[", "0", "]", ")", "\n", "\n", "", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "list", "(", "attributes", ")", ")", "\n", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "dish", ")", "\n", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "attribute_transcript", ")", "\n", "self", ".", "final_annot", "[", "v", "]", ".", "append", "(", "intervals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.read_data": [[73, 173], ["enumerate", "range", "numpy.repeat", "enumerate", "set", "enumerate", "read_breakfast_dataset.Breakfast_Dataset.pack_data", "open", "f.readlines", "len", "lines[].split", "open", "len", "intervals[].append", "open", "len", "enumerate", "len", "len", "len", "numpy.load", "numpy.load", "f.read().split", "f.read().split", "transcripts[].append", "attribute_segments.append", "set.add", "set.add", "attribute_segments.append", "set.add", "video.split", "video.split", "dataset_attributes.append", "dataset_attributes.append", "dataset_attributes.append", "f.read", "intervals[].append", "f.read", "len"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.pack_data"], ["", "def", "read_data", "(", "self", ",", "path", ",", "extended", "=", "False", ")", ":", "\n", "        ", "self", ".", "attr_classlist", "=", "{", "}", "\n", "attr_ind", "=", "-", "1", "\n", "if", "extended", ":", "\n", "            ", "index2attr", "=", "{", "}", "\n", "with", "open", "(", "path", "+", "'attributes2.txt'", ")", "as", "f", ":", "\n", "                ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "lines", ")", ")", ":", "\n", "                ", "pieces", "=", "lines", "[", "i", "]", ".", "split", "(", "' '", ")", "\n", "index2attr", "[", "i", "]", "=", "[", "pieces", "[", "1", "]", ",", "pieces", "[", "2", "]", "[", ":", "-", "1", "]", "]", "\n", "\n", "", "", "features", "=", "{", "}", "\n", "transcripts", "=", "{", "}", "\n", "gt", "=", "{", "}", "\n", "intervals", "=", "{", "}", "\n", "attributes", "=", "{", "}", "\n", "dish", "=", "{", "}", "\n", "attribute_transcript", "=", "{", "}", "\n", "dataset_attributes", "=", "[", "]", "\n", "for", "v", ",", "video", "in", "enumerate", "(", "self", ".", "all_vids", ")", ":", "#iterate through videos", "\n", "# video features", "\n", "            ", "if", "self", ".", "feature_type", "==", "'idt'", ":", "\n", "\n", "                ", "features", "[", "video", "]", "=", "[", "np", ".", "load", "(", "path", "+", "'/idt/features/'", "+", "video", "+", "'.npy'", ")", "]", "\n", "", "elif", "self", ".", "feature_type", "==", "'i3d'", ":", "\n", "                ", "all_feat", "=", "np", ".", "load", "(", "path", "+", "'/i3d/features/'", "+", "video", "+", "'.npy'", ")", "\n", "features", "[", "video", "]", "=", "[", "all_feat", "[", ":", "1024", "]", ",", "all_feat", "[", "1024", ":", "]", "]", "\n", "\n", "# read ground truth", "\n", "", "intervals", "[", "video", "]", "=", "[", "]", "\n", "gt_file", "=", "path", "+", "'/groundTruth/'", "+", "video", "+", "'.txt'", "\n", "with", "open", "(", "gt_file", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "groundtruth_str", "=", "f", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "[", "0", ":", "-", "1", "]", "\n", "", "gt_frames", "=", "np", ".", "repeat", "(", "0", ",", "len", "(", "groundtruth_str", ")", ")", "\n", "for", "i", ",", "lbl", "in", "enumerate", "(", "groundtruth_str", ")", ":", "# iterate through frames", "\n", "                ", "gt_frames", "[", "i", "]", "=", "self", ".", "label2index", "[", "lbl", "]", "\n", "if", "i", "==", "0", ":", "\n", "                    ", "start", "=", "0", "\n", "", "else", ":", "\n", "                    ", "if", "gt_frames", "[", "i", "-", "1", "]", "!=", "gt_frames", "[", "i", "]", ":", "\n", "                        ", "end", "=", "i", "-", "1", "\n", "if", "groundtruth_str", "[", "i", "-", "1", "]", "!=", "'SIL'", ":", "intervals", "[", "video", "]", ".", "append", "(", "[", "start", ",", "end", "]", ")", "\n", "start", "=", "i", "\n", "", "", "", "end", "=", "i", "\n", "if", "lbl", "!=", "'SIL'", ":", "intervals", "[", "video", "]", ".", "append", "(", "[", "start", ",", "end", "]", ")", "\n", "gt", "[", "video", "]", "=", "gt_frames", "\n", "\n", "\n", "# transcript", "\n", "transcripts", "[", "video", "]", "=", "[", "]", "\n", "with", "open", "(", "path", "+", "'/transcripts/'", "+", "video", "+", "'.txt'", ")", "as", "f", ":", "\n", "                ", "n_segments_wo_bg", "=", "len", "(", "intervals", "[", "video", "]", ")", "\n", "t_lines", "=", "f", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "[", "0", ":", "-", "1", "]", "\n", "for", "l", ",", "line", "in", "enumerate", "(", "t_lines", ")", ":", "\n", "                    ", "if", "l", "!=", "0", ":", "\n", "                        ", "if", "t_lines", "[", "l", "-", "1", "]", "==", "t_lines", "[", "l", "]", ":", "continue", "# skip consecutive repeated action labels", "\n", "", "if", "len", "(", "transcripts", "[", "video", "]", ")", ">", "n_segments_wo_bg", "and", "line", "!=", "'SIL'", ":", "# for the cases where the frame level annotations and transcript do not match", "\n", "                        ", "break", "\n", "", "transcripts", "[", "video", "]", ".", "append", "(", "self", ".", "label2index", "[", "line", "]", ")", "\n", "\n", "\n", "\n", "# attributes", "\n", "", "", "attribute_set", "=", "set", "(", ")", "\n", "attribute_segments", "=", "[", "]", "\n", "for", "j", ",", "ind", "in", "enumerate", "(", "transcripts", "[", "video", "]", ")", ":", "\n", "                ", "if", "ind", "==", "0", ":", "continue", "\n", "if", "extended", ":", "\n", "                    ", "if", "index2attr", "[", "ind", "]", "[", "0", "]", "not", "in", "dataset_attributes", ":", "\n", "                        ", "attr_ind", "+=", "1", "\n", "dataset_attributes", ".", "append", "(", "index2attr", "[", "ind", "]", "[", "0", "]", ")", "\n", "self", ".", "attr_classlist", "[", "attr_ind", "]", "=", "index2attr", "[", "ind", "]", "[", "0", "]", "\n", "", "if", "index2attr", "[", "ind", "]", "[", "1", "]", "not", "in", "dataset_attributes", ":", "\n", "                        ", "attr_ind", "+=", "1", "\n", "dataset_attributes", ".", "append", "(", "index2attr", "[", "ind", "]", "[", "1", "]", ")", "\n", "self", ".", "attr_classlist", "[", "attr_ind", "]", "=", "index2attr", "[", "ind", "]", "[", "1", "]", "\n", "", "attribute_segments", ".", "append", "(", "[", "index2attr", "[", "ind", "]", "[", "0", "]", ",", "index2attr", "[", "ind", "]", "[", "1", "]", "]", ")", "\n", "attribute_set", ".", "add", "(", "index2attr", "[", "ind", "]", "[", "0", "]", ")", ";", "attribute_set", ".", "add", "(", "index2attr", "[", "ind", "]", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                    ", "if", "self", ".", "index2label", "[", "ind", "]", "not", "in", "dataset_attributes", ":", "\n", "                        ", "attr_ind", "+=", "1", "\n", "self", ".", "attr_classlist", "[", "attr_ind", "]", "=", "self", ".", "index2label", "[", "ind", "]", "\n", "dataset_attributes", ".", "append", "(", "self", ".", "index2label", "[", "ind", "]", ")", "\n", "", "attribute_segments", ".", "append", "(", "[", "self", ".", "index2label", "[", "ind", "]", "]", ")", "\n", "attribute_set", ".", "add", "(", "self", ".", "index2label", "[", "ind", "]", ")", "\n", "\n", "", "", "attribute_transcript", "[", "video", "]", "=", "attribute_segments", "\n", "attributes", "[", "video", "]", "=", "attribute_set", "\n", "assert", "len", "(", "intervals", "[", "video", "]", ")", "==", "len", "(", "attribute_transcript", "[", "video", "]", ")", ",", "video", "\n", "assert", "features", "[", "video", "]", "[", "0", "]", ".", "shape", "[", "1", "]", "==", "len", "(", "gt", "[", "video", "]", ")", ",", "video", "\n", "\n", "#dish", "\n", "if", "video", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", "==", "\"scrambledegg\"", ":", "\n", "                ", "dish_str", "=", "\"friedegg\"", "\n", "", "else", ":", "\n", "                ", "dish_str", "=", "video", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", "\n", "", "dish", "[", "video", "]", "=", "dish_str", "\n", "\n", "data", "=", "[", "video", ",", "gt", "[", "video", "]", ",", "transcripts", "[", "video", "]", ",", "features", "[", "video", "]", ",", "attributes", "[", "video", "]", ",", "dish", "[", "video", "]", ",", "attribute_transcript", "[", "video", "]", ",", "intervals", "[", "video", "]", "]", "\n", "self", ".", "pack_data", "(", "v", ",", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.split_data": [[175, 190], ["enumerate", "numpy.asarray", "subset_.append", "training.append", "subset_.append", "test.append"], "methods", ["None"], ["", "", "def", "split_data", "(", "self", ",", "training_names", ",", "test_names", ")", ":", "\n", "        ", "test", "=", "[", "]", "\n", "training", "=", "[", "]", "\n", "subset_", "=", "[", "]", "\n", "for", "x", ",", "vid", "in", "enumerate", "(", "self", ".", "final_annot", ")", ":", "\n", "            ", "query", "=", "vid", "[", "0", "]", "\n", "if", "query", "in", "training_names", ":", "\n", "                ", "subset_", ".", "append", "(", "\"training\"", ")", "\n", "training", ".", "append", "(", "vid", ")", "\n", "", "elif", "query", "in", "test_names", ":", "\n", "                ", "subset_", ".", "append", "(", "\"test\"", ")", "\n", "test", ".", "append", "(", "vid", ")", "\n", "\n", "", "", "subset", "=", "np", ".", "asarray", "(", "subset_", ",", "dtype", "=", "np", ".", "bytes_", ")", "\n", "return", "training", ",", "test", ",", "subset", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.__init__": [[192, 247], ["print", "read_breakfast_dataset.Breakfast_Dataset.all_vids.sort", "dict", "dict", "read_breakfast_dataset.Breakfast_Dataset.read_data", "len", "len", "print", "print", "print", "print", "read_breakfast_dataset.Breakfast_Dataset.split_data", "open", "open", "f.readlines", "int", "open", "len", "open", "open", "read_breakfast_dataset.Breakfast_Dataset.calculate_pca", "read_breakfast_dataset.Breakfast_Dataset.calculate_pca", "read_breakfast_dataset.Breakfast_Dataset.apply_pca", "print", "print", "f.read().split", "f.read().split", "int", "f.read().split", "f.read().split", "len", "len", "int", "line.split", "line.split", "line.split", "f.read", "f.read", "line.split", "int", "f.read", "f.read", "line.split", "line.split", "line.split", "line.split"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.read_data", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.split_data", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.calculate_pca", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.calculate_pca", "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.apply_pca"], ["", "def", "__init__", "(", "self", ",", "path", ",", "split", ",", "extended", "=", "False", ",", "pca_used", "=", "False", ",", "feature_type", "=", "\"i3d\"", ")", ":", "\n", "        ", "print", "(", "\"feature type chosen is: {}\"", ".", "format", "(", "feature_type", ")", ")", "\n", "print", "\n", "if", "feature_type", "==", "'i3d'", ":", "\n", "            ", "if", "pca_used", ":", "\n", "                ", "print", "(", "\"PCA is on\"", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"PCA is off\"", ")", "\n", "", "", "print", "\n", "self", ".", "feature_type", "=", "feature_type", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "pca_used", "=", "pca_used", "\n", "self", ".", "final_annot", "=", "[", "]", "\n", "\n", "with", "open", "(", "path", "+", "'all_videos'", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "self", ".", "all_vids", "=", "f", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "[", "0", ":", "-", "1", "]", "\n", "\n", "", "self", ".", "dish_classlist", "=", "{", "}", "\n", "self", ".", "dish_label2index", "=", "{", "}", "\n", "with", "open", "(", "path", "+", "'CompositeActions.txt'", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "lines", "=", "f", ".", "readlines", "(", ")", "\n", "", "for", "line", "in", "lines", ":", "\n", "            ", "self", ".", "dish_classlist", "[", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "0", "]", ")", "]", "=", "line", ".", "split", "(", "' '", ")", "[", "1", "]", "[", ":", "-", "1", "]", "\n", "self", ".", "dish_label2index", "[", "line", ".", "split", "(", "' '", ")", "[", "1", "]", "[", ":", "-", "1", "]", "]", "=", "int", "(", "line", ".", "split", "(", "' '", ")", "[", "0", "]", ")", "\n", "\n", "", "self", ".", "all_vids", ".", "sort", "(", ")", "\n", "self", ".", "index2label", "=", "dict", "(", ")", "\n", "self", ".", "label2index", "=", "dict", "(", ")", "\n", "with", "open", "(", "path", "+", "'mapping.txt'", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "content", "=", "f", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "[", "0", ":", "-", "1", "]", "\n", "for", "line", "in", "content", ":", "\n", "                ", "self", ".", "label2index", "[", "line", ".", "split", "(", ")", "[", "1", "]", "]", "=", "int", "(", "line", ".", "split", "(", ")", "[", "0", "]", ")", "\n", "self", ".", "index2label", "[", "int", "(", "line", ".", "split", "(", ")", "[", "0", "]", ")", "]", "=", "line", ".", "split", "(", ")", "[", "1", "]", "\n", "\n", "", "", "self", ".", "read_data", "(", "path", ",", "extended", "=", "extended", ")", "\n", "self", ".", "nActions_wo_bg", "=", "len", "(", "self", ".", "index2label", ")", "-", "1", "\n", "self", ".", "nDishes", "=", "len", "(", "self", ".", "dish_classlist", ")", "\n", "self", ".", "nAttributes", "=", "len", "(", "self", ".", "attr_classlist", ")", "\n", "print", "(", "\"Total number of fine-grained actions w/o bg is {}\"", ".", "format", "(", "self", ".", "nActions_wo_bg", ")", ")", "\n", "print", "(", "\"Total number of dishes is {}\"", ".", "format", "(", "self", ".", "nDishes", ")", ")", "\n", "print", "(", "\"Total number of attributes is {}\"", ".", "format", "(", "self", ".", "nAttributes", ")", ")", "\n", "\n", "with", "open", "(", "path", "+", "'split{}.train'", ".", "format", "(", "split", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "training_files", "=", "f", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "[", "0", ":", "-", "1", "]", "\n", "", "with", "open", "(", "path", "+", "'split{}.test'", ".", "format", "(", "split", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "test_files", "=", "f", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "[", "0", ":", "-", "1", "]", "\n", "", "print", "(", "\"There are {} training and {} test videos\"", ".", "format", "(", "len", "(", "training_files", ")", ",", "len", "(", "test_files", ")", ")", ")", "\n", "self", ".", "train", ",", "self", ".", "test", ",", "self", ".", "subset", "=", "self", ".", "split_data", "(", "training_files", ",", "test_files", ")", "\n", "if", "self", ".", "pca_used", "and", "self", ".", "feature_type", "==", "\"i3d\"", ":", "\n", "#self.load_annotation(path+\"i3d/final_annot_i3d_{}.txt\".format(split))", "\n", "            ", "pca_rgb", "=", "self", ".", "calculate_pca", "(", "self", ".", "train", ",", "128", ",", "'rgb'", ")", "\n", "pca_flow", "=", "self", ".", "calculate_pca", "(", "self", ".", "train", ",", "128", ",", "'flow'", ")", "\n", "self", ".", "apply_pca", "(", "self", ".", "final_annot", ",", "pca_rgb", ",", "pca_flow", ")", "\n", "# self.save_annotation(path+\"i3d/final_annot_i3d_{}.txt\".format(split))", "\n", "", "print", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.__init__": [[9, 20], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "ind2label", ",", "dish_ind2label", ",", "filenames", ",", "vl_predicted", ",", "vl_gt", ",", "predicted_dish", "=", "None", ",", "gt_dish", "=", "None", ",", "gt", "=", "None", ",", "predicted", "=", "None", ",", "bg_class", "=", "0", ")", ":", "\n", "        ", "self", ".", "filenames", "=", "filenames", "\n", "self", ".", "gt", "=", "gt", "\n", "self", ".", "predicted", "=", "predicted", "\n", "self", ".", "bg_class", "=", "bg_class", "\n", "self", ".", "predicted_dish", "=", "predicted_dish", "\n", "self", ".", "gt_dish", "=", "gt_dish", "\n", "self", ".", "vl_predicted", "=", "vl_predicted", "\n", "self", ".", "vl_gt", "=", "vl_gt", "\n", "self", ".", "index2label", "=", "ind2label", "##including the bg as label 0", "\n", "self", ".", "dish_ind2label", "=", "dish_ind2label", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.acc": [[22, 38], ["type", "range", "metrics.ComputeMetrics.vid_acc.append", "metrics.ComputeMetrics.acc.acc_"], "methods", ["None"], ["", "def", "acc", "(", "self", ")", ":", "\n", "        ", "def", "acc_", "(", "p", ",", "y", ")", ":", "\n", "            ", "return", "np", ".", "mean", "(", "p", "==", "y", ")", "*", "100", "\n", "", "self", ".", "vid_acc", "=", "[", "]", "\n", "self", ".", "frame_acc", "=", "{", "}", "\n", "if", "type", "(", "self", ".", "predicted", ")", "==", "list", ":", "\n", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "predicted", ")", ")", ":", "\n", "# assert len(self.gt[i])==len(self.predicted[i]),\"video index {}\".format(i)", "\n", "                ", "self", ".", "vid_acc", ".", "append", "(", "np", ".", "mean", "(", "self", ".", "predicted", "[", "i", "]", "==", "self", ".", "gt", "[", "i", "]", ")", ")", "\n", "self", ".", "frame_acc", "[", "self", ".", "filenames", "[", "i", "]", "]", "=", "self", ".", "gt", "[", "i", "]", "==", "self", ".", "predicted", "[", "i", "]", "\n", "", "return", "np", ".", "mean", "(", "self", ".", "vid_acc", ")", "*", "100", "\n", "", "else", ":", "\n", "            ", "assert", "len", "(", "self", ".", "gt", ")", "==", "len", "(", "self", ".", "predicted", ")", "\n", "self", ".", "vid_acc", ".", "append", "(", "acc_", "(", "self", ".", "predicted", ",", "self", ".", "gt", ")", ")", "\n", "return", "acc_", "(", "self", ".", "predicted", ",", "self", ".", "gt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.dish_acc_indirect": [[40, 76], ["numpy.asarray", "numpy.where", "len", "metrics.ComputeMetrics.dish_acc_indirect.ignore_repetition"], "methods", ["home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.read_breakfast_dataset.Breakfast_Dataset.ignore_repetition"], ["", "", "def", "dish_acc_indirect", "(", "self", ")", ":", "\n", "\n", "        ", "def", "ignore_repetition", "(", "actions", ")", ":", "\n", "            ", "actions", "=", "np", ".", "asarray", "(", "actions", ")", "\n", "temp", "=", "actions", "[", "1", ":", "]", "-", "actions", "[", "0", ":", "-", "1", "]", "\n", "idx", "=", "np", ".", "where", "(", "temp", "!=", "0", ")", "\n", "if", "np", ".", "sum", "(", "idx", ")", "==", "0", ":", "\n", "                ", "u_action", "=", "np", ".", "asarray", "(", "[", "actions", "[", "-", "1", "]", "]", ")", "\n", "return", "u_action", "\n", "", "u_action", "=", "actions", "[", "idx", "]", "\n", "if", "len", "(", "actions", "!=", "0", ")", ":", "\n", "                ", "u_action", "=", "np", ".", "append", "(", "u_action", ",", "actions", "[", "-", "1", "]", ")", "\n", "\n", "", "return", "u_action", "\n", "", "def", "dish_acc_", "(", "p", ",", "y", ",", "bg", ")", ":", "\n", "            ", "correct", "=", "0", "\n", "total", "=", "0", "\n", "recognized_video_level", "=", "ignore_repetition", "(", "p", ")", "\n", "ground_truth_video_level", "=", "ignore_repetition", "(", "y", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "recognized_video_level", ")", ")", ":", "\n", "                ", "if", "(", "recognized_video_level", "[", "i", "]", "in", "ground_truth_video_level", ")", "and", "recognized_video_level", "[", "i", "]", "!=", "bg", ":", "\n", "                    ", "correct", "+=", "1", "\n", "", "if", "(", "recognized_video_level", "[", "i", "]", "!=", "bg", ")", ":", "\n", "                    ", "total", "+=", "1", "\n", "\n", "", "", "if", "correct", "/", "total", "<", "0.50", ":", "\n", "                ", "return", "0", "\n", "", "else", ":", "\n", "                ", "return", "1", "\n", "\n", "\n", "\n", "", "", "if", "type", "(", "self", ".", "predicted", ")", "==", "list", ":", "\n", "            ", "return", "np", ".", "mean", "(", "[", "dish_acc_", "(", "self", ".", "predicted", "[", "i", "]", ",", "self", ".", "gt", "[", "i", "]", ",", "self", ".", "bg_class", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "predicted", ")", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "dish_acc_", "(", "self", ".", "predicted", ",", "self", ".", "gt", ",", "self", ".", "bg_class", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.dish_acc_direct": [[80, 95], ["print", "type", "numpy.mean", "metrics.ComputeMetrics.dish_acc_indirect.dish_acc_"], "methods", ["None"], ["", "", "def", "dish_acc_direct", "(", "self", ")", ":", "\n", "\n", "        ", "def", "dish_acc_", "(", "p", ",", "y", ")", ":", "\n", "            ", "if", "p", "==", "y", ":", "\n", "# print(\"+ \"+self.dish_ind2label[p])", "\n", "                ", "return", "1", "\n", "", "else", ":", "\n", "# print(\"- \" + self.dish_ind2label[p]+\" / true: \"+self.dish_ind2label[y])", "\n", "                ", "return", "0", "\n", "\n", "", "", "print", "(", "\"{} different dishes predicted\"", ".", "format", "(", "len", "(", "set", "(", "self", ".", "predicted_dish", ")", ")", ")", ")", "\n", "if", "type", "(", "self", ".", "predicted_dish", ")", "==", "list", ":", "\n", "            ", "return", "np", ".", "mean", "(", "[", "dish_acc_", "(", "self", ".", "predicted_dish", "[", "i", "]", ",", "self", ".", "gt_dish", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "predicted_dish", ")", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "dish_acc_", "(", "self", ".", "predicted_dish", ",", "self", ".", "gt_dish", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.per_dish_acc": [[97, 109], ["print", "numpy.zeros", "numpy.zeros", "range", "range", "print", "len", "len", "print", "len", "len"], "methods", ["None"], ["", "", "def", "per_dish_acc", "(", "self", ",", "predicted_dish", ")", ":", "\n", "        ", "print", "(", "\" \"", ")", "\n", "tp", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "dish_ind2label", ")", "]", ")", "\n", "fp", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "dish_ind2label", ")", "]", ")", "\n", "for", "v", "in", "range", "(", "len", "(", "predicted_dish", ")", ")", ":", "\n", "            ", "if", "predicted_dish", "[", "v", "]", "==", "self", ".", "gt_dish", "[", "v", "]", ":", "\n", "                ", "tp", "[", "self", ".", "gt_dish", "[", "v", "]", "]", "+=", "1", "\n", "", "else", ":", "\n", "                ", "fp", "[", "self", ".", "gt_dish", "[", "v", "]", "]", "+=", "1", "\n", "", "", "for", "c", "in", "range", "(", "len", "(", "self", ".", "dish_ind2label", ")", ")", ":", "\n", "            ", "print", "(", "\"{} : {}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "c", "]", ",", "tp", "[", "c", "]", "/", "(", "tp", "[", "c", "]", "+", "fp", "[", "c", "]", ")", ")", ")", "\n", "", "print", "(", "\" \"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.acc_wo_bg": [[114, 130], ["type", "range", "numpy.mean", "metrics.ComputeMetrics.vid_acc_wo_bg.append", "metrics.ComputeMetrics.acc_wo_bg.acc_w"], "methods", ["None"], ["", "def", "acc_wo_bg", "(", "self", ")", ":", "\n", "        ", "def", "acc_w", "(", "p", ",", "y", ",", "bg_class", ")", ":", "\n", "            ", "ind", "=", "y", "!=", "bg_class", "\n", "return", "np", ".", "mean", "(", "p", "[", "ind", "]", "==", "y", "[", "ind", "]", ")", "*", "100", "\n", "\n", "", "self", ".", "vid_acc_wo_bg", "=", "[", "]", "\n", "if", "type", "(", "self", ".", "predicted", ")", "==", "list", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "predicted", ")", ")", ":", "\n", "# assert len(self.gt[i]) == len(self.predicted[i]),\"video index {}\".format(i)", "\n", "                ", "self", ".", "vid_acc_wo_bg", ".", "append", "(", "acc_w", "(", "self", ".", "predicted", "[", "i", "]", ",", "self", ".", "gt", "[", "i", "]", ",", "self", ".", "bg_class", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "self", ".", "vid_acc_wo_bg", ")", "\n", "\n", "", "else", ":", "\n", "            ", "assert", "len", "(", "self", ".", "gt", ")", "==", "len", "(", "self", ".", "predicted", ")", "\n", "self", ".", "vid_acc_wo_bg", ".", "append", "(", "acc_w", "(", "self", ".", "predicted", ",", "self", ".", "gt", ",", "self", ".", "bg_class", ")", ")", "\n", "return", "acc_w", "(", "self", ".", "predicted", ",", "self", ".", "gt", ",", "self", ".", "bg_class", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.IoU": [[133, 180], ["numpy.array", "numpy.array", "metrics.ComputeMetrics.IoU.segment_labels"], "methods", ["None"], ["", "", "def", "IoU", "(", "self", ")", ":", "\n", "# From ICRA paper:", "\n", "# Learning Convolutional Action Primitives for Fine-grained Action Recognition", "\n", "# Colin Lea, Rene Vidal, Greg Hager", "\n", "# ICRA 2016", "\n", "        ", "def", "segment_intervals", "(", "Yi", ")", ":", "\n", "            ", "idxs", "=", "[", "0", "]", "+", "(", "np", ".", "nonzero", "(", "np", ".", "diff", "(", "Yi", ")", ")", "[", "0", "]", "+", "1", ")", ".", "tolist", "(", ")", "+", "[", "len", "(", "Yi", ")", "]", "\n", "intervals", "=", "[", "(", "idxs", "[", "i", "]", ",", "idxs", "[", "i", "+", "1", "]", ")", "for", "i", "in", "range", "(", "len", "(", "idxs", ")", "-", "1", ")", "]", "\n", "return", "intervals", "\n", "\n", "", "def", "segment_labels", "(", "Yi", ")", ":", "\n", "            ", "idxs", "=", "[", "0", "]", "+", "(", "np", ".", "nonzero", "(", "np", ".", "diff", "(", "Yi", ")", ")", "[", "0", "]", "+", "1", ")", ".", "tolist", "(", ")", "+", "[", "len", "(", "Yi", ")", "]", "\n", "Yi_split", "=", "np", ".", "array", "(", "[", "Yi", "[", "idxs", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "idxs", ")", "-", "1", ")", "]", ")", "\n", "return", "Yi_split", "\n", "\n", "", "def", "overlap_", "(", "p", ",", "y", ",", "bg_class", ")", ":", "\n", "            ", "true_intervals", "=", "np", ".", "array", "(", "segment_intervals", "(", "y", ")", ")", "\n", "true_labels", "=", "segment_labels", "(", "y", ")", "\n", "pred_intervals", "=", "np", ".", "array", "(", "segment_intervals", "(", "p", ")", ")", "\n", "pred_labels", "=", "segment_labels", "(", "p", ")", "\n", "\n", "if", "bg_class", "is", "not", "None", ":", "\n", "                ", "true_intervals", "=", "np", ".", "array", "(", "[", "t", "for", "t", ",", "l", "in", "zip", "(", "true_intervals", ",", "true_labels", ")", "if", "l", "!=", "bg_class", "]", ")", "\n", "true_labels", "=", "np", ".", "array", "(", "[", "l", "for", "l", "in", "true_labels", "if", "l", "!=", "bg_class", "]", ")", "\n", "pred_intervals", "=", "np", ".", "array", "(", "[", "t", "for", "t", ",", "l", "in", "zip", "(", "pred_intervals", ",", "pred_labels", ")", "if", "l", "!=", "bg_class", "]", ")", "\n", "pred_labels", "=", "np", ".", "array", "(", "[", "l", "for", "l", "in", "pred_labels", "if", "l", "!=", "bg_class", "]", ")", "\n", "\n", "", "n_true_segs", "=", "true_labels", ".", "shape", "[", "0", "]", "\n", "n_pred_segs", "=", "pred_labels", ".", "shape", "[", "0", "]", "\n", "seg_scores", "=", "np", ".", "zeros", "(", "n_true_segs", ",", "np", ".", "float", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_true_segs", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "n_pred_segs", ")", ":", "\n", "                    ", "if", "true_labels", "[", "i", "]", "==", "pred_labels", "[", "j", "]", ":", "\n", "                        ", "intersection", "=", "min", "(", "pred_intervals", "[", "j", "]", "[", "1", "]", ",", "true_intervals", "[", "i", "]", "[", "1", "]", ")", "-", "max", "(", "pred_intervals", "[", "j", "]", "[", "0", "]", ",", "\n", "true_intervals", "[", "i", "]", "[", "0", "]", ")", "\n", "union", "=", "max", "(", "pred_intervals", "[", "j", "]", "[", "1", "]", ",", "true_intervals", "[", "i", "]", "[", "1", "]", ")", "-", "min", "(", "pred_intervals", "[", "j", "]", "[", "0", "]", ",", "\n", "true_intervals", "[", "i", "]", "[", "0", "]", ")", "\n", "score_", "=", "float", "(", "intersection", ")", "/", "union", "\n", "seg_scores", "[", "i", "]", "=", "max", "(", "seg_scores", "[", "i", "]", ",", "score_", ")", "\n", "\n", "", "", "", "return", "seg_scores", ".", "mean", "(", ")", "*", "100", "\n", "\n", "", "if", "type", "(", "self", ".", "predicted", ")", "==", "list", ":", "\n", "            ", "return", "np", ".", "mean", "(", "[", "overlap_", "(", "self", ".", "predicted", "[", "i", "]", ",", "self", ".", "gt", "[", "i", "]", ",", "self", ".", "bg_class", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "predicted", ")", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "overlap_", "(", "self", ".", "predicted", ",", "self", ".", "gt", ",", "self", ".", "bg_class", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.IoD": [[182, 228], ["numpy.array", "numpy.array", "metrics.ComputeMetrics.IoU.segment_labels"], "methods", ["None"], ["", "", "def", "IoD", "(", "self", ")", ":", "\n", "# From ICRA paper:", "\n", "# Learning Convolutional Action Primitives for Fine-grained Action Recognition", "\n", "# Colin Lea, Rene Vidal, Greg Hager", "\n", "# ICRA 2016", "\n", "        ", "def", "segment_intervals", "(", "Yi", ")", ":", "\n", "            ", "idxs", "=", "[", "0", "]", "+", "(", "np", ".", "nonzero", "(", "np", ".", "diff", "(", "Yi", ")", ")", "[", "0", "]", "+", "1", ")", ".", "tolist", "(", ")", "+", "[", "len", "(", "Yi", ")", "]", "\n", "intervals", "=", "[", "(", "idxs", "[", "i", "]", ",", "idxs", "[", "i", "+", "1", "]", ")", "for", "i", "in", "range", "(", "len", "(", "idxs", ")", "-", "1", ")", "]", "\n", "return", "intervals", "\n", "\n", "", "def", "segment_labels", "(", "Yi", ")", ":", "\n", "            ", "idxs", "=", "[", "0", "]", "+", "(", "np", ".", "nonzero", "(", "np", ".", "diff", "(", "Yi", ")", ")", "[", "0", "]", "+", "1", ")", ".", "tolist", "(", ")", "+", "[", "len", "(", "Yi", ")", "]", "\n", "Yi_split", "=", "np", ".", "array", "(", "[", "Yi", "[", "idxs", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "idxs", ")", "-", "1", ")", "]", ")", "\n", "return", "Yi_split", "\n", "\n", "", "def", "overlap_d", "(", "p", ",", "y", ",", "bg_class", ")", ":", "\n", "            ", "true_intervals", "=", "np", ".", "array", "(", "segment_intervals", "(", "y", ")", ")", "\n", "true_labels", "=", "segment_labels", "(", "y", ")", "\n", "pred_intervals", "=", "np", ".", "array", "(", "segment_intervals", "(", "p", ")", ")", "\n", "pred_labels", "=", "segment_labels", "(", "p", ")", "\n", "\n", "if", "bg_class", "is", "not", "None", ":", "\n", "                ", "true_intervals", "=", "np", ".", "array", "(", "[", "t", "for", "t", ",", "l", "in", "zip", "(", "true_intervals", ",", "true_labels", ")", "if", "l", "!=", "bg_class", "]", ")", "\n", "true_labels", "=", "np", ".", "array", "(", "[", "l", "for", "l", "in", "true_labels", "if", "l", "!=", "bg_class", "]", ")", "\n", "pred_intervals", "=", "np", ".", "array", "(", "[", "t", "for", "t", ",", "l", "in", "zip", "(", "pred_intervals", ",", "pred_labels", ")", "if", "l", "!=", "bg_class", "]", ")", "\n", "pred_labels", "=", "np", ".", "array", "(", "[", "l", "for", "l", "in", "pred_labels", "if", "l", "!=", "bg_class", "]", ")", "\n", "\n", "", "n_true_segs", "=", "true_labels", ".", "shape", "[", "0", "]", "\n", "n_pred_segs", "=", "pred_labels", ".", "shape", "[", "0", "]", "\n", "seg_scores", "=", "np", ".", "zeros", "(", "n_true_segs", ",", "np", ".", "float", ")", "\n", "\n", "for", "i", "in", "range", "(", "n_true_segs", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "n_pred_segs", ")", ":", "\n", "                    ", "if", "true_labels", "[", "i", "]", "==", "pred_labels", "[", "j", "]", ":", "\n", "                        ", "intersection", "=", "min", "(", "pred_intervals", "[", "j", "]", "[", "1", "]", ",", "true_intervals", "[", "i", "]", "[", "1", "]", ")", "-", "max", "(", "pred_intervals", "[", "j", "]", "[", "0", "]", ",", "\n", "true_intervals", "[", "i", "]", "[", "0", "]", ")", "\n", "union", "=", "pred_intervals", "[", "j", "]", "[", "1", "]", "-", "pred_intervals", "[", "j", "]", "[", "0", "]", "\n", "score_", "=", "float", "(", "intersection", ")", "/", "union", "\n", "seg_scores", "[", "i", "]", "=", "max", "(", "seg_scores", "[", "i", "]", ",", "score_", ")", "\n", "\n", "", "", "", "return", "seg_scores", ".", "mean", "(", ")", "*", "100", "\n", "\n", "", "if", "type", "(", "self", ".", "predicted", ")", "==", "list", ":", "\n", "            ", "return", "np", ".", "mean", "(", "[", "overlap_d", "(", "self", ".", "predicted", "[", "i", "]", ",", "self", ".", "gt", "[", "i", "]", ",", "self", ".", "bg_class", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "predicted", ")", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "overlap_d", "(", "self", ".", "predicted", ",", "self", ".", "gt", ",", "self", ".", "bg_class", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.video_level_mAP": [[231, 262], ["range", "numpy.argsort", "numpy.sum", "numpy.cumsum().astype", "numpy.cumsum().astype", "AP.append", "len", "len", "len", "numpy.sum", "numpy.shape", "numpy.sum", "numpy.sum", "len", "metrics.ComputeMetrics.video_level_mAP.getAP"], "methods", ["None"], ["", "", "def", "video_level_mAP", "(", "self", ")", ":", "\n", "#AP: From all the videos with the true underlying given action, what is the average precision if their(true vids)", "\n", "# predicted scores are chosen as thresholds", "\n", "        ", "def", "getAP", "(", "conf", ",", "labels", ")", ":", "\n", "            ", "assert", "len", "(", "conf", ")", "==", "len", "(", "labels", ")", "\n", "sortind", "=", "np", ".", "argsort", "(", "-", "conf", ")", "\n", "tp", "=", "labels", "[", "sortind", "]", "==", "1", "\n", "fp", "=", "labels", "[", "sortind", "]", "!=", "1", "\n", "npos", "=", "np", ".", "sum", "(", "labels", ")", "\n", "fp", "=", "np", ".", "cumsum", "(", "fp", ")", ".", "astype", "(", "'float32'", ")", ";", "\n", "tp", "=", "np", ".", "cumsum", "(", "tp", ")", ".", "astype", "(", "'float32'", ")", "\n", "rec", "=", "tp", "/", "npos", ";", "\n", "prec", "=", "tp", "/", "(", "fp", "+", "tp", ")", "\n", "tmp", "=", "(", "labels", "[", "sortind", "]", "==", "1", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "return", "np", ".", "sum", "(", "tmp", "*", "prec", ")", "/", "npos", "\n", "\n", "\n", "", "AP", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "np", ".", "shape", "(", "self", ".", "vl_gt", ")", "[", "1", "]", ")", ":", "\n", "            ", "if", "np", ".", "sum", "(", "self", ".", "vl_gt", "[", ":", ",", "i", "]", ")", "==", "0", ":", "\n", "# print(\" {}-{} not available in test\".format( i+1,self.index2label[i + 1]))", "\n", "                ", "continue", "\n", "", "if", "np", ".", "sum", "(", "self", ".", "vl_gt", "[", ":", ",", "i", "]", ")", "==", "len", "(", "self", ".", "vl_gt", "[", ":", ",", "i", "]", ")", ":", "\n", "# print(\" {}-{} available in all test videos\".format( i+1,self.index2label[i + 1]))", "\n", "                ", "continue", "\n", "", "AP", ".", "append", "(", "getAP", "(", "self", ".", "vl_predicted", "[", ":", ",", "i", "]", ",", "self", ".", "vl_gt", "[", ":", ",", "i", "]", ")", ")", "\n", "# print(\"mAP for {} is {:.4f} with {} videos\".format(self.index2label[i+1], AP[-1],np.sum(self.vl_gt[:, i]) ))", "\n", "\n", "\n", "", "return", "100", "*", "sum", "(", "AP", ")", "/", "len", "(", "AP", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.dish_mAP": [[267, 298], ["range", "numpy.argsort", "numpy.sum", "numpy.cumsum().astype", "numpy.cumsum().astype", "AP.append", "len", "len", "len", "numpy.sum", "numpy.shape", "numpy.sum", "numpy.sum", "len", "metrics.ComputeMetrics.video_level_mAP.getAP"], "methods", ["None"], ["", "def", "dish_mAP", "(", "self", ",", "dish_predicted", ",", "dish_gt", ")", ":", "\n", "#AP: From all the videos with the true underlying given action, what is the average precision if their(true vids)", "\n", "# predicted scores are chosen as thresholds", "\n", "        ", "def", "getAP", "(", "conf", ",", "labels", ")", ":", "\n", "            ", "assert", "len", "(", "conf", ")", "==", "len", "(", "labels", ")", "\n", "sortind", "=", "np", ".", "argsort", "(", "-", "conf", ")", "\n", "tp", "=", "labels", "[", "sortind", "]", "==", "1", "\n", "fp", "=", "labels", "[", "sortind", "]", "!=", "1", "\n", "npos", "=", "np", ".", "sum", "(", "labels", ")", "\n", "fp", "=", "np", ".", "cumsum", "(", "fp", ")", ".", "astype", "(", "'float32'", ")", ";", "\n", "tp", "=", "np", ".", "cumsum", "(", "tp", ")", ".", "astype", "(", "'float32'", ")", "\n", "rec", "=", "tp", "/", "npos", ";", "\n", "prec", "=", "tp", "/", "(", "fp", "+", "tp", ")", "\n", "tmp", "=", "(", "labels", "[", "sortind", "]", "==", "1", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "return", "np", ".", "sum", "(", "tmp", "*", "prec", ")", "/", "npos", "\n", "\n", "\n", "", "AP", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "np", ".", "shape", "(", "dish_gt", ")", "[", "1", "]", ")", ":", "\n", "            ", "if", "np", ".", "sum", "(", "dish_gt", "[", ":", ",", "i", "]", ")", "==", "0", ":", "\n", "# print(\" {}-{} not available in test\".format( i+1,self.index2label[i + 1]))", "\n", "                ", "continue", "\n", "", "if", "np", ".", "sum", "(", "dish_gt", "[", ":", ",", "i", "]", ")", "==", "len", "(", "dish_gt", "[", ":", ",", "i", "]", ")", ":", "\n", "# print(\" {}-{} available in all test videos\".format( i+1,self.index2label[i + 1]))", "\n", "                ", "continue", "\n", "", "AP", ".", "append", "(", "getAP", "(", "dish_predicted", "[", ":", ",", "i", "]", ",", "dish_gt", "[", ":", ",", "i", "]", ")", ")", "\n", "# print(\"mAP for {} is {:.4f} with {} videos\".format(self.index2label[i+1], AP[-1],np.sum(self.vl_gt[:, i]) ))", "\n", "\n", "\n", "", "return", "100", "*", "sum", "(", "AP", ")", "/", "len", "(", "AP", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.three_logit_dish_report": [[299, 319], ["numpy.mean", "print", "print", "metrics.ComputeMetrics.dish_acc_indirect.dish_acc_"], "methods", ["None"], ["", "def", "three_logit_dish_report", "(", "self", ",", "filenames", ",", "logits1", ",", "logits2", ",", "logits3", ",", "logits_total", ")", ":", "\n", "\n", "        ", "def", "dish_acc_", "(", "filename", ",", "p1", ",", "p2", ",", "p3", ",", "pT", ",", "y", ")", ":", "\n", "            ", "acc1", "=", "0", ";", "acc2", "=", "0", ";", "acc3", "=", "0", "\n", "if", "p1", "==", "y", ":", "\n", "                ", "acc1", "=", "1", "\n", "", "if", "p2", "==", "y", ":", "\n", "                ", "acc2", "=", "1", "\n", "", "if", "p3", "==", "y", ":", "\n", "                ", "acc3", "=", "1", "\n", "", "if", "p1", "==", "y", "or", "p2", "==", "y", "or", "p3", "==", "y", ":", "\n", "                ", "print", "(", "\"+ stage1: {}, stage2: {}, stage3: {}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "p1", "]", ",", "self", ".", "dish_ind2label", "[", "p2", "]", ",", "self", ".", "dish_ind2label", "[", "p3", "]", ")", "+", "\"/ total: {}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "pT", "]", ")", "+", "\"/ video: \"", "+", "filename", ")", "\n", "return", "1", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"- stage1: {}, stage2: {}, stage3: {}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "p1", "]", ",", "self", ".", "dish_ind2label", "[", "p2", "]", ",", "self", ".", "dish_ind2label", "[", "p3", "]", ")", "+", "\"/ total: {}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "pT", "]", ")", "+", "\"/ video: \"", "+", "filename", ")", "\n", "return", "0", "\n", "\n", "\n", "\n", "", "", "return", "np", ".", "mean", "(", "[", "dish_acc_", "(", "filenames", "[", "i", "]", ",", "logits1", "[", "i", "]", ",", "logits2", "[", "i", "]", ",", "logits3", "[", "i", "]", ",", "logits_total", "[", "i", "]", ",", "self", ".", "gt_dish", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "filenames", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.two_logit_dish_report": [[320, 338], ["numpy.mean", "print", "print", "metrics.ComputeMetrics.dish_acc_indirect.dish_acc_"], "methods", ["None"], ["", "def", "two_logit_dish_report", "(", "self", ",", "filenames", ",", "logits1", ",", "logits2", ",", "logits_total", ")", ":", "\n", "\n", "        ", "def", "dish_acc_", "(", "filename", ",", "p1", ",", "p2", ",", "pT", ",", "y", ")", ":", "\n", "            ", "acc1", "=", "0", ";", "acc2", "=", "0", ";", "acc3", "=", "0", "\n", "if", "p1", "==", "y", ":", "\n", "                ", "acc1", "=", "1", "\n", "", "if", "p2", "==", "y", ":", "\n", "                ", "acc2", "=", "1", "\n", "", "if", "p1", "==", "y", "or", "p2", "==", "y", ":", "\n", "                ", "print", "(", "\"+ stage1: {}, stage2: {}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "p1", "]", ",", "self", ".", "dish_ind2label", "[", "p2", "]", ")", "+", "\"/ total: {}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "pT", "]", ")", "+", "\"/ video: \"", "+", "filename", ")", "\n", "return", "1", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"- total: {}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "pT", "]", ")", "+", "\"/ video: \"", "+", "filename", ")", "\n", "return", "0", "\n", "\n", "\n", "\n", "", "", "return", "np", ".", "mean", "(", "[", "dish_acc_", "(", "filenames", "[", "i", "]", ",", "logits1", "[", "i", "]", ",", "logits2", "[", "i", "]", ",", "logits_total", "[", "i", "]", ",", "self", ".", "gt_dish", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "filenames", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.one_logit_dish_report": [[340, 353], ["numpy.mean", "print", "print", "metrics.ComputeMetrics.dish_acc_indirect.dish_acc_"], "methods", ["None"], ["", "def", "one_logit_dish_report", "(", "self", ",", "filenames", ",", "logits_total", ")", ":", "\n", "\n", "        ", "def", "dish_acc_", "(", "filename", ",", "pT", ",", "y", ")", ":", "\n", "            ", "if", "pT", "==", "y", ":", "\n", "                ", "print", "(", "\"+ total: {}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "pT", "]", ")", "+", "\"/ video: \"", "+", "filename", ")", "\n", "return", "1", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"- total: {}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "pT", "]", ")", "+", "\"/ video: \"", "+", "filename", ")", "\n", "return", "0", "\n", "\n", "\n", "\n", "", "", "return", "np", ".", "mean", "(", "[", "dish_acc_", "(", "filenames", "[", "i", "]", ",", "logits_total", "[", "i", "]", ",", "self", ".", "gt_dish", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "filenames", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rezaghoddoosian_hierarchical-task-modeling.utils_folder.metrics.ComputeMetrics.per_dish_stage_acc": [[355, 374], ["range", "range", "numpy.mean", "metrics.ComputeMetrics.per_dish_stage_acc.class_wise_acc"], "methods", ["None"], ["", "def", "per_dish_stage_acc", "(", "self", ",", "filenames", ",", "logits1", ",", "logits2", ",", "logits3", ",", "logits_total", ",", "n_dishes", ")", ":", "\n", "        ", "def", "class_wise_acc", "(", "class_lbl", ",", "P", ",", "Y", ")", ":", "\n", "            ", "def", "acc", "(", "p", ",", "y", ")", ":", "\n", "                ", "if", "p", "==", "y", ":", "\n", "                    ", "return", "1", "\n", "", "else", ":", "\n", "                    ", "return", "0", "\n", "\n", "", "", "results", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "P", ")", ")", ":", "\n", "                ", "if", "Y", "[", "i", "]", "==", "class_lbl", ":", "\n", "                    ", "results", ".", "append", "(", "acc", "(", "P", "[", "i", "]", ",", "Y", "[", "i", "]", ")", ")", "\n", "", "", "return", "np", ".", "mean", "(", "np", ".", "asarray", "(", "results", ")", ")", "\n", "\n", "", "for", "c", "in", "range", "(", "n_dishes", ")", ":", "\n", "            ", "stage1_acc", "=", "class_wise_acc", "(", "c", ",", "logits1", ",", "self", ".", "gt_dish", ")", "\n", "stage2_acc", "=", "class_wise_acc", "(", "c", ",", "logits2", ",", "self", ".", "gt_dish", ")", "\n", "stage3_acc", "=", "class_wise_acc", "(", "c", ",", "logits3", ",", "self", ".", "gt_dish", ")", "\n", "print", "(", "\"{} =====> Stage1: {:.2f}   | Stage2: {:.2f}   | Stage3: {:.2f}\"", ".", "format", "(", "self", ".", "dish_ind2label", "[", "c", "]", ",", "stage1_acc", ",", "stage2_acc", ",", "stage3_acc", ")", ")", "\n", "\n"]]}