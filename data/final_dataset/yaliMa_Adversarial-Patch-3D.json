{"home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.visual_digital_evaluation.PatchTester.__init__": [[44, 109], ["moderngl_window.WindowConfig.__init__", "src.dnn.InceptionV3", "visual_digital_evaluation.PatchTester.ann.get_input_shape", "tensorflow.placeholder", "tensorflow.expand_dims", "visual_digital_evaluation.PatchTester.ann.get_logits_prob", "tensorflow.Session", "visual_digital_evaluation.PatchTester.sess.run", "visual_digital_evaluation.PatchTester.ann.init_session", "moderngl.create_context", "src.mug.mug.TestMugScene3D", "src.utils3d.fbo.Fbo", "visual_digital_evaluation.PatchTester.scene.camera.get_view_position", "pyrr.Matrix44.from_y_rotation", "tensorflow.global_variables_initializer", "visual_digital_evaluation.PatchTester.ann.get_label_from_index", "visual_digital_evaluation.PatchTester.ann.get_label_from_index"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.get_input_shape", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.get_logits_prob", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.init_session", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.get_view_position", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_label_from_index", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_label_from_index"], ["def", "__init__", "(", "self", ",", "\n", "target", "=", "[", "363", "]", ",", "\n", "true", "=", "[", "504", ",", "968", "]", ",", "\n", "batch_size", "=", "1", ",", "\n", "**", "kwargs", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "target", "=", "target", "\n", "self", ".", "true", "=", "true", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "\n", "self", ".", "ann", "=", "InceptionV3", "(", ")", "\n", "self", ".", "input_width", ",", "self", ".", "input_height", "=", "self", ".", "ann", ".", "get_input_shape", "(", ")", "\n", "self", ".", "buf_shape", "=", "(", "batch_size", ",", "self", ".", "input_height", ",", "self", ".", "input_width", ")", "\n", "self", ".", "tf_rgb", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "\n", "[", "None", ",", "None", ",", "3", "]", ",", "\n", "name", "=", "'rgbs'", ")", "\n", "dnn_input", "=", "tf", ".", "expand_dims", "(", "self", ".", "tf_rgb", ",", "0", ")", "\n", "self", ".", "t_logits", ",", "self", ".", "t_preds", "=", "self", ".", "ann", ".", "get_logits_prob", "(", "dnn_input", ")", "\n", "\n", "self", ".", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "self", ".", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "self", ".", "ann", ".", "init_session", "(", "self", ".", "sess", ")", "\n", "\n", "self", ".", "true_label", "=", "[", "(", "self", ".", "ann", ".", "get_label_from_index", "(", "i", ")", ")", "for", "i", "in", "self", ".", "true", "]", "\n", "self", ".", "target_label", "=", "[", "(", "self", ".", "ann", ".", "get_label_from_index", "(", "i", ")", ")", "for", "i", "in", "self", ".", "target", "]", "\n", "\n", "# ModernGL Context", "\n", "self", ".", "ctx", "=", "moderngl", ".", "create_context", "(", "require", "=", "330", ")", "\n", "self", ".", "ctx", ".", "viewport", "=", "(", "0", ",", "0", ",", "self", ".", "input_width", ",", "self", ".", "input_height", ")", "\n", "self", ".", "scene", "=", "TestMugScene3D", "(", "self", ".", "ctx", ")", "\n", "self", ".", "fbo", "=", "Fbo", "(", "self", ".", "ctx", ",", "self", ".", "ctx", ".", "viewport", ")", "\n", "\n", "self", ".", "cam_curr_position", "=", "self", ".", "scene", ".", "camera", ".", "get_view_position", "(", ")", "\n", "\n", "self", ".", "model", "=", "Matrix44", ".", "from_y_rotation", "(", "np", ".", "pi", ")", "\n", "\n", "# CHANGE HERE!!!", "\n", "# Here you can define the boundaries for the digital evaluation", "\n", "# and step. This is not the evaluation process that was used in the", "\n", "# paper. Additionally, the values are just an example.", "\n", "self", ".", "cam_z_start_position", "=", "10", "\n", "self", ".", "cam_y_start_position", "=", "0", "\n", "self", ".", "cam_x_start_position", "=", "-", "4", "\n", "\n", "self", ".", "cam_z_end_position", "=", "30", "\n", "self", ".", "cam_y_end_position", "=", "5", "\n", "self", ".", "cam_x_end_position", "=", "7", "\n", "\n", "self", ".", "cam_z_step_size", "=", "1", "\n", "self", ".", "cam_y_step_size", "=", "1", "\n", "self", ".", "cam_x_step_size", "=", "1", "\n", "# End", "\n", "\n", "self", ".", "cam_z_position", "=", "self", ".", "cam_z_start_position", "\n", "self", ".", "cam_y_position", "=", "self", ".", "cam_y_start_position", "\n", "self", ".", "cam_x_position", "=", "self", ".", "cam_x_start_position", "\n", "\n", "self", ".", "total_images", "=", "0", "\n", "self", ".", "classified_true", "=", "0", "\n", "self", ".", "classified_target", "=", "0", "\n", "self", ".", "classified_other", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.visual_digital_evaluation.PatchTester.render": [[110, 118], ["visual_digital_evaluation.PatchTester.update_camera", "visual_digital_evaluation.PatchTester.ctx.enable_only", "visual_digital_evaluation.PatchTester.ctx.clear", "visual_digital_evaluation.PatchTester.scene.render_rgb", "visual_digital_evaluation.PatchTester.classify_frame"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.visual_digital_evaluation.PatchTester.update_camera", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.render_rgb", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.classify_frame"], ["", "def", "render", "(", "self", ",", "time", ":", "float", ",", "frame_time", ":", "float", ")", ":", "\n", "        ", "self", ".", "update_camera", "(", ")", "\n", "\n", "self", ".", "ctx", ".", "enable_only", "(", "moderngl", ".", "DEPTH_TEST", ")", "\n", "self", ".", "ctx", ".", "clear", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "\n", "self", ".", "scene", ".", "render_rgb", "(", "self", ".", "model", ")", "\n", "self", ".", "classify_frame", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.visual_digital_evaluation.PatchTester.update_camera": [[119, 138], ["visual_digital_evaluation.PatchTester.scene.camera.update_position_cartesian", "visual_digital_evaluation.PatchTester.scene.camera.get_view_position", "visual_digital_evaluation.PatchTester.finish_test"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_cartesian", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.get_view_position", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.visual_digital_evaluation.PatchTester.finish_test"], ["", "def", "update_camera", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "cam_z_position", ">", "self", ".", "cam_z_end_position", ":", "\n", "            ", "self", ".", "finish_test", "(", ")", "\n", "\n", "", "self", ".", "scene", ".", "camera", ".", "update_position_cartesian", "(", "self", ".", "cam_x_position", ",", "\n", "self", ".", "cam_y_position", ",", "\n", "self", ".", "cam_z_position", ")", "\n", "self", ".", "cam_curr_position", "=", "self", ".", "scene", ".", "camera", ".", "get_view_position", "(", ")", "\n", "\n", "if", "self", ".", "cam_x_position", ">=", "self", ".", "cam_x_end_position", ":", "\n", "            ", "self", ".", "cam_x_position", "=", "self", ".", "cam_x_start_position", "\n", "\n", "if", "self", ".", "cam_y_position", ">=", "self", ".", "cam_y_end_position", ":", "\n", "                ", "self", ".", "cam_y_position", "=", "self", ".", "cam_y_start_position", "\n", "self", ".", "cam_z_position", "+=", "self", ".", "cam_z_step_size", "\n", "", "else", ":", "\n", "                ", "self", ".", "cam_y_position", "+=", "self", ".", "cam_y_step_size", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "cam_x_position", "+=", "self", ".", "cam_x_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.visual_digital_evaluation.PatchTester.classify_frame": [[139, 149], ["visual_digital_evaluation.PatchTester.ctx.fbo.read", "numpy.frombuffer().reshape", "visual_digital_evaluation.PatchTester.sess.run", "visual_digital_evaluation.PatchTester.ann.get_k_top_with_probs", "visual_digital_evaluation.PatchTester.check_classification", "numpy.frombuffer"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_k_top_with_probs", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.visual_digital_evaluation.PatchTester.check_classification"], ["", "", "def", "classify_frame", "(", "self", ")", ":", "\n", "        ", "data", "=", "self", ".", "ctx", ".", "fbo", ".", "read", "(", "components", "=", "3", ",", "dtype", "=", "'f4'", ")", "\n", "frame", "=", "np", ".", "frombuffer", "(", "data", ",", "\n", "dtype", "=", "'f4'", ")", ".", "reshape", "(", "(", "*", "self", ".", "ctx", ".", "viewport", "[", "2", ":", "]", ",", "3", ")", ")", "\n", "\n", "probabilities", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "t_preds", "]", ",", "{", "self", ".", "tf_rgb", ":", "frame", "}", ")", "\n", "probabilities", "=", "probabilities", "[", "0", "]", "\n", "\n", "predictions", "=", "self", ".", "ann", ".", "get_k_top_with_probs", "(", "probabilities", ",", "k", "=", "1", ")", "\n", "self", ".", "check_classification", "(", "predictions", "[", "0", "]", "[", "0", "]", ",", "predictions", "[", "0", "]", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.visual_digital_evaluation.PatchTester.check_classification": [[150, 164], ["logger.info"], "methods", ["None"], ["", "def", "check_classification", "(", "self", ",", "label", ",", "prob", ")", ":", "\n", "        ", "self", ".", "total_images", "+=", "1", "\n", "\n", "if", "label", "in", "self", ".", "true_label", ":", "\n", "            ", "self", ".", "classified_true", "+=", "1", "\n", "", "elif", "label", "in", "self", ".", "target_label", ":", "\n", "            ", "self", ".", "classified_target", "+=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "classified_other", "+=", "1", "\n", "\n", "", "logger", ".", "info", "(", "\"Position {} classified as {}, [{}]\"", ".", "format", "(", "\n", "self", ".", "cam_curr_position", ",", "\n", "label", ",", "\n", "prob", "\n", ")", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.visual_digital_evaluation.PatchTester.finish_test": [[166, 183], ["logger.info", "logger.info", "logger.info", "logger.info", "exit"], "methods", ["None"], ["", "def", "finish_test", "(", "self", ")", ":", "\n", "        ", "logger", ".", "info", "(", "\"{} images were tested\"", ".", "format", "(", "self", ".", "total_images", ")", ")", "\n", "logger", ".", "info", "(", "\"{}/{} classified as the -true- label ({})\"", ".", "format", "(", "\n", "self", ".", "classified_true", ",", "\n", "self", ".", "total_images", ",", "\n", "self", ".", "true_label", "\n", ")", ")", "\n", "logger", ".", "info", "(", "\"{}/{} classified as the -target- ({})\"", ".", "format", "(", "\n", "self", ".", "classified_target", ",", "\n", "self", ".", "total_images", ",", "\n", "self", ".", "target_label", "\n", ")", ")", "\n", "logger", ".", "info", "(", "\"{}/{} classified as something else\"", ".", "format", "(", "\n", "self", ".", "classified_other", ",", "\n", "self", ".", "total_images", "\n", ")", ")", "\n", "exit", "(", "0", ")", "# Kill them all!!!!", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.visual_digital_evaluation.PatchTester.run": [[184, 187], ["moderngl_window.run_window_config"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "run", "(", "cls", ")", ":", "\n", "        ", "mglw", ".", "run_window_config", "(", "cls", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.real_world_evaluation.show_summary": [[12, 35], ["matplotlib.cla", "numpy.zeros", "classifications[].keys", "enumerate", "print", "list", "print", "batch.values"], "function", ["None"], ["def", "show_summary", "(", "classifications", ":", "dict", ")", ":", "\n", "    ", "plt", ".", "cla", "(", ")", "\n", "total", "=", "np", ".", "zeros", "(", "3", ")", "\n", "\n", "labels", "=", "classifications", "[", "0", "]", ".", "keys", "(", ")", "\n", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "classifications", ")", ":", "\n", "        ", "values", "=", "list", "(", "batch", ".", "values", "(", ")", ")", "\n", "total", "+=", "values", "\n", "\n", "# plt.title(f\"Batch No. {i + 1}\")", "\n", "# plt.pie(values, labels=labels)", "\n", "# plt.show(block=True)", "\n", "\n", "print", "(", "f\"Batch No. {i + 1} summary:\\n True: {values[0]}\\n \"", "\n", "f\"Target: {values[1]}\\n Other: {values[2]}\"", ")", "\n", "\n", "\n", "# plt.title(\"Total Summary\")", "\n", "# plt.pie(total, labels=labels)", "\n", "# plt.show(block=True)", "\n", "\n", "", "print", "(", "f\"Total summary:\\n True: {total[0]}\\n \"", "\n", "f\"Target: {total[1]}\\n Other: {total[2]}\"", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.real_world_evaluation.update_counts": [[39, 46], ["None"], "function", ["None"], ["", "def", "update_counts", "(", "label", ",", "true", ",", "target", ")", ":", "\n", "    ", "if", "label", "in", "true", ":", "\n", "        ", "classified", "[", "-", "1", "]", "[", "\"true\"", "]", "+=", "1", "\n", "", "elif", "label", "in", "target", ":", "\n", "        ", "classified", "[", "-", "1", "]", "[", "\"target\"", "]", "+=", "1", "\n", "", "else", ":", "\n", "        ", "classified", "[", "-", "1", "]", "[", "\"other\"", "]", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.real_world_evaluation.draw_graph": [[48, 58], ["matplotlib.cla", "zip", "numpy.arange", "matplotlib.bar", "matplotlib.xticks", "matplotlib.ylim", "matplotlib.draw", "len"], "function", ["None"], ["", "", "def", "draw_graph", "(", "arr", ")", ":", "\n", "    ", "plt", ".", "cla", "(", ")", "\n", "labels", ",", "probs", "=", "zip", "(", "*", "arr", ")", "\n", "index", "=", "np", ".", "arange", "(", "len", "(", "arr", ")", ")", "\n", "\n", "plt", ".", "bar", "(", "index", ",", "probs", ")", "\n", "plt", ".", "xticks", "(", "index", ",", "labels", ")", "\n", "plt", ".", "ylim", "(", "0", ",", "1", ")", "\n", "\n", "plt", ".", "draw", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.real_world_evaluation.show_text": [[60, 66], ["cv2.putText", "cv2.imshow", "numpy.ones"], "function", ["None"], ["", "def", "show_text", "(", "msg", ")", ":", "\n", "    ", "output", "=", "np", ".", "ones", "(", "(", "250", ",", "700", ")", ")", "*", "255", "\n", "font", "=", "cv2", ".", "FONT_HERSHEY_SIMPLEX", "\n", "cv2", ".", "putText", "(", "output", ",", "msg", ",", "(", "70", ",", "100", ")", ",", "\n", "font", ",", "1", ",", "(", "0", ",", "0", ",", "0", ")", ",", "2", ",", "cv2", ".", "LINE_AA", ")", "\n", "cv2", ".", "imshow", "(", "\"prediction\"", ",", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.real_world_evaluation.crop_center": [[68, 73], ["None"], "function", ["None"], ["", "def", "crop_center", "(", "img", ",", "cropx", ",", "cropy", ")", ":", "\n", "    ", "y", ",", "x", ",", "_", "=", "img", ".", "shape", "\n", "startx", "=", "x", "//", "2", "-", "cropx", "//", "2", "\n", "starty", "=", "y", "//", "2", "-", "cropy", "//", "2", "\n", "return", "img", "[", "starty", ":", "starty", "+", "cropy", ",", "startx", ":", "startx", "+", "cropx", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.real_world_evaluation.make_new_dict": [[75, 80], ["None"], "function", ["None"], ["", "def", "make_new_dict", "(", ")", ":", "\n", "    ", "return", "{", "\n", "\"true\"", ":", "0", ",", "\n", "\"target\"", ":", "0", ",", "\n", "\"other\"", ":", "0", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run": [[40, 43], ["moderngl_window.run_window_config"], "methods", ["None"], ["@", "classmethod", "\n", "def", "run", "(", "cls", ")", ":", "\n", "        ", "mglw", ".", "run_window_config", "(", "cls", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.init_dnn": [[44, 60], ["src.dnn.InceptionV3", "demo_with_classification.LiveScene.dnn.get_input_shape", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.expand_dims", "demo_with_classification.LiveScene.dnn.get_logits_prob", "demo_with_classification.LiveScene.sess.run", "demo_with_classification.LiveScene.dnn.init_session", "tensorflow.global_variables_initializer"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.get_input_shape", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.get_logits_prob", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.init_session"], ["", "def", "init_dnn", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        initializes the tf session and the computation graph\n        \"\"\"", "\n", "self", ".", "dnn", "=", "InceptionV3", "(", ")", "\n", "self", ".", "input_shape", "=", "self", ".", "dnn", ".", "get_input_shape", "(", ")", "\n", "self", ".", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "\n", "self", ".", "inp", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "np", ".", "float32", ",", "shape", "=", "(", "*", "self", ".", "input_shape", ",", "3", ")", ")", "\n", "\n", "processed_images", "=", "tf", ".", "expand_dims", "(", "self", ".", "inp", ",", "0", ")", "\n", "_", ",", "self", ".", "probs", "=", "self", ".", "dnn", ".", "get_logits_prob", "(", "processed_images", ")", "\n", "\n", "self", ".", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "self", ".", "dnn", ".", "init_session", "(", "self", ".", "sess", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.classify_frame": [[61, 82], ["print", "demo_with_classification.LiveScene.ctx.fbo.read", "demo_with_classification.LiveScene.classify_frame.crop_center"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.real_world_evaluation.crop_center"], ["", "def", "classify_frame", "(", "self", ")", ":", "\n", "        ", "def", "crop_center", "(", "img", ",", "cropx", ",", "cropy", ")", ":", "\n", "            ", "y", ",", "x", ",", "_", "=", "img", ".", "shape", "\n", "startx", "=", "x", "//", "2", "-", "cropx", "//", "2", "\n", "starty", "=", "y", "//", "2", "-", "cropy", "//", "2", "\n", "return", "img", "[", "starty", ":", "starty", "+", "cropy", ",", "startx", ":", "startx", "+", "cropx", ",", ":", "]", "\n", "\n", "", "print", "(", "\"classifying the current frame:\"", ")", "\n", "\n", "data", "=", "self", ".", "ctx", ".", "fbo", ".", "read", "(", "components", "=", "3", ",", "dtype", "=", "'f4'", ")", "\n", "frame", "=", "np", ".", "frombuffer", "(", "data", ",", "dtype", "=", "'f4'", ")", ".", "reshape", "(", "\n", "(", "*", "self", ".", "ctx", ".", "viewport", "[", "2", ":", "]", ",", "3", ")", ")", "[", ":", ":", "-", "1", "]", "\n", "cropped_frame", "=", "crop_center", "(", "frame", ",", "*", "self", ".", "input_shape", ")", "\n", "\n", "assert", "(", "cropped_frame", ".", "shape", "==", "(", "*", "self", ".", "input_shape", ",", "3", ")", ")", "# for inception", "\n", "\n", "probabilities", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "probs", "]", ",", "{", "self", ".", "inp", ":", "cropped_frame", "}", ")", "\n", "probabilities", "=", "probabilities", "[", "0", "]", "\n", "\n", "predictions", "=", "self", ".", "dnn", ".", "get_k_top_with_probs", "(", "probabilities", ",", "k", "=", "1", ")", "\n", "print", "(", "*", "predictions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.__init__": [[83, 102], ["moderngl_window.WindowConfig.__init__", "src.mug.mug.MugScene3D", "demo_with_classification.LiveScene.init_dnn", "src.utils3d.fbo.Fbo", "pyrr.Matrix44.from_y_rotation"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.init_dnn"], ["", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "scene", "=", "MugScene3D", "(", "self", ".", "ctx", ")", "\n", "\n", "self", ".", "init_dnn", "(", ")", "\n", "self", ".", "fbo", "=", "Fbo", "(", "self", ".", "ctx", ",", "self", ".", "ctx", ".", "viewport", ")", "\n", "\n", "self", ".", "model", "=", "Matrix44", ".", "from_y_rotation", "(", "np", ".", "pi", ")", "\n", "\n", "self", ".", "actions", "=", "[", "\n", "# list of keys and the function to call while they are pressed", "\n", "(", "self", ".", "wnd", ".", "keys", ".", "W", ",", "self", ".", "scene", ".", "camera", ".", "dolly_in", ")", ",", "\n", "(", "self", ".", "wnd", ".", "keys", ".", "S", ",", "self", ".", "scene", ".", "camera", ".", "dolly_out", ")", ",", "\n", "(", "self", ".", "wnd", ".", "keys", ".", "A", ",", "self", ".", "scene", ".", "camera", ".", "truck_right", ")", ",", "\n", "(", "self", ".", "wnd", ".", "keys", ".", "D", ",", "self", ".", "scene", ".", "camera", ".", "truck_left", ")", ",", "\n", "(", "self", ".", "wnd", ".", "keys", ".", "SPACE", ",", "self", ".", "scene", ".", "camera", ".", "pedestal_up", ")", ",", "\n", "(", "self", ".", "wnd", ".", "keys", ".", "E", ",", "self", ".", "scene", ".", "camera", ".", "pedestal_down", ")", ",", "\n", "(", "self", ".", "wnd", ".", "keys", ".", "C", ",", "self", ".", "classify_frame", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.check_for_movement": [[104, 108], ["demo_with_classification.LiveScene.wnd.is_key_pressed", "action"], "methods", ["None"], ["", "def", "check_for_movement", "(", "self", ")", ":", "\n", "        ", "for", "key", ",", "action", "in", "self", ".", "actions", ":", "\n", "            ", "if", "self", ".", "wnd", ".", "is_key_pressed", "(", "key", ")", ":", "\n", "                ", "action", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.mouse_position_event": [[109, 111], ["demo_with_classification.LiveScene.scene.camera.mouse_update"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.mouse_update"], ["", "", "", "def", "mouse_position_event", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "self", ".", "scene", ".", "camera", ".", "mouse_update", "(", "x", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.mouse_scroll_event": [[112, 117], ["demo_with_classification.LiveScene.scene.camera.zoom_in", "demo_with_classification.LiveScene.scene.camera.zoom_out"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.PerspectiveCamera.zoom_in", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.PerspectiveCamera.zoom_out"], ["", "def", "mouse_scroll_event", "(", "self", ",", "x_offset", ",", "y_offset", ")", ":", "\n", "        ", "if", "y_offset", ">", "0", ":", "\n", "            ", "self", ".", "scene", ".", "camera", ".", "zoom_in", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "scene", ".", "camera", ".", "zoom_out", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.render": [[118, 125], ["demo_with_classification.LiveScene.ctx.enable_only", "demo_with_classification.LiveScene.ctx.clear", "demo_with_classification.LiveScene.scene.render_rgb", "demo_with_classification.LiveScene.check_for_movement"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.render_rgb", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.check_for_movement"], ["", "", "def", "render", "(", "self", ",", "time", ":", "float", ",", "frame_time", ":", "float", ")", ":", "\n", "        ", "self", ".", "ctx", ".", "enable_only", "(", "moderngl", ".", "BLEND", ")", "\n", "self", ".", "ctx", ".", "clear", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "\n", "self", ".", "scene", ".", "render_rgb", "(", "self", ".", "model", ")", "\n", "\n", "self", ".", "check_for_movement", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.random_attack.main": [[16, 31], ["moderngl.create_standalone_context", "src.mug.mug_attack.MugAttackBatchesRandomScene", "src.mug.mug_attack.MugAttackBatchesRandomScene.attack"], "function", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera.attack"], ["def", "main", "(", ")", ":", "\n", "    ", "ctx", "=", "moderngl", ".", "create_standalone_context", "(", "require", "=", "330", ")", "\n", "\n", "# CHANGE HERE!", "\n", "attack", "=", "MugAttackBatchesRandomScene", "(", "ctx", ",", "\n", "target_class", "=", "363", ",", "\n", "true_class", "=", "504", ",", "\n", "batch_size", "=", "64", ",", "\n", "num_of_batchs", "=", "140", ",", "\n", "learning_rate", "=", "0.75", ",", "\n", "iteration_num", "=", "400", ",", "\n", "iter_to_log", "=", "20", ",", "\n", "iter_to_save_img", "=", "20", ")", "\n", "\n", "img", "=", "attack", ".", "attack", "(", ")", "\n", "# The patches will also be available in /out/patch_textures/", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.digital_evaluation.main": [[21, 61], ["data.get_3d_patch_path", "PIL.Image.open", "moderngl.create_standalone_context", "src.dnn.InceptionV3", "tensorflow.Graph", "tf.Graph.as_default", "src.mug.mug_render.MugEvalRender", "src.mug.mug_render.MugEvalRender.eval_circle", "src.mug.mug_render.MugEvalRender.print_classifications", "numpy.asarray", "src.dnn.InceptionV3.get_input_shape", "range", "range", "range"], "function", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.data.__init__.get_3d_patch_path", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.eval_circle", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.print_classifications", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.get_input_shape"], ["def", "main", "(", ")", ":", "\n", "    ", "\"\"\"\n    This is the digital evaluation process that we used in our paper.\n    \"\"\"", "\n", "\n", "# CHANGE HERE!", "\n", "# The name of the patch you want to evaluate. The patch should be placed", "\n", "# in /data/patches/ (i.e., in this example, the patch you are evaluating", "\n", "# is /data/patches/patch_name.png).", "\n", "# If you are evaluating our scene, use a patch of size 471x181 px", "\n", "path", "=", "get_3d_patch_path", "(", "\"patch_name.png\"", ")", "\n", "\n", "img", "=", "Image", ".", "open", "(", "path", ")", "\n", "ctx", "=", "moderngl", ".", "create_standalone_context", "(", ")", "\n", "\n", "dnn", "=", "InceptionV3", "(", ")", "\n", "eval_graph", "=", "tf", ".", "Graph", "(", ")", "\n", "\n", "with", "eval_graph", ".", "as_default", "(", ")", ":", "\n", "        ", "renderer", "=", "MugEvalRender", "(", "ctx", ",", "dnn", ",", "*", "dnn", ".", "get_input_shape", "(", ")", ")", "\n", "\n", "# CHANGE HERE!", "\n", "# The batch size and the ranges for the camera's position", "\n", "# (in polar degrees). You can also change the batch's size.", "\n", "probs", ",", "angles", "=", "renderer", ".", "eval_circle", "(", "img", ",", "\n", "thetas", "=", "range", "(", "10", ",", "130", ")", ",", "\n", "phis", "=", "range", "(", "4", ",", "11", ")", ",", "\n", "R", "=", "range", "(", "12", ",", "16", ")", ",", "\n", "batch_size", "=", "128", "\n", ")", "\n", "\n", "# CHANGE HERE!", "\n", "# True and target labels. The results can be saved to a CSV.", "\n", "# We also added more information that we didn't check in the paper", "\n", "# to help you with your work. Please check print_classifications", "\n", "# for more information.", "\n", "renderer", ".", "print_classifications", "(", "np", ".", "asarray", "(", "probs", ")", ",", "\n", "angles", ",", "\n", "target", "=", "363", ",", "\n", "true", "=", "504", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.systematic_attack.main": [[18, 46], ["moderngl.create_standalone_context", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.array", "src.mug.mug_attack.MugAttackBatchesSystematicScene", "src.mug.mug_attack.MugAttackBatchesSystematicScene.attack", "itertools.product"], "function", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera.attack"], ["def", "main", "(", ")", ":", "\n", "    ", "ctx", "=", "moderngl", ".", "create_standalone_context", "(", "require", "=", "330", ")", "\n", "\n", "# Rotation - Change", "\n", "rx", "=", "np", ".", "linspace", "(", "0.0", ",", "np", ".", "pi", "/", "8", ",", "5", ")", "\n", "ry", "=", "np", ".", "linspace", "(", "(", "np", ".", "pi", "*", "3", "/", "5", ")", ",", "(", "np", ".", "pi", "*", "7", "/", "5", ")", ",", "8", ")", "\n", "rz", "=", "np", ".", "linspace", "(", "-", "0.05", ",", "0.05", ",", "3", ")", "\n", "\n", "# Translation - Change", "\n", "tx", "=", "np", ".", "linspace", "(", "-", "1.5", ",", "1.5", ",", "5", ")", "\n", "ty", "=", "np", ".", "linspace", "(", "-", "1.5", ",", "1.5", ",", "5", ")", "\n", "tz", "=", "np", ".", "linspace", "(", "-", "1.", ",", "1.", ",", "3", ")", "\n", "\n", "transformations", "=", "np", ".", "array", "(", "[", "(", "(", "transform", "[", "0", "]", ",", "transform", "[", "1", "]", ",", "transform", "[", "2", "]", ")", ",", "\n", "(", "transform", "[", "3", "]", ",", "transform", "[", "4", "]", ",", "transform", "[", "5", "]", ")", ")", "\n", "for", "transform", "in", "itertools", ".", "product", "(", "rx", ",", "ry", ",", "rz", ",", "\n", "tx", ",", "ty", ",", "tz", ")", "]", ")", "\n", "# CHANGE HERE!", "\n", "attack", "=", "MugAttackBatchesSystematicScene", "(", "ctx", ",", "\n", "transformations", ",", "\n", "target_class", "=", "363", ",", "\n", "true_class", "=", "504", ",", "\n", "num_of_batchs", "=", "125", ",", "\n", "learning_rate", "=", "0.75", ",", "\n", "iteration_num", "=", "400", ",", "\n", "iter_to_log", "=", "20", ",", "\n", "iter_to_save_img", "=", "20", ")", "\n", "img", "=", "attack", ".", "attack", "(", ")", "\n", "# The patches will also be available in /out/patch_textures/", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.__init__": [[27, 50], ["eval_render.EvalRender.create_scene", "utils3d.scene3d.Fbo", "tensorflow.placeholder", "tensorflow.expand_dims", "eval_render.EvalRender.ann.get_logits_prob"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_render.MugAttackRender.create_scene", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.get_logits_prob"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ",", "ann", ",", "width", ",", "height", ")", ":", "\n", "        ", "\"\"\"\n        Constructor\n        :param batch_size: Size of the iteration batch.\n        :param width: the width of the image input to the ANN\n        :param height: the height of the image input to the ANN\n        \"\"\"", "\n", "\n", "# ModernGL Context", "\n", "self", ".", "ctx", "=", "ctx", "\n", "self", ".", "ctx", ".", "viewport", "=", "(", "0", ",", "0", ",", "width", ",", "height", ")", "\n", "\n", "# Scene for 3D rendering", "\n", "self", ".", "scene", "=", "self", ".", "create_scene", "(", ")", "\n", "\n", "self", ".", "fbo", "=", "Fbo", "(", "self", ".", "ctx", ",", "self", ".", "ctx", ".", "viewport", ",", "components", "=", "4", ")", "\n", "\n", "self", ".", "ann", "=", "ann", "\n", "\n", "self", ".", "tf_rgb", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", ",", "3", "]", ",", "name", "=", "'rgb'", ")", "\n", "\n", "dnn_input", "=", "tf", ".", "expand_dims", "(", "self", ".", "tf_rgb", ",", "0", ")", "\n", "_", ",", "self", ".", "probs", "=", "self", ".", "ann", ".", "get_logits_prob", "(", "dnn_input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.render_single_frame": [[51, 56], ["eval_render.EvalRender.scene.render_rgb_to_fbo_polar_degrees", "eval_render.EvalRender.fbo.fbo.read", "numpy.frombuffer().reshape", "pyrr.Matrix44.from_y_rotation", "numpy.frombuffer"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.render_rgb_to_fbo_polar_degrees"], ["", "def", "render_single_frame", "(", "self", ",", "r", ",", "theta", ",", "phi", ",", "to_lookat_center", "=", "True", ")", ":", "\n", "        ", "self", ".", "scene", ".", "render_rgb_to_fbo_polar_degrees", "(", "\n", "r", ",", "theta", ",", "phi", ",", "self", ".", "fbo", ",", "model", "=", "Matrix44", ".", "from_y_rotation", "(", "np", ".", "pi", ")", ",", "lookat_center", "=", "to_lookat_center", ")", "\n", "buffer", "=", "self", ".", "fbo", ".", "fbo", ".", "read", "(", "components", "=", "3", ",", "dtype", "=", "'f4'", ")", "\n", "return", "np", ".", "frombuffer", "(", "buffer", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "(", "self", ".", "fbo", ".", "viewport", "[", "1", "]", ",", "self", ".", "fbo", ".", "viewport", "[", "0", "]", ",", "3", ")", ")", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.render_batch_polar_degrees": [[57, 74], ["res.append", "angles.append", "eval_render.EvalRender.render_single_frame"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.render_single_frame"], ["", "def", "render_batch_polar_degrees", "(", "self", ",", "thetas", ",", "phis", "=", "[", "0", "]", ",", "R", "=", "[", "10", "]", ")", ":", "\n", "        ", "\"\"\"\n        renders frames in the angles specified\n        :param thetas: iterable of theta angles(in degrees)\n        :param phis: iterable of phi angles(in degrees)\n        :param R: iterable of r values\n        :returns: list of numpy arrays representing the frames and a tuple of angles (r,\u03b8,\u03c6)\n        \"\"\"", "\n", "res", "=", "[", "]", "\n", "angles", "=", "[", "]", "\n", "\n", "for", "r", "in", "R", ":", "\n", "            ", "for", "theta", "in", "thetas", ":", "\n", "                ", "for", "phi", "in", "phis", ":", "\n", "                    ", "res", ".", "append", "(", "self", ".", "render_single_frame", "(", "r", ",", "theta", ",", "phi", ")", ")", "\n", "angles", ".", "append", "(", "(", "r", ",", "theta", ",", "phi", ")", ")", "\n", "", "", "", "return", "res", ",", "angles", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.render_and_classify": [[75, 93], ["tensorflow.Session", "sess.run", "eval_render.EvalRender.ann.init_session", "tensorflow.global_variables_initializer", "eval_render.EvalRender.render_single_frame", "probs.append", "angles.append", "sess.run"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.init_session", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.render_single_frame", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run"], ["", "def", "render_and_classify", "(", "self", ",", "thetas", ",", "phis", "=", "[", "0", "]", ",", "R", "=", "[", "10", "]", ")", ":", "\n", "        ", "\"\"\"\n        more memory efficient version that doesn't aggregate the frames\n        \"\"\"", "\n", "probs", "=", "[", "]", "\n", "angles", "=", "[", "]", "\n", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "            ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "self", ".", "ann", ".", "init_session", "(", "sess", ")", "\n", "\n", "for", "r", "in", "R", ":", "\n", "                ", "for", "theta", "in", "thetas", ":", "\n", "                    ", "for", "phi", "in", "phis", ":", "\n", "                        ", "frame", "=", "self", ".", "render_single_frame", "(", "r", ",", "theta", ",", "phi", ")", "\n", "probs", ".", "append", "(", "sess", ".", "run", "(", "[", "self", ".", "probs", "]", ",", "{", "self", ".", "tf_rgb", ":", "frame", "}", ")", "[", "0", "]", ")", "\n", "angles", ".", "append", "(", "(", "r", ",", "theta", ",", "phi", ")", ")", "\n", "", "", "", "", "return", "probs", ",", "angles", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.classify_batch": [[94, 106], ["tensorflow.Session", "sess.run", "eval_render.EvalRender.ann.init_session", "tensorflow.global_variables_initializer", "sess.run", "res.append"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.init_session", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run"], ["", "def", "classify_batch", "(", "self", ",", "frames", ")", ":", "\n", "        ", "res", "=", "[", "]", "\n", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "            ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "self", ".", "ann", ".", "init_session", "(", "sess", ")", "\n", "\n", "for", "frame", "in", "frames", ":", "\n", "                ", "probabilities", "=", "sess", ".", "run", "(", "[", "self", ".", "probs", "]", ",", "{", "self", ".", "tf_rgb", ":", "frame", "}", ")", "\n", "res", ".", "append", "(", "probabilities", "[", "0", "]", ")", "\n", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.classify_frames_by_batches": [[107, 120], ["len", "int", "range", "numpy.floor", "logger.info", "res.extend", "res.extend", "eval_render.EvalRender.classify_batch", "eval_render.EvalRender.classify_batch"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.classify_batch", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.classify_batch"], ["", "def", "classify_frames_by_batches", "(", "self", ",", "frames", ",", "batch_size", ")", ":", "\n", "        ", "frames_len", "=", "len", "(", "frames", ")", "\n", "num_of_batches", "=", "int", "(", "np", ".", "floor", "(", "frames_len", "/", "batch_size", ")", ")", "\n", "res", "=", "[", "]", "\n", "\n", "for", "i_batch", "in", "range", "(", "0", ",", "num_of_batches", ")", ":", "\n", "            ", "logger", ".", "info", "(", "f\"Batch {i_batch}\"", ")", "\n", "res", ".", "extend", "(", "self", ".", "classify_batch", "(", "frames", "[", "i_batch", "*", "batch_size", ":", "i_batch", "*", "batch_size", "+", "batch_size", "]", ")", ")", "\n", "\n", "", "if", "frames_len", "%", "batch_size", "!=", "0", ":", "\n", "            ", "res", ".", "extend", "(", "self", ".", "classify_batch", "(", "frames", "[", "num_of_batches", "*", "batch_size", ":", "frames_len", "]", ")", ")", "\n", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.print_classifications": [[121, 183], ["range", "logger.info", "logger.info", "logger.info", "numpy.asarray", "numpy.asarray", "logger.info", "numpy.argmax", "eval_render.EvalRender.ann.get_k_top_with_probs", "open", "csv.writer", "csv.writer.writerow", "numpy.argmax", "file.tell", "csv.writer.writerow", "numpy.argmax"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_k_top_with_probs"], ["", "def", "print_classifications", "(", "self", ",", "probs", ",", "angles", ",", "target", ",", "true", "=", "504", ",", "batch_size", "=", "None", ",", "csv_file", "=", "None", ")", ":", "\n", "        ", "probs", ",", "angles", "=", "np", ".", "asarray", "(", "probs", ")", ",", "np", ".", "asarray", "(", "angles", ")", "\n", "if", "probs", ".", "shape", "[", "0", "]", "!=", "angles", ".", "shape", "[", "0", "]", ":", "\n", "            ", "assert", "\"probs and angles should be from the same length\"", "\n", "\n", "", "count_true", ",", "count_target", ",", "count_other", "=", "0", ",", "0", ",", "0", "\n", "prob_sum_true", ",", "prob_sum_target", "=", "0", ",", "0", "\n", "classify_prob_sum_true", ",", "classify_prob_sum_target", ",", "classify_prob_sum_other", "=", "0", ",", "0", ",", "0", "\n", "\n", "for", "i", "in", "range", "(", "probs", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "np", ".", "argmax", "(", "probs", "[", "i", "]", ")", "==", "true", ":", "\n", "                ", "count_true", "+=", "1", "\n", "classify_prob_sum_true", "+=", "probs", "[", "i", "]", "[", "true", "]", "\n", "", "elif", "np", ".", "argmax", "(", "probs", "[", "i", "]", ")", "==", "target", ":", "\n", "                ", "count_target", "+=", "1", "\n", "classify_prob_sum_target", "+=", "probs", "[", "i", "]", "[", "target", "]", "\n", "", "else", ":", "\n", "                ", "count_other", "+=", "1", "\n", "classify_prob_sum_other", "+=", "probs", "[", "i", "]", "[", "np", ".", "argmax", "(", "probs", "[", "i", "]", ")", "]", "\n", "\n", "", "prob_sum_true", "+=", "probs", "[", "i", "]", "[", "true", "]", "\n", "prob_sum_target", "+=", "probs", "[", "i", "]", "[", "target", "]", "\n", "\n", "lable", ",", "probability", "=", "self", ".", "ann", ".", "get_k_top_with_probs", "(", "probs", "[", "i", "]", ",", "k", "=", "1", ")", "[", "0", "]", "\n", "logger", ".", "info", "(", "f\"Position {angles[i]} classified as {lable}, [{probability}]\"", ")", "\n", "\n", "", "avg_classify_true", "=", "0", "if", "count_true", "==", "0", "else", "classify_prob_sum_true", "/", "count_true", "\n", "avg_classify_target", "=", "0", "if", "count_target", "==", "0", "else", "classify_prob_sum_target", "/", "count_target", "\n", "avg_classify_other", "=", "0", "if", "count_other", "==", "0", "else", "classify_prob_sum_other", "/", "count_other", "\n", "\n", "logger", ".", "info", "(", "f\"\\nTrue: {count_true}\\nTarget: {count_target}\\nOther: {count_other}\"", ")", "\n", "logger", ".", "info", "(", "\n", "f\"Avg probability for classified label:\"", "\n", "f\"\\nAvg Classified True: {avg_classify_true}\"", "\n", "f\"\\nAvg Classified Target: {avg_classify_target}\"", "\n", "f\"\\nAvg Classified Other: {avg_classify_other}\"", ")", "\n", "\n", "total_true", "=", "prob_sum_true", "/", "probs", ".", "shape", "[", "0", "]", "\n", "total_target", "=", "prob_sum_target", "/", "probs", ".", "shape", "[", "0", "]", "\n", "logger", ".", "info", "(", "\n", "f\"Avg probability for total true and target label:\"", "\n", "f\"\\nTotal Avg True: {total_true}\"", "\n", "f\"\\nTotal Avg Target: {total_target}\"", ")", "\n", "\n", "if", "csv_file", "and", "batch_size", ":", "\n", "            ", "import", "csv", "\n", "with", "open", "(", "csv_file", ",", "'a'", ")", "as", "file", ":", "\n", "                ", "writer", "=", "csv", ".", "writer", "(", "file", ",", "delimiter", "=", "','", ")", "\n", "\n", "if", "file", ".", "tell", "(", ")", "==", "0", ":", "\n", "                    ", "writer", ".", "writerow", "(", "[", "\n", "\"Batch Size\"", ",", "\n", "\"True Count\"", ",", "\"Target Count\"", ",", "\"Other Count\"", ",", "\n", "\"Avg Classified True\"", ",", "\"Avg Classified Target\"", ",", "\"Avg Classified Other\"", ",", "\n", "\"Total True\"", ",", "\"Total Target\"", ",", "\n", "]", ")", "\n", "\n", "", "writer", ".", "writerow", "(", "[", "\n", "batch_size", ",", "\n", "count_true", ",", "count_target", ",", "count_other", ",", "\n", "avg_classify_true", ",", "avg_classify_target", ",", "avg_classify_other", ",", "\n", "total_true", ",", "total_target", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.eval_circle": [[185, 197], ["eval_render.EvalRender.scene.set_patch_tex", "eval_render.EvalRender.render_batch_polar_degrees", "eval_render.EvalRender.classify_frames_by_batches", "eval_render.EvalRender.classify_batch"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.set_patch_tex", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.render_batch_polar_degrees", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.classify_frames_by_batches", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.classify_batch"], ["", "", "", "@", "timing", "\n", "def", "eval_circle", "(", "self", ",", "sticker_img", ",", "thetas", ",", "phis", "=", "[", "0", "]", ",", "R", "=", "[", "10", "]", ",", "batch_size", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "scene", ".", "set_patch_tex", "(", "sticker_img", ")", "\n", "\n", "frames", ",", "angles", "=", "self", ".", "render_batch_polar_degrees", "(", "thetas", ",", "phis", ",", "R", ")", "\n", "\n", "if", "batch_size", ">", "0", ":", "\n", "            ", "probs", "=", "self", ".", "classify_frames_by_batches", "(", "frames", ",", "batch_size", ")", "\n", "", "else", ":", "\n", "            ", "probs", "=", "self", ".", "classify_batch", "(", "frames", ")", "\n", "\n", "", "return", "probs", ",", "angles", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.EvalRender.create_scene": [[198, 205], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "create_scene", "(", "self", ")", "->", "DisplayScene", ":", "\n", "        ", "\"\"\"\n        Generate DisplayScene object for initialization.\n        :return: DisplayScene object\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.eval_render.timing": [[15, 24], ["time.time", "f", "time.time", "logger.info"], "function", ["None"], ["def", "timing", "(", "f", ")", ":", "\n", "    ", "def", "wrap", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "time1", "=", "time", ".", "time", "(", ")", "\n", "ret", "=", "f", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "time2", "=", "time", ".", "time", "(", ")", "\n", "logger", ".", "info", "(", "'{:s} function took {:.3f} ms'", ".", "format", "(", "\n", "f", ".", "__name__", ",", "(", "time2", "-", "time1", ")", "*", "1000.0", ")", ")", "\n", "return", "ret", "\n", "", "return", "wrap", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.src.logger.set_logger": [[4, 12], ["logging.config.fileConfig"], "function", ["None"], ["def", "set_logger", "(", ")", ":", "\n", "    ", "\"\"\"\n    Initialize the logger according to the logger configuration file\n    :return:\n    \"\"\"", "\n", "logging", ".", "config", ".", "fileConfig", "(", "'configuration/logs.conf'", ",", "\n", "defaults", "=", "{", "'logfilename'", ":", "'logs/logs.out'", "}", ",", "\n", "disable_existing_loggers", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.__init__": [[20, 52], ["attack.Attack._get_ann", "attack.Attack.ann.get_input_shape", "attack.Attack._get_attack_renderer", "attack.Attack.renderer.generate_attack_tensors", "attack.Attack.ann.get_logits_prob", "attack.Attack.define_loss_tv", "attack.Attack.define_optimizer"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesSystematicScene._get_ann", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.get_input_shape", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesSystematicScene._get_attack_renderer", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.generate_attack_tensors", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.get_logits_prob", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.define_loss_tv", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.define_optimizer"], ["    ", "def", "__init__", "(", "self", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "self", ".", "learning_rate", "=", "learning_rate", "\n", "self", ".", "target_class", "=", "target_class", "\n", "self", ".", "true_class", "=", "true_class", "\n", "self", ".", "iteration_num", "=", "iteration_num", "\n", "# when to log the attack info?", "\n", "self", ".", "iter_to_log", "=", "iter_to_log", "\n", "self", ".", "iter_to_save_img", "=", "iter_to_save_img", "\n", "\n", "self", ".", "ann", "=", "self", ".", "_get_ann", "(", ")", "\n", "self", ".", "input_width", ",", "self", ".", "input_height", "=", "self", ".", "ann", ".", "get_input_shape", "(", ")", "\n", "\n", "self", ".", "renderer", "=", "self", ".", "_get_attack_renderer", "(", ")", "\n", "\n", "self", ".", "sess", "=", "None", "# TODO: Potential bug...", "\n", "# Tensors for calculating attack + dynamic batch size", "\n", "self", ".", "t_patch_adv_tex", ",", "self", ".", "t_view_images", ",", "self", ".", "t_perturbation", ",", "self", ".", "t_batch_size", "=", "self", ".", "renderer", ".", "generate_attack_tensors", "(", ")", "\n", "\n", "self", ".", "t_logits", ",", "self", ".", "t_preds", "=", "self", ".", "ann", ".", "get_logits_prob", "(", "self", ".", "t_view_images", ")", "\n", "\n", "self", ".", "t_loss", "=", "self", ".", "define_loss_tv", "(", ")", "\n", "self", ".", "t_patch_update", "=", "self", ".", "define_optimizer", "(", ")", "\n", "\n", "self", ".", "last_patch_texture", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.attack": [[53, 80], ["logger.info", "logger.info", "logger.info", "tensorflow.Session", "sess.run", "attack.Attack.ann.init_session", "range", "str", "str", "tensorflow.global_variables_initializer", "attack.Attack.attack_iteration", "attack.Attack.ann.get_label_from_index", "attack.Attack.ann.get_label_from_index"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.init_session", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches.attack_iteration", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_label_from_index", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_label_from_index"], ["", "def", "attack", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Runs an attack to create adversarial patch\n        :return:\n        \"\"\"", "\n", "self", ".", "last_patch_texture", "=", "None", "\n", "\n", "logger", ".", "info", "(", "'Start attack to target #{}: '", ".", "format", "(", "self", ".", "target_class", ")", "\n", "+", "str", "(", "self", ".", "ann", ".", "get_label_from_index", "(", "self", ".", "target_class", ")", ")", ")", "\n", "logger", ".", "info", "(", "'The true label is #{}: '", ".", "format", "(", "self", ".", "true_class", ")", "\n", "+", "str", "(", "self", ".", "ann", ".", "get_label_from_index", "(", "self", ".", "true_class", ")", ")", ")", "\n", "logger", ".", "info", "(", "\n", "'Running {} iterations. Print every {}.'", ".", "format", "(", "self", ".", "iteration_num", ",", "\n", "self", ".", "iter_to_log", ")", ")", "\n", "\n", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "            ", "self", ".", "sess", "=", "sess", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "self", ".", "ann", ".", "init_session", "(", "sess", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "iteration_num", ")", ":", "\n", "                ", "self", ".", "attack_iteration", "(", "i", ")", "\n", "\n", "", "", "if", "self", ".", "last_patch_texture", "is", "None", ":", "\n", "            ", "assert", "\"Last perturbation texture wasn't sent correctly!\"", "\n", "\n", "", "return", "self", ".", "last_patch_texture", "# np array!", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.define_loss_tv": [[81, 97], ["tensorflow.fill", "tensorflow.fill", "tensorflow.reduce_mean", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.image.total_variation"], "methods", ["None"], ["", "def", "define_loss_tv", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Define the attack loss.\n        :return:\n        \"\"\"", "\n", "# tf.constant cannot use a dynamic shape", "\n", "t_target_labels", "=", "tf", ".", "fill", "(", "[", "self", ".", "t_batch_size", "]", ",", "self", ".", "target_class", ")", "\n", "t_true_labels", "=", "tf", ".", "fill", "(", "[", "self", ".", "t_batch_size", "]", ",", "self", ".", "true_class", ")", "\n", "\n", "self", ".", "t_ce_target_loss", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "sparse_softmax_cross_entropy_with_logits", "(", "labels", "=", "t_target_labels", ",", "logits", "=", "self", ".", "t_logits", ")", ")", "\n", "self", ".", "t_ce_true_loss", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "sparse_softmax_cross_entropy_with_logits", "(", "labels", "=", "t_true_labels", ",", "logits", "=", "self", ".", "t_logits", ")", ")", "*", "0.5", "\n", "self", ".", "t_tv_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "image", ".", "total_variation", "(", "self", ".", "t_patch_adv_tex", ")", ")", "*", "0.0005", "\n", "\n", "return", "self", ".", "t_ce_target_loss", "+", "self", ".", "t_tv_loss", "-", "self", ".", "t_ce_true_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.define_optimizer": [[98, 104], ["tensorflow.train.AdamOptimizer().minimize", "tensorflow.control_dependencies", "tensorflow.assign", "tensorflow.train.AdamOptimizer", "tensorflow.clip_by_value"], "methods", ["None"], ["", "def", "define_optimizer", "(", "self", ")", ":", "\n", "        ", "t_optm_step", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", ".", "minimize", "(", "self", ".", "t_loss", ",", "var_list", "=", "[", "self", ".", "t_patch_adv_tex", "]", ")", "\n", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "t_optm_step", "]", ")", ":", "\n", "            ", "t_update", "=", "tf", ".", "assign", "(", "self", ".", "t_patch_adv_tex", ",", "tf", ".", "clip_by_value", "(", "self", ".", "t_patch_adv_tex", ",", "0", ",", "1", ")", ")", "\n", "", "return", "t_update", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.handel_iter_output": [[105, 113], ["attack.Attack._log_attack_iter_info", "attack.Attack._log_attack_iter_info", "attack.Attack._attack_iter_save_images_tex"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._log_attack_iter_info", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._log_attack_iter_info", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._attack_iter_save_images_tex"], ["", "def", "handel_iter_output", "(", "self", ",", "iter_num", ",", "perturbation", ",", "loss", ",", "preds", ",", "dictionary", ")", ":", "\n", "        ", "if", "(", "iter_num", "%", "self", ".", "iter_to_log", ")", "==", "0", ":", "\n", "            ", "self", ".", "_log_attack_iter_info", "(", "perturbation", ",", "iter_num", ",", "loss", ",", "preds", ",", "is_info", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_log_attack_iter_info", "(", "perturbation", ",", "iter_num", ",", "loss", ",", "preds", ",", "is_info", "=", "False", ")", "\n", "\n", "", "if", "(", "iter_num", "%", "self", ".", "iter_to_save_img", ")", "==", "0", "or", "(", "iter_num", "==", "self", ".", "iteration_num", "-", "1", ")", ":", "\n", "            ", "self", ".", "_attack_iter_save_images_tex", "(", "iter_num", ",", "dictionary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._attack_iter_save_view_images": [[114, 141], ["logger.debug", "attack.Attack.sess.run", "enumerate", "logger.debug", "str", "os.path.exists", "os.makedirs", "attack.Attack.save_image_from_nparray", "str", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.save_image_from_nparray"], ["", "", "def", "_attack_iter_save_view_images", "(", "self", ",", "iter_num", ",", "dictionary", ",", "batch_num", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"\n        Save the iteration's scene's view images in the out folder\n        :param iter_num: the number of the current iteration (starting from 0). Used for logging.\n        :param dictionary: the iteration dictionary.\n        :param batch_num: used for logging.\n        \"\"\"", "\n", "init_log_str", "=", "'Saving scene view images in:\\n'", "+", "scene_img_dir", "+", "'\\nIteration '", "+", "str", "(", "iter_num", ")", "\n", "file_name", "=", "f'view_I{iter_num:04}'", "\n", "\n", "if", "batch_num", ">=", "0", ":", "\n", "            ", "init_log_str", "+=", "' Batch '", "+", "str", "(", "batch_num", ")", "\n", "file_name", "+=", "f'B{batch_num:03}'", "\n", "\n", "", "logger", ".", "debug", "(", "init_log_str", ")", "\n", "\n", "images", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "t_view_images", "]", ",", "feed_dict", "=", "dictionary", ")", "\n", "\n", "# create directories if they don't exist", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "scene_img_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "scene_img_dir", ")", "\n", "\n", "", "for", "indx", ",", "image", "in", "enumerate", "(", "images", "[", "0", "]", ")", ":", "\n", "            ", "self", ".", "save_image_from_nparray", "(", "image", ",", "# PATCH! need to find out why somethimes you need the 0 and sometimes you don't", "\n", "os", ".", "path", ".", "join", "(", "scene_img_dir", ",", "file_name", "+", "f'_S{indx:03}.png'", ")", ")", "\n", "\n", "", "logger", ".", "debug", "(", "'Successfully saved views images.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._attack_iter_save_patch_tex": [[142, 170], ["attack.Attack.sess.run", "attack.Attack.save_image_from_nparray", "logger.debug", "str", "os.path.exists", "os.makedirs", "os.path.join", "str"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.save_image_from_nparray"], ["", "def", "_attack_iter_save_patch_tex", "(", "self", ",", "iter_num", ",", "dictionary", ",", "batch_num", "=", "-", "1", ")", ":", "\n", "        ", "\"\"\"\n        Save the iteration's patch texture in the out folder\n        :param iter_num: the number of the current iteration (starting from 0). Used for logging.\n        :param dictionary: the iteration dictionary.\n        :param batch_num: used for logging.\n        \"\"\"", "\n", "init_log_str", "=", "'Saving patch texture in:\\n'", "+", "patch_tex_dir", "+", "'\\nIteration '", "+", "str", "(", "iter_num", ")", "\n", "file_name", "=", "f'patch_I{iter_num:04}'", "\n", "\n", "if", "batch_num", ">=", "0", ":", "\n", "            ", "init_log_str", "+=", "' Batch '", "+", "str", "(", "batch_num", ")", "\n", "file_name", "+=", "f'B{batch_num:03}'", "\n", "\n", "", "texture", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "t_patch_adv_tex", "]", ",", "feed_dict", "=", "dictionary", ")", "\n", "\n", "# create directories if they don't exist", "\n", "# TODO: Do it once on the beginning of the attack?", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "patch_tex_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "patch_tex_dir", ")", "\n", "\n", "# Save adv texture", "\n", "", "self", ".", "save_image_from_nparray", "(", "texture", "[", "0", "]", ",", "# PATCH! need to find out why somethimes you need the 0 and sometimes you don't", "\n", "os", ".", "path", ".", "join", "(", "patch_tex_dir", ",", "(", "file_name", "+", "f'.png'", ")", ")", ",", "\n", "to_flip", "=", "True", ",", "\n", "to_save_last", "=", "True", ")", "\n", "\n", "logger", ".", "debug", "(", "'Successfully saved the patch\\'s texture.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.save_image_from_nparray": [[171, 179], ["numpy.rint", "PIL.Image.fromarray", "img.transpose.transpose.save", "numpy.rint.astype", "img.transpose.transpose.transpose"], "methods", ["None"], ["", "def", "save_image_from_nparray", "(", "self", ",", "array", ",", "file_name", ",", "to_flip", "=", "False", ",", "to_save_last", "=", "False", ")", ":", "\n", "        ", "np_arr", "=", "np", ".", "rint", "(", "array", "*", "255", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "np_arr", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "if", "to_flip", ":", "\n", "            ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "", "img", ".", "save", "(", "file_name", ")", "\n", "if", "to_save_last", ":", "\n", "            ", "self", ".", "last_patch_texture", "=", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._attack_iter_save_images_tex": [[180, 183], ["attack.Attack._attack_iter_save_view_images", "attack.Attack._attack_iter_save_patch_tex"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._attack_iter_save_view_images", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._attack_iter_save_patch_tex"], ["", "", "def", "_attack_iter_save_images_tex", "(", "self", ",", "iter_num", ",", "dictionary", ",", "batch_num", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "_attack_iter_save_view_images", "(", "iter_num", ",", "dictionary", ",", "batch_num", ")", "\n", "self", ".", "_attack_iter_save_patch_tex", "(", "iter_num", ",", "dictionary", ",", "batch_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._log_attack_iter_info": [[184, 198], ["enumerate", "perturbation.sum", "logger.info", "logger.debug", "attack.Attack.ann.get_k_top", "logger.info", "logger.debug"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_k_top"], ["", "def", "_log_attack_iter_info", "(", "self", ",", "perturbation", ",", "iter_num", ",", "loss", ",", "preds", ",", "is_info", "=", "False", ")", ":", "\n", "        ", "log_str", "=", "'[TRAIN {}]: Loss: {}, Perturbation: {}'", ".", "format", "(", "iter_num", ",", "loss", ",", "perturbation", ".", "sum", "(", ")", ")", "# TODO: abs", "\n", "\n", "if", "is_info", ":", "\n", "            ", "logger", ".", "info", "(", "log_str", ")", "\n", "", "else", ":", "\n", "            ", "logger", ".", "debug", "(", "log_str", ")", "\n", "\n", "", "for", "i", ",", "pred", "in", "enumerate", "(", "preds", ")", ":", "\n", "            ", "preds_labels", "=", "self", ".", "ann", ".", "get_k_top", "(", "pred", ")", "\n", "if", "is_info", ":", "\n", "                ", "logger", ".", "info", "(", "'Prediction sample {}: {}'", ".", "format", "(", "i", ",", "preds_labels", ")", ")", "\n", "", "else", ":", "\n", "                ", "logger", ".", "debug", "(", "'Prediction sample {}: {}'", ".", "format", "(", "i", ",", "preds_labels", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack.attack_iteration": [[199, 207], ["NotImplementedError"], "methods", ["None"], ["", "", "", "@", "abstractmethod", "\n", "def", "attack_iteration", "(", "self", ",", "iter_num", ")", ":", "\n", "        ", "\"\"\"\n        One attack iteration. Render the scene batch_size times and update the patch according to the target class.\n        :param iter_num: the number of the current iteration (starting from 0). Used for logging.\n        :return:\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._get_ann": [[208, 211], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._get_attack_renderer": [[212, 215], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_attack_renderer", "(", "self", ")", "->", "AttackRender", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackRandomCamera.__init__": [[218, 235], ["attack.Attack.__init__", "attack.AttackRandomCamera.renderer.set_up_batch"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.set_up_batch"], ["    ", "def", "__init__", "(", "self", ",", "\n", "batch_size", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "target_class", ",", "\n", "true_class", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", "\n", ")", "\n", "self", ".", "renderer", ".", "set_up_batch", "(", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackRandomCamera.attack_iteration": [[236, 252], ["attack.AttackRandomCamera.renderer.get_attack_iteration_dictionary", "attack.AttackRandomCamera.sess.run", "attack.AttackRandomCamera.handel_iter_output"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches.handel_iter_output"], ["", "def", "attack_iteration", "(", "self", ",", "iter_num", ")", ":", "\n", "        ", "\"\"\"\n        One attack iteration. Render the scene batch_size times and update the patch according to the target class.\n        :param iter_num: the number of the current iteration (starting from 0). Used for logging.\n        :return:\n        \"\"\"", "\n", "dictionary", "=", "self", ".", "renderer", ".", "get_attack_iteration_dictionary", "(", ")", "\n", "\n", "loss", ",", "tv_loss", ",", "ce_target_loss", ",", "ce_true_loss", ",", "perturbation", ",", "_", ",", "preds", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "t_loss", ",", "self", ".", "t_tv_loss", ",", "self", ".", "t_ce_target_loss", ",", "\n", "self", ".", "t_ce_true_loss", ",", "self", ".", "t_perturbation", ",", "\n", "self", ".", "t_patch_update", ",", "self", ".", "t_preds", "]", ",", "\n", "feed_dict", "=", "dictionary", "\n", ")", "\n", "\n", "self", ".", "handel_iter_output", "(", "iter_num", ",", "perturbation", ",", "loss", ",", "preds", ",", "dictionary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackRandomCamera._get_ann": [[253, 256], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackRandomCamera._get_attack_renderer": [[257, 260], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackRandomScene.__init__": [[263, 279], ["attack.Attack.__init__", "attack.AttackRandomScene.renderer.set_up_batch"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.set_up_batch"], ["    ", "def", "__init__", "(", "self", ",", "\n", "batch_size", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "target_class", ",", "\n", "true_class", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", "\n", ")", "\n", "self", ".", "renderer", ".", "set_up_batch", "(", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackRandomScene.attack_iteration": [[280, 297], ["attack.AttackRandomScene.renderer.get_iteration_dictionary_s_random_t_scene", "attack.AttackRandomScene.sess.run", "attack.AttackRandomScene.handel_iter_output"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.get_iteration_dictionary_s_random_t_scene", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches.handel_iter_output"], ["", "def", "attack_iteration", "(", "self", ",", "iter_num", ")", ":", "\n", "        ", "\"\"\"\n        One attack iteration. Render the scene batch_size times and update the patch according to the target class.\n        :param iter_num: the number of the current iteration (starting from 0). Used for logging.\n        Used for logging.\n        :return:\n        \"\"\"", "\n", "dictionary", "=", "self", ".", "renderer", ".", "get_iteration_dictionary_s_random_t_scene", "(", ")", "\n", "\n", "loss", ",", "tv_loss", ",", "ce_target_loss", ",", "ce_true_loss", ",", "perturbation", ",", "_", ",", "preds", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "t_loss", ",", "self", ".", "t_tv_loss", ",", "self", ".", "t_ce_target_loss", ",", "\n", "self", ".", "t_ce_true_loss", ",", "self", ".", "t_perturbation", ",", "\n", "self", ".", "t_patch_update", ",", "self", ".", "t_preds", "]", ",", "\n", "feed_dict", "=", "dictionary", "\n", ")", "\n", "\n", "self", ".", "handel_iter_output", "(", "iter_num", ",", "perturbation", ",", "loss", ",", "preds", ",", "dictionary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackRandomScene._get_ann": [[298, 301], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackRandomScene._get_attack_renderer": [[302, 305], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicTransform.__init__": [[308, 322], ["attack.Attack.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "target_class", ",", "\n", "true_class", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicTransform.attack": [[324, 340], ["numpy.asarray", "numpy.asarray", "attack.AttackSystematicTransform.renderer.set_up_batch", "attack.AttackSystematicTransform.update_transformations", "attack.Attack.attack", "len"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.set_up_batch", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicTransform.update_transformations", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera.attack"], ["", "def", "attack", "(", "self", ",", "translation", ":", "np", ".", "ndarray", ",", "rotation", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "\"\"\"\n        new attack with params\n        translation: np array of shape (batch_size,3) -> translation on x,y,z\n        rotation: np array of shape (batch_size,3) -> rotation on x,y,z\n        \"\"\"", "\n", "translation", "=", "np", ".", "asarray", "(", "translation", ")", "\n", "rotation", "=", "np", ".", "asarray", "(", "rotation", ")", "\n", "\n", "assert", "translation", ".", "shape", "[", "0", "]", "==", "rotation", ".", "shape", "[", "0", "]", ",", "\"translation and rotation should have the same batch size\"", "\n", "assert", "translation", ".", "shape", "[", "-", "1", "]", "==", "3", "and", "rotation", ".", "shape", "[", "-", "1", "]", "==", "3", ",", "\"the arrays should have 3 components for x, y, z\"", "\n", "\n", "self", ".", "renderer", ".", "set_up_batch", "(", "len", "(", "translation", ")", ")", "\n", "self", ".", "update_transformations", "(", "translation", ",", "rotation", ")", "\n", "\n", "return", "super", "(", ")", ".", "attack", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicTransform.attack_iteration": [[341, 354], ["attack.AttackSystematicTransform.sess.run", "attack.AttackSystematicTransform.handel_iter_output"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches.handel_iter_output"], ["", "def", "attack_iteration", "(", "self", ",", "iter_num", ")", ":", "\n", "        ", "\"\"\"\n        One attack iteration. Render the scene batch_size times and update the patch according to the target class.\n        :param iter_num: the number of the current iteration (starting from 0). Used for logging.\n        :return:\n        \"\"\"", "\n", "loss", ",", "tv_loss", ",", "ce_target_loss", ",", "ce_true_loss", ",", "perturbation", ",", "_", ",", "preds", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "t_loss", ",", "self", ".", "t_tv_loss", ",", "self", ".", "t_ce_target_loss", ",", "\n", "self", ".", "t_ce_true_loss", ",", "self", ".", "t_perturbation", ",", "\n", "self", ".", "t_patch_update", ",", "self", ".", "t_preds", "]", ",", "\n", "feed_dict", "=", "self", ".", "dictionary", "\n", ")", "\n", "self", ".", "handel_iter_output", "(", "iter_num", ",", "perturbation", ",", "loss", ",", "preds", ",", "self", ".", "dictionary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicTransform.update_transformations": [[355, 357], ["attack.AttackSystematicTransform.renderer.get_iteration_dictionary_s_systematic"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.get_iteration_dictionary_s_systematic"], ["", "def", "update_transformations", "(", "self", ",", "translations", ",", "rotations", ")", ":", "\n", "        ", "self", ".", "dictionary", "=", "self", ".", "renderer", ".", "get_iteration_dictionary_s_systematic", "(", "translations", ",", "rotations", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicTransform._get_ann": [[358, 361], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicTransform._get_attack_renderer": [[362, 365], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera.__init__": [[368, 382], ["attack.Attack.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "target_class", ",", "\n", "true_class", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera.attack": [[384, 391], ["attack.AttackSystematicCamera.update_angles_degrees", "attack.Attack.attack"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera.update_angles_degrees", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera.attack"], ["", "def", "attack", "(", "self", ",", "angles", ")", ":", "\n", "        ", "\"\"\"\n        new attack\n        \"\"\"", "\n", "self", ".", "update_angles_degrees", "(", "angles", ")", "\n", "\n", "return", "super", "(", ")", ".", "attack", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera.attack_iteration": [[392, 405], ["attack.AttackSystematicCamera.sess.run", "attack.AttackSystematicCamera.handel_iter_output"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches.handel_iter_output"], ["", "def", "attack_iteration", "(", "self", ",", "iter_num", ")", ":", "\n", "        ", "\"\"\"\n        One attack iteration. Render the scene batch_size times and update the patch according to the target class.\n        :param iter_num: the number of the current iteration (starting from 0). Used for logging.\n        Used for logging.\n        :return:\n        \"\"\"", "\n", "loss", ",", "tv_loss", ",", "ce_target_loss", ",", "ce_true_loss", ",", "perturbation", ",", "_", ",", "preds", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "t_loss", ",", "self", ".", "t_tv_loss", ",", "self", ".", "t_ce_target_loss", ",", "\n", "self", ".", "t_ce_true_loss", ",", "self", ".", "t_perturbation", ",", "\n", "self", ".", "t_patch_update", ",", "self", ".", "t_preds", "]", ",", "\n", "feed_dict", "=", "self", ".", "dictionary", ")", "\n", "self", ".", "handel_iter_output", "(", "iter_num", ",", "perturbation", ",", "loss", ",", "preds", ",", "self", ".", "dictionary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera.update_angles_degrees": [[406, 417], ["attack.AttackSystematicCamera.renderer.set_up_batch", "attack.AttackSystematicCamera.renderer.get_iteration_dictionary_s_systematic_r_camera_polar", "len"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.set_up_batch", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.get_iteration_dictionary_s_systematic_r_camera_polar"], ["", "def", "update_angles_degrees", "(", "self", ",", "angles", ")", ":", "\n", "        ", "\"\"\"\n\n        :param angles: an array from the same length as the initialization\n        angles array. The values inside must be between 0 to 360 (not tested!)\n        :return:\n        \"\"\"", "\n", "self", ".", "renderer", ".", "set_up_batch", "(", "len", "(", "angles", ")", ")", "\n", "\n", "self", ".", "dictionary", "=", "self", ".", "renderer", ".", "get_iteration_dictionary_s_systematic_r_camera_polar", "(", "angles", ",", "to_lookat_center", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera._get_ann": [[418, 421], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackSystematicCamera._get_attack_renderer": [[422, 425], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches.__init__": [[429, 459], ["attack.Attack.__init__", "attack.AttackBatches.renderer.set_up_batch", "attack.AttackBatches.build_dataset"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.set_up_batch", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesSystematicScene.build_dataset"], ["    ", "def", "__init__", "(", "self", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "batch_size", "=", "64", ",", "\n", "num_of_batchs", "=", "128", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "target_class", ",", "\n", "true_class", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", "\n", ")", "\n", "\n", "self", ".", "num_of_batchs", "=", "num_of_batchs", "\n", "self", ".", "dataset_size", "=", "num_of_batchs", "*", "batch_size", "\n", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "renderer", ".", "set_up_batch", "(", "batch_size", ")", "# static batch size", "\n", "\n", "self", ".", "dataset_uv", ",", "self", ".", "dataset_mask", ",", "self", ".", "dataset_light", ",", "self", ".", "dataset_rgb", "=", "self", ".", "build_dataset", "(", ")", "\n", "\n", "self", ".", "t_uvs", "=", "self", ".", "renderer", ".", "t_patch_uv_map", "\n", "self", ".", "t_masks", "=", "self", ".", "renderer", ".", "t_patch_mask", "\n", "self", ".", "t_lights", "=", "self", ".", "renderer", ".", "t_patch_light", "\n", "self", ".", "t_rgbs", "=", "self", ".", "renderer", ".", "t_background_image", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches.attack_iteration": [[460, 486], ["numpy.random.seed", "list", "range", "numpy.random.permutation", "attack.AttackBatches.sess.run", "attack.AttackBatches.handel_iter_output", "attack.AttackBatches._attack_iter_save_view_images"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.run", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches.handel_iter_output", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._attack_iter_save_view_images"], ["", "def", "attack_iteration", "(", "self", ",", "iter_num", ")", ":", "\n", "        ", "\"\"\"\n        One attack iteration. Render the scene batch_size times and update the patch according to the target class.\n        :param iter_num: the number of the current iteration (starting from 0). Used for logging.\n        :return:\n        \"\"\"", "\n", "first_element", "=", "True", "\n", "np", ".", "random", ".", "seed", "(", "iter_num", ")", "\n", "permutation", "=", "list", "(", "np", ".", "random", ".", "permutation", "(", "self", ".", "dataset_size", ")", ")", "\n", "\n", "for", "i_batch", "in", "range", "(", "0", ",", "self", ".", "num_of_batchs", ")", ":", "\n", "            ", "batch_index", "=", "permutation", "[", "i_batch", "*", "self", ".", "batch_size", ":", "i_batch", "*", "self", ".", "batch_size", "+", "self", ".", "batch_size", "]", "\n", "\n", "dictionary", "=", "{", "self", ".", "t_uvs", ":", "self", ".", "dataset_uv", "[", "batch_index", "]", ",", "\n", "self", ".", "t_masks", ":", "self", ".", "dataset_mask", "[", "batch_index", "]", ",", "\n", "self", ".", "t_lights", ":", "self", ".", "dataset_light", "[", "batch_index", "]", ",", "\n", "self", ".", "t_rgbs", ":", "self", ".", "dataset_rgb", "[", "batch_index", "]", "}", "\n", "\n", "loss", ",", "perturbation", ",", "_", ",", "preds", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "t_loss", ",", "self", ".", "t_perturbation", ",", "self", ".", "t_patch_update", ",", "self", ".", "t_preds", "]", ",", "\n", "feed_dict", "=", "dictionary", ")", "\n", "if", "first_element", ":", "\n", "                ", "self", ".", "handel_iter_output", "(", "iter_num", ",", "perturbation", ",", "loss", ",", "preds", ",", "dictionary", ")", "\n", "first_element", "=", "False", "\n", "", "if", "iter_num", "==", "0", ":", "\n", "                ", "self", ".", "_attack_iter_save_view_images", "(", "iter_num", ",", "dictionary", ",", "batch_num", "=", "i_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches.handel_iter_output": [[487, 495], ["attack.AttackBatches._log_attack_iter_info", "attack.AttackBatches._log_attack_iter_info", "attack.AttackBatches._attack_iter_save_patch_tex"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._log_attack_iter_info", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._log_attack_iter_info", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.Attack._attack_iter_save_patch_tex"], ["", "", "", "def", "handel_iter_output", "(", "self", ",", "iter_num", ",", "perturbation", ",", "loss", ",", "preds", ",", "dictionary", ")", ":", "\n", "        ", "if", "(", "iter_num", "%", "self", ".", "iter_to_log", ")", "==", "0", ":", "\n", "            ", "self", ".", "_log_attack_iter_info", "(", "perturbation", ",", "iter_num", ",", "loss", ",", "preds", ",", "is_info", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_log_attack_iter_info", "(", "perturbation", ",", "iter_num", ",", "loss", ",", "preds", ",", "is_info", "=", "False", ")", "\n", "\n", "", "if", "(", "iter_num", "%", "self", ".", "iter_to_save_img", ")", "==", "0", "or", "(", "iter_num", "==", "self", ".", "iteration_num", "-", "1", ")", ":", "\n", "            ", "self", ".", "_attack_iter_save_patch_tex", "(", "iter_num", ",", "dictionary", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches._get_ann": [[496, 499], ["NotImplementedError"], "methods", ["None"], ["", "", "@", "abstractmethod", "\n", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches._get_attack_renderer": [[500, 503], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatches.build_dataset": [[504, 507], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "build_dataset", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesRandomScene.__init__": [[510, 528], ["attack.AttackBatches.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "batch_size", "=", "64", ",", "\n", "num_of_batchs", "=", "128", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "target_class", ",", "\n", "true_class", ",", "\n", "batch_size", ",", "\n", "num_of_batchs", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesRandomScene.build_dataset": [[529, 531], ["attack.AttackBatchesRandomScene.renderer.build_dataset_s_random_t_scene"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.build_dataset_s_random_t_scene"], ["", "def", "build_dataset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "renderer", ".", "build_dataset_s_random_t_scene", "(", "self", ".", "dataset_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesRandomScene._get_ann": [[532, 535], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesRandomScene._get_attack_renderer": [[536, 539], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesRandomCamera.__init__": [[542, 560], ["attack.AttackBatches.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "batch_size", "=", "64", ",", "\n", "num_of_batchs", "=", "128", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "target_class", ",", "\n", "true_class", ",", "\n", "batch_size", ",", "\n", "num_of_batchs", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesRandomCamera.build_dataset": [[561, 563], ["attack.AttackBatchesRandomCamera.renderer.build_dataset_s_random_t_camera"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.build_dataset_s_random_t_camera"], ["", "def", "build_dataset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "renderer", ".", "build_dataset_s_random_t_camera", "(", "self", ".", "dataset_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesRandomCamera._get_ann": [[564, 567], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesRandomCamera._get_attack_renderer": [[568, 571], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesSystematicCamera.__init__": [[574, 597], ["attack.AttackBatches.__init__", "int", "len"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "angles", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "num_of_batchs", "=", "64", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "if", "len", "(", "angles", ")", "%", "num_of_batchs", "!=", "0", ":", "\n", "            ", "assert", "\"Num of batches must divide the angles list!\"", "\n", "\n", "", "self", ".", "angles", "=", "angles", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "target_class", ",", "\n", "true_class", ",", "\n", "int", "(", "angles", ".", "shape", "[", "0", "]", "/", "num_of_batchs", ")", ",", "\n", "num_of_batchs", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesSystematicCamera.build_dataset": [[598, 600], ["attack.AttackBatchesSystematicCamera.renderer.build_dataset_s_systematic_t_camera_polar"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.build_dataset_s_systematic_t_camera_polar"], ["", "def", "build_dataset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "renderer", ".", "build_dataset_s_systematic_t_camera_polar", "(", "self", ".", "angles", ",", "to_lookat_center", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesSystematicCamera._get_ann": [[601, 604], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesSystematicCamera._get_attack_renderer": [[605, 608], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesSystematicScene.__init__": [[611, 634], ["attack.AttackBatches.__init__", "int", "len"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "transformations", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "num_of_batchs", "=", "64", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "if", "len", "(", "transformations", ")", "%", "num_of_batchs", "!=", "0", ":", "\n", "            ", "assert", "\"Num of batches must divide the angles list!\"", "\n", "\n", "", "self", ".", "transformations", "=", "transformations", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "target_class", ",", "\n", "true_class", ",", "\n", "int", "(", "transformations", ".", "shape", "[", "0", "]", "/", "num_of_batchs", ")", ",", "\n", "num_of_batchs", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesSystematicScene.build_dataset": [[635, 637], ["attack.AttackBatchesSystematicScene.renderer.build_dataset_s_systematic_t_scene"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.build_dataset_s_systematic_t_scene"], ["", "def", "build_dataset", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "renderer", ".", "build_dataset_s_systematic_t_scene", "(", "self", ".", "transformations", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesSystematicScene._get_ann": [[638, 641], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack.AttackBatchesSystematicScene._get_attack_renderer": [[642, 645], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.__init__": [[11, 32], ["attack_render.AttackRender.create_scene", "tensorflow.constant", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "attack_render.AttackRender._load_patch_tex_image"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_render.MugAttackRender.create_scene", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender._load_patch_tex_image"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ",", "width", ",", "height", ")", ":", "\n", "        ", "\"\"\"\n        Constructor\n        :param ctx: ModernGL context that is used in this run\n        :param width: the width of the image input to the ANN\n        :param height: the height of the image input to the ANN\n        \"\"\"", "\n", "self", ".", "width", ",", "self", ".", "height", "=", "width", ",", "height", "\n", "# ModernGL Context", "\n", "self", ".", "ctx", "=", "ctx", "\n", "self", ".", "ctx", ".", "viewport", "=", "(", "0", ",", "0", ",", "width", ",", "height", ")", "\n", "\n", "# Scene for 3D rendering", "\n", "self", ".", "scene", "=", "self", ".", "create_scene", "(", ")", "\n", "\n", "# TF object for the attack", "\n", "self", ".", "t_patch_origin_tex", "=", "tf", ".", "constant", "(", "self", ".", "_load_patch_tex_image", "(", ")", ",", "name", "=", "'origin_patch_tex_img'", ")", "\n", "self", ".", "t_patch_uv_map", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "height", ",", "width", ",", "2", "]", ",", "name", "=", "'patch_uv_map'", ")", "\n", "self", ".", "t_patch_mask", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "height", ",", "width", ",", "1", "]", ",", "name", "=", "'patch_mask'", ")", "\n", "self", ".", "t_patch_light", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "height", ",", "width", ",", "3", "]", ",", "name", "=", "'patch_light'", ")", "\n", "self", ".", "t_background_image", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "height", ",", "width", ",", "3", "]", ",", "name", "=", "'background_rgb'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.set_up_batch": [[33, 48], ["numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty"], "methods", ["None"], ["", "def", "set_up_batch", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "\"\"\"\n        sets up the batch size, after the graph is created\n        YOU MUST CALL THIS!\n        When the batch size is known in the object creation run this at the constructor,\n        when the batch size will change during the loop, run this each iteration.\n        \"\"\"", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "buffers_shape", "=", "(", "batch_size", ",", "self", ".", "height", ",", "self", ".", "width", ")", "\n", "\n", "# np arrays for tf dictionary", "\n", "self", ".", "patch_uv_maps", "=", "np", ".", "empty", "(", "(", "*", "self", ".", "buffers_shape", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "patch_masks", "=", "np", ".", "empty", "(", "(", "*", "self", ".", "buffers_shape", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "patch_lights", "=", "np", ".", "empty", "(", "(", "*", "self", ".", "buffers_shape", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "background_rgbs", "=", "np", ".", "empty", "(", "(", "*", "self", ".", "buffers_shape", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.generate_attack_tensors": [[49, 61], ["tensorflow.get_variable", "tensorflow.subtract", "attack_render.AttackRender._generate_attack_view_images"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender._generate_attack_view_images"], ["", "def", "generate_attack_tensors", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generates the tensors for the attack\n        :return: Four tensors. The first is a variable for the patch's texture;\n        the second is a tensor with the scene's view images; the third is the adversarial perturbation;\n        and the fourth is the batch size (dynamic)\n        \"\"\"", "\n", "t_patch_adv_tex", "=", "tf", ".", "get_variable", "(", "'adv_texture'", ",", "initializer", "=", "self", ".", "t_patch_origin_tex", ")", "\n", "t_perturbation", "=", "tf", ".", "subtract", "(", "t_patch_adv_tex", ",", "self", ".", "t_patch_origin_tex", ")", "\n", "t_view_images", ",", "t_batch_size", "=", "self", ".", "_generate_attack_view_images", "(", "t_patch_adv_tex", ")", "\n", "\n", "return", "t_patch_adv_tex", ",", "t_view_images", ",", "t_perturbation", ",", "t_batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender._generate_attack_view_images": [[62, 76], ["tensorflow.tile", "tensorflow.contrib.resampler.resampler", "attack_render.AttackRender._combine_patch_and_background", "tensorflow.shape", "tensorflow.expand_dims"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender._combine_patch_and_background"], ["", "def", "_generate_attack_view_images", "(", "self", ",", "t_patch_adv_tex", ")", ":", "\n", "        ", "\"\"\"\n        Generates the tensor of the batch of the scene's view images (with the transformations)\n        :param t_patch_adv_tex: a variable tensor for the adversarial patch\n        :return: a tensor with the scene's view images and a tensor of batch size (dynamic)\n        \"\"\"", "\n", "t_batch_size", "=", "tf", ".", "shape", "(", "self", ".", "t_patch_uv_map", ")", "[", "0", "]", "\n", "\n", "t_view", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "t_patch_adv_tex", ",", "0", ")", ",", "[", "t_batch_size", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "t_view", "=", "tf", ".", "contrib", ".", "resampler", ".", "resampler", "(", "t_view", ",", "self", ".", "t_patch_uv_map", ")", "\n", "t_view", "=", "t_view", "*", "self", ".", "t_patch_light", "\n", "t_view", "=", "self", ".", "_combine_patch_and_background", "(", "t_view", ")", "\n", "\n", "return", "t_view", ",", "t_batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender._combine_patch_and_background": [[77, 88], ["tensorflow.tile", "tensorflow.logical_not", "tensorflow.cast", "tensorflow.cast"], "methods", ["None"], ["", "def", "_combine_patch_and_background", "(", "self", ",", "t_view", ")", ":", "\n", "        ", "\"\"\"\n        Combine the background RGB behind the patch according to the depth mask.\n        :param t_view: a batch of view images with the patch image but without the background of the scene.\n        :return: a batch of view images that contains all the scene image.\n        \"\"\"", "\n", "# TODO: Handel ugly casting", "\n", "t_patch_mask_rgb", "=", "tf", ".", "tile", "(", "self", ".", "t_patch_mask", ",", "[", "1", ",", "1", ",", "1", ",", "3", "]", ")", "\n", "t_inverted_mask", "=", "tf", ".", "logical_not", "(", "tf", ".", "cast", "(", "t_patch_mask_rgb", ",", "tf", ".", "bool", ")", ")", "\n", "\n", "return", "(", "t_patch_mask_rgb", "*", "t_view", ")", "+", "(", "tf", ".", "cast", "(", "t_inverted_mask", ",", "tf", ".", "float32", ")", "*", "self", ".", "t_background_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender._load_patch_tex_image": [[89, 96], ["attack_render.AttackRender.scene.get_patch_texture_image", "numpy.asarray().astype", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_patch_texture_image"], ["", "def", "_load_patch_tex_image", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: a numpy array of the patch texture with RGB values between 0 to 1.\n        \"\"\"", "\n", "texture", "=", "self", ".", "scene", ".", "get_patch_texture_image", "(", ")", "\n", "return", "np", ".", "asarray", "(", "texture", ")", ".", "astype", "(", "np", ".", "float32", ")", "[", "...", ",", ":", "3", "]", "/", "255.0", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender._build_dictionary": [[97, 102], ["attack_render.AttackRender.patch_masks.astype", "attack_render.AttackRender.patch_lights.astype", "attack_render.AttackRender.background_rgbs.astype"], "methods", ["None"], ["", "def", "_build_dictionary", "(", "self", ")", ":", "\n", "        ", "return", "{", "self", ".", "t_patch_uv_map", ":", "self", ".", "patch_uv_maps", ",", "\n", "self", ".", "t_patch_mask", ":", "self", ".", "patch_masks", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "self", ".", "t_patch_light", ":", "self", ".", "patch_lights", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "self", ".", "t_background_image", ":", "self", ".", "background_rgbs", ".", "astype", "(", "np", ".", "float32", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.get_iteration_dictionary_s_random_t_scene": [[103, 114], ["range", "attack_render.AttackRender._build_dictionary", "attack_render.AttackRender.scene.get_render_info_s_random_t_scene"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender._build_dictionary", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_random_t_scene"], ["", "def", "get_iteration_dictionary_s_random_t_scene", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Random sampling, scene transformations\n        :return:\n        \"\"\"", "\n", "for", "i", "in", "range", "(", "self", ".", "batch_size", ")", ":", "\n", "            ", "self", ".", "patch_uv_maps", "[", "i", "]", ",", "self", ".", "patch_masks", "[", "i", "]", ",", "self", ".", "patch_lights", "[", "i", "]", ",", "self", ".", "background_rgbs", "[", "i", "]", "=", "self", ".", "scene", ".", "get_render_info_s_random_t_scene", "(", ")", "\n", "\n", "", "return", "self", ".", "_build_dictionary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.get_iteration_dictionary_s_systematic_r_camera_polar": [[115, 131], ["attack_render.AttackRender._build_dictionary", "len", "attack_render.AttackRender.scene.get_render_info_s_systematic_r_camera_polar"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender._build_dictionary", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_systematic_r_camera_polar"], ["", "def", "get_iteration_dictionary_s_systematic_r_camera_polar", "(", "self", ",", "angles", ",", "to_lookat_center", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Systematic sampling, camera transformations with given polar degrees\n        :return:\n        \"\"\"", "\n", "if", "len", "(", "angles", ")", "!=", "self", ".", "batch_size", ":", "\n", "            ", "assert", "\"Angles list must sent doesn't match the batch size sent in initilaztion\"", "\n", "# TODO: Stop writing C in Python", "\n", "", "i", "=", "0", "\n", "for", "r", ",", "theta", ",", "phi", "in", "angles", ":", "\n", "            ", "self", ".", "patch_uv_maps", "[", "i", "]", ",", "self", ".", "patch_masks", "[", "i", "]", ",", "self", ".", "patch_lights", "[", "i", "]", ",", "self", ".", "background_rgbs", "[", "i", "]", "=", "self", ".", "scene", ".", "get_render_info_s_systematic_r_camera_polar", "(", "r", ",", "theta", ",", "phi", ",", "to_lookat_center", ")", "\n", "i", "+=", "1", "\n", "\n", "", "return", "self", ".", "_build_dictionary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.get_iteration_dictionary_s_systematic": [[132, 142], ["zip", "attack_render.AttackRender._build_dictionary", "attack_render.AttackRender.scene.get_render_info_s_systematic"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender._build_dictionary", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_systematic"], ["", "def", "get_iteration_dictionary_s_systematic", "(", "self", ",", "translations", ",", "rotations", ")", ":", "\n", "# TODO: Stop writing C in Python", "\n", "        ", "i", "=", "0", "\n", "for", "translation", ",", "rotation", "in", "zip", "(", "translations", ",", "rotations", ")", ":", "\n", "            ", "self", ".", "patch_uv_maps", "[", "i", "]", ",", "self", ".", "patch_masks", "[", "i", "]", ",", "self", ".", "patch_lights", "[", "i", "]", ",", "self", ".", "background_rgbs", "[", "i", "]", "=", "self", ".", "scene", ".", "get_render_info_s_systematic", "(", "translation", ",", "rotation", ")", "\n", "i", "+=", "1", "\n", "\n", "", "return", "self", ".", "_build_dictionary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.build_dataset_s_random_t_scene": [[143, 156], ["numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "range", "attack_render.AttackRender.scene.get_render_info_s_random_t_scene"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_random_t_scene"], ["", "def", "build_dataset_s_random_t_scene", "(", "self", ",", "dataset_size", ")", ":", "\n", "        ", "size", "=", "(", "dataset_size", ",", "self", ".", "buffers_shape", "[", "1", "]", ",", "self", ".", "buffers_shape", "[", "2", "]", ")", "\n", "\n", "patch_uv_maps", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "patch_masks", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "patch_lights", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "background_rgbs", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "i", "in", "range", "(", "dataset_size", ")", ":", "\n", "            ", "patch_uv_maps", "[", "i", "]", ",", "patch_masks", "[", "i", "]", ",", "patch_lights", "[", "i", "]", ",", "background_rgbs", "[", "i", "]", "=", "self", ".", "scene", ".", "get_render_info_s_random_t_scene", "(", ")", "\n", "\n", "", "return", "patch_uv_maps", ",", "patch_masks", ",", "patch_lights", ",", "background_rgbs", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.build_dataset_s_random_t_camera": [[157, 170], ["numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "range", "attack_render.AttackRender.scene.get_render_info_s_random_t_camera"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_random_t_camera"], ["", "def", "build_dataset_s_random_t_camera", "(", "self", ",", "dataset_size", ")", ":", "\n", "        ", "size", "=", "(", "dataset_size", ",", "self", ".", "buffers_shape", "[", "1", "]", ",", "self", ".", "buffers_shape", "[", "2", "]", ")", "\n", "\n", "patch_uv_maps", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "patch_masks", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "patch_lights", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "background_rgbs", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "i", "in", "range", "(", "dataset_size", ")", ":", "\n", "            ", "patch_uv_maps", "[", "i", "]", ",", "patch_masks", "[", "i", "]", ",", "patch_lights", "[", "i", "]", ",", "background_rgbs", "[", "i", "]", "=", "self", ".", "scene", ".", "get_render_info_s_random_t_camera", "(", ")", "\n", "\n", "", "return", "patch_uv_maps", ",", "patch_masks", ",", "patch_lights", ",", "background_rgbs", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.build_dataset_s_systematic_t_camera_polar": [[171, 189], ["len", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "range", "attack_render.AttackRender.scene.get_render_info_s_systematic_r_camera_polar"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_systematic_r_camera_polar"], ["", "def", "build_dataset_s_systematic_t_camera_polar", "(", "self", ",", "angles", ",", "to_lookat_center", "=", "True", ")", ":", "\n", "        ", "dataset_size", "=", "len", "(", "angles", ")", "\n", "size", "=", "(", "dataset_size", ",", "self", ".", "height", ",", "self", ".", "width", ")", "\n", "\n", "patch_uv_maps", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "patch_masks", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "patch_lights", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "background_rgbs", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "i", "in", "range", "(", "dataset_size", ")", ":", "\n", "            ", "r", ",", "theta", ",", "phi", "=", "angles", "[", "i", "]", "\n", "\n", "patch_uv_maps", "[", "i", "]", ",", "patch_masks", "[", "i", "]", ",", "patch_lights", "[", "i", "]", ",", "background_rgbs", "[", "i", "]", "=", "self", ".", "scene", ".", "get_render_info_s_systematic_r_camera_polar", "(", "\n", "r", ",", "theta", ",", "phi", ",", "to_lookat_center", "\n", ")", "\n", "\n", "", "return", "patch_uv_maps", ",", "patch_masks", ",", "patch_lights", ",", "background_rgbs", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.build_dataset_s_systematic_t_scene": [[190, 206], ["len", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "range", "attack_render.AttackRender.scene.get_render_info_s_systematic_r_scene_random_light"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_systematic_r_scene_random_light"], ["", "def", "build_dataset_s_systematic_t_scene", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "dataset_size", "=", "len", "(", "transforms", ")", "\n", "size", "=", "(", "dataset_size", ",", "self", ".", "height", ",", "self", ".", "width", ")", "\n", "\n", "patch_uv_maps", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "2", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "patch_masks", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "1", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "patch_lights", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "background_rgbs", "=", "np", ".", "empty", "(", "(", "*", "size", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "i", "in", "range", "(", "dataset_size", ")", ":", "\n", "            ", "rotation", ",", "translation", "=", "transforms", "[", "i", "]", "\n", "\n", "patch_uv_maps", "[", "i", "]", ",", "patch_masks", "[", "i", "]", ",", "patch_lights", "[", "i", "]", ",", "background_rgbs", "[", "i", "]", "=", "self", ".", "scene", ".", "get_render_info_s_systematic_r_scene_random_light", "(", "rotation", ",", "translation", ")", "\n", "\n", "", "return", "patch_uv_maps", ",", "patch_masks", ",", "patch_lights", ",", "background_rgbs", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.build_dictionary": [[207, 218], ["uv_maps.astype", "masks.astype", "lights.astype", "rgbs.astype", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "build_dictionary", "(", "self", ",", "uv_maps", ",", "masks", ",", "lights", ",", "rgbs", ")", ":", "\n", "        ", "if", "(", "len", "(", "uv_maps", ")", "!=", "self", ".", "batch_size", ")", "or", "(", "len", "(", "masks", ")", "!=", "self", ".", "batch_size", ")", "or", "(", "len", "(", "lights", ")", "!=", "self", ".", "batch_size", ")", "or", "(", "len", "(", "rgbs", ")", "!=", "self", ".", "batch_size", ")", ":", "\n", "            ", "assert", "\"Input size doesn't match batch size\"", "\n", "\n", "", "return", "{", "self", ".", "t_patch_uv_map", ":", "uv_maps", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "self", ".", "t_patch_mask", ":", "masks", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "self", ".", "t_patch_light", ":", "lights", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "self", ".", "t_background_image", ":", "rgbs", ".", "astype", "(", "np", ".", "float32", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.attack.attack_render.AttackRender.create_scene": [[219, 226], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "create_scene", "(", "self", ")", "->", "AttackScene", ":", "\n", "        ", "\"\"\"\n        Generate AttackScene object for initialization.\n        :return: AttackScene object\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.vgg16.Vgg16.__init__": [[9, 12], ["dnn.NeuralNetImagenet.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "'Vgg16'", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.vgg16.Vgg16.get_logits_prob": [[13, 24], ["tensorflow.contrib.slim.arg_scope", "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_16", "tensorflow.contrib.slim.python.slim.nets.vgg.vgg_arg_scope", "tensorflow.squeeze", "tensorflow.nn.softmax"], "methods", ["None"], ["", "def", "get_logits_prob", "(", "self", ",", "batch_input", ")", ":", "\n", "        ", "\"\"\"\n        Prediction from the model on a single batch.\n        :param batch_input: the input batch. Must be from size [?, 224, 224, 3]\n        :return: the logits and probabilities for the batch\n        \"\"\"", "\n", "\n", "with", "slim", ".", "arg_scope", "(", "vgg", ".", "vgg_arg_scope", "(", ")", ")", ":", "\n", "            ", "logits", ",", "_", "=", "vgg", ".", "vgg_16", "(", "batch_input", ",", "num_classes", "=", "1000", ",", "is_training", "=", "False", ")", "\n", "probs", "=", "tf", ".", "squeeze", "(", "tf", ".", "nn", ".", "softmax", "(", "logits", ")", ")", "[", "1", ":", "]", "\n", "", "return", "logits", ",", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.vgg16.Vgg16.init_session": [[25, 35], ["tensorflow.train.Saver", "tensorflow.train.Saver.restore", "tensorflow.contrib.slim.get_model_variables", "os.path.join"], "methods", ["None"], ["", "def", "init_session", "(", "self", ",", "sess", ")", ":", "\n", "        ", "\"\"\"\n        Initialize TF session based on the checkpoint file.\n        :param sess: a tf session\n        :return:\n        \"\"\"", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "slim", ".", "get_model_variables", "(", "scope", "=", "'vgg_16'", ")", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "\n", "checkpoints_dir", ",", "'vgg_16.ckpt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.vgg16.Vgg16.get_input_shape": [[36, 42], ["None"], "methods", ["None"], ["", "def", "get_input_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns the input width and height\n        :return: tuple\n        \"\"\"", "\n", "return", "224", ",", "224", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV4.InceptionV4.__init__": [[9, 12], ["dnn.NeuralNetImagenet.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "'InceptionV4'", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV4.InceptionV4.get_logits_prob": [[13, 24], ["tensorflow.contrib.slim.arg_scope", "models.nets.inception_v4", "tensorflow.squeeze", "models.nets.inception_v4_arg_scope", "tensorflow.nn.softmax"], "methods", ["None"], ["", "def", "get_logits_prob", "(", "self", ",", "batch_input", ")", ":", "\n", "        ", "\"\"\"\n        Prediction from the model on a single batch.\n        :param batch_input: the input batch. Must be from size [?, 299, 299, 3]\n        :return: the logits and probabilities for the batch\n        \"\"\"", "\n", "with", "slim", ".", "arg_scope", "(", "nets", ".", "inception_v4_arg_scope", "(", ")", ")", ":", "\n", "            ", "logits", ",", "_", "=", "nets", ".", "inception_v4", "(", "batch_input", ",", "num_classes", "=", "1001", ",", "is_training", "=", "False", ")", "\n", "logits", "=", "logits", "[", ":", ",", "1", ":", "]", "\n", "probs", "=", "tf", ".", "squeeze", "(", "tf", ".", "nn", ".", "softmax", "(", "logits", ")", ")", "\n", "", "return", "logits", ",", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV4.InceptionV4.init_session": [[25, 34], ["tensorflow.train.Saver", "tensorflow.train.Saver.restore", "tensorflow.contrib.slim.get_model_variables", "os.path.join"], "methods", ["None"], ["", "def", "init_session", "(", "self", ",", "sess", ")", ":", "\n", "        ", "\"\"\"\n        Initialize TF session based on the checkpoint file.\n        :param sess: a tf session\n        :return:\n        \"\"\"", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "slim", ".", "get_model_variables", "(", "scope", "=", "'InceptionV4'", ")", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "checkpoints_dir", ",", "'inception_v4.ckpt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV4.InceptionV4.get_input_shape": [[35, 41], ["None"], "methods", ["None"], ["", "def", "get_input_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns the input width and height\n        :return: 299, 299\n        \"\"\"", "\n", "return", "299", ",", "299", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.__init__": [[14, 18], ["json.load", "open", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "name", "=", "'NN'", "\n", "# Reads labels", "\n", "self", ".", "imagenet_labels", "=", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "models_dir", ",", "'imagenet_labels.json'", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_k_top": [[19, 29], ["list", "probs.argsort"], "methods", ["None"], ["", "def", "get_k_top", "(", "self", ",", "probs", ",", "k", "=", "3", ")", ":", "\n", "        ", "\"\"\"\n        Returns the names of the k top classes\n        :param probs: a list of probabilities.\n        :param k: the number of the top desired classes\n        :return: a list with the names of the k top classes (according to\n        the probabilities).\n        \"\"\"", "\n", "topk", "=", "list", "(", "probs", ".", "argsort", "(", ")", "[", "-", "k", ":", "]", "[", ":", ":", "-", "1", "]", ")", "\n", "return", "[", "self", ".", "imagenet_labels", "[", "i", "]", "for", "i", "in", "topk", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_k_top_with_probs": [[30, 39], ["list", "probs.argsort"], "methods", ["None"], ["", "def", "get_k_top_with_probs", "(", "self", ",", "probs", ",", "k", "=", "3", ")", ":", "\n", "        ", "\"\"\"\n        Returns the names of the k top classes\n        :param probs: a list of probabilities.\n        :param k: the number of the top desired classes\n        :return: a list of tuples: (label, probabilty).\n        \"\"\"", "\n", "topk", "=", "list", "(", "probs", ".", "argsort", "(", ")", "[", "-", "k", ":", "]", "[", ":", ":", "-", "1", "]", ")", "\n", "return", "[", "(", "self", ".", "imagenet_labels", "[", "i", "]", ",", "probs", "[", "i", "]", ")", "for", "i", "in", "topk", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_label_from_index": [[40, 42], ["None"], "methods", ["None"], ["", "def", "get_label_from_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "imagenet_labels", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_logits_prob": [[43, 51], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_logits_prob", "(", "self", ",", "batch_input", ")", ":", "\n", "        ", "\"\"\"\n        Prediction from the model on a single batch.\n        :param batch_input: the input batch.\n        :return: the logits and probabilities for the batch\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.init_session": [[52, 60], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "init_session", "(", "self", ",", "sess", ")", ":", "\n", "        ", "\"\"\"\n        Initialize TF session based on the checkpoint file.\n        :param sess: a tf session\n        :return:\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.dnn.NeuralNetImagenet.get_input_shape": [[61, 68], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_input_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns the input width and height\n        :return: width, height (two integers)\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.resnetV2.ResnetV2.__init__": [[9, 12], ["dnn.NeuralNetImagenet.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "'ResNet V2'", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.resnetV2.ResnetV2.get_logits_prob": [[13, 25], ["tensorflow.contrib.slim.arg_scope", "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_v2_50", "tensorflow.squeeze", "tensorflow.contrib.slim.python.slim.nets.resnet_v2.resnet_arg_scope"], "methods", ["None"], ["", "def", "get_logits_prob", "(", "self", ",", "batch_input", ")", ":", "\n", "        ", "\"\"\"\n        Prediction from the model on a single batch.\n        :param batch_input: the input batch. Must be from size [?, 224, 224, 3]\n        :return: the logits and probabilities for the batch\n        \"\"\"", "\n", "\n", "with", "slim", ".", "arg_scope", "(", "resnet_v2", ".", "resnet_arg_scope", "(", ")", ")", ":", "\n", "            ", "logits", ",", "end_points", "=", "resnet_v2", ".", "resnet_v2_50", "(", "batch_input", ",", "num_classes", "=", "1001", ",", "is_training", "=", "False", ")", "\n", "probs", "=", "tf", ".", "squeeze", "(", "end_points", "[", "\"predictions\"", "]", ")", "\n", "probs", "=", "probs", "[", "1", ":", "]", "\n", "", "return", "logits", ",", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.resnetV2.ResnetV2.init_session": [[26, 36], ["tensorflow.train.Saver", "tensorflow.train.Saver.restore", "tensorflow.contrib.slim.get_model_variables", "os.path.join"], "methods", ["None"], ["", "def", "init_session", "(", "self", ",", "sess", ")", ":", "\n", "        ", "\"\"\"\n        Initialize TF session based on the checkpoint file.\n        :param sess: a tf session\n        :return:\n        \"\"\"", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "slim", ".", "get_model_variables", "(", "scope", "=", "'resnet_v2_50'", ")", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "\n", "checkpoints_dir", ",", "'resnet_v2_50.ckpt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.resnetV2.ResnetV2.get_input_shape": [[37, 43], ["None"], "methods", ["None"], ["", "def", "get_input_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns the input width and height\n        :return: tuple\n        \"\"\"", "\n", "return", "224", ",", "224", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.__init__": [[9, 12], ["dnn.NeuralNetImagenet.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "name", "=", "'InceptionV3'", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.get_logits_prob": [[13, 24], ["tensorflow.contrib.slim.arg_scope", "tensorflow.contrib.slim.nets.inception.inception_v3", "tensorflow.squeeze", "tensorflow.contrib.slim.nets.inception.inception_v3_arg_scope", "tensorflow.nn.softmax"], "methods", ["None"], ["", "def", "get_logits_prob", "(", "self", ",", "batch_input", ")", ":", "\n", "        ", "\"\"\"\n        Prediction from the model on a single batch.\n        :param batch_input: the input batch. Must be from size [?, 299, 299, 3]\n        :return: the logits and probabilities for the batch\n        \"\"\"", "\n", "with", "slim", ".", "arg_scope", "(", "inception", ".", "inception_v3_arg_scope", "(", ")", ")", ":", "\n", "            ", "logits", ",", "_", "=", "inception", ".", "inception_v3", "(", "batch_input", ",", "num_classes", "=", "1001", ",", "is_training", "=", "False", ")", "\n", "logits", "=", "logits", "[", ":", ",", "1", ":", "]", "\n", "probs", "=", "tf", ".", "squeeze", "(", "tf", ".", "nn", ".", "softmax", "(", "logits", ")", ")", "\n", "", "return", "logits", ",", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.init_session": [[25, 34], ["tensorflow.train.Saver", "tensorflow.train.Saver.restore", "tensorflow.contrib.slim.get_model_variables", "os.path.join"], "methods", ["None"], ["", "def", "init_session", "(", "self", ",", "sess", ")", ":", "\n", "        ", "\"\"\"\n        Initialize TF session based on the checkpoint file.\n        :param sess: a tf session\n        :return:\n        \"\"\"", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "slim", ".", "get_model_variables", "(", "scope", "=", "'InceptionV3'", ")", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "os", ".", "path", ".", "join", "(", "checkpoints_dir", ",", "'inception_v3.ckpt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.dnn.inceptionV3.InceptionV3.get_input_shape": [[35, 41], ["None"], "methods", ["None"], ["", "def", "get_input_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns the input width and height\n        :return: tuple\n        \"\"\"", "\n", "return", "299", ",", "299", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_render.MugEvalRender.__init__": [[8, 10], ["src.eval_render.EvalRender.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ",", "ann", ",", "width", ",", "height", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ",", "ann", ",", "width", ",", "height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_render.MugEvalRender.create_scene": [[11, 17], ["mug.MugScene3D"], "methods", ["None"], ["", "def", "create_scene", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate DisplayScene object for initialization.\n        :return: MugAttackRender object\n        \"\"\"", "\n", "return", "MugScene3D", "(", "self", ".", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_render.MugCleanEvalRender.__init__": [[20, 22], ["src.eval_render.EvalRender.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ",", "ann", ",", "width", ",", "height", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ",", "ann", ",", "width", ",", "height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_render.MugCleanEvalRender.create_scene": [[23, 29], ["mug.CleanMugScene3D"], "methods", ["None"], ["", "def", "create_scene", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate DisplayScene object for initialization.\n        :return: MugAttackRender object\n        \"\"\"", "\n", "return", "CleanMugScene3D", "(", "self", ".", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_render.MugAttackRender.__init__": [[32, 34], ["src.attack.attack_render.AttackRender.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ",", "width", ",", "height", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ",", "width", ",", "height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_render.MugAttackRender.create_scene": [[35, 41], ["mug_attack_scene.MugAttackScene3D"], "methods", ["None"], ["", "def", "create_scene", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate AttackScene object for initialization.\n        :return: MugAttackRender object\n        \"\"\"", "\n", "return", "MugAttackScene3D", "(", "self", ".", "ctx", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack_scene.MugAttackScene3D.__init__": [[15, 17], ["src.utils3d.attack_scene.AttackScene.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack_scene.MugAttackScene3D.generate_scene_light": [[18, 22], ["src.utils3d.IndirectionalLight"], "methods", ["None"], ["", "def", "generate_scene_light", "(", "self", ")", ":", "\n", "        ", "return", "IndirectionalLight", "(", "(", "-", "15", ",", "50", ",", "50", ")", ",", "\n", "(", "139", "/", "255", ",", "140", "/", "255", ",", "124", "/", "255", ")", ",", "\n", "120", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack_scene.MugAttackScene3D.generate_scene_camera": [[23, 29], ["src.utils3d.camera.PerspectiveCamera", "pyrr.Vector3"], "methods", ["None"], ["", "def", "generate_scene_camera", "(", "self", ")", ":", "\n", "        ", "return", "PerspectiveCamera", "(", "self", ".", "ctx", ".", "viewport", "[", "2", "]", "/", "self", ".", "ctx", ".", "viewport", "[", "3", "]", ",", "\n", "fov_degrees", "=", "30.0", ",", "\n", "near", "=", "1.0", ",", "\n", "far", "=", "1000.0", ",", "\n", "position", "=", "Vector3", "(", "[", "(", "0.0", ",", "0.0", ",", "15.0", ")", "]", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack_scene.MugAttackScene3D.load_background_objects": [[31, 38], ["mug.Mug3D", "mug.Wall3D", "mug.Ceiling3D", "mug.Floor3D", "mug.Table3D", "mug.Light3D"], "methods", ["None"], ["", "def", "load_background_objects", "(", "self", ")", ":", "\n", "        ", "return", "[", "Mug3D", "(", "self", ".", "ctx", ")", ",", "\n", "Wall3D", "(", "self", ".", "ctx", ")", ",", "\n", "Ceiling3D", "(", "self", ".", "ctx", ")", ",", "\n", "Floor3D", "(", "self", ".", "ctx", ")", ",", "\n", "Table3D", "(", "self", ".", "ctx", ")", ",", "\n", "Light3D", "(", "self", ".", "ctx", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack_scene.MugAttackScene3D.load_patch_objects": [[40, 42], ["mug.Patch3D"], "methods", ["None"], ["", "def", "load_patch_objects", "(", "self", ")", ":", "\n", "        ", "return", "Patch3D", "(", "self", ".", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack_scene.MugAttackScene3D.get_default_model_matrix": [[43, 45], ["pyrr.Matrix44.from_y_rotation"], "methods", ["None"], ["", "def", "get_default_model_matrix", "(", "self", ")", ":", "\n", "        ", "return", "Matrix44", ".", "from_y_rotation", "(", "np", ".", "pi", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack_scene.MugAttackScene3D.get_random_model_matrix": [[46, 56], ["src.utils3d.transformation.get_random_rotation", "src.utils3d.transformation.get_random_translation"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_random_rotation", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_random_translation"], ["", "def", "get_random_model_matrix", "(", "self", ")", ":", "\n", "        ", "rotation", "=", "get_random_rotation", "(", "0.0", ",", "np", ".", "pi", "/", "8", ",", "\n", "(", "np", ".", "pi", "*", "3", "/", "5", ")", ",", "(", "np", ".", "pi", "*", "7", "/", "5", ")", ",", "\n", "-", "0.05", ",", "0.05", ")", "\n", "\n", "translation", "=", "get_random_translation", "(", "-", "1.5", ",", "1.5", ",", "\n", "-", "1.5", ",", "1.5", ",", "\n", "-", "1.", ",", "1.", ")", "\n", "# TODO: scale", "\n", "return", "rotation", "*", "translation", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack_scene.MugAttackScene3D.get_random_light_obj": [[57, 62], ["copy.deepcopy", "copy.deepcopy.update_color_to_random_in_offset"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.update_color_to_random_in_offset"], ["", "def", "get_random_light_obj", "(", "self", ")", ":", "\n", "        ", "copy_light", "=", "copy", ".", "deepcopy", "(", "self", ".", "light", ")", "\n", "copy_light", ".", "update_color_to_random_in_offset", "(", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ")", "\n", "\n", "return", "copy_light", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack_scene.MugAttackScene3D.get_random_camera_obj": [[63, 80], ["copy.deepcopy", "copy.deepcopy.update_target_to_random_in_bound_by_position_cartesian"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_target_to_random_in_bound_by_position_cartesian"], ["", "def", "get_random_camera_obj", "(", "self", ")", ":", "\n", "        ", "copy_cam", "=", "copy", ".", "deepcopy", "(", "self", ".", "camera", ")", "\n", "# copy_cam.update_position_to_random_in_bound_polar_deg(", "\n", "#     10, 20,", "\n", "#     30, 120,", "\n", "#     0, 30,", "\n", "#     to_lookat_center=True", "\n", "# )", "\n", "\n", "copy_cam", ".", "update_target_to_random_in_bound_by_position_cartesian", "(", "\n", "-", "1.1", ",", "1.1", ",", "\n", "-", "0.5", ",", "0.5", ",", "\n", "-", ".5", ",", ".5", ",", "\n", "5", "\n", ")", "\n", "\n", "return", "copy_cam", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.MugScene3D.__init__": [[7, 9], ["src.utils3d.DisplayScene.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.MugScene3D.generate_scene_light": [[10, 14], ["src.utils3d.IndirectionalLight"], "methods", ["None"], ["", "def", "generate_scene_light", "(", "self", ")", ":", "\n", "        ", "return", "IndirectionalLight", "(", "(", "-", "15", ",", "50", ",", "50", ")", ",", "\n", "(", "139", "/", "255", ",", "140", "/", "255", ",", "124", "/", "255", ")", ",", "\n", "120", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.MugScene3D.generate_scene_camera": [[15, 21], ["src.utils3d.camera.PerspectiveCamera", "pyrr.Vector3"], "methods", ["None"], ["", "def", "generate_scene_camera", "(", "self", ")", ":", "\n", "        ", "return", "PerspectiveCamera", "(", "self", ".", "ctx", ".", "viewport", "[", "2", "]", "/", "self", ".", "ctx", ".", "viewport", "[", "3", "]", ",", "\n", "fov_degrees", "=", "30.0", ",", "\n", "near", "=", "1.0", ",", "\n", "far", "=", "1000.0", ",", "\n", "position", "=", "Vector3", "(", "[", "(", "0.0", ",", "0.0", ",", "15.0", ")", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.MugScene3D.load_scene_objects": [[23, 31], ["mug.Mug3D", "mug.Patch3D", "mug.Wall3D", "mug.Ceiling3D", "mug.Floor3D", "mug.Table3D", "mug.Light3D"], "methods", ["None"], ["", "def", "load_scene_objects", "(", "self", ")", ":", "\n", "        ", "return", "[", "Mug3D", "(", "self", ".", "ctx", ")", ",", "\n", "Patch3D", "(", "self", ".", "ctx", ")", ",", "\n", "Wall3D", "(", "self", ".", "ctx", ")", ",", "\n", "Ceiling3D", "(", "self", ".", "ctx", ")", ",", "\n", "Floor3D", "(", "self", ".", "ctx", ")", ",", "\n", "Table3D", "(", "self", ".", "ctx", ")", ",", "\n", "Light3D", "(", "self", ".", "ctx", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.MugScene3D.set_patch_tex": [[33, 35], ["mug.MugScene3D.objects[].set_texture"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.set_texture"], ["", "def", "set_patch_tex", "(", "self", ",", "img", ")", ":", "\n", "        ", "self", ".", "objects", "[", "1", "]", ".", "set_texture", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.CleanMugScene3D.__init__": [[38, 40], ["src.utils3d.DisplayScene.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.CleanMugScene3D.generate_scene_light": [[41, 45], ["src.utils3d.IndirectionalLight"], "methods", ["None"], ["", "def", "generate_scene_light", "(", "self", ")", ":", "\n", "        ", "return", "IndirectionalLight", "(", "(", "-", "15", ",", "50", ",", "50", ")", ",", "\n", "(", "139", "/", "255", ",", "140", "/", "255", ",", "124", "/", "255", ")", ",", "\n", "120", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.CleanMugScene3D.generate_scene_camera": [[46, 52], ["src.utils3d.camera.PerspectiveCamera", "pyrr.Vector3"], "methods", ["None"], ["", "def", "generate_scene_camera", "(", "self", ")", ":", "\n", "        ", "return", "PerspectiveCamera", "(", "self", ".", "ctx", ".", "viewport", "[", "2", "]", "/", "self", ".", "ctx", ".", "viewport", "[", "3", "]", ",", "\n", "fov_degrees", "=", "30.0", ",", "\n", "near", "=", "1.0", ",", "\n", "far", "=", "1000.0", ",", "\n", "position", "=", "Vector3", "(", "[", "(", "0.0", ",", "0.0", ",", "15.0", ")", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.CleanMugScene3D.load_scene_objects": [[54, 61], ["mug.Mug3D", "mug.Wall3D", "mug.Ceiling3D", "mug.Floor3D", "mug.Table3D", "mug.Light3D"], "methods", ["None"], ["", "def", "load_scene_objects", "(", "self", ")", ":", "\n", "        ", "return", "[", "Mug3D", "(", "self", ".", "ctx", ")", ",", "\n", "Wall3D", "(", "self", ".", "ctx", ")", ",", "\n", "Ceiling3D", "(", "self", ".", "ctx", ")", ",", "\n", "Floor3D", "(", "self", ".", "ctx", ")", ",", "\n", "Table3D", "(", "self", ".", "ctx", ")", ",", "\n", "Light3D", "(", "self", ".", "ctx", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.CleanMugScene3D.set_patch_tex": [[63, 65], ["None"], "methods", ["None"], ["", "def", "set_patch_tex", "(", "self", ",", "img", ")", ":", "\n", "        ", "assert", "\"Clean scene!\"", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.TestMugScene3D.__init__": [[68, 70], ["src.utils3d.DisplayScene.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.TestMugScene3D.generate_scene_light": [[71, 75], ["src.utils3d.IndirectionalLight"], "methods", ["None"], ["", "def", "generate_scene_light", "(", "self", ")", ":", "\n", "        ", "return", "IndirectionalLight", "(", "(", "-", "15", ",", "50", ",", "50", ")", ",", "\n", "(", "139", "/", "255", ",", "140", "/", "255", ",", "124", "/", "255", ")", ",", "\n", "120", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.TestMugScene3D.generate_scene_camera": [[76, 82], ["src.utils3d.camera.PerspectiveCamera", "pyrr.Vector3"], "methods", ["None"], ["", "def", "generate_scene_camera", "(", "self", ")", ":", "\n", "        ", "return", "PerspectiveCamera", "(", "self", ".", "ctx", ".", "viewport", "[", "2", "]", "/", "self", ".", "ctx", ".", "viewport", "[", "3", "]", ",", "\n", "fov_degrees", "=", "30.0", ",", "\n", "near", "=", "1.0", ",", "\n", "far", "=", "1000.0", ",", "\n", "position", "=", "Vector3", "(", "[", "(", "0.0", ",", "0.0", ",", "15.0", ")", "]", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.TestMugScene3D.load_scene_objects": [[84, 92], ["mug.Mug3D", "mug.Patch3D", "mug.Wall3D", "mug.Ceiling3D", "mug.Floor3D", "mug.Table3D", "mug.Light3D"], "methods", ["None"], ["", "def", "load_scene_objects", "(", "self", ")", ":", "\n", "        ", "return", "[", "Mug3D", "(", "self", ".", "ctx", ")", ",", "\n", "Patch3D", "(", "self", ".", "ctx", ",", "True", ")", ",", "\n", "Wall3D", "(", "self", ".", "ctx", ")", ",", "\n", "Ceiling3D", "(", "self", ".", "ctx", ")", ",", "\n", "Floor3D", "(", "self", ".", "ctx", ")", ",", "\n", "Table3D", "(", "self", ".", "ctx", ")", ",", "\n", "Light3D", "(", "self", ".", "ctx", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.TestMugScene3D.set_patch_tex": [[94, 96], ["mug.TestMugScene3D.objects[].set_texture"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.set_texture"], ["", "def", "set_patch_tex", "(", "self", ",", "img", ")", ":", "\n", "        ", "self", ".", "objects", "[", "1", "]", ".", "set_texture", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Mug3D.__init__": [[98, 106], ["src.utils3d.Object3D.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n", "self", ".", "name", "=", "'Mug'", "\n", "\n", "self", ".", "name_dir", "=", "'mug'", "\n", "self", ".", "name_obj", "=", "'mug'", "\n", "self", ".", "name_tex_file", "=", "'mug.png'", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Mug3D.generate_material": [[107, 116], ["src.utils3d.Material"], "methods", ["None"], ["", "def", "generate_material", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate the Material object of the 3D model\n        :return: Material object of the 3D model\n        \"\"\"", "\n", "return", "Material", "(", "(", "0.8", ",", ")", "*", "3", ",", "\n", "(", "0.970328", ",", "0.94118", ",", "1.0", ")", ",", "\n", "(", "1.0", ",", ")", "*", "3", ",", "\n", "828", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Patch3D.__init__": [[119, 132], ["src.utils3d.Object3D.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ",", "use_adv_sticker", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n", "self", ".", "name", "=", "'Patch'", "\n", "\n", "self", ".", "name_dir", "=", "'mug'", "\n", "self", ".", "name_obj", "=", "'patch'", "\n", "if", "use_adv_sticker", ":", "\n", "            ", "self", ".", "name_tex_file", "=", "'patch_adv.png'", "\n", "", "else", ":", "\n", "            ", "self", ".", "name_tex_file", "=", "'patch.png'", "\n", "\n", "", "self", ".", "transpose_texture", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Patch3D.generate_material": [[133, 142], ["src.utils3d.Material"], "methods", ["None"], ["", "def", "generate_material", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate the Material object of the 3D model\n        :return: Material object of the 3D model\n        \"\"\"", "\n", "return", "Material", "(", "(", "0.7", ",", ")", "*", "3", ",", "\n", "(", "0.588", ",", ")", "*", "3", ",", "\n", "(", "0.9", ",", ")", "*", "3", ",", "\n", "80", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Table3D.__init__": [[145, 153], ["src.utils3d.Object3D.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n", "self", ".", "name", "=", "'Table'", "\n", "\n", "self", ".", "name_dir", "=", "'mug'", "\n", "self", ".", "name_obj", "=", "'table'", "\n", "self", ".", "name_tex_file", "=", "'table.png'", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Table3D.generate_material": [[154, 163], ["src.utils3d.Material"], "methods", ["None"], ["", "def", "generate_material", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate the Material object of the 3D model\n        :return: Material object of the 3D model\n        \"\"\"", "\n", "return", "Material", "(", "(", "0.4", ",", ")", "*", "3", ",", "\n", "(", "0.8667", ",", ")", "*", "3", ",", "\n", "(", "0.0", ",", ")", "*", "3", ",", "\n", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Wall3D.__init__": [[166, 174], ["src.utils3d.Object3D.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n", "self", ".", "name", "=", "'Wall'", "\n", "\n", "self", ".", "name_dir", "=", "'mug'", "\n", "self", ".", "name_obj", "=", "'wall'", "\n", "self", ".", "name_tex_file", "=", "'wall.png'", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Wall3D.generate_material": [[175, 184], ["src.utils3d.Material"], "methods", ["None"], ["", "def", "generate_material", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate the Material object of the 3D model\n        :return: Material object of the 3D model\n        \"\"\"", "\n", "return", "Material", "(", "(", "0.8", ",", ")", "*", "3", ",", "\n", "(", "1.0", ",", ")", "*", "3", ",", "\n", "(", "0.0", ",", ")", "*", "3", ",", "\n", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Ceiling3D.__init__": [[187, 195], ["src.utils3d.Object3D.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n", "self", ".", "name", "=", "'Ceiling'", "\n", "\n", "self", ".", "name_dir", "=", "'mug'", "\n", "self", ".", "name_obj", "=", "'ceiling'", "\n", "self", ".", "name_tex_file", "=", "'ceiling.png'", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Ceiling3D.generate_material": [[196, 205], ["src.utils3d.Material"], "methods", ["None"], ["", "def", "generate_material", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate the Material object of the 3D model\n        :return: Material object of the 3D model\n        \"\"\"", "\n", "return", "Material", "(", "(", "1.0", ",", ")", "*", "3", ",", "\n", "(", "1.0", ",", ")", "*", "3", ",", "\n", "(", "0.0", ",", ")", "*", "3", ",", "\n", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Floor3D.__init__": [[208, 216], ["src.utils3d.Object3D.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n", "self", ".", "name", "=", "'Floor'", "\n", "\n", "self", ".", "name_dir", "=", "'mug'", "\n", "self", ".", "name_obj", "=", "'floor'", "\n", "self", ".", "name_tex_file", "=", "'floor.png'", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Floor3D.generate_material": [[217, 226], ["src.utils3d.Material"], "methods", ["None"], ["", "def", "generate_material", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate the Material object of the 3D model\n        :return: Material object of the 3D model\n        \"\"\"", "\n", "return", "Material", "(", "(", "1.0", ",", ")", "*", "3", ",", "\n", "(", "1.0", ",", ")", "*", "3", ",", "\n", "(", "0.0", ",", ")", "*", "3", ",", "\n", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Light3D.__init__": [[229, 237], ["src.utils3d.Object3D.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n", "self", ".", "name", "=", "'Light'", "\n", "\n", "self", ".", "name_dir", "=", "'mug'", "\n", "self", ".", "name_obj", "=", "'light'", "\n", "self", ".", "name_tex_file", "=", "'light.png'", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug.Light3D.generate_material": [[238, 247], ["src.utils3d.Material"], "methods", ["None"], ["", "def", "generate_material", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate the Material object of the 3D model\n        :return: Material object of the 3D model\n        \"\"\"", "\n", "return", "Material", "(", "(", "1.0", ",", ")", "*", "3", ",", "\n", "(", "1.0", ",", ")", "*", "3", ",", "\n", "(", "0.0", ",", ")", "*", "3", ",", "\n", "10", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackSystematicCamera.__init__": [[10, 28], ["src.attack.AttackSystematicCamera.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "ctx", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "self", ".", "ctx", "=", "ctx", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "target_class", ",", "\n", "true_class", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackSystematicCamera._get_ann": [[29, 35], ["src.dnn.InceptionV3"], "methods", ["None"], ["", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate NeuralNetImagenet object for initialization.\n        :return: InceptionV3 object\n        \"\"\"", "\n", "return", "InceptionV3", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackSystematicCamera._get_attack_renderer": [[36, 42], ["src.mug.mug_render.MugAttackRender"], "methods", ["None"], ["", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate AttackRender object for initialization.\n        :return: MugAttackRender object\n        \"\"\"", "\n", "return", "MugAttackRender", "(", "self", ".", "ctx", ",", "self", ".", "input_width", ",", "self", ".", "input_height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackSystematicTransform.__init__": [[45, 63], ["src.attack.AttackSystematicTransform.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "ctx", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "self", ".", "ctx", "=", "ctx", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "target_class", ",", "\n", "true_class", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackSystematicTransform._get_ann": [[64, 70], ["src.dnn.InceptionV3"], "methods", ["None"], ["", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate NeuralNetImagenet object for initialization.\n        :return: InceptionV3 object\n        \"\"\"", "\n", "return", "InceptionV3", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackSystematicTransform._get_attack_renderer": [[71, 77], ["src.mug.mug_render.MugAttackRender"], "methods", ["None"], ["", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate AttackRender object for initialization.\n        :return: MugAttackRender object\n        \"\"\"", "\n", "return", "MugAttackRender", "(", "self", ".", "ctx", ",", "self", ".", "input_width", ",", "self", ".", "input_height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesRandomScene.__init__": [[80, 101], ["src.attack.AttackBatchesRandomScene.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "ctx", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "batch_size", "=", "64", ",", "\n", "num_of_batchs", "=", "128", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "self", ".", "ctx", "=", "ctx", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "target_class", ",", "\n", "true_class", ",", "\n", "batch_size", ",", "\n", "num_of_batchs", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesRandomScene._get_ann": [[102, 108], ["src.dnn.InceptionV3"], "methods", ["None"], ["", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate NeuralNetImagenet object for initialization.\n        :return: InceptionV3 object\n        \"\"\"", "\n", "return", "InceptionV3", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesRandomScene._get_attack_renderer": [[109, 115], ["src.mug.mug_render.MugAttackRender"], "methods", ["None"], ["", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate AttackRender object for initialization.\n        :return: MugAttackRender object\n        \"\"\"", "\n", "return", "MugAttackRender", "(", "self", ".", "ctx", ",", "self", ".", "input_width", ",", "self", ".", "input_height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesRandomCamera.__init__": [[118, 137], ["src.attack.AttackBatchesRandomCamera.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "ctx", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "batch_size", "=", "64", ",", "\n", "num_of_batchs", "=", "128", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "self", ".", "ctx", "=", "ctx", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "target_class", ",", "true_class", ",", "\n", "batch_size", ",", "num_of_batchs", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesRandomCamera._get_ann": [[138, 144], ["src.dnn.InceptionV3"], "methods", ["None"], ["", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate NeuralNetImagenet object for initialization.\n        :return: InceptionV3 object\n        \"\"\"", "\n", "return", "InceptionV3", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesRandomCamera._get_attack_renderer": [[145, 151], ["src.mug.mug_render.MugAttackRender"], "methods", ["None"], ["", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate AttackRender object for initialization.\n        :return: MugAttackRender object\n        \"\"\"", "\n", "return", "MugAttackRender", "(", "self", ".", "ctx", ",", "self", ".", "input_width", ",", "self", ".", "input_height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesSystematicCamera.__init__": [[154, 175], ["src.attack.AttackBatchesSystematicCamera.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "ctx", ",", "\n", "angles", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "num_of_batchs", "=", "64", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "self", ".", "ctx", "=", "ctx", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "angles", ",", "\n", "target_class", ",", "\n", "true_class", ",", "\n", "num_of_batchs", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesSystematicCamera._get_ann": [[176, 182], ["src.dnn.InceptionV3"], "methods", ["None"], ["", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate NeuralNetImagenet object for initialization.\n        :return: InceptionV3 object\n        \"\"\"", "\n", "return", "InceptionV3", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesSystematicCamera._get_attack_renderer": [[183, 189], ["src.mug.mug_render.MugAttackRender"], "methods", ["None"], ["", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate AttackRender object for initialization.\n        :return: MugAttackRender object\n        \"\"\"", "\n", "return", "MugAttackRender", "(", "self", ".", "ctx", ",", "self", ".", "input_width", ",", "self", ".", "input_height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesSystematicScene.__init__": [[192, 213], ["src.attack.AttackBatchesSystematicScene.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "ctx", ",", "\n", "transformations", ",", "\n", "target_class", ",", "\n", "true_class", "=", "504", ",", "\n", "num_of_batchs", "=", "64", ",", "\n", "learning_rate", "=", "0.25", ",", "\n", "iteration_num", "=", "100", ",", "\n", "iter_to_log", "=", "10", ",", "\n", "iter_to_save_img", "=", "100", ")", ":", "\n", "\n", "        ", "self", ".", "ctx", "=", "ctx", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "transformations", ",", "\n", "target_class", ",", "\n", "true_class", ",", "\n", "num_of_batchs", ",", "\n", "learning_rate", ",", "\n", "iteration_num", ",", "\n", "iter_to_log", ",", "\n", "iter_to_save_img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesSystematicScene._get_ann": [[214, 220], ["src.dnn.InceptionV3"], "methods", ["None"], ["", "def", "_get_ann", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate NeuralNetImagenet object for initialization.\n        :return: InceptionV3 object\n        \"\"\"", "\n", "return", "InceptionV3", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.mug.mug_attack.MugAttackBatchesSystematicScene._get_attack_renderer": [[221, 227], ["src.mug.mug_render.MugAttackRender"], "methods", ["None"], ["", "def", "_get_attack_renderer", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Generate AttackRender object for initialization.\n        :return: MugAttackRender object\n        \"\"\"", "\n", "return", "MugAttackRender", "(", "self", ".", "ctx", ",", "self", ".", "input_width", ",", "self", ".", "input_height", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.__init__": [[16, 30], ["attack_scene.AttackScene.get_default_model_matrix", "scene3d.Scene3D.__init__", "fbo.AttackFbo", "fbo.AttackFbo", "program.ProgramTexPhongShadowMultiOut", "attack_scene.AttackScene.generate_scene_vaos"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_default_model_matrix", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.generate_scene_vaos"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "self", ".", "background_objects", "=", "None", "\n", "self", ".", "patch_object", "=", "None", "\n", "\n", "self", ".", "model", "=", "self", ".", "get_default_model_matrix", "(", ")", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n", "self", ".", "fbo_background", "=", "AttackFbo", "(", "ctx", ",", "self", ".", "ctx", ".", "viewport", "[", "2", ":", "]", ")", "\n", "self", ".", "fbo_patch", "=", "AttackFbo", "(", "ctx", ",", "self", ".", "ctx", ".", "viewport", "[", "2", ":", "]", ")", "\n", "\n", "# TODO: option to select program, also separate light and shadow from scene", "\n", "self", ".", "program", "=", "ProgramTexPhongShadowMultiOut", "(", "self", ".", "ctx", ")", "\n", "self", ".", "generate_scene_vaos", "(", "self", ".", "program", ",", "is_main_vao", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._get_render_info": [[31, 34], ["attack_scene.AttackScene._render", "attack_scene.AttackScene._get_attack_info_after_render"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._render", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._get_attack_info_after_render"], ["", "def", "_get_render_info", "(", "self", ",", "model", ",", "light", ",", "camera", ")", ":", "\n", "        ", "self", ".", "_render", "(", "model", ",", "light", ",", "camera", ")", "\n", "return", "self", ".", "_get_attack_info_after_render", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_systematic": [[35, 44], ["attack_scene.AttackScene.create_model_matrix", "attack_scene.AttackScene._get_render_info"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.create_model_matrix", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._get_render_info"], ["", "def", "get_render_info_s_systematic", "(", "self", ",", "translation", ",", "rotation", ")", ":", "\n", "        ", "\"\"\"\n        Systematic sampling\n        :param translation: (x, y, z)\n        :param rotation: (x, y, z)\n        :return:\n        \"\"\"", "\n", "model", "=", "self", ".", "create_model_matrix", "(", "rotation", ",", "translation", ")", "\n", "return", "self", ".", "_get_render_info", "(", "model", ",", "self", ".", "light", ",", "self", ".", "camera", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.create_model_matrix": [[45, 55], ["transformation.get_rotation", "transformation.get_translation"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_rotation", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_translation"], ["", "def", "create_model_matrix", "(", "self", ",", "rotation", ",", "translation", ")", ":", "\n", "        ", "\"\"\"\n\n        :param rotation: (x, y, z)\n        :param translation: (x, y, z)\n        :return:\n        \"\"\"", "\n", "# TODO: Check input", "\n", "model", "=", "get_rotation", "(", "*", "rotation", ")", "*", "get_translation", "(", "*", "translation", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_random_t_scene": [[56, 64], ["attack_scene.AttackScene.get_random_model_matrix", "attack_scene.AttackScene.get_random_light_obj", "attack_scene.AttackScene._get_render_info"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_random_model_matrix", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_random_light_obj", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._get_render_info"], ["", "def", "get_render_info_s_random_t_scene", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Random sampling, scene transformations\n        :return:\n        \"\"\"", "\n", "model", "=", "self", ".", "get_random_model_matrix", "(", ")", "\n", "light", "=", "self", ".", "get_random_light_obj", "(", ")", "\n", "return", "self", ".", "_get_render_info", "(", "model", ",", "light", ",", "self", ".", "camera", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_random_t_camera": [[65, 73], ["attack_scene.AttackScene.get_random_light_obj", "attack_scene.AttackScene.get_random_camera_obj", "attack_scene.AttackScene._get_render_info"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_random_light_obj", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_random_camera_obj", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._get_render_info"], ["", "def", "get_render_info_s_random_t_camera", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Random sampling, camera transformations\n        :return:\n        \"\"\"", "\n", "light", "=", "self", ".", "get_random_light_obj", "(", ")", "\n", "camera", "=", "self", ".", "get_random_camera_obj", "(", ")", "\n", "return", "self", ".", "_get_render_info", "(", "self", ".", "model", ",", "light", ",", "camera", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_systematic_r_camera_polar": [[74, 86], ["copy.deepcopy", "copy.deepcopy.update_position_polar_degs", "attack_scene.AttackScene._get_render_info"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_polar_degs", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._get_render_info"], ["", "def", "get_render_info_s_systematic_r_camera_polar", "(", "self", ",", "r", ",", "theta", ",", "phi", ",", "to_lookat_center", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Systematic sampling, camera transformations for given polar angles\n        :param r:\n        :param theta:\n        :param phi:\n        :param to_lookat_center:\n        :return:\n        \"\"\"", "\n", "copy_camera", "=", "copy", ".", "deepcopy", "(", "self", ".", "camera", ")", "\n", "copy_camera", ".", "update_position_polar_degs", "(", "r", ",", "theta", ",", "phi", ",", "to_lookat_center", ")", "\n", "return", "self", ".", "_get_render_info", "(", "self", ".", "model", ",", "self", ".", "light", ",", "copy_camera", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_render_info_s_systematic_r_scene_random_light": [[87, 98], ["attack_scene.AttackScene.create_model_matrix", "attack_scene.AttackScene.get_random_light_obj", "attack_scene.AttackScene._get_render_info"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.create_model_matrix", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_random_light_obj", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._get_render_info"], ["", "def", "get_render_info_s_systematic_r_scene_random_light", "(", "self", ",", "rotation", ",", "translation", ")", ":", "\n", "        ", "\"\"\"\n        Systematic sampling, scene transformations and random light transformations.\n        :param rotation: (x, y, z)\n        :param translation: (x, y, z)\n        :return:\n        \"\"\"", "\n", "model", "=", "self", ".", "create_model_matrix", "(", "rotation", ",", "translation", ")", "\n", "light", "=", "self", ".", "get_random_light_obj", "(", ")", "\n", "\n", "return", "self", ".", "_get_render_info", "(", "model", ",", "light", ",", "self", ".", "camera", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_default_render_info": [[99, 101], ["attack_scene.AttackScene._get_render_info"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._get_render_info"], ["", "def", "get_default_render_info", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_get_render_info", "(", "self", ".", "model", ",", "self", ".", "light", ",", "self", ".", "camera", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_patch_texture_image": [[102, 104], ["attack_scene.AttackScene.patch_object.get_texture_image"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_texture_image"], ["", "def", "get_patch_texture_image", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "patch_object", ".", "get_texture_image", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._render": [[105, 121], ["attack_scene.AttackScene.ctx.enable_only", "attack_scene.AttackScene.generate_scene_shadow_map", "attack_scene.AttackScene.program.update_program_scene", "attack_scene.AttackScene.fbo_background.fbo.clear", "attack_scene.AttackScene.fbo_patch.fbo.clear", "attack_scene.AttackScene.program.update_program_object", "attack_scene.AttackScene.patch_object.get_vao().render", "attack_scene.AttackScene.program.update_program_object", "obj.get_vao().render", "attack_scene.AttackScene.patch_object.get_texture", "obj.get_texture", "attack_scene.AttackScene.patch_object.get_vao", "obj.get_vao"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.generate_scene_shadow_map", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program_scene", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program_object", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.render", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program_object", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.render", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_texture", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_texture", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_vao", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_vao"], ["", "def", "_render", "(", "self", ",", "model", ",", "light", ",", "camera", ")", ":", "\n", "        ", "self", ".", "ctx", ".", "enable_only", "(", "moderngl", ".", "DEPTH_TEST", ")", "\n", "light_map", "=", "self", ".", "generate_scene_shadow_map", "(", "model", ")", "\n", "\n", "self", ".", "program", ".", "update_program_scene", "(", "camera", ",", "model", ",", "light", ",", "light_map", ")", "\n", "\n", "self", ".", "fbo_background", ".", "fbo", ".", "clear", "(", ")", "\n", "with", "self", ".", "fbo_background", ".", "scope", ":", "\n", "            ", "for", "obj", "in", "self", ".", "background_objects", ":", "\n", "                ", "self", ".", "program", ".", "update_program_object", "(", "obj", ".", "material", ",", "obj", ".", "get_texture", "(", ")", ")", "\n", "obj", ".", "get_vao", "(", "is_main_vao", "=", "True", ")", ".", "render", "(", ")", "\n", "\n", "", "", "self", ".", "fbo_patch", ".", "fbo", ".", "clear", "(", ")", "\n", "with", "self", ".", "fbo_patch", ".", "scope", ":", "\n", "            ", "self", ".", "program", ".", "update_program_object", "(", "self", ".", "patch_object", ".", "material", ",", "self", ".", "patch_object", ".", "get_texture", "(", ")", ")", "\n", "self", ".", "patch_object", ".", "get_vao", "(", "is_main_vao", "=", "True", ")", ".", "render", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.load_scene_objects": [[122, 126], ["attack_scene.AttackScene.load_background_objects", "attack_scene.AttackScene.load_patch_objects"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.load_background_objects", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.load_patch_objects"], ["", "", "def", "load_scene_objects", "(", "self", ")", ":", "\n", "        ", "self", ".", "background_objects", "=", "self", ".", "load_background_objects", "(", ")", "\n", "self", ".", "patch_object", "=", "self", ".", "load_patch_objects", "(", ")", "\n", "return", "[", "self", ".", "patch_object", "]", "+", "self", ".", "background_objects", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._get_attack_info_after_render": [[127, 135], ["attack_scene.AttackScene._create_patch_mask", "attack_scene.AttackScene.fbo_patch.read_uv", "attack_scene.AttackScene.fbo_patch.read_light", "attack_scene.AttackScene.fbo_background.read_color"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._create_patch_mask", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.AttackFbo.read_uv", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.AttackFbo.read_light", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo.read_color"], ["", "def", "_get_attack_info_after_render", "(", "self", ")", ":", "\n", "        ", "target_mask", "=", "self", ".", "_create_patch_mask", "(", ")", "\n", "target_uv", "=", "self", ".", "fbo_patch", ".", "read_uv", "(", ")", "\n", "target_light", "=", "self", ".", "fbo_patch", ".", "read_light", "(", ")", "\n", "\n", "static_rgb", "=", "self", ".", "fbo_background", ".", "read_color", "(", ")", "[", ":", ",", ":", ",", ":", "3", "]", "\n", "\n", "return", "target_uv", ",", "target_mask", ",", "target_light", ",", "static_rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene._create_patch_mask": [[136, 148], ["attack_scene.AttackScene.fbo_background.read_depth", "attack_scene.AttackScene.fbo_patch.read_depth", "numpy.less().astype", "numpy.flip", "numpy.reshape", "numpy.less"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo.read_depth", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo.read_depth"], ["", "def", "_create_patch_mask", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Must be called only after self._render()!!!\n        :return:\n        \"\"\"", "\n", "depth_background", "=", "self", ".", "fbo_background", ".", "read_depth", "(", ")", "\n", "depth_patch", "=", "self", ".", "fbo_patch", ".", "read_depth", "(", ")", "\n", "\n", "mask", "=", "np", ".", "less", "(", "depth_patch", ",", "depth_background", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "mask", "=", "np", ".", "flip", "(", "mask", ",", "0", ")", "\n", "\n", "return", "np", ".", "reshape", "(", "mask", ",", "(", "*", "mask", ".", "shape", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.generate_scene_light": [[150, 153], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "generate_scene_light", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.generate_scene_camera": [[154, 157], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "generate_scene_camera", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.load_background_objects": [[158, 161], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "load_background_objects", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.load_patch_objects": [[162, 165], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "load_patch_objects", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_default_model_matrix": [[166, 169], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_default_model_matrix", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_random_model_matrix": [[170, 173], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_random_model_matrix", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_random_light_obj": [[174, 177], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_random_light_obj", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.attack_scene.AttackScene.get_random_camera_obj": [[178, 181], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_random_camera_obj", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.ObjTransform.__init__": [[34, 42], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "x_rotate_step", "=", "0.05", ",", "y_rotate_step", "=", "0.05", ",", "z_rotate_step", "=", "0.05", ")", ":", "\n", "        ", "self", ".", "_x_rotate_theta", "=", "0.0", "\n", "self", ".", "_y_rotate_theta", "=", "0.0", "\n", "self", ".", "_z_rotate_theta", "=", "0.0", "\n", "\n", "self", ".", "_x_rotate_step", "=", "x_rotate_step", "\n", "self", ".", "_y_rotate_step", "=", "y_rotate_step", "\n", "self", ".", "_z_rotate_step", "=", "z_rotate_step", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.ObjTransform.x_rotate_backward": [[43, 45], ["None"], "methods", ["None"], ["", "def", "x_rotate_backward", "(", "self", ")", ":", "\n", "        ", "self", ".", "_x_rotate_theta", "+=", "self", ".", "_x_rotate_step", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.ObjTransform.x_rotate_forward": [[46, 48], ["None"], "methods", ["None"], ["", "def", "x_rotate_forward", "(", "self", ")", ":", "\n", "        ", "self", ".", "_x_rotate_theta", "-=", "self", ".", "_x_rotate_step", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.ObjTransform.y_rotate_left": [[49, 51], ["None"], "methods", ["None"], ["", "def", "y_rotate_left", "(", "self", ")", ":", "\n", "        ", "self", ".", "_y_rotate_theta", "+=", "self", ".", "_y_rotate_step", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.ObjTransform.y_rotate_right": [[52, 54], ["None"], "methods", ["None"], ["", "def", "y_rotate_right", "(", "self", ")", ":", "\n", "        ", "self", ".", "_y_rotate_theta", "-=", "self", ".", "_y_rotate_step", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.ObjTransform.z_rotate_left": [[55, 57], ["None"], "methods", ["None"], ["", "def", "z_rotate_left", "(", "self", ")", ":", "\n", "        ", "self", ".", "_z_rotate_theta", "-=", "self", ".", "_z_rotate_step", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.ObjTransform.z_rotate_right": [[58, 60], ["None"], "methods", ["None"], ["", "def", "z_rotate_right", "(", "self", ")", ":", "\n", "        ", "self", ".", "_z_rotate_theta", "+=", "self", ".", "_z_rotate_step", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.ObjTransform.get_rotation_matrix": [[61, 66], ["camera.ObjTransform._module_thetas", "pyrr.Matrix44.from_z_rotation", "pyrr.Matrix44.from_x_rotation", "pyrr.Matrix44.from_y_rotation"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.ObjTransform._module_thetas"], ["", "def", "get_rotation_matrix", "(", "self", ")", ":", "\n", "        ", "self", ".", "_module_thetas", "(", ")", "\n", "return", "Matrix44", ".", "from_x_rotation", "(", "self", ".", "_x_rotate_theta", ")", "*", "Matrix44", ".", "from_y_rotation", "(", "self", ".", "_y_rotate_theta", ")", "*", "Matrix44", ".", "from_z_rotation", "(", "self", ".", "_z_rotate_theta", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.ObjTransform._module_thetas": [[67, 71], ["None"], "methods", ["None"], ["", "def", "_module_thetas", "(", "self", ")", ":", "\n", "        ", "self", ".", "_x_rotate_theta", "%=", "2", "*", "pi", "\n", "self", ".", "_y_rotate_theta", "%=", "2", "*", "pi", "\n", "self", ".", "_z_rotate_theta", "%=", "2", "*", "pi", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.__init__": [[75, 100], ["pyrr.Vector3", "pyrr.Vector3", "pyrr.Vector3"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "position", "=", "Vector3", "(", "[", "(", "0.0", ",", "0.0", ",", "4.0", ")", "]", ")", ",", "\n", "front", "=", "Vector3", "(", "[", "(", "0.0", ",", "0.0", ",", "-", "4.0", ")", "]", ")", ",", "\n", "up", "=", "Vector3", "(", "[", "(", "0.0", ",", "1.0", ",", "0.0", ")", "]", ")", ",", "\n", "dolly_step_size", "=", "0.5", ",", "\n", "pedestal_step_size", "=", "0.8", ",", "\n", "truck_step_size", "=", "0.8", ",", "\n", "mouse_sensitivity", "=", "0.3", ",", "\n", ")", ":", "\n", "\n", "        ", "self", ".", "_position", "=", "position", "\n", "self", ".", "_front", "=", "front", "\n", "self", ".", "_up", "=", "up", "\n", "\n", "# keyboard control ### TODO: move into a keyboard camera class", "\n", "self", ".", "_mouse_sensitivity", "=", "mouse_sensitivity", "\n", "\n", "self", ".", "_first_mouse", "=", "True", "\n", "\n", "self", ".", "_pitch", "=", "0.0", "\n", "self", ".", "_yaw", "=", "0.0", "\n", "\n", "self", ".", "_dolly_step_size", "=", "dolly_step_size", "\n", "self", ".", "_pedestal_step_size", "=", "pedestal_step_size", "\n", "self", ".", "_truck_step_size", "=", "truck_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.mouse_update": [[101, 126], ["math.sin", "camera.Camera._front.normalise", "math.cos", "math.cos", "math.radians", "math.sin", "math.cos", "math.radians", "math.radians", "math.radians", "math.radians"], "methods", ["None"], ["", "def", "mouse_update", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "if", "self", ".", "_first_mouse", ":", "\n", "            ", "self", ".", "_last_x", "=", "x", "\n", "self", ".", "_last_y", "=", "y", "\n", "self", ".", "_first_mouse", "=", "False", "\n", "\n", "", "dx", ",", "dy", "=", "x", "-", "self", ".", "_last_x", ",", "self", ".", "_last_y", "-", "y", "\n", "self", ".", "_last_x", ",", "self", ".", "_last_y", "=", "x", ",", "y", "\n", "\n", "dx", "*=", "self", ".", "_mouse_sensitivity", "\n", "dy", "*=", "self", ".", "_mouse_sensitivity", "\n", "\n", "self", ".", "_yaw", "+=", "dx", "\n", "self", ".", "_pitch", "+=", "dy", "\n", "\n", "if", "self", ".", "_pitch", ">", "89.0", ":", "\n", "            ", "self", ".", "_pitch", "=", "89.0", "\n", "", "if", "self", ".", "_pitch", "<", "-", "89.0", ":", "\n", "            ", "self", ".", "_pitch", "=", "-", "89.0", "\n", "\n", "", "self", ".", "_front", ".", "x", "=", "cos", "(", "radians", "(", "self", ".", "_yaw", ")", ")", "*", "cos", "(", "radians", "(", "self", ".", "_pitch", ")", ")", "\n", "self", ".", "_front", ".", "y", "=", "sin", "(", "radians", "(", "self", ".", "_pitch", ")", ")", "\n", "self", ".", "_front", ".", "z", "=", "sin", "(", "radians", "(", "self", ".", "_yaw", ")", ")", "*", "cos", "(", "radians", "(", "self", ".", "_pitch", ")", ")", "\n", "\n", "self", ".", "_front", ".", "normalise", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.dolly_in": [[127, 129], ["None"], "methods", ["None"], ["", "def", "dolly_in", "(", "self", ")", ":", "\n", "        ", "self", ".", "_position", "+=", "self", ".", "_front", "*", "self", ".", "_dolly_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.dolly_out": [[130, 132], ["None"], "methods", ["None"], ["", "def", "dolly_out", "(", "self", ")", ":", "\n", "        ", "self", ".", "_position", "-=", "self", ".", "_front", "*", "self", ".", "_dolly_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.pedestal_up": [[133, 135], ["None"], "methods", ["None"], ["", "def", "pedestal_up", "(", "self", ")", ":", "\n", "        ", "self", ".", "_position", "+=", "self", ".", "_up", "*", "self", ".", "_pedestal_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.pedestal_down": [[136, 138], ["None"], "methods", ["None"], ["", "def", "pedestal_down", "(", "self", ")", ":", "\n", "        ", "self", ".", "_position", "-=", "self", ".", "_up", "*", "self", ".", "_pedestal_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.truck_left": [[139, 141], ["camera.Camera._right"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera._right"], ["", "def", "truck_left", "(", "self", ")", ":", "\n", "        ", "self", ".", "_position", "+=", "self", ".", "_right", "(", ")", "*", "self", ".", "_truck_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.truck_right": [[142, 144], ["camera.Camera._right"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera._right"], ["", "def", "truck_right", "(", "self", ")", ":", "\n", "        ", "self", ".", "_position", "-=", "self", ".", "_right", "(", ")", "*", "self", ".", "_truck_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera._right": [[145, 147], ["pyrr.vector.normalize"], "methods", ["None"], ["", "def", "_right", "(", "self", ")", ":", "\n", "        ", "return", "vector", ".", "normalize", "(", "self", ".", "_front", "^", "self", ".", "_up", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.lookat_matrix": [[148, 150], ["pyrr.Matrix44.look_at"], "methods", ["None"], ["", "def", "lookat_matrix", "(", "self", ")", ":", "\n", "        ", "return", "Matrix44", ".", "look_at", "(", "self", ".", "_position", ",", "self", ".", "_position", "+", "self", ".", "_front", ",", "self", ".", "_up", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.get_view_position": [[151, 153], ["tuple"], "methods", ["None"], ["", "def", "get_view_position", "(", "self", ")", ":", "\n", "        ", "return", "tuple", "(", "self", ".", "_position", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_target_to_random_in_bound_by_position_cartesian": [[154, 166], ["logger.debug", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "pyrr.Vector3"], "methods", ["None"], ["", "def", "update_target_to_random_in_bound_by_position_cartesian", "(", "self", ",", "min_x", ",", "max_x", ",", "\n", "min_y", ",", "max_y", ",", "\n", "min_z", ",", "max_z", ",", "\n", "z_scale", ")", ":", "\n", "        ", "scale", "=", "self", ".", "_position", ".", "z", "/", "z_scale", "\n", "\n", "target_x", "=", "np", ".", "random", ".", "uniform", "(", "min_x", ",", "max_x", ")", "*", "scale", "\n", "target_y", "=", "np", ".", "random", ".", "uniform", "(", "min_y", ",", "max_y", ")", "*", "scale", "\n", "target_z", "=", "np", ".", "random", ".", "uniform", "(", "min_z", ",", "max_z", ")", "*", "scale", "\n", "\n", "self", ".", "_front", "=", "Vector3", "(", "[", "target_x", ",", "target_y", ",", "target_z", "]", ")", "-", "self", ".", "_position", "\n", "logger", ".", "debug", "(", "'Update front to: {}'", ".", "format", "(", "self", ".", "_front", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_to_random_in_bound_cartesian": [[168, 178], ["camera.Camera.update_position_cartesian", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_cartesian"], ["", "def", "update_position_to_random_in_bound_cartesian", "(", "self", ",", "\n", "min_x", ",", "max_x", ",", "\n", "min_y", ",", "max_y", ",", "\n", "min_z", ",", "max_z", ",", "\n", "to_lookat_center", "=", "True", "\n", ")", ":", "\n", "        ", "self", ".", "update_position_cartesian", "(", "np", ".", "random", ".", "uniform", "(", "min_x", ",", "max_x", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "min_y", ",", "max_y", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "min_z", ",", "max_z", ")", ",", "\n", "to_lookat_center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_to_random_in_bound_polar_deg": [[179, 189], ["camera.Camera.update_position_polar_degs", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_polar_degs"], ["", "def", "update_position_to_random_in_bound_polar_deg", "(", "self", ",", "\n", "min_r", ",", "max_r", ",", "\n", "min_theta", ",", "max_theta", ",", "\n", "min_phi", ",", "max_phi", ",", "\n", "to_lookat_center", "=", "True", "\n", ")", ":", "\n", "        ", "self", ".", "update_position_polar_degs", "(", "np", ".", "random", ".", "uniform", "(", "min_r", ",", "max_r", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "min_theta", ",", "max_theta", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "min_phi", ",", "max_phi", ")", ",", "\n", "to_lookat_center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_cartesian": [[191, 198], ["pyrr.Vector3", "logger.debug"], "methods", ["None"], ["", "def", "update_position_cartesian", "(", "self", ",", "x", ",", "y", ",", "z", ",", "to_lookat_center", "=", "True", ")", ":", "\n", "        ", "self", ".", "_position", "=", "Vector3", "(", "[", "x", ",", "y", ",", "z", "]", ")", "\n", "\n", "if", "to_lookat_center", ":", "\n", "            ", "self", ".", "_front", "=", "self", ".", "_position", ".", "inverse", "\n", "\n", "", "logger", ".", "debug", "(", "'Update position to: {}'", ".", "format", "(", "self", ".", "_position", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_polar_rads": [[199, 202], ["camera.polar_to_cartesian_radians", "camera.Camera.update_position_cartesian"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.polar_to_cartesian_radians", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_cartesian"], ["", "def", "update_position_polar_rads", "(", "self", ",", "r", ",", "theta", ",", "phi", ",", "to_lookat_center", "=", "True", ")", ":", "\n", "        ", "x", ",", "y", ",", "z", "=", "polar_to_cartesian_radians", "(", "r", ",", "theta", ",", "phi", ")", "\n", "self", ".", "update_position_cartesian", "(", "x", ",", "y", ",", "z", ",", "to_lookat_center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_polar_degs": [[203, 206], ["camera.polar_to_cartesian_degrees", "camera.Camera.update_position_cartesian"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.polar_to_cartesian_degrees", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_cartesian"], ["", "def", "update_position_polar_degs", "(", "self", ",", "r", ",", "theta", ",", "phi", ",", "to_lookat_center", "=", "True", ")", ":", "\n", "        ", "x", ",", "y", ",", "z", "=", "polar_to_cartesian_degrees", "(", "r", ",", "theta", ",", "phi", ")", "\n", "self", ".", "update_position_cartesian", "(", "x", ",", "y", ",", "z", ",", "to_lookat_center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.get_projection_matrix": [[208, 211], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_projection_matrix", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.PerspectiveCamera.__init__": [[214, 242], ["pyrr.Vector3", "pyrr.Vector3", "pyrr.Vector3", "camera.Camera.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "aspect_ratio", ",", "\n", "fov_degrees", "=", "45", ",", "\n", "near", "=", "1.0", ",", "\n", "far", "=", "1000.0", ",", "\n", "position", "=", "Vector3", "(", "[", "(", "0.0", ",", "0.0", ",", "70.0", ")", "]", ")", ",", "\n", "front", "=", "Vector3", "(", "[", "(", "0.0", ",", "0.0", ",", "-", "4.0", ")", "]", ")", ",", "\n", "up", "=", "Vector3", "(", "[", "(", "0.0", ",", "1.0", ",", "0.0", ")", "]", ")", ",", "\n", "dolly_step_size", "=", "0.5", ",", "\n", "pedestal_step_size", "=", "0.8", ",", "\n", "truck_step_size", "=", "0.8", ",", "\n", "zoom_step_size", "=", "0.8", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "position", ",", "\n", "front", ",", "\n", "up", ",", "\n", "dolly_step_size", ",", "\n", "pedestal_step_size", ",", "\n", "truck_step_size", ",", "\n", ")", "\n", "\n", "# TODO check input", "\n", "self", ".", "_fov_degrees", "=", "fov_degrees", "\n", "self", ".", "_aspect_ratio", "=", "aspect_ratio", "\n", "self", ".", "_near", "=", "near", "\n", "self", ".", "_far", "=", "far", "\n", "\n", "self", ".", "_zoom_step_size", "=", "zoom_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.PerspectiveCamera.zoom_in": [[243, 245], ["None"], "methods", ["None"], ["", "def", "zoom_in", "(", "self", ")", ":", "\n", "        ", "self", ".", "_fov_degrees", "-=", "self", ".", "_zoom_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.PerspectiveCamera.zoom_out": [[246, 248], ["None"], "methods", ["None"], ["", "def", "zoom_out", "(", "self", ")", ":", "\n", "        ", "self", ".", "_fov_degrees", "+=", "self", ".", "_zoom_step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.PerspectiveCamera.get_projection_matrix": [[249, 251], ["pyrr.Matrix44.perspective_projection"], "methods", ["None"], ["", "def", "get_projection_matrix", "(", "self", ")", ":", "\n", "        ", "return", "Matrix44", ".", "perspective_projection", "(", "self", ".", "_fov_degrees", ",", "self", ".", "_aspect_ratio", ",", "self", ".", "_near", ",", "self", ".", "_far", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.polar_to_cartesian_radians": [[14, 27], ["numpy.cos", "numpy.sin", "numpy.cos", "numpy.cos", "numpy.sin"], "function", ["None"], ["def", "polar_to_cartesian_radians", "(", "r", ",", "theta", ",", "phi", ")", ":", "\n", "    ", "\"\"\"\n\n    :param r: radius\n    :param theta: from x-axis on plane xz (around y). 0 to 2pi\n    :param phi: from x-axis up. 2 to pi\n    :return:\n    \"\"\"", "\n", "x", "=", "r", "*", "np", ".", "cos", "(", "theta", ")", "*", "np", ".", "cos", "(", "phi", ")", "\n", "y", "=", "r", "*", "np", ".", "sin", "(", "phi", ")", "\n", "z", "=", "r", "*", "np", ".", "sin", "(", "theta", ")", "*", "np", ".", "cos", "(", "phi", ")", "\n", "\n", "return", "x", ",", "y", ",", "z", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.polar_to_cartesian_degrees": [[29, 31], ["camera.polar_to_cartesian_radians", "numpy.radians", "numpy.radians"], "function", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.polar_to_cartesian_radians"], ["", "def", "polar_to_cartesian_degrees", "(", "r", ",", "theta", ",", "phi", ")", ":", "\n", "    ", "return", "polar_to_cartesian_radians", "(", "r", ",", "np", ".", "radians", "(", "theta", ")", ",", "np", ".", "radians", "(", "phi", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.Program.__init__": [[13, 20], ["program.Program.get_program"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramShadow.get_program"], ["def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "\"\"\"\n        Builds the program object\n        :param ctx: moderngl context\n        \"\"\"", "\n", "self", ".", "ctx", "=", "ctx", "\n", "self", ".", "prog", "=", "self", ".", "get_program", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.Program.load_vao": [[21, 31], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "load_vao", "(", "self", ",", "obj", ")", ":", "\n", "        ", "\"\"\"\n        Creates a simple vertex array based on an object.\n        An abstract method!\n        :param obj: obj file. The output of objectloader.open\n        :return: a simple vertex array based on the\n        input object and this program.\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.Program.get_program": [[32, 40], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_program", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Create and return this program using self.ctx\n        An abstract method!\n        :return: moderngl program object\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadow.__init__": [[52, 58], ["program.Program.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "\"\"\"\n        Builds the program object\n        :param ctx: moderngl context\n        \"\"\"", "\n", "Program", ".", "__init__", "(", "self", ",", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadow.load_vao": [[59, 69], ["program.ProgramTexPhongShadow.ctx.buffer", "program.ProgramTexPhongShadow.ctx.simple_vertex_array", "obj.pack"], "methods", ["None"], ["", "def", "load_vao", "(", "self", ",", "obj", ")", ":", "\n", "        ", "\"\"\"\n        Creates a simple vertex array based on an object.\n        :param obj: obj file. The output of objectloader.open. The model must\n        have position (vec3), normals (vec3) and uv mapping (vec2)\n        :return: a simple vertex array based on the\n        input object and this program.\n        \"\"\"", "\n", "vbo", "=", "self", ".", "ctx", ".", "buffer", "(", "obj", ".", "pack", "(", "'vx vy vz nx ny nz tx ty'", ")", ")", "\n", "return", "self", ".", "ctx", ".", "simple_vertex_array", "(", "self", ".", "prog", ",", "vbo", ",", "'in_pos'", ",", "'in_norm'", ",", "'in_uv'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadow.get_program": [[70, 156], ["program.ProgramTexPhongShadow.ctx.program"], "methods", ["None"], ["", "def", "get_program", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Create and return this program using self.ctx\n        :return: moderngl program object\n        \"\"\"", "\n", "return", "self", ".", "ctx", ".", "program", "(", "\n", "vertex_shader", "=", "'''\n                        #version 330\n\n                        uniform mat4 ViewModel;\n                        uniform mat4 NormalViewModel;\n                        uniform mat4 Projection;\n                        uniform mat4 DepthBiasMVP;\n\n                        in vec3 in_pos;\n                        in vec3 in_norm;\n                        in vec2 in_uv;\n\n                        out vec3 v_pos;\n                        out vec3 v_norm;\n                        out vec2 v_uv;\n                        out vec4 v_shadow_uv;\n\n                        void main() {\n                            vec4 position = ViewModel * vec4(in_pos, 1.0);\n                            gl_Position = Projection * position;\n\n                            v_pos = position.xyz;\n                            v_norm = normalize(NormalViewModel * vec4(in_norm, 1.0)).xyz;\n                            v_uv = in_uv;\n                            v_shadow_uv = DepthBiasMVP * vec4(in_pos, 1.0);\n                        }\n                    '''", ",", "\n", "fragment_shader", "=", "'''\n                            #version 330\n\n                            uniform vec3 LightPos;\n                            uniform vec3 LightColor;\n\n                            uniform vec3 Ka;\n                            uniform vec3 Kd;\n                            uniform vec3 Ks;\n                            uniform float Ns;\n\n                            uniform vec3 ViewPos;\n\n                            uniform sampler2D Texture;\n                            uniform sampler2D ShadowMap;\n\n                            in vec3 v_pos;\n                            in vec3 v_norm;\n                            in vec2 v_uv;\n                            in vec4 v_shadow_uv;\n\n                            out vec4 out_color;\n\n                            void main() {    \n                                vec3 norm = normalize(v_norm);\n\n                                float bias = 0.005;\n                                float visibility = 1.0;\n                                if (textureProj(ShadowMap, (v_shadow_uv.xyw)).r < (v_shadow_uv.z-bias)/v_shadow_uv.w) {\n                                    visibility = 0.7;\n                                }\n\n                                // ambient\n                                vec3 ambient = LightColor * Ka;\n\n                                // diffuse \n                                vec3 lightDir = normalize(LightPos - v_pos);\n                                float diff = max(dot(norm, lightDir), 0.0);\n                                vec3 diffuse = visibility * LightColor * (diff * Kd);\n\n                                // specular\n                                vec3 viewDir = normalize(ViewPos - v_pos);\n                                vec3 reflectDir = reflect(-lightDir, norm);  \n                                float spec = pow(max(dot(viewDir, reflectDir), 0.0), Ns);\n                                vec3 specular = visibility * LightColor * (spec * Ks);  \n\n                                vec3 obj_color = texture(Texture, v_uv).rgb;\n\n                                vec3 lum = diffuse + specular + ambient;\n                                out_color = vec4(obj_color * lum , 1.0);\n                            }\n\n                        '''", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadow.update_program": [[158, 161], ["program.ProgramTexPhongShadow.update_program_scene", "program.ProgramTexPhongShadow.update_program_obj"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program_scene", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadow.update_program_obj"], ["", "def", "update_program", "(", "self", ",", "camera", ",", "model", ",", "light", ",", "depth_texture", ",", "material", ",", "texture", ")", ":", "\n", "        ", "self", ".", "update_program_scene", "(", "camera", ",", "model", ",", "light", ",", "depth_texture", ")", "\n", "self", ".", "update_program_obj", "(", "material", ",", "texture", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadow.update_program_scene": [[162, 181], ["numpy.transpose", "program.ProgramTexPhongShadow.prog[].write", "program.ProgramTexPhongShadow.prog[].write", "program.ProgramTexPhongShadow.prog[].write", "camera.get_view_position", "light.get_depth_bias_mvp", "program.ProgramTexPhongShadow.prog[].write", "depth_texture.use", "camera.lookat_matrix", "numpy.linalg.inv", "camera.get_projection_matrix().astype().tobytes", "view_model.astype().tobytes", "numpy.transpose.astype().tobytes", "light.get_depth_bias_mvp.astype().tobytes", "camera.get_projection_matrix().astype", "view_model.astype", "numpy.transpose.astype", "light.get_depth_bias_mvp.astype", "camera.get_projection_matrix"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.get_view_position", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.get_depth_bias_mvp", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.lookat_matrix", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.PerspectiveCamera.get_projection_matrix"], ["", "def", "update_program_scene", "(", "self", ",", "camera", ",", "model", ",", "light", ",", "depth_texture", ")", ":", "\n", "        ", "view_model", "=", "camera", ".", "lookat_matrix", "(", ")", "*", "model", "\n", "n_view_model", "=", "np", ".", "transpose", "(", "np", ".", "linalg", ".", "inv", "(", "view_model", ")", ")", "\n", "\n", "self", ".", "prog", "[", "\"Projection\"", "]", ".", "write", "(", "camera", ".", "get_projection_matrix", "(", ")", ".", "astype", "(", "'f4'", ")", ".", "tobytes", "(", ")", ")", "\n", "self", ".", "prog", "[", "\"ViewModel\"", "]", ".", "write", "(", "view_model", ".", "astype", "(", "'f4'", ")", ".", "tobytes", "(", ")", ")", "\n", "self", ".", "prog", "[", "\"NormalViewModel\"", "]", ".", "write", "(", "n_view_model", ".", "astype", "(", "'f4'", ")", ".", "tobytes", "(", ")", ")", "\n", "self", ".", "prog", "[", "\"ViewPos\"", "]", ".", "value", "=", "camera", ".", "get_view_position", "(", ")", "\n", "\n", "depth_bias_mvp", "=", "light", ".", "get_depth_bias_mvp", "(", "model", ")", "\n", "self", ".", "prog", "[", "\"DepthBiasMVP\"", "]", ".", "write", "(", "depth_bias_mvp", ".", "astype", "(", "'f4'", ")", ".", "tobytes", "(", ")", ")", "\n", "\n", "self", ".", "prog", "[", "\"LightPos\"", "]", ".", "value", "=", "light", ".", "position", "\n", "self", ".", "prog", "[", "\"LightColor\"", "]", ".", "value", "=", "light", ".", "color", "\n", "\n", "self", ".", "prog", "[", "'Texture'", "]", ".", "value", "=", "0", "\n", "self", ".", "prog", "[", "'ShadowMap'", "]", ".", "value", "=", "1", "\n", "\n", "depth_texture", ".", "use", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadow.update_program_obj": [[182, 194], ["texture.use"], "methods", ["None"], ["", "def", "update_program_obj", "(", "self", ",", "material", ",", "texture", ")", ":", "\n", "        ", "\"\"\"\n\n        :param material: the material object of this vao\n        :return:\n        \"\"\"", "\n", "self", ".", "prog", "[", "\"Ka\"", "]", ".", "value", "=", "material", ".", "ambient", "\n", "self", ".", "prog", "[", "\"Kd\"", "]", ".", "value", "=", "material", ".", "diffuse", "\n", "self", ".", "prog", "[", "\"Ks\"", "]", ".", "value", "=", "material", ".", "specular", "\n", "self", ".", "prog", "[", "\"Ns\"", "]", ".", "value", "=", "material", ".", "shininess", "\n", "\n", "texture", ".", "use", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.__init__": [[203, 209], ["program.Program.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "\"\"\"\n        Builds the program object\n        :param ctx: moderngl context\n        \"\"\"", "\n", "Program", ".", "__init__", "(", "self", ",", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.load_vao": [[210, 221], ["program.ProgramTexPhongShadowMultiOut.ctx.buffer", "program.ProgramTexPhongShadowMultiOut.ctx.simple_vertex_array", "obj.pack"], "methods", ["None"], ["", "def", "load_vao", "(", "self", ",", "obj", ")", ":", "\n", "        ", "\"\"\"\n        Creates a simple vertex array based on an object.\n        :param obj: obj file. The output of objectloader.open. The model must\n        have position (vec3), normals (vec3) and uv mapping (vec2)\n        :return: a simple vertex array based on the\n        input object and this program.\n        \"\"\"", "\n", "vbo", "=", "self", ".", "ctx", ".", "buffer", "(", "obj", ".", "pack", "(", "'vx vy vz nx ny nz tx ty'", ")", ")", "\n", "return", "self", ".", "ctx", ".", "simple_vertex_array", "(", "self", ".", "prog", ",", "vbo", ",", "\n", "'in_pos'", ",", "'in_norm'", ",", "'in_uv'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.get_program": [[222, 314], ["program.ProgramTexPhongShadowMultiOut.ctx.program"], "methods", ["None"], ["", "def", "get_program", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Create and return this program using self.ctx\n        :return: moderngl program object\n        \"\"\"", "\n", "return", "self", ".", "ctx", ".", "program", "(", "\n", "vertex_shader", "=", "'''\n                        #version 330\n\n                        uniform mat4 ViewModel;\n                        uniform mat4 NormalViewModel;\n                        uniform mat4 Projection;\n                        uniform mat4 DepthBiasMVP;\n\n                        in vec3 in_pos;\n                        in vec3 in_norm;\n                        in vec2 in_uv;\n\n                        out vec3 v_pos;\n                        out vec3 v_norm;\n                        out vec2 v_uv;\n                        out vec4 v_shadow_uv;\n\n\n                        void main() {\n                            vec4 position = ViewModel * vec4(in_pos, 1.0);\n                            gl_Position = Projection * position;\n\n                            v_pos = position.xyz;\n                            v_norm = normalize(NormalViewModel * vec4(in_norm, 1.0)).xyz;\n                            v_uv = in_uv;\n                            v_shadow_uv = DepthBiasMVP * vec4(in_pos, 1.0);\n\n                        }\n                    '''", ",", "\n", "fragment_shader", "=", "'''\n                            #version 330\n\n                            uniform vec3 LightPos;\n                            uniform vec3 LightColor;\n\n                            uniform vec3 Ka;\n                            uniform vec3 Kd;\n                            uniform vec3 Ks;\n                            uniform float Ns;\n\n                            uniform vec3 ViewPos;\n\n                            uniform sampler2D Texture;\n                            uniform sampler2D ShadowMap;\n\n                            in vec3 v_pos;\n                            in vec3 v_norm;\n                            in vec2 v_uv;\n                            in vec4 v_shadow_uv;\n\n                            layout(location = 0) out vec4 f_color;\n                            layout(location = 1) out vec2 f_uv;\n                            layout(location = 2) out vec4 f_light; // some opengl implementations don't support 3 component buffers so one value is not needed\n\n                            void main() {\n                                vec3 norm = normalize(v_norm);\n\n                                float bias = 0.005;\n                                float visibility = 1.0;\n                                if (textureProj(ShadowMap, (v_shadow_uv.xyw)).r < (v_shadow_uv.z-bias)/v_shadow_uv.w){\n                                    visibility = 0.5;\n                                }\n\n                                // ambient\n                                vec3 ambient = LightColor * Ka;\n\n                                // diffuse\n                                vec3 lightDir = normalize(LightPos - v_pos);\n                                float diff = max(dot(norm, lightDir), 0.0);\n                                vec3 diffuse = visibility * LightColor * (diff * Kd);\n\n                                // specular\n                                vec3 viewDir = normalize(ViewPos - v_pos);\n                                vec3 reflectDir = reflect(-lightDir, norm);\n                                float spec = pow(max(dot(viewDir, reflectDir), 0.0), Ns);\n                                vec3 specular = visibility * LightColor * (spec * Ks);\n\n                                vec3 obj_color = texture(Texture, v_uv).rgb;\n                                vec3 lum = diffuse + specular + ambient;\n\n                                f_color = clamp(vec4(obj_color * lum , 1.0), 0.0, 1.0);\n                                f_uv = textureSize(Texture, 0) * v_uv;\n                                f_light = vec4(lum, 6.9);\n                            }\n\n                        '''", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program": [[316, 319], ["program.ProgramTexPhongShadowMultiOut.update_program_scene", "program.ProgramTexPhongShadowMultiOut.update_program_object"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program_scene", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program_object"], ["", "def", "update_program", "(", "self", ",", "camera", ",", "model", ",", "light", ",", "depth_texture", ",", "material", ",", "texture", ")", ":", "\n", "        ", "self", ".", "update_program_scene", "(", "camera", ",", "model", ",", "light", ",", "depth_texture", ")", "\n", "self", ".", "update_program_object", "(", "material", ",", "texture", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program_scene": [[320, 339], ["numpy.transpose", "program.ProgramTexPhongShadowMultiOut.prog[].write", "program.ProgramTexPhongShadowMultiOut.prog[].write", "program.ProgramTexPhongShadowMultiOut.prog[].write", "camera.get_view_position", "light.get_depth_bias_mvp", "program.ProgramTexPhongShadowMultiOut.prog[].write", "depth_texture.use", "camera.lookat_matrix", "numpy.linalg.inv", "camera.get_projection_matrix().astype().tobytes", "view_model.astype().tobytes", "numpy.transpose.astype().tobytes", "light.get_depth_bias_mvp.astype().tobytes", "camera.get_projection_matrix().astype", "view_model.astype", "numpy.transpose.astype", "light.get_depth_bias_mvp.astype", "camera.get_projection_matrix"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.get_view_position", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.get_depth_bias_mvp", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.lookat_matrix", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.PerspectiveCamera.get_projection_matrix"], ["", "def", "update_program_scene", "(", "self", ",", "camera", ",", "model", ",", "light", ",", "depth_texture", ")", ":", "\n", "        ", "view_model", "=", "camera", ".", "lookat_matrix", "(", ")", "*", "model", "\n", "n_view_model", "=", "np", ".", "transpose", "(", "np", ".", "linalg", ".", "inv", "(", "view_model", ")", ")", "\n", "\n", "self", ".", "prog", "[", "\"Projection\"", "]", ".", "write", "(", "camera", ".", "get_projection_matrix", "(", ")", ".", "astype", "(", "'f4'", ")", ".", "tobytes", "(", ")", ")", "\n", "self", ".", "prog", "[", "\"ViewModel\"", "]", ".", "write", "(", "view_model", ".", "astype", "(", "'f4'", ")", ".", "tobytes", "(", ")", ")", "\n", "self", ".", "prog", "[", "\"NormalViewModel\"", "]", ".", "write", "(", "n_view_model", ".", "astype", "(", "'f4'", ")", ".", "tobytes", "(", ")", ")", "\n", "self", ".", "prog", "[", "\"ViewPos\"", "]", ".", "value", "=", "camera", ".", "get_view_position", "(", ")", "\n", "\n", "depth_bias_mvp", "=", "light", ".", "get_depth_bias_mvp", "(", "model", ")", "\n", "self", ".", "prog", "[", "\"DepthBiasMVP\"", "]", ".", "write", "(", "depth_bias_mvp", ".", "astype", "(", "'f4'", ")", ".", "tobytes", "(", ")", ")", "\n", "\n", "self", ".", "prog", "[", "\"LightPos\"", "]", ".", "value", "=", "light", ".", "position", "\n", "self", ".", "prog", "[", "\"LightColor\"", "]", ".", "value", "=", "light", ".", "color", "\n", "\n", "self", ".", "prog", "[", "'Texture'", "]", ".", "value", "=", "0", "\n", "self", ".", "prog", "[", "'ShadowMap'", "]", ".", "value", "=", "1", "\n", "\n", "depth_texture", ".", "use", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program_object": [[340, 352], ["texture.use"], "methods", ["None"], ["", "def", "update_program_object", "(", "self", ",", "material", ",", "texture", ")", ":", "\n", "        ", "\"\"\"\n\n        :param material: the material object of this vao\n        :return:\n        \"\"\"", "\n", "self", ".", "prog", "[", "\"Ka\"", "]", ".", "value", "=", "material", ".", "ambient", "\n", "self", ".", "prog", "[", "\"Kd\"", "]", ".", "value", "=", "material", ".", "diffuse", "\n", "self", ".", "prog", "[", "\"Ks\"", "]", ".", "value", "=", "material", ".", "specular", "\n", "self", ".", "prog", "[", "\"Ns\"", "]", ".", "value", "=", "material", ".", "shininess", "\n", "\n", "texture", ".", "use", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramShadow.__init__": [[361, 367], ["program.Program.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "\"\"\"\n        Builds the program object\n        :param ctx: moderngl context\n        \"\"\"", "\n", "Program", ".", "__init__", "(", "self", ",", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramShadow.load_vao": [[368, 378], ["program.ProgramShadow.ctx.buffer", "program.ProgramShadow.ctx.simple_vertex_array", "obj.pack"], "methods", ["None"], ["", "def", "load_vao", "(", "self", ",", "obj", ")", ":", "\n", "        ", "\"\"\"\n        Creates a simple vertex array based on an object.\n        :param obj: obj file. The output of objectloader.open.\n        The model must have position (vec3)\n        :return: a simple vertex array based on the\n        input object and this program.\n        \"\"\"", "\n", "vbo", "=", "self", ".", "ctx", ".", "buffer", "(", "obj", ".", "pack", "(", "'vx vy vz'", ")", ")", "\n", "return", "self", ".", "ctx", ".", "simple_vertex_array", "(", "self", ".", "prog", ",", "vbo", ",", "'in_pos'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramShadow.get_program": [[379, 406], ["program.ProgramShadow.ctx.program"], "methods", ["None"], ["", "def", "get_program", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Create and return this program using self.ctx\n        :return: moderngl program object\n        \"\"\"", "\n", "return", "self", ".", "ctx", ".", "program", "(", "\n", "vertex_shader", "=", "'''\n                        #version 330\n\n                        uniform mat4 DepthMVP;\n\n                        in vec3 in_pos;\n\n                        void main() {\n                            gl_Position = DepthMVP * vec4(in_pos, 1.0);\n                        }\n                    '''", ",", "\n", "fragment_shader", "=", "'''\n                        #version 330\n\n                        out float out_depth;\n\n                        void main() {    \n                            out_depth = gl_FragCoord.z;\n                        }\n\n                    '''", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramShadow.update_program": [[408, 417], ["program.ProgramShadow.prog[].write", "depth_mvp.astype().tobytes", "depth_mvp.astype"], "methods", ["None"], ["", "def", "update_program", "(", "self", ",", "depth_mvp", ")", ":", "\n", "        ", "\"\"\"\n        Update this program using the input params.\n        :param depth_mvp: the MVP matrix from the light perspective. Use\n        orthogonal projection matrix for directional light or perspective\n        projection matrix for indirect light (spotlight or point light)\n        :return:\n        \"\"\"", "\n", "self", ".", "prog", "[", "\"DepthMVP\"", "]", ".", "write", "(", "depth_mvp", ".", "astype", "(", "'f4'", ")", ".", "tobytes", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.__init__": [[17, 33], ["object3d.Object3D.generate_material"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.generate_material"], ["def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "\"\"\"\n        (Abstract) Creates the programs and build the object's VAOs from an .obj file.\n        :param ctx: The scene context. Could be standalone or window\n        \"\"\"", "\n", "self", ".", "ctx", "=", "ctx", "\n", "self", ".", "name_dir", "=", "''", "\n", "self", ".", "name_obj", "=", "''", "\n", "self", ".", "name_tex_file", "=", "''", "\n", "self", ".", "material", "=", "self", ".", "generate_material", "(", ")", "\n", "self", ".", "obj", "=", "None", "\n", "self", ".", "texture", "=", "None", "\n", "self", ".", "vao_main", "=", "None", "\n", "self", ".", "vao_shadow", "=", "None", "\n", "\n", "self", ".", "transpose_texture", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.generate_material": [[34, 41], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "generate_material", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        (Abstract) Generate the Material object of the 3D model\n        :return: Material object of the 3D model\n        \"\"\"", "\n", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_obj_file": [[42, 54], ["data.get_model_path", "logger.debug", "objloader.Obj.open"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.data.__init__.get_model_path"], ["", "def", "get_obj_file", "(", "self", ")", ":", "# TODO: throw exp is file not exist", "\n", "        ", "\"\"\"\n        Getter for the obj file's data. Reads the file if needed.\n        :return: obj file's data\n        \"\"\"", "\n", "if", "self", ".", "obj", "is", "None", ":", "\n", "            ", "path", "=", "get_model_path", "(", "\n", "self", ".", "name_dir", ",", "'{}.obj'", ".", "format", "(", "self", ".", "name_obj", ")", ")", "\n", "logger", ".", "debug", "(", "'Openning: {}'", ".", "format", "(", "path", ")", ")", "\n", "self", ".", "obj", "=", "Obj", ".", "open", "(", "path", ")", "\n", "\n", "", "return", "self", ".", "obj", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_texture_image": [[55, 67], ["data.get_model_path", "logger.debug", "PIL.Image.open", "image.transpose.transpose.convert", "PIL.Image.frombytes", "logger.debug", "image.transpose.transpose.transpose", "object3d.Object3D.texture.read"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.data.__init__.get_model_path"], ["", "def", "get_texture_image", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "texture", "is", "None", ":", "\n", "            ", "path", "=", "get_model_path", "(", "self", ".", "name_dir", ",", "self", ".", "name_tex_file", ")", "\n", "logger", ".", "debug", "(", "'Openning: {}'", ".", "format", "(", "path", ")", ")", "\n", "\n", "image", "=", "Image", ".", "open", "(", "path", ")", "\n", "if", "self", ".", "transpose_texture", ":", "\n", "                ", "logger", ".", "debug", "(", "'Transposing {} texture'", ".", "format", "(", "self", ".", "name_obj", ")", ")", "\n", "image", "=", "image", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "", "return", "image", ".", "convert", "(", "'RGB'", ")", "\n", "", "else", ":", "\n", "            ", "return", "Image", ".", "frombytes", "(", "self", ".", "texture", ".", "read", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.set_texture": [[68, 74], ["object3d.Object3D.ctx.texture", "image.transpose.transpose.transpose", "numpy.asarray().astype", "converted.tobytes", "numpy.asarray"], "methods", ["None"], ["", "", "def", "set_texture", "(", "self", ",", "image", ":", "Image", ",", "to_flip", "=", "True", ")", ":", "\n", "        ", "if", "to_flip", ":", "\n", "            ", "image", "=", "image", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "\n", "", "converted", "=", "np", ".", "asarray", "(", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "self", ".", "texture", "=", "self", ".", "ctx", ".", "texture", "(", "converted", ".", "shape", "[", ":", "2", "]", "[", ":", ":", "-", "1", "]", ",", "3", ",", "converted", ".", "tobytes", "(", ")", ",", "dtype", "=", "'f4'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_texture": [[75, 82], ["object3d.Object3D.get_texture_image", "object3d.Object3D.ctx.texture", "numpy.asarray().astype", "converted.tobytes", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_texture_image"], ["", "def", "get_texture", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "texture", "is", "None", ":", "\n", "            ", "image", "=", "self", ".", "get_texture_image", "(", ")", "\n", "converted", "=", "np", ".", "asarray", "(", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", "\n", "\n", "self", ".", "texture", "=", "self", ".", "ctx", ".", "texture", "(", "converted", ".", "shape", "[", ":", "2", "]", "[", ":", ":", "-", "1", "]", ",", "3", ",", "converted", ".", "tobytes", "(", ")", ",", "dtype", "=", "'f4'", ")", "\n", "", "return", "self", ".", "texture", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_vao": [[84, 93], ["TypeError"], "methods", ["None"], ["", "def", "get_vao", "(", "self", ",", "is_main_vao", "=", "True", ")", ":", "\n", "        ", "if", "is_main_vao", ":", "\n", "            ", "vao", "=", "self", ".", "vao_main", "\n", "", "else", ":", "\n", "            ", "vao", "=", "self", ".", "vao_shadow", "\n", "", "if", "vao", "is", "None", ":", "\n", "            ", "raise", "TypeError", "(", "\"vao not initialized\"", ")", "\n", "\n", "", "return", "vao", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.update_and_get_vao": [[94, 101], ["program.load_vao", "program.load_vao", "object3d.Object3D.get_obj_file", "object3d.Object3D.get_obj_file"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramShadow.load_vao", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramShadow.load_vao", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_obj_file", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_obj_file"], ["", "def", "update_and_get_vao", "(", "self", ",", "program", ",", "is_main_vao", "=", "True", ")", ":", "\n", "        ", "if", "is_main_vao", ":", "\n", "            ", "self", ".", "vao_main", "=", "program", ".", "load_vao", "(", "self", ".", "get_obj_file", "(", ")", ")", "\n", "return", "self", ".", "vao_main", "\n", "", "else", ":", "\n", "            ", "self", ".", "vao_shadow", "=", "program", ".", "load_vao", "(", "self", ".", "get_obj_file", "(", ")", ")", "\n", "return", "self", ".", "vao_shadow", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_random_z_view_position": [[8, 18], ["numpy.random.uniform"], "function", ["None"], ["def", "get_random_z_view_position", "(", "far", "=", "3.0", ",", "close", "=", "2.0", ")", ":", "\n", "    ", "\"\"\"\n    Return a view position vector with 0.0 for x and y.\n    The value of z will be a random (uniform)\n    between :param close: to :param far\n    :param far: max\n    :param close:\n    :return:\n    \"\"\"", "\n", "return", "0.0", ",", "0.0", ",", "np", ".", "random", ".", "uniform", "(", "close", ",", "far", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_random_light": [[20, 34], ["numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "function", ["None"], ["", "def", "get_random_light", "(", "x_min", ",", "x_max", ",", "y_min", ",", "y_max", ",", "z_min", ",", "z_max", ")", ":", "\n", "    ", "\"\"\"\n\n    :param x_min:\n    :param x_max:\n    :param y_min:\n    :param y_max:\n    :param z_min:\n    :param z_max:\n    :return:\n    \"\"\"", "\n", "return", "(", "np", ".", "random", ".", "uniform", "(", "x_min", ",", "x_max", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "y_min", ",", "y_max", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "z_min", ",", "z_max", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_random_rotation": [[36, 40], ["transformation.get_rotation", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_rotation"], ["", "def", "get_random_rotation", "(", "x_min", ",", "x_max", ",", "y_min", ",", "y_max", ",", "z_min", ",", "z_max", ")", ":", "\n", "    ", "return", "get_rotation", "(", "np", ".", "random", ".", "uniform", "(", "x_min", ",", "x_max", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "y_min", ",", "y_max", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "z_min", ",", "z_max", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_random_translation": [[42, 46], ["transformation.get_translation", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform"], "function", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_translation"], ["", "def", "get_random_translation", "(", "x_min", ",", "x_max", ",", "y_min", ",", "y_max", ",", "z_min", ",", "z_max", ")", ":", "\n", "    ", "return", "get_translation", "(", "np", ".", "random", ".", "uniform", "(", "x_min", ",", "x_max", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "y_min", ",", "y_max", ")", ",", "\n", "np", ".", "random", ".", "uniform", "(", "z_min", ",", "z_max", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_rotation": [[48, 55], ["logger.debug", "pyrr.Matrix44.from_x_rotation", "pyrr.Matrix44.from_y_rotation", "pyrr.Matrix44.from_z_rotation"], "function", ["None"], ["", "def", "get_rotation", "(", "x", ",", "y", ",", "z", ")", ":", "\n", "    ", "logger", ".", "debug", "(", "\n", "'Create rotation matrix with (x:{}, y:{}, z:{})'", ".", "format", "(", "x", ",", "y", ",", "z", ")", ")", "\n", "x_rotation", "=", "Matrix44", ".", "from_x_rotation", "(", "x", ")", "\n", "y_rotation", "=", "Matrix44", ".", "from_y_rotation", "(", "y", ")", "\n", "z_rotation", "=", "Matrix44", ".", "from_z_rotation", "(", "z", ")", "\n", "return", "z_rotation", "*", "y_rotation", "*", "x_rotation", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.transformation.get_translation": [[57, 61], ["logger.debug", "pyrr.Matrix44.from_translation"], "function", ["None"], ["", "def", "get_translation", "(", "x", ",", "y", ",", "z", ")", ":", "\n", "    ", "logger", ".", "debug", "(", "\n", "'Create translation matrix with (x:{}, y:{}, z:{})'", ".", "format", "(", "x", ",", "y", ",", "z", ")", ")", "\n", "return", "Matrix44", ".", "from_translation", "(", "(", "x", ",", "y", ",", "z", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo.__init__": [[6, 15], ["fbo.Fbo._set_viewport_dims", "ctx.texture", "ctx.depth_renderbuffer", "fbo.Fbo._init_fbo", "fbo.Fbo.ctx.scope"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo._set_viewport_dims", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.AttackFbo._init_fbo"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ",", "viewport", ",", "components", "=", "4", ",", "scope_flags", "=", "moderngl", ".", "DEPTH_TEST", ")", ":", "\n", "        ", "self", ".", "ctx", "=", "ctx", "\n", "self", ".", "viewport", "=", "self", ".", "_set_viewport_dims", "(", "viewport", ")", "\n", "self", ".", "color_components", "=", "components", "\n", "self", ".", "color_tex", "=", "ctx", ".", "texture", "(", "self", ".", "viewport", ",", "components", "=", "components", ",", "dtype", "=", "'f4'", ")", "\n", "self", ".", "depth_buffer", "=", "ctx", ".", "depth_renderbuffer", "(", "self", ".", "viewport", ")", "\n", "self", ".", "fbo", "=", "self", ".", "_init_fbo", "(", ")", "\n", "\n", "self", ".", "scope", "=", "self", ".", "ctx", ".", "scope", "(", "self", ".", "fbo", ",", "scope_flags", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo._set_viewport_dims": [[16, 23], ["len", "len", "TypeError"], "methods", ["None"], ["", "def", "_set_viewport_dims", "(", "self", ",", "viewport", ")", ":", "\n", "        ", "if", "len", "(", "viewport", ")", "==", "4", ":", "\n", "            ", "return", "viewport", "[", "2", "]", ",", "viewport", "[", "3", "]", "\n", "", "elif", "len", "(", "viewport", ")", "==", "2", ":", "\n", "            ", "return", "viewport", "[", "0", "]", ",", "viewport", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "raise", "TypeError", "(", "\"viewport must be of length 4 or 2\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo._init_fbo": [[24, 26], ["fbo.Fbo.ctx.framebuffer"], "methods", ["None"], ["", "", "def", "_init_fbo", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "ctx", ".", "framebuffer", "(", "[", "self", ".", "color_tex", "]", ",", "self", ".", "depth_buffer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo._read_color_tex": [[27, 31], ["numpy.frombuffer().reshape", "numpy.frombuffer", "tex.read"], "methods", ["None"], ["", "def", "_read_color_tex", "(", "self", ",", "tex", ",", "components", ")", ":", "\n", "        ", "return", "np", ".", "frombuffer", "(", "tex", ".", "read", "(", ")", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "(", "self", ".", "viewport", "[", "1", "]", ",", "\n", "self", ".", "viewport", "[", "0", "]", ",", "\n", "components", ")", ")", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo.read_color": [[32, 34], ["fbo.Fbo._read_color_tex"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo._read_color_tex"], ["", "def", "read_color", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_read_color_tex", "(", "self", ".", "color_tex", ",", "self", ".", "color_components", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo.read_depth": [[35, 37], ["numpy.frombuffer().reshape", "numpy.frombuffer", "fbo.Fbo.fbo.read"], "methods", ["None"], ["", "def", "read_depth", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "frombuffer", "(", "self", ".", "fbo", ".", "read", "(", "attachment", "=", "-", "1", ",", "dtype", "=", "'f4'", ")", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "self", ".", "viewport", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.AttackFbo.__init__": [[40, 45], ["ctx.texture", "ctx.texture", "fbo.Fbo.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ",", "viewport", ")", ":", "\n", "        ", "self", ".", "uv_tex", "=", "ctx", ".", "texture", "(", "viewport", ",", "components", "=", "2", ",", "dtype", "=", "'f4'", ")", "\n", "self", ".", "light_tex", "=", "ctx", ".", "texture", "(", "viewport", ",", "components", "=", "4", ",", "dtype", "=", "'f4'", ")", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "ctx", ",", "viewport", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.AttackFbo._init_fbo": [[46, 49], ["fbo.AttackFbo.ctx.framebuffer"], "methods", ["None"], ["", "def", "_init_fbo", "(", "self", ")", ":", "\n", "# The color texture must be in the same order as the program!!!!", "\n", "        ", "return", "self", ".", "ctx", ".", "framebuffer", "(", "[", "self", ".", "color_tex", ",", "self", ".", "uv_tex", ",", "self", ".", "light_tex", "]", ",", "self", ".", "depth_buffer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.AttackFbo.read_uv": [[50, 52], ["fbo.AttackFbo._read_color_tex"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo._read_color_tex"], ["", "def", "read_uv", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_read_color_tex", "(", "self", ".", "uv_tex", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.AttackFbo.read_light": [[53, 56], ["fbo.AttackFbo._read_color_tex"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo._read_color_tex"], ["", "def", "read_light", "(", "self", ")", ":", "\n", "# getting rid of that pesky 4th element", "\n", "        ", "return", "self", ".", "_read_color_tex", "(", "self", ".", "light_tex", ",", "4", ")", "[", "...", ",", ":", "3", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.__init__": [[11, 25], ["scene3d.Scene3D.generate_scene_light", "scene3d.Scene3D.load_scene_objects", "program.ProgramShadow", "scene3d.Scene3D.ctx.texture", "fbo.Fbo", "scene3d.Scene3D.generate_scene_vaos", "scene3d.Scene3D.generate_scene_camera"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.generate_scene_light", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.load_scene_objects", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.generate_scene_vaos", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.generate_scene_camera"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "self", ".", "ctx", "=", "ctx", "\n", "self", ".", "light", "=", "self", ".", "generate_scene_light", "(", ")", "\n", "self", ".", "objects", "=", "self", ".", "load_scene_objects", "(", ")", "\n", "self", ".", "prog_shadow", "=", "ProgramShadow", "(", "self", ".", "ctx", ")", "\n", "\n", "# Writing to the same texture every time no avoid memory leaks.", "\n", "self", ".", "shadow_texture", "=", "self", ".", "ctx", ".", "texture", "(", "self", ".", "ctx", ".", "viewport", "[", "2", ":", "]", ",", "1", ",", "dtype", "=", "'f4'", ")", "\n", "\n", "self", ".", "fbo_depth", "=", "Fbo", "(", "ctx", ",", "self", ".", "ctx", ".", "viewport", "[", "2", ":", "]", ",", "components", "=", "1", ")", "\n", "\n", "self", ".", "generate_scene_vaos", "(", "self", ".", "prog_shadow", ",", "is_main_vao", "=", "False", ")", "\n", "\n", "self", ".", "camera", "=", "self", ".", "generate_scene_camera", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.generate_scene_light": [[26, 29], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "generate_scene_light", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.generate_scene_camera": [[30, 33], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "generate_scene_camera", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.load_scene_objects": [[34, 37], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "load_scene_objects", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.generate_scene_vaos": [[38, 41], ["obj.update_and_get_vao"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.update_and_get_vao"], ["", "def", "generate_scene_vaos", "(", "self", ",", "program", ",", "is_main_vao", "=", "True", ")", ":", "\n", "        ", "for", "obj", "in", "self", ".", "objects", ":", "\n", "            ", "obj", ".", "update_and_get_vao", "(", "program", ",", "is_main_vao", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.generate_scene_shadow_map": [[42, 64], ["scene3d.Scene3D.prog_shadow.update_program", "scene3d.Scene3D.fbo_depth.fbo.clear", "scene3d.Scene3D.fbo_depth.read_depth", "scene3d.Scene3D.shadow_texture.write", "scene3d.Scene3D.light.get_view_proj_matrix", "obj.get_vao().render", "obj.get_vao"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramShadow.update_program", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.fbo.Fbo.read_depth", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.get_view_proj_matrix", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.render", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_vao"], ["", "", "def", "generate_scene_shadow_map", "(", "self", ",", "model", ")", ":", "\n", "        ", "\"\"\"renders and updates the scenes shadow texture\n\n        Arguments:\n            model {Matrix44} -- model matrix\n\n        Returns:\n            Context.Texture -- the updated shadow texture\n        \"\"\"", "\n", "light_mvp", "=", "self", ".", "light", ".", "get_view_proj_matrix", "(", ")", "*", "model", "\n", "\n", "self", ".", "prog_shadow", ".", "update_program", "(", "light_mvp", ")", "\n", "\n", "self", ".", "fbo_depth", ".", "fbo", ".", "clear", "(", ")", "\n", "with", "self", ".", "fbo_depth", ".", "scope", ":", "\n", "            ", "for", "obj", "in", "self", ".", "objects", ":", "\n", "                ", "obj", ".", "get_vao", "(", "is_main_vao", "=", "False", ")", ".", "render", "(", ")", "\n", "\n", "", "", "depf", "=", "self", ".", "fbo_depth", ".", "read_depth", "(", ")", "\n", "\n", "self", ".", "shadow_texture", ".", "write", "(", "depf", ")", "\n", "return", "self", ".", "shadow_texture", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.__init__": [[67, 73], ["scene3d.Scene3D.__init__", "program.ProgramTexPhongShadow", "scene3d.DisplayScene.generate_scene_vaos"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.generate_scene_vaos"], ["    ", "def", "__init__", "(", "self", ",", "ctx", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ctx", ")", "\n", "\n", "# TODO: option to select program, also separate light and shadow from scene", "\n", "self", ".", "program_rgb", "=", "ProgramTexPhongShadow", "(", "self", ".", "ctx", ")", "\n", "self", ".", "generate_scene_vaos", "(", "self", ".", "program_rgb", ",", "is_main_vao", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.render_rgb": [[74, 83], ["scene3d.DisplayScene.ctx.enable_only", "scene3d.DisplayScene.generate_scene_shadow_map", "scene3d.DisplayScene.program_rgb.update_program_scene", "scene3d.DisplayScene.program_rgb.update_program_obj", "obj.get_vao().render", "obj.get_texture", "obj.get_vao"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.generate_scene_shadow_map", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program_scene", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadow.update_program_obj", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.render", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_texture", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_vao"], ["", "def", "render_rgb", "(", "self", ",", "model", ")", ":", "\n", "        ", "self", ".", "ctx", ".", "enable_only", "(", "moderngl", ".", "DEPTH_TEST", ")", "\n", "light_map", "=", "self", ".", "generate_scene_shadow_map", "(", "model", ")", "\n", "\n", "self", ".", "program_rgb", ".", "update_program_scene", "(", "self", ".", "camera", ",", "model", ",", "self", ".", "light", ",", "light_map", ")", "\n", "\n", "for", "obj", "in", "self", ".", "objects", ":", "\n", "            ", "self", ".", "program_rgb", ".", "update_program_obj", "(", "obj", ".", "material", ",", "obj", ".", "get_texture", "(", ")", ")", "\n", "obj", ".", "get_vao", "(", "is_main_vao", "=", "True", ")", ".", "render", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.render_rgb_to_fbo": [[84, 94], ["scene3d.DisplayScene.ctx.enable_only", "scene3d.DisplayScene.generate_scene_shadow_map", "scene3d.DisplayScene.program_rgb.update_program_scene", "fbo.fbo.clear", "scene3d.DisplayScene.program_rgb.update_program_obj", "obj.get_vao().render", "obj.get_texture", "obj.get_vao"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.Scene3D.generate_scene_shadow_map", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadowMultiOut.update_program_scene", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.program.ProgramTexPhongShadow.update_program_obj", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.None.demo_with_classification.LiveScene.render", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_texture", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.object3d.Object3D.get_vao"], ["", "", "def", "render_rgb_to_fbo", "(", "self", ",", "model", ",", "fbo", ")", ":", "\n", "        ", "self", ".", "ctx", ".", "enable_only", "(", "moderngl", ".", "DEPTH_TEST", ")", "\n", "light_map", "=", "self", ".", "generate_scene_shadow_map", "(", "model", ")", "\n", "\n", "self", ".", "program_rgb", ".", "update_program_scene", "(", "self", ".", "camera", ",", "model", ",", "self", ".", "light", ",", "light_map", ")", "\n", "fbo", ".", "fbo", ".", "clear", "(", ")", "\n", "with", "fbo", ".", "scope", ":", "\n", "            ", "for", "obj", "in", "self", ".", "objects", ":", "\n", "                ", "self", ".", "program_rgb", ".", "update_program_obj", "(", "obj", ".", "material", ",", "obj", ".", "get_texture", "(", ")", ")", "\n", "obj", ".", "get_vao", "(", "is_main_vao", "=", "True", ")", ".", "render", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.render_rgb_to_fbo_polar_degrees": [[95, 98], ["scene3d.DisplayScene.camera.update_position_polar_degs", "scene3d.DisplayScene.render_rgb_to_fbo"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_polar_degs", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.render_rgb_to_fbo"], ["", "", "", "def", "render_rgb_to_fbo_polar_degrees", "(", "self", ",", "r", ",", "theta", ",", "phi", ",", "fbo", ",", "model", ",", "lookat_center", "=", "True", ")", ":", "\n", "        ", "self", ".", "camera", ".", "update_position_polar_degs", "(", "r", ",", "theta", ",", "phi", ",", "lookat_center", ")", "\n", "self", ".", "render_rgb_to_fbo", "(", "model", ",", "fbo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.render_rgb_polar_degrees": [[99, 102], ["scene3d.DisplayScene.camera.update_position_polar_degs", "scene3d.DisplayScene.render_rgb"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.camera.Camera.update_position_polar_degs", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.render_rgb"], ["", "def", "render_rgb_polar_degrees", "(", "self", ",", "r", ",", "theta", ",", "phi", ",", "model", ",", "lookat_center", "=", "True", ")", ":", "\n", "        ", "self", ".", "camera", ".", "update_position_polar_degs", "(", "r", ",", "theta", ",", "phi", ",", "lookat_center", ")", "\n", "self", ".", "render_rgb", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.generate_scene_light": [[103, 106], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "generate_scene_light", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.generate_scene_camera": [[107, 110], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "generate_scene_camera", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.load_scene_objects": [[111, 114], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "load_scene_objects", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.scene3d.DisplayScene.set_patch_tex": [[115, 118], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "set_patch_tex", "(", "self", ",", "img", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Material.__init__": [[10, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ambient", ",", "diffuse", ",", "specular", ",", "shininess", ")", ":", "\n", "        ", "\"\"\"\n\n        :param ambient: Ka\n        :param diffuse: Kd\n        :param specular: Ks\n        :param shininess: Ns\n        \"\"\"", "\n", "self", ".", "ambient", "=", "ambient", "\n", "self", ".", "diffuse", "=", "diffuse", "\n", "self", ".", "specular", "=", "specular", "\n", "self", ".", "shininess", "=", "shininess", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.__init__": [[25, 27], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "color", ")", ":", "\n", "        ", "self", ".", "color", "=", "color", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.get_depth_bias_mvp": [[28, 35], ["pyrr.Matrix44", "lighting.Light.get_view_proj_matrix"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.get_view_proj_matrix"], ["", "def", "get_depth_bias_mvp", "(", "self", ",", "model", ")", ":", "\n", "        ", "bias_matrix", "=", "Matrix44", "(", "[", "[", "0.5", ",", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "[", "0.0", ",", "0.5", ",", "0.0", ",", "0.0", "]", ",", "\n", "[", "0.0", ",", "0.0", ",", "0.5", ",", "0.0", "]", ",", "\n", "[", "0.5", ",", "0.5", ",", "0.5", ",", "1.0", "]", "]", ")", "\n", "light_mvp", "=", "self", ".", "get_view_proj_matrix", "(", ")", "*", "model", "\n", "return", "bias_matrix", "*", "light_mvp", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.get_random_rgb": [[36, 40], ["lighting.Light.get_legal_color_channel", "lighting.Light.get_legal_color_channel", "lighting.Light.get_legal_color_channel"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.get_legal_color_channel", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.get_legal_color_channel", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.get_legal_color_channel"], ["", "def", "get_random_rgb", "(", "self", ",", "min_r", ",", "max_r", ",", "min_g", ",", "max_g", ",", "min_b", ",", "max_b", ")", ":", "\n", "        ", "return", "(", "self", ".", "get_legal_color_channel", "(", "min_r", ",", "max_r", ",", "self", ".", "color", "[", "0", "]", ")", ",", "\n", "self", ".", "get_legal_color_channel", "(", "min_g", ",", "max_g", ",", "self", ".", "color", "[", "1", "]", ")", ",", "\n", "self", ".", "get_legal_color_channel", "(", "min_b", ",", "max_b", ",", "self", ".", "color", "[", "2", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.get_legal_color_channel": [[41, 52], ["max", "min", "min", "numpy.random.uniform", "max"], "methods", ["None"], ["", "def", "get_legal_color_channel", "(", "self", ",", "in_low", ",", "in_up", ",", "channel_color", ")", ":", "\n", "        ", "change", "=", "1", "/", "255", "\n", "\n", "low", "=", "channel_color", "-", "(", "change", "*", "in_low", ")", "\n", "up", "=", "channel_color", "+", "(", "change", "*", "in_up", ")", "\n", "\n", "low", "=", "max", "(", "0", ",", "low", ")", "\n", "up", "=", "min", "(", "1", ",", "max", "(", "low", ",", "up", ")", ")", "\n", "low", "=", "min", "(", "low", ",", "up", ")", "\n", "\n", "return", "np", ".", "random", ".", "uniform", "(", "low", ",", "up", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.update_color_to_random_in_offset": [[53, 79], ["lighting.Light.get_random_rgb", "logger.debug"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.get_random_rgb"], ["", "def", "update_color_to_random_in_offset", "(", "self", ",", "min_r", ",", "max_r", ",", "min_g", ",", "max_g", ",", "min_b", ",", "max_b", ")", ":", "\n", "        ", "\"\"\"\n        Update the color to a random color. For each color, the random color\n        value is unified sampled according to the offset in the input params.\n\n        :param min_r: The lower bound for the red channel. First, it will\n        calculate R - (1/255)*min_r. Than the result will be clipped to\n        be between 0 to max_r.\n        :param max_r: The upper bound for the red channel. First, it will\n        calculate R + (1/255)*min_r. Than the result will be clipped to\n        be between min_r to 1\n        :param min_g: The lower bound for the green channel. First, it will\n        calculate G - (1/255)*min_g. Than the result will be clipped to\n        be between 0 to max_g.\n        :param max_g: The upper bound for the green channel. First, it will\n        calculate G + (1/255)*min_g. Than the result will be clipped to\n        be between min_g to 1\n        :param min_b: The lower bound for the blue channel. First, it will\n        calculate B - (1/255)*min_b. Than the result will be clipped to\n        be between 0 to max_b.\n        :param max_b: The upper bound for the blue channel. First, it will\n        calculate B + (1/255)*min_b. Than the result will be clipped to\n        be between min_b to 1\n        \"\"\"", "\n", "self", ".", "color", "=", "self", ".", "get_random_rgb", "(", "min_r", ",", "max_r", ",", "min_g", ",", "max_g", ",", "min_b", ",", "max_b", ")", "\n", "logger", ".", "debug", "(", "'Update RGB color to: {}'", ".", "format", "(", "self", ".", "color", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.Light.get_view_proj_matrix": [[80, 83], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_view_proj_matrix", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'Called parent method'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.IndirectionalLight.__init__": [[90, 94], ["lighting.Light.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["def", "__init__", "(", "self", ",", "position", ",", "color", ",", "fov", "=", "60", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "color", ")", "\n", "self", ".", "position", "=", "position", "\n", "self", ".", "fov", "=", "fov", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.IndirectionalLight.get_view_proj_matrix": [[95, 99], ["pyrr.Matrix44.perspective_projection", "pyrr.Matrix44.look_at"], "methods", ["None"], ["", "def", "get_view_proj_matrix", "(", "self", ")", ":", "# TODO: params", "\n", "        ", "proj", "=", "Matrix44", ".", "perspective_projection", "(", "self", ".", "fov", ",", "1", ",", "1", ",", "1000", ")", "\n", "view", "=", "Matrix44", ".", "look_at", "(", "self", ".", "position", ",", "(", "0", ",", "0", ",", "0", ")", ",", "(", "0", ",", "1", ",", "0", ")", ")", "\n", "return", "proj", "*", "view", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__": [[103, 106], ["lighting.Light.__init__"], "methods", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.__init__"], ["    ", "def", "__init__", "(", "self", ",", "color", ",", "inv_direction", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "color", ")", "\n", "self", ".", "inv_direction", "=", "inv_direction", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.utils3d.lighting.DirectionalLight.get_view_proj_matrix": [[107, 111], ["pyrr.Matrix44.orthogonal_projection", "pyrr.Matrix44.look_at"], "methods", ["None"], ["", "def", "get_view_proj_matrix", "(", "self", ")", ":", "\n", "        ", "proj", "=", "Matrix44", ".", "orthogonal_projection", "(", "-", "100", ",", "100", ",", "-", "100", ",", "100", ",", "1", ",", "1000", ")", "\n", "view", "=", "Matrix44", ".", "look_at", "(", "self", ".", "inv_direction", ",", "(", "0", ",", "0", ",", "0", ")", ",", "(", "0", ",", "1", ",", "0", ")", ")", "\n", "return", "proj", "*", "view", "\n", "\n"]], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.data.__init__.get_model_path": [[9, 14], ["__init__._get_3d_model_folder_path", "os.path.join", "__init__._return_file_is_exist"], "function", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.data.__init__._get_3d_model_folder_path", "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.data.__init__._return_file_is_exist"], []], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.data.__init__._get_3d_model_folder_path": [[16, 26], ["os.path.normpath", "os.path.abspath", "os.path.isdir", "FileNotFoundError", "os.path.join", "os.strerror"], "function", ["None"], []], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.data.__init__.get_3d_patch_path": [[28, 39], ["os.path.normpath", "os.path.join", "__init__._return_file_is_exist", "os.path.abspath", "os.path.exists", "os.makedirs", "os.path.join"], "function", ["home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.data.__init__._return_file_is_exist"], []], "home.repos.pwc.inspect_result.yaliMa_Adversarial-Patch-3D.data.__init__._return_file_is_exist": [[41, 47], ["os.path.isfile", "FileNotFoundError", "os.strerror"], "function", ["None"], []]}