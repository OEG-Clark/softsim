{"home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.train_step_1_ae.loss_for_list": [[15, 23], ["range", "len", "loss", "loss", "fl2[].detach"], "function", ["None"], ["def", "loss_for_list", "(", "loss", ",", "fl1", ",", "fl2", ",", "detach_second", "=", "True", ")", ":", "\n", "    ", "result_loss", "=", "0", "\n", "for", "f_idx", "in", "range", "(", "len", "(", "fl1", ")", ")", ":", "\n", "        ", "if", "detach_second", ":", "\n", "            ", "result_loss", "+=", "loss", "(", "fl1", "[", "f_idx", "]", ",", "fl2", "[", "f_idx", "]", ".", "detach", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "result_loss", "+=", "loss", "(", "fl1", "[", "f_idx", "]", ",", "fl2", "[", "f_idx", "]", ")", "\n", "", "", "return", "result_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.train_step_1_ae.loss_for_list_perm": [[25, 34], ["range", "len", "utils.true_randperm", "torch.relu", "torch.relu", "fl2[].detach", "fl2[].detach", "torch.F.mse_loss", "torch.F.mse_loss", "torch.F.mse_loss"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.true_randperm"], ["", "def", "loss_for_list_perm", "(", "loss", ",", "fl1", ",", "fl2", ",", "detach_second", "=", "True", ")", ":", "\n", "    ", "result_loss", "=", "0", "\n", "for", "f_idx", "in", "range", "(", "len", "(", "fl1", ")", ")", ":", "\n", "        ", "perm", "=", "true_randperm", "(", "fl1", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "fl1", "[", "0", "]", ".", "device", ")", "\n", "if", "detach_second", ":", "\n", "            ", "result_loss", "+=", "F", ".", "relu", "(", "2", "+", "loss", "(", "fl1", "[", "f_idx", "]", ",", "fl2", "[", "f_idx", "]", ".", "detach", "(", ")", ")", "-", "loss", "(", "fl1", "[", "f_idx", "]", "[", "perm", "]", ",", "fl2", "[", "f_idx", "]", ".", "detach", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "result_loss", "+=", "F", ".", "relu", "(", "2", "+", "loss", "(", "fl1", "[", "f_idx", "]", ",", "fl2", "[", "f_idx", "]", ")", "-", "loss", "(", "fl1", "[", "f_idx", "]", "[", "perm", "]", ",", "fl2", "[", "f_idx", "]", ")", ")", "\n", "", "", "return", "result_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.train_step_1_ae.loss_for_list_mean": [[36, 45], ["len", "feat.mean.mean", "torch.l1_loss", "torch.l1_loss", "torch.ones_like", "torch.ones_like", "torch.zeros_like", "torch.zeros_like"], "function", ["None"], ["", "def", "loss_for_list_mean", "(", "feat_list", ")", ":", "\n", "    ", "loss", "=", "0", "\n", "for", "feat", "in", "feat_list", ":", "\n", "        ", "if", "len", "(", "feat", ".", "shape", ")", "==", "4", ":", "\n", "            ", "feat", "=", "feat", ".", "mean", "(", "dim", "=", "[", "2", ",", "3", "]", ")", "\n", "loss", "+=", "F", ".", "l1_loss", "(", "feat", ",", "torch", ".", "ones_like", "(", "feat", ")", ")", "\n", "", "else", ":", "\n", "            ", "loss", "+=", "F", ".", "l1_loss", "(", "feat", ",", "torch", ".", "zeros_like", "(", "feat", ")", ")", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.train_step_1_ae.train": [[47, 284], ["datasets.PairedMultiDataset", "print", "iter", "datasets.SelfSupervisedDataset", "print", "iter", "models.StyleEncoder().cuda", "models.ContentEncoder().cuda", "models.Decoder().cuda", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "StyleEncoder().cuda.reset_cls", "StyleEncoder().cuda.final_cls.cuda", "StyleEncoder().cuda.reset_cls", "StyleEncoder().cuda.final_cls.cuda", "torch.optim.Adam", "utils.make_folders", "open", "open.close", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "lpips.PerceptualLoss", "tqdm.tqdm", "torch.save", "torch.save", "len", "torch.utils.data.DataLoader", "len", "len", "torch.utils.data.DataLoader", "ContentEncoder().cuda.parameters", "StyleEncoder().cuda.parameters", "Decoder().cuda.parameters", "torch.load", "torch.load", "print", "StyleEncoder().cuda.load_state_dict", "ContentEncoder().cuda.load_state_dict", "Decoder().cuda.load_state_dict", "optim.Adam.load_state_dict", "optim.Adam.load_state_dict", "optim.Adam.load_state_dict", "print", "StyleEncoder().cuda.final_cls.parameters", "range", "next", "rgb_img_rd.cuda.cuda", "rgb_img_org.cuda.cuda", "img_idx.cuda.cuda", "torch.interpolate().cuda", "torch.interpolate().cuda", "torch.interpolate().cuda", "torch.interpolate().cuda", "StyleEncoder().cuda.zero_grad", "Decoder().cuda.zero_grad", "ContentEncoder().cuda.zero_grad", "StyleEncoder().cuda.", "StyleEncoder().cuda.", "ContentEncoder().cuda.", "ContentEncoder().cuda.", "ContentEncoder().cuda.", "ContentEncoder().cuda.", "random.randint", "range", "torch.mse_loss", "loss_total.backward", "optim.Adam.step", "optim.Adam.step", "optim.Adam.step", "optim.Adam.step", "next", "rgb_img.cuda.cuda", "random.randint", "torch.interpolate().cuda", "StyleEncoder().cuda.zero_grad", "Decoder().cuda.zero_grad", "ContentEncoder().cuda.zero_grad", "StyleEncoder().cuda.", "ContentEncoder().cuda.", "Decoder().cuda.", "torch.mse_loss", "loss_rec.backward", "optim.Adam.step", "optim.Adam.step", "optim.Adam.step", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "models.StyleEncoder", "models.ContentEncoder", "models.Decoder", "datasets.SelfSupervisedDataset._next_set", "iter", "StyleEncoder().cuda.reset_cls", "torch.optim.Adam", "Decoder().cuda.", "train_step_1_ae.loss_for_list_perm", "torch.cross_entropy", "torch.cross_entropy", "lpips.PerceptualLoss.sum", "torch.l1_loss", "lpips.PerceptualLoss.sum", "utils.true_randperm", "Decoder().cuda.", "decoder.mean", "rgb_img.cuda.mean", "torch.mse_loss", "loss_cf_consist.mean().item", "loss_sf_consist.mean().item", "loss_cls.mean().item", "F.mse_loss.item", "F.mse_loss.item", "utils.AverageMeter.update", "print", "utils.AverageMeter.reset", "utils.AverageMeter.reset", "utils.AverageMeter.reset", "utils.AverageMeter.reset", "utils.AverageMeter.reset", "utils.AverageMeter.reset", "torchvision.utils.save_image", "torchvision.utils.save_image", "print", "torch.save", "torch.save", "StyleEncoder().cuda.state_dict", "Decoder().cuda.state_dict", "ContentEncoder().cuda.state_dict", "optim.Adam.state_dict", "optim.Adam.state_dict", "optim.Adam.state_dict", "optim.Adam.state_dict", "datasets.InfiniteSamplerWrapper", "datasets.InfiniteSamplerWrapper", "torch.utils.data.DataLoader", "StyleEncoder().cuda.final_cls.parameters", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "Decoder().cuda.", "train_step_1_ae.loss_for_list_perm", "train_step_1_ae.loss_for_list_perm", "torch.cosine_similarity().mean", "torch.interpolate", "F.mse_loss.item", "open", "open.write", "open.close", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "Decoder().cuda.", "torch.cosine_similarity().mean", "lpips.PerceptualLoss.", "lpips.PerceptualLoss.", "loss_cf_consist.mean", "loss_sf_consist.mean", "loss_cls.mean", "torch.no_grad", "torch.no_grad", "utils.true_randperm", "Decoder().cuda.", "StyleEncoder().cuda.state_dict", "Decoder().cuda.state_dict", "ContentEncoder().cuda.state_dict", "optim.Adam.state_dict", "optim.Adam.state_dict", "optim.Adam.state_dict", "optim.Adam.state_dict", "datasets.InfiniteSamplerWrapper", "Decoder().cuda.", "torch.cosine_similarity", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.interpolate", "torch.interpolate", "torch.cosine_similarity", "[].detach", "F.interpolate().cuda.repeat", "F.interpolate().cuda.repeat", "style_vector_org[].detach", "torch.randperm", "torch.randperm"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.StyleEncoder.reset_cls", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.StyleEncoder.reset_cls", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.make_folders", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.SelfSupervisedDataset._next_set", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.StyleEncoder.reset_cls", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.train_step_1_ae.loss_for_list_perm", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.true_randperm", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.train_step_1_ae.loss_for_list_perm", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.train_step_1_ae.loss_for_list_perm", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.true_randperm"], ["", "def", "train", "(", ")", ":", "\n", "    ", "from", "config", "import", "IM_SIZE_AE", ",", "BATCH_SIZE_AE", ",", "NFC", ",", "NBR_CLS", ",", "DATALOADER_WORKERS", ",", "ITERATION_AE", "\n", "from", "config", "import", "SAVE_IMAGE_INTERVAL", ",", "SAVE_MODEL_INTERVAL", ",", "SAVE_FOLDER", ",", "TRIAL_NAME", ",", "LOG_INTERVAL", "\n", "from", "config", "import", "DATA_NAME", "\n", "from", "config", "import", "data_root_colorful", ",", "data_root_sketch_1", ",", "data_root_sketch_2", ",", "data_root_sketch_3", "\n", "\n", "\n", "dataset", "=", "PairedMultiDataset", "(", "data_root_colorful", ",", "data_root_sketch_1", ",", "data_root_sketch_2", ",", "data_root_sketch_3", ",", "im_size", "=", "IM_SIZE_AE", ",", "rand_crop", "=", "True", ")", "\n", "print", "(", "len", "(", "dataset", ")", ")", "\n", "dataloader", "=", "iter", "(", "DataLoader", "(", "dataset", ",", "BATCH_SIZE_AE", ",", "sampler", "=", "InfiniteSamplerWrapper", "(", "dataset", ")", ",", "num_workers", "=", "DATALOADER_WORKERS", ",", "pin_memory", "=", "True", ")", ")", "\n", "\n", "\n", "dataset_ss", "=", "SelfSupervisedDataset", "(", "data_root_colorful", ",", "data_root_sketch_3", ",", "im_size", "=", "IM_SIZE_AE", ",", "nbr_cls", "=", "NBR_CLS", ",", "rand_crop", "=", "True", ")", "\n", "print", "(", "len", "(", "dataset_ss", ")", ",", "len", "(", "dataset_ss", ".", "frame", ")", ")", "\n", "dataloader_ss", "=", "iter", "(", "DataLoader", "(", "dataset_ss", ",", "BATCH_SIZE_AE", ",", "sampler", "=", "InfiniteSamplerWrapper", "(", "dataset_ss", ")", ",", "num_workers", "=", "DATALOADER_WORKERS", ",", "pin_memory", "=", "True", ")", ")", "\n", "\n", "\n", "style_encoder", "=", "StyleEncoder", "(", "nfc", "=", "NFC", ",", "nbr_cls", "=", "NBR_CLS", ")", ".", "cuda", "(", ")", "\n", "content_encoder", "=", "ContentEncoder", "(", "nfc", "=", "NFC", ")", ".", "cuda", "(", ")", "\n", "decoder", "=", "Decoder", "(", "nfc", "=", "NFC", ")", ".", "cuda", "(", ")", "\n", "\n", "opt_c", "=", "optim", ".", "Adam", "(", "content_encoder", ".", "parameters", "(", ")", ",", "lr", "=", "2e-4", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "opt_s", "=", "optim", ".", "Adam", "(", "style_encoder", ".", "parameters", "(", ")", ",", "lr", "=", "2e-4", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "opt_d", "=", "optim", ".", "Adam", "(", "decoder", ".", "parameters", "(", ")", ",", "lr", "=", "2e-4", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "\n", "style_encoder", ".", "reset_cls", "(", ")", "\n", "style_encoder", ".", "final_cls", ".", "cuda", "(", ")", "\n", "\n", "from", "config", "import", "PRETRAINED_AE_PATH", ",", "PRETRAINED_AE_ITER", "\n", "if", "PRETRAINED_AE_PATH", "is", "not", "None", ":", "\n", "        ", "PRETRAINED_AE_PATH", "=", "PRETRAINED_AE_PATH", "+", "'/models/%d.pth'", "%", "PRETRAINED_AE_ITER", "\n", "ckpt", "=", "torch", ".", "load", "(", "PRETRAINED_AE_PATH", ")", "\n", "\n", "print", "(", "PRETRAINED_AE_PATH", ")", "\n", "\n", "style_encoder", ".", "load_state_dict", "(", "ckpt", "[", "'s'", "]", ")", "\n", "content_encoder", ".", "load_state_dict", "(", "ckpt", "[", "'c'", "]", ")", "\n", "decoder", ".", "load_state_dict", "(", "ckpt", "[", "'d'", "]", ")", "\n", "\n", "opt_c", ".", "load_state_dict", "(", "ckpt", "[", "'opt_c'", "]", ")", "\n", "opt_s", ".", "load_state_dict", "(", "ckpt", "[", "'opt_s'", "]", ")", "\n", "opt_d", ".", "load_state_dict", "(", "ckpt", "[", "'opt_d'", "]", ")", "\n", "print", "(", "'loaded pre-trained AE'", ")", "\n", "\n", "", "style_encoder", ".", "reset_cls", "(", ")", "\n", "style_encoder", ".", "final_cls", ".", "cuda", "(", ")", "\n", "opt_s_cls", "=", "optim", ".", "Adam", "(", "style_encoder", ".", "final_cls", ".", "parameters", "(", ")", ",", "lr", "=", "2e-4", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "\n", "\n", "saved_image_folder", ",", "saved_model_folder", "=", "make_folders", "(", "SAVE_FOLDER", ",", "'AE_'", "+", "TRIAL_NAME", ")", "\n", "log_file_path", "=", "saved_image_folder", "+", "'/../ae_log.txt'", "\n", "log_file", "=", "open", "(", "log_file_path", ",", "'w'", ")", "\n", "log_file", ".", "close", "(", ")", "\n", "## for logging", "\n", "losses_sf_consist", "=", "AverageMeter", "(", ")", "\n", "losses_cf_consist", "=", "AverageMeter", "(", ")", "\n", "losses_cls", "=", "AverageMeter", "(", ")", "\n", "losses_rec_rd", "=", "AverageMeter", "(", ")", "\n", "losses_rec_org", "=", "AverageMeter", "(", ")", "\n", "losses_rec_grey", "=", "AverageMeter", "(", ")", "\n", "\n", "\n", "import", "lpips", "\n", "percept", "=", "lpips", ".", "PerceptualLoss", "(", "model", "=", "'net-lin'", ",", "net", "=", "'vgg'", ",", "use_gpu", "=", "True", ")", "\n", "\n", "for", "iteration", "in", "tqdm", "(", "range", "(", "ITERATION_AE", ")", ")", ":", "\n", "\n", "        ", "if", "iteration", "%", "(", "(", "NBR_CLS", "*", "100", ")", "//", "BATCH_SIZE_AE", ")", "==", "0", "and", "iteration", ">", "1", ":", "\n", "            ", "dataset_ss", ".", "_next_set", "(", ")", "\n", "dataloader_ss", "=", "iter", "(", "DataLoader", "(", "dataset_ss", ",", "BATCH_SIZE_AE", ",", "sampler", "=", "InfiniteSamplerWrapper", "(", "dataset_ss", ")", ",", "num_workers", "=", "DATALOADER_WORKERS", ",", "pin_memory", "=", "True", ")", ")", "\n", "style_encoder", ".", "reset_cls", "(", ")", "\n", "opt_s_cls", "=", "optim", ".", "Adam", "(", "style_encoder", ".", "final_cls", ".", "parameters", "(", ")", ",", "lr", "=", "2e-4", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "\n", "opt_s", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "1e-4", "\n", "opt_d", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "1e-4", "\n", "\n", "### 1. train the encoder with self-supervision methods", "\n", "", "rgb_img_rd", ",", "rgb_img_org", ",", "skt_org", ",", "skt_bold", ",", "skt_erased", ",", "skt_erased_bold", ",", "img_idx", "=", "next", "(", "dataloader_ss", ")", "\n", "rgb_img_rd", "=", "rgb_img_rd", ".", "cuda", "(", ")", "\n", "rgb_img_org", "=", "rgb_img_org", ".", "cuda", "(", ")", "\n", "img_idx", "=", "img_idx", ".", "cuda", "(", ")", "\n", "\n", "skt_org", "=", "F", ".", "interpolate", "(", "skt_org", ",", "size", "=", "512", ")", ".", "cuda", "(", ")", "\n", "skt_bold", "=", "F", ".", "interpolate", "(", "skt_bold", ",", "size", "=", "512", ")", ".", "cuda", "(", ")", "\n", "skt_erased", "=", "F", ".", "interpolate", "(", "skt_erased", ",", "size", "=", "512", ")", ".", "cuda", "(", ")", "\n", "skt_erased_bold", "=", "F", ".", "interpolate", "(", "skt_erased_bold", ",", "size", "=", "512", ")", ".", "cuda", "(", ")", "\n", "\n", "style_encoder", ".", "zero_grad", "(", ")", "\n", "decoder", ".", "zero_grad", "(", ")", "\n", "content_encoder", ".", "zero_grad", "(", ")", "\n", "\n", "style_vector_rd", ",", "pred_cls_rd", "=", "style_encoder", "(", "rgb_img_rd", ")", "\n", "style_vector_org", ",", "pred_cls_org", "=", "style_encoder", "(", "rgb_img_org", ")", "\n", "\n", "content_feats", "=", "content_encoder", "(", "skt_org", ")", "\n", "content_feats_bold", "=", "content_encoder", "(", "skt_bold", ")", "\n", "content_feats_erased", "=", "content_encoder", "(", "skt_erased", ")", "\n", "content_feats_eb", "=", "content_encoder", "(", "skt_erased_bold", ")", "\n", "\n", "rd", "=", "random", ".", "randint", "(", "0", ",", "3", ")", "\n", "gimg_rd", "=", "None", "\n", "if", "rd", "==", "0", ":", "\n", "            ", "gimg_rd", "=", "decoder", "(", "content_feats", ",", "style_vector_rd", ")", "\n", "", "elif", "rd", "==", "1", ":", "\n", "            ", "gimg_rd", "=", "decoder", "(", "content_feats_bold", ",", "style_vector_rd", ")", "\n", "", "elif", "rd", "==", "2", ":", "\n", "            ", "gimg_rd", "=", "decoder", "(", "content_feats_erased", ",", "style_vector_rd", ")", "\n", "", "elif", "rd", "==", "3", ":", "\n", "            ", "gimg_rd", "=", "decoder", "(", "content_feats_eb", ",", "style_vector_rd", ")", "\n", "\n", "\n", "", "loss_cf_consist", "=", "loss_for_list_perm", "(", "F", ".", "mse_loss", ",", "content_feats_bold", ",", "content_feats", ")", "+", "loss_for_list_perm", "(", "F", ".", "mse_loss", ",", "content_feats_erased", ",", "content_feats", ")", "+", "loss_for_list_perm", "(", "F", ".", "mse_loss", ",", "content_feats_eb", ",", "content_feats", ")", "\n", "\n", "loss_sf_consist", "=", "0", "\n", "for", "loss_idx", "in", "range", "(", "3", ")", ":", "\n", "            ", "loss_sf_consist", "+=", "-", "F", ".", "cosine_similarity", "(", "style_vector_rd", "[", "loss_idx", "]", ",", "style_vector_org", "[", "loss_idx", "]", ".", "detach", "(", ")", ")", ".", "mean", "(", ")", "+", "F", ".", "cosine_similarity", "(", "style_vector_rd", "[", "loss_idx", "]", ",", "style_vector_org", "[", "loss_idx", "]", "[", "torch", ".", "randperm", "(", "BATCH_SIZE_AE", ")", "]", ".", "detach", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "", "loss_cls", "=", "F", ".", "cross_entropy", "(", "pred_cls_rd", ",", "img_idx", ")", "+", "F", ".", "cross_entropy", "(", "pred_cls_org", ",", "img_idx", ")", "\n", "loss_rec_rd", "=", "F", ".", "mse_loss", "(", "gimg_rd", ",", "rgb_img_org", ")", "\n", "if", "DATA_NAME", "!=", "'shoe'", ":", "\n", "            ", "loss_rec_rd", "+=", "percept", "(", "F", ".", "adaptive_avg_pool2d", "(", "gimg_rd", ",", "output_size", "=", "256", ")", ",", "F", ".", "adaptive_avg_pool2d", "(", "rgb_img_org", ",", "output_size", "=", "256", ")", ")", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "            ", "loss_rec_rd", "+=", "F", ".", "l1_loss", "(", "gimg_rd", ",", "rgb_img_org", ")", "\n", "\n", "", "loss_total", "=", "loss_cls", "+", "loss_sf_consist", "+", "loss_rec_rd", "+", "loss_cf_consist", "#+ loss_kl_c + loss_kl_s", "\n", "loss_total", ".", "backward", "(", ")", "\n", "\n", "opt_s", ".", "step", "(", ")", "\n", "opt_s_cls", ".", "step", "(", ")", "\n", "opt_c", ".", "step", "(", ")", "\n", "opt_d", ".", "step", "(", ")", "\n", "\n", "### 2. train as AutoEncoder", "\n", "rgb_img", ",", "skt_img_1", ",", "skt_img_2", ",", "skt_img_3", "=", "next", "(", "dataloader", ")", "\n", "\n", "rgb_img", "=", "rgb_img", ".", "cuda", "(", ")", "\n", "\n", "rd", "=", "random", ".", "randint", "(", "0", ",", "3", ")", "\n", "if", "rd", "==", "0", ":", "\n", "            ", "skt_img", "=", "skt_img_1", "\n", "", "elif", "rd", "==", "1", ":", "\n", "            ", "skt_img", "=", "skt_img_2", "\n", "", "else", ":", "\n", "            ", "skt_img", "=", "skt_img_3", "\n", "\n", "", "skt_img", "=", "F", ".", "interpolate", "(", "skt_img", ",", "size", "=", "512", ")", ".", "cuda", "(", ")", "\n", "\n", "style_encoder", ".", "zero_grad", "(", ")", "\n", "decoder", ".", "zero_grad", "(", ")", "\n", "content_encoder", ".", "zero_grad", "(", ")", "\n", "\n", "style_vector", ",", "_", "=", "style_encoder", "(", "rgb_img", ")", "\n", "content_feats", "=", "content_encoder", "(", "skt_img", ")", "\n", "gimg", "=", "decoder", "(", "content_feats", ",", "style_vector", ")", "\n", "\n", "loss_rec_org", "=", "F", ".", "mse_loss", "(", "gimg", ",", "rgb_img", ")", "\n", "if", "DATA_NAME", "!=", "'shoe'", ":", "\n", "            ", "loss_rec_org", "+=", "percept", "(", "F", ".", "adaptive_avg_pool2d", "(", "gimg", ",", "output_size", "=", "256", ")", ",", "\n", "F", ".", "adaptive_avg_pool2d", "(", "rgb_img", ",", "output_size", "=", "256", ")", ")", ".", "sum", "(", ")", "\n", "#else:", "\n", "#    loss_rec_org += F.l1_loss(gimg, rgb_img)", "\n", "\n", "", "loss_rec", "=", "loss_rec_org", "\n", "if", "DATA_NAME", "==", "'shoe'", ":", "\n", "### the grey image reconstruction", "\n", "            ", "perm", "=", "true_randperm", "(", "BATCH_SIZE_AE", ")", "\n", "gimg_perm", "=", "decoder", "(", "content_feats", ",", "[", "s", "[", "perm", "]", "for", "s", "in", "style_vector", "]", ")", "\n", "gimg_grey", "=", "gimg_perm", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "real_grey", "=", "rgb_img", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_rec_grey", "=", "F", ".", "mse_loss", "(", "gimg_grey", ",", "real_grey", ")", "\n", "loss_rec", "+=", "loss_rec_grey", "\n", "", "loss_rec", ".", "backward", "(", ")", "\n", "\n", "opt_s", ".", "step", "(", ")", "\n", "opt_d", ".", "step", "(", ")", "\n", "opt_c", ".", "step", "(", ")", "\n", "\n", "### Logging", "\n", "losses_cf_consist", ".", "update", "(", "loss_cf_consist", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "BATCH_SIZE_AE", ")", "\n", "losses_sf_consist", ".", "update", "(", "loss_sf_consist", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "BATCH_SIZE_AE", ")", "\n", "losses_cls", ".", "update", "(", "loss_cls", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "BATCH_SIZE_AE", ")", "\n", "losses_rec_rd", ".", "update", "(", "loss_rec_rd", ".", "item", "(", ")", ",", "BATCH_SIZE_AE", ")", "\n", "losses_rec_org", ".", "update", "(", "loss_rec_org", ".", "item", "(", ")", ",", "BATCH_SIZE_AE", ")", "\n", "if", "DATA_NAME", "==", "'shoe'", ":", "\n", "            ", "losses_rec_grey", ".", "update", "(", "loss_rec_grey", ".", "item", "(", ")", ",", "BATCH_SIZE_AE", ")", "\n", "\n", "\n", "", "if", "iteration", "%", "LOG_INTERVAL", "==", "0", ":", "\n", "            ", "log_msg", "=", "'Train Stage 1: AE: \\nrec_rd: %.4f  rec_org: %.4f  cls: %.4f  style_consist: %.4f  content_consist: %.4f  rec_grey: %.4f'", "%", "(", "losses_rec_rd", ".", "avg", ",", "losses_rec_org", ".", "avg", ",", "losses_cls", ".", "avg", ",", "losses_sf_consist", ".", "avg", ",", "losses_cf_consist", ".", "avg", ",", "losses_rec_grey", ".", "avg", ")", "\n", "\n", "print", "(", "log_msg", ")", "\n", "\n", "if", "log_file_path", "is", "not", "None", ":", "\n", "                ", "log_file", "=", "open", "(", "log_file_path", ",", "'a'", ")", "\n", "log_file", ".", "write", "(", "log_msg", "+", "'\\n'", ")", "\n", "log_file", ".", "close", "(", ")", "\n", "\n", "", "losses_sf_consist", ".", "reset", "(", ")", "\n", "losses_cls", ".", "reset", "(", ")", "\n", "losses_rec_rd", ".", "reset", "(", ")", "\n", "losses_rec_org", ".", "reset", "(", ")", "\n", "losses_cf_consist", ".", "reset", "(", ")", "\n", "losses_rec_grey", ".", "reset", "(", ")", "\n", "\n", "", "if", "iteration", "%", "SAVE_IMAGE_INTERVAL", "==", "0", ":", "\n", "            ", "vutils", ".", "save_image", "(", "torch", ".", "cat", "(", "[", "rgb_img_rd", ",", "F", ".", "interpolate", "(", "skt_org", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", ",", "size", "=", "512", ")", ",", "gimg_rd", "]", ")", ",", "'%s/rd_%d.jpg'", "%", "(", "saved_image_folder", ",", "iteration", ")", ",", "normalize", "=", "True", ",", "range", "=", "(", "-", "1", ",", "1", ")", ")", "\n", "if", "DATA_NAME", "!=", "'shoe'", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "perm", "=", "true_randperm", "(", "BATCH_SIZE_AE", ")", "\n", "gimg_perm", "=", "decoder", "(", "[", "c", "for", "c", "in", "content_feats", "]", ",", "[", "s", "[", "perm", "]", "for", "s", "in", "style_vector", "]", ")", "\n", "", "", "vutils", ".", "save_image", "(", "torch", ".", "cat", "(", "[", "rgb_img", ",", "F", ".", "interpolate", "(", "skt_img", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", ",", "size", "=", "512", ")", ",", "gimg", ",", "gimg_perm", "]", ")", ",", "'%s/org_%d.jpg'", "%", "(", "saved_image_folder", ",", "iteration", ")", ",", "normalize", "=", "True", ",", "range", "=", "(", "-", "1", ",", "1", ")", ")", "\n", "\n", "", "if", "iteration", "%", "SAVE_MODEL_INTERVAL", "==", "0", ":", "\n", "            ", "print", "(", "'Saving history model'", ")", "\n", "torch", ".", "save", "(", "{", "'s'", ":", "style_encoder", ".", "state_dict", "(", ")", ",", "\n", "'d'", ":", "decoder", ".", "state_dict", "(", ")", ",", "\n", "'c'", ":", "content_encoder", ".", "state_dict", "(", ")", ",", "\n", "'opt_c'", ":", "opt_c", ".", "state_dict", "(", ")", ",", "\n", "'opt_s_cls'", ":", "opt_s_cls", ".", "state_dict", "(", ")", ",", "\n", "'opt_s'", ":", "opt_s", ".", "state_dict", "(", ")", ",", "\n", "'opt_d'", ":", "opt_d", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "'%s/%d.pth'", "%", "(", "saved_model_folder", ",", "iteration", ")", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "{", "'s'", ":", "style_encoder", ".", "state_dict", "(", ")", ",", "\n", "'d'", ":", "decoder", ".", "state_dict", "(", ")", ",", "\n", "'c'", ":", "content_encoder", ".", "state_dict", "(", ")", ",", "\n", "'opt_c'", ":", "opt_c", ".", "state_dict", "(", ")", ",", "\n", "'opt_s_cls'", ":", "opt_s_cls", ".", "state_dict", "(", ")", ",", "\n", "'opt_s'", ":", "opt_s", ".", "state_dict", "(", ")", ",", "\n", "'opt_d'", ":", "opt_d", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "'%s/%d.pth'", "%", "(", "saved_model_folder", ",", "ITERATION_AE", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.DMI.__init__": [[25, 33], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight_a", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "in_channels", ",", "1", ",", "1", ")", "*", "1.01", ")", "\n", "self", ".", "weight_b", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "in_channels", ",", "1", ",", "1", ")", "*", "0.99", ")", "\n", "\n", "self", ".", "bias_a", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "in_channels", ",", "1", ",", "1", ")", "+", "0.01", ")", "\n", "self", ".", "bias_b", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "in_channels", ",", "1", ",", "1", ")", "-", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.DMI.forward": [[34, 43], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "mask.repeat.repeat.repeat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat", ",", "mask", ")", ":", "\n", "        ", "if", "feat", ".", "shape", "[", "1", "]", ">", "mask", ".", "shape", "[", "1", "]", ":", "\n", "            ", "channel_scale", "=", "feat", ".", "shape", "[", "1", "]", "//", "mask", ".", "shape", "[", "1", "]", "\n", "mask", "=", "mask", ".", "repeat", "(", "1", ",", "channel_scale", ",", "1", ",", "1", ")", "\n", "\n", "", "mask", "=", "F", ".", "interpolate", "(", "mask", ",", "size", "=", "feat", ".", "shape", "[", "2", "]", ")", "\n", "feat_a", "=", "self", ".", "weight_a", "*", "feat", "*", "mask", "+", "self", ".", "bias_a", "\n", "feat_b", "=", "self", ".", "weight_b", "*", "feat", "*", "(", "1", "-", "mask", ")", "+", "self", ".", "bias_b", "\n", "return", "feat_a", "+", "feat_b", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.Swish.forward": [[46, 48], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "return", "feat", "*", "torch", ".", "sigmoid", "(", "feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.Squeeze.forward": [[51, 53], ["feat.squeeze().squeeze", "feat.squeeze"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "return", "feat", ".", "squeeze", "(", "-", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.UnSqueeze.forward": [[56, 58], ["feat.unsqueeze().unsqueeze", "feat.unsqueeze"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "return", "feat", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.GLU.__init__": [[61, 63], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "GLU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.GLU.forward": [[64, 69], ["x.size", "int", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "nc", "=", "x", ".", "size", "(", "1", ")", "\n", "assert", "nc", "%", "2", "==", "0", ",", "'channels dont divide 2!'", "\n", "nc", "=", "int", "(", "nc", "/", "2", ")", "\n", "return", "x", "[", ":", ",", ":", "nc", "]", "*", "torch", ".", "sigmoid", "(", "x", "[", ":", ",", "nc", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.NoiseInjection.__init__": [[72, 76], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ch", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "ch", ",", "1", ",", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.NoiseInjection.forward": [[77, 83], ["torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat", ",", "noise", "=", "None", ")", ":", "\n", "        ", "if", "noise", "is", "None", ":", "\n", "            ", "batch", ",", "_", ",", "height", ",", "width", "=", "feat", ".", "shape", "\n", "noise", "=", "torch", ".", "randn", "(", "batch", ",", "1", ",", "height", ",", "width", ")", ".", "to", "(", "feat", ".", "device", ")", "\n", "\n", "", "return", "feat", "+", "self", ".", "weight", "*", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.SELayer.__init__": [[86, 94], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "SELayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "spectral_norm", "(", "nn", ".", "Linear", "(", "channel", ",", "channel", "//", "reduction", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Linear", "(", "channel", "//", "reduction", ",", "channel", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.SELayer.forward": [[96, 101], ["x.size", "models.SELayer.avg_pool().view", "models.SELayer.fc().view", "models.SELayer.expand_as", "models.SELayer.avg_pool", "models.SELayer.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "self", ".", "avg_pool", "(", "x", ")", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y", ".", "expand_as", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.ResBlkG.__init__": [[104, 114], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "models.Swish", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "models.Swish", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "models.SELayer", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch_dwconv.DepthwiseConv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ch", ",", "ch_m", "=", "4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", ")", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch", ",", "ch", "*", "ch_m", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", "*", "ch_m", ")", ")", ",", "Swish", "(", ")", ",", "\n", "spectral_norm", "(", "DepthwiseConv2d", "(", "ch", "*", "ch_m", ",", "ch", "*", "ch_m", ",", "5", ",", "1", ",", "2", ")", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", "*", "ch_m", ")", ")", ",", "Swish", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch", "*", "ch_m", ",", "ch", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", ")", ")", ",", "\n", "SELayer", "(", "ch", ")", ")", "\n", "", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.ResBlkG.forward": [[114, 116], ["models.ResBlkG.main"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "return", "feat", "+", "self", ".", "main", "(", "feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.ResBlkE.__init__": [[119, 128], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "models.Swish", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "models.Swish", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "models.SELayer", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ch", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", ")", ")", ",", "Swish", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch", ",", "ch", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", ")", ")", ",", "Swish", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch", ",", "ch", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "SELayer", "(", "ch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.ResBlkE.forward": [[129, 131], ["models.ResBlkE.main"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "return", "feat", "+", "self", ".", "main", "(", "feat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.StyleEncoder.__init__": [[134, 153], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ResBlkE", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ResBlkE", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ResBlkE", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.Squeeze", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.Squeeze", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.Squeeze"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nfc", "=", "64", ",", "nbr_cls", "=", "500", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "nfc", "=", "nfc", "\n", "\n", "self", ".", "sf_256", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "3", ",", "nfc", "//", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "sf_128", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "4", ",", "nfc", "//", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "nfc", "//", "2", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "sf_64", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "2", ",", "nfc", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "nfc", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "sf_32", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", ",", "nfc", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "2", ")", ")", "\n", "self", ".", "sf_16", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "2", ",", "nfc", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "4", ")", ")", "\n", "self", ".", "sf_8", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "4", ",", "nfc", "*", "8", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "8", ")", ")", "\n", "\n", "self", ".", "sfv_32", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "4", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "2", ",", "nfc", "*", "2", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "Squeeze", "(", ")", ")", "\n", "self", ".", "sfv_16", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "4", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "4", ",", "nfc", "*", "4", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "Squeeze", "(", ")", ")", "\n", "self", ".", "sfv_8", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "4", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "8", ",", "nfc", "*", "8", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "Squeeze", "(", ")", ")", "\n", "\n", "self", ".", "nbr_cls", "=", "nbr_cls", "\n", "self", ".", "final_cls", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.StyleEncoder.reset_cls": [[154, 161], ["models.StyleEncoder.final_cls[].weight.data.uniform_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "math.sqrt", "models.StyleEncoder.final_cls[].bias.data.uniform_", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear", "torch.Linear", "models.StyleEncoder.final_cls[].weight.size"], "methods", ["None"], ["", "def", "reset_cls", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "final_cls", "is", "None", ":", "\n", "            ", "self", ".", "final_cls", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ")", ",", "nn", ".", "Linear", "(", "self", ".", "nfc", "*", "8", ",", "self", ".", "nbr_cls", ")", ")", "\n", "", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "self", ".", "final_cls", "[", "1", "]", ".", "weight", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "final_cls", "[", "1", "]", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "final_cls", "[", "1", "]", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "final_cls", "[", "1", "]", ".", "bias", ".", "data", ".", "uniform_", "(", "-", "0.1", "*", "stdv", ",", "0.1", "*", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.StyleEncoder.get_feats": [[162, 175], ["models.StyleEncoder.sf_256", "models.StyleEncoder.sf_128", "models.StyleEncoder.sf_64", "models.StyleEncoder.sf_32", "models.StyleEncoder.sf_16", "models.StyleEncoder.sf_8", "models.StyleEncoder.sfv_32", "models.StyleEncoder.sfv_16", "models.StyleEncoder.sfv_8"], "methods", ["None"], ["", "", "def", "get_feats", "(", "self", ",", "image", ")", ":", "\n", "        ", "feat", "=", "self", ".", "sf_256", "(", "image", ")", "\n", "feat", "=", "self", ".", "sf_128", "(", "feat", ")", "\n", "feat", "=", "self", ".", "sf_64", "(", "feat", ")", "\n", "feat_32", "=", "self", ".", "sf_32", "(", "feat", ")", "\n", "feat_16", "=", "self", ".", "sf_16", "(", "feat_32", ")", "\n", "feat_8", "=", "self", ".", "sf_8", "(", "feat_16", ")", "\n", "\n", "feat_32", "=", "self", ".", "sfv_32", "(", "feat_32", ")", "\n", "feat_16", "=", "self", ".", "sfv_16", "(", "feat_16", ")", "\n", "feat_8", "=", "self", ".", "sfv_8", "(", "feat_8", ")", "\n", "\n", "return", "feat_32", ",", "feat_16", ",", "feat_8", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.StyleEncoder.forward": [[176, 181], ["models.StyleEncoder.get_feats", "models.StyleEncoder.final_cls"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.ContentEncoder.get_feats"], ["", "def", "forward", "(", "self", ",", "image", ")", ":", "\n", "        ", "feat_32", ",", "feat_16", ",", "feat_8", "=", "self", ".", "get_feats", "(", "image", ")", "\n", "\n", "pred_cls", "=", "self", ".", "final_cls", "(", "feat_8", ")", "\n", "return", "[", "feat_32", ",", "feat_16", ",", "feat_8", "]", ",", "pred_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.ContentEncoder.__init__": [[184, 194], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ResBlkE", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ResBlkE", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ResBlkE"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nfc", "=", "64", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cf_256", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "nfc", "//", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "cf_128", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "4", ",", "nfc", "//", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "nfc", "//", "2", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "cf_64", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "2", ",", "nfc", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "nfc", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "cf_32", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", ",", "nfc", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "2", ")", ")", "\n", "self", ".", "cf_16", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "2", ",", "nfc", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "4", ")", ")", "\n", "self", ".", "cf_8", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "4", ",", "nfc", "*", "8", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "8", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.ContentEncoder.get_feats": [[195, 204], ["models.ContentEncoder.cf_256", "models.ContentEncoder.cf_128", "models.ContentEncoder.cf_64", "models.ContentEncoder.cf_32", "models.ContentEncoder.cf_16", "models.ContentEncoder.cf_8"], "methods", ["None"], ["", "def", "get_feats", "(", "self", ",", "image", ")", ":", "\n", "        ", "feat", "=", "self", ".", "cf_256", "(", "image", ")", "\n", "feat", "=", "self", ".", "cf_128", "(", "feat", ")", "\n", "feat", "=", "self", ".", "cf_64", "(", "feat", ")", "\n", "feat_32", "=", "self", ".", "cf_32", "(", "feat", ")", "\n", "feat_16", "=", "self", ".", "cf_16", "(", "feat_32", ")", "\n", "feat_8", "=", "self", ".", "cf_8", "(", "feat_16", ")", "\n", "\n", "return", "feat_32", ",", "feat_16", ",", "feat_8", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.ContentEncoder.forward": [[205, 208], ["models.ContentEncoder.get_feats"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.ContentEncoder.get_feats"], ["", "def", "forward", "(", "self", ",", "image", ")", ":", "\n", "        ", "feat_32", ",", "feat_16", ",", "feat_8", "=", "self", ".", "get_feats", "(", "image", ")", "\n", "return", "[", "feat_32", ",", "feat_16", ",", "feat_8", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.Decoder.__init__": [[218, 241], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "models.DMI", "models.DMI", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.up_decoder", "models.up_decoder", "models.up_decoder", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.randn().normal_", "torch.randn().normal_", "torch.randn().normal_", "torch.randn().normal_", "torch.randn().normal_", "torch.randn().normal_", "torch.randn().normal_", "torch.randn().normal_", "torch.randn().normal_", "models.ResBlkG", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.ResBlkG", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ResBlkG", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.UpsamplingNearest2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.ResBlkG", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.up_decoder", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "models.UnSqueeze", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "models.UnSqueeze", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "models.UnSqueeze", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "models.UnSqueeze", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_decoder", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_decoder", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_decoder", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_decoder"], ["    ", "def", "__init__", "(", "self", ",", "nfc", "=", "64", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "base_feat", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "1", ",", "nfc", "*", "8", ",", "8", ",", "8", ")", ".", "normal_", "(", "0", ",", "1", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n", "self", ".", "dmi_8", "=", "DMI", "(", "nfc", "*", "8", ")", "\n", "self", ".", "dmi_16", "=", "DMI", "(", "nfc", "*", "4", ")", "\n", "\n", "self", ".", "feat_8_1", "=", "nn", ".", "Sequential", "(", "ResBlkG", "(", "nfc", "*", "16", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "16", ",", "nfc", "*", "8", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "InstanceNorm2d", "(", "nfc", "*", "8", ")", ")", "\n", "self", ".", "feat_8_2", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "ResBlkG", "(", "nfc", "*", "8", ")", ")", "\n", "self", ".", "feat_16", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "8", ",", "nfc", "*", "4", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkG", "(", "nfc", "*", "4", ")", ")", "\n", "self", ".", "feat_32", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "8", ",", "nfc", "*", "2", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkG", "(", "nfc", "*", "2", ")", ")", "\n", "self", ".", "feat_64", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "up_decoder", "(", "nfc", "*", "4", ",", "nfc", ")", ")", "\n", "self", ".", "feat_128", "=", "up_decoder", "(", "nfc", "*", "1", ",", "nfc", "//", "2", ")", "\n", "self", ".", "feat_256", "=", "up_decoder", "(", "nfc", "//", "2", ",", "nfc", "//", "4", ")", "\n", "self", ".", "feat_512", "=", "up_decoder", "(", "nfc", "//", "4", ",", "nfc", "//", "8", ")", "\n", "\n", "self", ".", "to_rgb", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "8", ",", "3", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "self", ".", "style_8", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "nfc", "*", "8", ",", "nfc", "*", "8", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "nfc", "*", "8", ",", "nfc", "*", "8", ")", ",", "nn", ".", "BatchNorm1d", "(", "nfc", "*", "8", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "self", ".", "style_64", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "nfc", "*", "8", ",", "nfc", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "nfc", ",", "nfc", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "self", ".", "style_128", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "nfc", "*", "4", ",", "nfc", "//", "2", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "nfc", "//", "2", ",", "nfc", "//", "2", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "self", ".", "style_256", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "nfc", "*", "2", ",", "nfc", "//", "4", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "nfc", "//", "4", ",", "nfc", "//", "4", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.Decoder.forward": [[242, 265], ["models.Decoder.feat_8_1", "models.Decoder.dmi_8", "models.Decoder.feat_8_2", "models.Decoder.feat_16", "models.Decoder.dmi_16", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.Decoder.feat_32", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.Decoder.feat_512", "models.Decoder.to_rgb", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.Decoder.style_8", "models.Decoder.feat_64", "models.Decoder.style_64", "models.Decoder.feat_128", "models.Decoder.style_128", "models.Decoder.feat_256", "models.Decoder.style_256", "models.Decoder.base_feat.repeat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "content_feats", ",", "style_vectors", ")", ":", "\n", "\n", "        ", "feat_8", "=", "self", ".", "feat_8_1", "(", "torch", ".", "cat", "(", "[", "content_feats", "[", "2", "]", ",", "self", ".", "base_feat", ".", "repeat", "(", "style_vectors", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", "]", ",", "dim", "=", "1", ")", ")", "\n", "feat_8", "=", "self", ".", "dmi_8", "(", "feat_8", ",", "content_feats", "[", "2", "]", ")", "\n", "\n", "bs", "=", "feat_8", ".", "shape", "[", "0", "]", "\n", "\n", "feat_8", "=", "feat_8", "*", "self", ".", "style_8", "(", "style_vectors", "[", "2", "]", ")", "\n", "feat_8", "=", "self", ".", "feat_8_2", "(", "feat_8", ")", "\n", "\n", "feat_16", "=", "self", ".", "feat_16", "(", "feat_8", ")", "\n", "feat_16", "=", "self", ".", "dmi_16", "(", "feat_16", ",", "content_feats", "[", "1", "]", ")", "\n", "feat_16", "=", "torch", ".", "cat", "(", "[", "feat_16", ",", "content_feats", "[", "1", "]", "]", ",", "dim", "=", "1", ")", "\n", "\n", "feat_32", "=", "self", ".", "feat_32", "(", "feat_16", ")", "\n", "feat_32", "=", "torch", ".", "cat", "(", "[", "feat_32", ",", "content_feats", "[", "0", "]", "]", ",", "dim", "=", "1", ")", "\n", "\n", "feat_64", "=", "self", ".", "feat_64", "(", "feat_32", ")", "*", "self", ".", "style_64", "(", "style_vectors", "[", "2", "]", ")", "\n", "feat_128", "=", "self", ".", "feat_128", "(", "feat_64", ")", "*", "self", ".", "style_128", "(", "style_vectors", "[", "1", "]", ")", "\n", "feat_256", "=", "self", ".", "feat_256", "(", "feat_128", ")", "*", "self", ".", "style_256", "(", "style_vectors", "[", "0", "]", ")", "\n", "feat_512", "=", "self", ".", "feat_512", "(", "feat_256", ")", "\n", "\n", "return", "self", ".", "to_rgb", "(", "feat_512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.AE.__init__": [[268, 274], ["torch.Module.__init__", "models.StyleEncoder", "models.ContentEncoder", "models.Decoder"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nfc", ",", "nbr_cls", "=", "500", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "style_encoder", "=", "StyleEncoder", "(", "nfc", ",", "nbr_cls", "=", "nbr_cls", ")", "\n", "self", ".", "content_encoder", "=", "ContentEncoder", "(", "nfc", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", "nfc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.AE.forward": [[275, 281], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "models.AE.style_encoder.get_feats", "models.AE.content_encoder", "models.AE.decoder", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.ContentEncoder.get_feats"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "forward", "(", "self", ",", "skt_img", ",", "style_img", ")", ":", "\n", "        ", "style_feats", "=", "self", ".", "style_encoder", ".", "get_feats", "(", "F", ".", "interpolate", "(", "style_img", ",", "size", "=", "512", ")", ")", "\n", "content_feats", "=", "self", ".", "content_encoder", "(", "F", ".", "interpolate", "(", "skt_img", ",", "size", "=", "512", ")", ")", "\n", "gimg", "=", "self", ".", "decoder", "(", "content_feats", ",", "style_feats", ")", "\n", "return", "gimg", ",", "style_feats", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.AE.load_state_dicts": [[282, 289], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "models.AE.style_encoder.reset_cls", "models.AE.style_encoder.load_state_dict", "models.AE.content_encoder.load_state_dict", "models.AE.decoder.load_state_dict", "print"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.StyleEncoder.reset_cls"], ["", "def", "load_state_dicts", "(", "self", ",", "path", ")", ":", "\n", "        ", "ckpt", "=", "torch", ".", "load", "(", "path", ")", "\n", "self", ".", "style_encoder", ".", "reset_cls", "(", ")", "\n", "self", ".", "style_encoder", ".", "load_state_dict", "(", "ckpt", "[", "'s'", "]", ")", "\n", "self", ".", "content_encoder", ".", "load_state_dict", "(", "ckpt", "[", "'c'", "]", ")", "\n", "self", ".", "decoder", ".", "load_state_dict", "(", "ckpt", "[", "'d'", "]", ")", "\n", "print", "(", "'AE load success'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.RefineGenerator_art.__init__": [[309, 353], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.down_gan", "models.down_gan", "models.down_gan", "models.down_gan", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.up_gan", "models.up_gan", "models.up_gan", "models.up_gan", "models.up_gan", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.UnSqueeze", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "models.GLU", "models.up_gan", "models.up_gan", "models.up_gan", "models.UnSqueeze", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "models.GLU", "models.up_gan", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.ResBlkG", "models.Swish", "models.ResBlkG", "models.Swish", "models.up_gan", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "models.UnSqueeze", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "models.UnSqueeze", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "models.UnSqueeze", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "models.UnSqueeze", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.down_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.down_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.down_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.down_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan"], ["    ", "def", "__init__", "(", "self", ",", "nfc", "=", "64", ",", "im_size", "=", "512", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "im_size", "=", "im_size", "\n", "\n", "d16", ",", "d32", ",", "d64", ",", "d128", ",", "d256", ",", "d512", "=", "nfc", "*", "8", ",", "nfc", "*", "8", ",", "nfc", "*", "4", ",", "nfc", "*", "2", ",", "nfc", ",", "nfc", "//", "2", "\n", "\n", "self", ".", "from_noise_32", "=", "nn", ".", "Sequential", "(", "UnSqueeze", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "ConvTranspose2d", "(", "nfc", "*", "8", ",", "nfc", "*", "8", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "#4", "\n", "nn", ".", "BatchNorm2d", "(", "nfc", "*", "8", ")", ",", "GLU", "(", ")", ",", "up_gan", "(", "nfc", "*", "4", ",", "nfc", "*", "2", ")", ",", "up_gan", "(", "nfc", "*", "2", ",", "nfc", "*", "2", ")", ",", "up_gan", "(", "nfc", "*", "2", ",", "nfc", "*", "1", ")", ")", "#32 ", "\n", "\n", "self", ".", "from_style", "=", "nn", ".", "Sequential", "(", "UnSqueeze", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "ConvTranspose2d", "(", "nfc", "*", "(", "8", "+", "4", "+", "2", ")", ",", "nfc", "*", "16", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "#4", "\n", "nn", ".", "BatchNorm2d", "(", "nfc", "*", "16", ")", ",", "GLU", "(", ")", ",", "up_gan", "(", "nfc", "*", "8", ",", "nfc", "*", "4", ")", ")", "\n", "\n", "self", ".", "encode_256", "=", "nn", ".", "Sequential", "(", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "3", ",", "d256", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "encode_128", "=", "down_gan", "(", "d256", ",", "d128", ")", "\n", "self", ".", "encode_64", "=", "down_gan", "(", "d128", ",", "d64", ")", "\n", "self", ".", "encode_32", "=", "down_gan", "(", "d64", ",", "d32", ")", "\n", "self", ".", "encode_16", "=", "down_gan", "(", "d32", ",", "d16", ")", "\n", "\n", "self", ".", "residual_16", "=", "nn", ".", "Sequential", "(", "ResBlkG", "(", "d16", "+", "nfc", "*", "4", ")", ",", "Swish", "(", ")", ",", "ResBlkG", "(", "d16", "+", "nfc", "*", "4", ")", ",", "Swish", "(", ")", ")", "\n", "\n", "self", ".", "decode_32", "=", "up_gan", "(", "d16", "+", "nfc", "*", "4", ",", "d32", ")", "\n", "self", ".", "decode_64", "=", "up_gan", "(", "d32", "+", "nfc", ",", "d64", ")", "\n", "self", ".", "decode_128", "=", "up_gan", "(", "d64", ",", "d128", ")", "\n", "self", ".", "decode_256", "=", "up_gan", "(", "d128", ",", "d256", ")", "\n", "self", ".", "decode_512", "=", "up_gan", "(", "d256", ",", "d512", ")", "\n", "if", "im_size", "==", "1024", ":", "\n", "            ", "self", ".", "decode_1024", "=", "up_gan", "(", "d512", ",", "nfc", "//", "4", ")", "\n", "\n", "", "self", ".", "style_64", "=", "nn", ".", "Sequential", "(", "spectral_norm", "(", "nn", ".", "Linear", "(", "nfc", "*", "8", ",", "d64", ")", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "d64", ",", "d64", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "self", ".", "style_128", "=", "nn", ".", "Sequential", "(", "spectral_norm", "(", "nn", ".", "Linear", "(", "nfc", "*", "8", ",", "d128", ")", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "d128", ",", "d128", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "self", ".", "style_256", "=", "nn", ".", "Sequential", "(", "spectral_norm", "(", "nn", ".", "Linear", "(", "nfc", "*", "4", ",", "d256", ")", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "d256", ",", "d256", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "self", ".", "style_512", "=", "nn", ".", "Sequential", "(", "spectral_norm", "(", "nn", ".", "Linear", "(", "nfc", "*", "2", ",", "d512", ")", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "d512", ",", "d512", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "\n", "self", ".", "to_rgb", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "2", ",", "3", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "if", "im_size", "==", "1024", ":", "\n", "            ", "self", ".", "to_rgb", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "4", ",", "3", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n", "", "if", "DATA_NAME", "==", "'shoe'", ":", "\n", "            ", "self", ".", "bs_0", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "1", ",", "nfc", "*", "2", ")", ")", "\n", "self", ".", "bs_1", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "1", ",", "nfc", "*", "4", ")", ")", "\n", "self", ".", "bs_2", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "1", ",", "nfc", "*", "8", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.RefineGenerator_art.forward": [[354, 389], ["models.repeat_upscale", "models.RefineGenerator_art.from_noise_32", "models.RefineGenerator_art.encode_256", "models.RefineGenerator_art.encode_128", "models.RefineGenerator_art.encode_64", "models.RefineGenerator_art.encode_32", "models.RefineGenerator_art.encode_16", "models.RefineGenerator_art.residual_16", "models.RefineGenerator_art.decode_32", "models.RefineGenerator_art.decode_64", "models.RefineGenerator_art.decode_128", "models.RefineGenerator_art.decode_256", "models.RefineGenerator_art.decode_512", "models.RefineGenerator_art.to_rgb", "models.RefineGenerator_art.from_style", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.RefineGenerator_art.style_64", "models.RefineGenerator_art.style_128", "models.RefineGenerator_art.style_256", "models.RefineGenerator_art.style_512", "models.RefineGenerator_art.decode_1024", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.repeat_upscale"], ["", "", "def", "forward", "(", "self", ",", "image", ",", "style_vectors", ")", ":", "\n", "\n", "        ", "s_16", "=", "repeat_upscale", "(", "self", ".", "from_style", "(", "torch", ".", "cat", "(", "style_vectors", ",", "1", ")", ")", ",", "scale_factor", "=", "2", ")", "\n", "if", "DATA_NAME", "==", "'shoe'", ":", "\n", "            ", "s_16", "=", "torch", ".", "zeros_like", "(", "s_16", ")", "\n", "\n", "", "n_32", "=", "self", ".", "from_noise_32", "(", "torch", ".", "randn_like", "(", "style_vectors", "[", "2", "]", ")", ")", "\n", "\n", "e_256", "=", "self", ".", "encode_256", "(", "image", ")", "\n", "e_128", "=", "self", ".", "encode_128", "(", "e_256", ")", "\n", "e_64", "=", "self", ".", "encode_64", "(", "e_128", ")", "\n", "e_32", "=", "self", ".", "encode_32", "(", "e_64", ")", "\n", "e_16", "=", "self", ".", "encode_16", "(", "e_32", ")", "\n", "\n", "e_16", "=", "self", ".", "residual_16", "(", "torch", ".", "cat", "(", "[", "e_16", ",", "s_16", "]", ",", "dim", "=", "1", ")", ")", "\n", "\n", "d_32", "=", "self", ".", "decode_32", "(", "e_16", ")", "\n", "d_64", "=", "self", ".", "decode_64", "(", "torch", ".", "cat", "(", "[", "d_32", ",", "n_32", "]", ",", "dim", "=", "1", ")", ")", "\n", "if", "DATA_NAME", "!=", "'shoe'", ":", "\n", "            ", "d_64", "*=", "self", ".", "style_64", "(", "style_vectors", "[", "2", "]", ")", "\n", "", "d_128", "=", "self", ".", "decode_128", "(", "d_64", "+", "e_64", ")", "\n", "if", "DATA_NAME", "!=", "'shoe'", ":", "\n", "            ", "d_128", "*=", "self", ".", "style_128", "(", "style_vectors", "[", "2", "]", ")", "\n", "", "d_256", "=", "self", ".", "decode_256", "(", "d_128", "+", "e_128", ")", "\n", "if", "DATA_NAME", "!=", "'shoe'", ":", "\n", "            ", "d_256", "*=", "self", ".", "style_256", "(", "style_vectors", "[", "1", "]", ")", "\n", "", "d_512", "=", "self", ".", "decode_512", "(", "d_256", "+", "e_256", ")", "\n", "if", "DATA_NAME", "!=", "'shoe'", ":", "\n", "            ", "d_512", "*=", "self", ".", "style_512", "(", "style_vectors", "[", "0", "]", ")", "\n", "\n", "", "if", "self", ".", "im_size", "==", "1024", ":", "\n", "            ", "d_final", "=", "self", ".", "decode_1024", "(", "d_512", ")", "\n", "", "else", ":", "\n", "            ", "d_final", "=", "d_512", "\n", "", "return", "self", ".", "to_rgb", "(", "d_final", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.RefineGenerator_face.__init__": [[392, 431], ["torch.Module.__init__", "models.down_gan", "models.down_gan", "models.down_gan", "models.down_gan", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.up_gan", "models.up_gan", "models.up_gan", "models.up_gan", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "models.GLU", "models.up_gan", "models.up_gan", "models.up_gan", "models.up_gan", "chs.append", "len", "models.RefineGenerator_face.style_blocks.append", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.down_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.down_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.down_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.down_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan"], ["    ", "def", "__init__", "(", "self", ",", "nfc", ",", "im_size", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "im_size", "=", "im_size", "\n", "\n", "e1", ",", "e2", ",", "e3", ",", "e4", "=", "16", ",", "32", ",", "64", ",", "128", "\n", "self", ".", "encode_1", "=", "down_gan", "(", "3", ",", "e1", ")", "#256", "\n", "self", ".", "encode_2", "=", "down_gan", "(", "e1", ",", "e2", ")", "#128", "\n", "self", ".", "encode_3", "=", "down_gan", "(", "e2", ",", "e3", ")", "#64", "\n", "self", ".", "encode_4", "=", "down_gan", "(", "e3", ",", "e4", ")", "#32", "\n", "\n", "s1", ",", "s2", ",", "s3", ",", "s4", "=", "256", ",", "128", ",", "128", ",", "64", "\n", "self", ".", "style", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "nfc", "*", "(", "8", "+", "4", "+", "2", ")", ",", "512", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ")", ")", "\n", "self", ".", "from_style_32", "=", "nn", ".", "Sequential", "(", "\n", "spectral_norm", "(", "nn", ".", "ConvTranspose2d", "(", "512", ",", "s1", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "#4", "\n", "nn", ".", "BatchNorm2d", "(", "s1", ")", ",", "GLU", "(", ")", ",", "up_gan", "(", "s1", "//", "2", ",", "s2", ")", ",", "up_gan", "(", "s2", ",", "s3", ")", ",", "up_gan", "(", "s3", ",", "s4", ")", ")", "#32", "\n", "\n", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", "=", "256", ",", "128", ",", "64", ",", "32", ",", "16", "\n", "self", ".", "decode_64", "=", "up_gan", "(", "e4", "+", "s4", ",", "d1", ")", "\n", "self", ".", "decode_128", "=", "up_gan", "(", "d1", "+", "e3", ",", "d2", ")", "\n", "self", ".", "decode_256", "=", "up_gan", "(", "d2", "+", "e2", ",", "d3", ")", "\n", "self", ".", "decode_512", "=", "up_gan", "(", "d3", "+", "e1", ",", "d4", ")", "\n", "if", "im_size", "==", "1024", ":", "\n", "            ", "self", ".", "decode_1024", "=", "up_gan", "(", "d4", ",", "d5", ")", "\n", "\n", "", "self", ".", "style_blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "chs", "=", "[", "d1", ",", "d2", ",", "d3", ",", "d4", "]", "\n", "if", "im_size", "==", "1024", ":", "\n", "            ", "chs", ".", "append", "(", "d5", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "chs", ")", ")", ":", "\n", "            ", "self", ".", "style_blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", ",", "chs", "[", "i", "]", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "chs", "[", "i", "]", ",", "chs", "[", "i", "]", ")", ",", "nn", ".", "Sigmoid", "(", ")", ")", ")", "\n", "\n", "", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "spectral_norm", "(", "\n", "nn", ".", "Conv2d", "(", "d4", ",", "3", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "if", "im_size", "==", "1024", ":", "\n", "            ", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "spectral_norm", "(", "\n", "nn", ".", "Conv2d", "(", "d5", ",", "3", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.RefineGenerator_face.forward": [[432, 455], ["models.RefineGenerator_face.encode_1", "models.RefineGenerator_face.encode_2", "models.RefineGenerator_face.encode_3", "models.RefineGenerator_face.encode_4", "models.RefineGenerator_face.style", "models.RefineGenerator_face.from_style_32", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.RefineGenerator_face.unsqueeze().unsqueeze", "random.randint", "s_32.flip.flip.flip", "random.randint", "s_32.flip.flip.flip", "models.RefineGenerator_face.decode_64", "models.RefineGenerator_face.decode_128", "models.RefineGenerator_face.decode_256", "models.RefineGenerator_face.decode_512", "models.RefineGenerator_face.final", "models.RefineGenerator_face.final", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "models.RefineGenerator_face.decode_1024", "models.RefineGenerator_face.unsqueeze"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "image", ",", "style", ")", ":", "\n", "        ", "e_256", "=", "self", ".", "encode_1", "(", "image", ")", "\n", "e_128", "=", "self", ".", "encode_2", "(", "e_256", ")", "\n", "e_64", "=", "self", ".", "encode_3", "(", "e_128", ")", "\n", "e_32", "=", "self", ".", "encode_4", "(", "e_64", ")", "\n", "\n", "style", "=", "self", ".", "style", "(", "torch", ".", "cat", "(", "style", ",", "dim", "=", "1", ")", ")", "\n", "s_32", "=", "self", ".", "from_style_32", "(", "style", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ")", "\n", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "1", ":", "\n", "            ", "s_32", "=", "s_32", ".", "flip", "(", "2", ")", "\n", "", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "1", ":", "\n", "            ", "s_32", "=", "s_32", ".", "flip", "(", "3", ")", "\n", "\n", "", "feat_64", "=", "self", ".", "decode_64", "(", "torch", ".", "cat", "(", "[", "e_32", ",", "s_32", "]", ",", "dim", "=", "1", ")", ")", "*", "self", ".", "style_blocks", "[", "0", "]", "(", "style", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "feat_128", "=", "self", ".", "decode_128", "(", "torch", ".", "cat", "(", "[", "e_64", ",", "feat_64", "]", ",", "dim", "=", "1", ")", ")", "*", "self", ".", "style_blocks", "[", "1", "]", "(", "style", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "feat_256", "=", "self", ".", "decode_256", "(", "torch", ".", "cat", "(", "[", "e_128", ",", "feat_128", "]", ",", "dim", "=", "1", ")", ")", "*", "self", ".", "style_blocks", "[", "2", "]", "(", "style", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "feat_512", "=", "self", ".", "decode_512", "(", "torch", ".", "cat", "(", "[", "e_256", ",", "feat_256", "]", ",", "dim", "=", "1", ")", ")", "*", "self", ".", "style_blocks", "[", "3", "]", "(", "style", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "if", "self", ".", "im_size", "==", "1024", ":", "\n", "            ", "feat_1024", "=", "self", ".", "decode_1024", "(", "feat_512", ")", "*", "self", ".", "style_blocks", "[", "4", "]", "(", "style", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "return", "self", ".", "final", "(", "feat_1024", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "final", "(", "feat_512", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.DownBlock.__init__": [[458, 480], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ch_in", ",", "ch_out", ",", "ch_skip", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "ch_out", "=", "ch_out", "\n", "self", ".", "down_main", "=", "nn", ".", "Sequential", "(", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch_in", ",", "ch_out", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ch_out", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch_out", ",", "ch_out", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ch_out", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", ")", "\n", "\n", "self", ".", "skip", "=", "False", "\n", "\n", "if", "ch_skip", ">", "0", ":", "\n", "            ", "self", ".", "skip", "=", "True", "\n", "self", ".", "skip_conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "4", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch_skip", ",", "ch_out", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch_out", ",", "ch_out", "*", "2", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.DownBlock.forward": [[482, 489], ["models.DownBlock.down_main", "models.DownBlock.skip_conv", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "feat", ",", "skip_feat", "=", "None", ")", ":", "\n", "        ", "feat_out", "=", "self", ".", "down_main", "(", "feat", ")", "\n", "if", "skip_feat", "is", "not", "None", "and", "self", ".", "skip", ":", "\n", "            ", "addon", "=", "self", ".", "skip_conv", "(", "skip_feat", ")", "\n", "feat_out", "=", "feat_out", "*", "torch", ".", "sigmoid", "(", "addon", "[", ":", ",", ":", "self", ".", "ch_out", "]", ")", "+", "torch", ".", "tanh", "(", "addon", "[", ":", ",", "self", ".", "ch_out", ":", "]", ")", "\n", "\n", "", "return", "feat_out", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.Discriminator.__init__": [[492, 527], ["torch.Module.__init__", "modules.append", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "models.Discriminator.apply", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.DownBlock", "models.DownBlock", "models.DownBlock", "models.DownBlock", "modules.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "models.DownBlock", "modules.append", "modules.append", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "models.DownBlock", "models.DownBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ndf", "=", "64", ",", "nc", "=", "3", ",", "im_size", "=", "512", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ndf", "=", "ndf", "\n", "self", ".", "im_size", "=", "im_size", "\n", "\n", "modules", "=", "[", "\n", "nn", ".", "Sequential", "(", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "nc", ",", "ndf", "//", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ")", ",", "\n", "DownBlock", "(", "ndf", "//", "4", ",", "ndf", "//", "2", ")", ",", "\n", "DownBlock", "(", "ndf", "//", "2", ",", "ndf", "*", "1", ")", ",", "\n", "DownBlock", "(", "ndf", "*", "1", ",", "ndf", "*", "2", ")", ",", "\n", "DownBlock", "(", "ndf", "*", "2", ",", "ndf", "*", "4", ",", "ch_skip", "=", "ndf", "//", "4", ")", ",", "\n", "]", "\n", "\n", "if", "im_size", "==", "512", ":", "\n", "            ", "modules", ".", "append", "(", "\n", "DownBlock", "(", "ndf", "*", "4", ",", "ndf", "*", "16", ",", "ch_skip", "=", "ndf", "//", "2", ")", ",", "\n", ")", "\n", "", "elif", "im_size", "==", "1024", ":", "\n", "            ", "modules", ".", "append", "(", "\n", "DownBlock", "(", "ndf", "*", "4", ",", "ndf", "*", "8", ",", "ch_skip", "=", "ndf", "//", "2", ")", ")", "\n", "modules", ".", "append", "(", "\n", "DownBlock", "(", "ndf", "*", "8", ",", "ndf", "*", "16", ",", "ch_skip", "=", "ndf", "*", "1", ")", ",", "\n", ")", "\n", "", "modules", ".", "append", "(", "\n", "nn", ".", "Sequential", "(", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ndf", "*", "16", ",", "ndf", "*", "16", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ndf", "*", "16", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ndf", "*", "16", ",", "1", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ")", "\n", ")", "\n", "\n", "self", ".", "main", "=", "nn", ".", "ModuleList", "(", "modules", ")", "\n", "\n", "self", ".", "apply", "(", "weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.Discriminator.forward": [[529, 544], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# x shape 512", "\n", "        ", "feat_256", "=", "self", ".", "main", "[", "0", "]", "(", "x", ")", "\n", "feat_128", "=", "self", ".", "main", "[", "1", "]", "(", "feat_256", ")", "\n", "feat_64", "=", "self", ".", "main", "[", "2", "]", "(", "feat_128", ")", "\n", "feat_32", "=", "self", ".", "main", "[", "3", "]", "(", "feat_64", ")", "\n", "\n", "feat_16", "=", "self", ".", "main", "[", "4", "]", "(", "feat_32", ",", "feat_256", ")", "\n", "feat_8", "=", "self", ".", "main", "[", "5", "]", "(", "feat_16", ",", "feat_128", ")", "\n", "if", "self", ".", "im_size", "==", "1024", ":", "\n", "            ", "feat_last", "=", "self", ".", "main", "[", "6", "]", "(", "feat_8", ",", "feat_64", ")", "\n", "", "else", ":", "\n", "            ", "feat_last", "=", "feat_8", "\n", "\n", "", "return", "self", ".", "main", "[", "-", "1", "]", "(", "feat_last", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.weights_init": [[12, 22], ["classname.find", "m.weight.data.normal_", "classname.find", "m.weight.data.normal_", "m.bias.data.fill_"], "function", ["None"], ["def", "weights_init", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "try", ":", "\n", "        ", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0.0", ",", "0.02", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm'", ")", "!=", "-", "1", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "", "", "except", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_decoder": [[210, 215], ["torch.Sequential", "torch.UpsamplingNearest2d", "torch.Conv2d", "torch.InstanceNorm2d", "models.GLU"], "function", ["None"], ["", "", "def", "up_decoder", "(", "ch_in", ",", "ch_out", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ch_in", ",", "ch_out", "*", "2", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "ch_out", "*", "2", ")", ",", "GLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.down_gan": [[290, 294], ["torch.Sequential", "torch.nn.utils.spectral_norm", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.Conv2d"], "function", ["None"], ["", "", "def", "down_gan", "(", "ch_in", ",", "ch_out", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch_in", ",", "ch_out", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ch_out", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.up_gan": [[296, 301], ["torch.Sequential", "torch.UpsamplingNearest2d", "torch.nn.utils.spectral_norm", "torch.BatchNorm2d", "models.NoiseInjection", "models.GLU", "torch.Conv2d"], "function", ["None"], ["", "def", "up_gan", "(", "ch_in", ",", "ch_out", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch_in", ",", "ch_out", "*", "2", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ch_out", "*", "2", ")", ",", "NoiseInjection", "(", "ch_out", "*", "2", ")", ",", "GLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.repeat_upscale": [[303, 306], ["feat.repeat.repeat"], "function", ["None"], ["", "def", "repeat_upscale", "(", "feat", ",", "scale_factor", "=", "2", ")", ":", "\n", "    ", "feat", "=", "feat", ".", "repeat", "(", "1", ",", "1", ",", "scale_factor", ",", "scale_factor", ")", "\n", "return", "feat", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.train_step_2_gan.train": [[24, 265], ["load_patched_inception_v3().cuda", "load_patched_inception_v3().cuda.eval", "lpips.PerceptualLoss", "datasets.PairedMultiDataset", "print", "iter", "ImageFolder", "ImageFolder", "models.AE", "nn.DataParallel.load_state_dicts", "nn.DataParallel.cuda", "nn.DataParallel.eval", "RefineGenerator().cuda", "models.Discriminator().cuda", "utils.copy_G_params", "torch.optim.Adam", "torch.optim.Adam", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "range", "utils.make_folders", "open", "open.close", "torch.utils.data.DataLoader", "trans_maker", "trans_maker", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "nn.DataParallel.parameters", "nn.DataParallel.parameters", "torch.load", "torch.load", "nn.DataParallel.load_state_dict", "nn.DataParallel.load_state_dict", "optim.Adam.load_state_dict", "optim.Adam.load_state_dict", "tqdm.tqdm", "load_patched_inception_v3", "len", "RefineGenerator", "models.Discriminator", "range", "next", "rgb_img.cuda.cuda", "random.randint", "nn.DataParallel.", "nn.DataParallel.", "nn.DataParallel.", "nn.DataParallel.", "utils.d_hinge_loss", "nn.DataParallel.zero_grad", "utils.d_hinge_loss.backward", "optim.Adam.step", "utils.AverageMeter.update", "nn.DataParallel.", "utils.g_hinge_loss", "utils.AverageMeter.update", "nn.DataParallel.zero_grad", "loss_all.backward", "optim.Adam.step", "zip", "utils.AverageMeter.update", "utils.AverageMeter.update", "datasets.InfiniteSamplerWrapper", "skt_img_1.cuda", "skt_img_3[].clone().cuda", "rgb_img[].clone", "utils.true_randperm", "net_ig.detach", "torch.mse_loss", "torch.l1_loss", "loss_rec_ae.item", "utils.true_randperm", "nn.DataParallel.", "nn.DataParallel.", "gimg_grey.mean.mean", "rgb_img.cuda.mean", "torch.mse_loss", "nn.DataParallel.parameters", "avg_p.mul_().add_", "net_id.mean().item", "net_id.mean().item", "print", "print", "utils.AverageMeter.reset", "utils.AverageMeter.reset", "utils.AverageMeter.reset", "utils.AverageMeter.reset", "utils.AverageMeter.reset", "print", "torch.save", "torch.save", "print", "extract_feature_from_generator_fn", "calc_fid", "extract_feature_from_generator_fn", "calc_fid", "fid.append", "print", "skt_img_2.cuda", "skt_img_3.cuda", "lpips.PerceptualLoss.sum", "loss_mse.item", "torch.no_grad", "torch.no_grad", "utils.copy_G_params", "utils.load_params", "nn.DataParallel.", "nn.DataParallel.", "nn.DataParallel.", "nn.DataParallel.", "torch.cat", "torch.cat", "torchvision.utils.save_image", "generate_matrix.make_matrix", "utils.load_params", "open", "open.write", "open.close", "os.path.exists", "image_generator", "image_generator_perm", "open", "open.write", "open.close", "skt_img_3[].clone", "torch.l1_loss", "torch.mse_loss", "avg_p.mul_", "net_id.mean", "net_id.mean", "nn.DataParallel.state_dict", "nn.DataParallel.state_dict", "nn.DataParallel.state_dict", "optim.Adam.state_dict", "optim.Adam.state_dict", "pickle.load", "extract_feature_from_generator_fn", "numpy.mean", "numpy.cov", "pickle.dump", "pickle.load", "lpips.PerceptualLoss.", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "open", "real_image_loader", "open", "open", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "skt_img_3[].clone().cuda.repeat"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.models.AE.load_state_dicts", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.copy_G_params", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.make_folders", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.trans_maker", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.trans_maker", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.load_patched_inception_v3", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.d_hinge_loss", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.g_hinge_loss", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.true_randperm", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.true_randperm", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.extract_feature_from_generator_fn", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.calc_fid", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.extract_feature_from_generator_fn", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.calc_fid", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.copy_G_params", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.load_params", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.evaluate.generate_mix.make_matrix", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.load_params", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.image_generator", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.image_generator_perm", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.extract_feature_from_generator_fn", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.real_image_loader"], ["def", "train", "(", ")", ":", "\n", "    ", "from", "benchmark", "import", "calc_fid", ",", "extract_feature_from_generator_fn", ",", "load_patched_inception_v3", ",", "real_image_loader", ",", "image_generator", ",", "image_generator_perm", "\n", "import", "lpips", "\n", "\n", "from", "config", "import", "IM_SIZE_GAN", ",", "BATCH_SIZE_GAN", ",", "NFC", ",", "NBR_CLS", ",", "DATALOADER_WORKERS", ",", "EPOCH_GAN", ",", "ITERATION_AE", ",", "GAN_CKECKPOINT", "\n", "from", "config", "import", "SAVE_IMAGE_INTERVAL", ",", "SAVE_MODEL_INTERVAL", ",", "LOG_INTERVAL", ",", "SAVE_FOLDER", ",", "TRIAL_NAME", ",", "DATA_NAME", ",", "MULTI_GPU", "\n", "from", "config", "import", "FID_INTERVAL", ",", "FID_BATCH_NBR", ",", "PRETRAINED_AE_PATH", "\n", "from", "config", "import", "data_root_colorful", ",", "data_root_sketch_1", ",", "data_root_sketch_2", ",", "data_root_sketch_3", "\n", "\n", "real_features", "=", "None", "\n", "inception", "=", "load_patched_inception_v3", "(", ")", ".", "cuda", "(", ")", "\n", "inception", ".", "eval", "(", ")", "\n", "\n", "percept", "=", "lpips", ".", "PerceptualLoss", "(", "model", "=", "'net-lin'", ",", "net", "=", "'vgg'", ",", "use_gpu", "=", "True", ")", "\n", "\n", "saved_image_folder", "=", "saved_model_folder", "=", "None", "\n", "log_file_path", "=", "None", "\n", "if", "saved_image_folder", "is", "None", ":", "\n", "        ", "saved_image_folder", ",", "saved_model_folder", "=", "make_folders", "(", "SAVE_FOLDER", ",", "'GAN_'", "+", "TRIAL_NAME", ")", "\n", "log_file_path", "=", "saved_image_folder", "+", "'/../gan_log.txt'", "\n", "log_file", "=", "open", "(", "log_file_path", ",", "'w'", ")", "\n", "log_file", ".", "close", "(", ")", "\n", "\n", "", "dataset", "=", "PairedMultiDataset", "(", "data_root_colorful", ",", "data_root_sketch_1", ",", "data_root_sketch_2", ",", "data_root_sketch_3", ",", "im_size", "=", "IM_SIZE_GAN", ",", "rand_crop", "=", "True", ")", "\n", "print", "(", "'the dataset contains %d images.'", "%", "len", "(", "dataset", ")", ")", "\n", "dataloader", "=", "iter", "(", "DataLoader", "(", "dataset", ",", "BATCH_SIZE_GAN", ",", "sampler", "=", "InfiniteSamplerWrapper", "(", "dataset", ")", ",", "num_workers", "=", "DATALOADER_WORKERS", ",", "pin_memory", "=", "True", ")", ")", "\n", "\n", "from", "datasets", "import", "ImageFolder", "\n", "from", "datasets", "import", "trans_maker_augment", "as", "trans_maker", "\n", "\n", "dataset_rgb", "=", "ImageFolder", "(", "data_root_colorful", ",", "trans_maker", "(", "512", ")", ")", "\n", "dataset_skt", "=", "ImageFolder", "(", "data_root_sketch_3", ",", "trans_maker", "(", "512", ")", ")", "\n", "\n", "\n", "\n", "net_ae", "=", "AE", "(", "nfc", "=", "NFC", ",", "nbr_cls", "=", "NBR_CLS", ")", "\n", "\n", "\n", "if", "PRETRAINED_AE_PATH", "is", "None", ":", "\n", "        ", "PRETRAINED_AE_PATH", "=", "'train_results/'", "+", "'AE_'", "+", "TRIAL_NAME", "+", "'/models/%d.pth'", "%", "ITERATION_AE", "\n", "", "else", ":", "\n", "        ", "from", "config", "import", "PRETRAINED_AE_ITER", "\n", "PRETRAINED_AE_PATH", "=", "PRETRAINED_AE_PATH", "+", "'/models/%d.pth'", "%", "PRETRAINED_AE_ITER", "\n", "\n", "", "net_ae", ".", "load_state_dicts", "(", "PRETRAINED_AE_PATH", ")", "\n", "net_ae", ".", "cuda", "(", ")", "\n", "net_ae", ".", "eval", "(", ")", "\n", "\n", "RefineGenerator", "=", "None", "\n", "if", "DATA_NAME", "==", "'celeba'", ":", "\n", "        ", "from", "models", "import", "RefineGenerator_face", "as", "RefineGenerator", "\n", "", "elif", "DATA_NAME", "==", "'art'", "or", "DATA_NAME", "==", "'shoe'", ":", "\n", "        ", "from", "models", "import", "RefineGenerator_art", "as", "RefineGenerator", "\n", "", "net_ig", "=", "RefineGenerator", "(", "nfc", "=", "NFC", ",", "im_size", "=", "IM_SIZE_GAN", ")", ".", "cuda", "(", ")", "\n", "net_id", "=", "Discriminator", "(", "nc", "=", "3", ")", ".", "cuda", "(", ")", "# we use the patch_gan, so the im_size for D should be 512 even if training image size is 1024", "\n", "\n", "if", "MULTI_GPU", ":", "\n", "        ", "net_ae", "=", "nn", ".", "DataParallel", "(", "net_ae", ")", "\n", "net_ig", "=", "nn", ".", "DataParallel", "(", "net_ig", ")", "\n", "net_id", "=", "nn", ".", "DataParallel", "(", "net_id", ")", "\n", "\n", "", "net_ig_ema", "=", "copy_G_params", "(", "net_ig", ")", "\n", "\n", "opt_ig", "=", "optim", ".", "Adam", "(", "net_ig", ".", "parameters", "(", ")", ",", "lr", "=", "2e-4", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "opt_id", "=", "optim", ".", "Adam", "(", "net_id", ".", "parameters", "(", ")", ",", "lr", "=", "2e-4", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ")", "\n", "\n", "\n", "if", "GAN_CKECKPOINT", "is", "not", "None", ":", "\n", "        ", "ckpt", "=", "torch", ".", "load", "(", "GAN_CKECKPOINT", ")", "\n", "net_ig", ".", "load_state_dict", "(", "ckpt", "[", "'ig'", "]", ")", "\n", "net_id", ".", "load_state_dict", "(", "ckpt", "[", "'id'", "]", ")", "\n", "net_ig_ema", "=", "ckpt", "[", "'ig_ema'", "]", "\n", "opt_ig", ".", "load_state_dict", "(", "ckpt", "[", "'opt_ig'", "]", ")", "\n", "opt_id", ".", "load_state_dict", "(", "ckpt", "[", "'opt_id'", "]", ")", "\n", "\n", "## create a log file", "\n", "", "losses_g_img", "=", "AverageMeter", "(", ")", "\n", "losses_d_img", "=", "AverageMeter", "(", ")", "\n", "losses_mse", "=", "AverageMeter", "(", ")", "\n", "losses_rec_s", "=", "AverageMeter", "(", ")", "\n", "\n", "losses_rec_ae", "=", "AverageMeter", "(", ")", "\n", "\n", "fixed_skt", "=", "fixed_rgb", "=", "fixed_perm", "=", "None", "\n", "\n", "fid", "=", "[", "[", "0", ",", "0", "]", "]", "\n", "\n", "for", "epoch", "in", "range", "(", "EPOCH_GAN", ")", ":", "\n", "        ", "for", "iteration", "in", "tqdm", "(", "range", "(", "10000", ")", ")", ":", "\n", "            ", "rgb_img", ",", "skt_img_1", ",", "skt_img_2", ",", "skt_img_3", "=", "next", "(", "dataloader", ")", "\n", "\n", "rgb_img", "=", "rgb_img", ".", "cuda", "(", ")", "\n", "\n", "rd", "=", "random", ".", "randint", "(", "0", ",", "3", ")", "\n", "if", "rd", "==", "0", ":", "\n", "                ", "skt_img", "=", "skt_img_1", ".", "cuda", "(", ")", "\n", "", "elif", "rd", "==", "1", ":", "\n", "                ", "skt_img", "=", "skt_img_2", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "                ", "skt_img", "=", "skt_img_3", ".", "cuda", "(", ")", "\n", "\n", "", "if", "iteration", "==", "0", ":", "\n", "                ", "fixed_skt", "=", "skt_img_3", "[", ":", "8", "]", ".", "clone", "(", ")", ".", "cuda", "(", ")", "\n", "fixed_rgb", "=", "rgb_img", "[", ":", "8", "]", ".", "clone", "(", ")", "\n", "fixed_perm", "=", "true_randperm", "(", "fixed_rgb", ".", "shape", "[", "0", "]", ",", "'cuda'", ")", "\n", "\n", "### 1. train D", "\n", "", "gimg_ae", ",", "style_feats", "=", "net_ae", "(", "skt_img", ",", "rgb_img", ")", "\n", "g_image", "=", "net_ig", "(", "gimg_ae", ",", "style_feats", ")", "\n", "\n", "pred_r", "=", "net_id", "(", "rgb_img", ")", "\n", "pred_f", "=", "net_id", "(", "g_image", ".", "detach", "(", ")", ")", "\n", "\n", "loss_d", "=", "d_hinge_loss", "(", "pred_r", ",", "pred_f", ")", "\n", "\n", "net_id", ".", "zero_grad", "(", ")", "\n", "loss_d", ".", "backward", "(", ")", "\n", "opt_id", ".", "step", "(", ")", "\n", "\n", "loss_rec_ae", "=", "F", ".", "mse_loss", "(", "gimg_ae", ",", "rgb_img", ")", "+", "F", ".", "l1_loss", "(", "gimg_ae", ",", "rgb_img", ")", "\n", "losses_rec_ae", ".", "update", "(", "loss_rec_ae", ".", "item", "(", ")", ",", "BATCH_SIZE_GAN", ")", "\n", "\n", "### 2. train G", "\n", "pred_g", "=", "net_id", "(", "g_image", ")", "\n", "loss_g", "=", "g_hinge_loss", "(", "pred_g", ")", "\n", "\n", "if", "DATA_NAME", "==", "'shoe'", ":", "\n", "                ", "loss_mse", "=", "10", "*", "(", "F", ".", "l1_loss", "(", "g_image", ",", "rgb_img", ")", "+", "F", ".", "mse_loss", "(", "g_image", ",", "rgb_img", ")", ")", "\n", "", "else", ":", "\n", "                ", "loss_mse", "=", "10", "*", "percept", "(", "F", ".", "adaptive_avg_pool2d", "(", "g_image", ",", "output_size", "=", "256", ")", ",", "F", ".", "adaptive_avg_pool2d", "(", "rgb_img", ",", "output_size", "=", "256", ")", ")", ".", "sum", "(", ")", "\n", "", "losses_mse", ".", "update", "(", "loss_mse", ".", "item", "(", ")", "/", "BATCH_SIZE_GAN", ",", "BATCH_SIZE_GAN", ")", "\n", "\n", "\n", "loss_all", "=", "loss_g", "+", "loss_mse", "\n", "\n", "if", "DATA_NAME", "==", "'shoe'", ":", "\n", "### the grey image reconstruction", "\n", "                ", "perm", "=", "true_randperm", "(", "BATCH_SIZE_GAN", ")", "\n", "img_ae_perm", ",", "style_feats_perm", "=", "net_ae", "(", "skt_img", ",", "rgb_img", "[", "perm", "]", ")", "\n", "\n", "gimg_grey", "=", "net_ig", "(", "img_ae_perm", ",", "style_feats_perm", ")", "\n", "gimg_grey", "=", "gimg_grey", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "real_grey", "=", "rgb_img", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "loss_rec_grey", "=", "F", ".", "mse_loss", "(", "gimg_grey", ",", "real_grey", ")", "\n", "loss_all", "+=", "10", "*", "loss_rec_grey", "\n", "\n", "", "net_ig", ".", "zero_grad", "(", ")", "\n", "loss_all", ".", "backward", "(", ")", "\n", "opt_ig", ".", "step", "(", ")", "\n", "\n", "for", "p", ",", "avg_p", "in", "zip", "(", "net_ig", ".", "parameters", "(", ")", ",", "net_ig_ema", ")", ":", "\n", "                ", "avg_p", ".", "mul_", "(", "0.999", ")", ".", "add_", "(", "p", ".", "data", ",", "alpha", "=", "0.001", ")", "\n", "\n", "### 3. logging", "\n", "", "losses_g_img", ".", "update", "(", "pred_g", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "BATCH_SIZE_GAN", ")", "\n", "losses_d_img", ".", "update", "(", "pred_r", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "BATCH_SIZE_GAN", ")", "\n", "\n", "\n", "\n", "if", "iteration", "%", "SAVE_IMAGE_INTERVAL", "==", "0", ":", "#show the current images", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "                    ", "backup_para_g", "=", "copy_G_params", "(", "net_ig", ")", "\n", "load_params", "(", "net_ig", ",", "net_ig_ema", ")", "\n", "\n", "gimg_ae", ",", "style_feats", "=", "net_ae", "(", "fixed_skt", ",", "fixed_rgb", ")", "\n", "gmatch", "=", "net_ig", "(", "gimg_ae", ",", "style_feats", ")", "\n", "\n", "\n", "\n", "gimg_ae_perm", ",", "style_feats", "=", "net_ae", "(", "fixed_skt", ",", "fixed_rgb", "[", "fixed_perm", "]", ")", "\n", "gmismatch", "=", "net_ig", "(", "gimg_ae_perm", ",", "style_feats", ")", "\n", "\n", "gimg", "=", "torch", ".", "cat", "(", "[", "F", ".", "interpolate", "(", "fixed_rgb", ",", "IM_SIZE_GAN", ")", ",", "\n", "F", ".", "interpolate", "(", "fixed_skt", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", ",", "IM_SIZE_GAN", ")", ",", "\n", "gmatch", ",", "\n", "F", ".", "interpolate", "(", "gimg_ae", ",", "IM_SIZE_GAN", ")", ",", "\n", "gmismatch", ",", "\n", "F", ".", "interpolate", "(", "gimg_ae_perm", ",", "IM_SIZE_GAN", ")", "]", ")", "\n", "\n", "vutils", ".", "save_image", "(", "gimg", ",", "f'{saved_image_folder}/img_iter_{epoch}_{iteration}.jpg'", ",", "normalize", "=", "True", ",", "range", "=", "(", "-", "1", ",", "1", ")", ")", "\n", "del", "gimg", "\n", "\n", "make_matrix", "(", "dataset_rgb", ",", "dataset_skt", ",", "net_ae", ",", "net_ig", ",", "5", ",", "f'{saved_image_folder}/img_iter_{epoch}_{iteration}_matrix.jpg'", ")", "\n", "\n", "load_params", "(", "net_ig", ",", "backup_para_g", ")", "\n", "\n", "", "", "if", "iteration", "%", "LOG_INTERVAL", "==", "0", ":", "\n", "                ", "log_msg", "=", "'Iter: [{0}/{1}] G: {losses_g_img.avg:.4f}  D: {losses_d_img.avg:.4f}  MSE: {losses_mse.avg:.4f}  Rec: {losses_rec_s.avg:.5f}  FID: {fid:.4f}'", ".", "format", "(", "epoch", ",", "\n", "iteration", ",", "losses_g_img", "=", "losses_g_img", ",", "losses_d_img", "=", "losses_d_img", ",", "losses_mse", "=", "losses_mse", ",", "losses_rec_s", "=", "losses_rec_s", ",", "fid", "=", "fid", "[", "-", "1", "]", "[", "0", "]", ")", "\n", "\n", "print", "(", "log_msg", ")", "\n", "print", "(", "'%.5f'", "%", "(", "losses_rec_ae", ".", "avg", ")", ")", "\n", "\n", "if", "log_file_path", "is", "not", "None", ":", "\n", "                    ", "log_file", "=", "open", "(", "log_file_path", ",", "'a'", ")", "\n", "log_file", ".", "write", "(", "log_msg", "+", "'\\n'", ")", "\n", "log_file", ".", "close", "(", ")", "\n", "\n", "", "losses_g_img", ".", "reset", "(", ")", "\n", "losses_d_img", ".", "reset", "(", ")", "\n", "losses_mse", ".", "reset", "(", ")", "\n", "losses_rec_s", ".", "reset", "(", ")", "\n", "losses_rec_ae", ".", "reset", "(", ")", "\n", "\n", "", "if", "iteration", "%", "SAVE_MODEL_INTERVAL", "==", "0", "or", "iteration", "+", "1", "==", "10000", ":", "\n", "                ", "print", "(", "'Saving history model'", ")", "\n", "torch", ".", "save", "(", "{", "'ig'", ":", "net_ig", ".", "state_dict", "(", ")", ",", "\n", "'id'", ":", "net_id", ".", "state_dict", "(", ")", ",", "\n", "'ae'", ":", "net_ae", ".", "state_dict", "(", ")", ",", "\n", "'ig_ema'", ":", "net_ig_ema", ",", "\n", "'opt_ig'", ":", "opt_ig", ".", "state_dict", "(", ")", ",", "\n", "'opt_id'", ":", "opt_id", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "'%s/%d.pth'", "%", "(", "saved_model_folder", ",", "epoch", ")", ")", "\n", "\n", "", "if", "iteration", "%", "FID_INTERVAL", "==", "0", "and", "iteration", ">", "1", ":", "\n", "                ", "print", "(", "\"calculating FID ...\"", ")", "\n", "fid_batch_images", "=", "FID_BATCH_NBR", "\n", "if", "real_features", "is", "None", ":", "\n", "                    ", "if", "os", ".", "path", ".", "exists", "(", "'%s_fid_feats.npy'", "%", "(", "DATA_NAME", ")", ")", ":", "\n", "                        ", "real_features", "=", "pickle", ".", "load", "(", "open", "(", "'%s_fid_feats.npy'", "%", "(", "DATA_NAME", ")", ",", "'rb'", ")", ")", "\n", "", "else", ":", "\n", "                        ", "real_features", "=", "extract_feature_from_generator_fn", "(", "\n", "real_image_loader", "(", "dataloader", ",", "n_batches", "=", "fid_batch_images", ")", ",", "inception", ")", "\n", "real_mean", "=", "np", ".", "mean", "(", "real_features", ",", "0", ")", "\n", "real_cov", "=", "np", ".", "cov", "(", "real_features", ",", "rowvar", "=", "False", ")", "\n", "pickle", ".", "dump", "(", "{", "'feats'", ":", "real_features", ",", "'mean'", ":", "real_mean", ",", "'cov'", ":", "real_cov", "}", ",", "open", "(", "'%s_fid_feats.npy'", "%", "(", "DATA_NAME", ")", ",", "'wb'", ")", ")", "\n", "real_features", "=", "pickle", ".", "load", "(", "open", "(", "'%s_fid_feats.npy'", "%", "(", "DATA_NAME", ")", ",", "'rb'", ")", ")", "\n", "\n", "", "", "sample_features", "=", "extract_feature_from_generator_fn", "(", "image_generator", "(", "dataset", ",", "net_ae", ",", "net_ig", ",", "n_batches", "=", "fid_batch_images", ")", ",", "inception", ",", "total", "=", "fid_batch_images", ")", "\n", "cur_fid", "=", "calc_fid", "(", "sample_features", ",", "real_mean", "=", "real_features", "[", "'mean'", "]", ",", "real_cov", "=", "real_features", "[", "'cov'", "]", ")", "\n", "sample_features_perm", "=", "extract_feature_from_generator_fn", "(", "image_generator_perm", "(", "dataset", ",", "net_ae", ",", "net_ig", ",", "n_batches", "=", "fid_batch_images", ")", ",", "inception", ",", "total", "=", "fid_batch_images", ")", "\n", "cur_fid_perm", "=", "calc_fid", "(", "sample_features_perm", ",", "real_mean", "=", "real_features", "[", "'mean'", "]", ",", "real_cov", "=", "real_features", "[", "'cov'", "]", ")", "\n", "\n", "fid", ".", "append", "(", "[", "cur_fid", ",", "cur_fid_perm", "]", ")", "\n", "print", "(", "'fid:'", ",", "fid", ")", "\n", "if", "log_file_path", "is", "not", "None", ":", "\n", "                    ", "log_file", "=", "open", "(", "log_file_path", ",", "'a'", ")", "\n", "log_msg", "=", "'fid: %.5f, %.5f'", "%", "(", "fid", "[", "-", "1", "]", "[", "0", "]", ",", "fid", "[", "-", "1", "]", "[", "1", "]", ")", "\n", "log_file", ".", "write", "(", "log_msg", "+", "'\\n'", ")", "\n", "log_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.InceptionV3.__init__": [[43, 139], ["torch.Module.__init__", "sorted", "max", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "benchmark.InceptionV3.blocks.append", "benchmark.InceptionV3.parameters", "benchmark.fid_inception_v3", "torchvision.models.inception_v3", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "benchmark.InceptionV3.blocks.append", "benchmark.InceptionV3.blocks.append", "benchmark.InceptionV3.blocks.append", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.fid_inception_v3"], ["def", "__init__", "(", "self", ",", "\n", "output_blocks", "=", "[", "DEFAULT_BLOCK_INDEX", "]", ",", "\n", "resize_input", "=", "True", ",", "\n", "normalize_input", "=", "True", ",", "\n", "requires_grad", "=", "False", ",", "\n", "use_fid_inception", "=", "True", ")", ":", "\n", "        ", "\"\"\"Build pretrained InceptionV3\n        Parameters\n        ----------\n        output_blocks : list of int\n            Indices of blocks to return features of. Possible values are:\n                - 0: corresponds to output of first max pooling\n                - 1: corresponds to output of second max pooling\n                - 2: corresponds to output which is fed to aux classifier\n                - 3: corresponds to output of final average pooling\n        resize_input : bool\n            If true, bilinearly resizes input to width and height 299 before\n            feeding input to model. As the network without fully connected\n            layers is fully convolutional, it should be able to handle inputs\n            of arbitrary size, so resizing might not be strictly needed\n        normalize_input : bool\n            If true, scales the input from range (0, 1) to the range the\n            pretrained Inception network expects, namely (-1, 1)\n        requires_grad : bool\n            If true, parameters of the model require gradients. Possibly useful\n            for finetuning the network\n        use_fid_inception : bool\n            If true, uses the pretrained Inception model used in Tensorflow's\n            FID implementation. If false, uses the pretrained Inception model\n            available in torchvision. The FID Inception model has different\n            weights and a slightly different structure from torchvision's\n            Inception model. If you want to compute FID scores, you are\n            strongly advised to set this parameter to true to get comparable\n            results.\n        \"\"\"", "\n", "super", "(", "InceptionV3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "resize_input", "=", "resize_input", "\n", "self", ".", "normalize_input", "=", "normalize_input", "\n", "self", ".", "output_blocks", "=", "sorted", "(", "output_blocks", ")", "\n", "self", ".", "last_needed_block", "=", "max", "(", "output_blocks", ")", "\n", "\n", "assert", "self", ".", "last_needed_block", "<=", "3", ",", "'Last possible output block index is 3'", "\n", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "if", "use_fid_inception", ":", "\n", "            ", "inception", "=", "fid_inception_v3", "(", ")", "\n", "", "else", ":", "\n", "            ", "inception", "=", "models", ".", "inception_v3", "(", "pretrained", "=", "True", ")", "\n", "\n", "# Block 0: input to maxpool1", "\n", "", "block0", "=", "[", "\n", "inception", ".", "Conv2d_1a_3x3", ",", "\n", "inception", ".", "Conv2d_2a_3x3", ",", "\n", "inception", ".", "Conv2d_2b_3x3", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block0", ")", ")", "\n", "\n", "# Block 1: maxpool1 to maxpool2", "\n", "if", "self", ".", "last_needed_block", ">=", "1", ":", "\n", "            ", "block1", "=", "[", "\n", "inception", ".", "Conv2d_3b_1x1", ",", "\n", "inception", ".", "Conv2d_4a_3x3", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block1", ")", ")", "\n", "\n", "# Block 2: maxpool2 to aux classifier", "\n", "", "if", "self", ".", "last_needed_block", ">=", "2", ":", "\n", "            ", "block2", "=", "[", "\n", "inception", ".", "Mixed_5b", ",", "\n", "inception", ".", "Mixed_5c", ",", "\n", "inception", ".", "Mixed_5d", ",", "\n", "inception", ".", "Mixed_6a", ",", "\n", "inception", ".", "Mixed_6b", ",", "\n", "inception", ".", "Mixed_6c", ",", "\n", "inception", ".", "Mixed_6d", ",", "\n", "inception", ".", "Mixed_6e", ",", "\n", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block2", ")", ")", "\n", "\n", "# Block 3: aux classifier to final avgpool", "\n", "", "if", "self", ".", "last_needed_block", ">=", "3", ":", "\n", "            ", "block3", "=", "[", "\n", "inception", ".", "Mixed_7a", ",", "\n", "inception", ".", "Mixed_7b", ",", "\n", "inception", ".", "Mixed_7c", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "(", "1", ",", "1", ")", ")", "\n", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block3", ")", ")", "\n", "\n", "", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "requires_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.InceptionV3.forward": [[140, 173], ["enumerate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "block", "outp.append"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "\"\"\"Get Inception feature maps\n        Parameters\n        ----------\n        inp : torch.autograd.Variable\n            Input tensor of shape Bx3xHxW. Values are expected to be in\n            range (0, 1)\n        Returns\n        -------\n        List of torch.autograd.Variable, corresponding to the selected output\n        block, sorted ascending by index\n        \"\"\"", "\n", "outp", "=", "[", "]", "\n", "x", "=", "inp", "\n", "\n", "if", "self", ".", "resize_input", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "\n", "size", "=", "(", "299", ",", "299", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "normalize_input", ":", "\n", "            ", "x", "=", "2", "*", "x", "-", "1", "# Scale from range (0, 1) to range (-1, 1)", "\n", "\n", "", "for", "idx", ",", "block", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "if", "idx", "in", "self", ".", "output_blocks", ":", "\n", "                ", "outp", ".", "append", "(", "x", ")", "\n", "\n", "", "if", "idx", "==", "self", ".", "last_needed_block", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "outp", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.FIDInceptionA.__init__": [[202, 204], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "pool_features", ")", ":", "\n", "        ", "super", "(", "FIDInceptionA", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "pool_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.FIDInceptionA.forward": [[205, 223], ["benchmark.FIDInceptionA.branch1x1", "benchmark.FIDInceptionA.branch5x5_1", "benchmark.FIDInceptionA.branch5x5_2", "benchmark.FIDInceptionA.branch3x3dbl_1", "benchmark.FIDInceptionA.branch3x3dbl_2", "benchmark.FIDInceptionA.branch3x3dbl_3", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "benchmark.FIDInceptionA.branch_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch5x5", "=", "self", ".", "branch5x5_1", "(", "x", ")", "\n", "branch5x5", "=", "self", ".", "branch5x5_2", "(", "branch5x5", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_3", "(", "branch3x3dbl", ")", "\n", "\n", "# Patch: Tensorflow's average pool does not use the padded zero's in", "\n", "# its average calculation", "\n", "branch_pool", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "count_include_pad", "=", "False", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch5x5", ",", "branch3x3dbl", ",", "branch_pool", "]", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.FIDInceptionC.__init__": [[227, 229], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "channels_7x7", ")", ":", "\n", "        ", "super", "(", "FIDInceptionC", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "channels_7x7", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.FIDInceptionC.forward": [[230, 251], ["benchmark.FIDInceptionC.branch1x1", "benchmark.FIDInceptionC.branch7x7_1", "benchmark.FIDInceptionC.branch7x7_2", "benchmark.FIDInceptionC.branch7x7_3", "benchmark.FIDInceptionC.branch7x7dbl_1", "benchmark.FIDInceptionC.branch7x7dbl_2", "benchmark.FIDInceptionC.branch7x7dbl_3", "benchmark.FIDInceptionC.branch7x7dbl_4", "benchmark.FIDInceptionC.branch7x7dbl_5", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "benchmark.FIDInceptionC.branch_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch7x7", "=", "self", ".", "branch7x7_1", "(", "x", ")", "\n", "branch7x7", "=", "self", ".", "branch7x7_2", "(", "branch7x7", ")", "\n", "branch7x7", "=", "self", ".", "branch7x7_3", "(", "branch7x7", ")", "\n", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_1", "(", "x", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_2", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_3", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_4", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_5", "(", "branch7x7dbl", ")", "\n", "\n", "# Patch: Tensorflow's average pool does not use the padded zero's in", "\n", "# its average calculation", "\n", "branch_pool", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "count_include_pad", "=", "False", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch7x7", ",", "branch7x7dbl", ",", "branch_pool", "]", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.FIDInceptionE_1.__init__": [[255, 257], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", "FIDInceptionE_1", ",", "self", ")", ".", "__init__", "(", "in_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.FIDInceptionE_1.forward": [[258, 284], ["benchmark.FIDInceptionE_1.branch1x1", "benchmark.FIDInceptionE_1.branch3x3_1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "benchmark.FIDInceptionE_1.branch3x3dbl_1", "benchmark.FIDInceptionE_1.branch3x3dbl_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "benchmark.FIDInceptionE_1.branch_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "benchmark.FIDInceptionE_1.branch3x3_2a", "benchmark.FIDInceptionE_1.branch3x3_2b", "benchmark.FIDInceptionE_1.branch3x3dbl_3a", "benchmark.FIDInceptionE_1.branch3x3dbl_3b"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch3x3", "=", "self", ".", "branch3x3_1", "(", "x", ")", "\n", "branch3x3", "=", "[", "\n", "self", ".", "branch3x3_2a", "(", "branch3x3", ")", ",", "\n", "self", ".", "branch3x3_2b", "(", "branch3x3", ")", ",", "\n", "]", "\n", "branch3x3", "=", "torch", ".", "cat", "(", "branch3x3", ",", "1", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "[", "\n", "self", ".", "branch3x3dbl_3a", "(", "branch3x3dbl", ")", ",", "\n", "self", ".", "branch3x3dbl_3b", "(", "branch3x3dbl", ")", ",", "\n", "]", "\n", "branch3x3dbl", "=", "torch", ".", "cat", "(", "branch3x3dbl", ",", "1", ")", "\n", "\n", "# Patch: Tensorflow's average pool does not use the padded zero's in", "\n", "# its average calculation", "\n", "branch_pool", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "count_include_pad", "=", "False", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch3x3", ",", "branch3x3dbl", ",", "branch_pool", "]", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.FIDInceptionE_2.__init__": [[288, 290], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", "FIDInceptionE_2", ",", "self", ")", ".", "__init__", "(", "in_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.FIDInceptionE_2.forward": [[291, 318], ["benchmark.FIDInceptionE_2.branch1x1", "benchmark.FIDInceptionE_2.branch3x3_1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "benchmark.FIDInceptionE_2.branch3x3dbl_1", "benchmark.FIDInceptionE_2.branch3x3dbl_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "benchmark.FIDInceptionE_2.branch_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "benchmark.FIDInceptionE_2.branch3x3_2a", "benchmark.FIDInceptionE_2.branch3x3_2b", "benchmark.FIDInceptionE_2.branch3x3dbl_3a", "benchmark.FIDInceptionE_2.branch3x3dbl_3b"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch3x3", "=", "self", ".", "branch3x3_1", "(", "x", ")", "\n", "branch3x3", "=", "[", "\n", "self", ".", "branch3x3_2a", "(", "branch3x3", ")", ",", "\n", "self", ".", "branch3x3_2b", "(", "branch3x3", ")", ",", "\n", "]", "\n", "branch3x3", "=", "torch", ".", "cat", "(", "branch3x3", ",", "1", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "[", "\n", "self", ".", "branch3x3dbl_3a", "(", "branch3x3dbl", ")", ",", "\n", "self", ".", "branch3x3dbl_3b", "(", "branch3x3dbl", ")", ",", "\n", "]", "\n", "branch3x3dbl", "=", "torch", ".", "cat", "(", "branch3x3dbl", ",", "1", ")", "\n", "\n", "# Patch: The FID Inception model uses max pooling instead of average", "\n", "# pooling. This is likely an error in this specific Inception", "\n", "# implementation, as other Inception models use average pooling here", "\n", "# (which matches the description in the paper).", "\n", "branch_pool", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch3x3", ",", "branch3x3dbl", ",", "branch_pool", "]", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.Inception3Feature.forward": [[321, 351], ["benchmark.Inception3Feature.Conv2d_1a_3x3", "benchmark.Inception3Feature.Conv2d_2a_3x3", "benchmark.Inception3Feature.Conv2d_2b_3x3", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "benchmark.Inception3Feature.Conv2d_3b_1x1", "benchmark.Inception3Feature.Conv2d_4a_3x3", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "benchmark.Inception3Feature.Mixed_5b", "benchmark.Inception3Feature.Mixed_5c", "benchmark.Inception3Feature.Mixed_5d", "benchmark.Inception3Feature.Mixed_6a", "benchmark.Inception3Feature.Mixed_6b", "benchmark.Inception3Feature.Mixed_6c", "benchmark.Inception3Feature.Mixed_6d", "benchmark.Inception3Feature.Mixed_6e", "benchmark.Inception3Feature.Mixed_7a", "benchmark.Inception3Feature.Mixed_7b", "benchmark.Inception3Feature.Mixed_7c", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.interpolate.view", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "x", ".", "shape", "[", "2", "]", "!=", "299", "or", "x", ".", "shape", "[", "3", "]", "!=", "299", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "(", "299", ",", "299", ")", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "", "x", "=", "self", ".", "Conv2d_1a_3x3", "(", "x", ")", "# 299 x 299 x 3", "\n", "x", "=", "self", ".", "Conv2d_2a_3x3", "(", "x", ")", "# 149 x 149 x 32", "\n", "x", "=", "self", ".", "Conv2d_2b_3x3", "(", "x", ")", "# 147 x 147 x 32", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "# 147 x 147 x 64", "\n", "\n", "x", "=", "self", ".", "Conv2d_3b_1x1", "(", "x", ")", "# 73 x 73 x 64", "\n", "x", "=", "self", ".", "Conv2d_4a_3x3", "(", "x", ")", "# 73 x 73 x 80", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "# 71 x 71 x 192", "\n", "\n", "x", "=", "self", ".", "Mixed_5b", "(", "x", ")", "# 35 x 35 x 192", "\n", "x", "=", "self", ".", "Mixed_5c", "(", "x", ")", "# 35 x 35 x 256", "\n", "x", "=", "self", ".", "Mixed_5d", "(", "x", ")", "# 35 x 35 x 288", "\n", "\n", "x", "=", "self", ".", "Mixed_6a", "(", "x", ")", "# 35 x 35 x 288", "\n", "x", "=", "self", ".", "Mixed_6b", "(", "x", ")", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_6c", "(", "x", ")", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_6d", "(", "x", ")", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_6e", "(", "x", ")", "# 17 x 17 x 768", "\n", "\n", "x", "=", "self", ".", "Mixed_7a", "(", "x", ")", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_7b", "(", "x", ")", "# 8 x 8 x 1280", "\n", "x", "=", "self", ".", "Mixed_7c", "(", "x", ")", "# 8 x 8 x 2048", "\n", "\n", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "8", ")", "# 8 x 8 x 2048", "\n", "\n", "return", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ")", "# 1 x 1 x 2048", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.fid_inception_v3": [[175, 198], ["torchvision.models.inception_v3", "benchmark.FIDInceptionA", "benchmark.FIDInceptionA", "benchmark.FIDInceptionA", "benchmark.FIDInceptionC", "benchmark.FIDInceptionC", "benchmark.FIDInceptionC", "benchmark.FIDInceptionC", "benchmark.FIDInceptionE_1", "benchmark.FIDInceptionE_2", "load_state_dict_from_url", "models.inception_v3.load_state_dict"], "function", ["None"], ["", "", "def", "fid_inception_v3", "(", ")", ":", "\n", "    ", "\"\"\"Build pretrained Inception model for FID computation\n    The Inception model for FID computation uses a different set of weights\n    and has a slightly different structure than torchvision's Inception.\n    This method first constructs torchvision's Inception and then patches the\n    necessary parts that are different in the FID Inception model.\n    \"\"\"", "\n", "inception", "=", "models", ".", "inception_v3", "(", "num_classes", "=", "1008", ",", "\n", "aux_logits", "=", "False", ",", "\n", "pretrained", "=", "False", ")", "\n", "inception", ".", "Mixed_5b", "=", "FIDInceptionA", "(", "192", ",", "pool_features", "=", "32", ")", "\n", "inception", ".", "Mixed_5c", "=", "FIDInceptionA", "(", "256", ",", "pool_features", "=", "64", ")", "\n", "inception", ".", "Mixed_5d", "=", "FIDInceptionA", "(", "288", ",", "pool_features", "=", "64", ")", "\n", "inception", ".", "Mixed_6b", "=", "FIDInceptionC", "(", "768", ",", "channels_7x7", "=", "128", ")", "\n", "inception", ".", "Mixed_6c", "=", "FIDInceptionC", "(", "768", ",", "channels_7x7", "=", "160", ")", "\n", "inception", ".", "Mixed_6d", "=", "FIDInceptionC", "(", "768", ",", "channels_7x7", "=", "160", ")", "\n", "inception", ".", "Mixed_6e", "=", "FIDInceptionC", "(", "768", ",", "channels_7x7", "=", "192", ")", "\n", "inception", ".", "Mixed_7b", "=", "FIDInceptionE_1", "(", "1280", ")", "\n", "inception", ".", "Mixed_7c", "=", "FIDInceptionE_2", "(", "2048", ")", "\n", "\n", "state_dict", "=", "load_state_dict_from_url", "(", "FID_WEIGHTS_URL", ",", "progress", "=", "True", ")", "\n", "inception", ".", "load_state_dict", "(", "state_dict", ")", "\n", "return", "inception", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.load_patched_inception_v3": [[353, 360], ["benchmark.InceptionV3"], "function", ["None"], ["", "", "def", "load_patched_inception_v3", "(", ")", ":", "\n", "# inception = inception_v3(pretrained=True)", "\n", "# inception_feat = Inception3Feature()", "\n", "# inception_feat.load_state_dict(inception.state_dict())", "\n", "    ", "inception_feat", "=", "InceptionV3", "(", "[", "3", "]", ",", "normalize_input", "=", "False", ")", "\n", "\n", "return", "inception_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.extract_features": [[362, 376], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "torch.cat", "torch.cat", "torch.cat", "img.to.to", "[].view", "feature_list.append", "[].view.to", "inception"], "function", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "extract_features", "(", "loader", ",", "inception", ",", "device", ")", ":", "\n", "    ", "pbar", "=", "tqdm", "(", "loader", ")", "\n", "\n", "feature_list", "=", "[", "]", "\n", "\n", "for", "img", "in", "pbar", ":", "\n", "        ", "img", "=", "img", ".", "to", "(", "device", ")", "\n", "feature", "=", "inception", "(", "img", ")", "[", "0", "]", ".", "view", "(", "img", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "feature_list", ".", "append", "(", "feature", ".", "to", "(", "'cpu'", ")", ")", "\n", "\n", "", "features", "=", "torch", ".", "cat", "(", "feature_list", ",", "0", ")", "\n", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.extract_feature_from_samples": [[379, 395], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "torch.cat", "torch.cat", "torch.cat", "torch.randn", "torch.randn", "torch.randn", "g", "[].view", "torch.cat.append", "[].view.to", "inception"], "function", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "extract_feature_from_samples", "(", "generator", ",", "inception", ",", "device", "=", "'cuda'", ")", ":", "\n", "    ", "n_batch", "=", "n_sample", "//", "batch_size", "\n", "resid", "=", "n_sample", "-", "(", "n_batch", "*", "batch_size", ")", "\n", "batch_sizes", "=", "[", "batch_size", "]", "*", "n_batch", "+", "[", "resid", "]", "\n", "features", "=", "[", "]", "\n", "\n", "for", "batch", "in", "tqdm", "(", "batch_sizes", ")", ":", "\n", "        ", "latent", "=", "torch", ".", "randn", "(", "batch", ",", "512", ",", "device", "=", "device", ")", "\n", "img", ",", "_", "=", "g", "(", "[", "latent", "]", ",", "truncation", "=", "truncation", ",", "truncation_latent", "=", "truncation_latent", ")", "\n", "feat", "=", "inception", "(", "img", ")", "[", "0", "]", ".", "view", "(", "img", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "features", ".", "append", "(", "feat", ".", "to", "(", "'cpu'", ")", ")", "\n", "\n", "", "features", "=", "torch", ".", "cat", "(", "features", ",", "0", ")", "\n", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.extract_feature_from_generator_fn": [[397, 409], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach", "torch.cat().detach.numpy", "[].view", "torch.cat().detach.append", "torch.cat", "torch.cat", "torch.cat", "[].view.to", "inception"], "function", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "extract_feature_from_generator_fn", "(", "generator_fn", ",", "inception", ",", "device", "=", "'cuda'", ",", "total", "=", "1000", ")", ":", "\n", "    ", "features", "=", "[", "]", "\n", "\n", "for", "batch", "in", "tqdm", "(", "generator_fn", ",", "total", "=", "total", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "feat", "=", "inception", "(", "batch", ")", "[", "0", "]", ".", "view", "(", "batch", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "features", ".", "append", "(", "feat", ".", "to", "(", "'cpu'", ")", ")", "\n", "", "except", ":", "\n", "            ", "break", "\n", "", "", "features", "=", "torch", ".", "cat", "(", "features", ",", "0", ")", ".", "detach", "(", ")", "\n", "return", "features", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.calc_fid": [[411, 442], ["numpy.mean", "numpy.cov", "scipy.linalg.sqrtm", "numpy.iscomplexobj", "numpy.mean", "numpy.cov", "numpy.isfinite().all", "print", "scipy.linalg.sqrtm", "numpy.eye", "numpy.allclose", "numpy.max", "ValueError", "numpy.trace", "numpy.trace", "numpy.trace", "numpy.isfinite", "numpy.abs", "numpy.diagonal"], "function", ["None"], ["", "def", "calc_fid", "(", "sample_features", ",", "real_features", "=", "None", ",", "real_mean", "=", "None", ",", "real_cov", "=", "None", ",", "eps", "=", "1e-6", ")", ":", "\n", "    ", "sample_mean", "=", "np", ".", "mean", "(", "sample_features", ",", "0", ")", "\n", "sample_cov", "=", "np", ".", "cov", "(", "sample_features", ",", "rowvar", "=", "False", ")", "\n", "\n", "if", "real_features", "is", "not", "None", ":", "\n", "        ", "real_mean", "=", "np", ".", "mean", "(", "real_features", ",", "0", ")", "\n", "real_cov", "=", "np", ".", "cov", "(", "real_features", ",", "rowvar", "=", "False", ")", "\n", "\n", "", "cov_sqrt", ",", "_", "=", "linalg", ".", "sqrtm", "(", "sample_cov", "@", "real_cov", ",", "disp", "=", "False", ")", "\n", "\n", "if", "not", "np", ".", "isfinite", "(", "cov_sqrt", ")", ".", "all", "(", ")", ":", "\n", "        ", "print", "(", "'product of cov matrices is singular'", ")", "\n", "offset", "=", "np", ".", "eye", "(", "sample_cov", ".", "shape", "[", "0", "]", ")", "*", "eps", "\n", "cov_sqrt", "=", "linalg", ".", "sqrtm", "(", "(", "sample_cov", "+", "offset", ")", "@", "(", "real_cov", "+", "offset", ")", ")", "\n", "\n", "", "if", "np", ".", "iscomplexobj", "(", "cov_sqrt", ")", ":", "\n", "        ", "if", "not", "np", ".", "allclose", "(", "np", ".", "diagonal", "(", "cov_sqrt", ")", ".", "imag", ",", "0", ",", "atol", "=", "1e-3", ")", ":", "\n", "            ", "m", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "cov_sqrt", ".", "imag", ")", ")", "\n", "\n", "raise", "ValueError", "(", "f'Imaginary component {m}'", ")", "\n", "\n", "", "cov_sqrt", "=", "cov_sqrt", ".", "real", "\n", "\n", "", "mean_diff", "=", "sample_mean", "-", "real_mean", "\n", "mean_norm", "=", "mean_diff", "@", "mean_diff", "\n", "\n", "trace", "=", "np", ".", "trace", "(", "sample_cov", ")", "+", "np", ".", "trace", "(", "real_cov", ")", "-", "2", "*", "np", ".", "trace", "(", "cov_sqrt", ")", "\n", "\n", "fid", "=", "mean_norm", "+", "trace", "\n", "\n", "return", "fid", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.real_image_loader": [[443, 451], ["next", "torchvision.utils.save_image", "rgb_img.cuda"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image"], ["", "def", "real_image_loader", "(", "dataloader", ",", "n_batches", "=", "10", ")", ":", "\n", "    ", "counter", "=", "0", "\n", "while", "counter", "<", "n_batches", ":", "\n", "        ", "counter", "+=", "1", "\n", "rgb_img", "=", "next", "(", "dataloader", ")", "[", "0", "]", "\n", "if", "counter", "==", "1", ":", "\n", "            ", "vutils", ".", "save_image", "(", "0.5", "*", "(", "rgb_img", "+", "1", ")", ",", "'tmp_real.jpg'", ")", "\n", "", "yield", "rgb_img", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.image_generator": [[455, 471], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "iter", "min", "torch.utils.data.DataLoader", "next", "torch.interpolate().cuda", "torch.interpolate().cuda", "net_ae", "net_ig", "torchvision.utils.save_image", "datasets.InfiniteSamplerWrapper", "len", "torch.interpolate", "torch.interpolate"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image"], ["", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "image_generator", "(", "dataset", ",", "net_ae", ",", "net_ig", ",", "BATCH_SIZE", "=", "8", ",", "n_batches", "=", "500", ")", ":", "\n", "    ", "counter", "=", "0", "\n", "dataloader", "=", "iter", "(", "DataLoader", "(", "dataset", ",", "BATCH_SIZE", ",", "sampler", "=", "InfiniteSamplerWrapper", "(", "dataset", ")", ",", "num_workers", "=", "4", ",", "pin_memory", "=", "False", ")", ")", "\n", "n_batches", "=", "min", "(", "n_batches", ",", "len", "(", "dataset", ")", "//", "BATCH_SIZE", "-", "1", ")", "\n", "while", "counter", "<", "n_batches", ":", "\n", "        ", "counter", "+=", "1", "\n", "rgb_img", ",", "_", ",", "_", ",", "skt_img", "=", "next", "(", "dataloader", ")", "\n", "rgb_img", "=", "F", ".", "interpolate", "(", "rgb_img", ",", "size", "=", "512", ")", ".", "cuda", "(", ")", "\n", "skt_img", "=", "F", ".", "interpolate", "(", "skt_img", ",", "size", "=", "512", ")", ".", "cuda", "(", ")", "\n", "\n", "gimg_ae", ",", "style_feat", "=", "net_ae", "(", "skt_img", ",", "rgb_img", ")", "\n", "g_image", "=", "net_ig", "(", "gimg_ae", ",", "style_feat", ")", "\n", "if", "counter", "==", "1", ":", "\n", "            ", "vutils", ".", "save_image", "(", "0.5", "*", "(", "g_image", "+", "1", ")", ",", "'tmp.jpg'", ")", "\n", "", "yield", "g_image", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.benchmark.image_generator_perm": [[473, 491], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "iter", "min", "torch.utils.data.DataLoader", "next", "torch.interpolate().cuda", "torch.interpolate().cuda", "utils.true_randperm", "net_ae", "net_ig", "torchvision.utils.save_image", "len", "torch.interpolate", "torch.interpolate"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.true_randperm", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image"], ["", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "image_generator_perm", "(", "dataset", ",", "net_ae", ",", "net_ig", ",", "BATCH_SIZE", "=", "8", ",", "n_batches", "=", "500", ")", ":", "\n", "    ", "counter", "=", "0", "\n", "dataloader", "=", "iter", "(", "DataLoader", "(", "dataset", ",", "BATCH_SIZE", ",", "shuffle", "=", "False", ",", "num_workers", "=", "4", ",", "pin_memory", "=", "False", ")", ")", "\n", "n_batches", "=", "min", "(", "n_batches", ",", "len", "(", "dataset", ")", "//", "BATCH_SIZE", "-", "1", ")", "\n", "while", "counter", "<", "n_batches", ":", "\n", "        ", "counter", "+=", "1", "\n", "rgb_img", ",", "_", ",", "_", ",", "skt_img", "=", "next", "(", "dataloader", ")", "\n", "rgb_img", "=", "F", ".", "interpolate", "(", "rgb_img", ",", "size", "=", "512", ")", ".", "cuda", "(", ")", "\n", "skt_img", "=", "F", ".", "interpolate", "(", "skt_img", ",", "size", "=", "512", ")", ".", "cuda", "(", ")", "\n", "\n", "perm", "=", "true_randperm", "(", "rgb_img", ".", "shape", "[", "0", "]", ",", "device", "=", "rgb_img", ".", "device", ")", "\n", "\n", "gimg_ae", ",", "style_feat", "=", "net_ae", "(", "skt_img", ",", "rgb_img", "[", "perm", "]", ")", "\n", "g_image", "=", "net_ig", "(", "gimg_ae", ",", "style_feat", ")", "\n", "if", "counter", "==", "1", ":", "\n", "            ", "vutils", ".", "save_image", "(", "0.5", "*", "(", "g_image", "+", "1", ")", ",", "'tmp.jpg'", ")", "\n", "", "yield", "g_image", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.__init__": [[20, 22], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.reset": [[23, 28], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.AverageMeter.update": [[29, 34], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.d_hinge_loss": [[7, 12], ["torch.relu", "torch.relu", "F.relu.mean", "F.relu.mean"], "function", ["None"], ["def", "d_hinge_loss", "(", "real_pred", ",", "fake_pred", ")", ":", "\n", "    ", "real_loss", "=", "F", ".", "relu", "(", "1", "-", "real_pred", ")", "\n", "fake_loss", "=", "F", ".", "relu", "(", "1", "+", "fake_pred", ")", "\n", "\n", "return", "real_loss", ".", "mean", "(", ")", "+", "fake_loss", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.g_hinge_loss": [[14, 16], ["pred.mean"], "function", ["None"], ["", "def", "g_hinge_loss", "(", "pred", ")", ":", "\n", "    ", "return", "-", "pred", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.true_randperm": [[36, 58], ["torch.zeros().long", "torch.zeros().long", "torch.LongTensor().to", "torch.LongTensor().to", "range", "utils.true_randperm.unmatched_randperm"], "function", ["None"], ["", "", "def", "true_randperm", "(", "size", ",", "device", "=", "'cuda'", ")", ":", "\n", "    ", "def", "unmatched_randperm", "(", "size", ")", ":", "\n", "        ", "l1", "=", "[", "i", "for", "i", "in", "range", "(", "size", ")", "]", "\n", "l2", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "size", ")", ":", "\n", "            ", "deleted", "=", "False", "\n", "if", "j", "in", "l1", ":", "\n", "                ", "deleted", "=", "True", "\n", "del", "l1", "[", "l1", ".", "index", "(", "j", ")", "]", "\n", "", "shuffle", "(", "l1", ")", "\n", "if", "len", "(", "l1", ")", "==", "0", ":", "\n", "                ", "return", "0", ",", "False", "\n", "", "l2", ".", "append", "(", "l1", "[", "0", "]", ")", "\n", "del", "l1", "[", "0", "]", "\n", "if", "deleted", ":", "\n", "                ", "l1", ".", "append", "(", "j", ")", "\n", "", "", "return", "l2", ",", "True", "\n", "", "flag", "=", "False", "\n", "l", "=", "torch", ".", "zeros", "(", "size", ")", ".", "long", "(", ")", "\n", "while", "not", "flag", ":", "\n", "        ", "l", ",", "flag", "=", "unmatched_randperm", "(", "size", ")", "\n", "", "return", "torch", ".", "LongTensor", "(", "l", ")", ".", "to", "(", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.copy_G_params": [[60, 63], ["copy.deepcopy", "list", "model.parameters"], "function", ["None"], ["", "def", "copy_G_params", "(", "model", ")", ":", "\n", "    ", "flatten", "=", "deepcopy", "(", "list", "(", "p", ".", "data", "for", "p", "in", "model", ".", "parameters", "(", ")", ")", ")", "\n", "return", "flatten", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.load_params": [[65, 68], ["zip", "model.parameters", "p.data.copy_"], "function", ["None"], ["", "def", "load_params", "(", "model", ",", "new_param", ")", ":", "\n", "    ", "for", "p", ",", "new_p", "in", "zip", "(", "model", ".", "parameters", "(", ")", ",", "new_param", ")", ":", "\n", "        ", "p", ".", "data", ".", "copy_", "(", "new_p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.make_folders": [[70, 89], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.listdir", "os.path.exists", "os.mkdir", "copy", "os.path.join"], "function", ["None"], ["", "", "def", "make_folders", "(", "save_folder", ",", "trial_name", ")", ":", "\n", "    ", "saved_model_folder", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'train_results/%s/models'", "%", "trial_name", ")", "\n", "saved_image_folder", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'train_results/%s/images'", "%", "trial_name", ")", "\n", "folders", "=", "[", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'train_results'", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'train_results/%s'", "%", "trial_name", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'train_results/%s/images'", "%", "trial_name", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'train_results/%s/models'", "%", "trial_name", ")", "]", "\n", "for", "folder", "in", "folders", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "folder", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "folder", ")", "\n", "\n", "", "", "from", "shutil", "import", "copy", "\n", "try", ":", "\n", "        ", "for", "f", "in", "os", ".", "listdir", "(", "'.'", ")", ":", "\n", "            ", "if", "'.py'", "in", "f", ":", "\n", "                ", "copy", "(", "f", ",", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'train_results/%s'", "%", "trial_name", ")", "+", "'/'", "+", "f", ")", "\n", "", "", "", "except", ":", "\n", "        ", "pass", "\n", "", "return", "saved_image_folder", ",", "saved_model_folder", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.utils.warp": [[98, 113], ["numpy.zeros", "range", "range", "int", "int", "math.sin", "math.cos"], "function", ["None"], ["def", "warp", "(", "img", ",", "mag", "=", "10", ",", "freq", "=", "100", ")", ":", "\n", "    ", "rows", ",", "cols", "=", "img", ".", "shape", "\n", "\n", "img_output", "=", "np", ".", "zeros", "(", "img", ".", "shape", ",", "dtype", "=", "img", ".", "dtype", ")", "\n", "\n", "for", "i", "in", "range", "(", "rows", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "cols", ")", ":", "\n", "            ", "offset_x", "=", "int", "(", "mag", "*", "math", ".", "sin", "(", "2", "*", "3.14", "*", "i", "/", "freq", ")", ")", "\n", "offset_y", "=", "int", "(", "mag", "*", "math", ".", "cos", "(", "2", "*", "3.14", "*", "j", "/", "freq", ")", ")", "\n", "if", "i", "+", "offset_y", "<", "rows", "and", "j", "+", "offset_x", "<", "cols", ":", "\n", "                ", "img_output", "[", "i", ",", "j", "]", "=", "img", "[", "(", "i", "+", "offset_y", ")", "%", "rows", ",", "(", "j", "+", "offset_x", ")", "%", "cols", "]", "\n", "", "else", ":", "\n", "                ", "img_output", "[", "i", ",", "j", "]", "=", "0", "\n", "\n", "", "", "", "return", "img_output", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.SelfSupervisedDataset.__init__": [[47, 83], ["torch.utils.data.Dataset.__init__", "datasets.SelfSupervisedDataset._parse_frame", "random.shuffle", "torchvision.transforms.Compose", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.Compose", "int", "datasets.trans_maker", "torchvision.transforms.Resize", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomRotation", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.RandomErasing", "torchvision.transforms.RandomErasing", "int", "int", "torchvision.transforms.ToTensor", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.ImageFolder._parse_frame", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.trans_maker"], ["    ", "def", "__init__", "(", "self", ",", "data_root", ",", "data_root_2", ",", "im_size", "=", "512", ",", "nbr_cls", "=", "2000", ",", "rand_crop", "=", "True", ")", ":", "\n", "        ", "super", "(", "SelfSupervisedDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "root", "=", "data_root", "\n", "self", ".", "skt_root", "=", "data_root_2", "\n", "\n", "self", ".", "frame", "=", "self", ".", "_parse_frame", "(", ")", "\n", "random", ".", "shuffle", "(", "self", ".", "frame", ")", "\n", "\n", "self", ".", "nbr_cls", "=", "nbr_cls", "\n", "self", ".", "set_offset", "=", "0", "\n", "\n", "self", ".", "im_size", "=", "im_size", "\n", "self", ".", "transform_rd", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "int", "(", "im_size", "*", "1.3", ")", ",", "int", "(", "im_size", "*", "1.3", ")", ")", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "(", "int", "(", "im_size", ")", ",", "int", "(", "im_size", ")", ")", ")", ",", "\n", "transforms", ".", "RandomRotation", "(", "30", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "#transforms.RandomVerticalFlip(),", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "_rescale", "]", ")", "\n", "\n", "self", ".", "crop", "=", "rand_crop", "\n", "if", "self", ".", "crop", ":", "\n", "            ", "self", ".", "transform_1", "=", "transforms", ".", "Resize", "(", "(", "int", "(", "im_size", "*", "1.1", ")", ",", "int", "(", "im_size", "*", "1.1", ")", ")", ")", "\n", "self", ".", "transform_2", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "_rescale", "\n", "]", ")", "\n", "self", ".", "rand_range", "=", "int", "(", "self", ".", "im_size", "*", "0.1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform_normal", "=", "trans_maker", "(", "size", "=", "im_size", ")", "\n", "\n", "", "self", ".", "transform_flip", "=", "transforms", ".", "RandomHorizontalFlip", "(", "p", "=", "1", ")", "\n", "\n", "self", ".", "transform_erase", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomErasing", "(", "p", "=", "0.8", ",", "scale", "=", "(", "0.02", ",", "0.1", ")", ",", "value", "=", "1", ")", ",", "\n", "transforms", ".", "RandomErasing", "(", "p", "=", "0.8", ",", "scale", "=", "(", "0.02", ",", "0.1", ")", ",", "value", "=", "1", ")", ",", "\n", "#transforms.RandomErasing(p=0.8, scale=(0.02, 0.1), value=1),", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.SelfSupervisedDataset._parse_frame": [[87, 100], ["os.listdir", "os.listdir.sort", "range", "len", "os.path.join", "os.path.join", "os.path.exists", "os.path.exists", "frame.append"], "methods", ["None"], ["", "def", "_parse_frame", "(", "self", ")", ":", "\n", "        ", "frame", "=", "[", "]", "\n", "img_names", "=", "os", ".", "listdir", "(", "self", ".", "root", ")", "\n", "img_names", ".", "sort", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "img_names", ")", ")", ":", "\n", "            ", "img_name", "=", "'%d.jpg'", "%", "(", "i", ")", "\n", "#if DATA_NAME == 'shoe':", "\n", "img_name", "=", "img_names", "[", "i", "]", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "img_names", "[", "i", "]", ")", "\n", "skt_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "skt_root", ",", "img_name", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "image_path", ")", "and", "os", ".", "path", ".", "exists", "(", "skt_path", ")", ":", "\n", "                ", "frame", ".", "append", "(", "(", "image_path", ",", "skt_path", ")", ")", "\n", "", "", "return", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.SelfSupervisedDataset.__len__": [[101, 103], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "nbr_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.SelfSupervisedDataset._next_set": [[104, 109], ["random.shuffle", "len"], "methods", ["None"], ["", "def", "_next_set", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_offset", "+=", "self", ".", "nbr_cls", "\n", "if", "self", ".", "set_offset", ">", "(", "len", "(", "self", ".", "frame", ")", "-", "self", ".", "nbr_cls", ")", ":", "\n", "            ", "random", ".", "shuffle", "(", "self", ".", "frame", ")", "\n", "self", ".", "set_offset", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.SelfSupervisedDataset.__getitem__": [[110, 149], ["PIL.Image.open().convert", "PIL.Image.open().convert", "datasets.SelfSupervisedDataset.filter", "datasets.SelfSupervisedDataset.transform_rd", "datasets.SelfSupervisedDataset.transform_erase", "datasets.SelfSupervisedDataset.transform_erase", "PIL.ImageFilter.MinFilter", "random.randint", "datasets.SelfSupervisedDataset.transform_flip", "datasets.SelfSupervisedDataset.transform_flip", "datasets.SelfSupervisedDataset.transform_flip", "datasets.SelfSupervisedDataset.transform_1", "datasets.SelfSupervisedDataset.transform_1", "datasets.SelfSupervisedDataset.transform_1", "random.randint", "random.randint", "torchvision.crop", "torchvision.crop", "torchvision.crop", "datasets.SelfSupervisedDataset.transform_2", "datasets.SelfSupervisedDataset.transform_2", "datasets.SelfSupervisedDataset.transform_2", "datasets.SelfSupervisedDataset.transform_normal", "datasets.SelfSupervisedDataset.transform_normal", "datasets.SelfSupervisedDataset.transform_normal", "PIL.Image.open", "PIL.Image.open"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "file", ",", "skt_path", "=", "self", ".", "frame", "[", "idx", "+", "self", ".", "set_offset", "]", "\n", "img", "=", "Image", ".", "open", "(", "file", ")", ".", "convert", "(", "'RGB'", ")", "\n", "skt", "=", "Image", ".", "open", "(", "skt_path", ")", ".", "convert", "(", "'L'", ")", "\n", "\n", "### perform random boldness of the sketch image", "\n", "bold_factor", "=", "3", "\n", "skt_bold", "=", "skt", ".", "filter", "(", "ImageFilter", ".", "MinFilter", "(", "size", "=", "bold_factor", ")", ")", "\n", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "1", ":", "\n", "            ", "img", "=", "self", ".", "transform_flip", "(", "img", ")", "\n", "skt", "=", "self", ".", "transform_flip", "(", "skt", ")", "\n", "skt_bold", "=", "self", ".", "transform_flip", "(", "skt_bold", ")", "\n", "\n", "", "img_rd", "=", "self", ".", "transform_rd", "(", "img", ")", "\n", "\n", "if", "self", ".", "crop", ":", "\n", "            ", "img_normal", "=", "self", ".", "transform_1", "(", "img", ")", "\n", "skt_normal", "=", "self", ".", "transform_1", "(", "skt", ")", "\n", "skt_bold", "=", "self", ".", "transform_1", "(", "skt_bold", ")", "\n", "\n", "i", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "rand_range", ")", "\n", "j", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "rand_range", ")", "\n", "\n", "img_normal", "=", "F", ".", "crop", "(", "img_normal", ",", "i", ",", "j", ",", "self", ".", "im_size", ",", "self", ".", "im_size", ")", "\n", "skt_normal", "=", "F", ".", "crop", "(", "skt_normal", ",", "i", ",", "j", ",", "self", ".", "im_size", ",", "self", ".", "im_size", ")", "\n", "skt_bold", "=", "F", ".", "crop", "(", "skt_bold", ",", "i", ",", "j", ",", "self", ".", "im_size", ",", "self", ".", "im_size", ")", "\n", "\n", "img_normal", "=", "self", ".", "transform_2", "(", "img_normal", ")", "\n", "skt_normal", "=", "self", ".", "transform_2", "(", "skt_normal", ")", "\n", "skt_bold", "=", "self", ".", "transform_2", "(", "skt_bold", ")", "\n", "", "else", ":", "\n", "            ", "img_normal", "=", "self", ".", "transform_normal", "(", "img", ")", "\n", "skt_normal", "=", "self", ".", "transform_normal", "(", "skt", ")", "\n", "skt_bold", "=", "self", ".", "transform_normal", "(", "skt_bold", ")", "\n", "\n", "", "skt_erased", "=", "self", ".", "transform_erase", "(", "skt_normal", ")", "\n", "skt_erased_bold", "=", "self", ".", "transform_erase", "(", "skt_bold", ")", "\n", "return", "img_rd", ",", "img_normal", ",", "skt_normal", ",", "skt_bold", ",", "skt_erased", ",", "skt_erased_bold", ",", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.PairedMultiDataset.__init__": [[153, 172], ["torch.utils.data.Dataset.__init__", "datasets.PairedMultiDataset._parse_frame", "torchvision.transforms.Resize", "torchvision.transforms.Compose", "int", "datasets.trans_maker", "int", "int", "int", "torchvision.transforms.ToTensor"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.ImageFolder._parse_frame", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.trans_maker"], ["def", "__init__", "(", "self", ",", "data_root_1", ",", "data_root_2", ",", "data_root_3", ",", "data_root_4", ",", "rand_crop", "=", "True", ",", "im_size", "=", "512", ")", ":", "\n", "        ", "super", "(", "PairedMultiDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "root_a", "=", "data_root_1", "\n", "self", ".", "root_b", "=", "data_root_2", "\n", "self", ".", "root_c", "=", "data_root_3", "\n", "self", ".", "root_d", "=", "data_root_4", "\n", "\n", "self", ".", "frame", "=", "self", ".", "_parse_frame", "(", ")", "\n", "\n", "self", ".", "crop", "=", "rand_crop", "\n", "self", ".", "im_size", "=", "im_size", "\n", "if", "self", ".", "crop", ":", "\n", "            ", "self", ".", "transform_1", "=", "transforms", ".", "Resize", "(", "(", "int", "(", "im_size", "*", "1.1", ")", ",", "int", "(", "im_size", "*", "1.1", ")", ")", ")", "\n", "self", ".", "transform_2", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "_rescale", "\n", "]", ")", "\n", "self", ".", "rand_range", "=", "int", "(", "self", ".", "im_size", "*", "0.1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "trans_maker", "(", "int", "(", "im_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.PairedMultiDataset._parse_frame": [[173, 194], ["os.listdir", "os.listdir.sort", "range", "len", "os.path.join", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "print", "os.path.exists", "os.path.exists", "os.path.exists", "frame.append", "print"], "methods", ["None"], ["", "", "def", "_parse_frame", "(", "self", ")", ":", "\n", "        ", "frame", "=", "[", "]", "\n", "\n", "img_names", "=", "os", ".", "listdir", "(", "self", ".", "root_a", ")", "\n", "img_names", ".", "sort", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "img_names", ")", ")", ":", "\n", "            ", "img_name", "=", "'%d.jpg'", "%", "(", "i", ")", "\n", "#if DATA_NAME == 'shoe':", "\n", "img_name", "=", "img_names", "[", "i", "]", "\n", "image_a_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_a", ",", "img_names", "[", "i", "]", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "image_a_path", ")", ":", "\n", "                ", "image_b_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_b", ",", "img_name", ")", "\n", "image_c_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_c", ",", "img_name", ")", "\n", "image_d_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_d", ",", "img_name", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "image_b_path", ")", "and", "os", ".", "path", ".", "exists", "(", "image_c_path", ")", "and", "os", ".", "path", ".", "exists", "(", "image_d_path", ")", ":", "\n", "                    ", "frame", ".", "append", "(", "(", "image_a_path", ",", "image_b_path", ",", "image_c_path", ",", "image_d_path", ")", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "'2'", ",", "image_a_path", ",", "image_b_path", ")", "\n", "", "", "else", ":", "\n", "                ", "print", "(", "\"1\"", ",", "image_a_path", ")", "\n", "", "", "return", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.PairedMultiDataset.__len__": [[195, 197], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "frame", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.PairedMultiDataset.__getitem__": [[198, 230], ["PIL.Image.open().convert", "PIL.Image.open().convert", "PIL.Image.open().convert", "PIL.Image.open().convert", "datasets.PairedMultiDataset.transform_1", "datasets.PairedMultiDataset.transform_1", "datasets.PairedMultiDataset.transform_1", "datasets.PairedMultiDataset.transform_1", "random.randint", "random.randint", "torchvision.crop", "torchvision.crop", "torchvision.crop", "torchvision.crop", "datasets.PairedMultiDataset.transform_2", "datasets.PairedMultiDataset.transform_2", "datasets.PairedMultiDataset.transform_2", "datasets.PairedMultiDataset.transform_2", "datasets.PairedMultiDataset.transform", "datasets.PairedMultiDataset.transform", "datasets.PairedMultiDataset.transform", "datasets.PairedMultiDataset.transform", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "file_a", ",", "file_b", ",", "file_c", ",", "file_d", "=", "self", ".", "frame", "[", "idx", "]", "\n", "img_a", "=", "Image", ".", "open", "(", "file_a", ")", ".", "convert", "(", "'RGB'", ")", "\n", "img_b", "=", "Image", ".", "open", "(", "file_b", ")", ".", "convert", "(", "'L'", ")", "\n", "img_c", "=", "Image", ".", "open", "(", "file_c", ")", ".", "convert", "(", "'L'", ")", "\n", "img_d", "=", "Image", ".", "open", "(", "file_d", ")", ".", "convert", "(", "'L'", ")", "\n", "\n", "if", "self", ".", "crop", ":", "\n", "            ", "img_a", "=", "self", ".", "transform_1", "(", "img_a", ")", "\n", "img_b", "=", "self", ".", "transform_1", "(", "img_b", ")", "\n", "img_c", "=", "self", ".", "transform_1", "(", "img_c", ")", "\n", "img_d", "=", "self", ".", "transform_1", "(", "img_d", ")", "\n", "\n", "i", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "rand_range", ")", "\n", "j", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "rand_range", ")", "\n", "img_a", "=", "F", ".", "crop", "(", "img_a", ",", "i", ",", "j", ",", "self", ".", "im_size", ",", "self", ".", "im_size", ")", "\n", "img_b", "=", "F", ".", "crop", "(", "img_b", ",", "i", ",", "j", ",", "self", ".", "im_size", ",", "self", ".", "im_size", ")", "\n", "img_c", "=", "F", ".", "crop", "(", "img_c", ",", "i", ",", "j", ",", "self", ".", "im_size", ",", "self", ".", "im_size", ")", "\n", "img_d", "=", "F", ".", "crop", "(", "img_d", ",", "i", ",", "j", ",", "self", ".", "im_size", ",", "self", ".", "im_size", ")", "\n", "\n", "img_a", "=", "self", ".", "transform_2", "(", "img_a", ")", "\n", "img_b", "=", "self", ".", "transform_2", "(", "img_b", ")", "\n", "img_c", "=", "self", ".", "transform_2", "(", "img_c", ")", "\n", "img_d", "=", "self", ".", "transform_2", "(", "img_d", ")", "\n", "", "else", ":", "\n", "            ", "img_a", "=", "self", ".", "transform", "(", "img_a", ")", "\n", "img_b", "=", "self", ".", "transform", "(", "img_b", ")", "\n", "img_c", "=", "self", ".", "transform", "(", "img_c", ")", "\n", "img_d", "=", "self", ".", "transform", "(", "img_d", ")", "\n", "\n", "\n", "", "return", "(", "img_a", ",", "img_b", ",", "img_c", ",", "img_d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.PairedDataset.__init__": [[234, 241], ["datasets.trans_maker", "torch.utils.data.Dataset.__init__", "datasets.PairedDataset._parse_frame"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.trans_maker", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.ImageFolder._parse_frame"], ["def", "__init__", "(", "self", ",", "data_root_1", ",", "data_root_2", ",", "transform", "=", "trans_maker", "(", "512", ")", ")", ":", "\n", "        ", "super", "(", "PairedDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "root_a", "=", "data_root_1", "\n", "self", ".", "root_b", "=", "data_root_2", "\n", "\n", "self", ".", "frame", "=", "self", ".", "_parse_frame", "(", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.PairedDataset._parse_frame": [[243, 258], ["os.listdir", "os.listdir.sort", "range", "len", "os.path.join", "os.path.join", "os.path.exists", "frame.append"], "methods", ["None"], ["", "def", "_parse_frame", "(", "self", ")", ":", "\n", "        ", "frame", "=", "[", "]", "\n", "img_names", "=", "os", ".", "listdir", "(", "self", ".", "root_a", ")", "\n", "img_names", ".", "sort", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "img_names", ")", ")", ":", "\n", "            ", "img_name", "=", "'%d.jpg'", "%", "(", "i", ")", "\n", "if", "DATA_NAME", "==", "'shoe'", ":", "\n", "                ", "img_name", "=", "img_names", "[", "i", "]", "\n", "", "image_a_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_a", ",", "img_names", "[", "i", "]", ")", "\n", "if", "(", "'.jpg'", "in", "image_a_path", ")", "or", "(", "'.png'", "in", "image_a_path", ")", ":", "\n", "                ", "image_b_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_b", ",", "img_name", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "image_b_path", ")", ":", "\n", "                    ", "frame", ".", "append", "(", "(", "image_a_path", ",", "image_b_path", ")", ")", "\n", "\n", "", "", "", "return", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.PairedDataset.__len__": [[259, 261], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "frame", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.PairedDataset.__getitem__": [[262, 272], ["PIL.Image.open().convert", "PIL.Image.open().convert", "datasets.PairedDataset.transform", "datasets.PairedDataset.transform", "PIL.Image.open", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "file_a", ",", "file_b", "=", "self", ".", "frame", "[", "idx", "]", "\n", "img_a", "=", "Image", ".", "open", "(", "file_a", ")", ".", "convert", "(", "'RGB'", ")", "\n", "img_b", "=", "Image", ".", "open", "(", "file_b", ")", ".", "convert", "(", "'L'", ")", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "img_a", "=", "self", ".", "transform", "(", "img_a", ")", "\n", "img_b", "=", "self", ".", "transform", "(", "img_b", ")", "\n", "\n", "", "return", "(", "img_a", ",", "img_b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.ImageFolder.__init__": [[276, 282], ["datasets.trans_maker", "torch.utils.data.Dataset.__init__", "datasets.ImageFolder._parse_frame"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.trans_maker", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.ImageFolder._parse_frame"], ["def", "__init__", "(", "self", ",", "data_root", ",", "transform", "=", "trans_maker", "(", "512", ")", ")", ":", "\n", "        ", "super", "(", "ImageFolder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "root", "=", "data_root", "\n", "\n", "self", ".", "frame", "=", "self", ".", "_parse_frame", "(", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.ImageFolder._parse_frame": [[283, 293], ["os.listdir", "os.listdir.sort", "range", "len", "os.path.join", "frame.append"], "methods", ["None"], ["", "def", "_parse_frame", "(", "self", ")", ":", "\n", "        ", "frame", "=", "[", "]", "\n", "img_names", "=", "os", ".", "listdir", "(", "self", ".", "root", ")", "\n", "img_names", ".", "sort", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "img_names", ")", ")", ":", "\n", "            ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "img_names", "[", "i", "]", ")", "\n", "if", "(", "'.jpg'", "in", "image_path", ")", "or", "(", "'.png'", "in", "image_path", ")", ":", "\n", "                ", "frame", ".", "append", "(", "image_path", ")", "\n", "\n", "", "", "return", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.ImageFolder.__len__": [[294, 296], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "frame", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.ImageFolder.__getitem__": [[297, 304], ["PIL.Image.open().convert", "datasets.ImageFolder.transform", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "file", "=", "self", ".", "frame", "[", "idx", "]", "\n", "img", "=", "Image", ".", "open", "(", "file", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.InfiniteSamplerWrapper.__init__": [[322, 324], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_source", ")", ":", "\n", "        ", "self", ".", "num_samples", "=", "len", "(", "data_source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.InfiniteSamplerWrapper.__iter__": [[325, 327], ["iter", "datasets.InfiniteSampler"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.InfiniteSampler"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "InfiniteSampler", "(", "self", ".", "num_samples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.InfiniteSamplerWrapper.__len__": [[328, 330], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "2", "**", "31", "", "", "", ""]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets._noise_adder": [[17, 19], ["torch.empty_like().uniform_", "torch.empty_like().uniform_", "torch.empty_like", "torch.empty_like"], "function", ["None"], ["def", "_noise_adder", "(", "img", ")", ":", "\n", "    ", "return", "torch", ".", "empty_like", "(", "img", ",", "dtype", "=", "img", ".", "dtype", ")", ".", "uniform_", "(", "0.0", ",", "1", "/", "128.0", ")", "+", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets._rescale": [[21, 23], ["None"], "function", ["None"], ["", "def", "_rescale", "(", "img", ")", ":", "\n", "    ", "return", "img", "*", "2.0", "-", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.trans_maker": [[25, 32], ["torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor"], "function", ["None"], ["", "def", "trans_maker", "(", "size", "=", "512", ")", ":", "\n", "    ", "trans", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "size", ",", "size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "_rescale", "\n", "]", ")", "\n", "return", "trans", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.trans_maker_augment": [[34, 43], ["torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.RandomCrop", "torchvision.transforms.ToTensor", "int", "int"], "function", ["None"], ["", "def", "trans_maker_augment", "(", "size", "=", "256", ")", ":", "\n", "    ", "trans", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "int", "(", "size", "*", "1.1", ")", ",", "int", "(", "size", "*", "1.1", ")", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "(", "size", ",", "size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "_rescale", "#, _noise_adder", "\n", "]", ")", "\n", "return", "trans", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.None.datasets.InfiniteSampler": [[308, 319], ["numpy.random.permutation", "numpy.random.seed", "numpy.random.permutation"], "function", ["None"], ["", "", "def", "InfiniteSampler", "(", "n", ")", ":", "\n", "# i = 0", "\n", "    ", "i", "=", "n", "-", "1", "\n", "order", "=", "np", ".", "random", ".", "permutation", "(", "n", ")", "\n", "while", "True", ":", "\n", "        ", "yield", "order", "[", "i", "]", "\n", "i", "+=", "1", "\n", "if", "i", ">=", "n", ":", "\n", "            ", "np", ".", "random", ".", "seed", "(", ")", "\n", "order", "=", "np", ".", "random", ".", "permutation", "(", "n", ")", "\n", "i", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.Adaptive_pool.__init__": [[53, 58], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["\n", "\n", "", "", "class", "UnSqueeze", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "return", "feat", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.Adaptive_pool.forward": [[58, 62], ["models.Adaptive_pool.pool().view", "len", "input.unsqueeze_", "models.Adaptive_pool.pool"], "methods", ["None"], ["\n", "\n", "", "", "class", "GLU", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "GLU", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.VGGSimple.__init__": [[68, 75], ["torch.Module.__init__", "models.VGGSimple.make_layers", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.VGG_3label.make_layers"], ["return", "x", "[", ":", ",", ":", "nc", "]", "*", "torch", ".", "sigmoid", "(", "x", "[", ":", ",", "nc", ":", "]", ")", "\n", "\n", "\n", "", "", "class", "NoiseInjection", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "ch", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "ch", ",", "1", ",", "1", ")", ",", "requires_grad", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.VGGSimple.forward": [[76, 97], ["range", "models.VGGSimple.norm_std.to", "models.VGGSimple.norm_mean.to", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d"], "methods", ["None"], ["\n", "", "def", "forward", "(", "self", ",", "feat", ",", "noise", "=", "None", ")", ":", "\n", "        ", "if", "noise", "is", "None", ":", "\n", "            ", "batch", ",", "_", ",", "height", ",", "width", "=", "feat", ".", "shape", "\n", "noise", "=", "torch", ".", "randn", "(", "batch", ",", "1", ",", "height", ",", "width", ")", ".", "to", "(", "feat", ".", "device", ")", "\n", "\n", "", "return", "feat", "+", "self", ".", "weight", "*", "noise", "\n", "\n", "\n", "", "", "class", "SELayer", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "SELayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "spectral_norm", "(", "nn", ".", "Linear", "(", "channel", ",", "channel", "//", "reduction", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Linear", "(", "channel", "//", "reduction", ",", "channel", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.VGGSimple.make_layers": [[98, 119], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["y", "=", "self", ".", "avg_pool", "(", "x", ")", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y", ".", "expand_as", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "ResBlkG", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "ch", ",", "ch_m", "=", "4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", ")", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch", ",", "ch", "*", "ch_m", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", "*", "ch_m", ")", ")", ",", "Swish", "(", ")", ",", "\n", "spectral_norm", "(", "DepthwiseConv2d", "(", "ch", "*", "ch_m", ",", "ch", "*", "ch_m", ",", "5", ",", "1", ",", "2", ")", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", "*", "ch_m", ")", ")", ",", "Swish", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch", "*", "ch_m", ",", "ch", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", ")", ")", ",", "\n", "SELayer", "(", "ch", ")", ")", "\n", "", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "return", "feat", "+", "self", ".", "main", "(", "feat", ")", "\n", "\n", "\n", "", "", "class", "ResBlkE", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "ch", ")", ":", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.VGG_3label.__init__": [[123, 147], ["torch.Module.__init__", "models.VGG_3label.make_layers", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.Tensor().view", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.VGG_3label.make_layers"], ["spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", ")", ")", ",", "Swish", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch", ",", "ch", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "BatchNorm2d", "(", "ch", ")", ")", ",", "Swish", "(", ")", ",", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch", ",", "ch", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "SELayer", "(", "ch", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "return", "feat", "+", "self", ".", "main", "(", "feat", ")", "\n", "\n", "\n", "", "", "class", "StyleEncoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "nfc", "=", "64", ",", "nbr_cls", "=", "500", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "nfc", "=", "nfc", "\n", "\n", "self", ".", "sf_256", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "3", ",", "nfc", "//", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "sf_128", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "4", ",", "nfc", "//", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "nfc", "//", "2", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "sf_64", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "2", ",", "nfc", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "nfc", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "sf_32", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", ",", "nfc", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "2", ")", ")", "\n", "self", ".", "sf_16", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "2", ",", "nfc", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "4", ")", ")", "\n", "self", ".", "sf_8", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "4", ",", "nfc", "*", "8", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "8", ")", ")", "\n", "\n", "self", ".", "sfv_32", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "4", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "2", ",", "nfc", "*", "2", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "Squeeze", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.VGG_3label.get_features": [[148, 167], ["range", "models.VGG_3label.norm_std.to", "models.VGG_3label.norm_mean.to", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d"], "methods", ["None"], ["self", ".", "sfv_16", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "4", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "4", ",", "nfc", "*", "4", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "Squeeze", "(", ")", ")", "\n", "self", ".", "sfv_8", "=", "nn", ".", "Sequential", "(", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "4", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "8", ",", "nfc", "*", "8", ",", "4", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "Squeeze", "(", ")", ")", "\n", "\n", "self", ".", "nbr_cls", "=", "nbr_cls", "\n", "self", ".", "final_cls", "=", "None", "\n", "\n", "", "def", "reset_cls", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "final_cls", "is", "None", ":", "\n", "            ", "self", ".", "final_cls", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ")", ",", "nn", ".", "Linear", "(", "self", ".", "nfc", "*", "8", ",", "self", ".", "nbr_cls", ")", ")", "\n", "", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "self", ".", "final_cls", "[", "1", "]", ".", "weight", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "final_cls", "[", "1", "]", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "final_cls", "[", "1", "]", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "final_cls", "[", "1", "]", ".", "bias", ".", "data", ".", "uniform_", "(", "-", "0.1", "*", "stdv", ",", "0.1", "*", "stdv", ")", "\n", "\n", "", "", "def", "get_feats", "(", "self", ",", "image", ")", ":", "\n", "        ", "feat", "=", "self", ".", "sf_256", "(", "image", ")", "\n", "feat", "=", "self", ".", "sf_128", "(", "feat", ")", "\n", "feat", "=", "self", ".", "sf_64", "(", "feat", ")", "\n", "feat_32", "=", "self", ".", "sf_32", "(", "feat", ")", "\n", "feat_16", "=", "self", ".", "sf_16", "(", "feat_32", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.VGG_3label.load_pretrain_weights": [[169, 178], ["vgg.vgg16", "models.VGG_3label.features.load_state_dict", "models.VGG_3label.modules", "vgg.vgg16.features.state_dict", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["\n", "feat_32", "=", "self", ".", "sfv_32", "(", "feat_32", ")", "\n", "feat_16", "=", "self", ".", "sfv_16", "(", "feat_16", ")", "\n", "feat_8", "=", "self", ".", "sfv_8", "(", "feat_8", ")", "\n", "\n", "return", "feat_32", ",", "feat_16", ",", "feat_8", "\n", "\n", "", "def", "forward", "(", "self", ",", "image", ")", ":", "\n", "        ", "feat_32", ",", "feat_16", ",", "feat_8", "=", "self", ".", "get_feats", "(", "image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.VGG_3label.make_layers": [[179, 200], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["pred_cls", "=", "self", ".", "final_cls", "(", "feat_8", ")", "\n", "return", "[", "feat_32", ",", "feat_16", ",", "feat_8", "]", ",", "pred_cls", "\n", "\n", "\n", "", "", "class", "ContentEncoder", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "nfc", "=", "64", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "cf_256", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "1", ",", "nfc", "//", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "cf_128", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "4", ",", "nfc", "//", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "nfc", "//", "2", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "self", ".", "cf_64", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "2", ",", "nfc", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "BatchNorm2d", "(", "nfc", ")", ",", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "cf_32", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", ",", "nfc", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "2", ")", ")", "\n", "self", ".", "cf_16", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "2", ",", "nfc", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "4", ")", ")", "\n", "self", ".", "cf_8", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "4", ",", "nfc", "*", "8", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkE", "(", "nfc", "*", "8", ")", ")", "\n", "\n", "", "def", "get_feats", "(", "self", ",", "image", ")", ":", "\n", "        ", "feat", "=", "self", ".", "cf_256", "(", "image", ")", "\n", "feat", "=", "self", ".", "cf_128", "(", "feat", ")", "\n", "feat", "=", "self", ".", "cf_64", "(", "feat", ")", "\n", "feat_32", "=", "self", ".", "cf_32", "(", "feat", ")", "\n", "feat_16", "=", "self", ".", "cf_16", "(", "feat_32", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.VGG_3label.forward": [[201, 207], ["models.VGG_3label.classifier_feat", "models.VGG_3label.classifier_style", "models.VGG_3label.classifier_genre", "models.VGG_3label.classifier_artist", "models.VGG_3label.avgpool().view", "img.size", "models.VGG_3label.avgpool", "models.VGG_3label.features"], "methods", ["None"], ["feat_8", "=", "self", ".", "cf_8", "(", "feat_16", ")", "\n", "\n", "return", "feat_32", ",", "feat_16", ",", "feat_8", "\n", "\n", "", "def", "forward", "(", "self", ",", "image", ")", ":", "\n", "        ", "feat_32", ",", "feat_16", ",", "feat_8", "=", "self", ".", "get_feats", "(", "image", ")", "\n", "return", "[", "feat_32", ",", "feat_16", ",", "feat_8", "]", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.UnFlatten.__init__": [[210, 213], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["", "", "def", "up_decoder", "(", "ch_in", ",", "ch_out", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ch_in", ",", "ch_out", "*", "2", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.UnFlatten.forward": [[214, 216], ["x.view", "x.size"], "methods", ["None"], ["nn", ".", "InstanceNorm2d", "(", "ch_out", "*", "2", ")", ",", "GLU", "(", ")", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.Flatten.__init__": [[219, 221], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "base_feat", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "1", ",", "nfc", "*", "8", ",", "8", ",", "8", ")", ".", "normal_", "(", "0", ",", "1", ")", ",", "requires_grad", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.Flatten.forward": [[222, 224], ["x.view", "x.size"], "methods", ["None"], ["\n", "self", ".", "dmi_8", "=", "DMI", "(", "nfc", "*", "8", ")", "\n", "self", ".", "dmi_16", "=", "DMI", "(", "nfc", "*", "4", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.UpConvBlock.__init__": [[227, 235], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "norm_layer", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["self", ".", "feat_8_2", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "ResBlkG", "(", "nfc", "*", "8", ")", ")", "\n", "self", ".", "feat_16", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "8", ",", "nfc", "*", "4", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkG", "(", "nfc", "*", "4", ")", ")", "\n", "self", ".", "feat_32", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "nn", ".", "UpsamplingNearest2d", "(", "scale_factor", "=", "2", ")", ",", "nn", ".", "Conv2d", "(", "nfc", "*", "8", ",", "nfc", "*", "2", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "ResBlkG", "(", "nfc", "*", "2", ")", ")", "\n", "self", ".", "feat_64", "=", "nn", ".", "Sequential", "(", "nn", ".", "LeakyReLU", "(", "0.1", ",", "inplace", "=", "True", ")", ",", "up_decoder", "(", "nfc", "*", "4", ",", "nfc", ")", ")", "\n", "self", ".", "feat_128", "=", "up_decoder", "(", "nfc", "*", "1", ",", "nfc", "//", "2", ")", "\n", "self", ".", "feat_256", "=", "up_decoder", "(", "nfc", "//", "2", ",", "nfc", "//", "4", ")", "\n", "self", ".", "feat_512", "=", "up_decoder", "(", "nfc", "//", "4", ",", "nfc", "//", "8", ")", "\n", "\n", "self", ".", "to_rgb", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "nfc", "//", "8", ",", "3", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "nn", ".", "Tanh", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.UpConvBlock.forward": [[237, 240], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "models.UpConvBlock.main"], "methods", ["None"], ["self", ".", "style_8", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "nfc", "*", "8", ",", "nfc", "*", "8", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "nfc", "*", "8", ",", "nfc", "*", "8", ")", ",", "nn", ".", "BatchNorm1d", "(", "nfc", "*", "8", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "self", ".", "style_64", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "nfc", "*", "8", ",", "nfc", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "nfc", ",", "nfc", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "self", ".", "style_128", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "nfc", "*", "4", ",", "nfc", "//", "2", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "nfc", "//", "2", ",", "nfc", "//", "2", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "UnSqueeze", "(", ")", ")", "\n", "self", ".", "style_256", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "nfc", "*", "2", ",", "nfc", "//", "4", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Linear", "(", "nfc", "//", "4", ",", "nfc", "//", "4", ")", ",", "nn", ".", "Sigmoid", "(", ")", ",", "UnSqueeze", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.DownConvBlock.__init__": [[243, 252], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "norm_layer", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "m.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["\n", "        ", "feat_8", "=", "self", ".", "feat_8_1", "(", "torch", ".", "cat", "(", "[", "content_feats", "[", "2", "]", ",", "self", ".", "base_feat", ".", "repeat", "(", "style_vectors", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", "]", ",", "dim", "=", "1", ")", ")", "\n", "feat_8", "=", "self", ".", "dmi_8", "(", "feat_8", ",", "content_feats", "[", "2", "]", ")", "\n", "\n", "bs", "=", "feat_8", ".", "shape", "[", "0", "]", "\n", "\n", "feat_8", "=", "feat_8", "*", "self", ".", "style_8", "(", "style_vectors", "[", "2", "]", ")", "\n", "feat_8", "=", "self", ".", "feat_8_2", "(", "feat_8", ")", "\n", "\n", "feat_16", "=", "self", ".", "feat_16", "(", "feat_8", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.DownConvBlock.forward": [[253, 255], ["models.DownConvBlock.main"], "methods", ["None"], ["feat_16", "=", "self", ".", "dmi_16", "(", "feat_16", ",", "content_feats", "[", "1", "]", ")", "\n", "feat_16", "=", "torch", ".", "cat", "(", "[", "feat_16", ",", "content_feats", "[", "1", "]", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.Generator.__init__": [[260, 270], ["torch.Module.__init__", "models.UpConvBlock", "models.UpConvBlock", "models.UpConvBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["feat_128", "=", "self", ".", "feat_128", "(", "feat_64", ")", "*", "self", ".", "style_128", "(", "style_vectors", "[", "1", "]", ")", "\n", "feat_256", "=", "self", ".", "feat_256", "(", "feat_128", ")", "*", "self", ".", "style_256", "(", "style_vectors", "[", "0", "]", ")", "\n", "feat_512", "=", "self", ".", "feat_512", "(", "feat_256", ")", "\n", "\n", "return", "self", ".", "to_rgb", "(", "feat_512", ")", "\n", "\n", "\n", "", "", "class", "AE", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "nfc", ",", "nbr_cls", "=", "500", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.Generator.forward": [[271, 279], ["models.Generator.decode_32", "models.Generator.decode_64", "models.Generator.decode_128", "models.Generator.final"], "methods", ["None"], ["self", ".", "style_encoder", "=", "StyleEncoder", "(", "nfc", ",", "nbr_cls", "=", "nbr_cls", ")", "\n", "self", ".", "content_encoder", "=", "ContentEncoder", "(", "nfc", ")", "\n", "self", ".", "decoder", "=", "Decoder", "(", "nfc", ")", "\n", "\n", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "forward", "(", "self", ",", "skt_img", ",", "style_img", ")", ":", "\n", "        ", "style_feats", "=", "self", ".", "style_encoder", ".", "get_feats", "(", "F", ".", "interpolate", "(", "style_img", ",", "size", "=", "512", ")", ")", "\n", "content_feats", "=", "self", ".", "content_encoder", "(", "F", ".", "interpolate", "(", "skt_img", ",", "size", "=", "512", ")", ")", "\n", "gimg", "=", "self", ".", "decoder", "(", "content_feats", ",", "style_feats", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.Discriminator.__init__": [[282, 289], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.DownConvBlock", "models.DownConvBlock", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.nn.utils.spectral_norm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["", "def", "load_state_dicts", "(", "self", ",", "path", ")", ":", "\n", "        ", "ckpt", "=", "torch", ".", "load", "(", "path", ")", "\n", "self", ".", "style_encoder", ".", "reset_cls", "(", ")", "\n", "self", ".", "style_encoder", ".", "load_state_dict", "(", "ckpt", "[", "'s'", "]", ")", "\n", "self", ".", "content_encoder", ".", "load_state_dict", "(", "ckpt", "[", "'c'", "]", ")", "\n", "self", ".", "decoder", ".", "load_state_dict", "(", "ckpt", "[", "'d'", "]", ")", "\n", "print", "(", "'AE load success'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.Discriminator.forward": [[291, 294], ["models.Discriminator.main", "models.Discriminator.view"], "methods", ["None"], ["    ", "return", "nn", ".", "Sequential", "(", "\n", "spectral_norm", "(", "nn", ".", "Conv2d", "(", "ch_in", ",", "ch_out", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ch_out", ")", ",", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.calc_mean_std": [[18, 27], ["feat.size", "feat_var.sqrt().view", "feat.view().mean().view", "len", "feat.view().var", "feat_var.sqrt", "feat.view().mean", "feat.view", "feat.view"], "function", ["None"], ["            ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "1.0", ",", "0.02", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "", "", "except", ":", "\n", "        ", "pass", "\n", "\n", "\n", "", "", "class", "DMI", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.adain": [[29, 38], ["content_feat.size", "models.calc_mean_std", "models.calc_mean_std", "content_std.expand", "style_mean.expand", "content_feat.size", "style_feat.size", "content_mean.expand", "style_std.expand"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.calc_mean_std", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.calc_mean_std"], ["self", ".", "weight_b", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "in_channels", ",", "1", ",", "1", ")", "*", "0.99", ")", "\n", "\n", "self", ".", "bias_a", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "in_channels", ",", "1", ",", "1", ")", "+", "0.01", ")", "\n", "self", ".", "bias_b", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "in_channels", ",", "1", ",", "1", ")", "-", "0.01", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "feat", ",", "mask", ")", ":", "\n", "        ", "if", "feat", ".", "shape", "[", "1", "]", ">", "mask", ".", "shape", "[", "1", "]", ":", "\n", "            ", "channel_scale", "=", "feat", ".", "shape", "[", "1", "]", "//", "mask", ".", "shape", "[", "1", "]", "\n", "mask", "=", "mask", ".", "repeat", "(", "1", ",", "channel_scale", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.get_batched_gram_matrix": [[40, 47], ["input.size", "input.view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm.div", "input.view.transpose"], "function", ["None"], ["feat_a", "=", "self", ".", "weight_a", "*", "feat", "*", "mask", "+", "self", ".", "bias_a", "\n", "feat_b", "=", "self", ".", "weight_b", "*", "feat", "*", "(", "1", "-", "mask", ")", "+", "self", ".", "bias_b", "\n", "return", "feat_a", "+", "feat_b", "\n", "\n", "\n", "", "", "class", "Swish", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "forward", "(", "self", ",", "feat", ")", ":", "\n", "        ", "return", "feat", "*", "torch", ".", "sigmoid", "(", "feat", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.creat_folder": [[23, 33], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.exists", "os.mkdir"], "function", ["None"], []], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.train_d": [[34, 43], ["net", "F.relu().mean.backward", "torch.sigmoid().mean().item", "torch.sigmoid().mean().item", "torch.sigmoid().mean().item", "torch.relu().mean", "torch.relu().mean", "torch.sigmoid().mean", "torch.sigmoid().mean", "torch.sigmoid().mean", "torch.relu", "torch.relu", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "function", ["None"], []], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.gram_matrix": [[44, 53], ["input.size", "input.view", "torch.mm", "torch.mm", "torch.mm", "torch.mm.div", "input.view.t"], "function", ["None"], []], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.gram_loss": [[54, 58], ["train.gram_matrix", "train.gram_matrix", "torch.mse_loss", "target.detach"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.gram_matrix", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.gram_matrix"], []], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.save_image": [[59, 78], ["net_g.eval", "net_g.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torchvision.save_image", "torch.cat.append", "torch.cat.append", "vgg", "net_g().cpu", "d[].to", "net_g"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.train", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image"], []], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.train": [[79, 161], ["print", "train.creat_folder", "tqdm.tqdm", "range", "[].to", "[].to", "vgg", "vgg", "net_g", "vgg", "models.adain", "gram_reshape", "gram_reshape", "gram_reshape", "torch.cat", "torch.cat", "torch.cat", "gram_reshape", "gram_reshape", "gram_reshape", "torch.cat", "torch.cat", "torch.cat", "net_d_style.zero_grad", "train.train_d", "train.train_d", "optDS.step", "net_g.zero_grad", "net_d_style", "torch.sigmoid().mean().item", "torch.sigmoid().mean().item", "torch.sigmoid().mean().item", "torch.mse_loss", "err_gram.item", "err.backward", "optG.step", "enumerate", "train.save_image", "models.get_batched_gram_matrix", "models.get_batched_gram_matrix", "models.get_batched_gram_matrix", "models.get_batched_gram_matrix", "models.get_batched_gram_matrix", "models.get_batched_gram_matrix", "torch.cat.detach", "net_d_style.mean", "losses.items", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.sigmoid().mean", "torch.sigmoid().mean", "torch.sigmoid().mean", "train.gram_loss", "net_g.state_dict", "net_d_style.state_dict", "os.path.join", "optG.state_dict", "optDS.state_dict", "os.path.join", "print", "next", "next", "train.gram_loss", "train.gram_loss", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.creat_folder", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.adain", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.train_d", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.train_d", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.get_batched_gram_matrix", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.get_batched_gram_matrix", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.get_batched_gram_matrix", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.get_batched_gram_matrix", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.get_batched_gram_matrix", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.models.get_batched_gram_matrix", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.gram_loss", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.gram_loss", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.gram_loss"], []], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.HSV_Loss.__init__": [[24, 29], ["torch.Module.__init__", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "h", "=", "0", ",", "s", "=", "1", ",", "v", "=", "0.7", ")", ":", "\n", "        ", "super", "(", "HSV_Loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hsv", "=", "[", "h", ",", "s", ",", "v", "]", "\n", "self", ".", "l1", "=", "nn", ".", "L1Loss", "(", ")", "\n", "self", ".", "mse", "=", "nn", ".", "MSELoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.HSV_Loss.get_h": [[30, 41], ["torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "img.max", "img.max", "img.max", "img.max", "img.min", "img.max", "img.min", "img.max", "img.max", "img.min", "img.max", "img.max", "img.min", "img.max"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_h", "(", "im", ")", ":", "\n", "        ", "img", "=", "im", "*", "0.5", "+", "0.5", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "img", ".", "shape", "\n", "hue", "=", "torch", ".", "Tensor", "(", "im", ".", "shape", "[", "0", "]", ",", "im", ".", "shape", "[", "2", "]", ",", "im", ".", "shape", "[", "3", "]", ")", ".", "to", "(", "im", ".", "device", ")", "\n", "hue", "[", "img", "[", ":", ",", "2", "]", "==", "img", ".", "max", "(", "1", ")", "[", "0", "]", "]", "=", "4.0", "+", "(", "(", "img", "[", ":", ",", "0", "]", "-", "img", "[", ":", ",", "1", "]", ")", "/", "(", "img", ".", "max", "(", "1", ")", "[", "0", "]", "-", "img", ".", "min", "(", "1", ")", "[", "0", "]", ")", ")", "[", "img", "[", ":", ",", "2", "]", "==", "img", ".", "max", "(", "1", ")", "[", "0", "]", "]", "\n", "hue", "[", "img", "[", ":", ",", "1", "]", "==", "img", ".", "max", "(", "1", ")", "[", "0", "]", "]", "=", "2.0", "+", "(", "(", "img", "[", ":", ",", "2", "]", "-", "img", "[", ":", ",", "0", "]", ")", "/", "(", "img", ".", "max", "(", "1", ")", "[", "0", "]", "-", "img", ".", "min", "(", "1", ")", "[", "0", "]", ")", ")", "[", "img", "[", ":", ",", "1", "]", "==", "img", ".", "max", "(", "1", ")", "[", "0", "]", "]", "\n", "hue", "[", "img", "[", ":", ",", "0", "]", "==", "img", ".", "max", "(", "1", ")", "[", "0", "]", "]", "=", "(", "(", "img", "[", ":", ",", "1", "]", "-", "img", "[", ":", ",", "2", "]", ")", "/", "(", "img", ".", "max", "(", "1", ")", "[", "0", "]", "-", "img", ".", "min", "(", "1", ")", "[", "0", "]", ")", ")", "[", "img", "[", ":", ",", "0", "]", "==", "img", ".", "max", "(", "1", ")", "[", "0", "]", "]", "\n", "hue", "=", "(", "hue", "/", "6.0", ")", "%", "1.0", "\n", "hue", "[", "img", ".", "min", "(", "1", ")", "[", "0", "]", "==", "img", ".", "max", "(", "1", ")", "[", "0", "]", "]", "=", "0.0", "\n", "return", "hue", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.HSV_Loss.get_v": [[42, 49], ["img.transpose().transpose().contiguous().view", "torch.max_pool1d().view", "torch.max_pool1d().view", "torch.max_pool1d().view", "torch.max_pool1d().view", "img.transpose().transpose().contiguous", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "img.transpose().transpose", "img.transpose"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_v", "(", "im", ")", ":", "\n", "        ", "img", "=", "im", "*", "0.5", "+", "0.5", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "img", ".", "shape", "\n", "it", "=", "img", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", ",", "-", "1", ",", "c", ")", "\n", "value", "=", "F", ".", "max_pool1d", "(", "it", ",", "c", ")", ".", "view", "(", "b", ",", "h", ",", "w", ")", "\n", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.HSV_Loss.get_s": [[50, 59], ["img.transpose().transpose().contiguous().view", "torch.max_pool1d().view", "torch.max_pool1d().view", "torch.max_pool1d().view", "torch.max_pool1d().view", "torch.max_pool1d().view", "torch.max_pool1d().view", "torch.max_pool1d().view", "torch.max_pool1d().view", "img.transpose().transpose().contiguous", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "torch.max_pool1d", "img.transpose().transpose", "img.transpose"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_s", "(", "im", ")", ":", "\n", "        ", "img", "=", "im", "*", "0.5", "+", "0.5", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "img", ".", "shape", "\n", "it", "=", "img", ".", "transpose", "(", "1", ",", "2", ")", ".", "transpose", "(", "2", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", ",", "-", "1", ",", "c", ")", "\n", "max_v", "=", "F", ".", "max_pool1d", "(", "it", ",", "c", ")", ".", "view", "(", "b", ",", "h", ",", "w", ")", "\n", "min_v", "=", "F", ".", "max_pool1d", "(", "it", "*", "-", "1", ",", "c", ")", ".", "view", "(", "b", ",", "h", ",", "w", ")", "\n", "satur", "=", "(", "max_v", "+", "min_v", ")", "/", "(", "max_v", "+", "eps", ")", "\n", "return", "satur", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.HSV_Loss.forward": [[60, 68], ["operation.HSV_Loss.get_h", "operation.HSV_Loss.get_s", "operation.HSV_Loss.get_v", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to().type_as", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "operation.HSV_Loss.mse", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_().to", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.HSV_Loss.get_h", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.HSV_Loss.get_s", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.HSV_Loss.get_v"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "h", "=", "self", ".", "get_h", "(", "input", ")", "\n", "s", "=", "self", ".", "get_s", "(", "input", ")", "\n", "v", "=", "self", ".", "get_v", "(", "input", ")", "\n", "target_h", "=", "torch", ".", "Tensor", "(", "h", ".", "shape", ")", ".", "fill_", "(", "self", ".", "hsv", "[", "0", "]", ")", ".", "to", "(", "input", ".", "device", ")", ".", "type_as", "(", "h", ")", "\n", "target_s", "=", "torch", ".", "Tensor", "(", "s", ".", "shape", ")", ".", "fill_", "(", "self", ".", "hsv", "[", "1", "]", ")", ".", "to", "(", "input", ".", "device", ")", "\n", "target_v", "=", "torch", ".", "Tensor", "(", "v", ".", "shape", ")", ".", "fill_", "(", "self", ".", "hsv", "[", "2", "]", ")", ".", "to", "(", "input", ".", "device", ")", "\n", "return", "self", ".", "mse", "(", "h", ",", "target_h", ")", "#+ 0.4*self.mse(v, target_v)", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.InfiniteSamplerWrapper.__init__": [[85, 87], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_source", ")", ":", "\n", "        ", "self", ".", "num_samples", "=", "len", "(", "data_source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.InfiniteSamplerWrapper.__iter__": [[88, 90], ["iter", "operation.InfiniteSampler"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.InfiniteSampler"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "InfiniteSampler", "(", "self", ".", "num_samples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.InfiniteSamplerWrapper.__len__": [[91, 93], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "2", "**", "31", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.InfiniteSampler": [[72, 83], ["numpy.random.permutation", "numpy.random.seed", "numpy.random.permutation"], "function", ["None"], ["", "", "def", "InfiniteSampler", "(", "n", ")", ":", "\n", "# i = 0", "\n", "    ", "i", "=", "n", "-", "1", "\n", "order", "=", "np", ".", "random", ".", "permutation", "(", "n", ")", "\n", "while", "True", ":", "\n", "        ", "yield", "order", "[", "i", "]", "\n", "i", "+=", "1", "\n", "if", "i", ">=", "n", ":", "\n", "            ", "np", ".", "random", ".", "seed", "(", ")", "\n", "order", "=", "np", ".", "random", ".", "permutation", "(", "n", ")", "\n", "i", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation._rescale": [[95, 97], ["None"], "function", ["None"], ["", "", "def", "_rescale", "(", "img", ")", ":", "\n", "    ", "return", "img", "*", "2.0", "-", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.trans_maker": [[98, 107], ["torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.RandomCrop", "torchvision.transforms.ToTensor"], "function", ["None"], ["", "def", "trans_maker", "(", "size", "=", "256", ")", ":", "\n", "\t", "trans", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "size", "+", "36", ",", "size", "+", "36", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "(", "size", ",", "size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "_rescale", "\n", "]", ")", "\n", "return", "trans", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.trans_maker_testing": [[108, 115], ["torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor"], "function", ["None"], ["", "def", "trans_maker_testing", "(", "size", "=", "256", ")", ":", "\n", "\t", "trans", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "size", ",", "size", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "_rescale", "\n", "]", ")", "\n", "return", "trans", "\n", "", "transform_gan", "=", "trans_maker", "(", "size", "=", "128", ")", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image": [[124, 143], ["logger.info", "net.eval", "net.parameters", "net.train", "p.type", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "net.gen_a2b", "range", "data[].to().type", "net.gen_a2b.size", "torchvision.save_image", "net.gen_a2b.cpu().float().add_().mul_", "os.path.join", "data[].to", "net.gen_a2b.cpu().float().add_", "net.gen_a2b.cpu().float", "net.gen_a2b.cpu"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.train.train", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image"], ["def", "save_image", "(", "net", ",", "dataloader_A", ",", "device", ",", "cur_iter", ",", "trial", ",", "save_path", ")", ":", "\n", "    ", "\"\"\"Save imag output from net\"\"\"", "\n", "logger", ".", "info", "(", "'Saving gan epoch {} images: {}'", ".", "format", "(", "cur_iter", ",", "save_path", ")", ")", "\n", "\n", "# Set net to evaluation mode", "\n", "net", ".", "eval", "(", ")", "\n", "for", "p", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "data_type", "=", "p", ".", "type", "(", ")", "\n", "break", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "itx", ",", "data", "in", "enumerate", "(", "dataloader_A", ")", ":", "\n", "            ", "g_img", "=", "net", ".", "gen_a2b", "(", "data", "[", "0", "]", ".", "to", "(", "device", ")", ".", "type", "(", "data_type", ")", ")", "\n", "for", "i", "in", "range", "(", "g_img", ".", "size", "(", "0", ")", ")", ":", "\n", "                ", "vutils", ".", "save_image", "(", "\n", "g_img", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "add_", "(", "1", ")", ".", "mul_", "(", "0.5", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "save_path", ",", "\"{}_gan_epoch_{}_iter_{}_{}.jpg\"", ".", "format", "(", "trial", ",", "cur_iter", ",", "itx", ",", "i", ")", ")", ",", ")", "\n", "# Set net to train mode", "\n", "", "", "", "net", ".", "train", "(", ")", "\n", "return", "save_path", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_model": [[144, 159], ["os.path.join", "logger.info", "net.save", "os.listdir", "fname.endswith", "os.path.join", "os.remove", "logger.info"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save"], ["", "def", "save_model", "(", "net", ",", "save_folder", ",", "cuda_device", ",", "if_multi_gpu", ",", "trial", ",", "cur_iter", ")", ":", "\n", "    ", "\"\"\" Save current model and delete previous model, keep the saved model!\"\"\"", "\n", "save_name", "=", "\"{}_gan_epoch_{}.pth\"", ".", "format", "(", "trial", ",", "cur_iter", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "save_name", ")", "\n", "logger", ".", "info", "(", "'Saving gan model: {}'", ".", "format", "(", "save_path", ")", ")", "\n", "\n", "net", ".", "save", "(", "save_path", ")", "\n", "\n", "for", "fname", "in", "os", ".", "listdir", "(", "save_folder", ")", ":", "\n", "        ", "if", "fname", ".", "endswith", "(", "'.pth'", ")", "and", "fname", "!=", "save_name", ":", "\n", "            ", "delete_path", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "fname", ")", "\n", "os", ".", "remove", "(", "delete_path", ")", "\n", "logger", ".", "info", "(", "'Deleted previous gan model: {}'", ".", "format", "(", "delete_path", ")", ")", "\n", "\n", "", "", "return", "save_path", "", "", ""]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.PNetLin.__init__": [[28, 63], ["torch.Module.__init__", "networks_basic.ScalingLayer", "len", "net_type", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pnet_type", "=", "'vgg'", ",", "pnet_rand", "=", "False", ",", "pnet_tune", "=", "False", ",", "use_dropout", "=", "True", ",", "spatial", "=", "False", ",", "version", "=", "'0.1'", ",", "lpips", "=", "True", ")", ":", "\n", "        ", "super", "(", "PNetLin", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "pnet_type", "=", "pnet_type", "\n", "self", ".", "pnet_tune", "=", "pnet_tune", "\n", "self", ".", "pnet_rand", "=", "pnet_rand", "\n", "self", ".", "spatial", "=", "spatial", "\n", "self", ".", "lpips", "=", "lpips", "\n", "self", ".", "version", "=", "version", "\n", "self", ".", "scaling_layer", "=", "ScalingLayer", "(", ")", "\n", "\n", "if", "(", "self", ".", "pnet_type", "in", "[", "'vgg'", ",", "'vgg16'", "]", ")", ":", "\n", "            ", "net_type", "=", "pn", ".", "vgg16", "\n", "self", ".", "chns", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", "]", "\n", "", "elif", "(", "self", ".", "pnet_type", "==", "'alex'", ")", ":", "\n", "            ", "net_type", "=", "pn", ".", "alexnet", "\n", "self", ".", "chns", "=", "[", "64", ",", "192", ",", "384", ",", "256", ",", "256", "]", "\n", "", "elif", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "\n", "            ", "net_type", "=", "pn", ".", "squeezenet", "\n", "self", ".", "chns", "=", "[", "64", ",", "128", ",", "256", ",", "384", ",", "384", ",", "512", ",", "512", "]", "\n", "", "self", ".", "L", "=", "len", "(", "self", ".", "chns", ")", "\n", "\n", "self", ".", "net", "=", "net_type", "(", "pretrained", "=", "not", "self", ".", "pnet_rand", ",", "requires_grad", "=", "self", ".", "pnet_tune", ")", "\n", "\n", "if", "(", "lpips", ")", ":", "\n", "            ", "self", ".", "lin0", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "0", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin1", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "1", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin2", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "2", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin3", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "3", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin4", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "4", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lins", "=", "[", "self", ".", "lin0", ",", "self", ".", "lin1", ",", "self", ".", "lin2", ",", "self", ".", "lin3", ",", "self", ".", "lin4", "]", "\n", "if", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "# 7 layers for squeezenet", "\n", "                ", "self", ".", "lin5", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "5", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin6", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "6", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lins", "+=", "[", "self", ".", "lin5", ",", "self", ".", "lin6", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.PNetLin.forward": [[64, 93], ["range", "range", "networks_basic.PNetLin.net.forward", "networks_basic.PNetLin.net.forward", "networks_basic.PNetLin.scaling_layer", "networks_basic.PNetLin.scaling_layer", "lpips.normalize_tensor", "lpips.normalize_tensor", "networks_basic.upsample", "networks_basic.spatial_average", "networks_basic.upsample", "networks_basic.spatial_average", "networks_basic.PNetLin.lins[].model", "range", "networks_basic.PNetLin.lins[].model", "range", "diffs[].sum", "range", "diffs[].sum", "range"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.normalize_tensor", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.normalize_tensor", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.upsample", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.spatial_average", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.upsample", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.spatial_average"], ["", "", "", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retPerLayer", "=", "False", ")", ":", "\n", "# v0.0 - original release had a bug, where input was not scaled", "\n", "        ", "in0_input", ",", "in1_input", "=", "(", "self", ".", "scaling_layer", "(", "in0", ")", ",", "self", ".", "scaling_layer", "(", "in1", ")", ")", "if", "self", ".", "version", "==", "'0.1'", "else", "(", "in0", ",", "in1", ")", "\n", "outs0", ",", "outs1", "=", "self", ".", "net", ".", "forward", "(", "in0_input", ")", ",", "self", ".", "net", ".", "forward", "(", "in1_input", ")", "\n", "feats0", ",", "feats1", ",", "diffs", "=", "{", "}", ",", "{", "}", ",", "{", "}", "\n", "\n", "for", "kk", "in", "range", "(", "self", ".", "L", ")", ":", "\n", "            ", "feats0", "[", "kk", "]", ",", "feats1", "[", "kk", "]", "=", "util", ".", "normalize_tensor", "(", "outs0", "[", "kk", "]", ")", ",", "util", ".", "normalize_tensor", "(", "outs1", "[", "kk", "]", ")", "\n", "diffs", "[", "kk", "]", "=", "(", "feats0", "[", "kk", "]", "-", "feats1", "[", "kk", "]", ")", "**", "2", "\n", "\n", "", "if", "(", "self", ".", "lpips", ")", ":", "\n", "            ", "if", "(", "self", ".", "spatial", ")", ":", "\n", "                ", "res", "=", "[", "upsample", "(", "self", ".", "lins", "[", "kk", "]", ".", "model", "(", "diffs", "[", "kk", "]", ")", ",", "out_H", "=", "in0", ".", "shape", "[", "2", "]", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "]", "\n", "", "else", ":", "\n", "                ", "res", "=", "[", "spatial_average", "(", "self", ".", "lins", "[", "kk", "]", ".", "model", "(", "diffs", "[", "kk", "]", ")", ",", "keepdim", "=", "True", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "]", "\n", "", "", "else", ":", "\n", "            ", "if", "(", "self", ".", "spatial", ")", ":", "\n", "                ", "res", "=", "[", "upsample", "(", "diffs", "[", "kk", "]", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ",", "out_H", "=", "in0", ".", "shape", "[", "2", "]", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "]", "\n", "", "else", ":", "\n", "                ", "res", "=", "[", "spatial_average", "(", "diffs", "[", "kk", "]", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ",", "keepdim", "=", "True", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "]", "\n", "\n", "", "", "val", "=", "res", "[", "0", "]", "\n", "for", "l", "in", "range", "(", "1", ",", "self", ".", "L", ")", ":", "\n", "            ", "val", "+=", "res", "[", "l", "]", "\n", "\n", "", "if", "(", "retPerLayer", ")", ":", "\n", "            ", "return", "(", "val", ",", "res", ")", "\n", "", "else", ":", "\n", "            ", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.ScalingLayer.__init__": [[95, 99], ["torch.Module.__init__", "networks_basic.ScalingLayer.register_buffer", "networks_basic.ScalingLayer.register_buffer", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ScalingLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "register_buffer", "(", "'shift'", ",", "torch", ".", "Tensor", "(", "[", "-", ".030", ",", "-", ".088", ",", "-", ".188", "]", ")", "[", "None", ",", ":", ",", "None", ",", "None", "]", ")", "\n", "self", ".", "register_buffer", "(", "'scale'", ",", "torch", ".", "Tensor", "(", "[", ".458", ",", ".448", ",", ".450", "]", ")", "[", "None", ",", ":", ",", "None", ",", "None", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.ScalingLayer.forward": [[100, 102], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "return", "(", "inp", "-", "self", ".", "shift", ")", "/", "self", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.NetLinLayer.__init__": [[106, 112], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["def", "__init__", "(", "self", ",", "chn_in", ",", "chn_out", "=", "1", ",", "use_dropout", "=", "False", ")", ":", "\n", "        ", "super", "(", "NetLinLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "nn", ".", "Dropout", "(", ")", ",", "]", "if", "(", "use_dropout", ")", "else", "[", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "chn_in", ",", "chn_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.Dist2LogitLayer.__init__": [[116, 127], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["def", "__init__", "(", "self", ",", "chn_mid", "=", "32", ",", "use_sigmoid", "=", "True", ")", ":", "\n", "        ", "super", "(", "Dist2LogitLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "nn", ".", "Conv2d", "(", "5", ",", "chn_mid", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "chn_mid", ",", "chn_mid", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "chn_mid", ",", "1", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "]", "\n", "if", "(", "use_sigmoid", ")", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "Sigmoid", "(", ")", ",", "]", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.Dist2LogitLayer.forward": [[128, 130], ["networks_basic.Dist2LogitLayer.model.forward", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.forward"], ["", "def", "forward", "(", "self", ",", "d0", ",", "d1", ",", "eps", "=", "0.1", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "forward", "(", "torch", ".", "cat", "(", "(", "d0", ",", "d1", ",", "d0", "-", "d1", ",", "d0", "/", "(", "d1", "+", "eps", ")", ",", "d1", "/", "(", "d0", "+", "eps", ")", ")", ",", "dim", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.BCERankingLoss.__init__": [[132, 137], ["torch.Module.__init__", "networks_basic.Dist2LogitLayer", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "chn_mid", "=", "32", ")", ":", "\n", "        ", "super", "(", "BCERankingLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "Dist2LogitLayer", "(", "chn_mid", "=", "chn_mid", ")", "\n", "# self.parameters = list(self.net.parameters())", "\n", "self", ".", "loss", "=", "torch", ".", "nn", ".", "BCELoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.BCERankingLoss.forward": [[138, 142], ["networks_basic.BCERankingLoss.net.forward", "networks_basic.BCERankingLoss.loss"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.forward"], ["", "def", "forward", "(", "self", ",", "d0", ",", "d1", ",", "judge", ")", ":", "\n", "        ", "per", "=", "(", "judge", "+", "1.", ")", "/", "2.", "\n", "self", ".", "logit", "=", "self", ".", "net", ".", "forward", "(", "d0", ",", "d1", ")", "\n", "return", "self", ".", "loss", "(", "self", ".", "logit", ",", "per", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.FakeNet.__init__": [[145, 149], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_gpu", "=", "True", ",", "colorspace", "=", "'Lab'", ")", ":", "\n", "        ", "super", "(", "FakeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "colorspace", "=", "colorspace", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.L2.forward": [[152, 166], ["in0.size", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "in0.size", "lpips.l2().astype", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "ret_var.cuda.cuda.cuda", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "lpips.l2", "lpips.tensor2np", "lpips.tensor2np", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "lpips.tensor2tensorlab", "lpips.tensor2tensorlab", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.l2", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2np", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2np", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2tensorlab", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2tensorlab"], ["    ", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retPerLayer", "=", "None", ")", ":", "\n", "        ", "assert", "(", "in0", ".", "size", "(", ")", "[", "0", "]", "==", "1", ")", "# currently only supports batchSize 1", "\n", "\n", "if", "(", "self", ".", "colorspace", "==", "'RGB'", ")", ":", "\n", "            ", "(", "N", ",", "C", ",", "X", ",", "Y", ")", "=", "in0", ".", "size", "(", ")", "\n", "value", "=", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "(", "in0", "-", "in1", ")", "**", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "N", ",", "1", ",", "X", ",", "Y", ")", ",", "dim", "=", "2", ")", ".", "view", "(", "N", ",", "1", ",", "1", ",", "Y", ")", ",", "dim", "=", "3", ")", ".", "view", "(", "N", ")", "\n", "return", "value", "\n", "", "elif", "(", "self", ".", "colorspace", "==", "'Lab'", ")", ":", "\n", "            ", "value", "=", "util", ".", "l2", "(", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in0", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "\n", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in1", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "range", "=", "100.", ")", ".", "astype", "(", "'float'", ")", "\n", "ret_var", "=", "Variable", "(", "torch", ".", "Tensor", "(", "(", "value", ",", ")", ")", ")", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "                ", "ret_var", "=", "ret_var", ".", "cuda", "(", ")", "\n", "", "return", "ret_var", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.DSSIM.forward": [[169, 181], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "lpips.dssim().astype", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "ret_var.cuda.cuda.cuda", "in0.size", "lpips.dssim().astype", "lpips.dssim", "lpips.dssim", "lpips.tensor2im", "lpips.tensor2im", "lpips.tensor2np", "lpips.tensor2np", "lpips.tensor2tensorlab", "lpips.tensor2tensorlab"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.dssim", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.dssim", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2im", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2im", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2np", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2np", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2tensorlab", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2tensorlab"], ["    ", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retPerLayer", "=", "None", ")", ":", "\n", "        ", "assert", "(", "in0", ".", "size", "(", ")", "[", "0", "]", "==", "1", ")", "# currently only supports batchSize 1", "\n", "\n", "if", "(", "self", ".", "colorspace", "==", "'RGB'", ")", ":", "\n", "            ", "value", "=", "util", ".", "dssim", "(", "1.", "*", "util", ".", "tensor2im", "(", "in0", ".", "data", ")", ",", "1.", "*", "util", ".", "tensor2im", "(", "in1", ".", "data", ")", ",", "range", "=", "255.", ")", ".", "astype", "(", "'float'", ")", "\n", "", "elif", "(", "self", ".", "colorspace", "==", "'Lab'", ")", ":", "\n", "            ", "value", "=", "util", ".", "dssim", "(", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in0", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "\n", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in1", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "range", "=", "100.", ")", ".", "astype", "(", "'float'", ")", "\n", "", "ret_var", "=", "Variable", "(", "torch", ".", "Tensor", "(", "(", "value", ",", ")", ")", ")", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "ret_var", "=", "ret_var", ".", "cuda", "(", ")", "\n", "", "return", "ret_var", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.spatial_average": [[17, 19], ["in_tens.mean"], "function", ["None"], ["def", "spatial_average", "(", "in_tens", ",", "keepdim", "=", "True", ")", ":", "\n", "    ", "return", "in_tens", ".", "mean", "(", "[", "2", ",", "3", "]", ",", "keepdim", "=", "keepdim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.upsample": [[20, 25], ["torch.Upsample"], "function", ["None"], ["", "def", "upsample", "(", "in_tens", ",", "out_H", "=", "64", ")", ":", "# assumes scale factor is same for H and W", "\n", "    ", "in_H", "=", "in_tens", ".", "shape", "[", "2", "]", "\n", "scale_factor", "=", "1.", "*", "out_H", "/", "in_H", "\n", "\n", "return", "nn", ".", "Upsample", "(", "scale_factor", "=", "scale_factor", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "(", "in_tens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.print_network": [[182, 188], ["net.parameters", "print", "print", "param.numel"], "function", ["None"], ["", "", "def", "print_network", "(", "net", ")", ":", "\n", "    ", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "'Network'", ",", "net", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.name": [[25, 27], ["None"], "methods", ["None"], ["    ", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.initialize": [[28, 108], ["base_model.BaseModel.initialize", "list", "networks_basic.PNetLin", "dist_model.DistModel.net.parameters", "networks_basic.BCERankingLoss", "list", "torch.optim.Adam", "dist_model.DistModel.net.eval", "dist_model.DistModel.net.to", "torch.nn.DataParallel", "print", "networks_basic.print_network", "print", "os.path.abspath", "print", "dist_model.DistModel.net.load_state_dict", "networks_basic.PNetLin", "dist_model.DistModel.rankLoss.net.parameters", "dist_model.DistModel.rankLoss.to", "os.path.join", "torch.load", "networks_basic.L2", "inspect.getfile", "networks_basic.DSSIM", "ValueError"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.initialize", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.networks_basic.print_network"], ["", "def", "initialize", "(", "self", ",", "model", "=", "'net-lin'", ",", "net", "=", "'alex'", ",", "colorspace", "=", "'Lab'", ",", "pnet_rand", "=", "False", ",", "pnet_tune", "=", "False", ",", "model_path", "=", "None", ",", "\n", "use_gpu", "=", "True", ",", "printNet", "=", "False", ",", "spatial", "=", "False", ",", "\n", "is_train", "=", "False", ",", "lr", "=", ".0001", ",", "beta1", "=", "0.5", ",", "version", "=", "'0.1'", ",", "gpu_ids", "=", "[", "0", "]", ")", ":", "\n", "        ", "'''\n        INPUTS\n            model - ['net-lin'] for linearly calibrated network\n                    ['net'] for off-the-shelf network\n                    ['L2'] for L2 distance in Lab colorspace\n                    ['SSIM'] for ssim in RGB colorspace\n            net - ['squeeze','alex','vgg']\n            model_path - if None, will look in weights/[NET_NAME].pth\n            colorspace - ['Lab','RGB'] colorspace to use for L2 and SSIM\n            use_gpu - bool - whether or not to use a GPU\n            printNet - bool - whether or not to print network architecture out\n            spatial - bool - whether to output an array containing varying distances across spatial dimensions\n            spatial_shape - if given, output spatial shape. if None then spatial shape is determined automatically via spatial_factor (see below).\n            spatial_factor - if given, specifies upsampling factor relative to the largest spatial extent of a convolutional layer. if None then resized to size of input images.\n            spatial_order - spline order of filter for upsampling in spatial mode, by default 1 (bilinear).\n            is_train - bool - [True] for training mode\n            lr - float - initial learning rate\n            beta1 - float - initial momentum term for adam\n            version - 0.1 for latest, 0.0 was original (with a bug)\n            gpu_ids - int array - [0] by default, gpus to use\n        '''", "\n", "BaseModel", ".", "initialize", "(", "self", ",", "use_gpu", "=", "use_gpu", ",", "gpu_ids", "=", "gpu_ids", ")", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "spatial", "=", "spatial", "\n", "self", ".", "gpu_ids", "=", "gpu_ids", "\n", "self", ".", "model_name", "=", "'%s [%s]'", "%", "(", "model", ",", "net", ")", "\n", "\n", "if", "(", "self", ".", "model", "==", "'net-lin'", ")", ":", "# pretrained net + linear layer", "\n", "            ", "self", ".", "net", "=", "networks", ".", "PNetLin", "(", "pnet_rand", "=", "pnet_rand", ",", "pnet_tune", "=", "pnet_tune", ",", "pnet_type", "=", "net", ",", "\n", "use_dropout", "=", "True", ",", "spatial", "=", "spatial", ",", "version", "=", "version", ",", "lpips", "=", "True", ")", "\n", "kw", "=", "{", "}", "\n", "if", "not", "use_gpu", ":", "\n", "                ", "kw", "[", "'map_location'", "]", "=", "'cpu'", "\n", "", "if", "(", "model_path", "is", "None", ")", ":", "\n", "                ", "import", "inspect", "\n", "model_path", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "inspect", ".", "getfile", "(", "self", ".", "initialize", ")", ",", "'..'", ",", "'weights/v%s/%s.pth'", "%", "(", "version", ",", "net", ")", ")", ")", "\n", "\n", "", "if", "(", "not", "is_train", ")", ":", "\n", "                ", "print", "(", "'Loading model from: %s'", "%", "model_path", ")", "\n", "self", ".", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_path", ",", "**", "kw", ")", ",", "strict", "=", "False", ")", "\n", "\n", "", "", "elif", "(", "self", ".", "model", "==", "'net'", ")", ":", "# pretrained network", "\n", "            ", "self", ".", "net", "=", "networks", ".", "PNetLin", "(", "pnet_rand", "=", "pnet_rand", ",", "pnet_type", "=", "net", ",", "lpips", "=", "False", ")", "\n", "", "elif", "(", "self", ".", "model", "in", "[", "'L2'", ",", "'l2'", "]", ")", ":", "\n", "            ", "self", ".", "net", "=", "networks", ".", "L2", "(", "use_gpu", "=", "use_gpu", ",", "colorspace", "=", "colorspace", ")", "# not really a network, only for testing", "\n", "self", ".", "model_name", "=", "'L2'", "\n", "", "elif", "(", "self", ".", "model", "in", "[", "'DSSIM'", ",", "'dssim'", ",", "'SSIM'", ",", "'ssim'", "]", ")", ":", "\n", "            ", "self", ".", "net", "=", "networks", ".", "DSSIM", "(", "use_gpu", "=", "use_gpu", ",", "colorspace", "=", "colorspace", ")", "\n", "self", ".", "model_name", "=", "'SSIM'", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Model [%s] not recognized.\"", "%", "self", ".", "model", ")", "\n", "\n", "", "self", ".", "parameters", "=", "list", "(", "self", ".", "net", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "# training mode", "\n", "# extra network on top to go from distances (d0,d1) => predicted human judgment (h*)", "\n", "            ", "self", ".", "rankLoss", "=", "networks", ".", "BCERankingLoss", "(", ")", "\n", "self", ".", "parameters", "+=", "list", "(", "self", ".", "rankLoss", ".", "net", ".", "parameters", "(", ")", ")", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "old_lr", "=", "lr", "\n", "self", ".", "optimizer_net", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", ",", "lr", "=", "lr", ",", "betas", "=", "(", "beta1", ",", "0.999", ")", ")", "\n", "", "else", ":", "# test mode", "\n", "            ", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n", "", "if", "(", "use_gpu", ")", ":", "\n", "            ", "self", ".", "net", ".", "to", "(", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "net", "=", "torch", ".", "nn", ".", "DataParallel", "(", "self", ".", "net", ",", "device_ids", "=", "gpu_ids", ")", "\n", "if", "(", "self", ".", "is_train", ")", ":", "\n", "                ", "self", ".", "rankLoss", "=", "self", ".", "rankLoss", ".", "to", "(", "device", "=", "gpu_ids", "[", "0", "]", ")", "# just put this on GPU0", "\n", "\n", "", "", "if", "(", "printNet", ")", ":", "\n", "            ", "print", "(", "'---------- Networks initialized -------------'", ")", "\n", "networks", ".", "print_network", "(", "self", ".", "net", ")", "\n", "print", "(", "'-----------------------------------------------'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.forward": [[109, 118], ["dist_model.DistModel.net.forward"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.forward"], ["", "", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retPerLayer", "=", "False", ")", ":", "\n", "        ", "''' Function computes the distance between image patches in0 and in1\n        INPUTS\n            in0, in1 - torch.Tensor object of shape Nx3xXxY - image patch scaled to [-1,1]\n        OUTPUT\n            computed distances between in0 and in1\n        '''", "\n", "\n", "return", "self", ".", "net", ".", "forward", "(", "in0", ",", "in1", ",", "retPerLayer", "=", "retPerLayer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.optimize_parameters": [[120, 126], ["dist_model.DistModel.forward_train", "dist_model.DistModel.optimizer_net.zero_grad", "dist_model.DistModel.backward_train", "dist_model.DistModel.optimizer_net.step", "dist_model.DistModel.clamp_weights"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.forward_train", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.backward_train", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.clamp_weights"], ["", "def", "optimize_parameters", "(", "self", ")", ":", "\n", "        ", "self", ".", "forward_train", "(", ")", "\n", "self", ".", "optimizer_net", ".", "zero_grad", "(", ")", "\n", "self", ".", "backward_train", "(", ")", "\n", "self", ".", "optimizer_net", ".", "step", "(", ")", "\n", "self", ".", "clamp_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.clamp_weights": [[127, 131], ["dist_model.DistModel.net.modules", "hasattr", "torch.clamp"], "methods", ["None"], ["", "def", "clamp_weights", "(", "self", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "net", ".", "modules", "(", ")", ":", "\n", "            ", "if", "(", "hasattr", "(", "module", ",", "'weight'", ")", "and", "module", ".", "kernel_size", "==", "(", "1", ",", "1", ")", ")", ":", "\n", "                ", "module", ".", "weight", ".", "data", "=", "torch", ".", "clamp", "(", "module", ".", "weight", ".", "data", ",", "min", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.set_input": [[132, 147], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "dist_model.DistModel.input_ref.to", "dist_model.DistModel.input_p0.to", "dist_model.DistModel.input_p1.to", "dist_model.DistModel.input_judge.to"], "methods", ["None"], ["", "", "", "def", "set_input", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "input_ref", "=", "data", "[", "'ref'", "]", "\n", "self", ".", "input_p0", "=", "data", "[", "'p0'", "]", "\n", "self", ".", "input_p1", "=", "data", "[", "'p1'", "]", "\n", "self", ".", "input_judge", "=", "data", "[", "'judge'", "]", "\n", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "self", ".", "input_ref", "=", "self", ".", "input_ref", ".", "to", "(", "device", "=", "self", ".", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "input_p0", "=", "self", ".", "input_p0", ".", "to", "(", "device", "=", "self", ".", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "input_p1", "=", "self", ".", "input_p1", ".", "to", "(", "device", "=", "self", ".", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "input_judge", "=", "self", ".", "input_judge", ".", "to", "(", "device", "=", "self", ".", "gpu_ids", "[", "0", "]", ")", "\n", "\n", "", "self", ".", "var_ref", "=", "Variable", "(", "self", ".", "input_ref", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "var_p0", "=", "Variable", "(", "self", ".", "input_p0", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "var_p1", "=", "Variable", "(", "self", ".", "input_p1", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.forward_train": [[148, 161], ["dist_model.DistModel.forward", "dist_model.DistModel.forward", "dist_model.DistModel.compute_accuracy", "torch.autograd.Variable().view", "dist_model.DistModel.rankLoss.forward", "dist_model.DistModel.d0.size", "torch.autograd.Variable"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.forward", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.compute_accuracy", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.forward"], ["", "def", "forward_train", "(", "self", ")", ":", "# run forward pass", "\n", "# print(self.net.module.scaling_layer.shift)", "\n", "# print(torch.norm(self.net.module.net.slice1[0].weight).item(), torch.norm(self.net.module.lin0.model[1].weight).item())", "\n", "\n", "        ", "self", ".", "d0", "=", "self", ".", "forward", "(", "self", ".", "var_ref", ",", "self", ".", "var_p0", ")", "\n", "self", ".", "d1", "=", "self", ".", "forward", "(", "self", ".", "var_ref", ",", "self", ".", "var_p1", ")", "\n", "self", ".", "acc_r", "=", "self", ".", "compute_accuracy", "(", "self", ".", "d0", ",", "self", ".", "d1", ",", "self", ".", "input_judge", ")", "\n", "\n", "self", ".", "var_judge", "=", "Variable", "(", "1.", "*", "self", ".", "input_judge", ")", ".", "view", "(", "self", ".", "d0", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "loss_total", "=", "self", ".", "rankLoss", ".", "forward", "(", "self", ".", "d0", ",", "self", ".", "d1", ",", "self", ".", "var_judge", "*", "2.", "-", "1.", ")", "\n", "\n", "return", "self", ".", "loss_total", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.backward_train": [[162, 164], ["torch.mean().backward", "torch.mean"], "methods", ["None"], ["", "def", "backward_train", "(", "self", ")", ":", "\n", "        ", "torch", ".", "mean", "(", "self", ".", "loss_total", ")", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.compute_accuracy": [[165, 170], ["judge.cpu().numpy().flatten", "judge.cpu().numpy", "judge.cpu"], "methods", ["None"], ["", "def", "compute_accuracy", "(", "self", ",", "d0", ",", "d1", ",", "judge", ")", ":", "\n", "        ", "''' d0, d1 are Variables, judge is a Tensor '''", "\n", "d1_lt_d0", "=", "(", "d1", "<", "d0", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "flatten", "(", ")", "\n", "judge_per", "=", "judge", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", "\n", "return", "d1_lt_d0", "*", "judge_per", "+", "(", "1", "-", "d1_lt_d0", ")", "*", "(", "1", "-", "judge_per", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.get_current_errors": [[171, 179], ["collections.OrderedDict", "collections.OrderedDict.keys", "numpy.mean", "dist_model.DistModel.loss_total.data.cpu().numpy", "dist_model.DistModel.loss_total.data.cpu"], "methods", ["None"], ["", "def", "get_current_errors", "(", "self", ")", ":", "\n", "        ", "retDict", "=", "OrderedDict", "(", "[", "(", "'loss_total'", ",", "self", ".", "loss_total", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "\n", "(", "'acc_r'", ",", "self", ".", "acc_r", ")", "]", ")", "\n", "\n", "for", "key", "in", "retDict", ".", "keys", "(", ")", ":", "\n", "            ", "retDict", "[", "key", "]", "=", "np", ".", "mean", "(", "retDict", "[", "key", "]", ")", "\n", "\n", "", "return", "retDict", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.get_current_visuals": [[180, 194], ["lpips.tensor2im", "lpips.tensor2im", "lpips.tensor2im", "scipy.ndimage.zoom", "scipy.ndimage.zoom", "scipy.ndimage.zoom", "collections.OrderedDict", "dist_model.DistModel.var_ref.data.size"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2im", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2im", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2im"], ["", "def", "get_current_visuals", "(", "self", ")", ":", "\n", "        ", "zoom_factor", "=", "256", "/", "self", ".", "var_ref", ".", "data", ".", "size", "(", ")", "[", "2", "]", "\n", "\n", "ref_img", "=", "util", ".", "tensor2im", "(", "self", ".", "var_ref", ".", "data", ")", "\n", "p0_img", "=", "util", ".", "tensor2im", "(", "self", ".", "var_p0", ".", "data", ")", "\n", "p1_img", "=", "util", ".", "tensor2im", "(", "self", ".", "var_p1", ".", "data", ")", "\n", "\n", "ref_img_vis", "=", "zoom", "(", "ref_img", ",", "[", "zoom_factor", ",", "zoom_factor", ",", "1", "]", ",", "order", "=", "0", ")", "\n", "p0_img_vis", "=", "zoom", "(", "p0_img", ",", "[", "zoom_factor", ",", "zoom_factor", ",", "1", "]", ",", "order", "=", "0", ")", "\n", "p1_img_vis", "=", "zoom", "(", "p1_img", ",", "[", "zoom_factor", ",", "zoom_factor", ",", "1", "]", ",", "order", "=", "0", ")", "\n", "\n", "return", "OrderedDict", "(", "[", "(", "'ref'", ",", "ref_img_vis", ")", ",", "\n", "(", "'p0'", ",", "p0_img_vis", ")", ",", "\n", "(", "'p1'", ",", "p1_img_vis", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.save": [[195, 201], ["dist_model.DistModel.save_network", "dist_model.DistModel.save_network", "dist_model.DistModel.save_network"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save_network", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save_network", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save_network"], ["", "def", "save", "(", "self", ",", "path", ",", "label", ")", ":", "\n", "        ", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "self", ".", "save_network", "(", "self", ".", "net", ".", "module", ",", "path", ",", "''", ",", "label", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "save_network", "(", "self", ".", "net", ",", "path", ",", "''", ",", "label", ")", "\n", "", "self", ".", "save_network", "(", "self", ".", "rankLoss", ".", "net", ",", "path", ",", "'rank'", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.DistModel.update_learning_rate": [[202, 211], ["print"], "methods", ["None"], ["", "def", "update_learning_rate", "(", "self", ",", "nepoch_decay", ")", ":", "\n", "        ", "lrd", "=", "self", ".", "lr", "/", "nepoch_decay", "\n", "lr", "=", "self", ".", "old_lr", "-", "lrd", "\n", "\n", "for", "param_group", "in", "self", ".", "optimizer_net", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n", "", "print", "(", "'update lr [%s] decay: %f -> %f'", "%", "(", "type", ",", "self", ".", "old_lr", ",", "lr", ")", ")", "\n", "self", ".", "old_lr", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.score_2afc_dataset": [[212, 246], ["tqdm.tqdm", "numpy.array", "numpy.array", "numpy.array", "data_loader.load_data", "func().data.cpu().numpy().flatten().tolist", "func().data.cpu().numpy().flatten().tolist", "data[].cpu().numpy().flatten().tolist", "numpy.mean", "dict", "func().data.cpu().numpy().flatten", "func().data.cpu().numpy().flatten", "data[].cpu().numpy().flatten", "func().data.cpu().numpy", "func().data.cpu().numpy", "data[].cpu().numpy", "func().data.cpu", "func().data.cpu", "data[].cpu", "func", "func"], "function", ["None"], ["", "", "def", "score_2afc_dataset", "(", "data_loader", ",", "func", ",", "name", "=", "''", ")", ":", "\n", "    ", "''' Function computes Two Alternative Forced Choice (2AFC) score using\n        distance function 'func' in dataset 'data_loader'\n    INPUTS\n        data_loader - CustomDatasetDataLoader object - contains a TwoAFCDataset inside\n        func - callable distance function - calling d=func(in0,in1) should take 2\n            pytorch tensors with shape Nx3xXxY, and return numpy array of length N\n    OUTPUTS\n        [0] - 2AFC score in [0,1], fraction of time func agrees with human evaluators\n        [1] - dictionary with following elements\n            d0s,d1s - N arrays containing distances between reference patch to perturbed patches \n            gts - N array in [0,1], preferred patch selected by human evaluators\n                (closer to \"0\" for left patch p0, \"1\" for right patch p1,\n                \"0.6\" means 60pct people preferred right patch, 40pct preferred left)\n            scores - N array in [0,1], corresponding to what percentage function agreed with humans\n    CONSTS\n        N - number of test triplets in data_loader\n    '''", "\n", "\n", "d0s", "=", "[", "]", "\n", "d1s", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "\n", "for", "data", "in", "tqdm", "(", "data_loader", ".", "load_data", "(", ")", ",", "desc", "=", "name", ")", ":", "\n", "        ", "d0s", "+=", "func", "(", "data", "[", "'ref'", "]", ",", "data", "[", "'p0'", "]", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "d1s", "+=", "func", "(", "data", "[", "'ref'", "]", ",", "data", "[", "'p1'", "]", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "gts", "+=", "data", "[", "'judge'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "", "d0s", "=", "np", ".", "array", "(", "d0s", ")", "\n", "d1s", "=", "np", ".", "array", "(", "d1s", ")", "\n", "gts", "=", "np", ".", "array", "(", "gts", ")", "\n", "scores", "=", "(", "d0s", "<", "d1s", ")", "*", "(", "1.", "-", "gts", ")", "+", "(", "d1s", "<", "d0s", ")", "*", "gts", "+", "(", "d1s", "==", "d0s", ")", "*", ".5", "\n", "\n", "return", "(", "np", ".", "mean", "(", "scores", ")", ",", "dict", "(", "d0s", "=", "d0s", ",", "d1s", "=", "d1s", ",", "gts", "=", "gts", ",", "scores", "=", "scores", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.dist_model.score_jnd_dataset": [[247, 285], ["tqdm.tqdm", "numpy.array", "numpy.array", "numpy.argsort", "numpy.cumsum", "numpy.cumsum", "lpips.voc_ap", "data_loader.load_data", "func().data.cpu().numpy().tolist", "data[].cpu().numpy().flatten().tolist", "numpy.sum", "dict", "func().data.cpu().numpy", "data[].cpu().numpy().flatten", "func().data.cpu", "data[].cpu().numpy", "data[].cpu", "func"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.voc_ap"], ["", "def", "score_jnd_dataset", "(", "data_loader", ",", "func", ",", "name", "=", "''", ")", ":", "\n", "    ", "''' Function computes JND score using distance function 'func' in dataset 'data_loader'\n    INPUTS\n        data_loader - CustomDatasetDataLoader object - contains a JNDDataset inside\n        func - callable distance function - calling d=func(in0,in1) should take 2\n            pytorch tensors with shape Nx3xXxY, and return pytorch array of length N\n    OUTPUTS\n        [0] - JND score in [0,1], mAP score (area under precision-recall curve)\n        [1] - dictionary with following elements\n            ds - N array containing distances between two patches shown to human evaluator\n            sames - N array containing fraction of people who thought the two patches were identical\n    CONSTS\n        N - number of test triplets in data_loader\n    '''", "\n", "\n", "ds", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "\n", "for", "data", "in", "tqdm", "(", "data_loader", ".", "load_data", "(", ")", ",", "desc", "=", "name", ")", ":", "\n", "        ", "ds", "+=", "func", "(", "data", "[", "'p0'", "]", ",", "data", "[", "'p1'", "]", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "gts", "+=", "data", "[", "'same'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "", "sames", "=", "np", ".", "array", "(", "gts", ")", "\n", "ds", "=", "np", ".", "array", "(", "ds", ")", "\n", "\n", "sorted_inds", "=", "np", ".", "argsort", "(", "ds", ")", "\n", "ds_sorted", "=", "ds", "[", "sorted_inds", "]", "\n", "sames_sorted", "=", "sames", "[", "sorted_inds", "]", "\n", "\n", "TPs", "=", "np", ".", "cumsum", "(", "sames_sorted", ")", "\n", "FPs", "=", "np", ".", "cumsum", "(", "1", "-", "sames_sorted", ")", "\n", "FNs", "=", "np", ".", "sum", "(", "sames_sorted", ")", "-", "TPs", "\n", "\n", "precs", "=", "TPs", "/", "(", "TPs", "+", "FPs", ")", "\n", "recs", "=", "TPs", "/", "(", "TPs", "+", "FNs", ")", "\n", "score", "=", "util", ".", "voc_ap", "(", "recs", ",", "precs", ")", "\n", "\n", "return", "(", "score", ",", "dict", "(", "ds", "=", "ds", ",", "sames", "=", "sames", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.pretrained_networks.squeezenet.__init__": [[7, 35], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "range", "range", "range", "torchvision.models.squeezenet1_1", "pretrained_networks.squeezenet.slice1.add_module", "pretrained_networks.squeezenet.slice2.add_module", "pretrained_networks.squeezenet.slice3.add_module", "pretrained_networks.squeezenet.slice4.add_module", "pretrained_networks.squeezenet.slice5.add_module", "pretrained_networks.squeezenet.slice6.add_module", "pretrained_networks.squeezenet.slice7.add_module", "pretrained_networks.squeezenet.parameters", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "squeezenet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "pretrained_features", "=", "tv", ".", "squeezenet1_1", "(", "pretrained", "=", "pretrained", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice6", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice7", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "N_slices", "=", "7", "\n", "for", "x", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "2", ",", "5", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "5", ",", "8", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "8", ",", "10", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "10", ",", "11", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "11", ",", "12", ")", ":", "\n", "            ", "self", ".", "slice6", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "12", ",", "13", ")", ":", "\n", "            ", "self", ".", "slice7", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.pretrained_networks.squeezenet.forward": [[36, 55], ["pretrained_networks.squeezenet.slice1", "pretrained_networks.squeezenet.slice2", "pretrained_networks.squeezenet.slice3", "pretrained_networks.squeezenet.slice4", "pretrained_networks.squeezenet.slice5", "pretrained_networks.squeezenet.slice6", "pretrained_networks.squeezenet.slice7", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu1", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4", "=", "h", "\n", "h", "=", "self", ".", "slice5", "(", "h", ")", "\n", "h_relu5", "=", "h", "\n", "h", "=", "self", ".", "slice6", "(", "h", ")", "\n", "h_relu6", "=", "h", "\n", "h", "=", "self", ".", "slice7", "(", "h", ")", "\n", "h_relu7", "=", "h", "\n", "vgg_outputs", "=", "namedtuple", "(", "\"SqueezeOutputs\"", ",", "[", "'relu1'", ",", "'relu2'", ",", "'relu3'", ",", "'relu4'", ",", "'relu5'", ",", "'relu6'", ",", "'relu7'", "]", ")", "\n", "out", "=", "vgg_outputs", "(", "h_relu1", ",", "h_relu2", ",", "h_relu3", ",", "h_relu4", ",", "h_relu5", ",", "h_relu6", ",", "h_relu7", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.pretrained_networks.alexnet.__init__": [[58, 80], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "range", "torchvision.models.alexnet", "pretrained_networks.alexnet.slice1.add_module", "pretrained_networks.alexnet.slice2.add_module", "pretrained_networks.alexnet.slice3.add_module", "pretrained_networks.alexnet.slice4.add_module", "pretrained_networks.alexnet.slice5.add_module", "pretrained_networks.alexnet.parameters", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "alexnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "alexnet_pretrained_features", "=", "tv", ".", "alexnet", "(", "pretrained", "=", "pretrained", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "N_slices", "=", "5", "\n", "for", "x", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "2", ",", "5", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "5", ",", "8", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "8", ",", "10", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "10", ",", "12", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.pretrained_networks.alexnet.forward": [[81, 96], ["pretrained_networks.alexnet.slice1", "pretrained_networks.alexnet.slice2", "pretrained_networks.alexnet.slice3", "pretrained_networks.alexnet.slice4", "pretrained_networks.alexnet.slice5", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu1", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4", "=", "h", "\n", "h", "=", "self", ".", "slice5", "(", "h", ")", "\n", "h_relu5", "=", "h", "\n", "alexnet_outputs", "=", "namedtuple", "(", "\"AlexnetOutputs\"", ",", "[", "'relu1'", ",", "'relu2'", ",", "'relu3'", ",", "'relu4'", ",", "'relu5'", "]", ")", "\n", "out", "=", "alexnet_outputs", "(", "h_relu1", ",", "h_relu2", ",", "h_relu3", ",", "h_relu4", ",", "h_relu5", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.pretrained_networks.vgg16.__init__": [[98, 120], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "range", "torchvision.models.vgg16", "pretrained_networks.vgg16.slice1.add_module", "pretrained_networks.vgg16.slice2.add_module", "pretrained_networks.vgg16.slice3.add_module", "pretrained_networks.vgg16.slice4.add_module", "pretrained_networks.vgg16.slice5.add_module", "pretrained_networks.vgg16.parameters", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "vgg16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_pretrained_features", "=", "tv", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "N_slices", "=", "5", "\n", "for", "x", "in", "range", "(", "4", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "4", ",", "9", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "9", ",", "16", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "16", ",", "23", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "23", ",", "30", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.pretrained_networks.vgg16.forward": [[121, 136], ["pretrained_networks.vgg16.slice1", "pretrained_networks.vgg16.slice2", "pretrained_networks.vgg16.slice3", "pretrained_networks.vgg16.slice4", "pretrained_networks.vgg16.slice5", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu1_2", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2_2", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3_3", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4_3", "=", "h", "\n", "h", "=", "self", ".", "slice5", "(", "h", ")", "\n", "h_relu5_3", "=", "h", "\n", "vgg_outputs", "=", "namedtuple", "(", "\"VggOutputs\"", ",", "[", "'relu1_2'", ",", "'relu2_2'", ",", "'relu3_3'", ",", "'relu4_3'", ",", "'relu5_3'", "]", ")", "\n", "out", "=", "vgg_outputs", "(", "h_relu1_2", ",", "h_relu2_2", ",", "h_relu3_3", ",", "h_relu4_3", ",", "h_relu5_3", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.pretrained_networks.resnet.__init__": [[140, 162], ["super().__init__", "torchvision.models.resnet18", "torchvision.models.resnet34", "torchvision.models.resnet50", "torchvision.models.resnet101", "torchvision.models.resnet152"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ",", "num", "=", "18", ")", ":", "\n", "        ", "super", "(", "resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "(", "num", "==", "18", ")", ":", "\n", "            ", "self", ".", "net", "=", "tv", ".", "resnet18", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "34", ")", ":", "\n", "            ", "self", ".", "net", "=", "tv", ".", "resnet34", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "50", ")", ":", "\n", "            ", "self", ".", "net", "=", "tv", ".", "resnet50", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "101", ")", ":", "\n", "            ", "self", ".", "net", "=", "tv", ".", "resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "152", ")", ":", "\n", "            ", "self", ".", "net", "=", "tv", ".", "resnet152", "(", "pretrained", "=", "pretrained", ")", "\n", "", "self", ".", "N_slices", "=", "5", "\n", "\n", "self", ".", "conv1", "=", "self", ".", "net", ".", "conv1", "\n", "self", ".", "bn1", "=", "self", ".", "net", ".", "bn1", "\n", "self", ".", "relu", "=", "self", ".", "net", ".", "relu", "\n", "self", ".", "maxpool", "=", "self", ".", "net", ".", "maxpool", "\n", "self", ".", "layer1", "=", "self", ".", "net", ".", "layer1", "\n", "self", ".", "layer2", "=", "self", ".", "net", ".", "layer2", "\n", "self", ".", "layer3", "=", "self", ".", "net", ".", "layer3", "\n", "self", ".", "layer4", "=", "self", ".", "net", ".", "layer4", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.pretrained_networks.resnet.forward": [[163, 182], ["pretrained_networks.resnet.conv1", "pretrained_networks.resnet.bn1", "pretrained_networks.resnet.relu", "pretrained_networks.resnet.maxpool", "pretrained_networks.resnet.layer1", "pretrained_networks.resnet.layer2", "pretrained_networks.resnet.layer3", "pretrained_networks.resnet.layer4", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "conv1", "(", "X", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ")", "\n", "h", "=", "self", ".", "relu", "(", "h", ")", "\n", "h_relu1", "=", "h", "\n", "h", "=", "self", ".", "maxpool", "(", "h", ")", "\n", "h", "=", "self", ".", "layer1", "(", "h", ")", "\n", "h_conv2", "=", "h", "\n", "h", "=", "self", ".", "layer2", "(", "h", ")", "\n", "h_conv3", "=", "h", "\n", "h", "=", "self", ".", "layer3", "(", "h", ")", "\n", "h_conv4", "=", "h", "\n", "h", "=", "self", ".", "layer4", "(", "h", ")", "\n", "h_conv5", "=", "h", "\n", "\n", "outputs", "=", "namedtuple", "(", "\"Outputs\"", ",", "[", "'relu1'", ",", "'conv2'", ",", "'conv3'", ",", "'conv4'", ",", "'conv5'", "]", ")", "\n", "out", "=", "outputs", "(", "h_relu1", ",", "h_conv2", ",", "h_conv3", ",", "h_conv4", ",", "h_conv5", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.PerceptualLoss.__init__": [[14, 25], ["super().__init__", "print", "lpips.dist_model.DistModel", "__init__.PerceptualLoss.model.initialize", "print", "print", "__init__.PerceptualLoss.model.name"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.initialize", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.name"], ["    ", "def", "__init__", "(", "self", ",", "model", "=", "'net-lin'", ",", "net", "=", "'alex'", ",", "colorspace", "=", "'rgb'", ",", "spatial", "=", "False", ",", "use_gpu", "=", "True", ",", "gpu_ids", "=", "[", "0", "]", ")", ":", "# VGG using our perceptually-learned weights (LPIPS metric)", "\n", "# def __init__(self, model='net', net='vgg', use_gpu=True): # \"default\" way of using VGG as a perceptual loss", "\n", "        ", "super", "(", "PerceptualLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'Setting up Perceptual loss...'", ")", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "spatial", "=", "spatial", "\n", "self", ".", "gpu_ids", "=", "gpu_ids", "\n", "self", ".", "model", "=", "dist_model", ".", "DistModel", "(", ")", "\n", "self", ".", "model", ".", "initialize", "(", "model", "=", "model", ",", "net", "=", "net", ",", "use_gpu", "=", "use_gpu", ",", "colorspace", "=", "colorspace", ",", "spatial", "=", "self", ".", "spatial", ",", "gpu_ids", "=", "gpu_ids", ")", "\n", "print", "(", "'...[%s] initialized'", "%", "self", ".", "model", ".", "name", "(", ")", ")", "\n", "print", "(", "'...Done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.PerceptualLoss.forward": [[26, 41], ["__init__.PerceptualLoss.model.forward"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.forward"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Pred and target are Variables.\n        If normalize is True, assumes the images are between [0,1] and then scales them between [-1,+1]\n        If normalize is False, assumes the images are already between [-1,+1]\n\n        Inputs pred and target are Nx3xHxW\n        Output pytorch Variable N long\n        \"\"\"", "\n", "\n", "if", "normalize", ":", "\n", "            ", "target", "=", "2", "*", "target", "-", "1", "\n", "pred", "=", "2", "*", "pred", "-", "1", "\n", "\n", "", "return", "self", ".", "model", ".", "forward", "(", "target", ",", "pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.normalize_tensor": [[42, 45], ["torch.sqrt", "torch.sum"], "function", ["None"], ["", "", "def", "normalize_tensor", "(", "in_feat", ",", "eps", "=", "1e-10", ")", ":", "\n", "    ", "norm_factor", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "in_feat", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "return", "in_feat", "/", "(", "norm_factor", "+", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.l2": [[46, 48], ["numpy.mean"], "function", ["None"], ["", "def", "l2", "(", "p0", ",", "p1", ",", "range", "=", "255.", ")", ":", "\n", "    ", "return", ".5", "*", "np", ".", "mean", "(", "(", "p0", "/", "range", "-", "p1", "/", "range", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.psnr": [[49, 51], ["numpy.log10", "numpy.mean"], "function", ["None"], ["", "def", "psnr", "(", "p0", ",", "p1", ",", "peak", "=", "255.", ")", ":", "\n", "    ", "return", "10", "*", "np", ".", "log10", "(", "peak", "**", "2", "/", "np", ".", "mean", "(", "(", "1.", "*", "p0", "-", "1.", "*", "p1", ")", "**", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.dssim": [[52, 54], ["skimage.measure.compare_ssim"], "function", ["None"], ["", "def", "dssim", "(", "p0", ",", "p1", ",", "range", "=", "255.", ")", ":", "\n", "    ", "return", "(", "1", "-", "compare_ssim", "(", "p0", ",", "p1", ",", "data_range", "=", "range", ",", "multichannel", "=", "True", ")", ")", "/", "2.", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.rgb2lab": [[102, 105], ["color.rgb2lab"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.rgb2lab"], ["", "", "def", "rgb2lab", "(", "input", ")", ":", "\n", "    ", "from", "skimage", "import", "color", "\n", "return", "color", ".", "rgb2lab", "(", "input", "/", "255.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2np": [[62, 65], ["tensor_obj[].cpu().float().numpy().transpose", "tensor_obj[].cpu().float().numpy", "tensor_obj[].cpu().float", "tensor_obj[].cpu"], "function", ["None"], ["", "def", "tensor2np", "(", "tensor_obj", ")", ":", "\n", "# change dimension of a tensor object into a numpy array", "\n", "    ", "return", "tensor_obj", "[", "0", "]", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.np2tensor": [[66, 69], ["torch.Tensor", "np_obj[].transpose"], "function", ["None"], ["", "def", "np2tensor", "(", "np_obj", ")", ":", "\n", "# change dimenion of np array into tensor array", "\n", "    ", "return", "torch", ".", "Tensor", "(", "np_obj", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ".", "transpose", "(", "(", "3", ",", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2tensorlab": [[70, 83], ["__init__.tensor2im", "color.rgb2lab", "__init__.np2tensor"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2im", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.rgb2lab", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.np2tensor"], ["", "def", "tensor2tensorlab", "(", "image_tensor", ",", "to_norm", "=", "True", ",", "mc_only", "=", "False", ")", ":", "\n", "# image tensor to lab tensor", "\n", "    ", "from", "skimage", "import", "color", "\n", "\n", "img", "=", "tensor2im", "(", "image_tensor", ")", "\n", "img_lab", "=", "color", ".", "rgb2lab", "(", "img", ")", "\n", "if", "(", "mc_only", ")", ":", "\n", "        ", "img_lab", "[", ":", ",", ":", ",", "0", "]", "=", "img_lab", "[", ":", ",", ":", ",", "0", "]", "-", "50", "\n", "", "if", "(", "to_norm", "and", "not", "mc_only", ")", ":", "\n", "        ", "img_lab", "[", ":", ",", ":", ",", "0", "]", "=", "img_lab", "[", ":", ",", ":", ",", "0", "]", "-", "50", "\n", "img_lab", "=", "img_lab", "/", "100.", "\n", "\n", "", "return", "np2tensor", "(", "img_lab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensorlab2tensor": [[84, 101], ["warnings.filterwarnings", "__init__.tensor2np", "numpy.clip", "color.rgb2lab", "__init__.np2tensor", "__init__.im2tensor", "color.lab2rgb", "rgb_back.astype", "numpy.isclose", "__init__.im2tensor", "lab.astype", "numpy.prod"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2np", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.rgb2lab", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.np2tensor", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.im2tensor", "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.im2tensor"], ["", "def", "tensorlab2tensor", "(", "lab_tensor", ",", "return_inbnd", "=", "False", ")", ":", "\n", "    ", "from", "skimage", "import", "color", "\n", "import", "warnings", "\n", "warnings", ".", "filterwarnings", "(", "\"ignore\"", ")", "\n", "\n", "lab", "=", "tensor2np", "(", "lab_tensor", ")", "*", "100.", "\n", "lab", "[", ":", ",", ":", ",", "0", "]", "=", "lab", "[", ":", ",", ":", ",", "0", "]", "+", "50", "\n", "\n", "rgb_back", "=", "255.", "*", "np", ".", "clip", "(", "color", ".", "lab2rgb", "(", "lab", ".", "astype", "(", "'float'", ")", ")", ",", "0", ",", "1", ")", "\n", "if", "(", "return_inbnd", ")", ":", "\n", "# convert back to lab, see if we match", "\n", "        ", "lab_back", "=", "color", ".", "rgb2lab", "(", "rgb_back", ".", "astype", "(", "'uint8'", ")", ")", "\n", "mask", "=", "1.", "*", "np", ".", "isclose", "(", "lab_back", ",", "lab", ",", "atol", "=", "2.", ")", "\n", "mask", "=", "np2tensor", "(", "np", ".", "prod", "(", "mask", ",", "axis", "=", "2", ")", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", "\n", "return", "(", "im2tensor", "(", "rgb_back", ")", ",", "mask", ")", "\n", "", "else", ":", "\n", "        ", "return", "im2tensor", "(", "rgb_back", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2im": [[151, 156], ["image_tensor[].cpu().float().numpy", "image_tensor[].cpu().float().numpy.astype", "image_tensor[].cpu().float", "numpy.transpose", "image_tensor[].cpu"], "function", ["None"], ["", "def", "tensor2im", "(", "image_tensor", ",", "imtype", "=", "np", ".", "uint8", ",", "cent", "=", "1.", ",", "factor", "=", "255.", "/", "2.", ")", ":", "\n", "# def tensor2im(image_tensor, imtype=np.uint8, cent=1., factor=1.):", "\n", "    ", "image_numpy", "=", "image_tensor", "[", "0", "]", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", "\n", "image_numpy", "=", "(", "np", ".", "transpose", "(", "image_numpy", ",", "(", "1", ",", "2", ",", "0", ")", ")", "+", "cent", ")", "*", "factor", "\n", "return", "image_numpy", ".", "astype", "(", "imtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.im2tensor": [[157, 161], ["torch.Tensor", "[].transpose"], "function", ["None"], ["", "def", "im2tensor", "(", "image", ",", "imtype", "=", "np", ".", "uint8", ",", "cent", "=", "1.", ",", "factor", "=", "255.", "/", "2.", ")", ":", "\n", "# def im2tensor(image, imtype=np.uint8, cent=1., factor=1.):", "\n", "    ", "return", "torch", ".", "Tensor", "(", "(", "image", "/", "factor", "-", "cent", ")", "\n", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ".", "transpose", "(", "(", "3", ",", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.tensor2vec": [[115, 117], ["vector_tensor.data.cpu().numpy", "vector_tensor.data.cpu"], "function", ["None"], ["", "def", "tensor2vec", "(", "vector_tensor", ")", ":", "\n", "    ", "return", "vector_tensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", ":", ",", "0", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.__init__.voc_ap": [[118, 150], ["numpy.arange", "numpy.concatenate", "numpy.concatenate", "range", "numpy.sum", "numpy.maximum", "numpy.where", "numpy.sum", "numpy.max"], "function", ["None"], ["", "def", "voc_ap", "(", "rec", ",", "prec", ",", "use_07_metric", "=", "False", ")", ":", "\n", "    ", "\"\"\" ap = voc_ap(rec, prec, [use_07_metric])\n    Compute VOC AP given precision and recall.\n    If use_07_metric is true, uses the\n    VOC 07 11 point method (default:False).\n    \"\"\"", "\n", "if", "use_07_metric", ":", "\n", "# 11 point metric", "\n", "        ", "ap", "=", "0.", "\n", "for", "t", "in", "np", ".", "arange", "(", "0.", ",", "1.1", ",", "0.1", ")", ":", "\n", "            ", "if", "np", ".", "sum", "(", "rec", ">=", "t", ")", "==", "0", ":", "\n", "                ", "p", "=", "0", "\n", "", "else", ":", "\n", "                ", "p", "=", "np", ".", "max", "(", "prec", "[", "rec", ">=", "t", "]", ")", "\n", "", "ap", "=", "ap", "+", "p", "/", "11.", "\n", "", "", "else", ":", "\n", "# correct AP calculation", "\n", "# first append sentinel values at the end", "\n", "        ", "mrec", "=", "np", ".", "concatenate", "(", "(", "[", "0.", "]", ",", "rec", ",", "[", "1.", "]", ")", ")", "\n", "mpre", "=", "np", ".", "concatenate", "(", "(", "[", "0.", "]", ",", "prec", ",", "[", "0.", "]", ")", ")", "\n", "\n", "# compute the precision envelope", "\n", "for", "i", "in", "range", "(", "mpre", ".", "size", "-", "1", ",", "0", ",", "-", "1", ")", ":", "\n", "            ", "mpre", "[", "i", "-", "1", "]", "=", "np", ".", "maximum", "(", "mpre", "[", "i", "-", "1", "]", ",", "mpre", "[", "i", "]", ")", "\n", "\n", "# to calculate area under PR curve, look for points", "\n", "# where X axis (recall) changes value", "\n", "", "i", "=", "np", ".", "where", "(", "mrec", "[", "1", ":", "]", "!=", "mrec", "[", ":", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "# and sum (\\Delta recall) * prec", "\n", "ap", "=", "np", ".", "sum", "(", "(", "mrec", "[", "i", "+", "1", "]", "-", "mrec", "[", "i", "]", ")", "*", "mpre", "[", "i", "+", "1", "]", ")", "\n", "", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.__init__": [[8, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", ";", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.name": [[11, 13], ["None"], "methods", ["None"], ["", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'BaseModel'", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.initialize": [[14, 17], ["None"], "methods", ["None"], ["", "def", "initialize", "(", "self", ",", "use_gpu", "=", "True", ",", "gpu_ids", "=", "[", "0", "]", ")", ":", "\n", "        ", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "gpu_ids", "=", "gpu_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.forward": [[18, 20], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.get_image_paths": [[52, 54], ["None"], "methods", ["None"], ["", "def", "get_image_paths", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "image_paths", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.optimize_parameters": [[24, 26], ["None"], "methods", ["None"], ["", "def", "optimize_parameters", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.get_current_visuals": [[27, 29], ["None"], "methods", ["None"], ["", "def", "get_current_visuals", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.get_current_errors": [[30, 32], ["None"], "methods", ["None"], ["", "def", "get_current_errors", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save": [[33, 35], ["None"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "label", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save_network": [[37, 41], ["os.path.join", "torch.save", "network.state_dict"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save"], ["", "def", "save_network", "(", "self", ",", "network", ",", "path", ",", "network_label", ",", "epoch_label", ")", ":", "\n", "        ", "save_filename", "=", "'%s_net_%s.pth'", "%", "(", "epoch_label", ",", "network_label", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "save_filename", ")", "\n", "torch", ".", "save", "(", "network", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.load_network": [[43, 48], ["os.path.join", "print", "network.load_state_dict", "torch.load"], "methods", ["None"], ["", "def", "load_network", "(", "self", ",", "network", ",", "network_label", ",", "epoch_label", ")", ":", "\n", "        ", "save_filename", "=", "'%s_net_%s.pth'", "%", "(", "epoch_label", ",", "network_label", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "save_filename", ")", "\n", "print", "(", "'Loading network from %s'", "%", "save_path", ")", "\n", "network", ".", "load_state_dict", "(", "torch", ".", "load", "(", "save_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.update_learning_rate": [[49, 51], ["None"], "methods", ["None"], ["", "def", "update_learning_rate", "(", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save_done": [[55, 58], ["np.save", "np.savetxt", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.lpips.base_model.BaseModel.save"], ["", "def", "save_done", "(", "self", ",", "flag", "=", "False", ")", ":", "\n", "        ", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'done_flag'", ")", ",", "flag", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'done_flag'", ")", ",", "[", "flag", ",", "]", ",", "fmt", "=", "'%i'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.evaluate.generate_image_matrix.make_matrix": [[8, 35], ["iter", "iter", "next", "next", "skt_img.mean.mean", "torch.cat.append", "torch.cat", "torchvision.utils.save_image", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.ones", "rgb_img.cuda.clone", "torch.no_grad", "rgb_img.cuda.cuda", "skt.unsqueeze().repeat().cuda", "net_ae", "net_ig().cpu", "torch.cat.append", "torch.cat.append", "torch.cat.append", "torch.cat.append", "skt.unsqueeze().repeat().clone", "gimg_ae.cpu", "skt.unsqueeze().repeat().clone().fill_", "torch.nn.functional.interpolate", "skt.unsqueeze().repeat", "net_ig", "skt.unsqueeze().repeat", "skt.unsqueeze().repeat().clone", "skt.unsqueeze", "skt.unsqueeze", "skt.unsqueeze().repeat", "skt.unsqueeze"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image"], ["def", "make_matrix", "(", "dataset_rgb", ",", "dataset_skt", ",", "net_ae", ",", "net_ig", ",", "BATCH_SIZE", ",", "im_name", ")", ":", "\n", "    ", "dataloader_rgb", "=", "iter", "(", "DataLoader", "(", "dataset_rgb", ",", "BATCH_SIZE", ",", "shuffle", "=", "True", ")", ")", "\n", "dataloader_skt", "=", "iter", "(", "DataLoader", "(", "dataset_skt", ",", "BATCH_SIZE", ",", "shuffle", "=", "True", ")", ")", "\n", "\n", "rgb_img", "=", "next", "(", "dataloader_rgb", ")", "\n", "skt_img", "=", "next", "(", "dataloader_skt", ")", "\n", "\n", "skt_img", "=", "skt_img", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "image_matrix", "=", "[", "torch", ".", "ones", "(", "1", ",", "3", ",", "512", ",", "512", ")", "]", "\n", "image_matrix", ".", "append", "(", "rgb_img", ".", "clone", "(", ")", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "rgb_img", "=", "rgb_img", ".", "cuda", "(", ")", "\n", "for", "skt", "in", "skt_img", ":", "\n", "            ", "input_skts", "=", "skt", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "BATCH_SIZE", ",", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "\n", "gimg_ae", ",", "style_feats", "=", "net_ae", "(", "input_skts", ",", "rgb_img", ")", "\n", "g_images", "=", "net_ig", "(", "gimg_ae", ",", "style_feats", ")", ".", "cpu", "(", ")", "\n", "\n", "image_matrix", ".", "append", "(", "skt", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "clone", "(", ")", ")", "\n", "image_matrix", ".", "append", "(", "gimg_ae", ".", "cpu", "(", ")", ")", "\n", "\n", "image_matrix", ".", "append", "(", "skt", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "clone", "(", ")", ".", "fill_", "(", "1", ")", ")", "\n", "image_matrix", ".", "append", "(", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "g_images", ",", "512", ")", ")", "\n", "\n", "", "", "image_matrix", "=", "torch", ".", "cat", "(", "image_matrix", ")", "\n", "vutils", ".", "save_image", "(", "0.5", "*", "(", "image_matrix", "+", "1", ")", ",", "im_name", ",", "nrow", "=", "BATCH_SIZE", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.evaluate.generate_mix.make_matrix": [[12, 54], ["skt_img.mean.mean", "torch.cat", "torch.nn.functional.interpolate", "torch.cat", "torch.nn.functional.interpolate", "torch.cat", "torch.nn.functional.interpolate", "torch.cat", "torch.nn.functional.interpolate", "torch.cat", "torch.cat.append", "torch.cat", "torchvision.utils.save_image", "next", "next", "torch.nn.functional.interpolate.unsqueeze", "torch.nn.functional.interpolate.unsqueeze", "torch.nn.functional.interpolate.unsqueeze", "torch.nn.functional.interpolate.unsqueeze", "torch.ones", "rgb_img.cuda.clone", "torch.no_grad", "rgb_img.cuda.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "skt.unsqueeze().repeat().cuda", "net_ae", "net_ig().cpu", "torch.cat.append", "torch.cat.append", "skt.unsqueeze().repeat().clone", "skt.unsqueeze().repeat", "net_ig", "skt.unsqueeze().repeat", "skt.unsqueeze", "skt.unsqueeze"], "function", ["home.repos.pwc.inspect_result.odegeasslbc_Self-Supervised-Sketch-to-Image-Synthesis-PyTorch.sketch_styletransfer.operation.save_image"], ["def", "make_matrix", "(", "dataloader_rgb", ",", "dataloader_skt", ",", "net_ae", ",", "net_ig", ",", "BATCH_SIZE", ",", "im_name", ")", ":", "\n", "    ", "rgb_img", "=", "next", "(", "dataloader_rgb", ")", "[", "0", "]", "\n", "skt_img", "=", "next", "(", "dataloader_skt", ")", "[", "0", "]", "\n", "skt_img", "=", "skt_img", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "new_rgb_1", "=", "torch", ".", "cat", "(", "[", "torch", ".", "cat", "(", "[", "rgb_img", "[", "0", "]", ",", "rgb_img", "[", "1", "]", "]", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "cat", "(", "[", "rgb_img", "[", "2", "]", ",", "rgb_img", "[", "3", "]", "]", ",", "dim", "=", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "new_rgb_1", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "new_rgb_1", ".", "unsqueeze", "(", "0", ")", ",", "size", "=", "512", ")", "\n", "\n", "new_rgb_2", "=", "torch", ".", "cat", "(", "[", "torch", ".", "cat", "(", "[", "rgb_img", "[", "0", "]", ",", "rgb_img", "[", "1", "]", "]", ",", "dim", "=", "2", ")", ",", "\n", "torch", ".", "cat", "(", "[", "rgb_img", "[", "2", "]", ",", "rgb_img", "[", "3", "]", "]", ",", "dim", "=", "2", ")", "]", ",", "dim", "=", "2", ")", "\n", "new_rgb_2", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "new_rgb_2", ".", "unsqueeze", "(", "0", ")", ",", "size", "=", "512", ")", "\n", "\n", "new_rgb_3", "=", "torch", ".", "cat", "(", "[", "torch", ".", "cat", "(", "[", "rgb_img", "[", "0", "]", ",", "rgb_img", "[", "1", "]", "]", ",", "dim", "=", "1", ")", ",", "\n", "torch", ".", "cat", "(", "[", "rgb_img", "[", "2", "]", ",", "rgb_img", "[", "3", "]", "]", ",", "dim", "=", "1", ")", "]", ",", "dim", "=", "2", ")", "\n", "new_rgb_3", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "new_rgb_3", ".", "unsqueeze", "(", "0", ")", ",", "size", "=", "512", ")", "\n", "\n", "new_rgb_4", "=", "torch", ".", "cat", "(", "[", "torch", ".", "cat", "(", "[", "rgb_img", "[", "0", "]", ",", "rgb_img", "[", "1", "]", "]", ",", "dim", "=", "2", ")", ",", "\n", "torch", ".", "cat", "(", "[", "rgb_img", "[", "2", "]", ",", "rgb_img", "[", "3", "]", "]", ",", "dim", "=", "2", ")", "]", ",", "dim", "=", "1", ")", "\n", "new_rgb_4", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "new_rgb_4", ".", "unsqueeze", "(", "0", ")", ",", "size", "=", "512", ")", "\n", "\n", "\n", "rgb_img", "=", "torch", ".", "cat", "(", "[", "new_rgb_1", ",", "new_rgb_2", ",", "new_rgb_3", ",", "new_rgb_4", "]", ")", "\n", "\n", "image_matrix", "=", "[", "torch", ".", "ones", "(", "1", ",", "3", ",", "512", ",", "512", ")", "]", "\n", "image_matrix", ".", "append", "(", "rgb_img", ".", "clone", "(", ")", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "rgb_img", "=", "rgb_img", ".", "cuda", "(", ")", "\n", "for", "skt", "in", "skt_img", ":", "\n", "            ", "input_skts", "=", "skt", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "BATCH_SIZE", ",", "1", ",", "1", ",", "1", ")", ".", "cuda", "(", ")", "\n", "\n", "gimg_ae", ",", "style_feats", "=", "net_ae", "(", "input_skts", ",", "rgb_img", ")", "\n", "g_images", "=", "net_ig", "(", "gimg_ae", ",", "style_feats", ")", ".", "cpu", "(", ")", "\n", "\n", "#image_matrix.append(skt.unsqueeze(0).repeat(1,3,1,1).clone())", "\n", "#image_matrix.append(gimg_ae.cpu())", "\n", "\n", "image_matrix", ".", "append", "(", "skt", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "1", ",", "3", ",", "1", ",", "1", ")", ".", "clone", "(", ")", ")", "\n", "image_matrix", ".", "append", "(", "g_images", ")", "\n", "\n", "", "", "image_matrix", "=", "torch", ".", "cat", "(", "image_matrix", ")", "\n", "vutils", ".", "save_image", "(", "0.5", "*", "(", "image_matrix", "+", "1", ")", ",", "im_name", ",", "nrow", "=", "BATCH_SIZE", "+", "1", ")", "\n", "\n"]]}