{"home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic.parse_args": [[15, 40], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--cuda\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_parallel\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--GPU\"", ",", "type", "=", "list", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "[", "'0'", "]", ",", "[", "'1'", "]", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--data\"", ",", "default", "=", "\"data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lang\"", ",", "default", "=", "\"zh_en\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--rate\"", ",", "type", "=", "float", ",", "default", "=", "0.3", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--r_hidden\"", ",", "type", "=", "int", ",", "default", "=", "300", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--k\"", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\"--gamma\"", ",", "type", "=", "float", ",", "default", "=", "3", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--epoch\"", ",", "type", "=", "int", ",", "default", "=", "500", ")", "\n", "parser", ".", "add_argument", "(", "\"--neg_epoch\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_epoch\"", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n", "parser", ".", "add_argument", "(", "\"--reset_epoch\"", ",", "type", "=", "int", ",", "default", "=", "20", ")", "\n", "parser", ".", "add_argument", "(", "\"--stable_test\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--keep_seeds\"", ",", "type", "=", "int", ",", "default", "=", "4500", ")", "\n", "parser", ".", "add_argument", "(", "\"--new_train_seeds\"", ",", "type", "=", "int", ",", "default", "=", "8000", ")", "\n", "parser", ".", "add_argument", "(", "\"--neg_seeds\"", ",", "type", "=", "int", ",", "default", "=", "2000", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic.get_emb": [[64, 70], ["model.eval", "torch.no_grad", "model", "model"], "function", ["None"], ["def", "get_emb", "(", "model", ",", "data", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "x1", "=", "model", "(", "data", ".", "x1", ",", "data", ".", "edge_index1", ",", "data", ".", "rel1", ",", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", ")", "\n", "x2", "=", "model", "(", "data", ".", "x2", ",", "data", ".", "edge_index2", ",", "data", ".", "rel2", ",", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", ")", "\n", "", "return", "x1", ",", "x2", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic.get_train_batch": [[72, 79], ["torch.stack", "[].t", "[].t", "[].t", "[].t", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist"], "function", ["None"], ["", "def", "get_train_batch", "(", "x1", ",", "x2", ",", "train_set", ",", "k", "=", "5", ")", ":", "\n", "    ", "e1_neg1", "=", "torch", ".", "cdist", "(", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x1", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e1_neg2", "=", "torch", ".", "cdist", "(", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x2", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e2_neg1", "=", "torch", ".", "cdist", "(", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", ",", "x2", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e2_neg2", "=", "torch", ".", "cdist", "(", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", ",", "x1", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "train_batch", "=", "torch", ".", "stack", "(", "[", "e1_neg1", ",", "e1_neg2", ",", "e2_neg1", ",", "e2_neg2", "]", ",", "dim", "=", "0", ")", "\n", "return", "train_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic.train": [[81, 90], ["model.train", "model", "model", "criterion", "optimizer.zero_grad", "criterion.backward", "optimizer.step"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.train"], ["", "def", "train", "(", "model", ",", "criterion", ",", "optimizer", ",", "data", ",", "train_batch", ",", "false_pair", "=", "None", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "x1", "=", "model", "(", "data", ".", "x1", ",", "data", ".", "edge_index1", ",", "data", ".", "rel1", ",", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", ")", "\n", "x2", "=", "model", "(", "data", ".", "x2", ",", "data", ".", "edge_index2", ",", "data", ".", "rel2", ",", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", ")", "\n", "loss", "=", "criterion", "(", "x1", ",", "x2", ",", "data", ".", "new_train_set", ",", "train_batch", ",", "false_pair", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic.init_data": [[92, 100], ["F.normalize().to().requires_grad_", "F.normalize().to().requires_grad_", "utils.add_inverse_rels", "utils.add_inverse_rels", "data.DBP15K", "F.normalize().to", "F.normalize().to", "F.normalize", "F.normalize"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels"], ["", "def", "init_data", "(", "args", ",", "device", ")", ":", "\n", "# args.data\u6570\u636e\u96c6\u6839\u76ee\u5f55,args.lang\u91c7\u7528\u7684\u6570\u636e\u96c6", "\n", "    ", "data", "=", "DBP15K", "(", "args", ".", "data", ",", "args", ".", "lang", ",", "rate", "=", "args", ".", "rate", ")", "[", "0", "]", "\n", "data", ".", "x1", "=", "F", ".", "normalize", "(", "data", ".", "x1", ",", "dim", "=", "1", ",", "p", "=", "2", ")", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", ")", "\n", "data", ".", "x2", "=", "F", ".", "normalize", "(", "data", ".", "x2", ",", "dim", "=", "1", ",", "p", "=", "2", ")", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", ")", "\n", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", "=", "add_inverse_rels", "(", "data", ".", "edge_index1", ",", "data", ".", "rel1", ")", "\n", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", "=", "add_inverse_rels", "(", "data", ".", "edge_index2", ",", "data", ".", "rel2", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic.test": [[102, 114], ["torch.no_grad", "print", "utils.get_hits", "print", "utils.get_hits", "print", "S.detach().cpu", "utils.get_hits_stable", "S.detach"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits_stable"], ["", "def", "test", "(", "x1", ",", "x2", ",", "data", ",", "stable", "=", "False", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "#         print('-' * 16 + 'Train_set' + '-' * 16)", "\n", "#         get_hits(x1, x2, data.train_set)", "\n", "        ", "print", "(", "'-'", "*", "16", "+", "'Train_set'", "+", "'-'", "*", "16", ")", "\n", "get_hits", "(", "x1", ",", "x2", ",", "data", ".", "new_train_set", ")", "\n", "print", "(", "'-'", "*", "16", "+", "'Test_set'", "+", "'-'", "*", "17", ")", "\n", "S", ",", "hits1", "=", "get_hits", "(", "x1", ",", "x2", ",", "data", ".", "test_set", ")", "\n", "if", "stable", ":", "\n", "            ", "get_hits_stable", "(", "x1", ",", "x2", ",", "data", ".", "test_set", ")", "\n", "", "print", "(", ")", "\n", "", "return", "S", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "hits1", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic.generate_pairs": [[116, 201], ["torch.no_grad", "torch.cdist", "utils.composeS.to", "utils.composeS", "seeds.size", "torch.zeros", "torch.zeros", "range", "range", "list", "list", "len", "len", "print", "print", "print", "print", "global_align.append", "utils.composeS.topk", "utils.composeS.T.topk", "set().intersection", "set().difference", "j.item", "list.append", "set", "set", "seeds[].item", "seeds[].item", "list.append", "list.append", "set", "set", "seeds[].item", "seeds[].item", "S_global.softmax", "S_global.softmax", "seeds[].item", "seeds[].item", "seeds[].item", "seeds[].item", "index_e1[].item", "index_e2[].item", "left_i.item", "left_i.item", "left_i.item"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.composeS"], ["", "def", "generate_pairs", "(", "x1", ",", "x2", ",", "data", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "seeds", "=", "data", ".", "test_set", "\n", "\n", "new_idx", "=", "[", "]", "\n", "false_idx", "=", "[", "]", "\n", "global_align", "=", "[", "]", "\n", "\n", "'''\n        \u524dcompose\u751f\u6210\u6837\u4f8b\n        '''", "\n", "S", "=", "torch", ".", "cdist", "(", "x1", "[", "seeds", "[", ":", ",", "0", "]", "]", ",", "x2", "[", "seeds", "[", ":", ",", "1", "]", "]", ",", "p", "=", "1", ")", "\n", "S", "=", "S", ".", "to", "(", "second_device", ")", "\n", "S", "=", "composeS", "(", "[", "S1", ",", "S2", ",", "S", "]", ",", "[", "0.5", ",", "0.4", ",", "0.1", "]", ")", "\n", "S_global", "=", "-", "S", "\n", "\n", "'''\n        \u5168\u5c40\u5bf9\u9f50\u7b5b\u9009\u6837\u4f8b\n        '''", "\n", "pair_num", "=", "seeds", ".", "size", "(", "0", ")", "\n", "index", "=", "(", "S_global", ".", "softmax", "(", "1", ")", "+", "S_global", ".", "softmax", "(", "0", ")", ")", ".", "flatten", "(", ")", ".", "argsort", "(", "descending", "=", "True", ")", "\n", "index_e1", "=", "index", "//", "pair_num", "\n", "index_e2", "=", "index", "%", "pair_num", "\n", "aligned_e1", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "aligned_e2", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "true_aligned", "=", "0", "\n", "for", "_", "in", "range", "(", "pair_num", "*", "100", ")", ":", "\n", "            ", "if", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "or", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", ":", "\n", "                ", "continue", "\n", "", "global_align", ".", "append", "(", "(", "seeds", "[", "index_e1", "[", "_", "]", ".", "item", "(", ")", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "index_e2", "[", "_", "]", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "if", "index_e1", "[", "_", "]", "==", "index_e2", "[", "_", "]", ":", "\n", "                ", "true_aligned", "+=", "1", "\n", "", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "=", "True", "\n", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", "=", "True", "\n", "\n", "", "'''\n        \u5c40\u90e8\u5bf9\u9f50\u7b5b\u9009\u6837\u4f8b\n        '''", "\n", "left_pred", "=", "S", ".", "topk", "(", "1", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "right_pred", "=", "S", ".", "T", ".", "topk", "(", "1", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "\n", "# left_pred \u5de6\u5230\u53f3\u8ddd\u79bb", "\n", "# right_pred \u53f3\u5230\u5de6\u8ddd\u79bb", "\n", "\n", "positive", "=", "0", "\n", "negative", "=", "0", "\n", "false_positive", "=", "0", "\n", "false_negative", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "left_pred", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "left_i", "=", "left_pred", "[", "i", "]", "\n", "j", "=", "right_pred", "[", "left_i", "]", "\n", "if", "i", "==", "j", ".", "item", "(", ")", ":", "\n", "                ", "new_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "negative", "+=", "1", "\n", "l2r_dist", "=", "S", "[", "i", ",", "left_i", "]", "\n", "r2l_dist", "=", "S", ".", "T", "[", "left_i", ",", "j", "]", "\n", "\n", "if", "(", "l2r_dist", ">", "r2l_dist", ")", ":", "\n", "                    ", "false_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "false_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "", "", "new_idx", "=", "list", "(", "set", "(", "new_idx", ")", ".", "intersection", "(", "set", "(", "global_align", ")", ")", ")", "\n", "false_idx", "=", "list", "(", "set", "(", "false_idx", ")", ".", "difference", "(", "set", "(", "global_align", ")", ")", ")", "\n", "\n", "positive", "=", "len", "(", "new_idx", ")", "\n", "negative", "=", "len", "(", "false_idx", ")", "\n", "\n", "false_positive", "=", "0", "\n", "false_negative", "=", "0", "\n", "for", "p", "in", "new_idx", ":", "\n", "            ", "if", "(", "p", "[", "0", "]", "!=", "p", "[", "1", "]", ")", ":", "\n", "                ", "false_positive", "+=", "1", "\n", "", "", "for", "f", "in", "false_idx", ":", "\n", "            ", "if", "(", "f", "[", "0", "]", "==", "f", "[", "1", "]", ")", ":", "\n", "                ", "false_negative", "+=", "1", "\n", "\n", "", "", "print", "(", ")", "\n", "print", "(", "\"positive:\"", ",", "positive", ",", "\"negative:\"", ",", "negative", ",", "\"false_positive:\"", ",", "false_positive", ",", "\"false_negative\"", ",", "false_negative", ")", "\n", "print", "(", "\"false_positive_rate:\"", ",", "false_positive", "/", "positive", ")", "\n", "print", "(", "\"false_negative_rate:\"", ",", "false_negative", "/", "negative", ")", "\n", "\n", "return", "new_idx", ",", "false_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic.reset": [[203, 223], ["torch.no_grad", "train_basic.generate_pairs", "torch.LongTensor", "torch.randperm", "new_train_set[].to", "torch.randperm", "torch.cat().to", "torch.LongTensor", "torch.randperm", "new_test_false_set[].to", "new_train_set[].to.size", "data.train_set.size", "new_test_false_set[].to.size", "torch.cat"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.generate_pairs"], ["", "", "def", "reset", "(", "x1", ",", "x2", ",", "data", ",", "keep_seeds", "=", "2000", ",", "new_train_seeds", "=", "7000", ",", "neg_seeds", "=", "1000", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "new_pair", ",", "false_pair", "=", "generate_pairs", "(", "x1", ",", "x2", ",", "data", ")", "\n", "\n", "new_train_set", "=", "torch", ".", "LongTensor", "(", "new_pair", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "new_train_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "keep_seeds", "]", "\n", "new_train_set", "=", "new_train_set", "[", "idx", "]", ".", "to", "(", "second_device", ")", "\n", "\n", "perm", "=", "torch", ".", "randperm", "(", "data", ".", "train_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "new_train_seeds", "]", "\n", "new_train_set_base", "=", "data", ".", "train_set", "[", "idx", "]", "\n", "data", ".", "new_train_set", "=", "torch", ".", "cat", "(", "[", "new_train_set_base", ",", "new_train_set", "]", ",", "dim", "=", "0", ")", ".", "to", "(", "second_device", ")", "\n", "\n", "new_test_false_set", "=", "torch", ".", "LongTensor", "(", "false_pair", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "new_test_false_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "neg_seeds", "]", "\n", "new_test_false_set", "=", "new_test_false_set", "[", "idx", "]", ".", "to", "(", "second_device", ")", "\n", "#         return new_test_false_set", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train.parse_args": [[15, 40], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--cuda\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_parallel\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--GPU\"", ",", "type", "=", "list", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "[", "'0'", "]", ",", "[", "'1'", "]", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--data\"", ",", "default", "=", "\"data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lang\"", ",", "default", "=", "\"zh_en\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--rate\"", ",", "type", "=", "float", ",", "default", "=", "0.3", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--r_hidden\"", ",", "type", "=", "int", ",", "default", "=", "300", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--k\"", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\"--gamma\"", ",", "type", "=", "float", ",", "default", "=", "3", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--epoch\"", ",", "type", "=", "int", ",", "default", "=", "500", ")", "\n", "parser", ".", "add_argument", "(", "\"--neg_epoch\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_epoch\"", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n", "parser", ".", "add_argument", "(", "\"--reset_epoch\"", ",", "type", "=", "int", ",", "default", "=", "20", ")", "\n", "parser", ".", "add_argument", "(", "\"--stable_test\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--keep_seeds\"", ",", "type", "=", "int", ",", "default", "=", "4500", ")", "\n", "parser", ".", "add_argument", "(", "\"--new_train_seeds\"", ",", "type", "=", "int", ",", "default", "=", "8000", ")", "\n", "parser", ".", "add_argument", "(", "\"--neg_seeds\"", ",", "type", "=", "int", ",", "default", "=", "2000", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train.get_emb": [[63, 69], ["model.eval", "torch.no_grad", "model", "model"], "function", ["None"], ["def", "get_emb", "(", "model", ",", "data", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "x1", "=", "model", "(", "data", ".", "x1", ",", "data", ".", "edge_index1", ",", "data", ".", "rel1", ",", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", ")", "\n", "x2", "=", "model", "(", "data", ".", "x2", ",", "data", ".", "edge_index2", ",", "data", ".", "rel2", ",", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", ")", "\n", "", "return", "x1", ",", "x2", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train.get_train_batch": [[71, 78], ["torch.stack", "[].t", "[].t", "[].t", "[].t", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist"], "function", ["None"], ["", "def", "get_train_batch", "(", "x1", ",", "x2", ",", "train_set", ",", "k", "=", "5", ")", ":", "\n", "    ", "e1_neg1", "=", "torch", ".", "cdist", "(", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x1", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e1_neg2", "=", "torch", ".", "cdist", "(", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x2", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e2_neg1", "=", "torch", ".", "cdist", "(", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", ",", "x2", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e2_neg2", "=", "torch", ".", "cdist", "(", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", ",", "x1", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "train_batch", "=", "torch", ".", "stack", "(", "[", "e1_neg1", ",", "e1_neg2", ",", "e2_neg1", ",", "e2_neg2", "]", ",", "dim", "=", "0", ")", "\n", "return", "train_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train.train": [[80, 89], ["model.train", "model", "model", "criterion", "optimizer.zero_grad", "criterion.backward", "optimizer.step"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.train"], ["", "def", "train", "(", "model", ",", "criterion", ",", "optimizer", ",", "data", ",", "train_batch", ",", "false_pair", "=", "None", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "x1", "=", "model", "(", "data", ".", "x1", ",", "data", ".", "edge_index1", ",", "data", ".", "rel1", ",", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", ")", "\n", "x2", "=", "model", "(", "data", ".", "x2", ",", "data", ".", "edge_index2", ",", "data", ".", "rel2", ",", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", ")", "\n", "loss", "=", "criterion", "(", "x1", ",", "x2", ",", "data", ".", "new_train_set", ",", "train_batch", ",", "false_pair", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train.init_data": [[91, 98], ["F.normalize().to().requires_grad_", "F.normalize().to().requires_grad_", "utils.add_inverse_rels", "utils.add_inverse_rels", "data.DBP15K", "F.normalize().to", "F.normalize().to", "F.normalize", "F.normalize"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels"], ["", "def", "init_data", "(", "args", ",", "device", ")", ":", "\n", "    ", "data", "=", "DBP15K", "(", "args", ".", "data", ",", "args", ".", "lang", ",", "rate", "=", "args", ".", "rate", ")", "[", "0", "]", "\n", "data", ".", "x1", "=", "F", ".", "normalize", "(", "data", ".", "x1", ",", "dim", "=", "1", ",", "p", "=", "2", ")", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", ")", "\n", "data", ".", "x2", "=", "F", ".", "normalize", "(", "data", ".", "x2", ",", "dim", "=", "1", ",", "p", "=", "2", ")", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", ")", "\n", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", "=", "add_inverse_rels", "(", "data", ".", "edge_index1", ",", "data", ".", "rel1", ")", "\n", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", "=", "add_inverse_rels", "(", "data", ".", "edge_index2", ",", "data", ".", "rel2", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train.test": [[100, 110], ["torch.no_grad", "print", "utils.get_hits", "print", "utils.get_hits", "print", "S.detach().cpu", "utils.get_hits_stable", "S.detach"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits_stable"], ["", "def", "test", "(", "x1", ",", "x2", ",", "data", ",", "stable", "=", "False", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "print", "(", "'-'", "*", "16", "+", "'Train_set'", "+", "'-'", "*", "16", ")", "\n", "get_hits", "(", "x1", ",", "x2", ",", "data", ".", "new_train_set", ")", "\n", "print", "(", "'-'", "*", "16", "+", "'Test_set'", "+", "'-'", "*", "17", ")", "\n", "S", ",", "hits1", "=", "get_hits", "(", "x1", ",", "x2", ",", "data", ".", "test_set", ")", "\n", "if", "stable", ":", "\n", "            ", "get_hits_stable", "(", "x1", ",", "x2", ",", "data", ".", "test_set", ")", "\n", "", "print", "(", ")", "\n", "", "return", "S", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "hits1", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train.generate_pairs": [[112, 185], ["torch.no_grad", "torch.cdist", "utils.composeS.to", "utils.composeS", "seeds.size", "torch.zeros", "torch.zeros", "range", "range", "list", "list", "len", "len", "print", "print", "print", "print", "global_align.append", "utils.composeS.topk", "utils.composeS.T.topk", "set().intersection", "set().difference", "j.item", "list.append", "set", "set", "seeds[].item", "seeds[].item", "list.append", "list.append", "set", "set", "seeds[].item", "seeds[].item", "S_global.softmax", "S_global.softmax", "seeds[].item", "seeds[].item", "seeds[].item", "seeds[].item", "index_e1[].item", "index_e2[].item", "left_i.item", "left_i.item", "left_i.item"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.composeS"], ["", "def", "generate_pairs", "(", "x1", ",", "x2", ",", "data", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "seeds", "=", "data", ".", "test_set", "\n", "\n", "new_idx", "=", "[", "]", "\n", "false_idx", "=", "[", "]", "\n", "global_align", "=", "[", "]", "\n", "\n", "S", "=", "torch", ".", "cdist", "(", "x1", "[", "seeds", "[", ":", ",", "0", "]", "]", ",", "x2", "[", "seeds", "[", ":", ",", "1", "]", "]", ",", "p", "=", "1", ")", "\n", "S", "=", "S", ".", "to", "(", "second_device", ")", "\n", "S", "=", "composeS", "(", "[", "S1", ",", "S2", ",", "S", "]", ",", "[", "0.5", ",", "0.4", ",", "0.1", "]", ")", "\n", "S_global", "=", "-", "S", "\n", "\n", "pair_num", "=", "seeds", ".", "size", "(", "0", ")", "\n", "index", "=", "(", "S_global", ".", "softmax", "(", "1", ")", "+", "S_global", ".", "softmax", "(", "0", ")", ")", ".", "flatten", "(", ")", ".", "argsort", "(", "descending", "=", "True", ")", "\n", "index_e1", "=", "index", "//", "pair_num", "\n", "index_e2", "=", "index", "%", "pair_num", "\n", "aligned_e1", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "aligned_e2", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "true_aligned", "=", "0", "\n", "for", "_", "in", "range", "(", "pair_num", "*", "100", ")", ":", "\n", "            ", "if", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "or", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", ":", "\n", "                ", "continue", "\n", "", "global_align", ".", "append", "(", "(", "seeds", "[", "index_e1", "[", "_", "]", ".", "item", "(", ")", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "index_e2", "[", "_", "]", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "if", "index_e1", "[", "_", "]", "==", "index_e2", "[", "_", "]", ":", "\n", "                ", "true_aligned", "+=", "1", "\n", "", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "=", "True", "\n", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", "=", "True", "\n", "\n", "", "left_pred", "=", "S", ".", "topk", "(", "1", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "right_pred", "=", "S", ".", "T", ".", "topk", "(", "1", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "\n", "positive", "=", "0", "\n", "negative", "=", "0", "\n", "false_positive", "=", "0", "\n", "false_negative", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "left_pred", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "left_i", "=", "left_pred", "[", "i", "]", "\n", "j", "=", "right_pred", "[", "left_i", "]", "\n", "if", "i", "==", "j", ".", "item", "(", ")", ":", "\n", "                ", "new_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "negative", "+=", "1", "\n", "l2r_dist", "=", "S", "[", "i", ",", "left_i", "]", "\n", "r2l_dist", "=", "S", ".", "T", "[", "left_i", ",", "j", "]", "\n", "\n", "if", "l2r_dist", ">", "r2l_dist", ":", "\n", "                    ", "false_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "false_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "", "", "new_idx", "=", "list", "(", "set", "(", "new_idx", ")", ".", "intersection", "(", "set", "(", "global_align", ")", ")", ")", "\n", "false_idx", "=", "list", "(", "set", "(", "false_idx", ")", ".", "difference", "(", "set", "(", "global_align", ")", ")", ")", "\n", "\n", "positive", "=", "len", "(", "new_idx", ")", "\n", "negative", "=", "len", "(", "false_idx", ")", "\n", "\n", "false_positive", "=", "0", "\n", "false_negative", "=", "0", "\n", "for", "p", "in", "new_idx", ":", "\n", "            ", "if", "p", "[", "0", "]", "!=", "p", "[", "1", "]", ":", "\n", "                ", "false_positive", "+=", "1", "\n", "", "", "for", "f", "in", "false_idx", ":", "\n", "            ", "if", "f", "[", "0", "]", "==", "f", "[", "1", "]", ":", "\n", "                ", "false_negative", "+=", "1", "\n", "\n", "", "", "print", "(", ")", "\n", "print", "(", "\"positive:\"", ",", "positive", ",", "\"negative:\"", ",", "negative", ",", "\"false_positive:\"", ",", "false_positive", ",", "\"false_negative\"", ",", "false_negative", ")", "\n", "print", "(", "\"false_positive_rate:\"", ",", "false_positive", "/", "positive", ")", "\n", "print", "(", "\"false_negative_rate:\"", ",", "false_negative", "/", "negative", ")", "\n", "\n", "return", "new_idx", ",", "false_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train.reset": [[187, 206], ["torch.no_grad", "train.generate_pairs", "torch.LongTensor", "torch.randperm", "new_train_set[].to", "torch.randperm", "torch.cat().to", "torch.LongTensor", "torch.randperm", "new_test_false_set[].to", "new_train_set[].to.size", "data.train_set.size", "new_test_false_set[].to.size", "torch.cat"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.generate_pairs"], ["", "", "def", "reset", "(", "x1", ",", "x2", ",", "data", ",", "keep_seeds", "=", "2000", ",", "new_train_seeds", "=", "7000", ",", "neg_seeds", "=", "1000", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "new_pair", ",", "false_pair", "=", "generate_pairs", "(", "x1", ",", "x2", ",", "data", ")", "\n", "\n", "new_train_set", "=", "torch", ".", "LongTensor", "(", "new_pair", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "new_train_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "keep_seeds", "]", "\n", "new_train_set", "=", "new_train_set", "[", "idx", "]", ".", "to", "(", "second_device", ")", "\n", "\n", "perm", "=", "torch", ".", "randperm", "(", "data", ".", "train_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "new_train_seeds", "]", "\n", "new_train_set_base", "=", "data", ".", "train_set", "[", "idx", "]", "\n", "data", ".", "new_train_set", "=", "torch", ".", "cat", "(", "[", "new_train_set_base", ",", "new_train_set", "]", ",", "dim", "=", "0", ")", ".", "to", "(", "second_device", ")", "\n", "\n", "new_test_false_set", "=", "torch", ".", "LongTensor", "(", "false_pair", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "new_test_false_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "neg_seeds", "]", "\n", "new_test_false_set", "=", "new_test_false_set", "[", "idx", "]", ".", "to", "(", "second_device", ")", "\n", "return", "new_test_false_set", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.data.DBP15K.__init__": [[11, 19], ["torch.manual_seed", "torch_geometric.data.InMemoryDataset.__init__", "torch.load"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "pair", ",", "KG_num", "=", "1", ",", "rate", "=", "0.3", ",", "seed", "=", "1", ")", ":", "\n", "        ", "self", ".", "pair", "=", "pair", "\n", "self", ".", "KG_num", "=", "KG_num", "\n", "self", ".", "rate", "=", "rate", "\n", "self", ".", "seed", "=", "seed", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "super", "(", "DBP15K", ",", "self", ")", ".", "__init__", "(", "root", ")", "\n", "self", ".", "data", ",", "self", ".", "slices", "=", "torch", ".", "load", "(", "self", ".", "processed_paths", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.data.DBP15K.raw_file_names": [[20, 23], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "raw_file_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "'zh_en'", ",", "'fr_en'", ",", "'ja_en'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.data.DBP15K.processed_file_names": [[24, 27], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "processed_file_names", "(", "self", ")", ":", "\n", "        ", "return", "'%s_%d_%.1f_%d.pt'", "%", "(", "self", ".", "pair", ",", "self", ".", "KG_num", ",", "self", ".", "rate", ",", "self", ".", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.data.DBP15K.process": [[28, 53], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "torch_geometric.data.Data.DBP15K.process_graph", "torch_geometric.data.Data.DBP15K.process_graph", "os.path.join", "torch_geometric.data.Data.DBP15K.process_pair", "torch.save", "torch_geometric.data.Data", "torch.cat", "torch.cat", "torch.cat", "torch_geometric.data.Data", "torch_geometric.data.Data.DBP15K.collate", "int", "int", "train_set.t", "test_set.t", "train_set.t", "test_set.t", "x1.size", "torch_geometric.data.Data.DBP15K.size", "torch_geometric.data.Data.DBP15K.size", "rel1.max"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.data.DBP15K.process_graph", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.data.DBP15K.process_graph", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.data.DBP15K.process_pair"], ["", "def", "process", "(", "self", ")", ":", "\n", "        ", "x1_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "pair", ",", "'ent_ids_1'", ")", "\n", "x2_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "pair", ",", "'ent_ids_2'", ")", "\n", "g1_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "pair", ",", "'triples_1'", ")", "\n", "g2_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "pair", ",", "'triples_2'", ")", "\n", "emb_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "pair", ",", "self", ".", "pair", "[", ":", "2", "]", "+", "'_vectorList.json'", ")", "\n", "x1", ",", "edge_index1", ",", "rel1", ",", "assoc1", "=", "self", ".", "process_graph", "(", "g1_path", ",", "x1_path", ",", "emb_path", ")", "\n", "x2", ",", "edge_index2", ",", "rel2", ",", "assoc2", "=", "self", ".", "process_graph", "(", "g2_path", ",", "x2_path", ",", "emb_path", ")", "\n", "\n", "pair_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "pair", ",", "'ref_ent_ids'", ")", "\n", "pair_set", "=", "self", ".", "process_pair", "(", "pair_path", ",", "assoc1", ",", "assoc2", ")", "\n", "#         pair_set = pair_set[:, torch.randperm(pair_set.size(1))]", "\n", "train_set", "=", "pair_set", "[", ":", ",", ":", "int", "(", "self", ".", "rate", "*", "pair_set", ".", "size", "(", "1", ")", ")", "]", "\n", "test_set", "=", "pair_set", "[", ":", ",", "int", "(", "self", ".", "rate", "*", "pair_set", ".", "size", "(", "1", ")", ")", ":", "]", "\n", "\n", "if", "self", ".", "KG_num", "==", "1", ":", "\n", "            ", "data", "=", "Data", "(", "x1", "=", "x1", ",", "edge_index1", "=", "edge_index1", ",", "rel1", "=", "rel1", ",", "\n", "x2", "=", "x2", ",", "edge_index2", "=", "edge_index2", ",", "rel2", "=", "rel2", ",", "\n", "train_set", "=", "train_set", ".", "t", "(", ")", ",", "test_set", "=", "test_set", ".", "t", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "torch", ".", "cat", "(", "[", "x1", ",", "x2", "]", ",", "dim", "=", "0", ")", "\n", "edge_index", "=", "torch", ".", "cat", "(", "[", "edge_index1", ",", "edge_index2", "+", "x1", ".", "size", "(", "0", ")", "]", ",", "dim", "=", "1", ")", "\n", "rel", "=", "torch", ".", "cat", "(", "[", "rel1", ",", "rel2", "+", "rel1", ".", "max", "(", ")", "+", "1", "]", ",", "dim", "=", "0", ")", "\n", "data", "=", "Data", "(", "x", "=", "x", ",", "edge_index", "=", "edge_index", ",", "rel", "=", "rel", ",", "train_set", "=", "train_set", ".", "t", "(", ")", ",", "test_set", "=", "test_set", ".", "t", "(", ")", ")", "\n", "", "torch", ".", "save", "(", "self", ".", "collate", "(", "[", "data", "]", ")", ",", "self", ".", "processed_paths", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.data.DBP15K.process_graph": [[54, 79], ["torch_geometric.io.read_txt_array", "torch_geometric.io.read_txt_array.t", "torch.full", "torch.arange", "torch.tensor", "torch.full", "torch.arange", "torch.stack", "torch_geometric.utils.sort_edge_index", "print", "rel.unique().size", "open", "open", "torch.tensor", "torch.tensor.size", "rel.unique", "line.strip().split", "torch.tensor.append", "json.load", "rel.max().item", "rel.unique", "int", "torch.tensor.max().item", "line.strip", "rel.max", "torch.tensor.max"], "methods", ["None"], ["", "def", "process_graph", "(", "self", ",", "triple_path", ",", "ent_path", ",", "emb_path", ")", ":", "\n", "        ", "g", "=", "read_txt_array", "(", "triple_path", ",", "sep", "=", "'\\t'", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "subj", ",", "rel", ",", "obj", "=", "g", ".", "t", "(", ")", "\n", "\n", "assoc", "=", "torch", ".", "full", "(", "(", "rel", ".", "max", "(", ")", ".", "item", "(", ")", "+", "1", ",", ")", ",", "-", "1", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "assoc", "[", "rel", ".", "unique", "(", ")", "]", "=", "torch", ".", "arange", "(", "rel", ".", "unique", "(", ")", ".", "size", "(", "0", ")", ")", "\n", "rel", "=", "assoc", "[", "rel", "]", "\n", "\n", "idx", "=", "[", "]", "\n", "with", "open", "(", "ent_path", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "info", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "idx", ".", "append", "(", "int", "(", "info", "[", "0", "]", ")", ")", "\n", "", "", "idx", "=", "torch", ".", "tensor", "(", "idx", ")", "\n", "with", "open", "(", "emb_path", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "            ", "embedding_list", "=", "torch", ".", "tensor", "(", "json", ".", "load", "(", "f", ")", ")", "\n", "", "x", "=", "embedding_list", "[", "idx", "]", "\n", "\n", "assoc", "=", "torch", ".", "full", "(", "(", "idx", ".", "max", "(", ")", ".", "item", "(", ")", "+", "1", ",", ")", ",", "-", "1", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "assoc", "[", "idx", "]", "=", "torch", ".", "arange", "(", "idx", ".", "size", "(", "0", ")", ")", "\n", "subj", ",", "obj", "=", "assoc", "[", "subj", "]", ",", "assoc", "[", "obj", "]", "# map to [0, max_entity_count)", "\n", "edge_index", "=", "torch", ".", "stack", "(", "[", "subj", ",", "obj", "]", ",", "dim", "=", "0", ")", "\n", "edge_index", ",", "rel", "=", "sort_edge_index", "(", "edge_index", ",", "rel", ")", "\n", "print", "(", "edge_index", ".", "shape", ",", "rel", ".", "shape", ")", "\n", "return", "x", ",", "edge_index", ",", "rel", ",", "assoc", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.data.DBP15K.process_pair": [[80, 83], ["torch_geometric.io.read_txt_array().t", "torch.stack", "torch_geometric.io.read_txt_array"], "methods", ["None"], ["", "def", "process_pair", "(", "self", ",", "path", ",", "assoc1", ",", "assoc2", ")", ":", "\n", "        ", "e1", ",", "e2", "=", "read_txt_array", "(", "path", ",", "sep", "=", "'\\t'", ",", "dtype", "=", "torch", ".", "long", ")", ".", "t", "(", ")", "\n", "return", "torch", ".", "stack", "(", "[", "assoc1", "[", "e1", "]", ",", "assoc2", "[", "e2", "]", "]", ",", "dim", "=", "0", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.loss.L1_Loss.__init__": [[7, 10], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gamma", "=", "3", ")", ":", "\n", "        ", "super", "(", "L1_Loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gamma", "=", "gamma", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.loss.L1_Loss.dis": [[11, 13], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "dis", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "x", "-", "y", ")", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.loss.L1_Loss.forward": [[14, 33], ["x1[].reshape", "x2[].reshape", "x2[].reshape", "x1[].reshape", "loss.L1_Loss.dis", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "train_set.size", "x1.size", "train_set.size", "x2.size", "train_set.size", "x2.size", "train_set.size", "x1.size", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.relu", "torch.relu", "torch.relu", "loss.L1_Loss.dis", "loss.L1_Loss.dis", "loss.L1_Loss.dis", "loss.L1_Loss.dis", "train_batch[].view", "train_batch[].view", "train_batch[].view", "train_batch[].view", "loss.L1_Loss.dis"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.loss.L1_Loss.dis", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.loss.L1_Loss.dis", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.loss.L1_Loss.dis", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.loss.L1_Loss.dis", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.loss.L1_Loss.dis", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.loss.L1_Loss.dis"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ",", "train_set", ",", "train_batch", ",", "false_pair", ")", ":", "\n", "        ", "x1_train", ",", "x2_train", "=", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", "\n", "x1_neg1", "=", "x1", "[", "train_batch", "[", "0", "]", ".", "view", "(", "-", "1", ")", "]", ".", "reshape", "(", "-", "1", ",", "train_set", ".", "size", "(", "0", ")", ",", "x1", ".", "size", "(", "1", ")", ")", "\n", "x1_neg2", "=", "x2", "[", "train_batch", "[", "1", "]", ".", "view", "(", "-", "1", ")", "]", ".", "reshape", "(", "-", "1", ",", "train_set", ".", "size", "(", "0", ")", ",", "x2", ".", "size", "(", "1", ")", ")", "\n", "x2_neg1", "=", "x2", "[", "train_batch", "[", "2", "]", ".", "view", "(", "-", "1", ")", "]", ".", "reshape", "(", "-", "1", ",", "train_set", ".", "size", "(", "0", ")", ",", "x2", ".", "size", "(", "1", ")", ")", "\n", "x2_neg2", "=", "x1", "[", "train_batch", "[", "3", "]", ".", "view", "(", "-", "1", ")", "]", ".", "reshape", "(", "-", "1", ",", "train_set", ".", "size", "(", "0", ")", ",", "x1", ".", "size", "(", "1", ")", ")", "\n", "\n", "dis_x1_x2", "=", "self", ".", "dis", "(", "x1_train", ",", "x2_train", ")", "\n", "loss11", "=", "torch", ".", "mean", "(", "F", ".", "relu", "(", "self", ".", "gamma", "+", "dis_x1_x2", "-", "self", ".", "dis", "(", "x1_train", ",", "x1_neg1", ")", ")", ")", "\n", "loss12", "=", "torch", ".", "mean", "(", "F", ".", "relu", "(", "self", ".", "gamma", "+", "dis_x1_x2", "-", "self", ".", "dis", "(", "x1_train", ",", "x1_neg2", ")", ")", ")", "\n", "loss21", "=", "torch", ".", "mean", "(", "F", ".", "relu", "(", "self", ".", "gamma", "+", "dis_x1_x2", "-", "self", ".", "dis", "(", "x2_train", ",", "x2_neg1", ")", ")", ")", "\n", "loss22", "=", "torch", ".", "mean", "(", "F", ".", "relu", "(", "self", ".", "gamma", "+", "dis_x1_x2", "-", "self", ".", "dis", "(", "x2_train", ",", "x2_neg2", ")", ")", ")", "\n", "if", "false_pair", "is", "not", "None", ":", "\n", "            ", "x1_test_false", ",", "x2_test_false", "=", "x1", "[", "false_pair", "[", ":", ",", "0", "]", "]", ",", "x2", "[", "false_pair", "[", ":", ",", "1", "]", "]", "\n", "loss3", "=", "torch", ".", "mean", "(", "F", ".", "relu", "(", "self", ".", "gamma", "-", "self", ".", "dis", "(", "x1_test_false", ",", "x2_test_false", ")", ")", ")", "\n", "loss", "=", "(", "loss11", "+", "loss12", "+", "loss21", "+", "loss22", "+", "loss3", ")", "/", "5", "\n", "", "else", ":", "\n", "            ", "loss", "=", "(", "loss11", "+", "loss12", "+", "loss21", "+", "loss22", ")", "/", "4", "\n", "", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.Highway.__init__": [[9, 12], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "x_hidden", ")", ":", "\n", "        ", "super", "(", "Highway", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lin", "=", "nn", ".", "Linear", "(", "x_hidden", ",", "x_hidden", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.Highway.forward": [[13, 17], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.Highway.lin", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "gate", "=", "torch", ".", "sigmoid", "(", "self", ".", "lin", "(", "x1", ")", ")", "\n", "x", "=", "torch", ".", "mul", "(", "gate", ",", "x2", ")", "+", "torch", ".", "mul", "(", "1", "-", "gate", ",", "x1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.GAT.__init__": [[20, 24], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden", ")", ":", "\n", "        ", "super", "(", "GAT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "a_i", "=", "nn", ".", "Linear", "(", "hidden", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "a_j", "=", "nn", ".", "Linear", "(", "hidden", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.GAT.forward": [[25, 33], ["torch_geometric.utils.softmax", "torch.relu", "torch.relu", "torch.relu", "model.GAT.a_i().squeeze", "model.GAT.a_j().squeeze", "torch.leaky_relu().float", "torch.leaky_relu().float", "torch.leaky_relu().float", "torch_sparse.spmm", "torch.relu.size", "torch.relu.size", "model.GAT.a_i", "model.GAT.a_j", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ")", ":", "\n", "        ", "edge_index_j", ",", "edge_index_i", "=", "edge_index", "\n", "e_i", "=", "self", ".", "a_i", "(", "x", ")", ".", "squeeze", "(", ")", "[", "edge_index_i", "]", "\n", "e_j", "=", "self", ".", "a_j", "(", "x", ")", ".", "squeeze", "(", ")", "[", "edge_index_j", "]", "\n", "e", "=", "e_i", "+", "e_j", "\n", "alpha", "=", "softmax", "(", "F", ".", "leaky_relu", "(", "e", ")", ".", "float", "(", ")", ",", "edge_index_i", ")", "\n", "x", "=", "F", ".", "relu", "(", "spmm", "(", "edge_index", "[", "[", "1", ",", "0", "]", "]", ",", "alpha", ",", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "0", ")", ",", "x", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.GCN.__init__": [[36, 39], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "W", "=", "nn", ".", "Linear", "(", "hidden", ",", "hidden", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.GCN.forward": [[40, 50], ["torch_geometric.utils.degree", "torch_geometric.utils.degree.pow", "torch.relu", "torch.relu", "torch.relu", "torch.relu.size", "torch_sparse.spmm", "torch.relu.size", "torch.relu.size", "model.GCN.W"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ")", ":", "\n", "        ", "edge_index_j", ",", "edge_index_i", "=", "edge_index", "\n", "deg", "=", "degree", "(", "edge_index_i", ",", "x", ".", "size", "(", "0", ")", ",", "dtype", "=", "x", ".", "dtype", ")", "\n", "deg_inv_sqrt", "=", "deg", ".", "pow", "(", "-", "0.5", ")", "\n", "norm", "=", "deg_inv_sqrt", "[", "edge_index_j", "]", "*", "deg_inv_sqrt", "[", "edge_index_i", "]", "\n", "\n", "# x = F.selu(spmm(edge_index[[1, 0]], norm, x.size(0), x.size(0), self.W(x)))", "\n", "x", "=", "F", ".", "relu", "(", "spmm", "(", "edge_index", "[", "[", "1", ",", "0", "]", "]", ",", "norm", ",", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "0", ")", ",", "self", ".", "W", "(", "x", ")", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.GAT_E_to_R.__init__": [[53, 61], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "e_hidden", ",", "r_hidden", ")", ":", "\n", "        ", "super", "(", "GAT_E_to_R", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "a_h1", "=", "nn", ".", "Linear", "(", "r_hidden", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "a_h2", "=", "nn", ".", "Linear", "(", "r_hidden", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "a_t1", "=", "nn", ".", "Linear", "(", "r_hidden", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "a_t2", "=", "nn", ".", "Linear", "(", "r_hidden", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_h", "=", "nn", ".", "Linear", "(", "e_hidden", ",", "r_hidden", ",", "bias", "=", "False", ")", "\n", "self", ".", "w_t", "=", "nn", ".", "Linear", "(", "e_hidden", ",", "r_hidden", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.GAT_E_to_R.forward": [[62, 79], ["model.GAT_E_to_R.w_h", "model.GAT_E_to_R.w_t", "torch_geometric.utils.softmax", "torch_sparse.spmm", "torch_geometric.utils.softmax", "torch_sparse.spmm", "torch.leaky_relu().float", "torch.leaky_relu().float", "torch.leaky_relu().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x_e.size", "torch.leaky_relu().float", "torch.leaky_relu().float", "torch.leaky_relu().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x_e.size", "model.GAT_E_to_R.a_h1().squeeze", "model.GAT_E_to_R.a_h2().squeeze", "model.GAT_E_to_R.a_t1().squeeze", "model.GAT_E_to_R.a_t2().squeeze", "rel.max", "rel.max", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "rel.view", "edge_index_h.view", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "rel.view", "edge_index_t.view", "model.GAT_E_to_R.a_h1", "model.GAT_E_to_R.a_h2", "model.GAT_E_to_R.a_t1", "model.GAT_E_to_R.a_t2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_e", ",", "edge_index", ",", "rel", ")", ":", "\n", "        ", "edge_index_h", ",", "edge_index_t", "=", "edge_index", "\n", "\n", "x_r_h", "=", "self", ".", "w_h", "(", "x_e", ")", "\n", "x_r_t", "=", "self", ".", "w_t", "(", "x_e", ")", "\n", "\n", "e1", "=", "self", ".", "a_h1", "(", "x_r_h", ")", ".", "squeeze", "(", ")", "[", "edge_index_h", "]", "+", "self", ".", "a_h2", "(", "x_r_t", ")", ".", "squeeze", "(", ")", "[", "edge_index_t", "]", "\n", "e2", "=", "self", ".", "a_t1", "(", "x_r_h", ")", ".", "squeeze", "(", ")", "[", "edge_index_h", "]", "+", "self", ".", "a_t2", "(", "x_r_t", ")", ".", "squeeze", "(", ")", "[", "edge_index_t", "]", "\n", "\n", "alpha", "=", "softmax", "(", "F", ".", "leaky_relu", "(", "e1", ")", ".", "float", "(", ")", ",", "rel", ")", "\n", "x_r_h", "=", "spmm", "(", "torch", ".", "cat", "(", "[", "rel", ".", "view", "(", "1", ",", "-", "1", ")", ",", "edge_index_h", ".", "view", "(", "1", ",", "-", "1", ")", "]", ",", "dim", "=", "0", ")", ",", "alpha", ",", "rel", ".", "max", "(", ")", "+", "1", ",", "x_e", ".", "size", "(", "0", ")", ",", "\n", "x_r_h", ")", "\n", "\n", "alpha", "=", "softmax", "(", "F", ".", "leaky_relu", "(", "e2", ")", ".", "float", "(", ")", ",", "rel", ")", "\n", "x_r_t", "=", "spmm", "(", "torch", ".", "cat", "(", "[", "rel", ".", "view", "(", "1", ",", "-", "1", ")", ",", "edge_index_t", ".", "view", "(", "1", ",", "-", "1", ")", "]", ",", "dim", "=", "0", ")", ",", "alpha", ",", "rel", ".", "max", "(", ")", "+", "1", ",", "x_e", ".", "size", "(", "0", ")", ",", "\n", "x_r_t", ")", "\n", "return", "x_r_h", ",", "x_r_t", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.GAT_R_to_E.__init__": [[82, 87], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "e_hidden", ",", "r_hidden", ")", ":", "\n", "        ", "super", "(", "GAT_R_to_E", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "a_h", "=", "nn", ".", "Linear", "(", "e_hidden", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "a_t", "=", "nn", ".", "Linear", "(", "e_hidden", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "a_r", "=", "nn", ".", "Linear", "(", "r_hidden", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.GAT_R_to_E.forward": [[88, 100], ["torch_geometric.utils.softmax", "torch_sparse.spmm", "torch_geometric.utils.softmax", "torch_sparse.spmm", "model.GAT_R_to_E.a_h().squeeze", "model.GAT_R_to_E.a_t().squeeze", "model.GAT_R_to_E.a_r().squeeze", "torch.leaky_relu().float", "torch.leaky_relu().float", "torch.leaky_relu().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x_e.size", "x_r.size", "torch.leaky_relu().float", "torch.leaky_relu().float", "torch.leaky_relu().float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x_e.size", "x_r.size", "model.GAT_R_to_E.a_h", "model.GAT_R_to_E.a_t", "model.GAT_R_to_E.a_r", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "edge_index_h.view", "rel.view", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "edge_index_t.view", "rel.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_e", ",", "x_r", ",", "edge_index", ",", "rel", ")", ":", "\n", "        ", "edge_index_h", ",", "edge_index_t", "=", "edge_index", "\n", "e_h", "=", "self", ".", "a_h", "(", "x_e", ")", ".", "squeeze", "(", ")", "[", "edge_index_h", "]", "\n", "e_t", "=", "self", ".", "a_t", "(", "x_e", ")", ".", "squeeze", "(", ")", "[", "edge_index_t", "]", "\n", "e_r", "=", "self", ".", "a_r", "(", "x_r", ")", ".", "squeeze", "(", ")", "[", "rel", "]", "\n", "alpha", "=", "softmax", "(", "F", ".", "leaky_relu", "(", "e_h", "+", "e_r", ")", ".", "float", "(", ")", ",", "edge_index_h", ")", "\n", "x_e_h", "=", "spmm", "(", "torch", ".", "cat", "(", "[", "edge_index_h", ".", "view", "(", "1", ",", "-", "1", ")", ",", "rel", ".", "view", "(", "1", ",", "-", "1", ")", "]", ",", "dim", "=", "0", ")", ",", "alpha", ",", "x_e", ".", "size", "(", "0", ")", ",", "x_r", ".", "size", "(", "0", ")", ",", "\n", "x_r", ")", "\n", "alpha", "=", "softmax", "(", "F", ".", "leaky_relu", "(", "e_t", "+", "e_r", ")", ".", "float", "(", ")", ",", "edge_index_t", ")", "\n", "x_e_t", "=", "spmm", "(", "torch", ".", "cat", "(", "[", "edge_index_t", ".", "view", "(", "1", ",", "-", "1", ")", ",", "rel", ".", "view", "(", "1", ",", "-", "1", ")", "]", ",", "dim", "=", "0", ")", ",", "alpha", ",", "x_e", ".", "size", "(", "0", ")", ",", "x_r", ".", "size", "(", "0", ")", ",", "\n", "x_r", ")", "\n", "return", "x_e_h", ",", "x_e_t", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA.__init__": [[103, 128], ["torch.Module.__init__", "GCN().to", "Highway().to", "GAT().to", "Highway().to", "GAT().to", "Highway().to", "Highway().to", "Highway().to", "GAT_E_to_R().to", "GAT_R_to_E().to", "GAT_R_to_E().to", "GAT().to", "torch.Dropout", "torch.Dropout", "torch.Dropout", "model.GCN", "model.Highway", "model.GAT", "model.Highway", "model.GAT", "model.Highway", "model.Highway", "model.Highway", "model.GAT_E_to_R", "model.GAT_R_to_E", "model.GAT_R_to_E", "model.GAT"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "second_device", ",", "e_hidden", "=", "300", ",", "r_hidden", "=", "300", ")", ":", "\n", "        ", "super", "(", "EchoEA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "second_device", "=", "second_device", "\n", "# --- Primitive Aggregation Network --- #", "\n", "self", ".", "gcn1", "=", "GCN", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "highway1", "=", "Highway", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gat1", "=", "GAT", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gathighway1", "=", "Highway", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gat2", "=", "GAT", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gathighway2", "=", "Highway", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "\n", "# --- Echo Network --- #", "\n", "self", ".", "highway3", "=", "Highway", "(", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "highway4", "=", "Highway", "(", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "gat_e_to_r", "=", "GAT_E_to_R", "(", "e_hidden", ",", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "gat_r_to_e", "=", "GAT_R_to_E", "(", "e_hidden", ",", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "gat_r_to_e_t", "=", "GAT_R_to_E", "(", "e_hidden", ",", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# --- Complete Aggregation Network --- #", "\n", "self", ".", "gat", "=", "GAT", "(", "e_hidden", "+", "2", "*", "r_hidden", ")", ".", "to", "(", "device", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.05", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA.forward": [[129, 154], ["torch.normalize", "torch.normalize", "torch.normalize", "model.EchoEA.highway1", "model.EchoEA.gathighway1", "model.EchoEA.gathighway2", "torch.cat.to", "torch.cat.to", "torch.cat.to", "edge_index.clone().to.clone().to.clone().to", "rel.clone().to.clone().to.clone().to", "edge_index_all.clone().to.clone().to.clone().to", "model.EchoEA.gat_e_to_r", "model.EchoEA.gat_r_to_e", "model.EchoEA.gat_r_to_e_t", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.EchoEA.gat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.to", "torch.cat.to", "torch.cat.to", "model.EchoEA.gcn1", "model.EchoEA.gat1", "model.EchoEA.gat2", "model.EchoEA.dropout", "model.EchoEA.dropout", "model.EchoEA.dropout", "model.EchoEA.dropout", "model.EchoEA.dropout", "model.EchoEA.dropout", "model.EchoEA.dropout", "model.EchoEA.dropout", "model.EchoEA.dropout", "edge_index.clone().to.clone().to.clone", "rel.clone().to.clone().to.clone", "edge_index_all.clone().to.clone().to.clone", "model.EchoEA.highway3", "model.EchoEA.highway4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_e", ",", "edge_index", ",", "rel", ",", "edge_index_all", ",", "rel_all", ")", ":", "\n", "# --- Primitive Aggregation Network --- #", "\n", "        ", "x_e_init", "=", "F", ".", "normalize", "(", "x_e", ",", "dim", "=", "1", ",", "p", "=", "2", ")", "\n", "x_e_init2", "=", "self", ".", "highway1", "(", "x_e_init", ",", "self", ".", "gcn1", "(", "self", ".", "dropout", "(", "x_e_init", ")", ",", "edge_index_all", ")", ")", "\n", "x_e_init3", "=", "self", ".", "gathighway1", "(", "x_e_init2", ",", "self", ".", "gat1", "(", "self", ".", "dropout", "(", "x_e_init2", ")", ",", "edge_index_all", ")", ")", "\n", "x_e", "=", "self", ".", "gathighway2", "(", "x_e_init2", ",", "self", ".", "gat2", "(", "self", ".", "dropout", "(", "x_e_init3", ")", ",", "edge_index_all", ")", ")", "\n", "\n", "x_e", "=", "x_e", ".", "to", "(", "self", ".", "device", ")", "\n", "edge_index", "=", "edge_index", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "rel", "=", "rel", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "edge_index_all", "=", "edge_index_all", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# --- Echo Network --- #", "\n", "x_r_h", ",", "x_r_t", "=", "self", ".", "gat_e_to_r", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "edge_index", ",", "rel", ")", "\n", "x_r_h_x_e_h", ",", "x_r_h_x_e_t", "=", "self", ".", "gat_r_to_e", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "self", ".", "dropout", "(", "x_r_h", ")", ",", "edge_index", ",", "rel", ")", "\n", "x_r_t_x_e_h", ",", "x_r_t_x_e_t", "=", "self", ".", "gat_r_to_e_t", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "self", ".", "dropout", "(", "x_r_t", ")", ",", "edge_index", ",", "rel", ")", "\n", "x_e", "=", "torch", ".", "cat", "(", "[", "\n", "x_e", ",", "self", ".", "highway3", "(", "x_r_h_x_e_h", ",", "x_r_t_x_e_h", ")", ",", "self", ".", "highway4", "(", "x_r_h_x_e_t", ",", "x_r_t_x_e_t", ")", ",", "\n", "]", ",", "dim", "=", "1", ")", "\n", "\n", "# --- Complete Aggregation Network --- #", "\n", "y_e", "=", "self", ".", "gat", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "edge_index_all", ")", "\n", "x_e", "=", "torch", ".", "cat", "(", "[", "x_e", ",", "y_e", "]", ",", "dim", "=", "1", ")", "\n", "\n", "return", "x_e", ".", "to", "(", "self", ".", "second_device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA_woPAL.__init__": [[157, 188], ["torch.Module.__init__", "Highway().to", "Highway().to", "GAT_E_to_R().to", "GAT_R_to_E().to", "GAT_R_to_E().to", "GAT().to", "torch.Dropout", "torch.Dropout", "torch.Dropout", "model.Highway", "model.Highway", "model.GAT_E_to_R", "model.GAT_R_to_E", "model.GAT_R_to_E", "model.GAT"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "second_device", ",", "e_hidden", "=", "300", ",", "r_hidden", "=", "300", ")", ":", "\n", "        ", "super", "(", "EchoEA_woPAL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "second_device", "=", "second_device", "\n", "# --- Primitive Aggregation Network --- #", "\n", "# self.gcn1 = GCN(e_hidden).to(self.second_device)", "\n", "# self.highway1 = Highway(e_hidden).to(self.second_device)", "\n", "# self.gat1 = GAT(e_hidden).to(self.second_device)", "\n", "# self.gathighway1 = Highway(e_hidden).to(self.second_device)", "\n", "# self.gat2 = GAT(e_hidden).to(self.second_device)", "\n", "# self.gathighway2 = Highway(e_hidden).to(self.second_device)", "\n", "#", "\n", "# self.gat3 = GAT(e_hidden)", "\n", "# self.gathighway3 = Highway(e_hidden)", "\n", "#", "\n", "# self.gcn2 = GCN(e_hidden)", "\n", "# self.highway2 = Highway(e_hidden + 2 * r_hidden)", "\n", "\n", "# --- Echo Network --- #", "\n", "self", ".", "highway3", "=", "Highway", "(", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "highway4", "=", "Highway", "(", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "gat_e_to_r", "=", "GAT_E_to_R", "(", "e_hidden", ",", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "gat_r_to_e", "=", "GAT_R_to_E", "(", "e_hidden", ",", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "gat_r_to_e_t", "=", "GAT_R_to_E", "(", "e_hidden", ",", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# --- Complete Aggregation Network --- #", "\n", "self", ".", "gat", "=", "GAT", "(", "e_hidden", "+", "2", "*", "r_hidden", ")", ".", "to", "(", "device", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.05", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA_woPAL.forward": [[189, 214], ["torch.normalize", "torch.normalize", "torch.normalize", "torch.cat.to", "torch.cat.to", "torch.cat.to", "edge_index.clone().to.clone().to.clone().to", "rel.clone().to.clone().to.clone().to", "edge_index_all.clone().to.clone().to.clone().to", "model.EchoEA_woPAL.gat_e_to_r", "model.EchoEA_woPAL.gat_r_to_e", "model.EchoEA_woPAL.gat_r_to_e_t", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.EchoEA_woPAL.gat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.to", "torch.cat.to", "torch.cat.to", "model.EchoEA_woPAL.dropout", "model.EchoEA_woPAL.dropout", "model.EchoEA_woPAL.dropout", "model.EchoEA_woPAL.dropout", "model.EchoEA_woPAL.dropout", "model.EchoEA_woPAL.dropout", "edge_index.clone().to.clone().to.clone", "rel.clone().to.clone().to.clone", "edge_index_all.clone().to.clone().to.clone", "model.EchoEA_woPAL.highway3", "model.EchoEA_woPAL.highway4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_e", ",", "edge_index", ",", "rel", ",", "edge_index_all", ",", "rel_all", ")", ":", "\n", "# --- Primitive Aggregation Network --- #", "\n", "        ", "x_e", "=", "F", ".", "normalize", "(", "x_e", ",", "dim", "=", "1", ",", "p", "=", "2", ")", "\n", "# x_e_init2 = self.highway1(x_e_init, self.gcn1(self.dropout(x_e_init), edge_index_all))", "\n", "# x_e_init3 = self.gathighway1(x_e_init2, self.gat1(self.dropout(x_e_init2), edge_index_all))", "\n", "# x_e = self.gathighway2(x_e_init2, self.gat2(self.dropout(x_e_init3), edge_index_all))", "\n", "\n", "x_e", "=", "x_e", ".", "to", "(", "self", ".", "device", ")", "\n", "edge_index", "=", "edge_index", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "rel", "=", "rel", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "edge_index_all", "=", "edge_index_all", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# --- Echo Network --- #", "\n", "x_r_h", ",", "x_r_t", "=", "self", ".", "gat_e_to_r", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "edge_index", ",", "rel", ")", "\n", "x_r_h_x_e_h", ",", "x_r_h_x_e_t", "=", "self", ".", "gat_r_to_e", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "self", ".", "dropout", "(", "x_r_h", ")", ",", "edge_index", ",", "rel", ")", "\n", "x_r_t_x_e_h", ",", "x_r_t_x_e_t", "=", "self", ".", "gat_r_to_e_t", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "self", ".", "dropout", "(", "x_r_t", ")", ",", "edge_index", ",", "rel", ")", "\n", "x_e", "=", "torch", ".", "cat", "(", "[", "\n", "x_e", ",", "self", ".", "highway3", "(", "x_r_h_x_e_h", ",", "x_r_t_x_e_h", ")", ",", "self", ".", "highway4", "(", "x_r_h_x_e_t", ",", "x_r_t_x_e_t", ")", ",", "\n", "]", ",", "dim", "=", "1", ")", "\n", "\n", "# --- Complete Aggregation Network --- #", "\n", "y_e", "=", "self", ".", "gat", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "edge_index_all", ")", "\n", "x_e", "=", "torch", ".", "cat", "(", "[", "x_e", ",", "y_e", "]", ",", "dim", "=", "1", ")", "\n", "\n", "return", "x_e", ".", "to", "(", "self", ".", "second_device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA_woEL.__init__": [[217, 242], ["torch.Module.__init__", "GCN().to", "Highway().to", "GAT().to", "Highway().to", "GAT().to", "Highway().to", "GAT().to", "torch.Dropout", "torch.Dropout", "torch.Dropout", "model.GCN", "model.Highway", "model.GAT", "model.Highway", "model.GAT", "model.Highway", "model.GAT"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "second_device", ",", "e_hidden", "=", "300", ",", "r_hidden", "=", "300", ")", ":", "\n", "        ", "super", "(", "EchoEA_woEL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "second_device", "=", "second_device", "\n", "# --- Primitive Aggregation Network --- #", "\n", "self", ".", "gcn1", "=", "GCN", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "highway1", "=", "Highway", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gat1", "=", "GAT", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gathighway1", "=", "Highway", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gat2", "=", "GAT", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gathighway2", "=", "Highway", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "\n", "# --- Echo Network --- #", "\n", "# self.highway3 = Highway(r_hidden).to(self.device)", "\n", "# self.highway4 = Highway(r_hidden).to(self.device)", "\n", "#", "\n", "# self.gat_e_to_r = GAT_E_to_R(e_hidden, r_hidden).to(self.device)", "\n", "# self.gat_r_to_e = GAT_R_to_E(e_hidden, r_hidden).to(self.device)", "\n", "# self.gat_r_to_e_t = GAT_R_to_E(e_hidden, r_hidden).to(self.device)", "\n", "\n", "# --- Complete Aggregation Network --- #", "\n", "self", ".", "gat", "=", "GAT", "(", "e_hidden", ")", ".", "to", "(", "device", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.05", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA_woEL.forward": [[243, 268], ["torch.normalize", "torch.normalize", "torch.normalize", "model.EchoEA_woEL.highway1", "model.EchoEA_woEL.gathighway1", "model.EchoEA_woEL.gathighway2", "torch.cat.to", "torch.cat.to", "torch.cat.to", "edge_index.clone().to.clone().to.clone().to", "rel.clone().to.clone().to.clone().to", "edge_index_all.clone().to.clone().to.clone().to", "model.EchoEA_woEL.gat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.to", "torch.cat.to", "torch.cat.to", "model.EchoEA_woEL.gcn1", "model.EchoEA_woEL.gat1", "model.EchoEA_woEL.gat2", "model.EchoEA_woEL.dropout", "model.EchoEA_woEL.dropout", "model.EchoEA_woEL.dropout", "model.EchoEA_woEL.dropout", "edge_index.clone().to.clone().to.clone", "rel.clone().to.clone().to.clone", "edge_index_all.clone().to.clone().to.clone"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_e", ",", "edge_index", ",", "rel", ",", "edge_index_all", ",", "rel_all", ")", ":", "\n", "# --- Primitive Aggregation Network --- #", "\n", "        ", "x_e_init", "=", "F", ".", "normalize", "(", "x_e", ",", "dim", "=", "1", ",", "p", "=", "2", ")", "\n", "x_e_init2", "=", "self", ".", "highway1", "(", "x_e_init", ",", "self", ".", "gcn1", "(", "self", ".", "dropout", "(", "x_e_init", ")", ",", "edge_index_all", ")", ")", "\n", "x_e_init3", "=", "self", ".", "gathighway1", "(", "x_e_init2", ",", "self", ".", "gat1", "(", "self", ".", "dropout", "(", "x_e_init2", ")", ",", "edge_index_all", ")", ")", "\n", "x_e", "=", "self", ".", "gathighway2", "(", "x_e_init2", ",", "self", ".", "gat2", "(", "self", ".", "dropout", "(", "x_e_init3", ")", ",", "edge_index_all", ")", ")", "\n", "\n", "x_e", "=", "x_e", ".", "to", "(", "self", ".", "device", ")", "\n", "edge_index", "=", "edge_index", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "rel", "=", "rel", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "edge_index_all", "=", "edge_index_all", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# --- Echo Network --- #", "\n", "# x_r_h, x_r_t = self.gat_e_to_r(self.dropout(x_e), edge_index, rel)", "\n", "# x_r_h_x_e_h, x_r_h_x_e_t = self.gat_r_to_e(self.dropout(x_e), self.dropout(x_r_h), edge_index, rel)", "\n", "# x_r_t_x_e_h, x_r_t_x_e_t = self.gat_r_to_e_t(self.dropout(x_e), self.dropout(x_r_t), edge_index, rel)", "\n", "# x_e = torch.cat([", "\n", "#     x_e, self.highway3(x_r_h_x_e_h, x_r_t_x_e_h), self.highway4(x_r_h_x_e_t, x_r_t_x_e_t),", "\n", "# ], dim=1)", "\n", "\n", "# --- Complete Aggregation Network --- #", "\n", "y_e", "=", "self", ".", "gat", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "edge_index_all", ")", "\n", "x_e", "=", "torch", ".", "cat", "(", "[", "x_e", ",", "y_e", "]", ",", "dim", "=", "1", ")", "\n", "\n", "return", "x_e", ".", "to", "(", "self", ".", "second_device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA_woCAL.__init__": [[271, 296], ["torch.Module.__init__", "GCN().to", "Highway().to", "GAT().to", "Highway().to", "GAT().to", "Highway().to", "Highway().to", "Highway().to", "GAT_E_to_R().to", "GAT_R_to_E().to", "GAT_R_to_E().to", "torch.Dropout", "torch.Dropout", "torch.Dropout", "model.GCN", "model.Highway", "model.GAT", "model.Highway", "model.GAT", "model.Highway", "model.Highway", "model.Highway", "model.GAT_E_to_R", "model.GAT_R_to_E", "model.GAT_R_to_E"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "second_device", ",", "e_hidden", "=", "300", ",", "r_hidden", "=", "300", ")", ":", "\n", "        ", "super", "(", "EchoEA_woCAL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "second_device", "=", "second_device", "\n", "# --- Primitive Aggregation Network --- #", "\n", "self", ".", "gcn1", "=", "GCN", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "highway1", "=", "Highway", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gat1", "=", "GAT", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gathighway1", "=", "Highway", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gat2", "=", "GAT", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "self", ".", "gathighway2", "=", "Highway", "(", "e_hidden", ")", ".", "to", "(", "self", ".", "second_device", ")", "\n", "\n", "# --- Echo Network --- #", "\n", "self", ".", "highway3", "=", "Highway", "(", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "highway4", "=", "Highway", "(", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "gat_e_to_r", "=", "GAT_E_to_R", "(", "e_hidden", ",", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "gat_r_to_e", "=", "GAT_R_to_E", "(", "e_hidden", ",", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "self", ".", "gat_r_to_e_t", "=", "GAT_R_to_E", "(", "e_hidden", ",", "r_hidden", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# --- Complete Aggregation Network --- #", "\n", "# self.gat = GAT(e_hidden + 2 * r_hidden).to(device)", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.05", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA_woCAL.forward": [[297, 322], ["torch.normalize", "torch.normalize", "torch.normalize", "model.EchoEA_woCAL.highway1", "model.EchoEA_woCAL.gathighway1", "model.EchoEA_woCAL.gathighway2", "torch.cat.to", "torch.cat.to", "torch.cat.to", "edge_index.clone().to.clone().to.clone().to", "rel.clone().to.clone().to.clone().to", "edge_index_all.clone().to.clone().to.clone().to", "model.EchoEA_woCAL.gat_e_to_r", "model.EchoEA_woCAL.gat_r_to_e", "model.EchoEA_woCAL.gat_r_to_e_t", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.to", "torch.cat.to", "torch.cat.to", "model.EchoEA_woCAL.gcn1", "model.EchoEA_woCAL.gat1", "model.EchoEA_woCAL.gat2", "model.EchoEA_woCAL.dropout", "model.EchoEA_woCAL.dropout", "model.EchoEA_woCAL.dropout", "model.EchoEA_woCAL.dropout", "model.EchoEA_woCAL.dropout", "model.EchoEA_woCAL.dropout", "model.EchoEA_woCAL.dropout", "model.EchoEA_woCAL.dropout", "edge_index.clone().to.clone().to.clone", "rel.clone().to.clone().to.clone", "edge_index_all.clone().to.clone().to.clone", "model.EchoEA_woCAL.highway3", "model.EchoEA_woCAL.highway4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_e", ",", "edge_index", ",", "rel", ",", "edge_index_all", ",", "rel_all", ")", ":", "\n", "# --- Primitive Aggregation Network --- #", "\n", "        ", "x_e_init", "=", "F", ".", "normalize", "(", "x_e", ",", "dim", "=", "1", ",", "p", "=", "2", ")", "\n", "x_e_init2", "=", "self", ".", "highway1", "(", "x_e_init", ",", "self", ".", "gcn1", "(", "self", ".", "dropout", "(", "x_e_init", ")", ",", "edge_index_all", ")", ")", "\n", "x_e_init3", "=", "self", ".", "gathighway1", "(", "x_e_init2", ",", "self", ".", "gat1", "(", "self", ".", "dropout", "(", "x_e_init2", ")", ",", "edge_index_all", ")", ")", "\n", "x_e", "=", "self", ".", "gathighway2", "(", "x_e_init2", ",", "self", ".", "gat2", "(", "self", ".", "dropout", "(", "x_e_init3", ")", ",", "edge_index_all", ")", ")", "\n", "\n", "x_e", "=", "x_e", ".", "to", "(", "self", ".", "device", ")", "\n", "edge_index", "=", "edge_index", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "rel", "=", "rel", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "edge_index_all", "=", "edge_index_all", ".", "clone", "(", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# --- Echo Network --- #", "\n", "x_r_h", ",", "x_r_t", "=", "self", ".", "gat_e_to_r", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "edge_index", ",", "rel", ")", "\n", "x_r_h_x_e_h", ",", "x_r_h_x_e_t", "=", "self", ".", "gat_r_to_e", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "self", ".", "dropout", "(", "x_r_h", ")", ",", "edge_index", ",", "rel", ")", "\n", "x_r_t_x_e_h", ",", "x_r_t_x_e_t", "=", "self", ".", "gat_r_to_e_t", "(", "self", ".", "dropout", "(", "x_e", ")", ",", "self", ".", "dropout", "(", "x_r_t", ")", ",", "edge_index", ",", "rel", ")", "\n", "x_e", "=", "torch", ".", "cat", "(", "[", "\n", "x_e", ",", "self", ".", "highway3", "(", "x_r_h_x_e_h", ",", "x_r_t_x_e_h", ")", ",", "self", ".", "highway4", "(", "x_r_h_x_e_t", ",", "x_r_t_x_e_t", ")", ",", "\n", "]", ",", "dim", "=", "1", ")", "\n", "\n", "# --- Complete Aggregation Network --- #", "\n", "# y_e = self.gat(self.dropout(x_e), edge_index_all)", "\n", "# x_e = torch.cat([x_e, y_e], dim=1)", "\n", "\n", "return", "x_e", ".", "to", "(", "self", ".", "second_device", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woCAN.parse_args": [[15, 40], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--cuda\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_parallel\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--GPU\"", ",", "type", "=", "list", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "[", "'0'", "]", ",", "[", "'1'", "]", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--data\"", ",", "default", "=", "\"data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lang\"", ",", "default", "=", "\"zh_en\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--rate\"", ",", "type", "=", "float", ",", "default", "=", "0.3", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--r_hidden\"", ",", "type", "=", "int", ",", "default", "=", "300", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--k\"", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\"--gamma\"", ",", "type", "=", "float", ",", "default", "=", "3", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--epoch\"", ",", "type", "=", "int", ",", "default", "=", "500", ")", "\n", "parser", ".", "add_argument", "(", "\"--neg_epoch\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_epoch\"", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n", "parser", ".", "add_argument", "(", "\"--reset_epoch\"", ",", "type", "=", "int", ",", "default", "=", "20", ")", "\n", "parser", ".", "add_argument", "(", "\"--stable_test\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--keep_seeds\"", ",", "type", "=", "int", ",", "default", "=", "4500", ")", "\n", "parser", ".", "add_argument", "(", "\"--new_train_seeds\"", ",", "type", "=", "int", ",", "default", "=", "8000", ")", "\n", "parser", ".", "add_argument", "(", "\"--neg_seeds\"", ",", "type", "=", "int", ",", "default", "=", "2000", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woCAN.get_emb": [[64, 70], ["model.eval", "torch.no_grad", "model", "model"], "function", ["None"], ["def", "get_emb", "(", "model", ",", "data", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "x1", "=", "model", "(", "data", ".", "x1", ",", "data", ".", "edge_index1", ",", "data", ".", "rel1", ",", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", ")", "\n", "x2", "=", "model", "(", "data", ".", "x2", ",", "data", ".", "edge_index2", ",", "data", ".", "rel2", ",", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", ")", "\n", "", "return", "x1", ",", "x2", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woCAN.get_train_batch": [[72, 79], ["torch.stack", "[].t", "[].t", "[].t", "[].t", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist"], "function", ["None"], ["", "def", "get_train_batch", "(", "x1", ",", "x2", ",", "train_set", ",", "k", "=", "5", ")", ":", "\n", "    ", "e1_neg1", "=", "torch", ".", "cdist", "(", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x1", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e1_neg2", "=", "torch", ".", "cdist", "(", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x2", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e2_neg1", "=", "torch", ".", "cdist", "(", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", ",", "x2", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e2_neg2", "=", "torch", ".", "cdist", "(", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", ",", "x1", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "train_batch", "=", "torch", ".", "stack", "(", "[", "e1_neg1", ",", "e1_neg2", ",", "e2_neg1", ",", "e2_neg2", "]", ",", "dim", "=", "0", ")", "\n", "return", "train_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woCAN.train": [[81, 90], ["model.train", "model", "model", "criterion", "optimizer.zero_grad", "criterion.backward", "optimizer.step"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.train"], ["", "def", "train", "(", "model", ",", "criterion", ",", "optimizer", ",", "data", ",", "train_batch", ",", "false_pair", "=", "None", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "x1", "=", "model", "(", "data", ".", "x1", ",", "data", ".", "edge_index1", ",", "data", ".", "rel1", ",", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", ")", "\n", "x2", "=", "model", "(", "data", ".", "x2", ",", "data", ".", "edge_index2", ",", "data", ".", "rel2", ",", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", ")", "\n", "loss", "=", "criterion", "(", "x1", ",", "x2", ",", "data", ".", "new_train_set", ",", "train_batch", ",", "false_pair", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woCAN.init_data": [[92, 100], ["F.normalize().to().requires_grad_", "F.normalize().to().requires_grad_", "utils.add_inverse_rels", "utils.add_inverse_rels", "data.DBP15K", "F.normalize().to", "F.normalize().to", "F.normalize", "F.normalize"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels"], ["", "def", "init_data", "(", "args", ",", "device", ")", ":", "\n", "# args.data\u6570\u636e\u96c6\u6839\u76ee\u5f55,args.lang\u91c7\u7528\u7684\u6570\u636e\u96c6", "\n", "    ", "data", "=", "DBP15K", "(", "args", ".", "data", ",", "args", ".", "lang", ",", "rate", "=", "args", ".", "rate", ")", "[", "0", "]", "\n", "data", ".", "x1", "=", "F", ".", "normalize", "(", "data", ".", "x1", ",", "dim", "=", "1", ",", "p", "=", "2", ")", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", ")", "\n", "data", ".", "x2", "=", "F", ".", "normalize", "(", "data", ".", "x2", ",", "dim", "=", "1", ",", "p", "=", "2", ")", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", ")", "\n", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", "=", "add_inverse_rels", "(", "data", ".", "edge_index1", ",", "data", ".", "rel1", ")", "\n", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", "=", "add_inverse_rels", "(", "data", ".", "edge_index2", ",", "data", ".", "rel2", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woCAN.test": [[102, 114], ["torch.no_grad", "print", "utils.get_hits", "print", "utils.get_hits", "print", "S.detach().cpu", "utils.get_hits_stable", "S.detach"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits_stable"], ["", "def", "test", "(", "x1", ",", "x2", ",", "data", ",", "stable", "=", "False", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "#         print('-' * 16 + 'Train_set' + '-' * 16)", "\n", "#         get_hits(x1, x2, data.train_set)", "\n", "        ", "print", "(", "'-'", "*", "16", "+", "'Train_set'", "+", "'-'", "*", "16", ")", "\n", "get_hits", "(", "x1", ",", "x2", ",", "data", ".", "new_train_set", ")", "\n", "print", "(", "'-'", "*", "16", "+", "'Test_set'", "+", "'-'", "*", "17", ")", "\n", "S", ",", "hits1", "=", "get_hits", "(", "x1", ",", "x2", ",", "data", ".", "test_set", ")", "\n", "if", "stable", ":", "\n", "            ", "get_hits_stable", "(", "x1", ",", "x2", ",", "data", ".", "test_set", ")", "\n", "", "print", "(", ")", "\n", "", "return", "S", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "hits1", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woCAN.generate_pairs": [[116, 201], ["torch.no_grad", "torch.cdist", "utils.composeS.to", "utils.composeS", "seeds.size", "torch.zeros", "torch.zeros", "range", "range", "list", "list", "len", "len", "print", "print", "print", "print", "global_align.append", "utils.composeS.topk", "utils.composeS.T.topk", "set().intersection", "set().difference", "j.item", "list.append", "set", "set", "seeds[].item", "seeds[].item", "list.append", "list.append", "set", "set", "seeds[].item", "seeds[].item", "S_global.softmax", "S_global.softmax", "seeds[].item", "seeds[].item", "seeds[].item", "seeds[].item", "index_e1[].item", "index_e2[].item", "left_i.item", "left_i.item", "left_i.item"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.composeS"], ["", "def", "generate_pairs", "(", "x1", ",", "x2", ",", "data", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "seeds", "=", "data", ".", "test_set", "\n", "\n", "new_idx", "=", "[", "]", "\n", "false_idx", "=", "[", "]", "\n", "global_align", "=", "[", "]", "\n", "\n", "'''\n        \u524dcompose\u751f\u6210\u6837\u4f8b\n        '''", "\n", "S", "=", "torch", ".", "cdist", "(", "x1", "[", "seeds", "[", ":", ",", "0", "]", "]", ",", "x2", "[", "seeds", "[", ":", ",", "1", "]", "]", ",", "p", "=", "1", ")", "\n", "S", "=", "S", ".", "to", "(", "second_device", ")", "\n", "S", "=", "composeS", "(", "[", "S1", ",", "S2", ",", "S", "]", ",", "[", "0.8", ",", "0.6", ",", "0.1", "]", ")", "\n", "S_global", "=", "-", "S", "\n", "\n", "'''\n        \u5168\u5c40\u5bf9\u9f50\u7b5b\u9009\u6837\u4f8b\n        '''", "\n", "pair_num", "=", "seeds", ".", "size", "(", "0", ")", "\n", "index", "=", "(", "S_global", ".", "softmax", "(", "1", ")", "+", "S_global", ".", "softmax", "(", "0", ")", ")", ".", "flatten", "(", ")", ".", "argsort", "(", "descending", "=", "True", ")", "\n", "index_e1", "=", "index", "//", "pair_num", "\n", "index_e2", "=", "index", "%", "pair_num", "\n", "aligned_e1", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "aligned_e2", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "true_aligned", "=", "0", "\n", "for", "_", "in", "range", "(", "pair_num", "*", "100", ")", ":", "\n", "            ", "if", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "or", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", ":", "\n", "                ", "continue", "\n", "", "global_align", ".", "append", "(", "(", "seeds", "[", "index_e1", "[", "_", "]", ".", "item", "(", ")", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "index_e2", "[", "_", "]", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "if", "index_e1", "[", "_", "]", "==", "index_e2", "[", "_", "]", ":", "\n", "                ", "true_aligned", "+=", "1", "\n", "", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "=", "True", "\n", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", "=", "True", "\n", "\n", "", "'''\n        \u5c40\u90e8\u5bf9\u9f50\u7b5b\u9009\u6837\u4f8b\n        '''", "\n", "left_pred", "=", "S", ".", "topk", "(", "1", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "right_pred", "=", "S", ".", "T", ".", "topk", "(", "1", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "\n", "# left_pred \u5de6\u5230\u53f3\u8ddd\u79bb", "\n", "# right_pred \u53f3\u5230\u5de6\u8ddd\u79bb", "\n", "\n", "positive", "=", "0", "\n", "negative", "=", "0", "\n", "false_positive", "=", "0", "\n", "false_negative", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "left_pred", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "left_i", "=", "left_pred", "[", "i", "]", "\n", "j", "=", "right_pred", "[", "left_i", "]", "\n", "if", "i", "==", "j", ".", "item", "(", ")", ":", "\n", "                ", "new_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "negative", "+=", "1", "\n", "l2r_dist", "=", "S", "[", "i", ",", "left_i", "]", "\n", "r2l_dist", "=", "S", ".", "T", "[", "left_i", ",", "j", "]", "\n", "\n", "if", "(", "l2r_dist", ">", "r2l_dist", ")", ":", "\n", "                    ", "false_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "false_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "", "", "new_idx", "=", "list", "(", "set", "(", "new_idx", ")", ".", "intersection", "(", "set", "(", "global_align", ")", ")", ")", "\n", "false_idx", "=", "list", "(", "set", "(", "false_idx", ")", ".", "difference", "(", "set", "(", "global_align", ")", ")", ")", "\n", "\n", "positive", "=", "len", "(", "new_idx", ")", "\n", "negative", "=", "len", "(", "false_idx", ")", "\n", "\n", "false_positive", "=", "0", "\n", "false_negative", "=", "0", "\n", "for", "p", "in", "new_idx", ":", "\n", "            ", "if", "(", "p", "[", "0", "]", "!=", "p", "[", "1", "]", ")", ":", "\n", "                ", "false_positive", "+=", "1", "\n", "", "", "for", "f", "in", "false_idx", ":", "\n", "            ", "if", "(", "f", "[", "0", "]", "==", "f", "[", "1", "]", ")", ":", "\n", "                ", "false_negative", "+=", "1", "\n", "\n", "", "", "print", "(", ")", "\n", "print", "(", "\"positive:\"", ",", "positive", ",", "\"negative:\"", ",", "negative", ",", "\"false_positive:\"", ",", "false_positive", ",", "\"false_negative\"", ",", "false_negative", ")", "\n", "print", "(", "\"false_positive_rate:\"", ",", "false_positive", "/", "positive", ")", "\n", "print", "(", "\"false_negative_rate:\"", ",", "false_negative", "/", "negative", ")", "\n", "\n", "return", "new_idx", ",", "false_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woCAN.reset": [[203, 223], ["torch.no_grad", "train_basic_woCAN.generate_pairs", "torch.LongTensor", "torch.randperm", "new_train_set[].to", "torch.randperm", "torch.cat().to", "torch.LongTensor", "torch.randperm", "new_test_false_set[].to", "new_train_set[].to.size", "data.train_set.size", "new_test_false_set[].to.size", "torch.cat"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.generate_pairs"], ["", "", "def", "reset", "(", "x1", ",", "x2", ",", "data", ",", "keep_seeds", "=", "2000", ",", "new_train_seeds", "=", "7000", ",", "neg_seeds", "=", "1000", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "new_pair", ",", "false_pair", "=", "generate_pairs", "(", "x1", ",", "x2", ",", "data", ")", "\n", "\n", "new_train_set", "=", "torch", ".", "LongTensor", "(", "new_pair", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "new_train_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "keep_seeds", "]", "\n", "new_train_set", "=", "new_train_set", "[", "idx", "]", ".", "to", "(", "second_device", ")", "\n", "\n", "perm", "=", "torch", ".", "randperm", "(", "data", ".", "train_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "new_train_seeds", "]", "\n", "new_train_set_base", "=", "data", ".", "train_set", "[", "idx", "]", "\n", "data", ".", "new_train_set", "=", "torch", ".", "cat", "(", "[", "new_train_set_base", ",", "new_train_set", "]", ",", "dim", "=", "0", ")", ".", "to", "(", "second_device", ")", "\n", "\n", "new_test_false_set", "=", "torch", ".", "LongTensor", "(", "false_pair", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "new_test_false_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "neg_seeds", "]", "\n", "new_test_false_set", "=", "new_test_false_set", "[", "idx", "]", ".", "to", "(", "second_device", ")", "\n", "#         return new_test_false_set", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woPAN.parse_args": [[15, 40], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--cuda\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_parallel\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--GPU\"", ",", "type", "=", "list", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "[", "'0'", "]", ",", "[", "'1'", "]", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--data\"", ",", "default", "=", "\"data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lang\"", ",", "default", "=", "\"zh_en\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--rate\"", ",", "type", "=", "float", ",", "default", "=", "0.3", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--r_hidden\"", ",", "type", "=", "int", ",", "default", "=", "300", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--k\"", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\"--gamma\"", ",", "type", "=", "float", ",", "default", "=", "3", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--epoch\"", ",", "type", "=", "int", ",", "default", "=", "500", ")", "\n", "parser", ".", "add_argument", "(", "\"--neg_epoch\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_epoch\"", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n", "parser", ".", "add_argument", "(", "\"--reset_epoch\"", ",", "type", "=", "int", ",", "default", "=", "20", ")", "\n", "parser", ".", "add_argument", "(", "\"--stable_test\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--keep_seeds\"", ",", "type", "=", "int", ",", "default", "=", "4500", ")", "\n", "parser", ".", "add_argument", "(", "\"--new_train_seeds\"", ",", "type", "=", "int", ",", "default", "=", "8000", ")", "\n", "parser", ".", "add_argument", "(", "\"--neg_seeds\"", ",", "type", "=", "int", ",", "default", "=", "2000", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woPAN.get_emb": [[64, 70], ["model.eval", "torch.no_grad", "model", "model"], "function", ["None"], ["def", "get_emb", "(", "model", ",", "data", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "x1", "=", "model", "(", "data", ".", "x1", ",", "data", ".", "edge_index1", ",", "data", ".", "rel1", ",", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", ")", "\n", "x2", "=", "model", "(", "data", ".", "x2", ",", "data", ".", "edge_index2", ",", "data", ".", "rel2", ",", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", ")", "\n", "", "return", "x1", ",", "x2", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woPAN.get_train_batch": [[72, 79], ["torch.stack", "[].t", "[].t", "[].t", "[].t", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist"], "function", ["None"], ["", "def", "get_train_batch", "(", "x1", ",", "x2", ",", "train_set", ",", "k", "=", "5", ")", ":", "\n", "    ", "e1_neg1", "=", "torch", ".", "cdist", "(", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x1", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e1_neg2", "=", "torch", ".", "cdist", "(", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x2", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e2_neg1", "=", "torch", ".", "cdist", "(", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", ",", "x2", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e2_neg2", "=", "torch", ".", "cdist", "(", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", ",", "x1", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "train_batch", "=", "torch", ".", "stack", "(", "[", "e1_neg1", ",", "e1_neg2", ",", "e2_neg1", ",", "e2_neg2", "]", ",", "dim", "=", "0", ")", "\n", "return", "train_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woPAN.train": [[81, 90], ["model.train", "model", "model", "criterion", "optimizer.zero_grad", "criterion.backward", "optimizer.step"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.train"], ["", "def", "train", "(", "model", ",", "criterion", ",", "optimizer", ",", "data", ",", "train_batch", ",", "false_pair", "=", "None", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "x1", "=", "model", "(", "data", ".", "x1", ",", "data", ".", "edge_index1", ",", "data", ".", "rel1", ",", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", ")", "\n", "x2", "=", "model", "(", "data", ".", "x2", ",", "data", ".", "edge_index2", ",", "data", ".", "rel2", ",", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", ")", "\n", "loss", "=", "criterion", "(", "x1", ",", "x2", ",", "data", ".", "new_train_set", ",", "train_batch", ",", "false_pair", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woPAN.init_data": [[92, 100], ["F.normalize().to().requires_grad_", "F.normalize().to().requires_grad_", "utils.add_inverse_rels", "utils.add_inverse_rels", "data.DBP15K", "F.normalize().to", "F.normalize().to", "F.normalize", "F.normalize"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels"], ["", "def", "init_data", "(", "args", ",", "device", ")", ":", "\n", "# args.data\u6570\u636e\u96c6\u6839\u76ee\u5f55,args.lang\u91c7\u7528\u7684\u6570\u636e\u96c6", "\n", "    ", "data", "=", "DBP15K", "(", "args", ".", "data", ",", "args", ".", "lang", ",", "rate", "=", "args", ".", "rate", ")", "[", "0", "]", "\n", "data", ".", "x1", "=", "F", ".", "normalize", "(", "data", ".", "x1", ",", "dim", "=", "1", ",", "p", "=", "2", ")", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", ")", "\n", "data", ".", "x2", "=", "F", ".", "normalize", "(", "data", ".", "x2", ",", "dim", "=", "1", ",", "p", "=", "2", ")", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", ")", "\n", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", "=", "add_inverse_rels", "(", "data", ".", "edge_index1", ",", "data", ".", "rel1", ")", "\n", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", "=", "add_inverse_rels", "(", "data", ".", "edge_index2", ",", "data", ".", "rel2", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woPAN.test": [[102, 114], ["torch.no_grad", "print", "utils.get_hits", "print", "utils.get_hits", "print", "S.detach().cpu", "utils.get_hits_stable", "S.detach"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits_stable"], ["", "def", "test", "(", "x1", ",", "x2", ",", "data", ",", "stable", "=", "False", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "#         print('-' * 16 + 'Train_set' + '-' * 16)", "\n", "#         get_hits(x1, x2, data.train_set)", "\n", "        ", "print", "(", "'-'", "*", "16", "+", "'Train_set'", "+", "'-'", "*", "16", ")", "\n", "get_hits", "(", "x1", ",", "x2", ",", "data", ".", "new_train_set", ")", "\n", "print", "(", "'-'", "*", "16", "+", "'Test_set'", "+", "'-'", "*", "17", ")", "\n", "S", ",", "hits1", "=", "get_hits", "(", "x1", ",", "x2", ",", "data", ".", "test_set", ")", "\n", "if", "stable", ":", "\n", "            ", "get_hits_stable", "(", "x1", ",", "x2", ",", "data", ".", "test_set", ")", "\n", "", "print", "(", ")", "\n", "", "return", "S", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "hits1", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woPAN.generate_pairs": [[116, 201], ["torch.no_grad", "torch.cdist", "utils.composeS.to", "utils.composeS", "seeds.size", "torch.zeros", "torch.zeros", "range", "range", "list", "list", "len", "len", "print", "print", "print", "print", "global_align.append", "utils.composeS.topk", "utils.composeS.T.topk", "set().intersection", "set().difference", "j.item", "list.append", "set", "set", "seeds[].item", "seeds[].item", "list.append", "list.append", "set", "set", "seeds[].item", "seeds[].item", "S_global.softmax", "S_global.softmax", "seeds[].item", "seeds[].item", "seeds[].item", "seeds[].item", "index_e1[].item", "index_e2[].item", "left_i.item", "left_i.item", "left_i.item"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.composeS"], ["", "def", "generate_pairs", "(", "x1", ",", "x2", ",", "data", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "seeds", "=", "data", ".", "test_set", "\n", "\n", "new_idx", "=", "[", "]", "\n", "false_idx", "=", "[", "]", "\n", "global_align", "=", "[", "]", "\n", "\n", "'''\n        \u524dcompose\u751f\u6210\u6837\u4f8b\n        '''", "\n", "S", "=", "torch", ".", "cdist", "(", "x1", "[", "seeds", "[", ":", ",", "0", "]", "]", ",", "x2", "[", "seeds", "[", ":", ",", "1", "]", "]", ",", "p", "=", "1", ")", "\n", "S", "=", "S", ".", "to", "(", "second_device", ")", "\n", "S", "=", "composeS", "(", "[", "S1", ",", "S2", ",", "S", "]", ",", "[", "0.8", ",", "0.6", ",", "0.1", "]", ")", "\n", "S_global", "=", "-", "S", "\n", "\n", "'''\n        \u5168\u5c40\u5bf9\u9f50\u7b5b\u9009\u6837\u4f8b\n        '''", "\n", "pair_num", "=", "seeds", ".", "size", "(", "0", ")", "\n", "index", "=", "(", "S_global", ".", "softmax", "(", "1", ")", "+", "S_global", ".", "softmax", "(", "0", ")", ")", ".", "flatten", "(", ")", ".", "argsort", "(", "descending", "=", "True", ")", "\n", "index_e1", "=", "index", "//", "pair_num", "\n", "index_e2", "=", "index", "%", "pair_num", "\n", "aligned_e1", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "aligned_e2", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "true_aligned", "=", "0", "\n", "for", "_", "in", "range", "(", "pair_num", "*", "100", ")", ":", "\n", "            ", "if", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "or", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", ":", "\n", "                ", "continue", "\n", "", "global_align", ".", "append", "(", "(", "seeds", "[", "index_e1", "[", "_", "]", ".", "item", "(", ")", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "index_e2", "[", "_", "]", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "if", "index_e1", "[", "_", "]", "==", "index_e2", "[", "_", "]", ":", "\n", "                ", "true_aligned", "+=", "1", "\n", "", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "=", "True", "\n", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", "=", "True", "\n", "\n", "", "'''\n        \u5c40\u90e8\u5bf9\u9f50\u7b5b\u9009\u6837\u4f8b\n        '''", "\n", "left_pred", "=", "S", ".", "topk", "(", "1", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "right_pred", "=", "S", ".", "T", ".", "topk", "(", "1", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "\n", "# left_pred \u5de6\u5230\u53f3\u8ddd\u79bb", "\n", "# right_pred \u53f3\u5230\u5de6\u8ddd\u79bb", "\n", "\n", "positive", "=", "0", "\n", "negative", "=", "0", "\n", "false_positive", "=", "0", "\n", "false_negative", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "left_pred", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "left_i", "=", "left_pred", "[", "i", "]", "\n", "j", "=", "right_pred", "[", "left_i", "]", "\n", "if", "i", "==", "j", ".", "item", "(", ")", ":", "\n", "                ", "new_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "negative", "+=", "1", "\n", "l2r_dist", "=", "S", "[", "i", ",", "left_i", "]", "\n", "r2l_dist", "=", "S", ".", "T", "[", "left_i", ",", "j", "]", "\n", "\n", "if", "(", "l2r_dist", ">", "r2l_dist", ")", ":", "\n", "                    ", "false_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "false_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "", "", "new_idx", "=", "list", "(", "set", "(", "new_idx", ")", ".", "intersection", "(", "set", "(", "global_align", ")", ")", ")", "\n", "false_idx", "=", "list", "(", "set", "(", "false_idx", ")", ".", "difference", "(", "set", "(", "global_align", ")", ")", ")", "\n", "\n", "positive", "=", "len", "(", "new_idx", ")", "\n", "negative", "=", "len", "(", "false_idx", ")", "\n", "\n", "false_positive", "=", "0", "\n", "false_negative", "=", "0", "\n", "for", "p", "in", "new_idx", ":", "\n", "            ", "if", "(", "p", "[", "0", "]", "!=", "p", "[", "1", "]", ")", ":", "\n", "                ", "false_positive", "+=", "1", "\n", "", "", "for", "f", "in", "false_idx", ":", "\n", "            ", "if", "(", "f", "[", "0", "]", "==", "f", "[", "1", "]", ")", ":", "\n", "                ", "false_negative", "+=", "1", "\n", "\n", "", "", "print", "(", ")", "\n", "print", "(", "\"positive:\"", ",", "positive", ",", "\"negative:\"", ",", "negative", ",", "\"false_positive:\"", ",", "false_positive", ",", "\"false_negative\"", ",", "false_negative", ")", "\n", "print", "(", "\"false_positive_rate:\"", ",", "false_positive", "/", "positive", ")", "\n", "print", "(", "\"false_negative_rate:\"", ",", "false_negative", "/", "negative", ")", "\n", "\n", "return", "new_idx", ",", "false_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woPAN.reset": [[203, 223], ["torch.no_grad", "train_basic_woPAN.generate_pairs", "torch.LongTensor", "torch.randperm", "new_train_set[].to", "torch.randperm", "torch.cat().to", "torch.LongTensor", "torch.randperm", "new_test_false_set[].to", "new_train_set[].to.size", "data.train_set.size", "new_test_false_set[].to.size", "torch.cat"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.generate_pairs"], ["", "", "def", "reset", "(", "x1", ",", "x2", ",", "data", ",", "keep_seeds", "=", "2000", ",", "new_train_seeds", "=", "7000", ",", "neg_seeds", "=", "1000", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "new_pair", ",", "false_pair", "=", "generate_pairs", "(", "x1", ",", "x2", ",", "data", ")", "\n", "\n", "new_train_set", "=", "torch", ".", "LongTensor", "(", "new_pair", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "new_train_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "keep_seeds", "]", "\n", "new_train_set", "=", "new_train_set", "[", "idx", "]", ".", "to", "(", "second_device", ")", "\n", "\n", "perm", "=", "torch", ".", "randperm", "(", "data", ".", "train_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "new_train_seeds", "]", "\n", "new_train_set_base", "=", "data", ".", "train_set", "[", "idx", "]", "\n", "data", ".", "new_train_set", "=", "torch", ".", "cat", "(", "[", "new_train_set_base", ",", "new_train_set", "]", ",", "dim", "=", "0", ")", ".", "to", "(", "second_device", ")", "\n", "\n", "new_test_false_set", "=", "torch", ".", "LongTensor", "(", "false_pair", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "new_test_false_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "neg_seeds", "]", "\n", "new_test_false_set", "=", "new_test_false_set", "[", "idx", "]", ".", "to", "(", "second_device", ")", "\n", "#         return new_test_false_set", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.get_attr_name2id_dict": [[12, 20], ["open", "line.split", "line.split"], "function", ["None"], ["def", "get_attr_name2id_dict", "(", "path", ")", ":", "\n", "    ", "att_dict", "=", "{", "}", "\n", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "'utf-8'", ")", "as", "file", ":", "\n", "        ", "for", "line", "in", "file", ":", "\n", "            ", "att", "=", "line", ".", "split", "(", ")", "[", "1", "]", "\n", "index", "=", "line", ".", "split", "(", ")", "[", "0", "]", "\n", "att_dict", "[", "att", "]", "=", "index", "\n", "", "", "return", "att_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.get_attr_name2id_dicts": [[22, 26], ["sim_based_on_attr_n_value.get_attr_name2id_dict", "sim_based_on_attr_n_value.get_attr_name2id_dict"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.get_attr_name2id_dict", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.get_attr_name2id_dict"], ["", "def", "get_attr_name2id_dicts", "(", "index_att_1", ",", "index_att_2", ")", ":", "\n", "    ", "dict1", "=", "get_attr_name2id_dict", "(", "index_att_1", ")", "\n", "dict2", "=", "get_attr_name2id_dict", "(", "index_att_2", ")", "\n", "return", "dict1", ",", "dict2", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.jaccard_similarity": [[28, 32], ["len", "len", "len", "len", "source_set.intersection", "source_set.union"], "function", ["None"], ["", "def", "jaccard_similarity", "(", "source_set", ",", "target_set", ")", ":", "\n", "    ", "if", "len", "(", "source_set", ")", "==", "0", "or", "len", "(", "target_set", ")", "==", "0", ":", "\n", "        ", "return", "0", "\n", "", "return", "len", "(", "source_set", ".", "intersection", "(", "target_set", ")", ")", "/", "len", "(", "source_set", ".", "union", "(", "target_set", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.preprocess_value": [[34, 40], ["set", "set", "set.update", "string.split"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar.update"], ["", "def", "preprocess_value", "(", "value", ")", ":", "\n", "    ", "final_val", "=", "set", "(", ")", "\n", "for", "string", "in", "value", ":", "\n", "        ", "word_set", "=", "set", "(", "string", ".", "split", "(", "'_'", ")", ")", "\n", "final_val", ".", "update", "(", "word_set", ")", "\n", "", "return", "final_val", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.get_the_raw_datastructure": [[42, 66], ["set", "open", "line.split", "[].add", "sim_based_on_attr_n_value.preprocess_value", "set.add", "set"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.preprocess_value"], ["", "def", "get_the_raw_datastructure", "(", "path", ",", "att_dict_inverse", ",", "index_keeped", "=", "None", ")", ":", "\n", "    ", "data", "=", "{", "}", "\n", "seen_id", "=", "set", "(", ")", "\n", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "file", ":", "\n", "        ", "for", "line", "in", "file", ":", "\n", "            ", "data_line", "=", "line", ".", "split", "(", ")", "\n", "id", "=", "data_line", "[", "0", "]", "\n", "if", "not", "id", "in", "seen_id", ":", "\n", "                ", "data", "[", "id", "]", "=", "{", "\n", "'att'", ":", "set", "(", ")", ",", "\n", "'att_value'", ":", "{", "}", "\n", "}", "\n", "seen_id", ".", "add", "(", "id", ")", "\n", "", "att_index", "=", "data_line", "[", "1", "]", "\n", "try", ":", "\n", "                ", "att_index", "=", "att_dict_inverse", "[", "att_index", "]", "\n", "", "except", ":", "\n", "                ", "continue", "\n", "", "if", "index_keeped", ":", "\n", "                ", "if", "att_index", "not", "in", "index_keeped", ":", "\n", "                    ", "continue", "\n", "", "", "data", "[", "id", "]", "[", "'att'", "]", ".", "add", "(", "att_index", ")", "\n", "data", "[", "id", "]", "[", "'att_value'", "]", "[", "att_index", "]", "=", "preprocess_value", "(", "data_line", "[", "2", ":", "]", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.get_simi_att": [[68, 114], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.load_alignment_pair", "sim_based_on_attr_n_value.get_attr_name2id_dicts", "set", "set", "set.intersection", "sim_based_on_attr_n_value.get_the_raw_datastructure", "sim_based_on_attr_n_value.get_the_raw_datastructure", "len", "len", "numpy.zeros", "numpy.zeros", "print", "toolbox.Progbar.Progbar", "range", "att_dict1.keys", "att_dict2.keys", "str", "toolbox.Progbar.Progbar.update", "range", "int", "att_dict1.items", "att_dict2.items", "str", "s_att_set.intersection", "sim_based_on_attr_n_value.jaccard_similarity", "sim_based_on_attr_n_value.jaccard_similarity", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.load_alignment_pair", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.get_attr_name2id_dicts", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.get_the_raw_datastructure", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.get_the_raw_datastructure", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar.update", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.jaccard_similarity", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.sim_based_on_attr_n_value.jaccard_similarity"], ["", "def", "get_simi_att", "(", "lang", "=", "\"zh_en\"", ",", "ratio", "=", "0.3", ")", ":", "\n", "    ", "dt_name_path", "=", "\"data/%s/\"", "%", "lang", "\n", "ent_att_val1", "=", "os", ".", "path", ".", "join", "(", "dt_name_path", ",", "\"ent_att_val_1\"", ")", "\n", "ent_att_val2", "=", "os", ".", "path", ".", "join", "(", "dt_name_path", ",", "\"ent_att_val_2\"", ")", "\n", "index_att_1", "=", "os", ".", "path", ".", "join", "(", "dt_name_path", ",", "\"index_att_1\"", ")", "\n", "index_att_2", "=", "os", ".", "path", ".", "join", "(", "dt_name_path", ",", "\"index_att_2\"", ")", "\n", "pairs", "=", "load_alignment_pair", "(", "dt_name_path", "+", "\"ref_ent_ids\"", ")", "\n", "test_pair", "=", "pairs", "[", "int", "(", "ratio", "*", "len", "(", "pairs", ")", ")", ":", "]", "\n", "\n", "att_dict1", ",", "att_dict2", "=", "get_attr_name2id_dicts", "(", "index_att_1", ",", "index_att_2", ")", "\n", "source_att_set", "=", "set", "(", "att_dict1", ".", "keys", "(", ")", ")", "\n", "target_att_set", "=", "set", "(", "att_dict2", ".", "keys", "(", ")", ")", "\n", "kept_att", "=", "source_att_set", ".", "intersection", "(", "target_att_set", ")", "\n", "att_dict_inverse1", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "att_dict1", ".", "items", "(", ")", "}", "\n", "att_dict_inverse2", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "att_dict2", ".", "items", "(", ")", "}", "\n", "s_data", "=", "get_the_raw_datastructure", "(", "ent_att_val1", ",", "att_dict_inverse1", ",", "kept_att", ")", "\n", "t_data", "=", "get_the_raw_datastructure", "(", "ent_att_val2", ",", "att_dict_inverse2", ",", "kept_att", ")", "\n", "Ns", "=", "len", "(", "test_pair", ")", "\n", "Nt", "=", "len", "(", "test_pair", ")", "\n", "\n", "attr_similarity", "=", "np", ".", "zeros", "(", "(", "Ns", ",", "Nt", ")", ")", "\n", "value_similarity", "=", "np", ".", "zeros", "(", "(", "Ns", ",", "Nt", ")", ")", "\n", "print", "(", "\"computing attr and value similarity for %s\"", "%", "lang", ")", "\n", "progbar", "=", "Progbar", "(", "max_step", "=", "Ns", ")", "\n", "for", "si", "in", "range", "(", "Ns", ")", ":", "\n", "        ", "s", "=", "str", "(", "test_pair", "[", "si", "]", "[", "0", "]", ")", "\n", "progbar", ".", "update", "(", "si", "+", "1", ",", "[", "(", "\"node\"", ",", "s", ")", "]", ")", "\n", "if", "(", "s", "not", "in", "s_data", ")", "or", "(", "s", "in", "s_data", "and", "len", "(", "s_data", "[", "s", "]", "[", "'att'", "]", ")", "==", "0", ")", ":", "\n", "            ", "continue", "\n", "", "s_att_set", "=", "s_data", "[", "s", "]", "[", "'att'", "]", "\n", "for", "ti", "in", "range", "(", "Nt", ")", ":", "\n", "            ", "t", "=", "str", "(", "test_pair", "[", "ti", "]", "[", "1", "]", ")", "\n", "if", "(", "t", "not", "in", "t_data", ")", "or", "(", "t", "in", "t_data", "and", "len", "(", "t_data", "[", "t", "]", "[", "'att'", "]", ")", "==", "0", ")", ":", "\n", "                ", "continue", "\n", "", "t_att_set", "=", "t_data", "[", "t", "]", "[", "'att'", "]", "\n", "common_att_set", "=", "s_att_set", ".", "intersection", "(", "t_att_set", ")", "\n", "value_similar", "=", "0", "\n", "for", "ele", "in", "common_att_set", ":", "\n", "                ", "s_value_set", "=", "s_data", "[", "s", "]", "[", "'att_value'", "]", "[", "ele", "]", "\n", "t_value_set", "=", "t_data", "[", "t", "]", "[", "'att_value'", "]", "[", "ele", "]", "\n", "value_similar", "+=", "jaccard_similarity", "(", "s_value_set", ",", "t_value_set", ")", "\n", "", "if", "value_similar", ">", "0", ":", "\n", "                ", "value_similar", "=", "value_similar", "/", "len", "(", "common_att_set", ")", "\n", "", "value_similarity", "[", "si", ",", "ti", "]", "=", "value_similar", "\n", "attr_similarity", "[", "si", ",", "ti", "]", "=", "jaccard_similarity", "(", "s_att_set", ",", "t_att_set", ")", "\n", "", "", "return", "attr_similarity", ",", "value_similarity", ",", "test_pair", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.load_alignment_pair": [[4, 10], ["open", "line.split", "alignment_pair.append", "int", "int"], "function", ["None"], ["def", "load_alignment_pair", "(", "file_name", ")", ":", "\n", "    ", "alignment_pair", "=", "[", "]", "\n", "for", "line", "in", "open", "(", "file_name", ",", "'r'", ")", ":", "\n", "        ", "e1", ",", "e2", "=", "line", ".", "split", "(", ")", "\n", "alignment_pair", ".", "append", "(", "(", "int", "(", "e1", ")", ",", "int", "(", "e2", ")", ")", ")", "\n", "", "return", "alignment_pair", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels": [[12, 16], ["torch.cat", "torch.cat", "rel.max"], "function", ["None"], ["", "def", "add_inverse_rels", "(", "edge_index", ",", "rel", ")", ":", "\n", "    ", "edge_index_all", "=", "torch", ".", "cat", "(", "[", "edge_index", ",", "edge_index", "[", "[", "1", ",", "0", "]", "]", "]", ",", "dim", "=", "1", ")", "\n", "rel_all", "=", "torch", ".", "cat", "(", "[", "rel", ",", "rel", "+", "rel", ".", "max", "(", ")", "+", "1", "]", ")", "\n", "return", "edge_index_all", ",", "rel_all", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits": [[18, 22], ["torch.cdist", "utils.get_hits_from_S"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits_from_S"], ["", "def", "get_hits", "(", "x1", ",", "x2", ",", "pair", ",", "dist", "=", "'L1'", ",", "Hn_nums", "=", "(", "1", ",", "5", ",", "10", ")", ")", ":", "\n", "    ", "S", "=", "torch", ".", "cdist", "(", "x1", "[", "pair", "[", ":", ",", "0", "]", "]", ",", "x2", "[", "pair", "[", ":", ",", "1", "]", "]", ",", "p", "=", "1", ")", "\n", "hits1", "=", "get_hits_from_S", "(", "S", ",", "pair", ",", "dist", ",", "Hn_nums", ")", "\n", "return", "S", ",", "hits1", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits_from_S": [[24, 46], ["pair.size", "print", "[].float", "print", "print", "[].float", "print", "print", "print", "S.topk", "S.t().topk", "torch.where", "torch.where", "S.t", "torch.arange().view", "torch.arange().view", "S.sort", "S.t().sort", "torch.arange().view", "torch.arange", "torch.arange().view", "torch.arange", "S.t", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "get_hits_from_S", "(", "S", ",", "pair", ",", "dist", "=", "'L1'", ",", "Hn_nums", "=", "(", "1", ",", "5", ",", "10", ")", ")", ":", "\n", "    ", "pair_num", "=", "pair", ".", "size", "(", "0", ")", "\n", "hits1", "=", "None", "\n", "print", "(", "'Left:\\t'", ",", "end", "=", "''", ")", "\n", "for", "k", "in", "Hn_nums", ":", "\n", "        ", "pred_topk", "=", "S", ".", "topk", "(", "k", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "Hk", "=", "(", "pred_topk", "==", "torch", ".", "arange", "(", "pair_num", ",", "device", "=", "S", ".", "device", ")", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "pair_num", "\n", "if", "k", "==", "1", ":", "\n", "            ", "hits1", "=", "Hk", "\n", "", "print", "(", "'Hits@%d: %.2f%%    '", "%", "(", "k", ",", "Hk", "*", "100", ")", ",", "end", "=", "''", ")", "\n", "", "rank", "=", "torch", ".", "where", "(", "S", ".", "sort", "(", ")", "[", "1", "]", "==", "torch", ".", "arange", "(", "pair_num", ",", "device", "=", "S", ".", "device", ")", ".", "view", "(", "-", "1", ",", "1", ")", ")", "[", "1", "]", ".", "float", "(", ")", "\n", "MRR", "=", "(", "1", "/", "(", "rank", "+", "1", ")", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "print", "(", "'MRR: %.3f'", "%", "MRR", ")", "\n", "print", "(", "'Right:\\t'", ",", "end", "=", "''", ")", "\n", "for", "k", "in", "Hn_nums", ":", "\n", "        ", "pred_topk", "=", "S", ".", "t", "(", ")", ".", "topk", "(", "k", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "Hk", "=", "(", "pred_topk", "==", "torch", ".", "arange", "(", "pair_num", ",", "device", "=", "S", ".", "device", ")", ".", "view", "(", "-", "1", ",", "1", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "/", "pair_num", "\n", "print", "(", "'Hits@%d: %.2f%%    '", "%", "(", "k", ",", "Hk", "*", "100", ")", ",", "end", "=", "''", ")", "\n", "", "rank", "=", "torch", ".", "where", "(", "S", ".", "t", "(", ")", ".", "sort", "(", ")", "[", "1", "]", "==", "torch", ".", "arange", "(", "pair_num", ",", "device", "=", "S", ".", "device", ")", ".", "view", "(", "-", "1", ",", "1", ")", ")", "[", "1", "]", ".", "float", "(", ")", "\n", "MRR", "=", "(", "1", "/", "(", "rank", "+", "1", ")", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "print", "(", "'MRR: %.3f'", "%", "MRR", ")", "\n", "return", "hits1", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_S_from_embedding_list": [[48, 56], ["range", "utils.composeS", "len", "len", "distS().to", "S_list.append", "utils.distS"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.composeS", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.distS"], ["", "def", "get_S_from_embedding_list", "(", "x1", ",", "x2", ",", "pair", ")", ":", "\n", "    ", "weight_list", "=", "[", "1", "]", "*", "len", "(", "x1", ")", "\n", "S_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "x1", ")", ")", ":", "\n", "        ", "S", "=", "distS", "(", "x1", "[", "i", "]", ",", "x2", "[", "i", "]", ",", "pair", ")", ".", "to", "(", "\"cuda:1\"", ")", "\n", "S_list", ".", "append", "(", "S", ")", "\n", "", "S", "=", "composeS", "(", "S_list", ",", "weight_list", ")", "\n", "return", "S", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.distS": [[58, 61], ["torch.cdist"], "function", ["None"], ["", "def", "distS", "(", "x1", ",", "x2", ",", "pair", ")", ":", "\n", "    ", "S", "=", "torch", ".", "cdist", "(", "x1", "[", "pair", "[", ":", ",", "0", "]", "]", ",", "x2", "[", "pair", "[", ":", ",", "1", "]", "]", ",", "p", "=", "1", ")", "\n", "return", "S", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.composeS": [[63, 76], ["range", "len", "len", "len", "len"], "function", ["None"], ["", "def", "composeS", "(", "S_list", ",", "weight_list", ")", ":", "\n", "    ", "assert", "len", "(", "S_list", ")", "==", "len", "(", "weight_list", ")", "\n", "assert", "len", "(", "S_list", ")", ">=", "1", "\n", "S", "=", "None", "\n", "for", "i", "in", "range", "(", "len", "(", "S_list", ")", ")", ":", "\n", "        ", "Si", "=", "S_list", "[", "i", "]", "\n", "wi", "=", "weight_list", "[", "i", "]", "\n", "if", "S", "is", "None", ":", "\n", "            ", "S", "=", "Si", "*", "wi", "\n", "", "else", ":", "\n", "            ", "S", "=", "S", "+", "Si", "*", "wi", "\n", "", "", "assert", "S", "is", "not", "None", "\n", "return", "S", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits_stable_from_S": [[78, 95], ["pair.size", "torch.zeros", "torch.zeros", "range", "print", "S.softmax", "S.softmax"], "function", ["None"], ["", "def", "get_hits_stable_from_S", "(", "S", ",", "pair", ")", ":", "\n", "    ", "pair_num", "=", "pair", ".", "size", "(", "0", ")", "\n", "# index = S.flatten().argsort(descending=True)", "\n", "index", "=", "(", "S", ".", "softmax", "(", "1", ")", "+", "S", ".", "softmax", "(", "0", ")", ")", ".", "flatten", "(", ")", ".", "argsort", "(", "descending", "=", "True", ")", "\n", "index_e1", "=", "index", "//", "pair_num", "\n", "index_e2", "=", "index", "%", "pair_num", "\n", "aligned_e1", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "aligned_e2", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "true_aligned", "=", "0", "\n", "for", "_", "in", "range", "(", "pair_num", "*", "100", ")", ":", "\n", "        ", "if", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "or", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", ":", "\n", "            ", "continue", "\n", "", "if", "index_e1", "[", "_", "]", "==", "index_e2", "[", "_", "]", ":", "\n", "            ", "true_aligned", "+=", "1", "\n", "", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "=", "True", "\n", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", "=", "True", "\n", "", "print", "(", "'Both:\\tHits@Stable: %.2f%%    '", "%", "(", "true_aligned", "/", "pair_num", "*", "100", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits_stable": [[97, 115], ["pair.size", "torch.zeros", "torch.zeros", "range", "print", "torch.cdist().cpu", "torch.cdist", "S.softmax", "S.softmax"], "function", ["None"], ["", "def", "get_hits_stable", "(", "x1", ",", "x2", ",", "pair", ")", ":", "\n", "    ", "pair_num", "=", "pair", ".", "size", "(", "0", ")", "\n", "S", "=", "-", "torch", ".", "cdist", "(", "x1", "[", "pair", "[", ":", ",", "0", "]", "]", ",", "x2", "[", "pair", "[", ":", ",", "1", "]", "]", ",", "p", "=", "1", ")", ".", "cpu", "(", ")", "\n", "# index = S.flatten().argsort(descending=True)", "\n", "index", "=", "(", "S", ".", "softmax", "(", "1", ")", "+", "S", ".", "softmax", "(", "0", ")", ")", ".", "flatten", "(", ")", ".", "argsort", "(", "descending", "=", "True", ")", "\n", "index_e1", "=", "index", "//", "pair_num", "\n", "index_e2", "=", "index", "%", "pair_num", "\n", "aligned_e1", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "aligned_e2", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "true_aligned", "=", "0", "\n", "for", "_", "in", "range", "(", "pair_num", "*", "100", ")", ":", "\n", "        ", "if", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "or", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", ":", "\n", "            ", "continue", "\n", "", "if", "index_e1", "[", "_", "]", "==", "index_e2", "[", "_", "]", ":", "\n", "            ", "true_aligned", "+=", "1", "\n", "", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "=", "True", "\n", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", "=", "True", "\n", "", "print", "(", "'Both:\\tHits@Stable: %.2f%%    '", "%", "(", "true_aligned", "/", "pair_num", "*", "100", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.parse_args": [[15, 40], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--cuda\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--model_parallel\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--GPU\"", ",", "type", "=", "list", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "[", "'0'", "]", ",", "[", "'1'", "]", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--data\"", ",", "default", "=", "\"data\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lang\"", ",", "default", "=", "\"zh_en\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--rate\"", ",", "type", "=", "float", ",", "default", "=", "0.3", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--r_hidden\"", ",", "type", "=", "int", ",", "default", "=", "300", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--k\"", ",", "type", "=", "int", ",", "default", "=", "5", ")", "\n", "parser", ".", "add_argument", "(", "\"--gamma\"", ",", "type", "=", "float", ",", "default", "=", "3", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--epoch\"", ",", "type", "=", "int", ",", "default", "=", "500", ")", "\n", "parser", ".", "add_argument", "(", "\"--neg_epoch\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--test_epoch\"", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n", "parser", ".", "add_argument", "(", "\"--reset_epoch\"", ",", "type", "=", "int", ",", "default", "=", "20", ")", "\n", "parser", ".", "add_argument", "(", "\"--stable_test\"", ",", "action", "=", "\"store_true\"", ",", "default", "=", "True", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--keep_seeds\"", ",", "type", "=", "int", ",", "default", "=", "4500", ")", "\n", "parser", ".", "add_argument", "(", "\"--new_train_seeds\"", ",", "type", "=", "int", ",", "default", "=", "8000", ")", "\n", "parser", ".", "add_argument", "(", "\"--neg_seeds\"", ",", "type", "=", "int", ",", "default", "=", "2000", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.get_emb": [[64, 70], ["model.eval", "torch.no_grad", "model", "model"], "function", ["None"], ["def", "get_emb", "(", "model", ",", "data", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "x1", "=", "model", "(", "data", ".", "x1", ",", "data", ".", "edge_index1", ",", "data", ".", "rel1", ",", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", ")", "\n", "x2", "=", "model", "(", "data", ".", "x2", ",", "data", ".", "edge_index2", ",", "data", ".", "rel2", ",", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", ")", "\n", "", "return", "x1", ",", "x2", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.get_train_batch": [[72, 79], ["torch.stack", "[].t", "[].t", "[].t", "[].t", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist().topk", "torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist"], "function", ["None"], ["", "def", "get_train_batch", "(", "x1", ",", "x2", ",", "train_set", ",", "k", "=", "5", ")", ":", "\n", "    ", "e1_neg1", "=", "torch", ".", "cdist", "(", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x1", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e1_neg2", "=", "torch", ".", "cdist", "(", "x1", "[", "train_set", "[", ":", ",", "0", "]", "]", ",", "x2", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e2_neg1", "=", "torch", ".", "cdist", "(", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", ",", "x2", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "e2_neg2", "=", "torch", ".", "cdist", "(", "x2", "[", "train_set", "[", ":", ",", "1", "]", "]", ",", "x1", ",", "p", "=", "1", ")", ".", "topk", "(", "k", "+", "1", ",", "largest", "=", "False", ")", "[", "1", "]", ".", "t", "(", ")", "[", "1", ":", "]", "\n", "train_batch", "=", "torch", ".", "stack", "(", "[", "e1_neg1", ",", "e1_neg2", ",", "e2_neg1", ",", "e2_neg2", "]", ",", "dim", "=", "0", ")", "\n", "return", "train_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.train": [[81, 90], ["model.train", "model", "model", "criterion", "optimizer.zero_grad", "criterion.backward", "optimizer.step"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.train"], ["", "def", "train", "(", "model", ",", "criterion", ",", "optimizer", ",", "data", ",", "train_batch", ",", "false_pair", "=", "None", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "x1", "=", "model", "(", "data", ".", "x1", ",", "data", ".", "edge_index1", ",", "data", ".", "rel1", ",", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", ")", "\n", "x2", "=", "model", "(", "data", ".", "x2", ",", "data", ".", "edge_index2", ",", "data", ".", "rel2", ",", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", ")", "\n", "loss", "=", "criterion", "(", "x1", ",", "x2", ",", "data", ".", "new_train_set", ",", "train_batch", ",", "false_pair", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.init_data": [[92, 100], ["F.normalize().to().requires_grad_", "F.normalize().to().requires_grad_", "utils.add_inverse_rels", "utils.add_inverse_rels", "data.DBP15K", "F.normalize().to", "F.normalize().to", "F.normalize", "F.normalize"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.add_inverse_rels"], ["", "def", "init_data", "(", "args", ",", "device", ")", ":", "\n", "# args.data\u6570\u636e\u96c6\u6839\u76ee\u5f55,args.lang\u91c7\u7528\u7684\u6570\u636e\u96c6", "\n", "    ", "data", "=", "DBP15K", "(", "args", ".", "data", ",", "args", ".", "lang", ",", "rate", "=", "args", ".", "rate", ")", "[", "0", "]", "\n", "data", ".", "x1", "=", "F", ".", "normalize", "(", "data", ".", "x1", ",", "dim", "=", "1", ",", "p", "=", "2", ")", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", ")", "\n", "data", ".", "x2", "=", "F", ".", "normalize", "(", "data", ".", "x2", ",", "dim", "=", "1", ",", "p", "=", "2", ")", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", ")", "\n", "data", ".", "edge_index_all1", ",", "data", ".", "rel_all1", "=", "add_inverse_rels", "(", "data", ".", "edge_index1", ",", "data", ".", "rel1", ")", "\n", "data", ".", "edge_index_all2", ",", "data", ".", "rel_all2", "=", "add_inverse_rels", "(", "data", ".", "edge_index2", ",", "data", ".", "rel2", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.test": [[102, 114], ["torch.no_grad", "print", "utils.get_hits", "print", "utils.get_hits", "print", "S.detach().cpu", "utils.get_hits_stable", "S.detach"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.get_hits_stable"], ["", "def", "test", "(", "x1", ",", "x2", ",", "data", ",", "stable", "=", "False", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "#         print('-' * 16 + 'Train_set' + '-' * 16)", "\n", "#         get_hits(x1, x2, data.train_set)", "\n", "        ", "print", "(", "'-'", "*", "16", "+", "'Train_set'", "+", "'-'", "*", "16", ")", "\n", "get_hits", "(", "x1", ",", "x2", ",", "data", ".", "new_train_set", ")", "\n", "print", "(", "'-'", "*", "16", "+", "'Test_set'", "+", "'-'", "*", "17", ")", "\n", "S", ",", "hits1", "=", "get_hits", "(", "x1", ",", "x2", ",", "data", ".", "test_set", ")", "\n", "if", "stable", ":", "\n", "            ", "get_hits_stable", "(", "x1", ",", "x2", ",", "data", ".", "test_set", ")", "\n", "", "print", "(", ")", "\n", "", "return", "S", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "hits1", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.generate_pairs": [[116, 201], ["torch.no_grad", "torch.cdist", "utils.composeS.to", "utils.composeS", "seeds.size", "torch.zeros", "torch.zeros", "range", "range", "list", "list", "len", "len", "print", "print", "print", "print", "global_align.append", "utils.composeS.topk", "utils.composeS.T.topk", "set().intersection", "set().difference", "j.item", "list.append", "set", "set", "seeds[].item", "seeds[].item", "list.append", "list.append", "set", "set", "seeds[].item", "seeds[].item", "S_global.softmax", "S_global.softmax", "seeds[].item", "seeds[].item", "seeds[].item", "seeds[].item", "index_e1[].item", "index_e2[].item", "left_i.item", "left_i.item", "left_i.item"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.utils.composeS"], ["", "def", "generate_pairs", "(", "x1", ",", "x2", ",", "data", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "seeds", "=", "data", ".", "test_set", "\n", "\n", "new_idx", "=", "[", "]", "\n", "false_idx", "=", "[", "]", "\n", "global_align", "=", "[", "]", "\n", "\n", "'''\n        \u524dcompose\u751f\u6210\u6837\u4f8b\n        '''", "\n", "S", "=", "torch", ".", "cdist", "(", "x1", "[", "seeds", "[", ":", ",", "0", "]", "]", ",", "x2", "[", "seeds", "[", ":", ",", "1", "]", "]", ",", "p", "=", "1", ")", "\n", "S", "=", "S", ".", "to", "(", "second_device", ")", "\n", "S", "=", "composeS", "(", "[", "S1", ",", "S2", ",", "S", "]", ",", "[", "0.8", ",", "0.6", ",", "0.1", "]", ")", "\n", "S_global", "=", "-", "S", "\n", "\n", "'''\n        \u5168\u5c40\u5bf9\u9f50\u7b5b\u9009\u6837\u4f8b\n        '''", "\n", "pair_num", "=", "seeds", ".", "size", "(", "0", ")", "\n", "index", "=", "(", "S_global", ".", "softmax", "(", "1", ")", "+", "S_global", ".", "softmax", "(", "0", ")", ")", ".", "flatten", "(", ")", ".", "argsort", "(", "descending", "=", "True", ")", "\n", "index_e1", "=", "index", "//", "pair_num", "\n", "index_e2", "=", "index", "%", "pair_num", "\n", "aligned_e1", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "aligned_e2", "=", "torch", ".", "zeros", "(", "pair_num", ",", "dtype", "=", "torch", ".", "bool", ")", "\n", "true_aligned", "=", "0", "\n", "for", "_", "in", "range", "(", "pair_num", "*", "100", ")", ":", "\n", "            ", "if", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "or", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", ":", "\n", "                ", "continue", "\n", "", "global_align", ".", "append", "(", "(", "seeds", "[", "index_e1", "[", "_", "]", ".", "item", "(", ")", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "index_e2", "[", "_", "]", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "if", "index_e1", "[", "_", "]", "==", "index_e2", "[", "_", "]", ":", "\n", "                ", "true_aligned", "+=", "1", "\n", "", "aligned_e1", "[", "index_e1", "[", "_", "]", "]", "=", "True", "\n", "aligned_e2", "[", "index_e2", "[", "_", "]", "]", "=", "True", "\n", "\n", "", "'''\n        \u5c40\u90e8\u5bf9\u9f50\u7b5b\u9009\u6837\u4f8b\n        '''", "\n", "left_pred", "=", "S", ".", "topk", "(", "1", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "right_pred", "=", "S", ".", "T", ".", "topk", "(", "1", ",", "largest", "=", "False", ")", "[", "1", "]", "\n", "\n", "# left_pred \u5de6\u5230\u53f3\u8ddd\u79bb", "\n", "# right_pred \u53f3\u5230\u5de6\u8ddd\u79bb", "\n", "\n", "positive", "=", "0", "\n", "negative", "=", "0", "\n", "false_positive", "=", "0", "\n", "false_negative", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "left_pred", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "left_i", "=", "left_pred", "[", "i", "]", "\n", "j", "=", "right_pred", "[", "left_i", "]", "\n", "if", "i", "==", "j", ".", "item", "(", ")", ":", "\n", "                ", "new_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                ", "negative", "+=", "1", "\n", "l2r_dist", "=", "S", "[", "i", ",", "left_i", "]", "\n", "r2l_dist", "=", "S", ".", "T", "[", "left_i", ",", "j", "]", "\n", "\n", "if", "(", "l2r_dist", ">", "r2l_dist", ")", ":", "\n", "                    ", "false_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "                    ", "false_idx", ".", "append", "(", "(", "seeds", "[", "i", ",", "0", "]", ".", "item", "(", ")", ",", "seeds", "[", "left_i", ".", "item", "(", ")", ",", "1", "]", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "", "", "new_idx", "=", "list", "(", "set", "(", "new_idx", ")", ".", "intersection", "(", "set", "(", "global_align", ")", ")", ")", "\n", "false_idx", "=", "list", "(", "set", "(", "false_idx", ")", ".", "difference", "(", "set", "(", "global_align", ")", ")", ")", "\n", "\n", "positive", "=", "len", "(", "new_idx", ")", "\n", "negative", "=", "len", "(", "false_idx", ")", "\n", "\n", "false_positive", "=", "0", "\n", "false_negative", "=", "0", "\n", "for", "p", "in", "new_idx", ":", "\n", "            ", "if", "(", "p", "[", "0", "]", "!=", "p", "[", "1", "]", ")", ":", "\n", "                ", "false_positive", "+=", "1", "\n", "", "", "for", "f", "in", "false_idx", ":", "\n", "            ", "if", "(", "f", "[", "0", "]", "==", "f", "[", "1", "]", ")", ":", "\n", "                ", "false_negative", "+=", "1", "\n", "\n", "", "", "print", "(", ")", "\n", "print", "(", "\"positive:\"", ",", "positive", ",", "\"negative:\"", ",", "negative", ",", "\"false_positive:\"", ",", "false_positive", ",", "\"false_negative\"", ",", "false_negative", ")", "\n", "print", "(", "\"false_positive_rate:\"", ",", "false_positive", "/", "positive", ")", "\n", "print", "(", "\"false_negative_rate:\"", ",", "false_negative", "/", "negative", ")", "\n", "\n", "return", "new_idx", ",", "false_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.reset": [[203, 223], ["torch.no_grad", "train_basic_woEN.generate_pairs", "torch.LongTensor", "torch.randperm", "new_train_set[].to", "torch.randperm", "torch.cat().to", "torch.LongTensor", "torch.randperm", "new_test_false_set[].to", "new_train_set[].to.size", "data.train_set.size", "new_test_false_set[].to.size", "torch.cat"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.generate_pairs"], ["", "", "def", "reset", "(", "x1", ",", "x2", ",", "data", ",", "keep_seeds", "=", "2000", ",", "new_train_seeds", "=", "7000", ",", "neg_seeds", "=", "1000", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "new_pair", ",", "false_pair", "=", "generate_pairs", "(", "x1", ",", "x2", ",", "data", ")", "\n", "\n", "new_train_set", "=", "torch", ".", "LongTensor", "(", "new_pair", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "new_train_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "keep_seeds", "]", "\n", "new_train_set", "=", "new_train_set", "[", "idx", "]", ".", "to", "(", "second_device", ")", "\n", "\n", "perm", "=", "torch", ".", "randperm", "(", "data", ".", "train_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "new_train_seeds", "]", "\n", "new_train_set_base", "=", "data", ".", "train_set", "[", "idx", "]", "\n", "data", ".", "new_train_set", "=", "torch", ".", "cat", "(", "[", "new_train_set_base", ",", "new_train_set", "]", ",", "dim", "=", "0", ")", ".", "to", "(", "second_device", ")", "\n", "\n", "new_test_false_set", "=", "torch", ".", "LongTensor", "(", "false_pair", ")", "\n", "perm", "=", "torch", ".", "randperm", "(", "new_test_false_set", ".", "size", "(", "0", ")", ")", "\n", "idx", "=", "perm", "[", ":", "neg_seeds", "]", "\n", "new_test_false_set", "=", "new_test_false_set", "[", "idx", "]", ".", "to", "(", "second_device", ")", "\n", "#         return new_test_false_set", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Visualize.get_writer": [[5, 7], ["torch.utils.tensorboard.SummaryWriter"], "function", ["None"], ["def", "get_writer", "(", "log_dir", ":", "str", ",", "comments", "=", "\"\"", ")", ":", "\n", "    ", "return", "SummaryWriter", "(", "log_dir", ",", "comments", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Visualize.add_scalar": [[9, 11], ["writer.add_scalar"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Visualize.add_scalar"], ["", "def", "add_scalar", "(", "writer", ",", "name", ":", "str", ",", "value", ",", "step_num", ":", "int", ")", ":", "\n", "    ", "writer", ".", "add_scalar", "(", "name", ",", "value", ",", "step_num", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Visualize.add_result": [[13, 24], ["sorted", "sorted", "Visualize.add_scalar", "Visualize.add_scalar", "Visualize.add_scalar"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Visualize.add_scalar", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Visualize.add_scalar", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Visualize.add_scalar"], ["", "def", "add_result", "(", "writer", ",", "result", ",", "step_num", ":", "int", ")", ":", "\n", "    ", "left2right", "=", "result", "[", "\"left2right\"", "]", "\n", "right2left", "=", "result", "[", "\"right2left\"", "]", "\n", "using_time", "=", "result", "[", "\"time\"", "]", "\n", "sorted", "(", "left2right", ")", "\n", "sorted", "(", "right2left", ")", "\n", "for", "i", "in", "left2right", ":", "\n", "        ", "add_scalar", "(", "writer", ",", "i", ",", "left2right", "[", "i", "]", ",", "step_num", ")", "\n", "", "for", "i", "in", "right2left", ":", "\n", "        ", "add_scalar", "(", "writer", ",", "i", ",", "right2left", "[", "i", "]", ",", "step_num", ")", "\n", "", "add_scalar", "(", "writer", ",", "\"using time (s)\"", ",", "using_time", ",", "step_num", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.__init__": [[38, 64], ["toolbox.Framework.is_torch_cuda_available", "psutil.Process", "toolbox.Framework.is_psutil_available"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_torch_cuda_available", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_psutil_available"], ["def", "__init__", "(", "self", ",", "skip_memory_metrics", "=", "False", ")", ":", "\n", "\n", "        ", "self", ".", "skip_memory_metrics", "=", "skip_memory_metrics", "\n", "\n", "if", "not", "is_psutil_available", "(", ")", ":", "\n", "# soft dependency on psutil", "\n", "            ", "self", ".", "skip_memory_metrics", "=", "True", "\n", "\n", "", "if", "self", ".", "skip_memory_metrics", ":", "\n", "            ", "return", "\n", "\n", "", "import", "psutil", "# noqa", "\n", "\n", "if", "is_torch_cuda_available", "(", ")", ":", "\n", "            ", "import", "torch", "\n", "\n", "self", ".", "torch", "=", "torch", "\n", "self", ".", "gpu", "=", "{", "}", "\n", "", "else", ":", "\n", "            ", "self", ".", "torch", "=", "None", "\n", "\n", "", "self", ".", "process", "=", "psutil", ".", "Process", "(", ")", "\n", "\n", "self", ".", "cur_stage", "=", "None", "\n", "self", ".", "cpu", "=", "{", "}", "\n", "self", ".", "init_reported", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.derive_stage": [[65, 73], ["ValueError", "inspect.currentframe", "TrainerMemoryTracker.TrainerMemoryTracker.stages.keys"], "methods", ["None"], ["", "def", "derive_stage", "(", "self", ")", ":", "\n", "        ", "\"\"\" derives the stage/caller name automatically \"\"\"", "\n", "caller", "=", "inspect", ".", "currentframe", "(", ")", ".", "f_back", ".", "f_back", ".", "f_code", ".", "co_name", "\n", "if", "caller", "in", "self", ".", "stages", ":", "\n", "            ", "return", "self", ".", "stages", "[", "caller", "]", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f\"was called from {caller}, but only expect to be called from one of {self.stages.keys()}\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.cpu_mem_used": [[75, 78], ["TrainerMemoryTracker.TrainerMemoryTracker.process.memory_info"], "methods", ["None"], ["", "", "def", "cpu_mem_used", "(", "self", ")", ":", "\n", "        ", "\"\"\" get resident set size memory for the current process \"\"\"", "\n", "return", "self", ".", "process", ".", "memory_info", "(", ")", ".", "rss", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.peak_monitor_func": [[79, 90], ["max", "TrainerMemoryTracker.TrainerMemoryTracker.cpu_mem_used"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.cpu_mem_used"], ["", "def", "peak_monitor_func", "(", "self", ")", ":", "\n", "        ", "self", ".", "cpu_mem_used_peak", "=", "-", "1", "\n", "\n", "while", "True", ":", "\n", "            ", "self", ".", "cpu_mem_used_peak", "=", "max", "(", "self", ".", "cpu_mem_used", "(", ")", ",", "self", ".", "cpu_mem_used_peak", ")", "\n", "\n", "# can't sleep or will not catch the peak right (this comment is here on purpose)", "\n", "# time.sleep(0.001) # 1msec", "\n", "\n", "if", "not", "self", ".", "peak_monitoring", ":", "\n", "                ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.start": [[91, 120], ["TrainerMemoryTracker.TrainerMemoryTracker.derive_stage", "gc.collect", "TrainerMemoryTracker.TrainerMemoryTracker.cpu_mem_used", "threading.Thread", "threading.Thread.start", "TrainerMemoryTracker.TrainerMemoryTracker.torch.cuda.reset_peak_memory_stats", "TrainerMemoryTracker.TrainerMemoryTracker.torch.cuda.empty_cache", "TrainerMemoryTracker.TrainerMemoryTracker.torch.cuda.memory_allocated"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.derive_stage", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.cpu_mem_used", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.start"], ["", "", "", "def", "start", "(", "self", ")", ":", "\n", "        ", "\"\"\" start tracking for the caller's stage \"\"\"", "\n", "if", "self", ".", "skip_memory_metrics", ":", "\n", "            ", "return", "\n", "\n", "", "stage", "=", "self", ".", "derive_stage", "(", ")", "\n", "# deal with nested calls of eval during train - simply ignore those", "\n", "if", "self", ".", "cur_stage", "is", "not", "None", "and", "self", ".", "cur_stage", "!=", "stage", ":", "\n", "            ", "return", "\n", "\n", "", "self", ".", "cur_stage", "=", "stage", "\n", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "if", "self", ".", "torch", "is", "not", "None", ":", "\n", "            ", "self", ".", "torch", ".", "cuda", ".", "reset_peak_memory_stats", "(", ")", "\n", "self", ".", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "# gpu", "\n", "", "if", "self", ".", "torch", "is", "not", "None", ":", "\n", "            ", "self", ".", "gpu_mem_used_at_start", "=", "self", ".", "torch", ".", "cuda", ".", "memory_allocated", "(", ")", "\n", "\n", "# cpu", "\n", "", "self", ".", "cpu_mem_used_at_start", "=", "self", ".", "cpu_mem_used", "(", ")", "\n", "\n", "self", ".", "peak_monitoring", "=", "True", "\n", "peak_monitor_thread", "=", "threading", ".", "Thread", "(", "target", "=", "self", ".", "peak_monitor_func", ")", "\n", "peak_monitor_thread", ".", "daemon", "=", "True", "\n", "peak_monitor_thread", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.stop": [[121, 160], ["gc.collect", "TrainerMemoryTracker.TrainerMemoryTracker.cpu_mem_used", "dict", "TrainerMemoryTracker.TrainerMemoryTracker.torch.cuda.empty_cache", "TrainerMemoryTracker.TrainerMemoryTracker.torch.cuda.memory_allocated", "TrainerMemoryTracker.TrainerMemoryTracker.torch.cuda.max_memory_allocated", "dict", "max", "max"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.cpu_mem_used"], ["", "def", "stop", "(", "self", ",", "stage", ")", ":", "\n", "        ", "\"\"\" stop tracking for the passed stage \"\"\"", "\n", "\n", "# deal with nested calls of eval during train - simply ignore those", "\n", "if", "self", ".", "cur_stage", "is", "not", "None", "and", "self", ".", "cur_stage", "!=", "stage", ":", "\n", "            ", "return", "\n", "\n", "# this sends a signal to peak_monitor_func to complete its loop", "\n", "", "self", ".", "peak_monitoring", "=", "False", "\n", "\n", "# first ensure all objects get collected and their memory is freed", "\n", "gc", ".", "collect", "(", ")", "\n", "\n", "if", "self", ".", "torch", "is", "not", "None", ":", "\n", "            ", "self", ".", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "# concepts:", "\n", "# - alloc_delta:  the difference of allocated memory between the end and the start", "\n", "# - peaked_delta: the difference between the peak memory and the current memory", "\n", "# in order to know how much memory the measured code consumed one needs to sum these two", "\n", "\n", "# gpu", "\n", "", "if", "self", ".", "torch", "is", "not", "None", ":", "\n", "            ", "self", ".", "gpu_mem_used_now", "=", "self", ".", "torch", ".", "cuda", ".", "memory_allocated", "(", ")", "\n", "self", ".", "gpu_mem_used_peak", "=", "self", ".", "torch", ".", "cuda", ".", "max_memory_allocated", "(", ")", "\n", "self", ".", "gpu", "[", "self", ".", "cur_stage", "]", "=", "dict", "(", "\n", "alloc", "=", "(", "self", ".", "gpu_mem_used_now", "-", "self", ".", "gpu_mem_used_at_start", ")", ",", "\n", "peaked", "=", "max", "(", "0", ",", "self", ".", "gpu_mem_used_peak", "-", "self", ".", "gpu_mem_used_now", ")", ",", "\n", ")", "\n", "\n", "# cpu", "\n", "", "self", ".", "cpu_mem_used_now", "=", "self", ".", "cpu_mem_used", "(", ")", "\n", "self", ".", "cpu", "[", "self", ".", "cur_stage", "]", "=", "dict", "(", "\n", "alloc", "=", "(", "self", ".", "cpu_mem_used_now", "-", "self", ".", "cpu_mem_used_at_start", ")", ",", "\n", "peaked", "=", "max", "(", "0", ",", "self", ".", "cpu_mem_used_peak", "-", "self", ".", "cpu_mem_used_now", ")", ",", "\n", ")", "\n", "\n", "# reset - cycle finished", "\n", "self", ".", "cur_stage", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.update_metrics": [[161, 182], ["stages.insert"], "methods", ["None"], ["", "def", "update_metrics", "(", "self", ",", "stage", ",", "metrics", ")", ":", "\n", "        ", "\"\"\" stop tracking for the passed stage \"\"\"", "\n", "if", "self", ".", "skip_memory_metrics", ":", "\n", "            ", "return", "\n", "\n", "# deal with nested calls of eval during train - simply ignore those", "\n", "", "if", "self", ".", "cur_stage", "is", "not", "None", "and", "self", ".", "cur_stage", "!=", "stage", ":", "\n", "            ", "return", "\n", "\n", "# since we don't have a way to return init metrics, we push them into the first of train/val/predict", "\n", "", "stages", "=", "[", "stage", "]", "\n", "if", "not", "self", ".", "init_reported", ":", "\n", "            ", "stages", ".", "insert", "(", "0", ",", "\"init\"", ")", "\n", "self", ".", "init_reported", "=", "True", "\n", "\n", "", "for", "stage", "in", "stages", ":", "\n", "            ", "for", "t", "in", "[", "\"alloc\"", ",", "\"peaked\"", "]", ":", "\n", "                ", "if", "stage", "in", "self", ".", "cpu", "and", "t", "in", "self", ".", "cpu", "[", "stage", "]", ":", "\n", "                    ", "metrics", "[", "f\"{stage}_mem_cpu_{t}_delta\"", "]", "=", "self", ".", "cpu", "[", "stage", "]", "[", "t", "]", "\n", "", "if", "self", ".", "torch", "is", "not", "None", "and", "stage", "in", "self", ".", "gpu", "and", "t", "in", "self", ".", "gpu", "[", "stage", "]", ":", "\n", "                    ", "metrics", "[", "f\"{stage}_mem_gpu_{t}_delta\"", "]", "=", "self", ".", "gpu", "[", "stage", "]", "[", "t", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.stop_and_update_metrics": [[183, 194], ["TrainerMemoryTracker.TrainerMemoryTracker.derive_stage", "TrainerMemoryTracker.TrainerMemoryTracker.stop", "TrainerMemoryTracker.TrainerMemoryTracker.update_metrics"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.derive_stage", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.stop", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerMemoryTracker.TrainerMemoryTracker.update_metrics"], ["", "", "", "", "def", "stop_and_update_metrics", "(", "self", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "\"\"\" combine stop + update in one call for simpler code \"\"\"", "\n", "if", "self", ".", "skip_memory_metrics", ":", "\n", "            ", "return", "\n", "\n", "", "stage", "=", "self", ".", "derive_stage", "(", ")", "\n", "self", ".", "stop", "(", "stage", ")", "\n", "\n", "# init doesn't have metrics to update so we just save that data for later stages to retrieve", "\n", "if", "metrics", "is", "not", "None", ":", "\n", "            ", "self", ".", "update_metrics", "(", "stage", ",", "metrics", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar.__init__": [[17, 30], ["time.time"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "max_step", ",", "width", "=", "15", ",", "mode", "=", "\"instant\"", ")", ":", "\n", "        ", "self", ".", "max_step", "=", "max_step", "\n", "self", ".", "width", "=", "width", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "last_width", "=", "0", "\n", "\n", "self", ".", "sum_values", "=", "{", "}", "\n", "\n", "self", ".", "start", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "last_step", "=", "0", "\n", "\n", "self", ".", "info", "=", "\"\"", "\n", "self", ".", "bar", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._update_values": [[31, 54], ["isinstance", "isinstance", "isinstance", "isinstance", "isinstance", "isinstance", "str", "str"], "methods", ["None"], ["", "def", "_update_values", "(", "self", ",", "curr_step", ",", "values", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "values", ":", "\n", "            ", "if", "k", "not", "in", "self", ".", "sum_values", ":", "\n", "                ", "if", "isinstance", "(", "v", ",", "float", ")", "or", "isinstance", "(", "v", ",", "int", ")", ":", "\n", "                    ", "if", "self", ".", "mode", "==", "\"instant\"", ":", "\n", "                        ", "self", ".", "sum_values", "[", "k", "]", "=", "v", "\n", "", "else", ":", "\n", "                        ", "self", ".", "sum_values", "[", "k", "]", "=", "[", "v", "*", "(", "curr_step", "-", "self", ".", "last_step", ")", ",", "curr_step", "-", "self", ".", "last_step", "]", "\n", "", "", "elif", "isinstance", "(", "v", ",", "str", ")", ":", "\n", "                    ", "self", ".", "sum_values", "[", "k", "]", "=", "(", "v", "+", "\"              \"", ")", "[", ":", "20", "]", "\n", "", "else", ":", "\n", "                    ", "self", ".", "sum_values", "[", "k", "]", "=", "(", "str", "(", "v", ")", "+", "\"              \"", ")", "[", ":", "20", "]", "\n", "", "", "else", ":", "\n", "                ", "if", "isinstance", "(", "v", ",", "float", ")", "or", "isinstance", "(", "v", ",", "int", ")", ":", "\n", "                    ", "if", "self", ".", "mode", "==", "\"instant\"", ":", "\n", "                        ", "self", ".", "sum_values", "[", "k", "]", "=", "v", "\n", "", "else", ":", "\n", "                        ", "self", ".", "sum_values", "[", "k", "]", "[", "0", "]", "+=", "v", "*", "(", "curr_step", "-", "self", ".", "last_step", ")", "\n", "self", ".", "sum_values", "[", "k", "]", "[", "1", "]", "+=", "(", "curr_step", "-", "self", ".", "last_step", ")", "\n", "", "", "elif", "isinstance", "(", "v", ",", "str", ")", ":", "\n", "                    ", "self", ".", "sum_values", "[", "k", "]", "=", "(", "v", "+", "\"              \"", ")", "[", ":", "20", "]", "\n", "", "else", ":", "\n", "                    ", "self", ".", "sum_values", "[", "k", "]", "=", "(", "str", "(", "v", ")", "+", "\"              \"", ")", "[", ":", "20", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._write_bar": [[55, 76], ["sys.stdout.write", "sys.stdout.write", "int", "sys.stdout.write", "int", "float", "numpy.floor", "numpy.log10"], "methods", ["None"], ["", "", "", "", "def", "_write_bar", "(", "self", ",", "curr_step", ")", ":", "\n", "        ", "last_width", "=", "self", ".", "last_width", "\n", "sys", ".", "stdout", ".", "write", "(", "\"\\b\"", "*", "last_width", ")", "\n", "sys", ".", "stdout", ".", "write", "(", "\"\\r\"", ")", "\n", "\n", "numdigits", "=", "int", "(", "np", ".", "floor", "(", "np", ".", "log10", "(", "self", ".", "max_step", ")", ")", ")", "+", "1", "\n", "barstr", "=", "'%%%dd/%%%dd ['", "%", "(", "numdigits", ",", "numdigits", ")", "\n", "bar", "=", "barstr", "%", "(", "curr_step", ",", "self", ".", "max_step", ")", "\n", "prog", "=", "float", "(", "curr_step", ")", "/", "self", ".", "max_step", "\n", "prog_width", "=", "int", "(", "self", ".", "width", "*", "prog", ")", "\n", "if", "prog_width", ">", "0", ":", "\n", "            ", "bar", "+=", "(", "'='", "*", "(", "prog_width", "-", "1", ")", ")", "\n", "if", "curr_step", "<", "self", ".", "max_step", ":", "\n", "                ", "bar", "+=", "'>'", "\n", "", "else", ":", "\n", "                ", "bar", "+=", "'='", "\n", "", "", "bar", "+=", "(", "'.'", "*", "(", "self", ".", "width", "-", "prog_width", ")", ")", "\n", "bar", "+=", "']'", "\n", "sys", ".", "stdout", ".", "write", "(", "bar", ")", "\n", "\n", "return", "bar", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._get_eta": [[77, 91], ["time.time"], "methods", ["None"], ["", "def", "_get_eta", "(", "self", ",", "curr_step", ")", ":", "\n", "        ", "now", "=", "time", ".", "time", "(", ")", "\n", "if", "curr_step", ":", "\n", "            ", "time_per_unit", "=", "(", "now", "-", "self", ".", "start", ")", "/", "curr_step", "\n", "", "else", ":", "\n", "            ", "time_per_unit", "=", "0", "\n", "", "eta", "=", "time_per_unit", "*", "(", "self", ".", "max_step", "-", "curr_step", ")", "\n", "\n", "if", "curr_step", "<", "self", ".", "max_step", ":", "\n", "            ", "info", "=", "' - ETA: %ds'", "%", "eta", "\n", "", "else", ":", "\n", "            ", "info", "=", "' - %ds'", "%", "(", "now", "-", "self", ".", "start", ")", "\n", "\n", "", "return", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._get_values_sum": [[92, 103], ["Progbar.Progbar.sum_values.items", "isinstance", "max"], "methods", ["None"], ["", "def", "_get_values_sum", "(", "self", ")", ":", "\n", "        ", "info", "=", "\"\"", "\n", "for", "name", ",", "value", "in", "self", ".", "sum_values", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "value", ",", "str", ")", ":", "\n", "                ", "info", "+=", "' - %s: %s'", "%", "(", "name", ",", "value", ")", "\n", "", "else", ":", "\n", "                ", "if", "self", ".", "mode", "==", "\"instant\"", ":", "\n", "                    ", "info", "+=", "' - %s: %.6f'", "%", "(", "name", ",", "value", ")", "\n", "", "else", ":", "\n", "                    ", "info", "+=", "' - %s: %.6f'", "%", "(", "name", ",", "value", "[", "0", "]", "/", "max", "(", "1", ",", "value", "[", "1", "]", ")", ")", "\n", "", "", "", "return", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._write_info": [[104, 112], ["Progbar.Progbar._get_eta", "Progbar.Progbar._get_values_sum", "sys.stdout.write"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._get_eta", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._get_values_sum"], ["", "def", "_write_info", "(", "self", ",", "curr_step", ")", ":", "\n", "        ", "info", "=", "\"\"", "\n", "info", "+=", "self", ".", "_get_eta", "(", "curr_step", ")", "\n", "info", "+=", "self", ".", "_get_values_sum", "(", ")", "\n", "\n", "sys", ".", "stdout", ".", "write", "(", "info", ")", "\n", "\n", "return", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._update_width": [[113, 124], ["sys.stdout.flush", "len", "len", "sys.stdout.write", "sys.stdout.write"], "methods", ["None"], ["", "def", "_update_width", "(", "self", ",", "curr_step", ")", ":", "\n", "        ", "curr_width", "=", "len", "(", "self", ".", "bar", ")", "+", "len", "(", "self", ".", "info", ")", "\n", "if", "curr_width", "<", "self", ".", "last_width", ":", "\n", "            ", "sys", ".", "stdout", ".", "write", "(", "\" \"", "*", "(", "self", ".", "last_width", "-", "curr_width", ")", ")", "\n", "\n", "", "if", "curr_step", ">=", "self", ".", "max_step", ":", "\n", "            ", "sys", ".", "stdout", ".", "write", "(", "\"\\n\"", ")", "\n", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "self", ".", "last_width", "=", "curr_width", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar.update": [[125, 138], ["Progbar.Progbar._update_values", "Progbar.Progbar._write_bar", "Progbar.Progbar._write_info", "Progbar.Progbar._update_width"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._update_values", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._write_bar", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._write_info", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar._update_width"], ["", "def", "update", "(", "self", ",", "curr_step", ",", "values", ")", ":", "\n", "        ", "\"\"\"Updates the progress bar.\n\n        Args:\n            values: List of tuples (name, value_for_last_step).\n                The progress bar will display averages for these values.\n\n        \"\"\"", "\n", "self", ".", "_update_values", "(", "curr_step", ",", "values", ")", "\n", "self", ".", "bar", "=", "self", ".", "_write_bar", "(", "curr_step", ")", "\n", "self", ".", "info", "=", "self", ".", "_write_info", "(", "curr_step", ")", "\n", "self", ".", "_update_width", "(", "curr_step", ")", "\n", "self", ".", "last_step", "=", "curr_step", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Embed.get_vec": [[6, 9], ["torch.LongTensor().view().to", "entities_embedding().view().cpu().detach().numpy", "torch.LongTensor().view", "entities_embedding().view().cpu().detach", "torch.LongTensor", "entities_embedding().view().cpu", "entities_embedding().view", "entities_embedding"], "function", ["None"], ["def", "get_vec", "(", "entities_embedding", ",", "id_list", ":", "List", "[", "int", "]", ",", "embedding_dim", "=", "200", ",", "device", "=", "\"cuda\"", ")", ":", "\n", "    ", "tensor", "=", "torch", ".", "LongTensor", "(", "id_list", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "to", "(", "device", ")", "\n", "return", "entities_embedding", "(", "tensor", ")", ".", "view", "(", "-", "1", ",", "embedding_dim", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Embed.get_vec2": [[11, 19], ["torch.LongTensor().view().to", "torch.index_select().view().cpu().detach().numpy", "torch.LongTensor().view", "torch.index_select().view().cpu().detach", "torch.LongTensor", "torch.index_select().view().cpu", "torch.index_select().view", "torch.index_select"], "function", ["None"], ["", "def", "get_vec2", "(", "entities_embedding", ",", "id_list", ":", "List", "[", "int", "]", ",", "embedding_dim", "=", "200", ",", "device", "=", "\"cuda\"", ")", ":", "\n", "    ", "all_entity_ids", "=", "torch", ".", "LongTensor", "(", "id_list", ")", ".", "view", "(", "-", "1", ")", ".", "to", "(", "device", ")", "\n", "all_entity_vec", "=", "torch", ".", "index_select", "(", "\n", "entities_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "all_entity_ids", "\n", ")", ".", "view", "(", "-", "1", ",", "embedding_dim", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "return", "all_entity_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Embed.get_vec3": [[21, 30], ["torch.LongTensor().view().to", "torch.index_select().view", "all_entity_vec.matmul.matmul", "all_entity_vec.matmul.cpu().detach().numpy", "orth.transpose", "torch.LongTensor().view", "torch.index_select", "all_entity_vec.matmul.cpu().detach", "torch.LongTensor", "all_entity_vec.matmul.cpu"], "function", ["None"], ["", "def", "get_vec3", "(", "entities_embedding", ",", "orth", ":", "torch", ".", "Tensor", ",", "id_list", ":", "List", "[", "int", "]", ",", "device", "=", "\"cuda\"", ")", ":", "\n", "    ", "all_entity_ids", "=", "torch", ".", "LongTensor", "(", "id_list", ")", ".", "view", "(", "-", "1", ")", ".", "to", "(", "device", ")", "\n", "all_entity_vec", "=", "torch", ".", "index_select", "(", "\n", "entities_embedding", ",", "\n", "dim", "=", "0", ",", "\n", "index", "=", "all_entity_ids", "\n", ")", ".", "view", "(", "-", "1", ",", "200", ")", "\n", "all_entity_vec", "=", "all_entity_vec", ".", "matmul", "(", "orth", ".", "transpose", "(", "0", ",", "1", ")", ")", "\n", "return", "all_entity_vec", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.Trainer.on_prepare_dataloader": [[19, 21], ["None"], "methods", ["None"], ["def", "on_prepare_dataloader", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.Trainer.on_compute_loss": [[22, 24], ["None"], "methods", ["None"], ["", "def", "on_compute_loss", "(", "self", ",", "model", ":", "Module", ",", "state", ":", "TrainerState", ",", "args", ":", "TrainingArguments", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.Trainer.skip_current_step": [[25, 27], ["None"], "methods", ["None"], ["", "def", "skip_current_step", "(", "self", ",", "state", ":", "TrainerState", ",", "args", ":", "TrainingArguments", ")", "->", "bool", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.ComposableTrainer.__init__": [[30, 83], ["toolbox.RandomSeeds.set_seeds", "torch.optim.Adam", "toolbox.TrainerState.TrainerState", "Trainer.ComposableTrainer.on_prepare_dataloader", "hasattr", "model.to.to.to", "filter", "Trainer.ComposableTrainer.model.parameters"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.RandomSeeds.set_seeds", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.ComposableTrainer.on_prepare_dataloader"], ["    ", "def", "__init__", "(", "self", ",", "\n", "trainers", ":", "List", "[", "Trainer", "]", ",", "\n", "output", ":", "OutputSchema", ",", "\n", "model", ":", "Module", ",", "\n", "args", ":", "TrainingArguments", ",", "\n", ")", ":", "\n", "        ", "self", ".", "trainers", "=", "trainers", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "output", "=", "output", "\n", "self", ".", "out", "=", "output", ".", "pathSchema", "\n", "self", ".", "log", "=", "output", ".", "logger", ".", "info", "\n", "set_seeds", "(", "self", ".", "args", ".", "seed", ")", "\n", "# force device and distributed setup init explicitly", "\n", "args", ".", "_setup_devices", "\n", "\n", "if", "hasattr", "(", "model", ",", "\"is_parallelizable\"", ")", "and", "model", ".", "is_parallelizable", "and", "model", ".", "model_parallel", ":", "\n", "            ", "self", ".", "is_model_parallel", "=", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "is_model_parallel", "=", "False", "\n", "\n", "# one place to sort out whether to place the model on device or not", "\n", "# postpone switching model to cuda when:", "\n", "# 1. MP - since we are trying to fit a much bigger than 1 gpu model", "\n", "# 2. fp16-enabled DeepSpeed loads the model in half the size and it doesn't need .to() anyway,", "\n", "#    and we only use deepspeed for training at the moment", "\n", "# 3. full fp16 eval - since the model needs to be half'ed first", "\n", "# 4. Sharded DDP - same as MP", "\n", "", "self", ".", "place_model_on_device", "=", "args", ".", "place_model_on_device", "\n", "if", "(", "\n", "self", ".", "is_model_parallel", "\n", "or", "(", "args", ".", "deepspeed", "and", "args", ".", "do_train", ")", "\n", "or", "(", "args", ".", "fp16_full_eval", "and", "not", "args", ".", "do_train", ")", "\n", ")", ":", "\n", "            ", "self", ".", "place_model_on_device", "=", "False", "\n", "\n", "", "if", "self", ".", "place_model_on_device", ":", "\n", "            ", "model", "=", "model", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# Force n_gpu to 1 to avoid DataParallel as MP will manage the GPUs", "\n", "", "if", "self", ".", "is_model_parallel", ":", "\n", "            ", "self", ".", "args", ".", "_n_gpu", "=", "1", "\n", "\n", "# later use `self.model is self.model_wrapped` to check if it's wrapped or not", "\n", "", "self", ".", "model_wrapped", "=", "model", "\n", "self", ".", "model", "=", "model", "\n", "\n", "self", ".", "optim", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "self", ".", "model", ".", "parameters", "(", ")", ")", ",", "\n", "lr", "=", "self", ".", "args", ".", "learning_rate", "\n", ")", "\n", "\n", "self", ".", "state", "=", "TrainerState", "(", ")", "\n", "self", ".", "on_prepare_dataloader", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.ComposableTrainer.on_prepare_dataloader": [[84, 87], ["i.on_prepare_dataloader"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.ComposableTrainer.on_prepare_dataloader"], ["", "def", "on_prepare_dataloader", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "self", ".", "trainers", ":", "\n", "            ", "i", ".", "on_prepare_dataloader", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.ComposableTrainer.run_train": [[88, 133], ["Trainer.ComposableTrainer.log", "toolbox.Progbar.Progbar", "time.time", "range", "toolbox.TrainerCheckpoint.load_trainer_checkpoint", "Trainer.ComposableTrainer.log", "Trainer.ComposableTrainer.run_test", "Trainer.ComposableTrainer.model.train", "Trainer.ComposableTrainer.optim.zero_grad", "loss.backward", "Trainer.ComposableTrainer.optim.step", "toolbox.Progbar.Progbar.update", "Trainer.ComposableTrainer.out.checkpoint_path", "i.skip_current_step", "i.on_compute_loss", "loss_list.append", "len", "Trainer.ComposableTrainer.run_test", "Trainer.ComposableTrainer.log", "Trainer.ComposableTrainer.save_extra", "Trainer.ComposableTrainer.log", "round", "loss.item", "i.on_compute_loss.item", "enumerate", "str", "time.time", "loss.item", "enumerate", "str", "i.on_compute_loss.item"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerCheckpoint.load_trainer_checkpoint", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.ComposableTrainer.run_test", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.train", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar.update", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputPathSchema.checkpoint_path", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.Trainer.skip_current_step", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.Trainer.on_compute_loss", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.ComposableTrainer.run_test", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.ComposableTrainer.save_extra"], ["", "", "def", "run_train", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "resume_training", ":", "\n", "            ", "self", ".", "state", "=", "load_trainer_checkpoint", "(", "self", ".", "model", ",", "self", ".", "optim", ",", "self", ".", "out", ".", "checkpoint_path", "(", ")", ")", "\n", "self", ".", "log", "(", "\"\u6062\u590d\u6a21\u578b\u540e\uff0c\u67e5\u770b\u4e00\u4e0b\u6a21\u578b\u72b6\u6001\"", ")", "\n", "self", ".", "state", ".", "best_metric", "=", "self", ".", "run_test", "(", ")", "\n", "", "self", ".", "log", "(", "\"start training\"", ")", "\n", "\n", "progbar", "=", "Progbar", "(", "max_step", "=", "self", ".", "state", ".", "max_steps", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "step", "in", "range", "(", "self", ".", "state", ".", "init_step", ",", "self", ".", "state", ".", "max_steps", ")", ":", "\n", "            ", "self", ".", "state", ".", "current_step", "=", "step", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "self", ".", "optim", ".", "zero_grad", "(", ")", "\n", "\n", "loss_list", "=", "[", "]", "\n", "loss", "=", "None", "\n", "for", "i", "in", "self", ".", "trainers", ":", "\n", "                ", "if", "i", ".", "skip_current_step", "(", "self", ".", "state", ",", "self", ".", "args", ")", ":", "\n", "                    ", "continue", "\n", "", "loss_i", "=", "i", ".", "on_compute_loss", "(", "self", ".", "model", ",", "self", ".", "state", ",", "self", ".", "args", ")", "\n", "loss_list", ".", "append", "(", "loss_i", ")", "\n", "if", "loss", "is", "None", ":", "\n", "                    ", "loss", "=", "loss_i", "\n", "", "else", ":", "\n", "                    ", "loss", "=", "loss", "+", "loss_i", "\n", "", "", "if", "loss", "is", "None", ":", "\n", "                ", "continue", "\n", "", "loss", "=", "loss", "/", "len", "(", "loss_list", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optim", ".", "step", "(", ")", "\n", "\n", "progbar", ".", "update", "(", "step", "+", "1", ",", "[", "(", "\"loss\"", ",", "loss", ".", "item", "(", ")", ")", "]", "\n", "+", "[", "(", "\"loss-%d\"", "%", "trainer_i", ",", "loss_i", ".", "item", "(", ")", ")", "for", "trainer_i", ",", "loss_i", "in", "enumerate", "(", "loss_list", ")", "]", "\n", "+", "[", "(", "\"cost\"", ",", "round", "(", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", ")", "]", ")", "\n", "if", "step", ">", "self", ".", "state", ".", "current_step", "and", "step", "%", "self", ".", "args", ".", "eval_steps", "==", "0", ":", "\n", "                ", "score", "=", "self", ".", "run_test", "(", ")", "\n", "last_score", "=", "self", ".", "state", ".", "best_metric", "\n", "self", ".", "log", "(", "\"loss = %s, \"", "%", "str", "(", "loss", ".", "item", "(", ")", ")", "[", ":", "8", "]", "+", "\", \"", ".", "join", "(", "[", "\n", "\"loss-%d=%s\"", "%", "(", "trainer_i", ",", "str", "(", "loss_i", ".", "item", "(", ")", ")", "[", ":", "8", "]", ")", "for", "trainer_i", ",", "loss_i", "in", "enumerate", "(", "loss_list", ")", "\n", "]", ")", ")", "\n", "self", ".", "save_extra", "(", "score", ",", "last_score", ")", "\n", "if", "score", ">", "last_score", ":", "\n", "                    ", "self", ".", "log", "(", "\"\u4fdd\u5b58 (+%.2f%%) (%.2f%% > %.2f%%)\"", "%", "\n", "(", "(", "score", "-", "last_score", ")", "*", "100", ",", "score", "*", "100", ",", "last_score", "*", "100", ")", ")", "\n", "self", ".", "state", ".", "best_metric", "=", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.ComposableTrainer.run_test": [[134, 140], ["None"], "methods", ["None"], ["", "", "", "", "def", "run_test", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        compute your metric here\n        return metric. it will be saved if higher than before\n        \"\"\"", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Trainer.ComposableTrainer.save_extra": [[141, 143], ["None"], "methods", ["None"], ["", "def", "save_extra", "(", "self", ",", "score", ",", "last_score", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputPathSchema.__init__": [[7, 19], ["OutputSchema.OutputPathSchema.output_path.mkdir", "OutputSchema.OutputPathSchema.dir_path_visualize.mkdir", "OutputSchema.OutputPathSchema.dir_path_embedding.mkdir", "OutputSchema.OutputPathSchema.dir_path_log.mkdir", "OutputSchema.OutputPathSchema.dir_path_checkpoint.mkdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "output_path", ":", "Path", ")", ":", "\n", "        ", "self", ".", "output_path", "=", "output_path", "\n", "self", ".", "output_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "self", ".", "dir_path_visualize", "=", "output_path", "/", "'visualize'", "\n", "self", ".", "dir_path_visualize", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "dir_path_embedding", "=", "output_path", "/", "'embedding'", "\n", "self", ".", "dir_path_embedding", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "dir_path_log", "=", "output_path", "/", "'log'", "\n", "self", ".", "dir_path_log", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "dir_path_checkpoint", "=", "output_path", "/", "'checkpoint'", "\n", "self", ".", "dir_path_checkpoint", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputPathSchema.checkpoint_path": [[20, 22], ["None"], "methods", ["None"], ["", "def", "checkpoint_path", "(", "self", ",", "filename", "=", "\"checkpoint.tar\"", ")", "->", "Path", ":", "\n", "        ", "return", "self", ".", "dir_path_checkpoint", "/", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputPathSchema.log_path": [[23, 25], ["None"], "methods", ["None"], ["", "def", "log_path", "(", "self", ",", "filename", ")", "->", "Path", ":", "\n", "        ", "return", "self", ".", "dir_path_log", "/", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputPathSchema.embedding_path": [[26, 28], ["None"], "methods", ["None"], ["", "def", "embedding_path", "(", "self", ",", "filename", ")", "->", "Path", ":", "\n", "        ", "return", "self", ".", "dir_path_embedding", "/", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputPathSchema.entity_embedding_path": [[29, 34], ["OutputSchema.OutputPathSchema.embedding_path", "OutputSchema.OutputPathSchema.embedding_path", "int"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputPathSchema.embedding_path", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputPathSchema.embedding_path"], ["", "def", "entity_embedding_path", "(", "self", ",", "score", "=", "-", "1", ")", "->", "Path", ":", "\n", "        ", "if", "score", "==", "-", "1", ":", "\n", "            ", "return", "self", ".", "embedding_path", "(", "\"entity_embedding.txt\"", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "embedding_path", "(", "\"entity_embedding_score_%d.txt\"", "%", "int", "(", "score", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputPathSchema.visualize_path": [[35, 37], ["None"], "methods", ["None"], ["", "", "def", "visualize_path", "(", "self", ",", "filename", ")", "->", "Path", ":", "\n", "        ", "return", "self", ".", "dir_path_visualize", "/", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputSchema.__init__": [[65, 72], ["OutputSchema.OutputSchema.output_home_path", "OutputSchema.OutputPathSchema", "toolbox.Log.Log", "str"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputSchema.output_home_path", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Log.Log"], ["def", "__init__", "(", "self", ",", "experiment_name", ":", "str", ",", "overwrite", "=", "False", ")", ":", "\n", "        ", "self", ".", "name", "=", "experiment_name", "\n", "self", ".", "home_path", "=", "self", ".", "output_home_path", "(", ")", "\n", "if", "overwrite", ":", "\n", "            ", "pass", "\n", "", "self", ".", "pathSchema", "=", "OutputPathSchema", "(", "self", ".", "home_path", ")", "\n", "self", ".", "logger", "=", "Log", "(", "str", "(", "self", ".", "home_path", "/", "\"output.log\"", ")", ",", "name_scope", "=", "\"output\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputSchema.output_home_path": [[73, 78], ["data_home_path.resolve.resolve.mkdir", "data_home_path.resolve.resolve.resolve", "pathlib.Path"], "methods", ["None"], ["", "def", "output_home_path", "(", "self", ")", "->", "Path", ":", "\n", "        ", "data_home_path", ":", "Path", "=", "Path", "(", "'.'", ")", "/", "'output'", "\n", "data_home_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "data_home_path", "=", "data_home_path", ".", "resolve", "(", ")", "\n", "return", "data_home_path", "/", "self", ".", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputSchema.output_path_child": [[79, 81], ["None"], "methods", ["None"], ["", "def", "output_path_child", "(", "self", ",", "name", ")", "->", "Path", ":", "\n", "        ", "return", "self", ".", "home_path", "/", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.OutputSchema.OutputSchema.dump": [[82, 86], ["OutputSchema.OutputSchema.__dict__.items", "OutputSchema.OutputSchema.logger.info"], "methods", ["None"], ["", "def", "dump", "(", "self", ")", ":", "\n", "        ", "\"\"\" Displays all the metadata of the knowledge graph\"\"\"", "\n", "for", "key", ",", "value", "in", "self", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"%s %s\"", "%", "(", "key", ",", "value", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.__init__": [[310, 335], ["timeit.default_timer", "Evaluate.MetricCalculator.reset"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.reset"], ["def", "__init__", "(", "self", ",", "\n", "hr_t", ",", "tr_h", ",", "\n", "hits", "=", "[", "1", ",", "3", ",", "5", ",", "10", ",", "50", ",", "100", "]", ")", ":", "\n", "\n", "        ", "self", ".", "hr_t", "=", "hr_t", "\n", "self", ".", "tr_h", "=", "tr_h", "\n", "self", ".", "hits", "=", "hits", "\n", "\n", "# (f)mr  : (filtered) mean rank", "\n", "# (f)mrr : (filtered) mean reciprocal rank", "\n", "# (f)hit : (filtered) hit-k ratio", "\n", "self", ".", "mr", "=", "{", "}", "\n", "self", ".", "fmr", "=", "{", "}", "\n", "self", ".", "mrr", "=", "{", "}", "\n", "self", ".", "fmrr", "=", "{", "}", "\n", "self", ".", "hit", "=", "{", "}", "\n", "self", ".", "fhit", "=", "{", "}", "\n", "\n", "self", ".", "rank_head", "=", "[", "]", "\n", "self", ".", "rank_tail", "=", "[", "]", "\n", "self", ".", "f_rank_head", "=", "[", "]", "\n", "self", ".", "f_rank_tail", "=", "[", "]", "\n", "self", ".", "epoch", "=", "None", "\n", "self", ".", "start_time", "=", "timeit", ".", "default_timer", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.reset": [[336, 344], ["timeit.default_timer"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "# temporarily used buffers and indexes.", "\n", "        ", "self", ".", "rank_head", "=", "[", "]", "\n", "self", ".", "rank_tail", "=", "[", "]", "\n", "self", ".", "f_rank_head", "=", "[", "]", "\n", "self", ".", "f_rank_tail", "=", "[", "]", "\n", "self", ".", "epoch", "=", "None", "\n", "self", ".", "start_time", "=", "timeit", ".", "default_timer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.append_result": [[345, 360], ["Evaluate.MetricCalculator.get_tail_rank", "Evaluate.MetricCalculator.get_head_rank", "Evaluate.MetricCalculator.rank_head.append", "Evaluate.MetricCalculator.rank_tail.append", "Evaluate.MetricCalculator.f_rank_head.append", "Evaluate.MetricCalculator.f_rank_tail.append"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.get_tail_rank", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.get_head_rank"], ["", "def", "append_result", "(", "self", ",", "result", ")", ":", "\n", "        ", "predict_tail", "=", "result", "[", "0", "]", "\n", "predict_head", "=", "result", "[", "1", "]", "\n", "\n", "h", ",", "r", ",", "t", "=", "result", "[", "2", "]", ",", "result", "[", "3", "]", ",", "result", "[", "4", "]", "\n", "\n", "self", ".", "epoch", "=", "result", "[", "5", "]", "\n", "\n", "t_rank", ",", "f_t_rank", "=", "self", ".", "get_tail_rank", "(", "predict_tail", ",", "h", ",", "r", ",", "t", ")", "\n", "h_rank", ",", "f_h_rank", "=", "self", ".", "get_head_rank", "(", "predict_head", ",", "h", ",", "r", ",", "t", ")", "\n", "\n", "self", ".", "rank_head", ".", "append", "(", "h_rank", ")", "\n", "self", ".", "rank_tail", ".", "append", "(", "t_rank", ")", "\n", "self", ".", "f_rank_head", ".", "append", "(", "f_h_rank", ")", "\n", "self", ".", "f_rank_tail", ".", "append", "(", "f_t_rank", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.get_tail_rank": [[361, 387], ["range", "len"], "methods", ["None"], ["", "def", "get_tail_rank", "(", "self", ",", "tail_candidate", ",", "h", ",", "r", ",", "t", ")", ":", "\n", "        ", "\"\"\"Function to evaluate the tail rank.\n\n           Args:\n               tail_candidate (list): List of the predicted tails for the given head, relation pair\n               h (int): head id\n               r (int): relation id\n               t (int): tail id\n\n            Returns:\n                Tensors: Returns tail rank and filtered tail rank\n        \"\"\"", "\n", "trank", "=", "0", "\n", "ftrank", "=", "0", "\n", "\n", "for", "j", "in", "range", "(", "len", "(", "tail_candidate", ")", ")", ":", "\n", "            ", "val", "=", "tail_candidate", "[", "-", "j", "-", "1", "]", "\n", "if", "val", "!=", "t", ":", "\n", "                ", "trank", "+=", "1", "\n", "ftrank", "+=", "1", "\n", "if", "val", "in", "self", ".", "hr_t", "[", "(", "h", ",", "r", ")", "]", ":", "\n", "                    ", "ftrank", "-=", "1", "\n", "", "", "else", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "trank", ",", "ftrank", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.get_head_rank": [[388, 414], ["range", "len"], "methods", ["None"], ["", "def", "get_head_rank", "(", "self", ",", "head_candidate", ",", "h", ",", "r", ",", "t", ")", ":", "\n", "        ", "\"\"\"Function to evaluate the head rank.\n\n           Args:\n               head_candidate (list): List of the predicted head for the given tail, relation pair\n               h (int): head id\n               r (int): relation id\n               t (int): tail id\n\n            Returns:\n                Tensors: Returns head  rank and filetered head rank\n        \"\"\"", "\n", "hrank", "=", "0", "\n", "fhrank", "=", "0", "\n", "\n", "for", "j", "in", "range", "(", "len", "(", "head_candidate", ")", ")", ":", "\n", "            ", "val", "=", "head_candidate", "[", "-", "j", "-", "1", "]", "\n", "if", "val", "!=", "h", ":", "\n", "                ", "hrank", "+=", "1", "\n", "fhrank", "+=", "1", "\n", "if", "val", "in", "self", ".", "tr_h", "[", "(", "t", ",", "r", ")", "]", ":", "\n", "                    ", "fhrank", "-=", "1", "\n", "", "", "else", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "hrank", ",", "fhrank", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.settle": [[415, 432], ["numpy.concatenate", "numpy.concatenate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.reciprocal", "numpy.reciprocal", "numpy.mean", "numpy.mean"], "methods", ["None"], ["", "def", "settle", "(", "self", ")", ":", "\n", "        ", "head_ranks", "=", "np", ".", "asarray", "(", "self", ".", "rank_head", ",", "dtype", "=", "np", ".", "float32", ")", "+", "1", "\n", "tail_ranks", "=", "np", ".", "asarray", "(", "self", ".", "rank_tail", ",", "dtype", "=", "np", ".", "float32", ")", "+", "1", "\n", "head_franks", "=", "np", ".", "asarray", "(", "self", ".", "f_rank_head", ",", "dtype", "=", "np", ".", "float32", ")", "+", "1", "\n", "tail_franks", "=", "np", ".", "asarray", "(", "self", ".", "f_rank_tail", ",", "dtype", "=", "np", ".", "float32", ")", "+", "1", "\n", "\n", "ranks", "=", "np", ".", "concatenate", "(", "(", "head_ranks", ",", "tail_ranks", ")", ")", "\n", "franks", "=", "np", ".", "concatenate", "(", "(", "head_franks", ",", "tail_franks", ")", ")", "\n", "\n", "self", ".", "mr", "[", "self", ".", "epoch", "]", "=", "np", ".", "mean", "(", "ranks", ")", "\n", "self", ".", "mrr", "[", "self", ".", "epoch", "]", "=", "np", ".", "mean", "(", "np", ".", "reciprocal", "(", "ranks", ")", ")", "\n", "self", ".", "fmr", "[", "self", ".", "epoch", "]", "=", "np", ".", "mean", "(", "franks", ")", "\n", "self", ".", "fmrr", "[", "self", ".", "epoch", "]", "=", "np", ".", "mean", "(", "np", ".", "reciprocal", "(", "franks", ")", ")", "\n", "\n", "for", "hit", "in", "self", ".", "hits", ":", "\n", "            ", "self", ".", "hit", "[", "(", "self", ".", "epoch", ",", "hit", ")", "]", "=", "np", ".", "mean", "(", "ranks", "<=", "hit", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "fhit", "[", "(", "self", ".", "epoch", ",", "hit", ")", "]", "=", "np", ".", "mean", "(", "franks", "<=", "hit", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.get_curr_scores": [[433, 441], ["None"], "methods", ["None"], ["", "", "def", "get_curr_scores", "(", "self", ")", ":", "\n", "        ", "scores", "=", "{", "\n", "'mr'", ":", "self", ".", "mr", "[", "self", ".", "epoch", "]", ",", "\n", "'fmr'", ":", "self", ".", "fmr", "[", "self", ".", "epoch", "]", ",", "\n", "'mrr'", ":", "self", ".", "mrr", "[", "self", ".", "epoch", "]", ",", "\n", "'fmrr'", ":", "self", ".", "fmrr", "[", "self", ".", "epoch", "]", "\n", "}", "\n", "return", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.display_summary": [[442, 456], ["timeit.default_timer", "test_results.append", "test_results.append", "test_results.append", "test_results.append"], "methods", ["None"], ["", "def", "display_summary", "(", "self", ")", ":", "\n", "        ", "\"\"\"Function to print the test summary.\"\"\"", "\n", "stop_time", "=", "timeit", ".", "default_timer", "(", ")", "\n", "test_results", "=", "[", "\n", "\"Epoch: %d --- time: %.2f\"", "%", "(", "self", ".", "epoch", ",", "stop_time", "-", "self", ".", "start_time", ")", ",", "\n", "'--mr,  filtered mr             : %.4f, %.4f'", "%", "(", "self", ".", "mr", "[", "self", ".", "epoch", "]", ",", "self", ".", "fmr", "[", "self", ".", "epoch", "]", ")", ",", "\n", "'--mrr, filtered mrr            : %.4f, %.4f'", "%", "(", "self", ".", "mrr", "[", "self", ".", "epoch", "]", ",", "self", ".", "fmrr", "[", "self", ".", "epoch", "]", ")", "\n", "]", "\n", "for", "hit", "in", "self", ".", "hits", ":", "\n", "            ", "test_results", ".", "append", "(", "'--hits%d                        : %.4f '", "%", "(", "hit", ",", "(", "self", ".", "hit", "[", "(", "self", ".", "epoch", ",", "hit", ")", "]", ")", ")", ")", "\n", "test_results", ".", "append", "(", "'--filtered hits%d               : %.4f '", "%", "(", "hit", ",", "(", "self", ".", "fhit", "[", "(", "self", ".", "epoch", ",", "hit", ")", "]", ")", ")", ")", "\n", "", "test_results", ".", "append", "(", "\"---------------------------------------------------------\"", ")", "\n", "test_results", ".", "append", "(", "''", ")", "\n", "return", "test_results", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.__init__": [[473, 488], ["Evaluate.MetricCalculator"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "model", ",", "\n", "triplets_test", ",", "triplets_valid", ",", "hr_t", ",", "tr_h", ",", "\n", "entity_count", ",", "relation_count", ",", "\n", "tuning", "=", "False", ",", "\n", "device", "=", "\"cuda\"", ",", "\n", "log", "=", "print", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "tuning", "=", "tuning", "\n", "self", ".", "entity_count", "=", "entity_count", "\n", "self", ".", "relation_count", "=", "relation_count", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "log", "=", "log", "\n", "self", ".", "triplets_test", "=", "triplets_test", "\n", "self", ".", "triplets_valid", "=", "triplets_valid", "\n", "self", ".", "metric_calculator", "=", "MetricCalculator", "(", "hr_t", ",", "tr_h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.test_tail_rank": [[489, 502], ["hasattr", "torch.LongTensor().repeat().to", "torch.LongTensor().repeat().to", "torch.LongTensor().to", "Evaluate.Evaluator.model.forward", "torch.topk", "Evaluate.Evaluator.model.predict_tail_rank", "Evaluate.Evaluator.squeeze", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().repeat", "torch.LongTensor().repeat", "torch.LongTensor", "list", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "range"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA_woCAL.forward"], ["", "def", "test_tail_rank", "(", "self", ",", "h", ",", "r", ",", "topk", "=", "-", "1", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ".", "model", ",", "'predict_tail_rank'", ")", ":", "\n", "            ", "rank", "=", "self", ".", "model", ".", "predict_tail_rank", "(", "torch", ".", "LongTensor", "(", "[", "h", "]", ")", ".", "to", "(", "self", ".", "device", ")", ",", "\n", "torch", ".", "LongTensor", "(", "[", "r", "]", ")", ".", "to", "(", "self", ".", "device", ")", ",", "topk", "=", "topk", ")", "\n", "return", "rank", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "h_batch", "=", "torch", ".", "LongTensor", "(", "[", "h", "]", ")", ".", "repeat", "(", "[", "self", ".", "entity_count", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "r_batch", "=", "torch", ".", "LongTensor", "(", "[", "r", "]", ")", ".", "repeat", "(", "[", "self", ".", "entity_count", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "entity_array", "=", "torch", ".", "LongTensor", "(", "list", "(", "range", "(", "self", ".", "entity_count", ")", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "preds", "=", "self", ".", "model", ".", "forward", "(", "h_batch", ",", "r_batch", ",", "entity_array", ")", "\n", "_", ",", "rank", "=", "torch", ".", "topk", "(", "preds", ",", "k", "=", "topk", ")", "\n", "return", "rank", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.test_head_rank": [[503, 516], ["hasattr", "torch.LongTensor().to", "torch.LongTensor().repeat().to", "torch.LongTensor().repeat().to", "Evaluate.Evaluator.model.forward", "torch.topk", "Evaluate.Evaluator.model.predict_head_rank", "Evaluate.Evaluator.squeeze", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor", "torch.LongTensor().repeat", "torch.LongTensor().repeat", "list", "torch.LongTensor", "torch.LongTensor", "range", "torch.LongTensor", "torch.LongTensor"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA_woCAL.forward"], ["", "def", "test_head_rank", "(", "self", ",", "r", ",", "t", ",", "topk", "=", "-", "1", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ".", "model", ",", "'predict_head_rank'", ")", ":", "\n", "            ", "rank", "=", "self", ".", "model", ".", "predict_head_rank", "(", "torch", ".", "LongTensor", "(", "[", "t", "]", ")", ".", "to", "(", "self", ".", "device", ")", ",", "\n", "torch", ".", "LongTensor", "(", "[", "r", "]", ")", ".", "to", "(", "self", ".", "device", ")", ",", "topk", "=", "topk", ")", "\n", "return", "rank", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "entity_array", "=", "torch", ".", "LongTensor", "(", "list", "(", "range", "(", "self", ".", "entity_count", ")", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "r_batch", "=", "torch", ".", "LongTensor", "(", "[", "r", "]", ")", ".", "repeat", "(", "[", "self", ".", "entity_count", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "t_batch", "=", "torch", ".", "LongTensor", "(", "[", "t", "]", ")", ".", "repeat", "(", "[", "self", ".", "entity_count", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "preds", "=", "self", ".", "model", ".", "forward", "(", "entity_array", ",", "r_batch", ",", "t_batch", ")", "\n", "_", ",", "rank", "=", "torch", ".", "topk", "(", "preds", ",", "k", "=", "topk", ")", "\n", "return", "rank", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.test_rel_rank": [[517, 530], ["hasattr", "torch.LongTensor().repeat().to", "torch.LongTensor().to", "torch.LongTensor().repeat().to", "Evaluate.Evaluator.model.forward", "torch.topk", "Evaluate.Evaluator.model.predict_rel_rank", "Evaluate.Evaluator.squeeze", "h.to", "t.to", "torch.LongTensor().repeat", "torch.LongTensor", "torch.LongTensor().repeat", "list", "torch.LongTensor", "range", "torch.LongTensor"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.model.EchoEA_woCAL.forward"], ["", "def", "test_rel_rank", "(", "self", ",", "h", ",", "t", ",", "topk", "=", "-", "1", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ".", "model", ",", "'predict_rel_rank'", ")", ":", "\n", "# TODO: This is not implemented for conve, convkb, proje_pointwise, tucker, interacte and hyper", "\n", "            ", "rank", "=", "self", ".", "model", ".", "predict_rel_rank", "(", "h", ".", "to", "(", "self", ".", "device", ")", ",", "t", ".", "to", "(", "self", ".", "device", ")", ",", "topk", "=", "topk", ")", "\n", "return", "rank", ".", "squeeze", "(", "0", ")", "\n", "\n", "", "h_batch", "=", "torch", ".", "LongTensor", "(", "[", "h", "]", ")", ".", "repeat", "(", "[", "self", ".", "relation_count", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "rel_array", "=", "torch", ".", "LongTensor", "(", "list", "(", "range", "(", "self", ".", "relation_count", ")", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "t_batch", "=", "torch", ".", "LongTensor", "(", "[", "t", "]", ")", ".", "repeat", "(", "[", "self", ".", "relation_count", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "preds", "=", "self", ".", "model", ".", "forward", "(", "h_batch", ",", "rel_array", ",", "t_batch", ")", "\n", "_", ",", "rank", "=", "torch", ".", "topk", "(", "preds", ",", "k", "=", "topk", ")", "\n", "return", "rank", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.mini_test": [[531, 541], ["Evaluate.Evaluator.log", "Evaluate.Evaluator.test", "len", "min", "len", "len"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.test"], ["", "def", "mini_test", "(", "self", ",", "epoch", "=", "None", ",", "test_num", "=", "0", ",", "debug", "=", "False", ")", ":", "\n", "        ", "if", "test_num", "==", "0", ":", "\n", "            ", "tot_valid_to_test", "=", "len", "(", "self", ".", "triplets_valid", ")", "\n", "", "else", ":", "\n", "            ", "tot_valid_to_test", "=", "min", "(", "test_num", ",", "len", "(", "self", ".", "triplets_valid", ")", ")", "\n", "", "if", "debug", ":", "\n", "            ", "tot_valid_to_test", "=", "10", "\n", "\n", "", "self", ".", "log", "(", "\"Mini-Testing on [%d/%d] Triples in the valid set.\"", "%", "(", "tot_valid_to_test", ",", "len", "(", "self", ".", "triplets_valid", ")", ")", ")", "\n", "return", "self", ".", "test", "(", "self", ".", "triplets_valid", ",", "tot_valid_to_test", ",", "epoch", "=", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.full_test": [[542, 549], ["len", "Evaluate.Evaluator.log", "Evaluate.Evaluator.test", "len"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.test"], ["", "def", "full_test", "(", "self", ",", "epoch", "=", "None", ",", "debug", "=", "False", ")", ":", "\n", "        ", "tot_valid_to_test", "=", "len", "(", "self", ".", "triplets_test", ")", "\n", "if", "debug", ":", "\n", "            ", "tot_valid_to_test", "=", "10", "\n", "\n", "", "self", ".", "log", "(", "\"Full-Testing on [%d/%d] Triples in the test set.\"", "%", "(", "tot_valid_to_test", ",", "len", "(", "self", ".", "triplets_test", ")", ")", ")", "\n", "return", "self", ".", "test", "(", "self", ".", "triplets_test", ",", "tot_valid_to_test", ",", "epoch", "=", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.test": [[550, 575], ["Evaluate.Evaluator.metric_calculator.reset", "toolbox.Progbar.Progbar", "range", "Evaluate.Evaluator.metric_calculator.settle", "Evaluate.Evaluator.metric_calculator.display_summary", "Evaluate.Evaluator.metric_calculator.get_curr_scores", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "Evaluate.Evaluator.test_head_rank", "Evaluate.Evaluator.test_tail_rank", "Evaluate.Evaluator.metric_calculator.append_result", "toolbox.Progbar.Progbar.update", "Evaluate.Evaluator.detach().cpu().numpy", "Evaluate.Evaluator.detach().cpu().numpy", "Evaluate.Evaluator.detach().cpu", "Evaluate.Evaluator.detach().cpu", "Evaluate.Evaluator.detach", "Evaluate.Evaluator.detach"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.reset", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.settle", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.display_summary", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.get_curr_scores", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.test_head_rank", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.Evaluator.test_tail_rank", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.MetricCalculator.append_result", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Progbar.Progbar.update"], ["", "def", "test", "(", "self", ",", "data", ",", "num_of_test", ",", "epoch", "=", "None", ")", ":", "\n", "        ", "self", ".", "metric_calculator", ".", "reset", "(", ")", "\n", "\n", "bar", "=", "Progbar", "(", "num_of_test", ")", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "num_of_test", ")", ":", "\n", "            ", "h", ",", "r", ",", "t", "=", "data", "[", "i", "]", ".", "h", ",", "data", "[", "i", "]", ".", "r", ",", "data", "[", "i", "]", ".", "t", "\n", "\n", "# generate head batch and predict heads.", "\n", "h_tensor", "=", "torch", ".", "LongTensor", "(", "[", "h", "]", ")", "\n", "r_tensor", "=", "torch", ".", "LongTensor", "(", "[", "r", "]", ")", "\n", "t_tensor", "=", "torch", ".", "LongTensor", "(", "[", "t", "]", ")", "\n", "\n", "hrank", "=", "self", ".", "test_head_rank", "(", "r_tensor", ",", "t_tensor", ",", "self", ".", "entity_count", ")", "\n", "trank", "=", "self", ".", "test_tail_rank", "(", "h_tensor", ",", "r_tensor", ",", "self", ".", "entity_count", ")", "\n", "\n", "result_data", "=", "[", "trank", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "hrank", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "h", ",", "r", ",", "t", ",", "epoch", "]", "\n", "\n", "self", ".", "metric_calculator", ".", "append_result", "(", "result_data", ")", "\n", "count", "+=", "1", "\n", "bar", ".", "update", "(", "count", ",", "[", "(", "\"setp\"", ",", "count", ")", "]", ")", "\n", "\n", "", "self", ".", "metric_calculator", ".", "settle", "(", ")", "\n", "self", ".", "metric_calculator", ".", "display_summary", "(", ")", "\n", "return", "self", ".", "metric_calculator", ".", "get_curr_scores", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.div_list": [[21, 36], ["len", "range", "ls_return.append", "ls_return.append"], "function", ["None"], ["def", "div_list", "(", "ls", ",", "n", ")", ":", "\n", "    ", "ls_len", "=", "len", "(", "ls", ")", "\n", "if", "n", "<=", "0", "or", "0", "==", "ls_len", ":", "\n", "        ", "return", "[", "]", "\n", "", "if", "n", ">", "ls_len", ":", "\n", "        ", "return", "[", "]", "\n", "", "elif", "n", "==", "ls_len", ":", "\n", "        ", "return", "[", "[", "i", "]", "for", "i", "in", "ls", "]", "\n", "", "else", ":", "\n", "        ", "j", "=", "ls_len", "//", "n", "\n", "ls_return", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "(", "n", "-", "1", ")", "*", "j", ",", "j", ")", ":", "\n", "            ", "ls_return", ".", "append", "(", "ls", "[", "i", ":", "i", "+", "j", "]", ")", "\n", "", "ls_return", ".", "append", "(", "ls", "[", "(", "n", "-", "1", ")", "*", "j", ":", "]", ")", "\n", "return", "ls_return", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.multi_cal_rank": [[38, 60], ["range", "range", "numpy.array", "numpy.array", "len", "distance[].argsort", "range", "len", "distanceT[].argsort", "range", "len", "len", "len", "len", "numpy.where", "numpy.where"], "function", ["None"], ["", "", "def", "multi_cal_rank", "(", "task", ",", "distance", ",", "distanceT", ",", "top_k", ")", ":", "\n", "    ", "acc_l2r", ",", "acc_r2l", "=", "np", ".", "array", "(", "[", "0.", "]", "*", "len", "(", "top_k", ")", ")", ",", "np", ".", "array", "(", "[", "0.", "]", "*", "len", "(", "top_k", ")", ")", "\n", "mean_l2r", ",", "mean_r2l", ",", "mrr_l2r", ",", "mrr_r2l", "=", "0.", ",", "0.", ",", "0.", ",", "0.", "\n", "for", "i", "in", "range", "(", "len", "(", "task", ")", ")", ":", "\n", "        ", "ref", "=", "task", "[", "i", "]", "\n", "indices", "=", "distance", "[", "i", ",", ":", "]", ".", "argsort", "(", ")", "\n", "rank", "=", "np", ".", "where", "(", "indices", "==", "ref", ")", "[", "0", "]", "[", "0", "]", "\n", "mean_l2r", "+=", "(", "rank", "+", "1", ")", "\n", "mrr_l2r", "+=", "1.0", "/", "(", "rank", "+", "1", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "top_k", ")", ")", ":", "\n", "            ", "if", "rank", "<", "top_k", "[", "j", "]", ":", "\n", "                ", "acc_l2r", "[", "j", "]", "+=", "1", "\n", "", "", "", "for", "i", "in", "range", "(", "len", "(", "task", ")", ")", ":", "\n", "        ", "ref", "=", "task", "[", "i", "]", "\n", "indices", "=", "distanceT", "[", ":", ",", "i", "]", ".", "argsort", "(", ")", "\n", "rank", "=", "np", ".", "where", "(", "indices", "==", "ref", ")", "[", "0", "]", "[", "0", "]", "\n", "mean_r2l", "+=", "(", "rank", "+", "1", ")", "\n", "mrr_r2l", "+=", "1.0", "/", "(", "rank", "+", "1", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "top_k", ")", ")", ":", "\n", "            ", "if", "rank", "<", "top_k", "[", "j", "]", ":", "\n", "                ", "acc_r2l", "[", "j", "]", "+=", "1", "\n", "", "", "", "return", "acc_l2r", ",", "mean_l2r", ",", "mrr_l2r", ",", "acc_r2l", ",", "mean_r2l", ",", "mrr_r2l", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.sim": [[62, 105], ["sklearn.preprocessing.normalize", "sklearn.preprocessing.normalize", "numpy.matmul", "Evaluate.csls_sim", "numpy.matmul", "sim_mat.astype.astype", "scipy.spatial.distance.cdist", "sim_mat.astype.astype", "scipy.spatial.distance.cdist", "sim_mat.astype.astype", "sim_mat.astype.astype", "scipy.spatial.distance.cdist", "scipy.spatial.distance.cdist"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.csls_sim"], ["", "def", "sim", "(", "embed1", ",", "embed2", ",", "metric", "=", "'inner'", ",", "normalize", "=", "False", ",", "csls_k", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    Compute pairwise similarity between the two collections of embeddings.\n\n    Parameters\n    ----------\n    embed1 : matrix_like\n        An embedding matrix of size n1*d, where n1 is the number of embeddings and d is the dimension.\n    embed2 : matrix_like\n        An embedding matrix of size n2*d, where n2 is the number of embeddings and d is the dimension.\n    metric : str, optional, inner default.\n        The distance metric to use. It can be 'cosine', 'euclidean', 'inner'.\n    normalize : bool, optional, default false.\n        Whether to normalize the input embeddings.\n    csls_k : int, optional, 0 by default.\n        K value for csls. If k > 0, enhance the similarity by csls.\n\n    Returns\n    -------\n    sim_mat : An similarity matrix of size n1*n2.\n    \"\"\"", "\n", "if", "normalize", ":", "\n", "        ", "embed1", "=", "preprocessing", ".", "normalize", "(", "embed1", ")", "\n", "embed2", "=", "preprocessing", ".", "normalize", "(", "embed2", ")", "\n", "", "if", "metric", "==", "'inner'", ":", "\n", "        ", "sim_mat", "=", "np", ".", "matmul", "(", "embed1", ",", "embed2", ".", "T", ")", "# numpy.ndarray, float32", "\n", "", "elif", "metric", "==", "'cosine'", "and", "normalize", ":", "\n", "        ", "sim_mat", "=", "np", ".", "matmul", "(", "embed1", ",", "embed2", ".", "T", ")", "# numpy.ndarray, float32", "\n", "", "elif", "metric", "==", "'euclidean'", ":", "\n", "        ", "sim_mat", "=", "1", "-", "cdist", "(", "embed1", ",", "embed2", ",", "metric", "=", "'euclidean'", ")", "# numpy.ndarray, float64", "\n", "sim_mat", "=", "sim_mat", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "elif", "metric", "==", "'cosine'", ":", "\n", "        ", "sim_mat", "=", "1", "-", "cdist", "(", "embed1", ",", "embed2", ",", "metric", "=", "'cosine'", ")", "# numpy.ndarray, float64", "\n", "sim_mat", "=", "sim_mat", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "elif", "metric", "==", "'manhattan'", ":", "\n", "        ", "sim_mat", "=", "1", "-", "cdist", "(", "embed1", ",", "embed2", ",", "metric", "=", "'cityblock'", ")", "\n", "sim_mat", "=", "sim_mat", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "sim_mat", "=", "1", "-", "cdist", "(", "embed1", ",", "embed2", ",", "metric", "=", "metric", ")", "\n", "sim_mat", "=", "sim_mat", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "if", "csls_k", ">", "0", ":", "\n", "        ", "sim_mat", "=", "csls_sim", "(", "sim_mat", ",", "csls_k", ")", "\n", "", "return", "sim_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.csls_sim": [[107, 126], ["Evaluate.calculate_nearest_k", "Evaluate.calculate_nearest_k"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.calculate_nearest_k", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.calculate_nearest_k"], ["", "def", "csls_sim", "(", "sim_mat", ",", "k", ")", ":", "\n", "    ", "\"\"\"\n    Compute pairwise csls similarity based on the input similarity matrix.\n\n    Parameters\n    ----------\n    sim_mat : matrix-like\n        A pairwise similarity matrix.\n    k : int\n        The number of nearest neighbors.\n\n    Returns\n    -------\n    csls_sim_mat : A csls similarity matrix of n1*n2.\n    \"\"\"", "\n", "nearest_values1", "=", "calculate_nearest_k", "(", "sim_mat", ",", "k", ")", "\n", "nearest_values2", "=", "calculate_nearest_k", "(", "sim_mat", ".", "T", ",", "k", ")", "\n", "csls_sim_mat", "=", "2", "*", "sim_mat", "-", "nearest_values1", "-", "nearest_values2", ".", "T", "\n", "return", "csls_sim_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.calculate_nearest_k": [[128, 132], ["numpy.mean", "numpy.partition"], "function", ["None"], ["", "def", "calculate_nearest_k", "(", "sim_mat", ",", "k", ")", ":", "\n", "    ", "sorted_mat", "=", "-", "np", ".", "partition", "(", "-", "sim_mat", ",", "k", "+", "1", ",", "axis", "=", "1", ")", "# -np.sort(-sim_mat1)", "\n", "nearest_k", "=", "sorted_mat", "[", ":", ",", "0", ":", "k", "]", "\n", "return", "np", ".", "mean", "(", "nearest_k", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.evaluate_entity_alignment": [[138, 215], ["time.time", "Evaluate.div_list", "range", "enumerate", "Evaluate.sim", "numpy.argsort", "numpy.argsort", "numpy.array", "numpy.array", "numpy.array", "Evaluate.multi_cal_rank", "len", "round", "round", "numpy.argsort", "numpy.argsort", "range", "time.time", "len", "len"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.div_list", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.sim", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.multi_cal_rank"], ["", "def", "evaluate_entity_alignment", "(", "test_data_size", ":", "int", ",", "left_emb", ",", "right_emb", ",", "\n", "rerank", "=", "False", ",", "\n", "metric", "=", "\"euclidean\"", ",", "\n", "csls", "=", "0", ")", "->", "Dict", "[", "str", ",", "Union", "[", "dict", ",", "float", "]", "]", ":", "\n", "    ", "\"\"\"\n    evaluate metrics\n\n    :param test_data_size: (int) test_data_size = len(test), where test = [(int, int)] entity alignment id pair list\n    :param left_emb: left entity embedding, test_data_size x d, where d is embedding dimension\n    :param right_emb: right entity embedding, test_data_size x d\n    :param rerank: (False)\n    :param metric: distance between left entity and right entity\n    :param csls: (0)\n\n    result = {\n        \"left2right\": {\n            \"Hits@1\": float,\n            \"Hits@3\": float,\n            \"Hits@5\": float,\n            \"Hits@10\": float,\n            \"Hits@50\": float,\n            \"Hits@100\": float,\n            \"MeanRank\": float,\n            \"MeanReciprocalRank\": float,\n        },\n        \"right2left\": {\n            \"Hits@1\": float,\n            \"Hits@3\": float,\n            \"Hits@5\": float,\n            \"Hits@10\": float,\n            \"Hits@50\": float,\n            \"Hits@100\": float,\n            \"MeanRank\": float,\n            \"MeanReciprocalRank\": float,\n        },\n        \"time\": float (seconds)\n    }\n    \"\"\"", "\n", "t_test", "=", "time", ".", "time", "(", ")", "\n", "top_k", "=", "[", "1", ",", "3", ",", "5", ",", "10", ",", "50", ",", "100", "]", "\n", "\n", "distance", "=", "-", "sim", "(", "left_emb", ",", "right_emb", ",", "metric", "=", "metric", ",", "normalize", "=", "True", ",", "csls_k", "=", "csls", ")", "\n", "if", "rerank", ":", "\n", "        ", "indices", "=", "np", ".", "argsort", "(", "np", ".", "argsort", "(", "distance", ",", "axis", "=", "1", ")", ",", "axis", "=", "1", ")", "\n", "indices_", "=", "np", ".", "argsort", "(", "np", ".", "argsort", "(", "distance", ".", "T", ",", "axis", "=", "1", ")", ",", "axis", "=", "1", ")", "\n", "distance", "=", "indices", "+", "indices_", ".", "T", "\n", "\n", "", "tasks", "=", "div_list", "(", "np", ".", "array", "(", "range", "(", "test_data_size", ")", ")", ",", "20", ")", "\n", "\n", "acc_l2r", ",", "acc_r2l", "=", "np", ".", "array", "(", "[", "0.", "]", "*", "len", "(", "top_k", ")", ")", ",", "np", ".", "array", "(", "[", "0.", "]", "*", "len", "(", "top_k", ")", ")", "\n", "mean_l2r", ",", "mean_r2l", ",", "mrr_l2r", ",", "mrr_r2l", "=", "0.", ",", "0.", ",", "0.", ",", "0.", "\n", "for", "task", "in", "tasks", ":", "\n", "        ", "res", "=", "multi_cal_rank", "(", "task", ",", "distance", "[", "task", ",", ":", "]", ",", "distance", "[", ":", ",", "task", "]", ",", "top_k", ")", "\n", "(", "_acc_l2r", ",", "_mean_l2r", ",", "_mrr_l2r", ",", "_acc_r2l", ",", "_mean_r2l", ",", "_mrr_r2l", ")", "=", "res", "\n", "acc_l2r", "+=", "_acc_l2r", "\n", "mean_l2r", "+=", "_mean_l2r", "\n", "mrr_l2r", "+=", "_mrr_l2r", "\n", "acc_r2l", "+=", "_acc_r2l", "\n", "mean_r2l", "+=", "_mean_r2l", "\n", "mrr_r2l", "+=", "_mrr_r2l", "\n", "", "mean_l2r", "/=", "test_data_size", "\n", "mean_r2l", "/=", "test_data_size", "\n", "mrr_l2r", "/=", "test_data_size", "\n", "mrr_r2l", "/=", "test_data_size", "\n", "for", "i", "in", "range", "(", "len", "(", "top_k", ")", ")", ":", "\n", "        ", "acc_l2r", "[", "i", "]", "=", "round", "(", "acc_l2r", "[", "i", "]", "/", "test_data_size", ",", "4", ")", "\n", "acc_r2l", "[", "i", "]", "=", "round", "(", "acc_r2l", "[", "i", "]", "/", "test_data_size", ",", "4", ")", "\n", "\n", "", "result", "=", "{", "\"left2right\"", ":", "{", "}", ",", "\"right2left\"", ":", "{", "}", ",", "\"time\"", ":", "time", ".", "time", "(", ")", "-", "t_test", "}", "\n", "for", "i", ",", "k", "in", "enumerate", "(", "top_k", ")", ":", "\n", "        ", "result", "[", "\"left2right\"", "]", "[", "\"Hits@{}\"", ".", "format", "(", "k", ")", "]", "=", "acc_l2r", "[", "i", "]", "\n", "result", "[", "\"right2left\"", "]", "[", "\"Hits@{}\"", ".", "format", "(", "k", ")", "]", "=", "acc_r2l", "[", "i", "]", "\n", "", "result", "[", "\"left2right\"", "]", "[", "\"MeanRank\"", "]", "=", "mean_l2r", "\n", "result", "[", "\"left2right\"", "]", "[", "\"MeanReciprocalRank\"", "]", "=", "mrr_l2r", "\n", "result", "[", "\"right2left\"", "]", "[", "\"MeanRank\"", "]", "=", "mean_r2l", "\n", "result", "[", "\"right2left\"", "]", "[", "\"MeanReciprocalRank\"", "]", "=", "mrr_r2l", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.get_score": [[217, 220], ["None"], "function", ["None"], ["", "def", "get_score", "(", "result", ":", "Dict", "[", "str", ",", "Union", "[", "dict", ",", "float", "]", "]", ")", ":", "\n", "    ", "score", "=", "(", "result", "[", "\"left2right\"", "]", "[", "\"Hits@1\"", "]", "+", "result", "[", "\"right2left\"", "]", "[", "\"Hits@1\"", "]", ")", "/", "2", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.pretty_print": [[222, 243], ["sorted", "sorted", "printer", "printer", "printer", "printer", "printer", "i.startswith", "i.startswith", "printer", "printer", "printer", "printer"], "function", ["None"], ["", "def", "pretty_print", "(", "result", ",", "printer", "=", "print", ")", ":", "\n", "    ", "left2right", "=", "result", "[", "\"left2right\"", "]", "\n", "right2left", "=", "result", "[", "\"right2left\"", "]", "\n", "using_time", "=", "result", "[", "\"time\"", "]", "\n", "sorted", "(", "left2right", ")", "\n", "sorted", "(", "right2left", ")", "\n", "printer", "(", "'---------------------------'", ")", "\n", "printer", "(", "'For each left:'", ")", "\n", "for", "i", "in", "left2right", ":", "\n", "        ", "if", "i", ".", "startswith", "(", "\"Hit\"", ")", ":", "\n", "            ", "printer", "(", "'%s: %.2f%%'", "%", "(", "i", ",", "left2right", "[", "i", "]", "*", "100", ")", ")", "\n", "", "else", ":", "\n", "            ", "printer", "(", "'%s: %.2f'", "%", "(", "i", ",", "left2right", "[", "i", "]", ")", ")", "\n", "", "", "printer", "(", "'For each right:'", ")", "\n", "for", "i", "in", "right2left", ":", "\n", "        ", "if", "i", ".", "startswith", "(", "\"Hit\"", ")", ":", "\n", "            ", "printer", "(", "'%s: %.2f%%'", "%", "(", "i", ",", "right2left", "[", "i", "]", "*", "100", ")", ")", "\n", "", "else", ":", "\n", "            ", "printer", "(", "'%s: %.2f'", "%", "(", "i", ",", "right2left", "[", "i", "]", ")", ")", "\n", "", "", "printer", "(", "\"using time: %.2f s\"", "%", "using_time", ")", "\n", "printer", "(", "'---------------------------'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.compute_MAP_AUC": [[245, 260], ["range", "len", "len", "range", "sim[].argsort", "len", "Evaluate.sim"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.sim"], ["", "def", "compute_MAP_AUC", "(", "sim", ")", ":", "\n", "    ", "MAP", "=", "0", "\n", "AUC", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "sim", ")", ")", ":", "\n", "        ", "ele_key", "=", "sim", "[", "i", "]", ".", "argsort", "(", ")", "[", ":", ":", "-", "1", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "ele_key", ")", ")", ":", "\n", "            ", "if", "ele_key", "[", "j", "]", "==", "i", ":", "\n", "                ", "ra", "=", "j", "+", "1", "\n", "MAP", "+=", "1", "/", "ra", "\n", "AUC", "+=", "(", "sim", ".", "shape", "[", "1", "]", "-", "ra", ")", "/", "(", "sim", ".", "shape", "[", "1", "]", "-", "1", ")", "\n", "break", "\n", "", "", "", "n_nodes", "=", "len", "(", "sim", ")", "\n", "MAP", "=", "MAP", "/", "n_nodes", "\n", "AUC", "=", "AUC", "/", "n_nodes", "\n", "return", "MAP", ",", "AUC", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.get_hits_from_topk": [[262, 268], ["range", "len"], "function", ["None"], ["", "def", "get_hits_from_topk", "(", "topk", ")", ":", "\n", "    ", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "topk", ")", ")", ":", "\n", "        ", "if", "i", "in", "topk", "[", "i", "]", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.get_topk_index": [[270, 273], ["numpy.argpartition", "Evaluate.sim"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.sim"], ["", "def", "get_topk_index", "(", "sim", ",", "k", ")", ":", "\n", "    ", "ind", "=", "np", ".", "argpartition", "(", "sim", ",", "-", "k", ")", "[", ":", ",", "-", "k", ":", "]", "\n", "return", "ind", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.get_statistics": [[275, 296], ["list", "list", "groundtruth.keys", "groundtruth.values", "Evaluate.get_topk_index", "Evaluate.get_hits_from_topk", "Evaluate.compute_MAP_AUC", "len"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.get_topk_index", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.get_hits_from_topk", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.compute_MAP_AUC"], ["", "def", "get_statistics", "(", "alignment_matrix", ",", "groundtruth", ",", "get_all_metric", "=", "False", ")", ":", "\n", "# JUST for crosslin", "\n", "    ", "source_nodes", "=", "list", "(", "groundtruth", ".", "keys", "(", ")", ")", "\n", "target_nodes", "=", "list", "(", "groundtruth", ".", "values", "(", ")", ")", "\n", "sim", "=", "(", "(", "alignment_matrix", "[", "source_nodes", "]", ")", ".", "T", "[", "target_nodes", "]", ")", ".", "T", "\n", "if", "get_all_metric", ":", "\n", "        ", "top_k", "=", "(", "1", ",", "10", ",", "50", ",", "100", ")", "\n", "", "else", ":", "\n", "        ", "top_k", "=", "[", "1", "]", "\n", "", "accs", "=", "{", "}", "\n", "acc", "=", "None", "\n", "for", "k", "in", "top_k", ":", "\n", "        ", "topk", "=", "get_topk_index", "(", "sim", ",", "k", ")", "\n", "count", "=", "get_hits_from_topk", "(", "topk", ")", "\n", "acc", "=", "count", "/", "len", "(", "groundtruth", ")", "\n", "if", "get_all_metric", ":", "\n", "            ", "accs", "[", "k", "]", "=", "acc", "\n", "", "", "if", "get_all_metric", ":", "\n", "        ", "MAP", ",", "AUC", "=", "compute_MAP_AUC", "(", "sim", ")", "\n", "return", "accs", ",", "MAP", ",", "AUC", "\n", "", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RemoteDataset.__init__": [[76, 85], ["root_path.mkdir", "toolbox.Log.Log", "str"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Log.Log"], ["    ", "def", "__init__", "(", "self", ",", "name", ":", "str", ",", "url", ":", "str", ",", "root_path", ":", "Path", ")", ":", "\n", "        ", "root_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "_logger", "=", "Log", "(", "str", "(", "root_path", "/", "\"fetch.log\"", ")", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "url", "=", "url", "\n", "self", ".", "root_path", ":", "Path", "=", "root_path", "\n", "\n", "self", ".", "tar", ":", "Path", "=", "self", ".", "root_path", "/", "(", "'%s.tgz'", "%", "self", ".", "name", ")", "\n", "self", ".", "zip", ":", "Path", "=", "self", ".", "root_path", "/", "(", "'%s.zip'", "%", "self", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RemoteDataset.download": [[86, 98], ["DatasetSchema.RemoteDataset._logger.info", "DatasetSchema.RemoteDataset.url.endswith", "DatasetSchema.RemoteDataset.url.endswith", "DatasetSchema.RemoteDataset.url.endswith", "urllib.request.urlopen", "open", "shutil.copyfileobj", "NotImplementedError", "str", "urllib.request.urlopen", "open", "shutil.copyfileobj", "str"], "methods", ["None"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "\"\"\" Downloads the given dataset from url\"\"\"", "\n", "self", ".", "_logger", ".", "info", "(", "\"Downloading the dataset %s\"", "%", "self", ".", "name", ")", "\n", "\n", "if", "self", ".", "url", ".", "endswith", "(", "'.tar.gz'", ")", "or", "self", ".", "url", ".", "endswith", "(", "'.tgz'", ")", ":", "\n", "            ", "with", "urllib", ".", "request", ".", "urlopen", "(", "self", ".", "url", ")", "as", "response", ",", "open", "(", "str", "(", "self", ".", "tar", ")", ",", "'wb'", ")", "as", "out_file", ":", "\n", "                ", "shutil", ".", "copyfileobj", "(", "response", ",", "out_file", ")", "\n", "", "", "elif", "self", ".", "url", ".", "endswith", "(", "'.zip'", ")", ":", "\n", "            ", "with", "urllib", ".", "request", ".", "urlopen", "(", "self", ".", "url", ")", "as", "response", ",", "open", "(", "str", "(", "self", ".", "zip", ")", ",", "'wb'", ")", "as", "out_file", ":", "\n", "                ", "shutil", ".", "copyfileobj", "(", "response", ",", "out_file", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Unknown compression format\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RemoteDataset.extract": [[99, 115], ["os.path.exists", "os.path.exists", "DatasetSchema.RemoteDataset._logger.info", "DatasetSchema.extract_tar", "DatasetSchema.RemoteDataset._logger.info", "DatasetSchema.extract_zip", "DatasetSchema.RemoteDataset._logger.error", "DatasetSchema.RemoteDataset._logger.exception", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.extract_tar", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.extract_zip"], ["", "", "def", "extract", "(", "self", ")", ":", "\n", "        ", "\"\"\" Extract the downloaded file under the folder with the given dataset name\"\"\"", "\n", "\n", "try", ":", "\n", "            ", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "tar", ")", ":", "\n", "                ", "self", ".", "_logger", ".", "info", "(", "\"Extracting the downloaded dataset from %s to %s\"", "%", "(", "self", ".", "tar", ",", "self", ".", "root_path", ")", ")", "\n", "extract_tar", "(", "str", "(", "self", ".", "tar", ")", ",", "str", "(", "self", ".", "root_path", ")", ")", "\n", "return", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "zip", ")", ":", "\n", "                ", "self", ".", "_logger", ".", "info", "(", "\"Extracting the downloaded dataset from %s to %s\"", "%", "(", "self", ".", "zip", ",", "self", ".", "root_path", ")", ")", "\n", "extract_zip", "(", "str", "(", "self", ".", "zip", ")", ",", "str", "(", "self", ".", "root_path", ")", ")", "\n", "return", "\n", "", "", "except", "Exception", "as", "e", ":", "\n", "            ", "self", ".", "_logger", ".", "error", "(", "\"Could not extract the target file!\"", ")", "\n", "self", ".", "_logger", ".", "exception", "(", "e", ")", "\n", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTriplet.__init__": [[145, 149], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "h", ",", "r", ",", "t", ")", ":", "\n", "        ", "self", ".", "h", "=", "h", "\n", "self", ".", "r", "=", "r", "\n", "self", ".", "t", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTriplet.set_ids": [[150, 161], ["None"], "methods", ["None"], ["", "def", "set_ids", "(", "self", ",", "h", ",", "r", ",", "t", ")", ":", "\n", "        ", "\"\"\" This function assigns the head, relation and tail.\n\n            Args:\n                h (int): Integer head entity.\n                r (int): Integer relation entity.\n                t (int): Integer tail entity.\n        \"\"\"", "\n", "self", ".", "h", "=", "h", "\n", "self", ".", "r", "=", "r", "\n", "self", ".", "t", "=", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.__init__": [[164, 167], ["DatasetSchema.BaseDatasetSchema.get_dataset_home_path"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.get_dataset_home_path"], ["    ", "def", "__init__", "(", "self", ",", "name", ":", "str", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "root_path", "=", "self", ".", "get_dataset_home_path", "(", "home", ")", "# ./data/${name}", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.get_dataset_home_path": [[168, 173], ["data_home_path.resolve.resolve.mkdir", "data_home_path.resolve.resolve.resolve", "pathlib.Path"], "methods", ["None"], ["", "def", "get_dataset_home_path", "(", "self", ",", "home", "=", "\"data\"", ")", "->", "Path", ":", "\n", "        ", "data_home_path", ":", "Path", "=", "Path", "(", "'.'", ")", "/", "home", "\n", "data_home_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "data_home_path", "=", "data_home_path", ".", "resolve", "(", ")", "\n", "return", "data_home_path", "/", "self", ".", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.force_fetch_remote": [[174, 176], ["DatasetSchema.fetch_from_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.fetch_from_remote"], ["", "def", "force_fetch_remote", "(", "self", ",", "url", ")", ":", "\n", "        ", "fetch_from_remote", "(", "self", ".", "name", ",", "url", ",", "self", ".", "root_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote": [[177, 180], ["DatasetSchema.BaseDatasetSchema.force_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.force_fetch_remote"], ["", "def", "try_to_fetch_remote", "(", "self", ",", "url", ")", ":", "\n", "        ", "if", "not", "(", "self", ".", "root_path", "/", "\"fetch.log\"", ")", ".", "exists", "(", ")", ":", "\n", "            ", "self", ".", "force_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.dump": [[181, 187], ["toolbox.Log.Log", "DatasetSchema.BaseDatasetSchema.__dict__.items", "str", "toolbox.Log.Log.info"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Log.Log"], ["", "", "def", "dump", "(", "self", ")", ":", "\n", "        ", "\"\"\" Displays all the metadata of the knowledge graph\"\"\"", "\n", "log_path", "=", "self", ".", "root_path", "/", "\"DatasetSchema.log\"", "\n", "_logger", "=", "Log", "(", "str", "(", "log_path", ")", ",", "name_scope", "=", "\"DatasetSchema\"", ")", "\n", "for", "key", ",", "value", "in", "self", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "_logger", ".", "info", "(", "\"%s %s\"", "%", "(", "key", ",", "value", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.__init__": [[212, 218], ["BaseDatasetSchema.__init__", "DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path", "DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "DatasetSchema.RelationalTripletDatasetSchema.cache_path.mkdir", "DatasetSchema.RelationalTripletDatasetSchema.get_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.SimplifiedDBP15k.get_dataset_path", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.SimplifiedDBP15k.get_data_paths"], ["def", "__init__", "(", "self", ",", "name", ":", "str", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "BaseDatasetSchema", ".", "__init__", "(", "self", ",", "name", ",", "home", ")", "\n", "self", ".", "dataset_path", "=", "self", ".", "get_dataset_path", "(", ")", "\n", "self", ".", "cache_path", "=", "self", ".", "get_dataset_path_child", "(", "\"cache\"", ")", "\n", "self", ".", "cache_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "data_paths", "=", "self", ".", "get_data_paths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path": [[219, 221], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", "->", "Path", ":", "\n", "        ", "return", "self", ".", "root_path", "/", "self", ".", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child": [[222, 224], ["None"], "methods", ["None"], ["", "def", "get_dataset_path_child", "(", "self", ",", "name", ")", "->", "Path", ":", "\n", "        ", "return", "self", ".", "dataset_path", "/", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_data_paths": [[225, 227], ["DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths": [[228, 238], ["DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child"], ["", "def", "default_data_paths", "(", "self", ",", "prefix", "=", "\"\"", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "\"\"\"default data paths, using prefix\n\n        :param prefix: for example, \"${self.dataset_path}/${prefix}train.txt\"\n\n        \"\"\"", "\n", "return", "{", "\n", "'train'", ":", "self", ".", "get_dataset_path_child", "(", "'%strain.txt'", "%", "prefix", ")", ",", "\n", "'test'", ":", "self", ".", "get_dataset_path_child", "(", "'%stest.txt'", "%", "prefix", ")", ",", "\n", "'valid'", ":", "self", ".", "get_dataset_path_child", "(", "'%svalid.txt'", "%", "prefix", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.FreebaseFB15k.__init__": [[249, 253], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.FreebaseFB15k.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["def", "__init__", "(", "self", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "super", "(", "FreebaseFB15k", ",", "self", ")", ".", "__init__", "(", "\"FB15k\"", ",", "home", ")", "\n", "url", "=", "\"https://everest.hds.utc.fr/lib/exe/fetch.php?media=en:fb15k.tgz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.FreebaseFB15k.get_data_paths": [[254, 256], ["DatasetSchema.FreebaseFB15k.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", "\"freebase_mtr100_mte100-\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.DeepLearning50a.__init__": [[266, 270], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.DeepLearning50a.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["def", "__init__", "(", "self", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "super", "(", "DeepLearning50a", ",", "self", ")", ".", "__init__", "(", "\"dL50a\"", ",", "home", ")", "\n", "url", "=", "\"https://github.com/louisccc/KGppler/raw/master/datasets/dL50a.tgz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.DeepLearning50a.get_data_paths": [[271, 273], ["DatasetSchema.DeepLearning50a.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", "'deeplearning_dataset_50arch-'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.WordNet18.__init__": [[283, 287], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.WordNet18.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["def", "__init__", "(", "self", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "super", "(", "WordNet18", ",", "self", ")", ".", "__init__", "(", "\"WN18\"", ",", "home", ")", "\n", "url", "=", "\"https://everest.hds.utc.fr/lib/exe/fetch.php?media=en:wordnet-mlj12.tar.gz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.WordNet18.get_data_paths": [[288, 290], ["DatasetSchema.WordNet18.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", "'wordnet-mlj12-'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.WordNet18.get_dataset_path": [[291, 293], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "/", "'wordnet-mlj12'", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.WordNet18_RR.__init__": [[303, 307], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.WordNet18_RR.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["def", "__init__", "(", "self", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "super", "(", "WordNet18_RR", ",", "self", ")", ".", "__init__", "(", "\"WN18RR\"", ",", "home", ")", "\n", "url", "=", "\"https://github.com/louisccc/KGppler/raw/master/datasets/WN18RR.tar.gz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.WordNet18_RR.get_data_paths": [[308, 310], ["DatasetSchema.WordNet18_RR.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.WordNet18_RR.get_dataset_path": [[311, 313], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.YAGO3_10.__init__": [[323, 327], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.YAGO3_10.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["def", "__init__", "(", "self", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "super", "(", "YAGO3_10", ",", "self", ")", ".", "__init__", "(", "\"YAGO3_10\"", ",", "home", ")", "\n", "url", "=", "\"https://github.com/louisccc/KGppler/raw/master/datasets/YAGO3-10.tar.gz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.YAGO3_10.get_data_paths": [[328, 330], ["DatasetSchema.YAGO3_10.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.YAGO3_10.get_dataset_path": [[331, 333], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.FreebaseFB15k_237.__init__": [[343, 347], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.FreebaseFB15k_237.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["def", "__init__", "(", "self", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "super", "(", "FreebaseFB15k_237", ",", "self", ")", ".", "__init__", "(", "\"FB15K_237\"", ",", "home", ")", "\n", "url", "=", "\"https://github.com/louisccc/KGppler/raw/master/datasets/fb15k-237.tgz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.FreebaseFB15k_237.get_data_paths": [[348, 350], ["DatasetSchema.FreebaseFB15k_237.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.FreebaseFB15k_237.get_dataset_path": [[351, 353], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.Kinship.__init__": [[363, 367], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.Kinship.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["def", "__init__", "(", "self", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "super", "(", "Kinship", ",", "self", ")", ".", "__init__", "(", "\"Kinship\"", ",", "home", ")", "\n", "url", "=", "\"https://github.com/louisccc/KGppler/raw/master/datasets/kinship.tar.gz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.Kinship.get_data_paths": [[368, 370], ["DatasetSchema.Kinship.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.Kinship.get_dataset_path": [[371, 373], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.Nations.__init__": [[383, 387], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.Nations.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["def", "__init__", "(", "self", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "super", "(", "Nations", ",", "self", ")", ".", "__init__", "(", "\"Nations\"", ",", "home", ")", "\n", "url", "=", "\"https://github.com/louisccc/KGppler/raw/master/datasets/nations.tar.gz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.Nations.get_data_paths": [[388, 390], ["DatasetSchema.Nations.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.Nations.get_dataset_path": [[391, 393], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.UMLS.__init__": [[402, 406], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.UMLS.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["def", "__init__", "(", "self", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "super", "(", "UMLS", ",", "self", ")", ".", "__init__", "(", "\"UMLS\"", ",", "home", ")", "\n", "url", "=", "\"https://github.com/louisccc/KGppler/raw/master/datasets/umls.tar.gz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.UMLS.get_data_paths": [[407, 409], ["DatasetSchema.UMLS.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.UMLS.get_dataset_path": [[410, 412], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.NELL_995.__init__": [[422, 426], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.NELL_995.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["def", "__init__", "(", "self", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "super", "(", "NELL_995", ",", "self", ")", ".", "__init__", "(", "\"NELL_995\"", ",", "home", ")", "\n", "url", "=", "\"https://github.com/louisccc/KGppler/raw/master/datasets/NELL_995.zip\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.NELL_995.get_data_paths": [[427, 429], ["DatasetSchema.NELL_995.default_data_paths"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.default_data_paths"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "return", "self", ".", "default_data_paths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.NELL_995.get_dataset_path": [[430, 432], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.DBP15k.__init__": [[465, 473], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.DBP15k.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["    ", "def", "__init__", "(", "self", ",", "name", "=", "\"fr_en\"", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "\"\"\"\n        :param name: choice \"fr_en\", \"ja_en\", \"zh_en\"\n        \"\"\"", "\n", "self", ".", "dataset_name", "=", "name", "\n", "super", "(", "DBP15k", ",", "self", ")", ".", "__init__", "(", "\"DBP15k\"", ",", "home", ")", "\n", "url", "=", "\"http://ws.nju.edu.cn/jape/data/DBP15k.tar.gz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.DBP15k.get_data_paths": [[474, 485], ["DatasetSchema.DBP15k.dataset_name.split", "DatasetSchema.DBP15k.get_dataset_path_child", "DatasetSchema.DBP15k.get_dataset_path_child", "DatasetSchema.DBP15k.get_dataset_path_child", "DatasetSchema.DBP15k.get_dataset_path_child", "DatasetSchema.DBP15k.get_dataset_path_child", "DatasetSchema.DBP15k.get_dataset_path_child", "DatasetSchema.DBP15k.get_dataset_path_child", "DatasetSchema.DBP15k.get_dataset_path_child"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "kg1", ",", "kg2", "=", "self", ".", "dataset_name", ".", "split", "(", "\"_\"", ")", "\n", "return", "{", "\n", "'train'", ":", "self", ".", "get_dataset_path_child", "(", "'train.txt'", ")", ",", "\n", "'test'", ":", "self", ".", "get_dataset_path_child", "(", "'test.txt'", ")", ",", "\n", "'valid'", ":", "self", ".", "get_dataset_path_child", "(", "'valid.txt'", ")", ",", "\n", "'seeds'", ":", "self", ".", "get_dataset_path_child", "(", "'ent_ILLs'", ")", ",", "\n", "'kg1_attribute_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_att_triples'", "%", "kg1", ")", ",", "\n", "'kg1_relational_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_rel_triples'", "%", "kg1", ")", ",", "\n", "'kg2_attribute_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_att_triples'", "%", "kg2", ")", ",", "\n", "'kg2_relational_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_rel_triples'", "%", "kg2", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.DBP15k.get_dataset_path": [[487, 489], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "/", "self", ".", "name", "/", "self", ".", "dataset_name", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.DBP100k.__init__": [[492, 500], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.DBP100k.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["    ", "def", "__init__", "(", "self", ",", "name", "=", "\"fr_en\"", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "\"\"\"\n        :param name: choice \"fr_en\", \"ja_en\", \"zh_en\"\n        \"\"\"", "\n", "self", ".", "dataset_name", "=", "name", "\n", "super", "(", "DBP100k", ",", "self", ")", ".", "__init__", "(", "\"DBP100k\"", ",", "home", ")", "\n", "url", "=", "\"http://ws.nju.edu.cn/jape/data/DBP100k.tar.gz\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.DBP100k.get_data_paths": [[501, 512], ["DatasetSchema.DBP100k.dataset_name.split", "DatasetSchema.DBP100k.get_dataset_path_child", "DatasetSchema.DBP100k.get_dataset_path_child", "DatasetSchema.DBP100k.get_dataset_path_child", "DatasetSchema.DBP100k.get_dataset_path_child", "DatasetSchema.DBP100k.get_dataset_path_child", "DatasetSchema.DBP100k.get_dataset_path_child", "DatasetSchema.DBP100k.get_dataset_path_child", "DatasetSchema.DBP100k.get_dataset_path_child"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "kg1", ",", "kg2", "=", "self", ".", "dataset_name", ".", "split", "(", "\"_\"", ")", "\n", "return", "{", "\n", "'train'", ":", "self", ".", "get_dataset_path_child", "(", "'train.txt'", ")", ",", "\n", "'test'", ":", "self", ".", "get_dataset_path_child", "(", "'test.txt'", ")", ",", "\n", "'valid'", ":", "self", ".", "get_dataset_path_child", "(", "'valid.txt'", ")", ",", "\n", "'seeds'", ":", "self", ".", "get_dataset_path_child", "(", "'ent_ILLs'", ")", ",", "\n", "'kg1_attribute_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_att_triples'", "%", "kg1", ")", ",", "\n", "'kg1_relational_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_rel_triples'", "%", "kg1", ")", ",", "\n", "'kg2_attribute_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_att_triples'", "%", "kg2", ")", ",", "\n", "'kg2_relational_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_rel_triples'", "%", "kg2", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.DBP100k.get_dataset_path": [[514, 516], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "/", "self", ".", "name", "/", "self", ".", "dataset_name", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.SimplifiedDBP15k.__init__": [[519, 527], ["DatasetSchema.RelationalTripletDatasetSchema.__init__", "DatasetSchema.SimplifiedDBP15k.try_to_fetch_remote"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.BaseDatasetSchema.try_to_fetch_remote"], ["    ", "def", "__init__", "(", "self", ",", "name", "=", "\"fr_en\"", ",", "home", ":", "str", "=", "\"data\"", ")", ":", "\n", "        ", "\"\"\"\n        :param name: choice \"fr_en\", \"ja_en\", \"zh_en\"\n        \"\"\"", "\n", "self", ".", "dataset_name", "=", "name", "\n", "super", "(", "SimplifiedDBP15k", ",", "self", ")", ".", "__init__", "(", "\"SimplifiedDBP15k\"", ",", "home", ")", "\n", "url", "=", "\"https://github.com/LinXueyuanStdio/KG_datasets/raw/master/datasets/SimplifiedDBP15k.zip\"", "\n", "self", ".", "try_to_fetch_remote", "(", "url", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.SimplifiedDBP15k.get_data_paths": [[528, 539], ["DatasetSchema.SimplifiedDBP15k.dataset_name.split", "DatasetSchema.SimplifiedDBP15k.get_dataset_path_child", "DatasetSchema.SimplifiedDBP15k.get_dataset_path_child", "DatasetSchema.SimplifiedDBP15k.get_dataset_path_child", "DatasetSchema.SimplifiedDBP15k.get_dataset_path_child", "DatasetSchema.SimplifiedDBP15k.get_dataset_path_child", "DatasetSchema.SimplifiedDBP15k.get_dataset_path_child", "DatasetSchema.SimplifiedDBP15k.get_dataset_path_child", "DatasetSchema.SimplifiedDBP15k.get_dataset_path_child"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RelationalTripletDatasetSchema.get_dataset_path_child"], ["", "def", "get_data_paths", "(", "self", ")", "->", "Dict", "[", "str", ",", "Path", "]", ":", "\n", "        ", "kg1", ",", "kg2", "=", "self", ".", "dataset_name", ".", "split", "(", "\"_\"", ")", "\n", "return", "{", "\n", "'train'", ":", "self", ".", "get_dataset_path_child", "(", "'train.txt'", ")", ",", "\n", "'test'", ":", "self", ".", "get_dataset_path_child", "(", "'test.txt'", ")", ",", "\n", "'valid'", ":", "self", ".", "get_dataset_path_child", "(", "'valid.txt'", ")", ",", "\n", "'seeds'", ":", "self", ".", "get_dataset_path_child", "(", "'ent_ILLs'", ")", ",", "\n", "'kg1_attribute_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_att_triples'", "%", "kg1", ")", ",", "\n", "'kg1_relational_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_rel_triples'", "%", "kg1", ")", ",", "\n", "'kg2_attribute_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_att_triples'", "%", "kg2", ")", ",", "\n", "'kg2_relational_triples'", ":", "self", ".", "get_dataset_path_child", "(", "'%s_rel_triples'", "%", "kg2", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.SimplifiedDBP15k.get_dataset_path": [[541, 543], ["None"], "methods", ["None"], ["", "def", "get_dataset_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "root_path", "/", "self", ".", "name", "/", "self", ".", "dataset_name", "\n", "# endregion", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.extract_tar": [[40, 55], ["tarfile.open", "tarfile.open.extract", "DatasetSchema.extract_tar", "item.name.find", "item.name.find", "item.name.rfind"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RemoteDataset.extract", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.extract_tar"], ["def", "extract_tar", "(", "tar_path", ",", "extract_path", "=", "'.'", ")", ":", "\n", "    ", "\"\"\"This function extracts the tar file.\n\n        Most of the knowledge graph datasets are downloaded in a compressed\n        tar format. This function is used to extract them\n\n        Args:\n            tar_path (str): Location of the tar folder.\n            extract_path (str): Path where the files will be decompressed.\n    \"\"\"", "\n", "tar", "=", "tarfile", ".", "open", "(", "tar_path", ",", "'r'", ")", "\n", "for", "item", "in", "tar", ":", "\n", "        ", "tar", ".", "extract", "(", "item", ",", "extract_path", ")", "\n", "if", "item", ".", "name", ".", "find", "(", "\".tgz\"", ")", "!=", "-", "1", "or", "item", ".", "name", ".", "find", "(", "\".tar\"", ")", "!=", "-", "1", ":", "\n", "            ", "extract_tar", "(", "item", ".", "name", ",", "\"./\"", "+", "item", ".", "name", "[", ":", "item", ".", "name", ".", "rfind", "(", "'/'", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.extract_zip": [[57, 69], ["zipfile.ZipFile", "zip_ref.extractall"], "function", ["None"], ["", "", "", "def", "extract_zip", "(", "zip_path", ",", "extract_path", "=", "'.'", ")", ":", "\n", "    ", "\"\"\"This function extracts the zip file.\n\n        Most of the knowledge graph datasets are downloaded in a compressed\n        zip format. This function is used to extract them\n\n        Args:\n            zip_path (str): Location of the zip folder.\n            extract_path (str): Path where the files will be decompressed.\n    \"\"\"", "\n", "with", "zipfile", ".", "ZipFile", "(", "zip_path", ",", "'r'", ")", "as", "zip_ref", ":", "\n", "        ", "zip_ref", ".", "extractall", "(", "extract_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.fetch_from_remote": [[117, 121], ["DatasetSchema.RemoteDataset", "DatasetSchema.RemoteDataset.download", "DatasetSchema.RemoteDataset.extract"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RemoteDataset.download", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.RemoteDataset.extract"], ["", "", "", "def", "fetch_from_remote", "(", "name", ":", "str", ",", "url", ":", "str", ",", "root_path", ":", "Path", ")", ":", "\n", "    ", "remote_data", "=", "RemoteDataset", "(", "name", ",", "url", ",", "root_path", ")", "\n", "remote_data", ".", "download", "(", ")", "\n", "remote_data", ".", "extract", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DatasetSchema.get_dataset": [[434, 461], ["DatasetSchema.FreebaseFB15k", "dataset_name.lower", "dataset_name.lower", "DatasetSchema.DeepLearning50a", "dataset_name.lower", "dataset_name.lower", "DatasetSchema.WordNet18", "dataset_name.lower", "dataset_name.lower", "DatasetSchema.WordNet18_RR", "dataset_name.lower", "dataset_name.lower", "DatasetSchema.YAGO3_10", "dataset_name.lower", "dataset_name.lower", "DatasetSchema.FreebaseFB15k_237", "dataset_name.lower", "dataset_name.lower", "DatasetSchema.Kinship", "dataset_name.lower", "dataset_name.lower", "dataset_name.lower", "DatasetSchema.Nations", "dataset_name.lower", "DatasetSchema.UMLS", "dataset_name.lower", "DatasetSchema.NELL_995", "dataset_name.lower", "DatasetSchema.DBP15k", "dataset_name.lower", "DatasetSchema.DBP100k", "ValueError"], "function", ["None"], ["", "", "def", "get_dataset", "(", "dataset_name", ":", "str", ")", ":", "\n", "    ", "if", "dataset_name", ".", "lower", "(", ")", "==", "'freebase15k'", "or", "dataset_name", ".", "lower", "(", ")", "==", "'fb15k'", ":", "\n", "        ", "return", "FreebaseFB15k", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'deeplearning50a'", "or", "dataset_name", ".", "lower", "(", ")", "==", "'dl50a'", ":", "\n", "        ", "return", "DeepLearning50a", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'wordnet18'", "or", "dataset_name", ".", "lower", "(", ")", "==", "'wn18'", ":", "\n", "        ", "return", "WordNet18", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'wordnet18_rr'", "or", "dataset_name", ".", "lower", "(", ")", "==", "'wn18_rr'", ":", "\n", "        ", "return", "WordNet18_RR", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'yago3_10'", "or", "dataset_name", ".", "lower", "(", ")", "==", "'yago'", ":", "\n", "        ", "return", "YAGO3_10", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'freebase15k_237'", "or", "dataset_name", ".", "lower", "(", ")", "==", "'fb15k_237'", ":", "\n", "        ", "return", "FreebaseFB15k_237", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'kinship'", "or", "dataset_name", ".", "lower", "(", ")", "==", "'ks'", ":", "\n", "        ", "return", "Kinship", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'nations'", ":", "\n", "        ", "return", "Nations", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'umls'", ":", "\n", "        ", "return", "UMLS", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'nell_995'", ":", "\n", "        ", "return", "NELL_995", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'dbp15k'", ":", "\n", "        ", "return", "DBP15k", "(", ")", "\n", "", "elif", "dataset_name", ".", "lower", "(", ")", "==", "'dbp100k'", ":", "\n", "        ", "return", "DBP100k", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown dataset: %s\"", "%", "dataset_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerState.TrainerState.__post_init__": [[65, 68], ["None"], "methods", ["None"], ["def", "__post_init__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "log_history", "is", "None", ":", "\n", "            ", "self", ".", "log_history", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerState.TrainerState.save_to_json": [[69, 74], ["json.dumps", "open", "f.write", "dataclasses.asdict"], "methods", ["None"], ["", "", "def", "save_to_json", "(", "self", ",", "json_path", ":", "str", ")", ":", "\n", "        ", "\"\"\" Save the content of this instance in JSON format inside :obj:`json_path`.\"\"\"", "\n", "json_string", "=", "json", ".", "dumps", "(", "dataclasses", ".", "asdict", "(", "self", ")", ",", "indent", "=", "2", ",", "sort_keys", "=", "True", ")", "+", "\"\\n\"", "\n", "with", "open", "(", "json_path", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "json_string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerState.TrainerState.load_from_json": [[75, 81], ["cls", "open", "f.read", "json.loads"], "methods", ["None"], ["", "", "@", "classmethod", "\n", "def", "load_from_json", "(", "cls", ",", "json_path", ":", "str", ")", ":", "\n", "        ", "\"\"\" Create an instance from the content of :obj:`json_path`.\"\"\"", "\n", "with", "open", "(", "json_path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "f", ":", "\n", "            ", "text", "=", "f", ".", "read", "(", ")", "\n", "", "return", "cls", "(", "**", "json", ".", "loads", "(", "text", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.YamlConfigLoader.__init__": [[51, 68], ["default_search_space_dir.glob", "default_hyperparam_dir.glob", "Config.load_search_space_yaml", "Config.load_hyperparameter_yaml", "hasattr", "Config.load_hyperparameter_yaml", "hasattr", "Config.load_search_space_yaml", "pathlib.Path().resolve", "pathlib.Path().resolve", "pathlib.Path", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.load_search_space_yaml", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.load_hyperparameter_yaml", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.load_hyperparameter_yaml", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.load_search_space_yaml"], ["def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "self", ".", "hyperparams", "=", "{", "}", "\n", "self", ".", "search_space", "=", "{", "}", "\n", "\n", "# load hyperparameters from options (file, dir or with pkg.)", "\n", "default_search_space_dir", "=", "Path", "(", "__file__", ")", ".", "resolve", "(", ")", ".", "parent", "/", "\"searchspaces\"", "\n", "for", "config_file", "in", "default_search_space_dir", ".", "glob", "(", "'**/*.yaml'", ")", ":", "\n", "            ", "self", ".", "search_space", "=", "load_search_space_yaml", "(", "config_file", ",", "self", ".", "search_space", ")", "\n", "", "default_hyperparam_dir", "=", "Path", "(", "__file__", ")", ".", "resolve", "(", ")", ".", "parent", "/", "\"hyperparams\"", "\n", "for", "config_file", "in", "default_hyperparam_dir", ".", "glob", "(", "'**/*.yaml'", ")", ":", "\n", "            ", "self", ".", "hyperparams", "=", "load_hyperparameter_yaml", "(", "config_file", ",", "self", ".", "hyperparams", ")", "\n", "\n", "# load search spaces from options (file, dir or with pkg.)", "\n", "", "if", "hasattr", "(", "args", ",", "\"hp_abs_file\"", ")", "and", "args", ".", "hp_abs_file", "is", "not", "None", ":", "\n", "            ", "self", ".", "hyperparams", "=", "load_hyperparameter_yaml", "(", "args", ".", "hp_abs_file", ",", "self", ".", "hyperparams", ")", "\n", "", "if", "hasattr", "(", "args", ",", "\"ss_abs_file\"", ")", "and", "args", ".", "ss_abs_file", "is", "not", "None", ":", "\n", "            ", "self", ".", "search_space", "=", "load_search_space_yaml", "(", "args", ".", "ss_abs_file", ",", "self", ".", "search_space", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.YamlConfigLoader.load_hyperparameter": [[69, 78], ["dataset_name.lower", "algorithm.lower", "Exception"], "methods", ["None"], ["", "", "def", "load_hyperparameter", "(", "self", ",", "dataset_name", ",", "algorithm", ")", ":", "\n", "        ", "d_name", "=", "dataset_name", ".", "lower", "(", ")", "\n", "a_name", "=", "algorithm", ".", "lower", "(", ")", "\n", "\n", "if", "d_name", "in", "self", ".", "hyperparams", "and", "a_name", "in", "self", ".", "hyperparams", "[", "d_name", "]", ":", "\n", "            ", "params", "=", "self", ".", "hyperparams", "[", "d_name", "]", "[", "a_name", "]", "\n", "return", "params", "\n", "\n", "", "raise", "Exception", "(", "\"This experimental setting for (%s, %s) has not been configured\"", "%", "(", "dataset_name", ",", "algorithm", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.YamlConfigLoader.load_search_space": [[79, 83], ["ValueError"], "methods", ["None"], ["", "def", "load_search_space", "(", "self", ",", "algorithm", ")", ":", "\n", "        ", "if", "algorithm", "in", "self", ".", "search_space", ":", "\n", "            ", "return", "self", ".", "search_space", "[", "algorithm", "]", "\n", "", "raise", "ValueError", "(", "\"Hyperparameter search space is not configured for %s\"", "%", "algorithm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.Importer.__init__": [[105, 138], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "model_path", "=", "\"pykg2vec.models\"", "\n", "self", ".", "modelMap", "=", "{", "\"analogy\"", ":", "\"pointwise.ANALOGY\"", ",", "\n", "\"complex\"", ":", "\"pointwise.Complex\"", ",", "\n", "\"complexn3\"", ":", "\"pointwise.ComplexN3\"", ",", "\n", "\"conve\"", ":", "\"projection.ConvE\"", ",", "\n", "\"convkb\"", ":", "\"pointwise.ConvKB\"", ",", "\n", "\"cp\"", ":", "\"pointwise.CP\"", ",", "\n", "\"distmult\"", ":", "\"pointwise.DistMult\"", ",", "\n", "\"hole\"", ":", "\"pairwise.HoLE\"", ",", "\n", "\"hyper\"", ":", "\"projection.HypER\"", ",", "\n", "\"interacte\"", ":", "\"projection.InteractE\"", ",", "\n", "\"kg2e\"", ":", "\"pairwise.KG2E\"", ",", "\n", "\"murp\"", ":", "\"pointwise.MuRP\"", ",", "\n", "\"ntn\"", ":", "\"pairwise.NTN\"", ",", "\n", "\"octonione\"", ":", "\"pointwise.OctonionE\"", ",", "\n", "\"proje_pointwise\"", ":", "\"projection.ProjE_pointwise\"", ",", "\n", "\"quate\"", ":", "\"pointwise.QuatE\"", ",", "\n", "\"rescal\"", ":", "\"pairwise.Rescal\"", ",", "\n", "\"rotate\"", ":", "\"pairwise.RotatE\"", ",", "\n", "\"simple\"", ":", "\"pointwise.SimplE\"", ",", "\n", "\"simple_ignr\"", ":", "\"pointwise.SimplE_ignr\"", ",", "\n", "\"slm\"", ":", "\"pairwise.SLM\"", ",", "\n", "\"sme\"", ":", "\"pairwise.SME\"", ",", "\n", "\"sme_bl\"", ":", "\"pairwise.SME_BL\"", ",", "\n", "\"transd\"", ":", "\"pairwise.TransD\"", ",", "\n", "\"transe\"", ":", "\"pairwise.TransE\"", ",", "\n", "\"transh\"", ":", "\"pairwise.TransH\"", ",", "\n", "\"transm\"", ":", "\"pairwise.TransM\"", ",", "\n", "\"transr\"", ":", "\"pairwise.TransR\"", ",", "\n", "\"tucker\"", ":", "\"projection.TuckER\"", ",", "\n", "}", "\n", "self", ".", "config_path", "=", "\"pykg2vec.config\"", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.Importer.import_model_config": [[139, 170], ["getattr", "importlib.import_module", "getattr", "Config.Importer.modelMap[].split", "ValueError", "importlib.import_module", "ValueError", "map", "map", "Config.Importer.modelMap.values", "Config.Importer.modelMap.values", "str.split", "str().split", "str"], "methods", ["None"], ["", "def", "import_model_config", "(", "self", ",", "name", ")", ":", "\n", "        ", "\"\"\"This function imports models and configuration.\n\n        This function is used to dynamically import the modules within pykg2vec.\n\n        Args:\n          name (str): The input to the module is either name of the model or the configuration file. The strings are converted to lowercase to makesure the user inputs can easily be matched to the names of the models and the configuration class.\n\n        Returns:\n          object: Configuration and model object after it is successfully loaded.\n\n          `config_obj` (object): Returns the configuration class object of the corresponding algorithm.\n          `model_obj` (object): Returns the model class object of the corresponding algorithm.\n\n        Raises:\n          ModuleNotFoundError: It raises a module not found error if the configuration or the model cannot be found.\n        \"\"\"", "\n", "config_obj", "=", "getattr", "(", "importlib", ".", "import_module", "(", "self", ".", "config_path", ")", ",", "\"Config\"", ")", "\n", "model_obj", "=", "None", "\n", "try", ":", "\n", "            ", "if", "name", "in", "self", ".", "modelMap", ":", "\n", "                ", "splited_path", "=", "self", ".", "modelMap", "[", "name", "]", ".", "split", "(", "'.'", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"%s model has not been implemented. please select from: %s\"", "%", "(", "\n", "name", ",", "' '", ".", "join", "(", "map", "(", "lambda", "x", ":", "str", "(", "x", ")", ".", "split", "(", "\".\"", ")", "[", "1", "]", ",", "self", ".", "modelMap", ".", "values", "(", ")", ")", ")", ")", ")", "\n", "", "model_obj", "=", "getattr", "(", "importlib", ".", "import_module", "(", "self", ".", "model_path", "+", "\".%s\"", "%", "splited_path", "[", "0", "]", ")", ",", "splited_path", "[", "1", "]", ")", "\n", "", "except", "ModuleNotFoundError", ":", "\n", "            ", "raise", "ValueError", "(", "\"%s model has not been implemented. please select from: %s\"", "%", "(", "\n", "name", ",", "' '", ".", "join", "(", "map", "(", "str", ".", "split", "(", "\".\"", ")", "[", "1", "]", ",", "self", ".", "modelMap", ".", "values", "(", ")", ")", ")", ")", ")", "\n", "\n", "", "return", "config_obj", ",", "model_obj", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.load_hyperparameter_yaml": [[10, 28], ["os.path.isfile", "FileNotFoundError", "str().endswith", "str().endswith", "ValueError", "open", "str", "str", "os.path.abspath", "yaml.safe_load", "config[].lower", "Exception"], "function", ["None"], ["def", "load_hyperparameter_yaml", "(", "config_file", ",", "hyperparams", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isfile", "(", "config_file", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "\"Cannot find configuration file %s\"", "%", "config_file", ")", "\n", "", "if", "str", "(", "config_file", ")", ".", "endswith", "(", "\"yaml\"", ")", "or", "str", "(", "config_file", ")", ".", "endswith", "(", "\"yml\"", ")", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "abspath", "(", "config_file", ")", ",", "\"r\"", ")", "as", "file", ":", "\n", "            ", "try", ":", "\n", "                ", "config", "=", "yaml", ".", "safe_load", "(", "file", ")", "\n", "algorithm", "=", "config", "[", "\"model_name\"", "]", ".", "lower", "(", ")", "\n", "for", "dataset", "in", "config", "[", "\"datasets\"", "]", ":", "\n", "                    ", "if", "dataset", "[", "\"dataset\"", "]", "in", "hyperparams", ":", "\n", "                        ", "hyperparams", "[", "dataset", "[", "\"dataset\"", "]", "]", "[", "algorithm", "]", "=", "dataset", "[", "\"parameters\"", "]", "\n", "", "else", ":", "\n", "                        ", "hyperparams", "=", "{", "**", "hyperparams", ",", "**", "{", "dataset", "[", "\"dataset\"", "]", ":", "{", "algorithm", ":", "dataset", "[", "\"parameters\"", "]", "}", "}", "}", "\n", "", "", "", "except", "yaml", ".", "YAMLError", ":", "\n", "                ", "raise", "Exception", "(", "\"Cannot load configuration: %s\"", "%", "config_file", ")", "\n", "", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Configuration file must have .yaml or .yml extension: %s\"", "%", "config_file", ")", "\n", "", "return", "hyperparams", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Config.load_search_space_yaml": [[30, 46], ["os.path.isfile", "FileNotFoundError", "str().endswith", "str().endswith", "ValueError", "open", "str", "str", "os.path.abspath", "yaml.safe_load", "config[].lower", "Exception", "toolbox.AutoML.config_tuning_space"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.AutoML.config_tuning_space"], ["", "def", "load_search_space_yaml", "(", "config_file", ",", "search_space", ")", ":", "\n", "    ", "\"\"\" loading search space configuration from yaml file\"\"\"", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "config_file", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "\"Cannot find configuration file %s\"", "%", "config_file", ")", "\n", "", "if", "str", "(", "config_file", ")", ".", "endswith", "(", "\"yaml\"", ")", "or", "str", "(", "config_file", ")", ".", "endswith", "(", "\"yml\"", ")", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "abspath", "(", "config_file", ")", ",", "\"r\"", ")", "as", "file", ":", "\n", "            ", "try", ":", "\n", "                ", "config", "=", "yaml", ".", "safe_load", "(", "file", ")", "\n", "algorithm", "=", "config", "[", "\"model_name\"", "]", ".", "lower", "(", ")", "\n", "search_space", "=", "{", "**", "search_space", ",", "\n", "**", "{", "algorithm", ":", "config_tuning_space", "(", "config", "[", "\"search_space\"", "]", ")", "}", "}", "\n", "", "except", "yaml", ".", "YAMLError", ":", "\n", "                ", "raise", "Exception", "(", "\"Cannot load configuration: %s\"", "%", "config_file", ")", "\n", "", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Configuration file must have .yaml or .yml extension: %s\"", "%", "config_file", ")", "\n", "", "return", "search_space", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Store.load_checkpoint": [[17, 34], ["torch.load", "model.load_state_dict", "optim.load_state_dict"], "function", ["None"], ["def", "load_checkpoint", "(", "model", ":", "nn", ".", "Module", ",", "\n", "optim", ":", "optimizer", ".", "Optimizer", ",", "\n", "checkpoint_path", "=", "\"./result/fr_en/checkpoint.tar\"", ")", "->", "Tuple", "[", "int", ",", "int", ",", "float", "]", ":", "\n", "    ", "\"\"\"Loads training checkpoint.\n\n    :param checkpoint_path: path to checkpoint\n    :param model: model to update state\n    :param optim: optimizer to  update state\n    :return: tuple of starting epoch id, starting step id, best checkpoint score\n    \"\"\"", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "_MODEL_STATE_DICT", "]", ")", "\n", "optim", ".", "load_state_dict", "(", "checkpoint", "[", "_OPTIMIZER_STATE_DICT", "]", ")", "\n", "start_epoch_id", "=", "checkpoint", "[", "_EPOCH", "]", "+", "1", "\n", "step", "=", "checkpoint", "[", "_STEP", "]", "+", "1", "\n", "best_score", "=", "checkpoint", "[", "_BEST_SCORE", "]", "\n", "return", "start_epoch_id", ",", "step", ",", "best_score", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Store.save_checkpoint": [[36, 49], ["torch.save", "model.state_dict", "optim.state_dict"], "function", ["None"], ["", "def", "save_checkpoint", "(", "model", ":", "nn", ".", "Module", ",", "\n", "optim", ":", "optimizer", ".", "Optimizer", ",", "\n", "epoch_id", ":", "int", ",", "\n", "step", ":", "int", ",", "\n", "best_score", ":", "float", ",", "\n", "save_path", "=", "\"./result/fr_en/checkpoint.tar\"", ")", ":", "\n", "    ", "torch", ".", "save", "(", "{", "\n", "_MODEL_STATE_DICT", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "_OPTIMIZER_STATE_DICT", ":", "optim", ".", "state_dict", "(", ")", ",", "\n", "_EPOCH", ":", "epoch_id", ",", "\n", "_STEP", ":", "step", ",", "\n", "_BEST_SCORE", ":", "best_score", ",", "\n", "}", ",", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Store.save_entity_embedding_list": [[51, 57], ["open", "entity_embedding.data.detach().cpu().numpy", "range", "len", "f.write", "f.write", "entity_embedding.data.detach().cpu", "entity_embedding.data.detach", "str", "d[].tolist"], "function", ["None"], ["", "def", "save_entity_embedding_list", "(", "entity_embedding", ",", "embedding_path", "=", "\"./result/fr_en/ATentsembed.txt\"", ")", ":", "\n", "    ", "with", "open", "(", "embedding_path", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "d", "=", "entity_embedding", ".", "data", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "d", ")", ")", ":", "\n", "            ", "f", ".", "write", "(", "\" \"", ".", "join", "(", "[", "str", "(", "j", ")", "for", "j", "in", "d", "[", "i", "]", ".", "tolist", "(", ")", "]", ")", ")", "\n", "f", ".", "write", "(", "\"\\n\"", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgsParser.KGEArgParser.__init__": [[48, 62], ["argparse.ArgumentParser.__init__", "dataclasses.is_dataclass", "KGArgsParser.KGEArgParser._add_dataclass_arguments"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgsParser.KGEArgParser._add_dataclass_arguments"], ["def", "__init__", "(", "self", ",", "dataclass_types", ":", "Union", "[", "DataClassType", ",", "Iterable", "[", "DataClassType", "]", "]", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            dataclass_types:\n                Dataclass type, or list of dataclass types for which we will \"fill\" instances with the parsed args.\n            kwargs:\n                (Optional) Passed to `argparse.ArgumentParser()` in the regular way.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "if", "dataclasses", ".", "is_dataclass", "(", "dataclass_types", ")", ":", "\n", "            ", "dataclass_types", "=", "[", "dataclass_types", "]", "\n", "", "self", ".", "dataclass_types", "=", "dataclass_types", "\n", "for", "dtype", "in", "self", ".", "dataclass_types", ":", "\n", "            ", "self", ".", "_add_dataclass_arguments", "(", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgsParser.KGEArgParser._add_dataclass_arguments": [[63, 135], ["dataclasses.fields", "field.metadata.copy", "isinstance", "str", "KGArgsParser.KGEArgParser.add_argument", "ImportError", "isinstance", "issubclass", "type", "KGArgsParser.KGEArgParser.add_argument", "hasattr", "all", "re.search", "field.default_factory", "str", "field.default_factory"], "methods", ["None"], ["", "", "def", "_add_dataclass_arguments", "(", "self", ",", "dtype", ":", "DataClassType", ")", ":", "\n", "        ", "for", "field", "in", "dataclasses", ".", "fields", "(", "dtype", ")", ":", "\n", "            ", "if", "not", "field", ".", "init", ":", "\n", "                ", "continue", "\n", "", "field_name", "=", "f\"--{field.name}\"", "\n", "kwargs", "=", "field", ".", "metadata", ".", "copy", "(", ")", "\n", "# field.metadata is not used at all by Data Classes,", "\n", "# it is provided as a third-party extension mechanism.", "\n", "if", "isinstance", "(", "field", ".", "type", ",", "str", ")", ":", "\n", "                ", "raise", "ImportError", "(", "\n", "\"This implementation is not compatible with Postponed Evaluation of Annotations (PEP 563),\"", "\n", "\"which can be opted in from Python 3.7 with `from __future__ import annotations`.\"", "\n", "\"We will add compatibility when Python 3.9 is released.\"", "\n", ")", "\n", "", "typestring", "=", "str", "(", "field", ".", "type", ")", "\n", "for", "prim_type", "in", "(", "int", ",", "float", ",", "str", ")", ":", "\n", "                ", "for", "collection", "in", "(", "List", ",", ")", ":", "\n", "                    ", "if", "(", "\n", "typestring", "==", "f\"typing.Union[{collection[prim_type]}, NoneType]\"", "\n", "or", "typestring", "==", "f\"typing.Optional[{collection[prim_type]}]\"", "\n", ")", ":", "\n", "                        ", "field", ".", "type", "=", "collection", "[", "prim_type", "]", "\n", "", "", "if", "(", "\n", "typestring", "==", "f\"typing.Union[{prim_type.__name__}, NoneType]\"", "\n", "or", "typestring", "==", "f\"typing.Optional[{prim_type.__name__}]\"", "\n", ")", ":", "\n", "                    ", "field", ".", "type", "=", "prim_type", "\n", "\n", "", "", "if", "isinstance", "(", "field", ".", "type", ",", "type", ")", "and", "issubclass", "(", "field", ".", "type", ",", "Enum", ")", ":", "\n", "                ", "kwargs", "[", "\"choices\"", "]", "=", "[", "x", ".", "value", "for", "x", "in", "field", ".", "type", "]", "\n", "kwargs", "[", "\"type\"", "]", "=", "type", "(", "kwargs", "[", "\"choices\"", "]", "[", "0", "]", ")", "\n", "if", "field", ".", "default", "is", "not", "dataclasses", ".", "MISSING", ":", "\n", "                    ", "kwargs", "[", "\"default\"", "]", "=", "field", ".", "default", "\n", "", "else", ":", "\n", "                    ", "kwargs", "[", "\"required\"", "]", "=", "True", "\n", "", "", "elif", "field", ".", "type", "is", "bool", "or", "field", ".", "type", "==", "Optional", "[", "bool", "]", ":", "\n", "                ", "if", "field", ".", "default", "is", "True", ":", "\n", "                    ", "self", ".", "add_argument", "(", "f\"--no_{field.name}\"", ",", "action", "=", "\"store_false\"", ",", "dest", "=", "field", ".", "name", ",", "**", "kwargs", ")", "\n", "\n", "# Hack because type=bool in argparse does not behave as we want.", "\n", "", "kwargs", "[", "\"type\"", "]", "=", "string_to_bool", "\n", "if", "field", ".", "type", "is", "bool", "or", "(", "field", ".", "default", "is", "not", "None", "and", "field", ".", "default", "is", "not", "dataclasses", ".", "MISSING", ")", ":", "\n", "# Default value is True if we have no default when of type bool.", "\n", "                    ", "default", "=", "True", "if", "field", ".", "default", "is", "dataclasses", ".", "MISSING", "else", "field", ".", "default", "\n", "# This is the value that will get picked if we don't include --field_name in any way", "\n", "kwargs", "[", "\"default\"", "]", "=", "default", "\n", "# This tells argparse we accept 0 or 1 value after --field_name", "\n", "kwargs", "[", "\"nargs\"", "]", "=", "\"?\"", "\n", "# This is the value that will get picked if we do --field_name (without value)", "\n", "kwargs", "[", "\"const\"", "]", "=", "True", "\n", "", "", "elif", "(", "\n", "hasattr", "(", "field", ".", "type", ",", "\"__origin__\"", ")", "and", "re", ".", "search", "(", "r\"^typing\\.List\\[(.*)\\]$\"", ",", "\n", "str", "(", "field", ".", "type", ")", ")", "is", "not", "None", "\n", ")", ":", "\n", "                ", "kwargs", "[", "\"nargs\"", "]", "=", "\"+\"", "\n", "kwargs", "[", "\"type\"", "]", "=", "field", ".", "type", ".", "__args__", "[", "0", "]", "\n", "assert", "all", "(", "\n", "x", "==", "kwargs", "[", "\"type\"", "]", "for", "x", "in", "field", ".", "type", ".", "__args__", "\n", ")", ",", "f\"{field.name} cannot be a List of mixed types\"", "\n", "if", "field", ".", "default_factory", "is", "not", "dataclasses", ".", "MISSING", ":", "\n", "                    ", "kwargs", "[", "\"default\"", "]", "=", "field", ".", "default_factory", "(", ")", "\n", "", "elif", "field", ".", "default", "is", "dataclasses", ".", "MISSING", ":", "\n", "                    ", "kwargs", "[", "\"required\"", "]", "=", "True", "\n", "", "", "else", ":", "\n", "                ", "kwargs", "[", "\"type\"", "]", "=", "field", ".", "type", "\n", "if", "field", ".", "default", "is", "not", "dataclasses", ".", "MISSING", ":", "\n", "                    ", "kwargs", "[", "\"default\"", "]", "=", "field", ".", "default", "\n", "", "elif", "field", ".", "default_factory", "is", "not", "dataclasses", ".", "MISSING", ":", "\n", "                    ", "kwargs", "[", "\"default\"", "]", "=", "field", ".", "default_factory", "(", ")", "\n", "", "else", ":", "\n", "                    ", "kwargs", "[", "\"required\"", "]", "=", "True", "\n", "", "", "self", ".", "add_argument", "(", "field_name", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgsParser.KGEArgParser.parse_args_into_dataclasses": [[136, 194], ["KGArgsParser.KGEArgParser.parse_known_args", "pathlib.Path().with_suffix.exists", "dtype", "outputs.append", "len", "outputs.append", "len", "pathlib.Path", "pathlib.Path().with_suffix", "pathlib.Path().with_suffix.read_text().split", "delattr", "ValueError", "dataclasses.fields", "vars().items", "pathlib.Path", "pathlib.Path().with_suffix.read_text", "vars"], "methods", ["None"], ["", "", "def", "parse_args_into_dataclasses", "(", "\n", "self", ",", "args", "=", "None", ",", "return_remaining_strings", "=", "False", ",", "look_for_args_file", "=", "True", ",", "args_filename", "=", "None", "\n", ")", "->", "Tuple", "[", "DataClass", ",", "...", "]", ":", "\n", "        ", "\"\"\"\n        Parse command-line args into instances of the specified dataclass types.\n\n        This relies on argparse's `ArgumentParser.parse_known_args`. See the doc at:\n        docs.python.org/3.7/library/argparse.html#argparse.ArgumentParser.parse_args\n\n        Args:\n            args:\n                List of strings to parse. The default is taken from sys.argv. (same as argparse.ArgumentParser)\n            return_remaining_strings:\n                If true, also return a list of remaining argument strings.\n            look_for_args_file:\n                If true, will look for a \".args\" file with the same base name as the entry point script for this\n                process, and will append its potential content to the command line args.\n            args_filename:\n                If not None, will uses this file instead of the \".args\" file specified in the previous argument.\n\n        Returns:\n            Tuple consisting of:\n\n                - the dataclass instances in the same order as they were passed to the initializer.abspath\n                - if applicable, an additional namespace for more (non-dataclass backed) arguments added to the parser\n                  after initialization.\n                - The potential list of remaining argument strings. (same as argparse.ArgumentParser.parse_known_args)\n        \"\"\"", "\n", "if", "args_filename", "or", "(", "look_for_args_file", "and", "len", "(", "sys", ".", "argv", ")", ")", ":", "\n", "            ", "if", "args_filename", ":", "\n", "                ", "args_file", "=", "Path", "(", "args_filename", ")", "\n", "", "else", ":", "\n", "                ", "args_file", "=", "Path", "(", "sys", ".", "argv", "[", "0", "]", ")", ".", "with_suffix", "(", "\".args\"", ")", "\n", "\n", "", "if", "args_file", ".", "exists", "(", ")", ":", "\n", "                ", "fargs", "=", "args_file", ".", "read_text", "(", ")", ".", "split", "(", ")", "\n", "args", "=", "fargs", "+", "args", "if", "args", "is", "not", "None", "else", "fargs", "+", "sys", ".", "argv", "[", "1", ":", "]", "\n", "# in case of duplicate arguments the first one has precedence", "\n", "# so we append rather than prepend.", "\n", "", "", "namespace", ",", "remaining_args", "=", "self", ".", "parse_known_args", "(", "args", "=", "args", ")", "\n", "outputs", "=", "[", "]", "\n", "for", "dtype", "in", "self", ".", "dataclass_types", ":", "\n", "            ", "keys", "=", "{", "f", ".", "name", "for", "f", "in", "dataclasses", ".", "fields", "(", "dtype", ")", "if", "f", ".", "init", "}", "\n", "inputs", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "vars", "(", "namespace", ")", ".", "items", "(", ")", "if", "k", "in", "keys", "}", "\n", "for", "k", "in", "keys", ":", "\n", "                ", "delattr", "(", "namespace", ",", "k", ")", "\n", "", "obj", "=", "dtype", "(", "**", "inputs", ")", "\n", "outputs", ".", "append", "(", "obj", ")", "\n", "", "if", "len", "(", "namespace", ".", "__dict__", ")", ">", "0", ":", "\n", "# additional namespace.", "\n", "            ", "outputs", ".", "append", "(", "namespace", ")", "\n", "", "if", "return_remaining_strings", ":", "\n", "            ", "return", "(", "*", "outputs", ",", "remaining_args", ")", "\n", "", "else", ":", "\n", "            ", "if", "remaining_args", ":", "\n", "                ", "raise", "ValueError", "(", "f\"Some specified arguments are not used by the KGEArgParser: {remaining_args}\"", ")", "\n", "\n", "", "return", "(", "*", "outputs", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgsParser.KGEArgParser.parse_json_file": [[195, 208], ["json.loads", "pathlib.Path().read_text", "dtype", "outputs.append", "pathlib.Path", "dataclasses.fields", "json.loads.items"], "methods", ["None"], ["", "", "def", "parse_json_file", "(", "self", ",", "json_file", ":", "str", ")", "->", "Tuple", "[", "DataClass", ",", "...", "]", ":", "\n", "        ", "\"\"\"\n        Alternative helper method that does not use `argparse` at all, instead loading a json file and populating the\n        dataclass types.\n        \"\"\"", "\n", "data", "=", "json", ".", "loads", "(", "Path", "(", "json_file", ")", ".", "read_text", "(", ")", ")", "\n", "outputs", "=", "[", "]", "\n", "for", "dtype", "in", "self", ".", "dataclass_types", ":", "\n", "            ", "keys", "=", "{", "f", ".", "name", "for", "f", "in", "dataclasses", ".", "fields", "(", "dtype", ")", "if", "f", ".", "init", "}", "\n", "inputs", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "data", ".", "items", "(", ")", "if", "k", "in", "keys", "}", "\n", "obj", "=", "dtype", "(", "**", "inputs", ")", "\n", "outputs", ".", "append", "(", "obj", ")", "\n", "", "return", "(", "*", "outputs", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgsParser.KGEArgParser.parse_dict": [[209, 221], ["dtype", "outputs.append", "dataclasses.fields", "args.items"], "methods", ["None"], ["", "def", "parse_dict", "(", "self", ",", "args", ":", "dict", ")", "->", "Tuple", "[", "DataClass", ",", "...", "]", ":", "\n", "        ", "\"\"\"\n        Alternative helper method that does not use `argparse` at all, instead uses a dict and populating the dataclass\n        types.\n        \"\"\"", "\n", "outputs", "=", "[", "]", "\n", "for", "dtype", "in", "self", ".", "dataclass_types", ":", "\n", "            ", "keys", "=", "{", "f", ".", "name", "for", "f", "in", "dataclasses", ".", "fields", "(", "dtype", ")", "if", "f", ".", "init", "}", "\n", "inputs", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "args", ".", "items", "(", ")", "if", "k", "in", "keys", "}", "\n", "obj", "=", "dtype", "(", "**", "inputs", ")", "\n", "outputs", ".", "append", "(", "obj", ")", "\n", "", "return", "(", "*", "outputs", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgsParser.string_to_bool": [[15, 25], ["isinstance", "v.lower", "v.lower", "argparse.ArgumentTypeError"], "function", ["None"], ["def", "string_to_bool", "(", "v", ")", ":", "\n", "    ", "if", "isinstance", "(", "v", ",", "bool", ")", ":", "\n", "        ", "return", "v", "\n", "", "if", "v", ".", "lower", "(", ")", "in", "(", "\"yes\"", ",", "\"true\"", ",", "\"t\"", ",", "\"y\"", ",", "\"1\"", ")", ":", "\n", "        ", "return", "True", "\n", "", "elif", "v", ".", "lower", "(", ")", "in", "(", "\"no\"", ",", "\"false\"", ",", "\"f\"", ",", "\"n\"", ",", "\"0\"", ")", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "raise", "ArgumentTypeError", "(", "\n", "f\"Truthy value expected: got {v} but expected one of yes/no, true/false, t/f, y/n, 1/0 (case insensitive).\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerCheckpoint.load_trainer_checkpoint": [[13, 30], ["torch.load", "model.load_state_dict", "optim.load_state_dict", "toolbox.TrainerState.TrainerState"], "function", ["None"], ["def", "load_trainer_checkpoint", "(", "model", ":", "nn", ".", "Module", ",", "\n", "optim", ":", "optimizer", ".", "Optimizer", ",", "\n", "checkpoint_path", "=", "\"./result/fr_en/checkpoint.tar\"", ")", "->", "TrainerState", ":", "\n", "    ", "\"\"\"Loads training checkpoint.\n\n    :param checkpoint_path: path to checkpoint\n    :param model: model to update state\n    :param optim: optimizer to  update state\n    :return: tuple of starting epoch id, starting step id, best checkpoint score\n    \"\"\"", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_path", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "_MODEL_STATE_DICT", "]", ")", "\n", "optim", ".", "load_state_dict", "(", "checkpoint", "[", "_OPTIMIZER_STATE_DICT", "]", ")", "\n", "state_dict", "=", "checkpoint", "[", "_TRAINER_STATE_DICT", "]", "\n", "state", "=", "TrainerState", "(", "state_dict", ")", "\n", "state", ".", "init_step", "=", "state", ".", "current_step", "\n", "return", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerCheckpoint.save_trainer_checkpoint": [[32, 41], ["torch.save", "model.state_dict", "optim.state_dict", "dataclasses.asdict"], "function", ["None"], ["", "def", "save_trainer_checkpoint", "(", "model", ":", "nn", ".", "Module", ",", "\n", "optim", ":", "optimizer", ".", "Optimizer", ",", "\n", "state", ":", "TrainerState", ",", "\n", "save_path", "=", "\"./result/fr_en/checkpoint.tar\"", ")", ":", "\n", "    ", "torch", ".", "save", "(", "{", "\n", "_MODEL_STATE_DICT", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "_OPTIMIZER_STATE_DICT", ":", "optim", ".", "state_dict", "(", ")", ",", "\n", "_TRAINER_STATE_DICT", ":", "dataclasses", ".", "asdict", "(", "state", ")", ",", "\n", "}", ",", "save_path", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DatasetCachePath.__init__": [[178, 181], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cache_path", ":", "Path", ")", ":", "\n", "        ", "self", ".", "cache_path", "=", "cache_path", "\n", "self", ".", "cache_metadata_path", "=", "self", ".", "cache_path", "/", "'metadata.pkl'", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DatasetCachePath.is_meta_cache_exists": [[182, 185], ["DataSchema.DatasetCachePath.cache_metadata_path.exists"], "methods", ["None"], ["", "def", "is_meta_cache_exists", "(", "self", ")", ":", "\n", "        ", "\"\"\" Checks if the metadata of the knowledge graph if available\"\"\"", "\n", "return", "self", ".", "cache_metadata_path", ".", "exists", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletDatasetCachePath.__init__": [[188, 216], ["DataSchema.DatasetCachePath.__init__"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cache_path", ":", "Path", ")", ":", "\n", "        ", "DatasetCachePath", ".", "__init__", "(", "self", ",", "cache_path", ")", "\n", "self", ".", "cache_all_triples_path", "=", "self", ".", "cache_path", "/", "'triplets_all.pkl'", "\n", "self", ".", "cache_train_triples_path", "=", "self", ".", "cache_path", "/", "'triplets_train.pkl'", "\n", "self", ".", "cache_test_triples_path", "=", "self", ".", "cache_path", "/", "'triplets_test.pkl'", "\n", "self", ".", "cache_valid_triples_path", "=", "self", ".", "cache_path", "/", "'triplets_valid.pkl'", "\n", "\n", "self", ".", "cache_all_triples_ids_path", "=", "self", ".", "cache_path", "/", "'triplets_ids_all.pkl'", "\n", "self", ".", "cache_train_triples_ids_path", "=", "self", ".", "cache_path", "/", "'triplets_ids_train.pkl'", "\n", "self", ".", "cache_test_triples_ids_path", "=", "self", ".", "cache_path", "/", "'triplets_ids_test.pkl'", "\n", "self", ".", "cache_valid_triples_ids_path", "=", "self", ".", "cache_path", "/", "'triplets_ids_valid.pkl'", "\n", "\n", "self", ".", "cache_all_entities_path", "=", "self", ".", "cache_path", "/", "'entities.pkl'", "\n", "self", ".", "cache_all_relations_path", "=", "self", ".", "cache_path", "/", "'relations.pkl'", "\n", "\n", "self", ".", "cache_idx2entity_path", "=", "self", ".", "cache_path", "/", "'idx2entity.pkl'", "\n", "self", ".", "cache_idx2relation_path", "=", "self", ".", "cache_path", "/", "'idx2relation.pkl'", "\n", "self", ".", "cache_entity2idx_path", "=", "self", ".", "cache_path", "/", "'entity2idx.pkl'", "\n", "self", ".", "cache_relation2idx_path", "=", "self", ".", "cache_path", "/", "'relation2idx.pkl'", "\n", "\n", "self", ".", "cache_hr_t_path", "=", "self", ".", "cache_path", "/", "'hr_t.pkl'", "\n", "self", ".", "cache_tr_h_path", "=", "self", ".", "cache_path", "/", "'tr_h.pkl'", "\n", "self", ".", "cache_hr_t_train_path", "=", "self", ".", "cache_path", "/", "'hr_t_train.pkl'", "\n", "self", ".", "cache_tr_h_train_path", "=", "self", ".", "cache_path", "/", "'tr_h_train.pkl'", "\n", "self", ".", "cache_hr_t_valid_path", "=", "self", ".", "cache_path", "/", "'hr_t_valid.pkl'", "\n", "self", ".", "cache_tr_h_valid_path", "=", "self", ".", "cache_path", "/", "'tr_h_valid.pkl'", "\n", "\n", "self", ".", "cache_relation_property_path", "=", "self", ".", "cache_path", "/", "'relation_property.pkl'", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.__init__": [[219, 224], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dataset", ":", "BaseDatasetSchema", ",", "\n", "cache_path", ":", "DatasetCachePath", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "cache_path", "=", "cache_path", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.force_prepare_data": [[225, 229], ["DataSchema.BaseData.read_all_origin_data", "DataSchema.BaseData.transform_all_data", "DataSchema.BaseData.cache_all_data"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_all_origin_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_all_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.cache_all_data"], ["", "def", "force_prepare_data", "(", "self", ")", ":", "\n", "        ", "self", ".", "read_all_origin_data", "(", ")", "\n", "self", ".", "transform_all_data", "(", ")", "\n", "self", ".", "cache_all_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.preprocess_data_if_needed": [[230, 237], ["DataSchema.BaseData.is_cache_exists", "print", "DataSchema.BaseData.force_prepare_data", "print"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.is_cache_exists", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.force_prepare_data"], ["", "def", "preprocess_data_if_needed", "(", "self", ")", ":", "\n", "        ", "\"\"\"Function to prepare the dataset\"\"\"", "\n", "if", "self", ".", "is_cache_exists", "(", ")", ":", "\n", "            ", "print", "(", "\"using data cache\"", ")", "\n", "return", "\n", "", "print", "(", "\"preparing data\"", ")", "\n", "self", ".", "force_prepare_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.is_cache_exists": [[238, 241], ["DataSchema.BaseData.cache_path.is_meta_cache_exists"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DatasetCachePath.is_meta_cache_exists"], ["", "def", "is_cache_exists", "(", "self", ")", ":", "\n", "        ", "\"\"\"Function to check if the dataset is cached in the memory\"\"\"", "\n", "return", "self", ".", "cache_path", ".", "is_meta_cache_exists", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.read_all_origin_data": [[242, 244], ["None"], "methods", ["None"], ["", "def", "read_all_origin_data", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.transform_all_data": [[245, 247], ["None"], "methods", ["None"], ["", "def", "transform_all_data", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.cache_all_data": [[248, 250], ["DataSchema.cache_data", "DataSchema.BaseData.meta"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.meta"], ["", "def", "cache_all_data", "(", "self", ")", ":", "\n", "        ", "cache_data", "(", "self", ".", "meta", "(", ")", ",", "self", ".", "cache_path", ".", "cache_metadata_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.clear_cache": [[251, 253], ["None"], "methods", ["None"], ["", "def", "clear_cache", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.meta": [[254, 256], ["None"], "methods", ["None"], ["", "def", "meta", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.BaseData.dump": [[257, 267], ["None"], "methods", ["None"], ["", "def", "dump", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to dump statistic information of a dataset \"\"\"", "\n", "# dump key information", "\n", "dump", "=", "[", "\n", "\"\"", ",", "\n", "\"----------Metadata Info for Dataset:%s----------------\"", "%", "self", ".", "dataset", ".", "name", ",", "\n", "\"---------------------------------------------\"", ",", "\n", "\"\"", ",", "\n", "]", "\n", "return", "dump", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.__init__": [[303, 347], ["DataSchema.BaseData.__init__", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["def", "__init__", "(", "self", ",", "\n", "dataset", ":", "RelationalTripletDatasetSchema", ",", "\n", "cache_path", ":", "RelationalTripletDatasetCachePath", ")", ":", "\n", "        ", "BaseData", ".", "__init__", "(", "self", ",", "dataset", ",", "cache_path", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "cache_path", "=", "cache_path", "\n", "\n", "# KG data structure stored in triplet format", "\n", "self", ".", "all_triples", ":", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", "=", "[", "]", "\n", "self", ".", "train_triples", ":", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", "=", "[", "]", "\n", "self", ".", "test_triples", ":", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", "=", "[", "]", "\n", "self", ".", "valid_triples", ":", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", "=", "[", "]", "\n", "\n", "self", ".", "all_triples_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", "=", "[", "]", "\n", "self", ".", "train_triples_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", "=", "[", "]", "\n", "self", ".", "test_triples_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", "=", "[", "]", "\n", "self", ".", "valid_triples_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", "=", "[", "]", "\n", "\n", "self", ".", "all_relations", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "all_entities", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "\n", "self", ".", "entity2idx", ":", "Dict", "[", "str", ",", "int", "]", "=", "{", "}", "\n", "self", ".", "idx2entity", ":", "Dict", "[", "int", ",", "str", "]", "=", "{", "}", "\n", "self", ".", "relation2idx", ":", "Dict", "[", "str", ",", "int", "]", "=", "{", "}", "\n", "self", ".", "idx2relation", ":", "Dict", "[", "int", ",", "str", "]", "=", "{", "}", "\n", "\n", "self", ".", "hr_t", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Set", "[", "int", "]", "]", "=", "defaultdict", "(", "set", ")", "\n", "self", ".", "tr_h", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Set", "[", "int", "]", "]", "=", "defaultdict", "(", "set", ")", "\n", "\n", "self", ".", "hr_t_train", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Set", "[", "int", "]", "]", "=", "defaultdict", "(", "set", ")", "\n", "self", ".", "tr_h_train", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Set", "[", "int", "]", "]", "=", "defaultdict", "(", "set", ")", "\n", "\n", "self", ".", "hr_t_valid", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Set", "[", "int", "]", "]", "=", "defaultdict", "(", "set", ")", "\n", "self", ".", "tr_h_valid", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Set", "[", "int", "]", "]", "=", "defaultdict", "(", "set", ")", "\n", "\n", "self", ".", "relation_property", ":", "Dict", "[", "int", ",", "float", "]", "=", "{", "}", "\n", "\n", "# meta", "\n", "self", ".", "entity_count", "=", "0", "\n", "self", ".", "relation_count", "=", "0", "\n", "self", ".", "valid_triples_count", "=", "0", "\n", "self", ".", "test_triples_count", "=", "0", "\n", "self", ".", "train_triples_count", "=", "0", "\n", "self", ".", "triple_count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.read_all_origin_data": [[348, 350], ["DataSchema.RelationalTripletData.read_all_triplets"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_all_triplets"], ["", "def", "read_all_origin_data", "(", "self", ")", ":", "\n", "        ", "self", ".", "read_all_triplets", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.read_all_triplets": [[351, 361], ["DataSchema.read_triple_hrt", "DataSchema.read_triple_hrt", "DataSchema.read_triple_hrt", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_triple_hrt", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_triple_hrt", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_triple_hrt"], ["", "def", "read_all_triplets", "(", "self", ")", ":", "\n", "        ", "self", ".", "train_triples", "=", "read_triple_hrt", "(", "self", ".", "dataset", ".", "data_paths", "[", "'train'", "]", ")", "\n", "self", ".", "valid_triples", "=", "read_triple_hrt", "(", "self", ".", "dataset", ".", "data_paths", "[", "'valid'", "]", ")", "\n", "self", ".", "test_triples", "=", "read_triple_hrt", "(", "self", ".", "dataset", ".", "data_paths", "[", "'test'", "]", ")", "\n", "self", ".", "all_triples", "=", "self", ".", "train_triples", "+", "self", ".", "valid_triples", "+", "self", ".", "test_triples", "\n", "\n", "self", ".", "valid_triples_count", "=", "len", "(", "self", ".", "valid_triples", ")", "\n", "self", ".", "test_triples_count", "=", "len", "(", "self", ".", "test_triples", ")", "\n", "self", ".", "train_triples_count", "=", "len", "(", "self", ".", "train_triples", ")", "\n", "self", ".", "triple_count", "=", "self", ".", "valid_triples_count", "+", "self", ".", "test_triples_count", "+", "self", ".", "train_triples_count", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_all_data": [[362, 375], ["DataSchema.RelationalTripletData.transform_entities_relations", "DataSchema.RelationalTripletData.transform_mappings", "DataSchema.RelationalTripletData.transform_all_triplets_ids", "DataSchema.RelationalTripletData.transform_hr_t", "DataSchema.RelationalTripletData.transform_tr_h", "DataSchema.RelationalTripletData.transform_hr_t_train", "DataSchema.RelationalTripletData.transform_tr_h_train", "DataSchema.RelationalTripletData.transform_hr_t_valid", "DataSchema.RelationalTripletData.transform_tr_h_valid", "DataSchema.RelationalTripletData.transform_relation_property"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_entities_relations", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_mappings", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_all_triplets_ids", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_hr_t", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_tr_h", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_hr_t_train", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_tr_h_train", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_hr_t_valid", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_tr_h_valid", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_relation_property"], ["", "def", "transform_all_data", "(", "self", ")", ":", "\n", "        ", "self", ".", "transform_entities_relations", "(", ")", "\n", "self", ".", "transform_mappings", "(", ")", "\n", "self", ".", "transform_all_triplets_ids", "(", ")", "\n", "\n", "self", ".", "transform_hr_t", "(", ")", "\n", "self", ".", "transform_tr_h", "(", ")", "\n", "self", ".", "transform_hr_t_train", "(", ")", "\n", "self", ".", "transform_tr_h_train", "(", ")", "\n", "self", ".", "transform_hr_t_valid", "(", ")", "\n", "self", ".", "transform_tr_h_valid", "(", ")", "\n", "\n", "self", ".", "transform_relation_property", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_entities_relations": [[376, 395], ["set", "set", "print", "sorted", "sorted", "len", "len", "entities.add", "entities.add", "relations.add", "list", "list"], "methods", ["None"], ["", "def", "transform_entities_relations", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to read the entities. \"\"\"", "\n", "entities", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "relations", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "print", "(", "\"entities_relations\"", ")", "\n", "# bar = Progbar(len(self.all_triples))", "\n", "# i = 0", "\n", "for", "h", ",", "r", ",", "t", "in", "self", ".", "all_triples", ":", "\n", "            ", "entities", ".", "add", "(", "h", ")", "\n", "entities", ".", "add", "(", "t", ")", "\n", "relations", ".", "add", "(", "r", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"h\", h.split(\"/\")[-1]), (\"r\", r.split(\"/\")[-1]), (\"t\", t.split(\"/\")[-1])])", "\n", "\n", "", "self", ".", "all_entities", "=", "sorted", "(", "list", "(", "entities", ")", ")", "\n", "self", ".", "all_relations", "=", "sorted", "(", "list", "(", "relations", ")", ")", "\n", "\n", "self", ".", "entity_count", "=", "len", "(", "self", ".", "all_entities", ")", "\n", "self", ".", "relation_count", "=", "len", "(", "self", ".", "all_relations", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_mappings": [[396, 402], ["enumerate", "DataSchema.RelationalTripletData.entity2idx.items", "enumerate", "DataSchema.RelationalTripletData.relation2idx.items"], "methods", ["None"], ["", "def", "transform_mappings", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to generate the mapping from string name to integer ids. \"\"\"", "\n", "self", ".", "entity2idx", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "enumerate", "(", "self", ".", "all_entities", ")", "}", "\n", "self", ".", "idx2entity", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "self", ".", "entity2idx", ".", "items", "(", ")", "}", "\n", "self", ".", "relation2idx", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "enumerate", "(", "self", ".", "all_relations", ")", "}", "\n", "self", ".", "idx2relation", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "self", ".", "relation2idx", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_all_triplets_ids": [[403, 410], ["None"], "methods", ["None"], ["", "def", "transform_all_triplets_ids", "(", "self", ")", ":", "\n", "        ", "entity2idx", "=", "self", ".", "entity2idx", "\n", "relation2idx", "=", "self", ".", "relation2idx", "\n", "self", ".", "train_triples_ids", "=", "[", "(", "entity2idx", "[", "h", "]", ",", "relation2idx", "[", "r", "]", ",", "entity2idx", "[", "t", "]", ")", "for", "h", ",", "r", ",", "t", "in", "self", ".", "train_triples", "]", "\n", "self", ".", "test_triples_ids", "=", "[", "(", "entity2idx", "[", "h", "]", ",", "relation2idx", "[", "r", "]", ",", "entity2idx", "[", "t", "]", ")", "for", "h", ",", "r", ",", "t", "in", "self", ".", "test_triples", "]", "\n", "self", ".", "valid_triples_ids", "=", "[", "(", "entity2idx", "[", "h", "]", ",", "relation2idx", "[", "r", "]", ",", "entity2idx", "[", "t", "]", ")", "for", "h", ",", "r", ",", "t", "in", "self", ".", "valid_triples", "]", "\n", "self", ".", "all_triples_ids", "=", "self", ".", "train_triples_ids", "+", "self", ".", "valid_triples_ids", "+", "self", ".", "test_triples_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_hr_t": [[411, 414], ["DataSchema.build_map_hr_t"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.build_map_hr_t"], ["", "def", "transform_hr_t", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to read the list of tails for the given head and relation pair. \"\"\"", "\n", "self", ".", "hr_t", "=", "build_map_hr_t", "(", "self", ".", "all_triples_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_tr_h": [[415, 418], ["DataSchema.build_map_tr_h"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.build_map_tr_h"], ["", "def", "transform_tr_h", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to read the list of heads for the given tail and relation pair. \"\"\"", "\n", "self", ".", "tr_h", "=", "build_map_tr_h", "(", "self", ".", "all_triples_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_hr_t_train": [[419, 422], ["DataSchema.build_map_hr_t"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.build_map_hr_t"], ["", "def", "transform_hr_t_train", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to read the list of tails for the given head and relation pair for the training set. \"\"\"", "\n", "self", ".", "hr_t_train", "=", "build_map_hr_t", "(", "self", ".", "train_triples_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_tr_h_train": [[423, 426], ["DataSchema.build_map_tr_h"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.build_map_tr_h"], ["", "def", "transform_tr_h_train", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to read the list of heads for the given tail and relation pair for the training set. \"\"\"", "\n", "self", ".", "tr_h_train", "=", "build_map_tr_h", "(", "self", ".", "train_triples_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_hr_t_valid": [[427, 430], ["DataSchema.build_map_hr_t"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.build_map_hr_t"], ["", "def", "transform_hr_t_valid", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to read the list of tails for the given head and relation pair for the valid set. \"\"\"", "\n", "self", ".", "hr_t_valid", "=", "build_map_hr_t", "(", "self", ".", "valid_triples_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_tr_h_valid": [[431, 434], ["DataSchema.build_map_tr_h"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.build_map_tr_h"], ["", "def", "transform_tr_h_valid", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to read the list of heads for the given tail and relation pair for the valid set. \"\"\"", "\n", "self", ".", "tr_h_valid", "=", "build_map_tr_h", "(", "self", ".", "valid_triples_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.transform_relation_property": [[435, 467], ["print", "relation_property_head.keys", "relation_property_head[].append", "relation_property_tail[].append", "len", "range", "range", "set", "len", "len", "len", "len", "set", "set"], "methods", ["None"], ["", "def", "transform_relation_property", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to read the relation property.\n\n         Returns:\n             list: Returns the list of relation property.\n         \"\"\"", "\n", "relation_property_head", "=", "{", "x", ":", "[", "]", "for", "x", "in", "range", "(", "len", "(", "self", ".", "all_relations", ")", ")", "}", "\n", "relation_property_tail", "=", "{", "x", ":", "[", "]", "for", "x", "in", "range", "(", "len", "(", "self", ".", "all_relations", ")", ")", "}", "\n", "\n", "print", "(", "\"relation_property\"", ")", "\n", "# bar = Progbar(len(self.train_triples_ids))", "\n", "# i = 0", "\n", "for", "h", ",", "r", ",", "t", "in", "self", ".", "train_triples_ids", ":", "\n", "            ", "relation_property_head", "[", "r", "]", ".", "append", "(", "h", ")", "\n", "relation_property_tail", "[", "r", "]", ".", "append", "(", "t", ")", "\n", "# i += 1", "\n", "# bar.update(i, [])", "\n", "\n", "", "self", ".", "relation_property", "=", "{", "}", "\n", "for", "x", "in", "relation_property_head", ".", "keys", "(", ")", ":", "\n", "            ", "value_up", "=", "len", "(", "set", "(", "relation_property_tail", "[", "x", "]", ")", ")", "\n", "\n", "value_bot", "=", "len", "(", "set", "(", "relation_property_head", "[", "x", "]", ")", ")", "+", "len", "(", "set", "(", "relation_property_tail", "[", "x", "]", ")", ")", "\n", "\n", "if", "value_bot", "==", "0", ":", "\n", "                ", "value", "=", "0", "\n", "", "else", ":", "\n", "                ", "value", "=", "value_up", "/", "value_bot", "\n", "\n", "", "self", ".", "relation_property", "[", "x", "]", "=", "value", "\n", "\n", "", "return", "self", ".", "relation_property", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.cache_all_data": [[468, 498], ["DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.RelationalTripletData.meta"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.meta"], ["", "def", "cache_all_data", "(", "self", ")", ":", "\n", "        ", "\"\"\"Function to cache the prepared dataset in the memory\"\"\"", "\n", "cache_data", "(", "self", ".", "all_triples", ",", "self", ".", "cache_path", ".", "cache_all_triples_path", ")", "\n", "cache_data", "(", "self", ".", "train_triples", ",", "self", ".", "cache_path", ".", "cache_train_triples_path", ")", "\n", "cache_data", "(", "self", ".", "test_triples", ",", "self", ".", "cache_path", ".", "cache_test_triples_path", ")", "\n", "cache_data", "(", "self", ".", "valid_triples", ",", "self", ".", "cache_path", ".", "cache_valid_triples_path", ")", "\n", "\n", "cache_data", "(", "self", ".", "all_triples_ids", ",", "self", ".", "cache_path", ".", "cache_all_triples_ids_path", ")", "\n", "cache_data", "(", "self", ".", "train_triples_ids", ",", "self", ".", "cache_path", ".", "cache_train_triples_ids_path", ")", "\n", "cache_data", "(", "self", ".", "test_triples_ids", ",", "self", ".", "cache_path", ".", "cache_test_triples_ids_path", ")", "\n", "cache_data", "(", "self", ".", "valid_triples_ids", ",", "self", ".", "cache_path", ".", "cache_valid_triples_ids_path", ")", "\n", "\n", "cache_data", "(", "self", ".", "all_entities", ",", "self", ".", "cache_path", ".", "cache_all_entities_path", ")", "\n", "cache_data", "(", "self", ".", "all_relations", ",", "self", ".", "cache_path", ".", "cache_all_relations_path", ")", "\n", "\n", "cache_data", "(", "self", ".", "idx2entity", ",", "self", ".", "cache_path", ".", "cache_idx2entity_path", ")", "\n", "cache_data", "(", "self", ".", "idx2relation", ",", "self", ".", "cache_path", ".", "cache_idx2relation_path", ")", "\n", "cache_data", "(", "self", ".", "relation2idx", ",", "self", ".", "cache_path", ".", "cache_relation2idx_path", ")", "\n", "cache_data", "(", "self", ".", "entity2idx", ",", "self", ".", "cache_path", ".", "cache_entity2idx_path", ")", "\n", "\n", "cache_data", "(", "self", ".", "hr_t", ",", "self", ".", "cache_path", ".", "cache_hr_t_path", ")", "\n", "cache_data", "(", "self", ".", "tr_h", ",", "self", ".", "cache_path", ".", "cache_tr_h_path", ")", "\n", "cache_data", "(", "self", ".", "hr_t_train", ",", "self", ".", "cache_path", ".", "cache_hr_t_train_path", ")", "\n", "cache_data", "(", "self", ".", "tr_h_train", ",", "self", ".", "cache_path", ".", "cache_tr_h_train_path", ")", "\n", "cache_data", "(", "self", ".", "hr_t_valid", ",", "self", ".", "cache_path", ".", "cache_hr_t_valid_path", ")", "\n", "cache_data", "(", "self", ".", "tr_h_valid", ",", "self", ".", "cache_path", ".", "cache_tr_h_valid_path", ")", "\n", "\n", "cache_data", "(", "self", ".", "relation_property", ",", "self", ".", "cache_path", ".", "cache_relation_property_path", ")", "\n", "\n", "cache_data", "(", "self", ".", "meta", "(", ")", ",", "self", ".", "cache_path", ".", "cache_metadata_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.load_cache": [[499, 502], ["DataSchema.RelationalTripletData.read_cache_data"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.read_cache_data"], ["", "def", "load_cache", "(", "self", ",", "keys", ":", "List", "[", "str", "]", ")", ":", "\n", "        ", "for", "key", "in", "keys", ":", "\n", "            ", "self", ".", "read_cache_data", "(", "key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.read_cache_data": [[503, 516], ["hasattr", "hasattr", "getattr", "DataSchema.read_cache", "setattr", "DataSchema.read_cache", "DataSchema.RelationalTripletData.read_meta", "ValueError"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_cache", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_cache", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_meta"], ["", "", "def", "read_cache_data", "(", "self", ",", "key", ")", ":", "\n", "        ", "\"\"\"Function to read the cached dataset from the memory\"\"\"", "\n", "path", "=", "\"cache_%s_path\"", "%", "key", "\n", "if", "hasattr", "(", "self", ",", "key", ")", "and", "hasattr", "(", "self", ".", "cache_path", ",", "path", ")", ":", "\n", "            ", "key_path", "=", "getattr", "(", "self", ".", "cache_path", ",", "path", ")", "\n", "value", "=", "read_cache", "(", "key_path", ")", "\n", "setattr", "(", "self", ",", "key", ",", "value", ")", "\n", "return", "value", "\n", "", "elif", "key", "==", "\"meta\"", ":", "\n", "            ", "meta", "=", "read_cache", "(", "self", ".", "cache_path", ".", "cache_metadata_path", ")", "\n", "self", ".", "read_meta", "(", "meta", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown cache data key %s'", "%", "key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.read_meta": [[517, 524], ["None"], "methods", ["None"], ["", "", "def", "read_meta", "(", "self", ",", "meta", ")", ":", "\n", "        ", "self", ".", "relation_count", ",", "=", "meta", "[", "\"relation_count\"", "]", "\n", "self", ".", "entity_count", ",", "=", "meta", "[", "\"entity_count\"", "]", "\n", "self", ".", "valid_triples_count", ",", "=", "meta", "[", "\"valid_triples_count\"", "]", "\n", "self", ".", "test_triples_count", ",", "=", "meta", "[", "\"test_triples_count\"", "]", "\n", "self", ".", "train_triples_count", ",", "=", "meta", "[", "\"train_triples_count\"", "]", "\n", "self", ".", "triple_count", ",", "=", "meta", "[", "\"triple_count\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.meta": [[525, 533], ["None"], "methods", ["None"], ["", "def", "meta", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "\"relation_count\"", ":", "self", ".", "relation_count", ",", "\n", "\"entity_count\"", ":", "self", ".", "entity_count", ",", "\n", "\"valid_triples_count\"", ":", "self", ".", "valid_triples_count", ",", "\n", "\"test_triples_count\"", ":", "self", ".", "test_triples_count", ",", "\n", "\"train_triples_count\"", ":", "self", ".", "train_triples_count", ",", "\n", "\"triple_count\"", ":", "self", ".", "triple_count", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.RelationalTripletData.dump": [[535, 550], ["None"], "methods", ["None"], ["", "def", "dump", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to dump statistic information of a dataset \"\"\"", "\n", "# dump key information", "\n", "dump", "=", "[", "\n", "\"\"", ",", "\n", "\"----------Metadata Info for Dataset:%s----------------\"", "%", "self", ".", "dataset", ".", "name", ",", "\n", "\"Total Training Triples   :%s\"", "%", "self", ".", "train_triples_count", ",", "\n", "\"Total Testing Triples    :%s\"", "%", "self", ".", "test_triples_count", ",", "\n", "\"Total validation Triples :%s\"", "%", "self", ".", "valid_triples_count", ",", "\n", "\"Total Entities           :%s\"", "%", "self", ".", "entity_count", ",", "\n", "\"Total Relations          :%s\"", "%", "self", ".", "relation_count", ",", "\n", "\"---------------------------------------------\"", ",", "\n", "\"\"", ",", "\n", "]", "\n", "return", "dump", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kCachePath.__init__": [[556, 614], ["DataSchema.RelationalTripletDatasetCachePath.__init__"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cache_path", ":", "Path", ")", ":", "\n", "        ", "RelationalTripletDatasetCachePath", ".", "__init__", "(", "self", ",", "cache_path", ")", "\n", "self", ".", "cache_entity_align_file", "=", "self", ".", "cache_path", "/", "\"ref_ent_ids.txt\"", "\n", "self", ".", "cache_all_entity_file", "=", "self", ".", "cache_path", "/", "\"ent_ids_all.txt\"", "\n", "self", ".", "cache_all_attr_file", "=", "self", ".", "cache_path", "/", "\"att2id_all.txt\"", "\n", "self", ".", "cache_all_value_file", "=", "self", ".", "cache_path", "/", "\"att_value2id_all.txt\"", "\n", "self", ".", "cache_all_triple_file", "=", "self", ".", "cache_path", "/", "\"triples_struct_all.txt\"", "\n", "self", ".", "cache_all_triple_file_enhance", "=", "self", ".", "cache_path", "/", "\"triples_struct_all_enhance.txt\"", "\n", "self", ".", "cache_kg1_entity_file", "=", "self", ".", "cache_path", "/", "\"ent_ids_1.txt\"", "\n", "self", ".", "cache_kg2_entity_file", "=", "self", ".", "cache_path", "/", "\"ent_ids_2.txt\"", "\n", "\n", "self", ".", "cache_seeds_path", "=", "self", ".", "cache_path", "/", "\"seeds.pkl\"", "\n", "self", ".", "cache_train_seeds_path", "=", "self", ".", "cache_path", "/", "\"train_seeds.pkl\"", "\n", "self", ".", "cache_test_seeds_path", "=", "self", ".", "cache_path", "/", "\"test_seeds.pkl\"", "\n", "self", ".", "cache_seeds_ids_path", "=", "self", ".", "cache_path", "/", "\"seeds_ids.pkl\"", "\n", "self", ".", "cache_train_seeds_ids_path", "=", "self", ".", "cache_path", "/", "\"train_seeds_ids.pkl\"", "\n", "self", ".", "cache_test_seeds_ids_path", "=", "self", ".", "cache_path", "/", "\"test_seeds_ids.pkl\"", "\n", "self", ".", "cache_left_ids_path", "=", "self", ".", "cache_path", "/", "\"left_ids.pkl\"", "\n", "self", ".", "cache_right_ids_path", "=", "self", ".", "cache_path", "/", "\"right_ids.pkl\"", "\n", "\n", "self", ".", "cache_kg1_triples_path", "=", "self", ".", "cache_path", "/", "\"kg1_triples.pkl\"", "\n", "self", ".", "cache_kg2_triples_path", "=", "self", ".", "cache_path", "/", "\"kg2_triples.pkl\"", "\n", "self", ".", "cache_kg1_triples_ids_path", "=", "self", ".", "cache_path", "/", "\"kg1_triples_ids.pkl\"", "\n", "self", ".", "cache_kg2_triples_ids_path", "=", "self", ".", "cache_path", "/", "\"kg2_triples_ids.pkl\"", "\n", "self", ".", "cache_all_attribute_triples_path", "=", "self", ".", "cache_path", "/", "\"all_attribute_triples.pkl\"", "\n", "self", ".", "cache_kg1_attribute_triples_path", "=", "self", ".", "cache_path", "/", "\"kg1_attribute_triples.pkl\"", "\n", "self", ".", "cache_kg2_attribute_triples_path", "=", "self", ".", "cache_path", "/", "\"kg2_attribute_triples.pkl\"", "\n", "self", ".", "cache_all_attribute_triples_ids_path", "=", "self", ".", "cache_path", "/", "\"all_attribute_triples_ids.pkl\"", "\n", "self", ".", "cache_kg1_attribute_triples_ids_path", "=", "self", ".", "cache_path", "/", "\"kg1_attribute_triples_ids.pkl\"", "\n", "self", ".", "cache_kg2_attribute_triples_ids_path", "=", "self", ".", "cache_path", "/", "\"kg2_attribute_triples_ids.pkl\"", "\n", "self", ".", "cache_all_attribute_names_path", "=", "self", ".", "cache_path", "/", "\"all_attribute_names.pkl\"", "\n", "self", ".", "cache_all_attribute_values_path", "=", "self", ".", "cache_path", "/", "\"all_attribute_values.pkl\"", "\n", "\n", "self", ".", "cache_kg1_entities_path", "=", "self", ".", "cache_path", "/", "\"kg1_entities.pkl\"", "\n", "self", ".", "cache_kg2_entities_path", "=", "self", ".", "cache_path", "/", "\"kg2_entities.pkl\"", "\n", "self", ".", "cache_kg1_entities_ids_path", "=", "self", ".", "cache_path", "/", "\"kg1_entities_ids.pkl\"", "\n", "self", ".", "cache_kg2_entities_ids_path", "=", "self", ".", "cache_path", "/", "\"kg2_entities_ids.pkl\"", "\n", "self", ".", "cache_entities_ids_path", "=", "self", ".", "cache_path", "/", "\"entities_ids.pkl\"", "\n", "self", ".", "cache_kg1_relations_path", "=", "self", ".", "cache_path", "/", "\"kg1_relations.pkl\"", "\n", "self", ".", "cache_kg2_relations_path", "=", "self", ".", "cache_path", "/", "\"kg2_relations.pkl\"", "\n", "self", ".", "cache_kg1_relations_ids_path", "=", "self", ".", "cache_path", "/", "\"kg1_relations_ids.pkl\"", "\n", "self", ".", "cache_kg2_relations_ids_path", "=", "self", ".", "cache_path", "/", "\"kg2_relations_ids.pkl\"", "\n", "self", ".", "cache_relations_ids_path", "=", "self", ".", "cache_path", "/", "\"relations_ids.pkl\"", "\n", "self", ".", "cache_kg1_attribute_names_path", "=", "self", ".", "cache_path", "/", "\"kg1_attribute_names.pkl\"", "\n", "self", ".", "cache_kg2_attribute_names_path", "=", "self", ".", "cache_path", "/", "\"kg2_attribute_names.pkl\"", "\n", "self", ".", "cache_kg1_attribute_names_ids_path", "=", "self", ".", "cache_path", "/", "\"kg1_attribute_names_ids.pkl\"", "\n", "self", ".", "cache_kg2_attribute_names_ids_path", "=", "self", ".", "cache_path", "/", "\"kg2_attribute_names_ids.pkl\"", "\n", "self", ".", "cache_attribute_names_ids_path", "=", "self", ".", "cache_path", "/", "\"attribute_names_ids.pkl\"", "\n", "self", ".", "cache_kg1_attribute_values_path", "=", "self", ".", "cache_path", "/", "\"kg1_attribute_values.pkl\"", "\n", "self", ".", "cache_kg2_attribute_values_path", "=", "self", ".", "cache_path", "/", "\"kg2_attribute_values.pkl\"", "\n", "self", ".", "cache_kg1_attribute_values_ids_path", "=", "self", ".", "cache_path", "/", "\"kg1_attribute_values_ids.pkl\"", "\n", "self", ".", "cache_kg2_attribute_values_ids_path", "=", "self", ".", "cache_path", "/", "\"kg2_attribute_values_ids.pkl\"", "\n", "self", ".", "cache_attribute_values_ids_path", "=", "self", ".", "cache_path", "/", "\"attribute_values_ids.pkl\"", "\n", "\n", "self", ".", "cache_attribute_name2idx_path", "=", "self", ".", "cache_path", "/", "\"attribute_name2idx.pkl\"", "\n", "self", ".", "cache_idx2attribute_name_path", "=", "self", ".", "cache_path", "/", "\"idx2attribute_name.pkl\"", "\n", "self", ".", "cache_attribute_value2idx_path", "=", "self", ".", "cache_path", "/", "\"attribute_value2idx.pkl\"", "\n", "self", ".", "cache_idx2attribute_value_path", "=", "self", ".", "cache_path", "/", "\"idx2attribute_value.pkl\"", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.__init__": [[617, 707], ["DataSchema.RelationalTripletData.__init__"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dataset", ":", "DBP15k", ",", "\n", "cache_path", ":", "DBP15kCachePath", ",", "\n", "train_seeds_percent", "=", "0.3", ")", ":", "\n", "        ", "RelationalTripletData", ".", "__init__", "(", "self", ",", "dataset", ",", "cache_path", ")", "\n", "self", ".", "cache_path", "=", "cache_path", "\n", "self", ".", "train_seeds_percent", "=", "train_seeds_percent", "\n", "\n", "self", ".", "kg1_triples", ":", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", "=", "[", "]", "\n", "self", ".", "kg2_triples", ":", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", "=", "[", "]", "\n", "\n", "self", ".", "kg1_triples_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", "=", "[", "]", "\n", "self", ".", "kg2_triples_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", "=", "[", "]", "\n", "\n", "self", ".", "all_attribute_triples", ":", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", "=", "[", "]", "\n", "self", ".", "kg1_attribute_triples", ":", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", "=", "[", "]", "\n", "self", ".", "kg2_attribute_triples", ":", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", "=", "[", "]", "\n", "\n", "self", ".", "all_attribute_triples_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", "=", "[", "]", "\n", "self", ".", "kg1_attribute_triples_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", "=", "[", "]", "\n", "self", ".", "kg2_attribute_triples_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", "=", "[", "]", "\n", "\n", "self", ".", "all_attribute_names", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "all_attribute_values", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "all_attribute_names_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "self", ".", "all_attribute_values_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "\n", "self", ".", "kg1_entities", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "kg2_entities", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "kg1_entities_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "self", ".", "kg2_entities_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "self", ".", "entities_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "\n", "self", ".", "kg1_relations", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "kg2_relations", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "kg1_relations_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "self", ".", "kg2_relations_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "self", ".", "relations_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "\n", "self", ".", "kg1_attribute_names", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "kg2_attribute_names", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "kg1_attribute_names_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "self", ".", "kg2_attribute_names_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "self", ".", "attribute_names_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "\n", "self", ".", "kg1_attribute_values", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "kg2_attribute_values", ":", "List", "[", "str", "]", "=", "[", "]", "\n", "self", ".", "kg1_attribute_values_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "self", ".", "kg2_attribute_values_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "self", ".", "attribute_values_ids", ":", "List", "[", "int", "]", "=", "[", "]", "\n", "\n", "self", ".", "attribute_name2idx", ":", "Dict", "[", "str", ",", "int", "]", "=", "{", "}", "\n", "self", ".", "idx2attribute_name", ":", "Dict", "[", "int", ",", "str", "]", "=", "{", "}", "\n", "self", ".", "attribute_value2idx", ":", "Dict", "[", "str", ",", "int", "]", "=", "{", "}", "\n", "self", ".", "idx2attribute_value", ":", "Dict", "[", "int", ",", "str", "]", "=", "{", "}", "\n", "\n", "self", ".", "seeds", ":", "List", "[", "Tuple", "[", "str", ",", "str", "]", "]", "=", "[", "]", "# (m, 2) m\u4e2a\u5bf9\u9f50\u7684\u5b9e\u4f53\u5bf9(a,b)\u79f0a\u4e3a\u5de6\u5b9e\u4f53\uff0cb\u4e3a\u53f3\u5b9e\u4f53", "\n", "self", ".", "train_seeds", ":", "List", "[", "Tuple", "[", "str", ",", "str", "]", "]", "=", "[", "]", "# (0.3m, 2)", "\n", "self", ".", "test_seeds", ":", "List", "[", "Tuple", "[", "str", ",", "str", "]", "]", "=", "[", "]", "# (0.7m, 2)", "\n", "self", ".", "seeds_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", "]", "]", "=", "[", "]", "# (m, 2) m\u4e2a\u5bf9\u9f50\u7684\u5b9e\u4f53\u5bf9(a,b)\u79f0a\u4e3a\u5de6\u5b9e\u4f53\uff0cb\u4e3a\u53f3\u5b9e\u4f53", "\n", "self", ".", "train_seeds_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", "]", "]", "=", "[", "]", "# (0.3m, 2)", "\n", "self", ".", "test_seeds_ids", ":", "List", "[", "Tuple", "[", "int", ",", "int", "]", "]", "=", "[", "]", "# (0.7m, 2)", "\n", "self", ".", "left_ids", ":", "List", "[", "int", "]", "=", "[", "]", "# test_seeds \u4e2d\u5bf9\u9f50\u5b9e\u4f53\u7684\u5de6\u5b9e\u4f53id", "\n", "self", ".", "right_ids", ":", "List", "[", "int", "]", "=", "[", "]", "# test_seeds \u4e2d\u5bf9\u9f50\u5b9e\u4f53\u7684\u53f3\u5b9e\u4f53id", "\n", "\n", "self", ".", "kg1_triples_count", "=", "0", "\n", "self", ".", "kg2_triples_count", "=", "0", "\n", "\n", "self", ".", "all_attribute_triples_count", "=", "0", "\n", "self", ".", "kg1_attribute_triples_count", "=", "0", "\n", "self", ".", "kg2_attribute_triples_count", "=", "0", "\n", "\n", "self", ".", "alignment_seeds_count", "=", "0", "\n", "self", ".", "valid_alignment_seeds_count", "=", "0", "\n", "self", ".", "test_alignment_seeds_count", "=", "0", "\n", "self", ".", "train_alignment_seeds_count", "=", "0", "\n", "\n", "self", ".", "kg1_entities_count", "=", "0", "\n", "self", ".", "kg2_entities_count", "=", "0", "\n", "\n", "self", ".", "kg1_relations_count", "=", "0", "\n", "self", ".", "kg2_relations_count", "=", "0", "\n", "\n", "self", ".", "all_attribute_names_count", "=", "0", "\n", "self", ".", "kg1_attribute_names_count", "=", "0", "\n", "self", ".", "kg2_attribute_names_count", "=", "0", "\n", "\n", "self", ".", "all_attribute_values_count", "=", "0", "\n", "self", ".", "kg1_attribute_values_count", "=", "0", "\n", "self", ".", "kg2_attribute_values_count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_all_origin_data": [[708, 712], ["DataSchema.DBP15kData.read_all_triplets", "DataSchema.DBP15kData.read_attribute_triplets", "DataSchema.DBP15kData.read_entity_align_list"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_all_triplets", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_attribute_triplets", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_entity_align_list"], ["", "def", "read_all_origin_data", "(", "self", ")", ":", "\n", "        ", "self", ".", "read_all_triplets", "(", ")", "\n", "self", ".", "read_attribute_triplets", "(", ")", "\n", "self", ".", "read_entity_align_list", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_all_triplets": [[713, 727], ["DataSchema.read_triple_hrt", "DataSchema.read_triple_hrt", "len", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_triple_hrt", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_triple_hrt"], ["", "def", "read_all_triplets", "(", "self", ")", ":", "\n", "        ", "self", ".", "kg1_triples", "=", "read_triple_hrt", "(", "self", ".", "dataset", ".", "data_paths", "[", "'kg1_relational_triples'", "]", ")", "\n", "self", ".", "kg2_triples", "=", "read_triple_hrt", "(", "self", ".", "dataset", ".", "data_paths", "[", "'kg2_relational_triples'", "]", ")", "\n", "self", ".", "all_triples", "=", "self", ".", "kg1_triples", "+", "self", ".", "kg2_triples", "\n", "self", ".", "train_triples", "=", "self", ".", "all_triples", "\n", "self", ".", "test_triples", "=", "[", "]", "\n", "self", ".", "valid_triples", "=", "[", "]", "\n", "\n", "self", ".", "kg1_triples_count", "=", "len", "(", "self", ".", "kg1_triples", ")", "\n", "self", ".", "kg2_triples_count", "=", "len", "(", "self", ".", "kg2_triples", ")", "\n", "self", ".", "triple_count", "=", "len", "(", "self", ".", "all_attribute_triples", ")", "\n", "self", ".", "train_triples_count", "=", "len", "(", "self", ".", "train_triples", ")", "\n", "self", ".", "test_triples_count", "=", "len", "(", "self", ".", "test_triples", ")", "\n", "self", ".", "valid_triples_count", "=", "len", "(", "self", ".", "valid_triples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_attribute_triplets": [[728, 736], ["DataSchema.read_attribute_triple_eav", "DataSchema.read_attribute_triple_eav", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_attribute_triple_eav", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_attribute_triple_eav"], ["", "def", "read_attribute_triplets", "(", "self", ")", ":", "\n", "        ", "self", ".", "kg1_attribute_triples", "=", "read_attribute_triple_eav", "(", "self", ".", "dataset", ".", "data_paths", "[", "'kg1_attribute_triples'", "]", ")", "\n", "self", ".", "kg2_attribute_triples", "=", "read_attribute_triple_eav", "(", "self", ".", "dataset", ".", "data_paths", "[", "'kg2_attribute_triples'", "]", ")", "\n", "self", ".", "all_attribute_triples", "=", "self", ".", "kg1_attribute_triples", "+", "self", ".", "kg2_attribute_triples", "\n", "\n", "self", ".", "kg1_attribute_triples_count", "=", "len", "(", "self", ".", "kg1_attribute_triples", ")", "\n", "self", ".", "kg2_attribute_triples_count", "=", "len", "(", "self", ".", "kg2_attribute_triples", ")", "\n", "self", ".", "all_attribute_triples_count", "=", "len", "(", "self", ".", "all_attribute_triples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_entity_align_list": [[737, 748], ["DataSchema.read_seeds", "int", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_seeds"], ["", "def", "read_entity_align_list", "(", "self", ")", ":", "\n", "        ", "self", ".", "seeds", "=", "read_seeds", "(", "self", ".", "dataset", ".", "data_paths", "[", "'seeds'", "]", ")", "\n", "train_max_idx", "=", "int", "(", "self", ".", "train_seeds_percent", "*", "len", "(", "self", ".", "seeds", ")", ")", "\n", "\n", "self", ".", "train_seeds", "=", "self", ".", "seeds", "[", ":", "train_max_idx", "]", "\n", "self", ".", "test_seeds", "=", "self", ".", "seeds", "[", "train_max_idx", ":", "]", "\n", "\n", "self", ".", "alignment_seeds_count", "=", "len", "(", "self", ".", "seeds", ")", "\n", "self", ".", "valid_alignment_seeds_count", "=", "0", "\n", "self", ".", "test_alignment_seeds_count", "=", "len", "(", "self", ".", "test_seeds", ")", "\n", "self", ".", "train_alignment_seeds_count", "=", "len", "(", "self", ".", "train_seeds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_all_data": [[749, 759], ["DataSchema.RelationalTripletData.transform_all_data", "DataSchema.DBP15kData.transform_attribute_names_values", "DataSchema.DBP15kData.transform_attribute_mappings", "DataSchema.DBP15kData.transform_all_attribute_triplets_ids", "DataSchema.DBP15kData.transform_entity_ids", "DataSchema.DBP15kData.transform_relation_ids", "DataSchema.DBP15kData.transform_attribute_name_ids", "DataSchema.DBP15kData.transform_attribute_value_ids", "DataSchema.DBP15kData.transform_entity_align_ids"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_all_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_attribute_names_values", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_attribute_mappings", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_all_attribute_triplets_ids", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_entity_ids", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_relation_ids", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_attribute_name_ids", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_attribute_value_ids", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_entity_align_ids"], ["", "def", "transform_all_data", "(", "self", ")", ":", "\n", "        ", "RelationalTripletData", ".", "transform_all_data", "(", "self", ")", "\n", "self", ".", "transform_attribute_names_values", "(", ")", "\n", "self", ".", "transform_attribute_mappings", "(", ")", "\n", "self", ".", "transform_all_attribute_triplets_ids", "(", ")", "\n", "self", ".", "transform_entity_ids", "(", ")", "\n", "self", ".", "transform_relation_ids", "(", ")", "\n", "self", ".", "transform_attribute_name_ids", "(", ")", "\n", "self", ".", "transform_attribute_value_ids", "(", ")", "\n", "self", ".", "transform_entity_align_ids", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_entities_relations": [[760, 805], ["set", "set", "set", "set", "set", "set", "print", "print", "kg2_entities.union", "kg2_relations.union", "sorted", "sorted", "sorted", "sorted", "sorted", "sorted", "len", "len", "len", "len", "len", "len", "kg1_entities.add", "kg1_entities.add", "kg1_relations.add", "kg2_entities.add", "kg2_entities.add", "kg2_relations.add", "list", "list", "list", "list", "list", "list"], "methods", ["None"], ["", "def", "transform_entities_relations", "(", "self", ")", ":", "\n", "        ", "entities", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "kg1_entities", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "kg2_entities", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "relations", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "kg1_relations", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "kg2_relations", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "\n", "print", "(", "\"kg1_entities_relations\"", ")", "\n", "# bar = Progbar(len(self.kg1_triples))", "\n", "# i = 0", "\n", "for", "h", ",", "r", ",", "t", "in", "self", ".", "kg1_triples", ":", "\n", "            ", "kg1_entities", ".", "add", "(", "h", ")", "\n", "kg1_entities", ".", "add", "(", "t", ")", "\n", "kg1_relations", ".", "add", "(", "r", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"h\", h.split(\"/\")[-1]), (\"r\", r.split(\"/\")[-1]), (\"t\", t.split(\"/\")[-1])])", "\n", "\n", "", "print", "(", "\"kg2_entities_relations\"", ")", "\n", "# bar = Progbar(len(self.kg2_triples))", "\n", "# i = 0", "\n", "for", "h", ",", "r", ",", "t", "in", "self", ".", "kg2_triples", ":", "\n", "            ", "kg2_entities", ".", "add", "(", "h", ")", "\n", "kg2_entities", ".", "add", "(", "t", ")", "\n", "kg2_relations", ".", "add", "(", "r", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"h\", h.split(\"/\")[-1]), (\"r\", r.split(\"/\")[-1]), (\"t\", t.split(\"/\")[-1])])", "\n", "", "entities", "=", "kg2_entities", ".", "union", "(", "kg1_entities", ")", "\n", "relations", "=", "kg2_relations", ".", "union", "(", "kg1_relations", ")", "\n", "\n", "self", ".", "all_entities", "=", "sorted", "(", "list", "(", "entities", ")", ")", "\n", "self", ".", "kg1_entities", "=", "sorted", "(", "list", "(", "kg1_entities", ")", ")", "\n", "self", ".", "kg2_entities", "=", "sorted", "(", "list", "(", "kg2_entities", ")", ")", "\n", "\n", "self", ".", "all_relations", "=", "sorted", "(", "list", "(", "relations", ")", ")", "\n", "self", ".", "kg1_relations", "=", "sorted", "(", "list", "(", "kg1_relations", ")", ")", "\n", "self", ".", "kg2_relations", "=", "sorted", "(", "list", "(", "kg2_relations", ")", ")", "\n", "\n", "self", ".", "entity_count", "=", "len", "(", "self", ".", "all_entities", ")", "\n", "self", ".", "kg1_entities_count", "=", "len", "(", "self", ".", "kg1_entities", ")", "\n", "self", ".", "kg2_entities_count", "=", "len", "(", "self", ".", "kg2_entities", ")", "\n", "\n", "self", ".", "relation_count", "=", "len", "(", "self", ".", "all_relations", ")", "\n", "self", ".", "kg1_relations_count", "=", "len", "(", "self", ".", "kg1_relations", ")", "\n", "self", ".", "kg2_relations_count", "=", "len", "(", "self", ".", "kg2_relations", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_attribute_names_values": [[806, 848], ["set", "set", "set", "set", "set", "set", "print", "print", "kg1_attribute_names.union", "kg1_attribute_values.union", "sorted", "sorted", "sorted", "len", "len", "len", "sorted", "sorted", "sorted", "len", "len", "len", "kg1_attribute_names.add", "kg1_attribute_values.add", "kg2_attribute_names.add", "kg2_attribute_values.add", "list", "list", "list", "list", "list", "list"], "methods", ["None"], ["", "def", "transform_attribute_names_values", "(", "self", ")", ":", "\n", "        ", "attribute_names", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "kg1_attribute_names", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "kg2_attribute_names", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "attribute_values", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "kg1_attribute_values", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "kg2_attribute_values", ":", "Set", "[", "str", "]", "=", "set", "(", ")", "\n", "\n", "print", "(", "\"kg1_attribute_names_values\"", ")", "\n", "# bar = Progbar(len(self.kg1_attribute_triples))", "\n", "# i = 0", "\n", "for", "e", ",", "a", ",", "v", "in", "self", ".", "kg1_attribute_triples", ":", "\n", "            ", "kg1_attribute_names", ".", "add", "(", "a", ")", "\n", "kg1_attribute_values", ".", "add", "(", "v", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"name\", a.split(\"/\")[-1]), (\"value\", v)])", "\n", "\n", "", "print", "(", "\"kg2_attribute_names_values\"", ")", "\n", "# bar = Progbar(len(self.kg2_attribute_triples))", "\n", "# i = 0", "\n", "for", "e", ",", "a", ",", "v", "in", "self", ".", "kg2_attribute_triples", ":", "\n", "            ", "kg2_attribute_names", ".", "add", "(", "a", ")", "\n", "kg2_attribute_values", ".", "add", "(", "v", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"name\", a.split(\"/\")[-1]), (\"value\", v)])", "\n", "", "attribute_names", "=", "kg1_attribute_names", ".", "union", "(", "kg2_attribute_names", ")", "\n", "attribute_values", "=", "kg1_attribute_values", ".", "union", "(", "kg2_attribute_values", ")", "\n", "self", ".", "all_attribute_names", "=", "sorted", "(", "list", "(", "attribute_names", ")", ")", "\n", "self", ".", "kg1_attribute_names", "=", "sorted", "(", "list", "(", "kg1_attribute_names", ")", ")", "\n", "self", ".", "kg2_attribute_names", "=", "sorted", "(", "list", "(", "kg2_attribute_names", ")", ")", "\n", "\n", "self", ".", "all_attribute_names_count", "=", "len", "(", "self", ".", "all_attribute_names", ")", "\n", "self", ".", "kg1_attribute_names_count", "=", "len", "(", "self", ".", "kg1_attribute_names", ")", "\n", "self", ".", "kg2_attribute_names_count", "=", "len", "(", "self", ".", "kg2_attribute_names", ")", "\n", "\n", "self", ".", "all_attribute_values", "=", "sorted", "(", "list", "(", "attribute_values", ")", ")", "\n", "self", ".", "kg1_attribute_values", "=", "sorted", "(", "list", "(", "kg1_attribute_values", ")", ")", "\n", "self", ".", "kg2_attribute_values", "=", "sorted", "(", "list", "(", "kg2_attribute_values", ")", ")", "\n", "\n", "self", ".", "all_attribute_values_count", "=", "len", "(", "self", ".", "all_attribute_values", ")", "\n", "self", ".", "kg1_attribute_values_count", "=", "len", "(", "self", ".", "kg1_attribute_values", ")", "\n", "self", ".", "kg2_attribute_values_count", "=", "len", "(", "self", ".", "kg2_attribute_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_attribute_mappings": [[849, 855], ["enumerate", "DataSchema.DBP15kData.idx2attribute_name.items", "enumerate", "DataSchema.DBP15kData.idx2attribute_value.items"], "methods", ["None"], ["", "def", "transform_attribute_mappings", "(", "self", ")", ":", "\n", "        ", "\"\"\" Function to generate the mapping from string name to integer ids. \"\"\"", "\n", "self", ".", "idx2attribute_name", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "enumerate", "(", "self", ".", "all_attribute_names", ")", "}", "\n", "self", ".", "attribute_name2idx", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "self", ".", "idx2attribute_name", ".", "items", "(", ")", "}", "\n", "self", ".", "idx2attribute_value", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "enumerate", "(", "self", ".", "all_attribute_values", ")", "}", "\n", "self", ".", "attribute_value2idx", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "self", ".", "idx2attribute_value", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_all_triplets_ids": [[856, 880], ["print", "print", "DataSchema.DBP15kData.kg1_triples_ids.append", "DataSchema.DBP15kData.kg2_triples_ids.append"], "methods", ["None"], ["", "def", "transform_all_triplets_ids", "(", "self", ")", ":", "\n", "        ", "entity2idx", "=", "self", ".", "entity2idx", "\n", "relation2idx", "=", "self", ".", "relation2idx", "\n", "\n", "print", "(", "\"kg1_triples_ids\"", ")", "\n", "# bar = Progbar(len(self.kg1_triples))", "\n", "# i = 0", "\n", "for", "h", ",", "r", ",", "t", "in", "self", ".", "kg1_triples", ":", "\n", "            ", "self", ".", "kg1_triples_ids", ".", "append", "(", "(", "entity2idx", "[", "h", "]", ",", "relation2idx", "[", "r", "]", ",", "entity2idx", "[", "t", "]", ")", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"h\", h.split(\"/\")[-1]), (\"r\", r.split(\"/\")[-1]), (\"t\", t.split(\"/\")[-1])])", "\n", "\n", "", "print", "(", "\"kg2_triples_ids\"", ")", "\n", "# bar = Progbar(len(self.kg2_triples))", "\n", "# i = 0", "\n", "for", "h", ",", "r", ",", "t", "in", "self", ".", "kg2_triples", ":", "\n", "            ", "self", ".", "kg2_triples_ids", ".", "append", "(", "(", "entity2idx", "[", "h", "]", ",", "relation2idx", "[", "r", "]", ",", "entity2idx", "[", "t", "]", ")", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"h\", h.split(\"/\")[-1]), (\"r\", r.split(\"/\")[-1]), (\"t\", t.split(\"/\")[-1])])", "\n", "\n", "", "self", ".", "all_triples_ids", "=", "self", ".", "kg1_triples_ids", "+", "self", ".", "kg2_triples_ids", "\n", "self", ".", "train_triples_ids", "=", "self", ".", "all_triples_ids", "\n", "self", ".", "test_triples_ids", "=", "[", "]", "\n", "self", ".", "valid_triples_ids", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_entity_align_ids": [[881, 894], ["int", "DataSchema.DBP15kData.seeds_ids.append", "DataSchema.DBP15kData.left_ids.append", "DataSchema.DBP15kData.right_ids.append", "len"], "methods", ["None"], ["", "def", "transform_entity_align_ids", "(", "self", ")", ":", "\n", "        ", "entity2idx", "=", "self", ".", "entity2idx", "\n", "for", "left_entity", ",", "right_entity", "in", "self", ".", "seeds", ":", "\n", "            ", "self", ".", "seeds_ids", ".", "append", "(", "(", "entity2idx", "[", "left_entity", "]", ",", "entity2idx", "[", "right_entity", "]", ")", ")", "\n", "", "train_max_idx", "=", "int", "(", "self", ".", "train_seeds_percent", "*", "len", "(", "self", ".", "seeds", ")", ")", "\n", "self", ".", "train_seeds_ids", "=", "self", ".", "seeds_ids", "[", ":", "train_max_idx", "]", "\n", "self", ".", "test_seeds_ids", "=", "self", ".", "seeds_ids", "[", "train_max_idx", ":", "]", "\n", "\n", "self", ".", "left_ids", "=", "[", "]", "\n", "self", ".", "right_ids", "=", "[", "]", "\n", "for", "left_entity", ",", "right_entity", "in", "self", ".", "test_seeds_ids", ":", "\n", "            ", "self", ".", "left_ids", ".", "append", "(", "left_entity", ")", "# \u5bf9\u9f50\u7684\u5de6\u8fb9\u7684\u5b9e\u4f53", "\n", "self", ".", "right_ids", ".", "append", "(", "right_entity", ")", "# \u5bf9\u9f50\u7684\u53f3\u8fb9\u7684\u5b9e\u4f53", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_all_attribute_triplets_ids": [[895, 917], ["print", "print", "DataSchema.DBP15kData.kg1_attribute_triples_ids.append", "DataSchema.DBP15kData.kg2_attribute_triples_ids.append"], "methods", ["None"], ["", "", "def", "transform_all_attribute_triplets_ids", "(", "self", ")", ":", "\n", "        ", "entity2idx", "=", "self", ".", "entity2idx", "\n", "attribute_name2idx", "=", "self", ".", "attribute_name2idx", "\n", "attribute_value2idx", "=", "self", ".", "attribute_value2idx", "\n", "\n", "print", "(", "\"kg1_attribute_triples_ids\"", ")", "\n", "# bar = Progbar(len(self.kg1_attribute_triples))", "\n", "# i = 0", "\n", "for", "e", ",", "a", ",", "v", "in", "self", ".", "kg1_attribute_triples", ":", "\n", "            ", "self", ".", "kg1_attribute_triples_ids", ".", "append", "(", "(", "entity2idx", "[", "e", "]", ",", "attribute_name2idx", "[", "a", "]", ",", "attribute_value2idx", "[", "v", "]", ")", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"e\", e.split(\"/\")[-1]), (\"a\", a.split(\"/\")[-1]), (\"v\", v)])", "\n", "\n", "", "print", "(", "\"kg2_attribute_triples_ids\"", ")", "\n", "# bar = Progbar(len(self.kg2_attribute_triples))", "\n", "# i = 0", "\n", "for", "e", ",", "a", ",", "v", "in", "self", ".", "kg2_attribute_triples", ":", "\n", "            ", "self", ".", "kg2_attribute_triples_ids", ".", "append", "(", "(", "entity2idx", "[", "e", "]", ",", "attribute_name2idx", "[", "a", "]", ",", "attribute_value2idx", "[", "v", "]", ")", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"e\", e.split(\"/\")[-1]), (\"a\", a.split(\"/\")[-1]), (\"v\", v)])", "\n", "\n", "", "self", ".", "all_attribute_triples_ids", "=", "self", ".", "kg1_attribute_triples_ids", "+", "self", ".", "kg2_attribute_triples_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_entity_ids": [[918, 939], ["print", "print", "DataSchema.DBP15kData.kg1_entities_ids.append", "DataSchema.DBP15kData.kg2_entities_ids.append"], "methods", ["None"], ["", "def", "transform_entity_ids", "(", "self", ")", ":", "\n", "\n", "        ", "entity2idx", "=", "self", ".", "entity2idx", "\n", "\n", "print", "(", "\"kg1_entities_ids\"", ")", "\n", "# bar = Progbar(len(self.kg1_entities))", "\n", "# i = 0", "\n", "for", "e", "in", "self", ".", "kg1_entities", ":", "\n", "            ", "self", ".", "kg1_entities_ids", ".", "append", "(", "entity2idx", "[", "e", "]", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"entity\", e.split(\"/\")[-1])])", "\n", "\n", "", "print", "(", "\"kg2_entities_ids\"", ")", "\n", "# bar = Progbar(len(self.kg2_entities))", "\n", "# i = 0", "\n", "for", "e", "in", "self", ".", "kg2_entities", ":", "\n", "            ", "self", ".", "kg2_entities_ids", ".", "append", "(", "entity2idx", "[", "e", "]", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"entity\", e.split(\"/\")[-1])])", "\n", "\n", "", "self", ".", "entities_ids", "=", "self", ".", "kg1_entities_ids", "+", "self", ".", "kg2_entities_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_relation_ids": [[940, 961], ["print", "print", "DataSchema.DBP15kData.kg1_relations_ids.append", "DataSchema.DBP15kData.kg2_relations_ids.append"], "methods", ["None"], ["", "def", "transform_relation_ids", "(", "self", ")", ":", "\n", "\n", "        ", "relation2idx", "=", "self", ".", "relation2idx", "\n", "\n", "print", "(", "\"kg1_relations_ids\"", ")", "\n", "# bar = Progbar(len(self.kg1_relations))", "\n", "# i = 0", "\n", "for", "r", "in", "self", ".", "kg1_relations", ":", "\n", "            ", "self", ".", "kg1_relations_ids", ".", "append", "(", "relation2idx", "[", "r", "]", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"relation\", r.split(\"/\")[-1])])", "\n", "\n", "", "print", "(", "\"kg2_relations_ids\"", ")", "\n", "# bar = Progbar(len(self.kg2_relations))", "\n", "# i = 0", "\n", "for", "r", "in", "self", ".", "kg2_relations", ":", "\n", "            ", "self", ".", "kg2_relations_ids", ".", "append", "(", "relation2idx", "[", "r", "]", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"relation\", r.split(\"/\")[-1])])", "\n", "\n", "", "self", ".", "relations_ids", "=", "self", ".", "kg1_relations_ids", "+", "self", ".", "kg2_relations_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_attribute_name_ids": [[962, 983], ["print", "print", "DataSchema.DBP15kData.kg1_attribute_names_ids.append", "DataSchema.DBP15kData.kg2_attribute_names_ids.append"], "methods", ["None"], ["", "def", "transform_attribute_name_ids", "(", "self", ")", ":", "\n", "\n", "        ", "attribute_name2idx", "=", "self", ".", "attribute_name2idx", "\n", "\n", "print", "(", "\"kg1_attribute_names_ids\"", ")", "\n", "# bar = Progbar(len(self.kg1_attribute_names))", "\n", "# i = 0", "\n", "for", "r", "in", "self", ".", "kg1_attribute_names", ":", "\n", "            ", "self", ".", "kg1_attribute_names_ids", ".", "append", "(", "attribute_name2idx", "[", "r", "]", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"attribute_names\", r.split(\"/\")[-1])])", "\n", "\n", "", "print", "(", "\"kg2_attribute_names_ids\"", ")", "\n", "# bar = Progbar(len(self.kg2_attribute_names))", "\n", "# i = 0", "\n", "for", "r", "in", "self", ".", "kg2_attribute_names", ":", "\n", "            ", "self", ".", "kg2_attribute_names_ids", ".", "append", "(", "attribute_name2idx", "[", "r", "]", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"attribute_names\", r.split(\"/\")[-1])])", "\n", "\n", "", "self", ".", "attribute_names_ids", "=", "self", ".", "kg1_attribute_names_ids", "+", "self", ".", "kg2_attribute_names_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.transform_attribute_value_ids": [[984, 1005], ["print", "print", "DataSchema.DBP15kData.kg1_attribute_values_ids.append", "DataSchema.DBP15kData.kg2_attribute_values_ids.append"], "methods", ["None"], ["", "def", "transform_attribute_value_ids", "(", "self", ")", ":", "\n", "\n", "        ", "attribute_value2idx", "=", "self", ".", "attribute_value2idx", "\n", "\n", "print", "(", "\"kg1_attribute_values_ids\"", ")", "\n", "# bar = Progbar(len(self.kg1_attribute_values))", "\n", "# i = 0", "\n", "for", "r", "in", "self", ".", "kg1_attribute_values", ":", "\n", "            ", "self", ".", "kg1_attribute_values_ids", ".", "append", "(", "attribute_value2idx", "[", "r", "]", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"attribute_value\", r)])", "\n", "\n", "", "print", "(", "\"kg2_attribute_values_ids\"", ")", "\n", "# bar = Progbar(len(self.kg2_attribute_values))", "\n", "# i = 0", "\n", "for", "r", "in", "self", ".", "kg2_attribute_values", ":", "\n", "            ", "self", ".", "kg2_attribute_values_ids", ".", "append", "(", "attribute_value2idx", "[", "r", "]", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"attribute_value\", r)])", "\n", "\n", "", "self", ".", "attribute_values_ids", "=", "self", ".", "kg1_attribute_values_ids", "+", "self", ".", "kg2_attribute_values_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.cache_all_data": [[1006, 1055], ["DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.cache_data", "DataSchema.RelationalTripletData.cache_all_data"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.cache_all_data"], ["", "def", "cache_all_data", "(", "self", ")", ":", "\n", "        ", "cache_data", "(", "self", ".", "kg1_triples", ",", "self", ".", "cache_path", ".", "cache_kg1_triples_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_triples", ",", "self", ".", "cache_path", ".", "cache_kg2_triples_path", ")", "\n", "cache_data", "(", "self", ".", "kg1_triples_ids", ",", "self", ".", "cache_path", ".", "cache_kg1_triples_ids_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_triples_ids", ",", "self", ".", "cache_path", ".", "cache_kg2_triples_ids_path", ")", "\n", "cache_data", "(", "self", ".", "all_attribute_triples", ",", "self", ".", "cache_path", ".", "cache_all_attribute_triples_path", ")", "\n", "cache_data", "(", "self", ".", "kg1_attribute_triples", ",", "self", ".", "cache_path", ".", "cache_kg1_attribute_triples_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_attribute_triples", ",", "self", ".", "cache_path", ".", "cache_kg2_attribute_triples_path", ")", "\n", "cache_data", "(", "self", ".", "all_attribute_triples_ids", ",", "self", ".", "cache_path", ".", "cache_all_attribute_triples_ids_path", ")", "\n", "cache_data", "(", "self", ".", "kg1_attribute_triples_ids", ",", "self", ".", "cache_path", ".", "cache_kg1_attribute_triples_ids_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_attribute_triples_ids", ",", "self", ".", "cache_path", ".", "cache_kg2_attribute_triples_ids_path", ")", "\n", "cache_data", "(", "self", ".", "all_attribute_names", ",", "self", ".", "cache_path", ".", "cache_all_attribute_names_path", ")", "\n", "cache_data", "(", "self", ".", "all_attribute_values", ",", "self", ".", "cache_path", ".", "cache_all_attribute_values_path", ")", "\n", "\n", "cache_data", "(", "self", ".", "kg1_entities", ",", "self", ".", "cache_path", ".", "cache_kg1_entities_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_entities", ",", "self", ".", "cache_path", ".", "cache_kg2_entities_path", ")", "\n", "cache_data", "(", "self", ".", "kg1_entities_ids", ",", "self", ".", "cache_path", ".", "cache_kg1_entities_ids_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_entities_ids", ",", "self", ".", "cache_path", ".", "cache_kg2_entities_ids_path", ")", "\n", "cache_data", "(", "self", ".", "entities_ids", ",", "self", ".", "cache_path", ".", "cache_entities_ids_path", ")", "\n", "cache_data", "(", "self", ".", "kg1_relations", ",", "self", ".", "cache_path", ".", "cache_kg1_relations_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_relations", ",", "self", ".", "cache_path", ".", "cache_kg2_relations_path", ")", "\n", "cache_data", "(", "self", ".", "kg1_relations_ids", ",", "self", ".", "cache_path", ".", "cache_kg1_relations_ids_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_relations_ids", ",", "self", ".", "cache_path", ".", "cache_kg2_relations_ids_path", ")", "\n", "cache_data", "(", "self", ".", "relations_ids", ",", "self", ".", "cache_path", ".", "cache_relations_ids_path", ")", "\n", "cache_data", "(", "self", ".", "kg1_attribute_names", ",", "self", ".", "cache_path", ".", "cache_kg1_attribute_names_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_attribute_names", ",", "self", ".", "cache_path", ".", "cache_kg2_attribute_names_path", ")", "\n", "cache_data", "(", "self", ".", "kg1_attribute_names_ids", ",", "self", ".", "cache_path", ".", "cache_kg1_attribute_names_ids_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_attribute_names_ids", ",", "self", ".", "cache_path", ".", "cache_kg2_attribute_names_ids_path", ")", "\n", "cache_data", "(", "self", ".", "attribute_names_ids", ",", "self", ".", "cache_path", ".", "cache_attribute_names_ids_path", ")", "\n", "cache_data", "(", "self", ".", "kg1_attribute_values", ",", "self", ".", "cache_path", ".", "cache_kg1_attribute_values_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_attribute_values", ",", "self", ".", "cache_path", ".", "cache_kg2_attribute_values_path", ")", "\n", "cache_data", "(", "self", ".", "kg1_attribute_values_ids", ",", "self", ".", "cache_path", ".", "cache_kg1_attribute_values_ids_path", ")", "\n", "cache_data", "(", "self", ".", "kg2_attribute_values_ids", ",", "self", ".", "cache_path", ".", "cache_kg2_attribute_values_ids_path", ")", "\n", "cache_data", "(", "self", ".", "attribute_values_ids", ",", "self", ".", "cache_path", ".", "cache_attribute_values_ids_path", ")", "\n", "\n", "cache_data", "(", "self", ".", "attribute_name2idx", ",", "self", ".", "cache_path", ".", "cache_attribute_name2idx_path", ")", "\n", "cache_data", "(", "self", ".", "idx2attribute_name", ",", "self", ".", "cache_path", ".", "cache_idx2attribute_name_path", ")", "\n", "cache_data", "(", "self", ".", "attribute_value2idx", ",", "self", ".", "cache_path", ".", "cache_attribute_value2idx_path", ")", "\n", "cache_data", "(", "self", ".", "idx2attribute_value", ",", "self", ".", "cache_path", ".", "cache_idx2attribute_value_path", ")", "\n", "\n", "cache_data", "(", "self", ".", "seeds", ",", "self", ".", "cache_path", ".", "cache_seeds_path", ")", "\n", "cache_data", "(", "self", ".", "train_seeds", ",", "self", ".", "cache_path", ".", "cache_train_seeds_path", ")", "\n", "cache_data", "(", "self", ".", "test_seeds", ",", "self", ".", "cache_path", ".", "cache_test_seeds_path", ")", "\n", "cache_data", "(", "self", ".", "seeds_ids", ",", "self", ".", "cache_path", ".", "cache_seeds_ids_path", ")", "\n", "cache_data", "(", "self", ".", "train_seeds_ids", ",", "self", ".", "cache_path", ".", "cache_train_seeds_ids_path", ")", "\n", "cache_data", "(", "self", ".", "test_seeds_ids", ",", "self", ".", "cache_path", ".", "cache_test_seeds_ids_path", ")", "\n", "cache_data", "(", "self", ".", "left_ids", ",", "self", ".", "cache_path", ".", "cache_left_ids_path", ")", "\n", "cache_data", "(", "self", ".", "right_ids", ",", "self", ".", "cache_path", ".", "cache_right_ids_path", ")", "\n", "RelationalTripletData", ".", "cache_all_data", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.read_meta": [[1056, 1083], ["None"], "methods", ["None"], ["", "def", "read_meta", "(", "self", ",", "meta", ")", ":", "\n", "        ", "self", ".", "entity_count", "=", "meta", "[", "\"entity_count\"", "]", "\n", "self", ".", "relation_count", "=", "meta", "[", "\"relation_count\"", "]", "\n", "self", ".", "triple_count", "=", "meta", "[", "\"triple_count\"", "]", "\n", "self", ".", "train_triples_count", "=", "meta", "[", "\"train_triples_count\"", "]", "\n", "self", ".", "test_triples_count", "=", "meta", "[", "\"test_triples_count\"", "]", "\n", "self", ".", "valid_triples_count", "=", "meta", "[", "\"valid_triples_count\"", "]", "\n", "\n", "self", ".", "kg1_triples_count", "=", "meta", "[", "\"kg1_triples_count\"", "]", "\n", "self", ".", "kg2_triples_count", "=", "meta", "[", "\"kg2_triples_count\"", "]", "\n", "self", ".", "all_attribute_triples_count", "=", "meta", "[", "\"all_attribute_triples_count\"", "]", "\n", "self", ".", "kg1_attribute_triples_count", "=", "meta", "[", "\"kg1_attribute_triples_count\"", "]", "\n", "self", ".", "kg2_attribute_triples_count", "=", "meta", "[", "\"kg2_attribute_triples_count\"", "]", "\n", "self", ".", "alignment_seeds_count", "=", "meta", "[", "\"alignment_seeds_count\"", "]", "\n", "self", ".", "valid_alignment_seeds_count", "=", "meta", "[", "\"valid_alignment_seeds_count\"", "]", "\n", "self", ".", "test_alignment_seeds_count", "=", "meta", "[", "\"test_alignment_seeds_count\"", "]", "\n", "self", ".", "train_alignment_seeds_count", "=", "meta", "[", "\"train_alignment_seeds_count\"", "]", "\n", "self", ".", "all_attribute_names_count", "=", "meta", "[", "\"all_attribute_names_count\"", "]", "\n", "self", ".", "all_attribute_values_count", "=", "meta", "[", "\"all_attribute_values_count\"", "]", "\n", "self", ".", "kg1_entities_count", "=", "meta", "[", "\"kg1_entities_count\"", "]", "\n", "self", ".", "kg2_entities_count", "=", "meta", "[", "\"kg2_entities_count\"", "]", "\n", "self", ".", "kg1_relations_count", "=", "meta", "[", "\"kg1_relations_count\"", "]", "\n", "self", ".", "kg2_relations_count", "=", "meta", "[", "\"kg2_relations_count\"", "]", "\n", "self", ".", "kg1_attribute_names_count", "=", "meta", "[", "\"kg1_attribute_names_count\"", "]", "\n", "self", ".", "kg2_attribute_names_count", "=", "meta", "[", "\"kg2_attribute_names_count\"", "]", "\n", "self", ".", "kg1_attribute_values_count", "=", "meta", "[", "\"kg1_attribute_values_count\"", "]", "\n", "self", ".", "kg2_attribute_values_count", "=", "meta", "[", "\"kg2_attribute_values_count\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.meta": [[1084, 1113], ["None"], "methods", ["None"], ["", "def", "meta", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "\"dataset\"", ":", "self", ".", "dataset", ".", "name", ",", "\n", "\"entity_count\"", ":", "self", ".", "entity_count", ",", "\n", "\"relation_count\"", ":", "self", ".", "relation_count", ",", "\n", "\"triple_count\"", ":", "self", ".", "triple_count", ",", "\n", "\"train_triples_count\"", ":", "self", ".", "train_triples_count", ",", "\n", "\"test_triples_count\"", ":", "self", ".", "test_triples_count", ",", "\n", "\"valid_triples_count\"", ":", "self", ".", "valid_triples_count", ",", "\n", "\n", "\"kg1_triples_count\"", ":", "self", ".", "kg1_triples_count", ",", "\n", "\"kg2_triples_count\"", ":", "self", ".", "kg2_triples_count", ",", "\n", "\"all_attribute_triples_count\"", ":", "self", ".", "all_attribute_triples_count", ",", "\n", "\"kg1_attribute_triples_count\"", ":", "self", ".", "kg1_attribute_triples_count", ",", "\n", "\"kg2_attribute_triples_count\"", ":", "self", ".", "kg2_attribute_triples_count", ",", "\n", "\"alignment_seeds_count\"", ":", "self", ".", "alignment_seeds_count", ",", "\n", "\"valid_alignment_seeds_count\"", ":", "self", ".", "valid_alignment_seeds_count", ",", "\n", "\"test_alignment_seeds_count\"", ":", "self", ".", "test_alignment_seeds_count", ",", "\n", "\"train_alignment_seeds_count\"", ":", "self", ".", "train_alignment_seeds_count", ",", "\n", "\"all_attribute_names_count\"", ":", "self", ".", "all_attribute_names_count", ",", "\n", "\"all_attribute_values_count\"", ":", "self", ".", "all_attribute_values_count", ",", "\n", "\"kg1_entities_count\"", ":", "self", ".", "kg1_entities_count", ",", "\n", "\"kg2_entities_count\"", ":", "self", ".", "kg2_entities_count", ",", "\n", "\"kg1_relations_count\"", ":", "self", ".", "kg1_relations_count", ",", "\n", "\"kg2_relations_count\"", ":", "self", ".", "kg2_relations_count", ",", "\n", "\"kg1_attribute_names_count\"", ":", "self", ".", "kg1_attribute_names_count", ",", "\n", "\"kg2_attribute_names_count\"", ":", "self", ".", "kg2_attribute_names_count", ",", "\n", "\"kg1_attribute_values_count\"", ":", "self", ".", "kg1_attribute_values_count", ",", "\n", "\"kg2_attribute_values_count\"", ":", "self", ".", "kg2_attribute_values_count", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.dump": [[1115, 1155], ["None"], "methods", ["None"], ["", "def", "dump", "(", "self", ")", ":", "\n", "        ", "dump", "=", "[", "\n", "\"\"", ",", "\n", "\"----------Metadata Info for Dataset:%s----------------\"", "%", "self", ".", "dataset", ".", "name", ",", "\n", "\"Total Entities           :%s\"", "%", "self", ".", "entity_count", ",", "\n", "\"Total Relations          :%s\"", "%", "self", ".", "relation_count", ",", "\n", "\"Total Attribute Names    :%s\"", "%", "self", ".", "all_attribute_names_count", ",", "\n", "\"Total Attribute Values   :%s\"", "%", "self", ".", "all_attribute_values_count", ",", "\n", "\n", "\"Total Triples            :%s\"", "%", "self", ".", "triple_count", ",", "\n", "\"Total Training Triples   :%s\"", "%", "self", ".", "train_triples_count", ",", "\n", "\"Total Testing Triples    :%s\"", "%", "self", ".", "test_triples_count", ",", "\n", "\"Total Validation Triples :%s\"", "%", "self", ".", "valid_triples_count", ",", "\n", "\n", "\"Total Attribute Triples  :%s\"", "%", "self", ".", "all_attribute_triples_count", ",", "\n", "\n", "\"Total Alignment Seeds              :%s\"", "%", "self", ".", "alignment_seeds_count", ",", "\n", "\"Total Validation Alignment Seeds   :%s\"", "%", "self", ".", "valid_alignment_seeds_count", ",", "\n", "\"Total Testing Alignment Seeds      :%s\"", "%", "self", ".", "test_alignment_seeds_count", ",", "\n", "\"Total Training Alignment Seeds     :%s\"", "%", "self", ".", "train_alignment_seeds_count", ",", "\n", "\n", "\"KG1\"", ",", "\n", "\"triples           :%d\"", "%", "self", ".", "kg1_triples_count", ",", "\n", "\"attribute triples :%d\"", "%", "self", ".", "kg1_attribute_triples_count", ",", "\n", "\"entities          :%d\"", "%", "self", ".", "kg1_entities_count", ",", "\n", "\"relations         :%d\"", "%", "self", ".", "kg1_relations_count", ",", "\n", "\"attribute_names   :%d\"", "%", "self", ".", "kg1_attribute_names_count", ",", "\n", "\"attribute_values  :%d\"", "%", "self", ".", "kg1_attribute_values_count", ",", "\n", "\n", "\"KG2\"", ",", "\n", "\"triples           :%d\"", "%", "self", ".", "kg2_triples_count", ",", "\n", "\"attribute triples :%d\"", "%", "self", ".", "kg2_attribute_triples_count", ",", "\n", "\"entities          :%d\"", "%", "self", ".", "kg2_entities_count", ",", "\n", "\"relations         :%d\"", "%", "self", ".", "kg2_relations_count", ",", "\n", "\"attribute_names   :%d\"", "%", "self", ".", "kg2_attribute_names_count", ",", "\n", "\"attribute_values  :%d\"", "%", "self", ".", "kg2_attribute_values_count", ",", "\n", "\"---------------------------------------------\"", ",", "\n", "\"\"", ",", "\n", "]", "\n", "return", "dump", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.cache_data": [[34, 37], ["open", "pickle.dump", "str"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.DBP15kData.dump"], ["def", "cache_data", "(", "data", ",", "cache_path", ":", "Union", "[", "str", ",", "Path", "]", ")", ":", "\n", "    ", "with", "open", "(", "str", "(", "cache_path", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "data", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_cache": [[39, 42], ["open", "pickle.load", "str"], "function", ["None"], ["", "", "def", "read_cache", "(", "cache_path", ":", "Union", "[", "str", ",", "Path", "]", ")", ":", "\n", "    ", "with", "open", "(", "str", "(", "cache_path", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "return", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_ids_and_names": [[44, 54], ["open", "file.readlines", "str", "line.strip().split", "ids.append", "names.append", "int", "line.strip"], "function", ["None"], ["", "", "def", "read_ids_and_names", "(", "file_path", ":", "Union", "[", "str", ",", "Path", "]", ",", "sp", "=", "\"\\t\"", ")", "->", "Tuple", "[", "List", "[", "int", "]", ",", "List", "[", "str", "]", "]", ":", "\n", "    ", "ids", "=", "[", "]", "\n", "names", "=", "[", "]", "\n", "with", "open", "(", "str", "(", "file_path", ")", ",", "'r'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "file", ":", "\n", "        ", "lines", "=", "file", ".", "readlines", "(", ")", "\n", "for", "line", "in", "lines", ":", "\n", "            ", "id_to_name", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "sp", ")", "\n", "ids", ".", "append", "(", "int", "(", "id_to_name", "[", "0", "]", ")", ")", "\n", "names", ".", "append", "(", "id_to_name", "[", "1", "]", ")", "\n", "", "", "return", "ids", ",", "names", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_triple_hrt": [[56, 66], ["list", "open", "set", "str", "line.split", "set.add"], "function", ["None"], ["", "def", "read_triple_hrt", "(", "file_path", ":", "Union", "[", "str", ",", "Path", "]", ")", "->", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", ":", "\n", "    ", "with", "open", "(", "str", "(", "file_path", ")", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "fr", ":", "\n", "        ", "triple", "=", "set", "(", ")", "\n", "for", "line", "in", "fr", ":", "\n", "            ", "line_split", "=", "line", ".", "split", "(", ")", "\n", "head", "=", "line_split", "[", "0", "]", "\n", "rel", "=", "line_split", "[", "1", "]", "\n", "tail", "=", "line_split", "[", "2", "]", "\n", "triple", ".", "add", "(", "(", "head", ",", "rel", ",", "tail", ")", ")", "\n", "", "", "return", "list", "(", "triple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_attribute_triple_eav": [[68, 78], ["list", "open", "set", "str", "line.split", "set.add"], "function", ["None"], ["", "def", "read_attribute_triple_eav", "(", "file_path", ":", "Union", "[", "str", ",", "Path", "]", ")", "->", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", ":", "\n", "    ", "with", "open", "(", "str", "(", "file_path", ")", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "fr", ":", "\n", "        ", "triple", "=", "set", "(", ")", "\n", "for", "line", "in", "fr", ":", "\n", "            ", "line_split", "=", "line", ".", "split", "(", ")", "\n", "entity", "=", "line_split", "[", "0", "]", "[", "1", ":", "-", "1", "]", "\n", "attr", "=", "line_split", "[", "1", "]", "[", "1", ":", "-", "1", "]", "\n", "value", "=", "line_split", "[", "2", "]", "\n", "triple", ".", "add", "(", "(", "entity", ",", "attr", ",", "value", ")", ")", "\n", "", "", "return", "list", "(", "triple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.save_triple_hrt": [[80, 84], ["open", "str", "fr.write"], "function", ["None"], ["", "def", "save_triple_hrt", "(", "triples", ":", "List", "[", "Tuple", "[", "str", ",", "str", ",", "str", "]", "]", ",", "file_path", ":", "Union", "[", "str", ",", "Path", "]", ")", ":", "\n", "    ", "with", "open", "(", "str", "(", "file_path", ")", ",", "'w'", ")", "as", "fr", ":", "\n", "        ", "for", "triple", "in", "triples", ":", "\n", "            ", "fr", ".", "write", "(", "\"%s\\t%s\\t%s\\n\"", "%", "(", "triple", "[", "0", "]", ",", "triple", "[", "1", "]", ",", "triple", "[", "2", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_triple_ids_hrt": [[86, 96], ["list", "open", "set", "str", "line.split", "int", "int", "int", "set.add"], "function", ["None"], ["", "", "", "def", "read_triple_ids_hrt", "(", "file_path", ":", "Union", "[", "str", ",", "Path", "]", ")", "->", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", ":", "\n", "    ", "with", "open", "(", "str", "(", "file_path", ")", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "fr", ":", "\n", "        ", "triple", "=", "set", "(", ")", "\n", "for", "line", "in", "fr", ":", "\n", "            ", "line_split", "=", "line", ".", "split", "(", ")", "\n", "head", "=", "int", "(", "line_split", "[", "0", "]", ")", "\n", "rel", "=", "int", "(", "line_split", "[", "1", "]", ")", "\n", "tail", "=", "int", "(", "line_split", "[", "2", "]", ")", "\n", "triple", ".", "add", "(", "(", "head", ",", "rel", ",", "tail", ")", ")", "\n", "", "", "return", "list", "(", "triple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_triple_ids_htr2hrt": [[98, 108], ["list", "open", "set", "str", "line.split", "int", "int", "int", "set.add"], "function", ["None"], ["", "def", "read_triple_ids_htr2hrt", "(", "file_path", ":", "Union", "[", "str", ",", "Path", "]", ")", "->", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", ":", "\n", "    ", "with", "open", "(", "str", "(", "file_path", ")", ",", "'r'", ")", "as", "fr", ":", "\n", "        ", "triple", "=", "set", "(", ")", "\n", "for", "line", "in", "fr", ":", "\n", "            ", "line_split", "=", "line", ".", "split", "(", ")", "\n", "head", "=", "int", "(", "line_split", "[", "0", "]", ")", "\n", "tail", "=", "int", "(", "line_split", "[", "1", "]", ")", "\n", "rel", "=", "int", "(", "line_split", "[", "2", "]", ")", "\n", "triple", ".", "add", "(", "(", "head", ",", "rel", ",", "tail", ")", ")", "\n", "", "", "return", "list", "(", "triple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.save_triple_ids_hrt": [[110, 114], ["open", "str", "fr.write"], "function", ["None"], ["", "def", "save_triple_ids_hrt", "(", "triples", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", ",", "file_path", ":", "Union", "[", "str", ",", "Path", "]", ")", ":", "\n", "    ", "with", "open", "(", "str", "(", "file_path", ")", ",", "'w'", ")", "as", "fr", ":", "\n", "        ", "for", "triple", "in", "triples", ":", "\n", "            ", "fr", ".", "write", "(", "\"%d\\t%d\\t%d\\n\"", "%", "(", "triple", "[", "0", "]", ",", "triple", "[", "1", "]", ",", "triple", "[", "2", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.append_align_triple": [[116, 135], ["triple_replace_with_align.append", "triple_replace_with_align.append", "triple_replace_with_align.append"], "function", ["None"], ["", "", "", "def", "append_align_triple", "(", "triple", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", ",", "entity_align_list", ":", "List", "[", "Tuple", "[", "int", ",", "int", "]", "]", ")", ":", "\n", "# \u4f7f\u7528\u5bf9\u9f50\u5b9e\u4f53\u66ff\u6362\u5934\u8282\u70b9\uff0c\u6784\u9020\u5c5e\u6027\u4e09\u5143\u7ec4\u6570\u636e\uff0c\u4ece\u800c\u8fbe\u5230\u5229\u7528\u5bf9\u9f50\u5b9e\u4f53\u6570\u636e\u7684\u76ee\u7684", "\n", "    ", "align_set", "=", "{", "}", "\n", "for", "i", "in", "entity_align_list", ":", "\n", "        ", "align_set", "[", "i", "[", "0", "]", "]", "=", "i", "[", "1", "]", "\n", "align_set", "[", "i", "[", "1", "]", "]", "=", "i", "[", "0", "]", "\n", "", "triple_replace_with_align", "=", "[", "]", "\n", "# bar = Progbar(max_step=len(triple))", "\n", "# i = 0", "\n", "for", "entity", ",", "attr", ",", "value", "in", "triple", ":", "\n", "        ", "if", "entity", "in", "align_set", ":", "\n", "            ", "triple_replace_with_align", ".", "append", "(", "(", "align_set", "[", "entity", "]", ",", "attr", ",", "value", ")", ")", "\n", "", "if", "value", "in", "align_set", ":", "\n", "            ", "triple_replace_with_align", ".", "append", "(", "(", "entity", ",", "attr", ",", "align_set", "[", "value", "]", ")", ")", "\n", "", "if", "(", "entity", "in", "align_set", ")", "and", "(", "value", "in", "align_set", ")", ":", "\n", "            ", "triple_replace_with_align", ".", "append", "(", "(", "align_set", "[", "entity", "]", ",", "attr", ",", "align_set", "[", "value", "]", ")", ")", "\n", "# i += 1", "\n", "# bar.update(i, [(\"step\", i)])", "\n", "", "", "return", "triple", "+", "triple_replace_with_align", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.build_map_tr_h": [[137, 144], ["collections.defaultdict", "tr_h[].add"], "function", ["None"], ["", "def", "build_map_tr_h", "(", "triplets", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", ")", "->", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Set", "[", "int", "]", "]", ":", "\n", "    ", "\"\"\" Function to read the list of heads for the given tail and relation pair. \"\"\"", "\n", "tr_h", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Set", "[", "int", "]", "]", "=", "defaultdict", "(", "set", ")", "\n", "for", "h", ",", "r", ",", "t", "in", "triplets", ":", "\n", "        ", "tr_h", "[", "(", "t", ",", "r", ")", "]", ".", "add", "(", "h", ")", "\n", "\n", "", "return", "tr_h", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.build_map_hr_t": [[146, 153], ["collections.defaultdict", "hr_t[].add"], "function", ["None"], ["", "def", "build_map_hr_t", "(", "triplets", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", ")", "->", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Set", "[", "int", "]", "]", ":", "\n", "    ", "\"\"\" Function to read the list of tails for the given head and relation pair. \"\"\"", "\n", "hr_t", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Set", "[", "int", "]", "]", "=", "defaultdict", "(", "set", ")", "\n", "for", "h", ",", "r", ",", "t", "in", "triplets", ":", "\n", "        ", "hr_t", "[", "(", "h", ",", "r", ")", "]", ".", "add", "(", "t", ")", "\n", "\n", "", "return", "hr_t", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_seeds_ids": [[155, 162], ["open", "str", "line[].split", "ret.append", "int", "int"], "function", ["None"], ["", "def", "read_seeds_ids", "(", "file_path", ":", "Union", "[", "str", ",", "Path", "]", ")", "->", "List", "[", "Tuple", "[", "int", ",", "int", "]", "]", ":", "\n", "    ", "with", "open", "(", "str", "(", "file_path", ")", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "        ", "ret", "=", "[", "]", "\n", "for", "line", "in", "f", ":", "\n", "            ", "th", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "'\\t'", ")", "\n", "ret", ".", "append", "(", "(", "int", "(", "th", "[", "0", "]", ")", ",", "int", "(", "th", "[", "1", "]", ")", ")", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.DataSchema.read_seeds": [[164, 171], ["open", "str", "line[].split", "ret.append"], "function", ["None"], ["", "", "def", "read_seeds", "(", "file_path", ":", "Union", "[", "str", ",", "Path", "]", ")", "->", "List", "[", "Tuple", "[", "str", ",", "str", "]", "]", ":", "\n", "    ", "with", "open", "(", "str", "(", "file_path", ")", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "        ", "ret", "=", "[", "]", "\n", "for", "line", "in", "f", ":", "\n", "            ", "th", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "'\\t'", ")", "\n", "ret", ".", "append", "(", "(", "th", "[", "0", "]", ",", "th", "[", "1", "]", ")", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.AlignDataset.__init__": [[11, 27], ["len", "len", "len", "dataloader.AlignDataset.count_frequency", "dataloader.AlignDataset.get_true_head_and_tail"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TrainDataset.count_frequency", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TrainDataset.get_true_head_and_tail"], ["    ", "def", "__init__", "(", "self", ",", "\n", "seeds", ":", "List", "[", "Tuple", "[", "int", ",", "int", "]", "]", ",", "\n", "kg1_entity_list", ":", "List", "[", "int", "]", ",", "\n", "kg2_entity_list", ":", "List", "[", "int", "]", ",", "\n", "nentity", ",", "negative_sample_size", ",", "mode", ")", ":", "\n", "        ", "self", ".", "seeds", "=", "seeds", "\n", "self", ".", "len", "=", "len", "(", "seeds", ")", "\n", "self", ".", "kg1_entity_list", "=", "kg1_entity_list", "\n", "self", ".", "kg2_entity_list", "=", "kg2_entity_list", "\n", "self", ".", "kg1_entity_size", "=", "len", "(", "kg1_entity_list", ")", "\n", "self", ".", "kg2_entity_size", "=", "len", "(", "kg2_entity_list", ")", "\n", "self", ".", "nentity", "=", "nentity", "\n", "self", ".", "negative_sample_size", "=", "negative_sample_size", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "count", "=", "self", ".", "count_frequency", "(", "seeds", ")", "\n", "self", ".", "true_head", ",", "self", ".", "true_tail", "=", "self", ".", "get_true_head_and_tail", "(", "seeds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.AlignDataset.__len__": [[28, 30], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.AlignDataset.__getitem__": [[31, 75], ["torch.sqrt", "torch.LongTensor", "torch.LongTensor", "negative_sample_list.append", "numpy.concatenate", "torch.Tensor", "numpy.random.randint", "numpy.array", "numpy.in1d", "list", "numpy.random.randint", "numpy.array", "numpy.in1d", "ValueError", "map", "list", "map"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "positive_sample", "=", "self", ".", "seeds", "[", "idx", "]", "\n", "\n", "head", ",", "tail", "=", "positive_sample", "\n", "\n", "subsampling_weight", "=", "self", ".", "count", "[", "head", "]", "+", "self", ".", "count", "[", "tail", "]", "\n", "subsampling_weight", "=", "torch", ".", "sqrt", "(", "1", "/", "torch", ".", "Tensor", "(", "[", "subsampling_weight", "]", ")", ")", "\n", "\n", "negative_sample_list", "=", "[", "]", "\n", "negative_sample_size", "=", "0", "\n", "\n", "while", "negative_sample_size", "<", "self", ".", "negative_sample_size", ":", "\n", "\n", "            ", "if", "self", ".", "mode", "==", "'align-head-batch'", ":", "\n", "                ", "negative_sample", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "kg1_entity_size", ",", "size", "=", "self", ".", "negative_sample_size", "*", "2", ")", "\n", "negative_sample", "=", "np", ".", "array", "(", "list", "(", "map", "(", "lambda", "x", ":", "self", ".", "kg1_entity_list", "[", "x", "]", ",", "negative_sample", ")", ")", ")", "\n", "mask", "=", "np", ".", "in1d", "(", "\n", "negative_sample", ",", "\n", "self", ".", "true_head", "[", "tail", "]", ",", "\n", "assume_unique", "=", "True", ",", "\n", "invert", "=", "True", "\n", ")", "\n", "", "elif", "self", ".", "mode", "==", "'align-tail-batch'", ":", "\n", "                ", "negative_sample", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "kg2_entity_size", ",", "size", "=", "self", ".", "negative_sample_size", "*", "2", ")", "\n", "negative_sample", "=", "np", ".", "array", "(", "list", "(", "map", "(", "lambda", "x", ":", "self", ".", "kg2_entity_list", "[", "x", "]", ",", "negative_sample", ")", ")", ")", "\n", "mask", "=", "np", ".", "in1d", "(", "\n", "negative_sample", ",", "\n", "self", ".", "true_tail", "[", "head", "]", ",", "\n", "assume_unique", "=", "True", ",", "\n", "invert", "=", "True", "\n", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'Training batch mode %s not supported'", "%", "self", ".", "mode", ")", "\n", "", "negative_sample", "=", "negative_sample", "[", "mask", "]", "\n", "negative_sample_list", ".", "append", "(", "negative_sample", ")", "\n", "negative_sample_size", "+=", "negative_sample", ".", "size", "\n", "\n", "", "negative_sample", "=", "np", ".", "concatenate", "(", "negative_sample_list", ")", "[", ":", "self", ".", "negative_sample_size", "]", "\n", "\n", "negative_sample", "=", "torch", ".", "LongTensor", "(", "negative_sample", ")", "\n", "\n", "positive_sample", "=", "torch", ".", "LongTensor", "(", "positive_sample", ")", "\n", "\n", "return", "positive_sample", ",", "negative_sample", ",", "subsampling_weight", ",", "self", ".", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.AlignDataset.collate_fn": [[76, 83], ["torch.stack", "torch.stack", "torch.cat"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "positive_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "0", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "negative_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "1", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "subsample_weight", "=", "torch", ".", "cat", "(", "[", "_", "[", "2", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "mode", "=", "data", "[", "0", "]", "[", "3", "]", "\n", "return", "positive_sample", ",", "negative_sample", ",", "subsample_weight", ",", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.AlignDataset.count_frequency": [[84, 101], ["None"], "methods", ["None"], ["", "def", "count_frequency", "(", "self", ",", "seeds", ":", "List", "[", "Tuple", "[", "int", ",", "int", "]", "]", ",", "start", "=", "4", ")", ":", "\n", "        ", "\"\"\"\n        Get frequency of a partial triple like (head, relation) or (relation, tail)\n        The frequency will be used for subsampling like word2vec\n        \"\"\"", "\n", "count", "=", "{", "}", "\n", "for", "a", ",", "b", "in", "seeds", ":", "\n", "            ", "if", "a", "not", "in", "count", ":", "\n", "                ", "count", "[", "a", "]", "=", "start", "\n", "", "else", ":", "\n", "                ", "count", "[", "a", "]", "+=", "1", "\n", "\n", "", "if", "b", "not", "in", "count", ":", "\n", "                ", "count", "[", "b", "]", "=", "start", "\n", "", "else", ":", "\n", "                ", "count", "[", "b", "]", "+=", "1", "\n", "", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.AlignDataset.get_true_head_and_tail": [[102, 126], ["true_tail[].append", "true_head[].append", "numpy.array", "numpy.array", "list", "list", "set", "set"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_true_head_and_tail", "(", "seeds", ")", ":", "\n", "        ", "\"\"\"\n        Build a dictionary of true triples that will\n        be used to filter these true triples for negative sampling\n        \"\"\"", "\n", "\n", "true_head", "=", "{", "}", "\n", "true_tail", "=", "{", "}", "\n", "\n", "for", "a", ",", "b", "in", "seeds", ":", "\n", "            ", "if", "a", "not", "in", "true_tail", ":", "\n", "                ", "true_tail", "[", "a", "]", "=", "[", "]", "\n", "", "true_tail", "[", "a", "]", ".", "append", "(", "b", ")", "\n", "if", "b", "not", "in", "true_head", ":", "\n", "                ", "true_head", "[", "b", "]", "=", "[", "]", "\n", "", "true_head", "[", "b", "]", ".", "append", "(", "a", ")", "\n", "\n", "", "for", "b", "in", "true_head", ":", "\n", "            ", "true_head", "[", "b", "]", "=", "np", ".", "array", "(", "list", "(", "set", "(", "true_head", "[", "b", "]", ")", ")", ")", "\n", "", "for", "a", "in", "true_tail", ":", "\n", "            ", "true_tail", "[", "a", "]", "=", "np", ".", "array", "(", "list", "(", "set", "(", "true_tail", "[", "a", "]", ")", ")", ")", "\n", "\n", "", "return", "true_head", ",", "true_tail", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TrainDataset.__init__": [[129, 143], ["len", "set", "dataloader.TrainDataset.count_frequency", "dataloader.TrainDataset.get_true_head_and_tail"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TrainDataset.count_frequency", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TrainDataset.get_true_head_and_tail"], ["    ", "def", "__init__", "(", "self", ",", "\n", "triples", ":", "List", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", "]", ",", "\n", "nentity", ",", "nrelation", ",", "nvalue", ",", "\n", "negative_sample_size", ",", "mode", ")", ":", "\n", "        ", "self", ".", "len", "=", "len", "(", "triples", ")", "\n", "self", ".", "triples", "=", "triples", "\n", "self", ".", "triple_set", "=", "set", "(", "triples", ")", "\n", "self", ".", "nentity", "=", "nentity", "\n", "self", ".", "nrelation", "=", "nrelation", "\n", "self", ".", "nvalue", "=", "nvalue", "\n", "self", ".", "negative_sample_size", "=", "negative_sample_size", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "count", "=", "self", ".", "count_frequency", "(", "triples", ")", "\n", "self", ".", "true_head", ",", "self", ".", "true_tail", "=", "self", ".", "get_true_head_and_tail", "(", "self", ".", "triples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TrainDataset.__len__": [[144, 146], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TrainDataset.__getitem__": [[147, 189], ["torch.sqrt", "torch.LongTensor", "torch.LongTensor", "negative_sample_list.append", "numpy.concatenate", "torch.Tensor", "numpy.random.randint", "numpy.in1d", "numpy.random.randint", "numpy.in1d", "ValueError"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "positive_sample", "=", "self", ".", "triples", "[", "idx", "]", "\n", "\n", "head", ",", "relation", ",", "tail", "=", "positive_sample", "\n", "\n", "subsampling_weight", "=", "self", ".", "count", "[", "(", "head", ",", "relation", ")", "]", "+", "self", ".", "count", "[", "(", "tail", ",", "-", "relation", "-", "1", ")", "]", "\n", "subsampling_weight", "=", "torch", ".", "sqrt", "(", "1", "/", "torch", ".", "Tensor", "(", "[", "subsampling_weight", "]", ")", ")", "\n", "\n", "negative_sample_list", "=", "[", "]", "\n", "negative_sample_size", "=", "0", "\n", "\n", "while", "negative_sample_size", "<", "self", ".", "negative_sample_size", ":", "\n", "\n", "            ", "if", "self", ".", "mode", "==", "'head-batch'", ":", "\n", "                ", "negative_sample", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "nentity", ",", "size", "=", "self", ".", "negative_sample_size", "*", "2", ")", "\n", "mask", "=", "np", ".", "in1d", "(", "\n", "negative_sample", ",", "\n", "self", ".", "true_head", "[", "(", "relation", ",", "tail", ")", "]", ",", "\n", "assume_unique", "=", "True", ",", "\n", "invert", "=", "True", "\n", ")", "\n", "", "elif", "self", ".", "mode", "==", "'tail-batch'", ":", "\n", "                ", "negative_sample", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "nvalue", ",", "size", "=", "self", ".", "negative_sample_size", "*", "2", ")", "\n", "mask", "=", "np", ".", "in1d", "(", "\n", "negative_sample", ",", "\n", "self", ".", "true_tail", "[", "(", "head", ",", "relation", ")", "]", ",", "\n", "assume_unique", "=", "True", ",", "\n", "invert", "=", "True", "\n", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'Training batch mode %s not supported'", "%", "self", ".", "mode", ")", "\n", "", "negative_sample", "=", "negative_sample", "[", "mask", "]", "\n", "negative_sample_list", ".", "append", "(", "negative_sample", ")", "\n", "negative_sample_size", "+=", "negative_sample", ".", "size", "\n", "\n", "", "negative_sample", "=", "np", ".", "concatenate", "(", "negative_sample_list", ")", "[", ":", "self", ".", "negative_sample_size", "]", "\n", "\n", "negative_sample", "=", "torch", ".", "LongTensor", "(", "negative_sample", ")", "\n", "\n", "positive_sample", "=", "torch", ".", "LongTensor", "(", "positive_sample", ")", "\n", "\n", "return", "positive_sample", ",", "negative_sample", ",", "subsampling_weight", ",", "self", ".", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TrainDataset.collate_fn": [[190, 197], ["torch.stack", "torch.stack", "torch.cat"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "positive_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "0", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "negative_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "1", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "subsample_weight", "=", "torch", ".", "cat", "(", "[", "_", "[", "2", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "mode", "=", "data", "[", "0", "]", "[", "3", "]", "\n", "return", "positive_sample", ",", "negative_sample", ",", "subsample_weight", ",", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TrainDataset.count_frequency": [[198, 216], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "count_frequency", "(", "triples", ",", "start", "=", "4", ")", ":", "\n", "        ", "\"\"\"\n        Get frequency of a partial triple like (head, relation) or (relation, tail)\n        The frequency will be used for subsampling like word2vec\n        \"\"\"", "\n", "count", "=", "{", "}", "\n", "for", "head", ",", "relation", ",", "tail", "in", "triples", ":", "\n", "            ", "if", "(", "head", ",", "relation", ")", "not", "in", "count", ":", "\n", "                ", "count", "[", "(", "head", ",", "relation", ")", "]", "=", "start", "\n", "", "else", ":", "\n", "                ", "count", "[", "(", "head", ",", "relation", ")", "]", "+=", "1", "\n", "\n", "", "if", "(", "tail", ",", "-", "relation", "-", "1", ")", "not", "in", "count", ":", "\n", "                ", "count", "[", "(", "tail", ",", "-", "relation", "-", "1", ")", "]", "=", "start", "\n", "", "else", ":", "\n", "                ", "count", "[", "(", "tail", ",", "-", "relation", "-", "1", ")", "]", "+=", "1", "\n", "", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TrainDataset.get_true_head_and_tail": [[217, 241], ["true_tail[].append", "true_head[].append", "numpy.array", "numpy.array", "list", "list", "set", "set"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_true_head_and_tail", "(", "triples", ")", ":", "\n", "        ", "\"\"\"\n        Build a dictionary of true triples that will\n        be used to filter these true triples for negative sampling\n        \"\"\"", "\n", "\n", "true_head", "=", "{", "}", "\n", "true_tail", "=", "{", "}", "\n", "\n", "for", "head", ",", "relation", ",", "tail", "in", "triples", ":", "\n", "            ", "if", "(", "head", ",", "relation", ")", "not", "in", "true_tail", ":", "\n", "                ", "true_tail", "[", "(", "head", ",", "relation", ")", "]", "=", "[", "]", "\n", "", "true_tail", "[", "(", "head", ",", "relation", ")", "]", ".", "append", "(", "tail", ")", "\n", "if", "(", "relation", ",", "tail", ")", "not", "in", "true_head", ":", "\n", "                ", "true_head", "[", "(", "relation", ",", "tail", ")", "]", "=", "[", "]", "\n", "", "true_head", "[", "(", "relation", ",", "tail", ")", "]", ".", "append", "(", "head", ")", "\n", "\n", "", "for", "relation", ",", "tail", "in", "true_head", ":", "\n", "            ", "true_head", "[", "(", "relation", ",", "tail", ")", "]", "=", "np", ".", "array", "(", "list", "(", "set", "(", "true_head", "[", "(", "relation", ",", "tail", ")", "]", ")", ")", ")", "\n", "", "for", "head", ",", "relation", "in", "true_tail", ":", "\n", "            ", "true_tail", "[", "(", "head", ",", "relation", ")", "]", "=", "np", ".", "array", "(", "list", "(", "set", "(", "true_tail", "[", "(", "head", ",", "relation", ")", "]", ")", ")", ")", "\n", "\n", "", "return", "true_head", ",", "true_tail", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TestDataset.__init__": [[244, 251], ["len", "set"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "triples", ",", "all_true_triples", ",", "nentity", ",", "nrelation", ",", "mode", ")", ":", "\n", "        ", "self", ".", "len", "=", "len", "(", "triples", ")", "\n", "self", ".", "triple_set", "=", "set", "(", "all_true_triples", ")", "\n", "self", ".", "triples", "=", "triples", "\n", "self", ".", "nentity", "=", "nentity", "\n", "self", ".", "nrelation", "=", "nrelation", "\n", "self", ".", "mode", "=", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TestDataset.__len__": [[252, 254], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TestDataset.__getitem__": [[255, 280], ["torch.LongTensor", "tmp[].float", "torch.LongTensor", "range", "ValueError", "range", "range"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "head", ",", "relation", ",", "tail", "=", "self", ".", "triples", "[", "idx", "]", "\n", "\n", "if", "self", ".", "mode", "==", "'head-batch'", ":", "\n", "            ", "tmp", "=", "[", "(", "0", ",", "rand_head", ")", "if", "(", "rand_head", ",", "relation", ",", "tail", ")", "not", "in", "self", ".", "triple_set", "\n", "else", "(", "-", "1", ",", "head", ")", "for", "rand_head", "in", "range", "(", "self", ".", "nentity", ")", "]", "\n", "tmp", "[", "head", "]", "=", "(", "0", ",", "head", ")", "\n", "", "elif", "self", ".", "mode", "==", "'tail-batch'", ":", "\n", "            ", "tmp", "=", "[", "(", "0", ",", "rand_tail", ")", "if", "(", "head", ",", "relation", ",", "rand_tail", ")", "not", "in", "self", ".", "triple_set", "\n", "else", "(", "-", "1", ",", "tail", ")", "for", "rand_tail", "in", "range", "(", "self", ".", "nentity", ")", "]", "\n", "tmp", "[", "tail", "]", "=", "(", "0", ",", "tail", ")", "\n", "", "elif", "self", ".", "mode", "==", "'relation-batch'", ":", "\n", "            ", "tmp", "=", "[", "(", "0", ",", "rand_relation", ")", "if", "(", "head", ",", "rand_relation", ",", "tail", ")", "not", "in", "self", ".", "triple_set", "\n", "else", "(", "-", "1", ",", "relation", ")", "for", "rand_relation", "in", "range", "(", "self", ".", "nentity", ")", "]", "\n", "tmp", "[", "relation", "]", "=", "(", "0", ",", "relation", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'negative batch mode %s not supported'", "%", "self", ".", "mode", ")", "\n", "\n", "", "tmp", "=", "torch", ".", "LongTensor", "(", "tmp", ")", "\n", "filter_bias", "=", "tmp", "[", ":", ",", "0", "]", ".", "float", "(", ")", "\n", "negative_sample", "=", "tmp", "[", ":", ",", "1", "]", "\n", "\n", "positive_sample", "=", "torch", ".", "LongTensor", "(", "(", "head", ",", "relation", ",", "tail", ")", ")", "\n", "\n", "return", "positive_sample", ",", "negative_sample", ",", "filter_bias", ",", "self", ".", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.TestDataset.collate_fn": [[281, 288], ["torch.stack", "torch.stack", "torch.stack"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "positive_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "0", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "negative_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "1", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "filter_bias", "=", "torch", ".", "stack", "(", "[", "_", "[", "2", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "mode", "=", "data", "[", "0", "]", "[", "3", "]", "\n", "return", "positive_sample", ",", "negative_sample", ",", "filter_bias", ",", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.BidirectionalOneShotIterator.__init__": [[291, 296], ["dataloader.BidirectionalOneShotIterator.one_shot_iterator", "dataloader.BidirectionalOneShotIterator.one_shot_iterator"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.BidirectionalOneShotIterator.one_shot_iterator", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.BidirectionalOneShotIterator.one_shot_iterator"], ["    ", "def", "__init__", "(", "self", ",", "dataloader_head", ",", "dataloader_tail", ")", ":", "\n", "        ", "self", ".", "iterator_head", "=", "self", ".", "one_shot_iterator", "(", "dataloader_head", ")", "\n", "\n", "self", ".", "iterator_tail", "=", "self", ".", "one_shot_iterator", "(", "dataloader_tail", ")", "\n", "self", ".", "step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.BidirectionalOneShotIterator.__next__": [[297, 304], ["next", "next"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "self", ".", "step", "+=", "1", "\n", "if", "self", ".", "step", "%", "2", "==", "0", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "iterator_head", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "iterator_tail", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.BidirectionalOneShotIterator.__iter__": [[305, 312], ["next", "next"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "step", "+=", "1", "\n", "if", "self", ".", "step", "%", "2", "==", "0", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "iterator_head", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "iterator_tail", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.dataloader.BidirectionalOneShotIterator.one_shot_iterator": [[313, 321], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "one_shot_iterator", "(", "dataloader", ")", ":", "\n", "        ", "\"\"\"\n        Transform a PyTorch Dataloader into python iterator\n        \"\"\"", "\n", "while", "True", ":", "\n", "            ", "for", "data", "in", "dataloader", ":", "\n", "                ", "yield", "data", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerControl._new_training": [[45, 48], ["None"], "methods", ["None"], ["def", "_new_training", "(", "self", ")", ":", "\n", "        ", "\"\"\" Internal method that resets the variable for a new training. \"\"\"", "\n", "self", ".", "should_training_stop", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerControl._new_epoch": [[49, 52], ["None"], "methods", ["None"], ["", "def", "_new_epoch", "(", "self", ")", ":", "\n", "        ", "\"\"\" Internal method that resets the variable for a new epoch. \"\"\"", "\n", "self", ".", "should_epoch_stop", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerControl._new_step": [[53, 58], ["None"], "methods", ["None"], ["", "def", "_new_step", "(", "self", ")", ":", "\n", "        ", "\"\"\" Internal method that resets the variable for a new step. \"\"\"", "\n", "self", ".", "should_save", "=", "False", "\n", "self", ".", "should_evaluate", "=", "False", "\n", "self", ".", "should_log", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_init_end": [[110, 115], ["None"], "methods", ["None"], ["def", "on_init_end", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called at the end of the initialization of the :class:`~transformers.Trainer`.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_train_begin": [[116, 121], ["None"], "methods", ["None"], ["", "def", "on_train_begin", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called at the beginning of training.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_train_end": [[122, 127], ["None"], "methods", ["None"], ["", "def", "on_train_end", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called at the end of training.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_epoch_begin": [[128, 133], ["None"], "methods", ["None"], ["", "def", "on_epoch_begin", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called at the beginning of an epoch.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_epoch_end": [[134, 139], ["None"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called at the end of an epoch.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_step_begin": [[140, 146], ["None"], "methods", ["None"], ["", "def", "on_step_begin", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called at the beginning of a training step. If using gradient accumulation, one training step might take\n        several inputs.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_step_end": [[147, 153], ["None"], "methods", ["None"], ["", "def", "on_step_end", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called at the end of a training step. If using gradient accumulation, one training step might take\n        several inputs.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_evaluate": [[154, 159], ["None"], "methods", ["None"], ["", "def", "on_evaluate", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called after an evaluation phase.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_save": [[160, 165], ["None"], "methods", ["None"], ["", "def", "on_save", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called after a checkpoint save.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_log": [[166, 171], ["None"], "methods", ["None"], ["", "def", "on_log", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called after logging the last logs.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycleObserver.on_prediction_step": [[172, 177], ["None"], "methods", ["None"], ["", "def", "on_prediction_step", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Event called after a prediction step.\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.CustomEnum._missing_": [[184, 188], ["ValueError", "list", "cls._value2member_map_.keys"], "methods", ["None"], ["@", "classmethod", "\n", "def", "_missing_", "(", "cls", ",", "value", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f\"{value} is not a valid {cls.__name__}, please select one of {list(cls._value2member_map_.keys())}\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleObserver.onStateChange": [[225, 227], ["None"], "methods", ["None"], ["    ", "def", "onStateChange", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifeCycle.addObserver": [[230, 232], ["None"], "methods", ["None"], ["    ", "def", "addObserver", "(", "self", ",", "observer", ":", "LifecycleObserver", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifeCycle.removeObserver": [[233, 235], ["None"], "methods", ["None"], ["", "def", "removeObserver", "(", "self", ",", "observer", ":", "LifecycleObserver", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifeCycle.getCurrentState": [[236, 238], ["None"], "methods", ["None"], ["", "def", "getCurrentState", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleOwner.getLifeCycle": [[241, 243], ["None"], "methods", ["None"], ["    ", "def", "getLifeCycle", "(", "self", ")", "->", "LifeCycle", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.ObserverWithState.dispatchEvent": [[254, 259], ["TrainerLifeCycle.getStateAfter", "TrainerLifeCycle.minState", "TrainerLifeCycle.ObserverWithState.mLifecycleObserver.onStateChange"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.getStateAfter", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.minState", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleObserver.onStateChange"], ["def", "dispatchEvent", "(", "self", ",", "event", ":", "Event", ")", ":", "\n", "        ", "new_state", "=", "getStateAfter", "(", "event", ")", "\n", "self", ".", "mState", "=", "minState", "(", "self", ".", "mState", ",", "new_state", ")", "\n", "self", ".", "mLifecycleObserver", ".", "onStateChange", "(", ")", "\n", "self", ".", "mState", "=", "new_state", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.__init__": [[270, 279], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "provider", ":", "LifecycleOwner", ")", ":", "\n", "        ", "self", ".", "mLifecycleOwner", "=", "provider", "\n", "self", ".", "mState", ":", "State", "=", "State", ".", "INITIALIZED", "\n", "self", ".", "mObserverMap", ":", "Dict", "[", "LifecycleObserver", ",", "ObserverWithState", "]", "=", "{", "}", "\n", "\n", "self", ".", "mNewEventOccurred", "=", "False", "\n", "self", ".", "mHandlingEvent", "=", "False", "\n", "self", ".", "mAddingObserverCounter", "=", "0", "\n", "self", ".", "mParentStates", ":", "List", "[", "State", "]", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.getObserverCount": [[280, 282], ["len"], "methods", ["None"], ["", "def", "getObserverCount", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "mObserverMap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.getCurrentState": [[283, 285], ["None"], "methods", ["None"], ["", "def", "getCurrentState", "(", "self", ")", "->", "State", ":", "\n", "        ", "return", "self", ".", "mState", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.moveToState": [[286, 296], ["TrainerLifeCycle.LifecycleRegistry.sync"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.sync"], ["", "def", "moveToState", "(", "self", ",", "next_state", ":", "State", ")", ":", "\n", "        ", "if", "self", ".", "mState", "==", "next_state", ":", "\n", "            ", "return", "\n", "", "self", ".", "mState", "=", "next_state", "\n", "if", "self", ".", "mHandlingEvent", "or", "self", ".", "mAddingObserverCounter", "!=", "0", ":", "\n", "            ", "self", ".", "mNewEventOccurred", "=", "True", "\n", "return", "\n", "", "self", ".", "mHandlingEvent", "=", "True", "\n", "self", ".", "sync", "(", ")", "\n", "self", ".", "mHandlingEvent", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.isSynced": [[297, 300], ["TrainerLifeCycle.LifecycleRegistry.getObserverCount"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.getObserverCount"], ["", "def", "isSynced", "(", "self", ")", "->", "bool", ":", "\n", "        ", "if", "self", ".", "getObserverCount", "(", ")", "==", "0", ":", "\n", "            ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.sync": [[301, 306], ["TrainerLifeCycle.LifecycleRegistry.isSynced"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.isSynced"], ["", "", "def", "sync", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "mLifecycleOwner", "is", "None", ":", "\n", "            ", "return", "\n", "", "while", "not", "self", ".", "isSynced", "(", ")", ":", "\n", "            ", "self", ".", "mNewEventOccurred", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.markState": [[307, 309], ["TrainerLifeCycle.LifecycleRegistry.moveToState"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.moveToState"], ["", "", "def", "markState", "(", "self", ",", "state", ":", "State", ")", ":", "\n", "        ", "self", ".", "moveToState", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.handleLifecycleEvent": [[310, 313], ["TrainerLifeCycle.getStateAfter", "TrainerLifeCycle.LifecycleRegistry.markState"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.getStateAfter", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.markState"], ["", "def", "handleLifecycleEvent", "(", "self", ",", "event", ":", "Event", ")", ":", "\n", "        ", "next_state", "=", "getStateAfter", "(", "event", ")", "\n", "self", ".", "markState", "(", "next_state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.addObserver": [[314, 316], ["None"], "methods", ["None"], ["", "def", "addObserver", "(", "self", ",", "observer", ":", "LifecycleObserver", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.LifecycleRegistry.removeObserver": [[317, 319], ["None"], "methods", ["None"], ["", "def", "removeObserver", "(", "self", ",", "observer", ":", "LifecycleObserver", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.__init__": [[324, 328], ["TrainerLifeCycle.TrainerLifeCycle.add_callback"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.add_callback"], ["def", "__init__", "(", "self", ",", "callbacks", ")", ":", "\n", "        ", "self", ".", "callbacks", "=", "[", "]", "\n", "for", "cb", "in", "callbacks", ":", "\n", "            ", "self", ".", "add_callback", "(", "cb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.add_callback": [[329, 332], ["TrainerLifeCycle.TrainerLifeCycle.callbacks.append", "isinstance", "callback"], "methods", ["None"], ["", "", "def", "add_callback", "(", "self", ",", "callback", ")", ":", "\n", "        ", "cb", "=", "callback", "(", ")", "if", "isinstance", "(", "callback", ",", "type", ")", "else", "callback", "\n", "self", ".", "callbacks", ".", "append", "(", "cb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.pop_callback": [[333, 344], ["isinstance", "isinstance", "TrainerLifeCycle.TrainerLifeCycle.callbacks.remove", "TrainerLifeCycle.TrainerLifeCycle.callbacks.remove"], "methods", ["None"], ["", "def", "pop_callback", "(", "self", ",", "callback", ")", ":", "\n", "        ", "if", "isinstance", "(", "callback", ",", "type", ")", ":", "\n", "            ", "for", "cb", "in", "self", ".", "callbacks", ":", "\n", "                ", "if", "isinstance", "(", "cb", ",", "callback", ")", ":", "\n", "                    ", "self", ".", "callbacks", ".", "remove", "(", "cb", ")", "\n", "return", "cb", "\n", "", "", "", "else", ":", "\n", "            ", "for", "cb", "in", "self", ".", "callbacks", ":", "\n", "                ", "if", "cb", "==", "callback", ":", "\n", "                    ", "self", ".", "callbacks", ".", "remove", "(", "cb", ")", "\n", "return", "cb", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.remove_callback": [[345, 353], ["isinstance", "TrainerLifeCycle.TrainerLifeCycle.callbacks.remove", "isinstance", "TrainerLifeCycle.TrainerLifeCycle.callbacks.remove"], "methods", ["None"], ["", "", "", "", "def", "remove_callback", "(", "self", ",", "callback", ")", ":", "\n", "        ", "if", "isinstance", "(", "callback", ",", "type", ")", ":", "\n", "            ", "for", "cb", "in", "self", ".", "callbacks", ":", "\n", "                ", "if", "isinstance", "(", "cb", ",", "callback", ")", ":", "\n", "                    ", "self", ".", "callbacks", ".", "remove", "(", "cb", ")", "\n", "return", "\n", "", "", "", "else", ":", "\n", "            ", "self", ".", "callbacks", ".", "remove", "(", "callback", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.callback_list": [[354, 357], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "callback_list", "(", "self", ")", ":", "\n", "        ", "return", "\"\\n\"", ".", "join", "(", "cb", ".", "__class__", ".", "__name__", "for", "cb", "in", "self", ".", "callbacks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_init_end": [[358, 360], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_init_end", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ")", ":", "\n", "        ", "return", "self", ".", "call_event", "(", "\"on_init_end\"", ",", "args", ",", "state", ",", "control", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_train_begin": [[361, 364], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_train_begin", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ")", ":", "\n", "        ", "control", ".", "should_training_stop", "=", "False", "\n", "return", "self", ".", "call_event", "(", "\"on_train_begin\"", ",", "args", ",", "state", ",", "control", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_train_end": [[365, 367], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_train_end", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ")", ":", "\n", "        ", "return", "self", ".", "call_event", "(", "\"on_train_end\"", ",", "args", ",", "state", ",", "control", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_epoch_begin": [[368, 371], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_epoch_begin", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ")", ":", "\n", "        ", "control", ".", "should_epoch_stop", "=", "False", "\n", "return", "self", ".", "call_event", "(", "\"on_epoch_begin\"", ",", "args", ",", "state", ",", "control", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_epoch_end": [[372, 374], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_epoch_end", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ")", ":", "\n", "        ", "return", "self", ".", "call_event", "(", "\"on_epoch_end\"", ",", "args", ",", "state", ",", "control", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_step_begin": [[375, 380], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_step_begin", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ")", ":", "\n", "        ", "control", ".", "should_log", "=", "False", "\n", "control", ".", "should_evaluate", "=", "False", "\n", "control", ".", "should_save", "=", "False", "\n", "return", "self", ".", "call_event", "(", "\"on_step_begin\"", ",", "args", ",", "state", ",", "control", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_step_end": [[381, 383], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_step_end", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ")", ":", "\n", "        ", "return", "self", ".", "call_event", "(", "\"on_step_end\"", ",", "args", ",", "state", ",", "control", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_evaluate": [[384, 387], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_evaluate", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "metrics", ")", ":", "\n", "        ", "control", ".", "should_evaluate", "=", "False", "\n", "return", "self", ".", "call_event", "(", "\"on_evaluate\"", ",", "args", ",", "state", ",", "control", ",", "metrics", "=", "metrics", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_save": [[388, 391], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_save", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ")", ":", "\n", "        ", "control", ".", "should_save", "=", "False", "\n", "return", "self", ".", "call_event", "(", "\"on_save\"", ",", "args", ",", "state", ",", "control", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_log": [[392, 395], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_log", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ",", "logs", ")", ":", "\n", "        ", "control", ".", "should_log", "=", "False", "\n", "return", "self", ".", "call_event", "(", "\"on_log\"", ",", "args", ",", "state", ",", "control", ",", "logs", "=", "logs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.on_prediction_step": [[396, 398], ["TrainerLifeCycle.TrainerLifeCycle.call_event"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event"], ["", "def", "on_prediction_step", "(", "self", ",", "args", ":", "TrainingArguments", ",", "state", ":", "TrainerState", ",", "control", ":", "TrainerControl", ")", ":", "\n", "        ", "return", "self", ".", "call_event", "(", "\"on_prediction_step\"", ",", "args", ",", "state", ",", "control", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.TrainerLifeCycle.call_event": [[399, 411], ["getattr"], "methods", ["None"], ["", "def", "call_event", "(", "self", ",", "event", ",", "args", ",", "state", ",", "control", ",", "**", "kwargs", ")", ":", "\n", "        ", "for", "callback", "in", "self", ".", "callbacks", ":", "\n", "            ", "result", "=", "getattr", "(", "callback", ",", "event", ")", "(", "\n", "args", ",", "\n", "state", ",", "\n", "control", ",", "\n", "**", "kwargs", ",", "\n", ")", "\n", "# A Callback can skip the return of `control` if it doesn't change it.", "\n", "if", "result", "is", "not", "None", ":", "\n", "                ", "control", "=", "result", "\n", "", "", "return", "control", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.getStateAfter": [[211, 214], ["None"], "function", ["None"], ["", "def", "getStateAfter", "(", "event", ":", "Event", ")", "->", "State", ":", "\n", "    ", "if", "event", "is", "Event", ".", "ON_STOP", ":", "\n", "        ", "return", "State", ".", "RESUMED", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.downEvent": [[216, 218], ["None"], "function", ["None"], ["", "", "def", "downEvent", "(", "state", ":", "State", ")", "->", "Event", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.upEvent": [[220, 222], ["None"], "function", ["None"], ["", "def", "upEvent", "(", "state", ":", "State", ")", "->", "Event", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.minState": [[245, 247], ["None"], "function", ["None"], ["", "", "def", "minState", "(", "state1", ":", "State", ",", "state2", ":", "State", ")", "->", "State", ":", "\n", "    ", "return", "state2", "if", "state2", "is", "not", "None", "and", "state2", "<", "state1", "else", "state1", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.eldest": [[261, 263], ["None"], "function", ["None"], ["", "", "def", "eldest", "(", "observer_map", ":", "Dict", "[", "LifecycleObserver", ",", "ObserverWithState", "]", ")", "->", "Union", "[", "None", ",", "State", "]", ":", "\n", "    ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.TrainerLifeCycle.newest": [[265, 267], ["None"], "function", ["None"], ["", "def", "newest", "(", "observer_map", ":", "Dict", "[", "LifecycleObserver", ",", "ObserverWithState", "]", ")", "->", "Union", "[", "None", ",", "State", "]", ":", "\n", "    ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.cached_property.__get__": [[108, 120], ["getattr", "AttributeError", "Framework.cached_property.fget", "setattr"], "methods", ["None"], ["def", "__get__", "(", "self", ",", "obj", ",", "objtype", "=", "None", ")", ":", "\n", "# See docs.python.org/3/howto/descriptor.html#properties", "\n", "        ", "if", "obj", "is", "None", ":", "\n", "            ", "return", "self", "\n", "", "if", "self", ".", "fget", "is", "None", ":", "\n", "            ", "raise", "AttributeError", "(", "\"unreadable attribute\"", ")", "\n", "", "attr", "=", "\"__cached_\"", "+", "self", ".", "fget", ".", "__name__", "\n", "cached", "=", "getattr", "(", "obj", ",", "attr", ",", "None", ")", "\n", "if", "cached", "is", "None", ":", "\n", "            ", "cached", "=", "self", ".", "fget", "(", "obj", ")", "\n", "setattr", "(", "obj", ",", "attr", ",", "cached", ")", "\n", "", "return", "cached", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_offline_mode": [[70, 72], ["None"], "function", ["None"], ["def", "is_offline_mode", "(", ")", ":", "\n", "    ", "return", "_is_offline_mode", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_torch_available": [[74, 76], ["None"], "function", ["None"], ["", "def", "is_torch_available", "(", ")", ":", "\n", "    ", "return", "_torch_available", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_torch_cuda_available": [[78, 85], ["Framework.is_torch_available", "torch.cuda.is_available"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_torch_available"], ["", "def", "is_torch_cuda_available", "(", ")", ":", "\n", "    ", "if", "is_torch_available", "(", ")", ":", "\n", "        ", "import", "torch", "\n", "\n", "return", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_tf_available": [[87, 89], ["None"], "function", ["None"], ["", "", "def", "is_tf_available", "(", ")", ":", "\n", "    ", "return", "_tf_available", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_deepspeed_available": [[91, 93], ["importlib.util.find_spec"], "function", ["None"], ["", "def", "is_deepspeed_available", "(", ")", ":", "\n", "    ", "return", "importlib", ".", "util", ".", "find_spec", "(", "\"deepspeed\"", ")", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_psutil_available": [[95, 97], ["importlib.util.find_spec"], "function", ["None"], ["", "def", "is_psutil_available", "(", ")", ":", "\n", "    ", "return", "importlib", ".", "util", ".", "find_spec", "(", "\"psutil\"", ")", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.torch_required": [[122, 132], ["functools.wraps", "Framework.is_torch_available", "func", "ImportError"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_torch_available"], ["", "", "def", "torch_required", "(", "func", ")", ":", "\n", "# Chose a different decorator name than in tests so it's clear they are not the same.", "\n", "    ", "@", "wraps", "(", "func", ")", "\n", "def", "wrapper", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "is_torch_available", "(", ")", ":", "\n", "            ", "return", "func", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ImportError", "(", "f\"Method `{func.__name__}` requires PyTorch.\"", ")", "\n", "\n", "", "", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.tf_required": [[134, 144], ["functools.wraps", "Framework.is_tf_available", "func", "ImportError"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_tf_available"], ["", "def", "tf_required", "(", "func", ")", ":", "\n", "# Chose a different decorator name than in tests so it's clear they are not the same.", "\n", "    ", "@", "wraps", "(", "func", ")", "\n", "def", "wrapper", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "is_tf_available", "(", ")", ":", "\n", "            ", "return", "func", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ImportError", "(", "f\"Method `{func.__name__}` requires TF.\"", ")", "\n", "\n", "", "", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_tensor": [[146, 159], ["Framework.is_torch_available", "Framework.is_tf_available", "isinstance", "isinstance", "isinstance"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_torch_available", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_tf_available"], ["", "def", "is_tensor", "(", "x", ")", ":", "\n", "    ", "\"\"\" Tests if ``x`` is a :obj:`torch.Tensor`, :obj:`tf.Tensor` or :obj:`np.ndarray`. \"\"\"", "\n", "if", "is_torch_available", "(", ")", ":", "\n", "        ", "import", "torch", "\n", "\n", "if", "isinstance", "(", "x", ",", "torch", ".", "Tensor", ")", ":", "\n", "            ", "return", "True", "\n", "", "", "if", "is_tf_available", "(", ")", ":", "\n", "        ", "import", "tensorflow", "as", "tf", "\n", "\n", "if", "isinstance", "(", "x", ",", "tf", ".", "Tensor", ")", ":", "\n", "            ", "return", "True", "\n", "", "", "return", "isinstance", "(", "x", ",", "np", ".", "ndarray", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework._is_numpy": [[161, 163], ["isinstance"], "function", ["None"], ["", "def", "_is_numpy", "(", "x", ")", ":", "\n", "    ", "return", "isinstance", "(", "x", ",", "np", ".", "ndarray", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework._is_torch": [[165, 169], ["isinstance"], "function", ["None"], ["", "def", "_is_torch", "(", "x", ")", ":", "\n", "    ", "import", "torch", "\n", "\n", "return", "isinstance", "(", "x", ",", "torch", ".", "Tensor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework._is_torch_device": [[171, 175], ["isinstance"], "function", ["None"], ["", "def", "_is_torch_device", "(", "x", ")", ":", "\n", "    ", "import", "torch", "\n", "\n", "return", "isinstance", "(", "x", ",", "torch", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework._is_tensorflow": [[177, 181], ["isinstance"], "function", ["None"], ["", "def", "_is_tensorflow", "(", "x", ")", ":", "\n", "    ", "import", "tensorflow", "as", "tf", "\n", "\n", "return", "isinstance", "(", "x", ",", "tf", ".", "Tensor", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.RandomSeeds.set_seeds": [[7, 13], ["random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.manual_seed_all"], "function", ["None"], ["def", "set_seeds", "(", "seed", "=", "1234", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.AutoML.config_tuning_space": [[6, 74], ["hyperopt.hp.loguniform", "hyperopt.pyll.base.scope.int", "hyperopt.pyll.base.scope.int", "hyperopt.pyll.base.scope.int", "hyperopt.pyll.base.scope.int", "hyperopt.hp.uniform", "hyperopt.hp.loguniform", "hyperopt.hp.choice", "hyperopt.hp.loguniform", "hyperopt.hp.loguniform", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "hyperopt.hp.choice", "numpy.log", "numpy.log", "hyperopt.hp.qloguniform", "hyperopt.hp.qloguniform", "hyperopt.hp.qloguniform", "hyperopt.hp.qloguniform", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "numpy.log"], "function", ["None"], ["def", "config_tuning_space", "(", "tuning_space_raw", ")", ":", "\n", "    ", "if", "tuning_space_raw", "is", "None", ":", "\n", "        ", "return", "None", "\n", "\n", "", "hyper_obj", "=", "{", "}", "\n", "if", "\"learning_rate\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\n", "\"learning_rate\"", ":", "hp", ".", "loguniform", "(", "'learning_rate'", ",", "np", ".", "log", "(", "tuning_space_raw", "[", "'learning_rate'", "]", "[", "'min'", "]", ")", ",", "\n", "np", ".", "log", "(", "tuning_space_raw", "[", "'learning_rate'", "]", "[", "'max'", "]", ")", ")", "}", "}", "\n", "", "if", "\"hidden_size\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"hidden_size\"", ":", "scope", ".", "int", "(", "\n", "hp", ".", "qloguniform", "(", "'hidden_size'", ",", "np", ".", "log", "(", "tuning_space_raw", "[", "'hidden_size'", "]", "[", "'min'", "]", ")", ",", "\n", "np", ".", "log", "(", "tuning_space_raw", "[", "'hidden_size'", "]", "[", "'max'", "]", ")", ",", "1", ")", ")", "}", "}", "\n", "", "if", "\"ent_hidden_size\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"ent_hidden_size\"", ":", "scope", ".", "int", "(", "\n", "hp", ".", "qloguniform", "(", "\"ent_hidden_size\"", ",", "np", ".", "log", "(", "tuning_space_raw", "[", "'ent_hidden_size'", "]", "[", "'min'", "]", ")", ",", "\n", "np", ".", "log", "(", "tuning_space_raw", "[", "'ent_hidden_size'", "]", "[", "'max'", "]", ")", ",", "1", ")", ")", "}", "}", "\n", "", "if", "\"rel_hidden_size\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"rel_hidden_size\"", ":", "scope", ".", "int", "(", "\n", "hp", ".", "qloguniform", "(", "\"rel_hidden_size\"", ",", "np", ".", "log", "(", "tuning_space_raw", "[", "'rel_hidden_size'", "]", "[", "'min'", "]", ")", ",", "\n", "np", ".", "log", "(", "tuning_space_raw", "[", "'rel_hidden_size'", "]", "[", "'max'", "]", ")", ",", "1", ")", ")", "}", "}", "\n", "", "if", "\"batch_size\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"batch_size\"", ":", "scope", ".", "int", "(", "\n", "hp", ".", "qloguniform", "(", "\"batch_size\"", ",", "np", ".", "log", "(", "tuning_space_raw", "[", "'batch_size'", "]", "[", "'min'", "]", ")", ",", "\n", "np", ".", "log", "(", "tuning_space_raw", "[", "'batch_size'", "]", "[", "'max'", "]", ")", ",", "1", ")", ")", "}", "}", "\n", "", "if", "\"margin\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\n", "\"margin\"", ":", "hp", ".", "uniform", "(", "\"margin\"", ",", "tuning_space_raw", "[", "\"margin\"", "]", "[", "\"min\"", "]", ",", "tuning_space_raw", "[", "\"margin\"", "]", "[", "\"max\"", "]", ")", "}", "}", "\n", "", "if", "\"lmbda\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"lmbda\"", ":", "hp", ".", "loguniform", "(", "'lmbda'", ",", "np", ".", "log", "(", "tuning_space_raw", "[", "\"lmbda\"", "]", "[", "\"min\"", "]", ")", ",", "\n", "np", ".", "log", "(", "tuning_space_raw", "[", "\"lmbda\"", "]", "[", "\"max\"", "]", ")", ")", "}", "}", "\n", "", "if", "\"distance_measure\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "\n", "**", "{", "\"distance_measure\"", ":", "hp", ".", "choice", "(", "'distance_measure'", ",", "tuning_space_raw", "[", "\"distance_measure\"", "]", ")", "}", "}", "\n", "", "if", "\"cmax\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"cmax\"", ":", "hp", ".", "loguniform", "(", "'cmax'", ",", "np", ".", "log", "(", "tuning_space_raw", "[", "\"cmax\"", "]", "[", "\"min\"", "]", ")", ",", "\n", "np", ".", "log", "(", "tuning_space_raw", "[", "\"cmax\"", "]", "[", "\"max\"", "]", ")", ")", "}", "}", "\n", "", "if", "\"cmin\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"cmin\"", ":", "hp", ".", "loguniform", "(", "'cmin'", ",", "np", ".", "log", "(", "tuning_space_raw", "[", "\"cmin\"", "]", "[", "\"min\"", "]", ")", ",", "\n", "np", ".", "log", "(", "tuning_space_raw", "[", "\"cmin\"", "]", "[", "\"max\"", "]", ")", ")", "}", "}", "\n", "", "if", "\"optimizer\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"optimizer\"", ":", "hp", ".", "choice", "(", "\"optimizer\"", ",", "tuning_space_raw", "[", "\"optimizer\"", "]", ")", "}", "}", "\n", "", "if", "\"bilinear\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"bilinear\"", ":", "hp", ".", "choice", "(", "'bilinear'", ",", "tuning_space_raw", "[", "\"bilinear\"", "]", ")", "}", "}", "\n", "", "if", "\"epochs\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"epochs\"", ":", "hp", ".", "choice", "(", "\"epochs\"", ",", "tuning_space_raw", "[", "\"epochs\"", "]", ")", "}", "}", "\n", "", "if", "\"feature_map_dropout\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\n", "\"feature_map_dropout\"", ":", "hp", ".", "choice", "(", "'feature_map_dropout'", ",", "tuning_space_raw", "[", "\"feature_map_dropout\"", "]", ")", "}", "}", "\n", "", "if", "\"input_dropout\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "\n", "**", "{", "\"input_dropout\"", ":", "hp", ".", "choice", "(", "'input_dropout'", ",", "tuning_space_raw", "[", "\"input_dropout\"", "]", ")", "}", "}", "\n", "", "if", "\"hidden_dropout\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "\n", "**", "{", "\"hidden_dropout\"", ":", "hp", ".", "choice", "(", "'hidden_dropout'", ",", "tuning_space_raw", "[", "\"hidden_dropout\"", "]", ")", "}", "}", "\n", "", "if", "\"use_bias\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"use_bias\"", ":", "hp", ".", "choice", "(", "'use_bias'", ",", "tuning_space_raw", "[", "\"use_bias\"", "]", ")", "}", "}", "\n", "", "if", "\"label_smoothing\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "\n", "**", "{", "\"label_smoothing\"", ":", "hp", ".", "choice", "(", "'label_smoothing'", ",", "tuning_space_raw", "[", "\"label_smoothing\"", "]", ")", "}", "}", "\n", "", "if", "\"lr_decay\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"lr_decay\"", ":", "hp", ".", "choice", "(", "'lr_decay'", ",", "tuning_space_raw", "[", "\"lr_decay\"", "]", ")", "}", "}", "\n", "", "if", "\"l1_flag\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"l1_flag\"", ":", "hp", ".", "choice", "(", "'l1_flag'", ",", "tuning_space_raw", "[", "\"l1_flag\"", "]", ")", "}", "}", "\n", "", "if", "\"sampling\"", "in", "tuning_space_raw", ":", "\n", "        ", "hyper_obj", "=", "{", "**", "hyper_obj", ",", "**", "{", "\"sampling\"", ":", "hp", ".", "choice", "(", "'sampling'", ",", "tuning_space_raw", "[", "\"sampling\"", "]", ")", "}", "}", "\n", "\n", "", "return", "hyper_obj", "\n", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Log.Log": [[5, 24], ["logging.getLogger", "logging.getLogger.setLevel", "logging.basicConfig", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "logging.getLogger().addHandler", "logging.Formatter", "logging.getLogger"], "function", ["None"], ["def", "Log", "(", "filename", ":", "str", ",", "name_scope", "=", "\"0\"", ")", ":", "\n", "    ", "\"\"\"Return instance of logger \u7edf\u4e00\u7684\u65e5\u5fd7\u6837\u5f0f\n\n        Examples:\n           >>> from toolbox.Log import Log\n           >>> log = Log(\"./train.log\")\n           >>> log.info(\"abc\")\n    \"\"\"", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'logger-%s'", "%", "name_scope", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "logging", ".", "basicConfig", "(", "format", "=", "'%(message)s'", ",", "level", "=", "logging", ".", "INFO", ")", "\n", "\n", "handler", "=", "logging", ".", "FileHandler", "(", "filename", ")", "\n", "handler", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "handler", ".", "setFormatter", "(", "logging", ".", "Formatter", "(", "'%(asctime)s:%(levelname)s: %(message)s'", ")", ")", "\n", "\n", "logging", ".", "getLogger", "(", ")", ".", "addHandler", "(", "handler", ")", "\n", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Log.log_result": [[26, 33], ["pretty_print"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Evaluate.pretty_print"], ["", "def", "log_result", "(", "logger", ",", "result", ")", ":", "\n", "    ", "\"\"\"\n    :param logger: from toolbox.Log.Log()\n    :param result: from toolbox.Evaluate.evaluate()\n    \"\"\"", "\n", "from", "toolbox", ".", "Evaluate", "import", "pretty_print", "\n", "pretty_print", "(", "result", ",", "logger", ".", "info", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.ExplicitEnum._missing_": [[17, 21], ["ValueError", "list", "cls._value2member_map_.keys"], "methods", ["None"], ["@", "classmethod", "\n", "def", "_missing_", "(", "cls", ",", "value", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "f\"{value} is not a valid {cls.__name__}, please select one of {list(cls._value2member_map_.keys())}\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.__post_init__": [[495, 523], ["KGArgs.IntervalStrategy", "KGArgs.IntervalStrategy", "KGArgs.SchedulerType", "toolbox.Framework.is_torch_available", "ValueError", "ValueError", "print"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_torch_available"], ["def", "__post_init__", "(", "self", ")", ":", "\n", "# expand paths, if not os.makedirs(\"~/bar\") will make directory", "\n", "# in the current directory instead of the actual home", "\n", "# \u00a0see https://github.com/huggingface/transformers/issues/10628", "\n", "\n", "        ", "self", ".", "logging_strategy", "=", "IntervalStrategy", "(", "self", ".", "logging_strategy", ")", "\n", "self", ".", "save_strategy", "=", "IntervalStrategy", "(", "self", ".", "save_strategy", ")", "\n", "\n", "self", ".", "lr_scheduler_type", "=", "SchedulerType", "(", "self", ".", "lr_scheduler_type", ")", "\n", "if", "self", ".", "eval_steps", "is", "None", ":", "\n", "            ", "self", ".", "eval_steps", "=", "self", ".", "logging_steps", "\n", "\n", "", "if", "self", ".", "load_best_model_at_end", "and", "self", ".", "metric_for_best_model", "is", "None", ":", "\n", "            ", "self", ".", "metric_for_best_model", "=", "\"loss\"", "\n", "", "if", "self", ".", "greater_is_better", "is", "None", "and", "self", ".", "metric_for_best_model", "is", "not", "None", ":", "\n", "            ", "self", ".", "greater_is_better", "=", "self", ".", "metric_for_best_model", "not", "in", "[", "\"loss\"", ",", "\"eval_loss\"", "]", "\n", "\n", "", "if", "is_torch_available", "(", ")", "and", "self", ".", "device", ".", "type", "!=", "\"cuda\"", "and", "(", "self", ".", "fp16", "or", "self", ".", "fp16_full_eval", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Mixed precision training with AMP or APEX (`--fp16`) and FP16 evaluation can only be used on CUDA devices.\"", "\n", ")", "\n", "\n", "", "if", "self", ".", "warmup_ratio", "<", "0", "or", "self", ".", "warmup_ratio", ">", "1", ":", "\n", "            ", "raise", "ValueError", "(", "\"warmup_ratio must lie in range [0,1]\"", ")", "\n", "", "elif", "self", ".", "warmup_ratio", ">", "0", "and", "self", ".", "warmup_steps", ">", "0", ":", "\n", "            ", "print", "(", "\n", "\"Both warmup_ratio and warmup_steps given\"", ",", "\n", "\"warmup_steps will override any effect of warmup_ratio during training\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.__repr__": [[525, 531], ["dataclasses.asdict", "dataclasses.asdict.items"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "# We override the default repr to remove deprecated arguments from the repr. This method should be removed once", "\n", "# those deprecated arguments are removed form TrainingArguments. (TODO: v5)", "\n", "        ", "self_as_dict", "=", "asdict", "(", "self", ")", "\n", "attrs_as_str", "=", "[", "f\"{k}={v}\"", "for", "k", ",", "v", "in", "self_as_dict", ".", "items", "(", ")", "]", "\n", "return", "f\"{self.__class__.__name__}({', '.join(attrs_as_str)})\"", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.train_batch_size": [[532, 540], ["max"], "methods", ["None"], ["", "@", "property", "\n", "def", "train_batch_size", "(", "self", ")", "->", "int", ":", "\n", "        ", "\"\"\"\n        The actual batch size for training (may differ from :obj:`per_device_train_batch_size` in distributed training).\n        \"\"\"", "\n", "per_device_batch_size", "=", "self", ".", "per_device_train_batch_size", "\n", "train_batch_size", "=", "per_device_batch_size", "*", "max", "(", "1", ",", "self", ".", "n_gpu", ")", "\n", "return", "train_batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.eval_batch_size": [[541, 549], ["max"], "methods", ["None"], ["", "@", "property", "\n", "def", "eval_batch_size", "(", "self", ")", "->", "int", ":", "\n", "        ", "\"\"\"\n        The actual batch size for evaluation (may differ from :obj:`per_device_eval_batch_size` in distributed training).\n        \"\"\"", "\n", "per_device_batch_size", "=", "self", ".", "per_device_eval_batch_size", "\n", "eval_batch_size", "=", "per_device_batch_size", "*", "max", "(", "1", ",", "self", ".", "n_gpu", ")", "\n", "return", "eval_batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.place_model_on_device": [[550, 556], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "place_model_on_device", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Can be subclassed and overridden for some specific integrations.\n        \"\"\"", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments._setup_devices": [[557, 606], ["print", "torch.device", "torch.cuda.set_device", "deepspeed.init_distributed", "int", "torch.device", "is_deepspeed_available", "ImportError", "os.environ.get", "torch.device", "torch.cuda.device_count", "torch.distributed.init_process_group", "torch.device", "torch.cuda.is_available"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.device", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.device", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_deepspeed_available", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.device", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.device"], ["", "@", "cached_property", "\n", "@", "torch_required", "\n", "def", "_setup_devices", "(", "self", ")", "->", "\"torch.device\"", ":", "\n", "        ", "print", "(", "\"PyTorch: setting up devices\"", ")", "\n", "if", "self", ".", "no_cuda", ":", "\n", "            ", "device", "=", "torch", ".", "device", "(", "\"cpu\"", ")", "\n", "self", ".", "_n_gpu", "=", "0", "\n", "", "elif", "self", ".", "deepspeed", ":", "\n", "# deepspeed performs its own DDP internally, and requires the program to be started with:", "\n", "# deepspeed  ./program.py", "\n", "# rather than:", "\n", "# python -m torch.distributed.launch --nproc_per_node=2 ./program.py", "\n", "            ", "from", ".", "Framework", "import", "is_deepspeed_available", "\n", "\n", "if", "not", "is_deepspeed_available", "(", ")", ":", "\n", "                ", "raise", "ImportError", "(", "\"--deepspeed requires deepspeed: `pip install deepspeed`.\"", ")", "\n", "", "import", "deepspeed", "\n", "\n", "deepspeed", ".", "init_distributed", "(", ")", "\n", "\n", "# workaround for setups like notebooks where the launcher can't be used,", "\n", "# but deepspeed requires a dist env.", "\n", "# env LOCAL_RANK could be set manually by the user, or via init_distributed if mpi4py is installed", "\n", "self", ".", "local_rank", "=", "int", "(", "os", ".", "environ", ".", "get", "(", "\"LOCAL_RANK\"", ",", "\"-1\"", ")", ")", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", ",", "self", ".", "local_rank", ")", "\n", "self", ".", "_n_gpu", "=", "1", "\n", "", "elif", "self", ".", "local_rank", "==", "-", "1", ":", "\n", "# if n_gpu is > 1 we'll use nn.DataParallel.", "\n", "# If you only want to use a specific subset of GPUs use `CUDA_VISIBLE_DEVICES=0`", "\n", "# Explicitly set CUDA to the first (index 0) CUDA device, otherwise `set_device` will", "\n", "# trigger an error that a device index is missing. Index 0 takes into account the", "\n", "# GPUs available in the environment, so `CUDA_VISIBLE_DEVICES=1,2` with `cuda:0`", "\n", "# will use the first GPU in that env, i.e. GPU#1", "\n", "            ", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "# Sometimes the line in the postinit has not been run before we end up here, so just checking we're not at", "\n", "# the default value.", "\n", "self", ".", "_n_gpu", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "", "else", ":", "\n", "# Here, we'll use torch.distributed.", "\n", "# Initializes the distributed backend which will take care of synchronizing nodes/GPUs", "\n", "            ", "torch", ".", "distributed", ".", "init_process_group", "(", "backend", "=", "\"nccl\"", ")", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", ",", "self", ".", "local_rank", ")", "\n", "self", ".", "_n_gpu", "=", "1", "\n", "\n", "", "if", "device", ".", "type", "==", "\"cuda\"", ":", "\n", "            ", "torch", ".", "cuda", ".", "set_device", "(", "device", ")", "\n", "\n", "", "return", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.device": [[607, 614], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "torch_required", "\n", "def", "device", "(", "self", ")", "->", "\"torch.device\"", ":", "\n", "        ", "\"\"\"\n        The device used by this process.\n        \"\"\"", "\n", "return", "self", ".", "_setup_devices", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.n_gpu": [[615, 628], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "torch_required", "\n", "def", "n_gpu", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        The number of GPUs used by this process.\n\n        Note:\n            This will only be greater than one when you have multiple GPUs available but are not using distributed\n            training. For distributed training, it will always be 1.\n        \"\"\"", "\n", "# Make sure `self._n_gpu` is properly setup.", "\n", "_", "=", "self", ".", "_setup_devices", "\n", "return", "self", ".", "_n_gpu", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.parallel_mode": [[629, 646], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "torch_required", "\n", "def", "parallel_mode", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        The current mode used for parallelism if multiple GPUs/TPU cores are available. One of:\n\n        - :obj:`ParallelMode.NOT_PARALLEL`: no parallelism (CPU or one GPU).\n        - :obj:`ParallelMode.NOT_DISTRIBUTED`: several GPUs in one single process (uses :obj:`torch.nn.DataParallel`).\n        - :obj:`ParallelMode.DISTRIBUTED`: several GPUs, each having its own process (uses\n          :obj:`torch.nn.DistributedDataParallel`).\n        \"\"\"", "\n", "if", "self", ".", "local_rank", "!=", "-", "1", ":", "\n", "            ", "return", "ParallelMode", ".", "DISTRIBUTED", "\n", "", "elif", "self", ".", "n_gpu", ">", "1", ":", "\n", "            ", "return", "ParallelMode", ".", "NOT_DISTRIBUTED", "\n", "", "else", ":", "\n", "            ", "return", "ParallelMode", ".", "NOT_PARALLEL", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.world_size": [[647, 656], ["torch.distributed.get_world_size"], "methods", ["None"], ["", "", "@", "property", "\n", "@", "torch_required", "\n", "def", "world_size", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        The number of processes used in parallel.\n        \"\"\"", "\n", "if", "self", ".", "local_rank", "!=", "-", "1", ":", "\n", "            ", "return", "torch", ".", "distributed", ".", "get_world_size", "(", ")", "\n", "", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.process_index": [[657, 666], ["torch.distributed.get_rank"], "methods", ["None"], ["", "@", "property", "\n", "@", "torch_required", "\n", "def", "process_index", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        The number of processes used in parallel.\n        \"\"\"", "\n", "if", "self", ".", "local_rank", "!=", "-", "1", ":", "\n", "            ", "return", "torch", ".", "distributed", ".", "get_rank", "(", ")", "\n", "", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.to_dict": [[667, 678], ["dataclasses.asdict", "dataclasses.asdict.items", "isinstance", "isinstance", "isinstance", "len"], "methods", ["None"], ["", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Serializes this instance while replace `Enum` by their values (for JSON serialization support).\n        \"\"\"", "\n", "d", "=", "asdict", "(", "self", ")", "\n", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "v", ",", "Enum", ")", ":", "\n", "                ", "d", "[", "k", "]", "=", "v", ".", "value", "\n", "", "if", "isinstance", "(", "v", ",", "list", ")", "and", "len", "(", "v", ")", ">", "0", "and", "isinstance", "(", "v", "[", "0", "]", ",", "Enum", ")", ":", "\n", "                ", "d", "[", "k", "]", "=", "[", "x", ".", "value", "for", "x", "in", "v", "]", "\n", "", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.to_json_string": [[679, 684], ["json.dumps", "KGArgs.TrainingArguments.to_dict"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.to_dict"], ["", "def", "to_json_string", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Serializes this instance to a JSON string.\n        \"\"\"", "\n", "return", "json", ".", "dumps", "(", "self", ".", "to_dict", "(", ")", ",", "indent", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.to_sanitized_dict": [[685, 697], ["KGArgs.TrainingArguments.to_dict", "toolbox.Framework.is_torch_available", "valid_types.append", "str", "KGArgs.TrainingArguments.items", "type"], "methods", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.KGArgs.TrainingArguments.to_dict", "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.Framework.is_torch_available"], ["", "def", "to_sanitized_dict", "(", "self", ")", "->", "Dict", "[", "str", ",", "Any", "]", ":", "\n", "        ", "\"\"\"\n        Sanitized serialization to use with TensorBoard\u2019s hparams\n        \"\"\"", "\n", "d", "=", "self", ".", "to_dict", "(", ")", "\n", "d", "=", "{", "**", "d", ",", "**", "{", "\"train_batch_size\"", ":", "self", ".", "train_batch_size", ",", "\"eval_batch_size\"", ":", "self", ".", "eval_batch_size", "}", "}", "\n", "\n", "valid_types", "=", "[", "bool", ",", "int", ",", "float", ",", "str", "]", "\n", "if", "is_torch_available", "(", ")", ":", "\n", "            ", "valid_types", ".", "append", "(", "torch", ".", "Tensor", ")", "\n", "\n", "", "return", "{", "k", ":", "v", "if", "type", "(", "v", ")", "in", "valid_types", "else", "str", "(", "v", ")", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.ScoreFunction.negative_sample_loss": [[4, 16], ["model", "torch.logsigmoid().mean", "model", "torch.logsigmoid().squeeze", "subsampling_weight.sum", "subsampling_weight.sum", "torch.logsigmoid", "torch.logsigmoid"], "function", ["None"], ["def", "negative_sample_loss", "(", "model", ",", "\n", "positive_sample", ",", "negative_sample", ",", "subsampling_weight", ",", "mode", ",", "\n", "single_mode", "=", "\"single\"", ")", ":", "\n", "    ", "negative_score", "=", "model", "(", "(", "positive_sample", ",", "negative_sample", ")", ",", "mode", "=", "mode", ")", "\n", "negative_score", "=", "F", ".", "logsigmoid", "(", "-", "negative_score", ")", ".", "mean", "(", "dim", "=", "1", ")", "\n", "\n", "positive_score", "=", "model", "(", "positive_sample", ",", "mode", "=", "single_mode", ")", "\n", "positive_score", "=", "F", ".", "logsigmoid", "(", "positive_score", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "positive_sample_loss", "=", "-", "(", "subsampling_weight", "*", "positive_score", ")", ".", "sum", "(", ")", "/", "subsampling_weight", ".", "sum", "(", ")", "\n", "negative_sample_loss", "=", "-", "(", "subsampling_weight", "*", "negative_score", ")", ".", "sum", "(", ")", "/", "subsampling_weight", ".", "sum", "(", ")", "\n", "return", "(", "positive_sample_loss", "+", "negative_sample_loss", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.toolbox.ScoreFunction.train_step": [[18, 48], ["model.train", "optimizer.zero_grad", "positive_sample.to.to", "negative_sample.to.to", "subsampling_weight.to.to", "model.loss", "loss.backward", "optimizer.step", "align_positive_sample.to.to", "align_negative_sample.to.to", "align_subsampling_weight.to.to", "model.loss", "loss.item", "model.loss.item", "model.loss.item"], "function", ["home.repos.pwc.inspect_result.LinXueyuanStdio_EchoEA.None.train_basic_woEN.train"], ["", "def", "train_step", "(", "model", ",", "optimizer", ",", "\n", "positive_sample", ",", "negative_sample", ",", "subsampling_weight", ",", "mode", ",", "\n", "align_positive_sample", ",", "align_negative_sample", ",", "align_subsampling_weight", ",", "align_mode", ",", "\n", "device", "=", "\"cuda\"", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "positive_sample", "=", "positive_sample", ".", "to", "(", "device", ")", "\n", "negative_sample", "=", "negative_sample", ".", "to", "(", "device", ")", "\n", "subsampling_weight", "=", "subsampling_weight", ".", "to", "(", "device", ")", "\n", "if", "align_mode", "is", "not", "None", ":", "\n", "        ", "align_positive_sample", "=", "align_positive_sample", ".", "to", "(", "device", ")", "\n", "align_negative_sample", "=", "align_negative_sample", ".", "to", "(", "device", ")", "\n", "align_subsampling_weight", "=", "align_subsampling_weight", ".", "to", "(", "device", ")", "\n", "\n", "", "raw_loss", "=", "model", ".", "loss", "(", "model", ",", "\n", "positive_sample", ",", "negative_sample", ",", "subsampling_weight", ",", "\n", "mode", ",", "\"single\"", ")", "\n", "if", "align_mode", "is", "not", "None", ":", "\n", "        ", "align_loss", "=", "model", ".", "loss", "(", "model", ",", "\n", "align_positive_sample", ",", "align_negative_sample", ",", "align_subsampling_weight", ",", "\n", "align_mode", ",", "\"align-single\"", ")", "\n", "", "else", ":", "\n", "        ", "align_loss", "=", "raw_loss", "\n", "\n", "", "loss", "=", "(", "raw_loss", "+", "align_loss", ")", "/", "2", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "return", "loss", ".", "item", "(", ")", ",", "raw_loss", ".", "item", "(", ")", ",", "align_loss", ".", "item", "(", ")", "\n", "", ""]]}