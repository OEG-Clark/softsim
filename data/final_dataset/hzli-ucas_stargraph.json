{"home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.parse_args": [[27, 83], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.parse_args"], ["def", "parse_args", "(", "args", "=", "None", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "description", "=", "'Training and Testing Knowledge Graph Embedding Models'", ",", "\n", "usage", "=", "'train.py [<args>] [-h | --help]'", "\n", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--cuda'", ",", "action", "=", "'store_true'", ",", "help", "=", "'use GPU'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--do_train'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--do_valid'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--do_test'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--evaluate_train'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Evaluate on training data'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'ogbl-wikikg2'", ",", "help", "=", "'dataset name, default to wikikg2'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "default", "=", "'RotatE'", ",", "type", "=", "str", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'-n'", ",", "'--negative_sample_size'", ",", "default", "=", "1", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'-d'", ",", "'--hidden_dim'", ",", "default", "=", "200", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'-g'", ",", "'--gamma'", ",", "default", "=", "12.0", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "'-adv'", ",", "'--negative_adversarial_sampling'", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'-a'", ",", "'--adversarial_temperature'", ",", "default", "=", "1.0", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "'-b'", ",", "'--batch_size'", ",", "default", "=", "512", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'-r'", ",", "'--regularization'", ",", "default", "=", "0.0", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "'--test_batch_size'", ",", "default", "=", "4", ",", "type", "=", "int", ",", "help", "=", "'valid/test batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--uni_weight'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'Otherwise use subsampling weighting like in word2vec'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'-lr'", ",", "'--learning_rate'", ",", "default", "=", "0.0005", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "'-cpu'", ",", "'--cpu_num'", ",", "default", "=", "2", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'-randomSeed'", ",", "default", "=", "0", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'-init'", ",", "'--init_checkpoint'", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'-save'", ",", "'--save_path'", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--max_steps'", ",", "default", "=", "10000", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--warm_up_steps'", ",", "default", "=", "None", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--save_checkpoint_steps'", ",", "default", "=", "1000", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--valid_steps'", ",", "default", "=", "1", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--log_steps'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "'train log every xx steps'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_log_steps'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "'valid/test log every xx steps'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--nentity'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'DO NOT MANUALLY SET'", ")", "\n", "parser", ".", "add_argument", "(", "'--nrelation'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'DO NOT MANUALLY SET'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--print_on_screen'", ",", "action", "=", "'store_true'", ",", "help", "=", "'log on screen or not'", ")", "\n", "parser", ".", "add_argument", "(", "'--ntriples_eval_train'", ",", "type", "=", "int", ",", "default", "=", "200000", ",", "\n", "help", "=", "'number of training triples to evaluate eventually'", ")", "\n", "parser", ".", "add_argument", "(", "'--neg_size_eval_train'", ",", "type", "=", "int", ",", "default", "=", "500", ",", "\n", "help", "=", "'number of negative samples when evaluating training triples'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--inverses'", ",", "action", "=", "'store_true'", ",", "help", "=", "'whether to add inverse edges'", ")", "\n", "parser", ".", "add_argument", "(", "'--val_inverses'", ",", "action", "=", "'store_true'", ",", "help", "=", "'whether to add inverse edges to the validation set'", ")", "\n", "parser", ".", "add_argument", "(", "'--tkn_dir'", ",", "type", "=", "str", ",", "default", "=", "\"all\"", ",", "help", "=", "'neighbors direction for igraph'", ")", "\n", "parser", ".", "add_argument", "(", "'--drop'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "'Dropout in layers'", ")", "\n", "\n", "\n", "return", "parser", ".", "parse_args", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.override_config": [[85, 97], ["open", "json.load", "os.path.join"], "function", ["None"], ["", "def", "override_config", "(", "args", ")", ":", "\n", "    ", "'''\n    Override model and data configuration\n    '''", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "init_checkpoint", ",", "'config.json'", ")", ",", "'r'", ")", "as", "fjson", ":", "\n", "        ", "argparse_dict", "=", "json", ".", "load", "(", "fjson", ")", "\n", "\n", "", "args", ".", "dataset", "=", "argparse_dict", "[", "'dataset'", "]", "\n", "args", ".", "model", "=", "argparse_dict", "[", "'model'", "]", "\n", "args", ".", "hidden_dim", "=", "argparse_dict", "[", "'hidden_dim'", "]", "\n", "args", ".", "test_batch_size", "=", "argparse_dict", "[", "'test_batch_size'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.save_model": [[99, 126], ["vars", "torch.save", "model.anchor_embeddings.weight.detach().cpu().numpy", "numpy.save", "model.relation_embedding.weight.detach().cpu().numpy", "numpy.save", "open", "json.dump", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "model.state_dict", "optimizer.state_dict", "model.anchor_embeddings.weight.detach().cpu", "model.relation_embedding.weight.detach().cpu", "model.anchor_embeddings.weight.detach", "model.relation_embedding.weight.detach"], "function", ["None"], ["", "def", "save_model", "(", "model", ",", "optimizer", ",", "save_variable_list", ",", "args", ")", ":", "\n", "    ", "'''\n    Save the parameters of the model and the optimizer,\n    as well as some other variables such as step and learning_rate\n    '''", "\n", "\n", "argparse_dict", "=", "vars", "(", "args", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'config.json'", ")", ",", "'w'", ")", "as", "fjson", ":", "\n", "        ", "json", ".", "dump", "(", "argparse_dict", ",", "fjson", ")", "\n", "\n", "", "torch", ".", "save", "(", "{", "\n", "**", "save_variable_list", ",", "\n", "'model_state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", "}", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'checkpoint'", ")", "\n", ")", "\n", "\n", "entity_embedding", "=", "model", ".", "anchor_embeddings", ".", "weight", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "np", ".", "save", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'anchor_embedding'", ")", ",", "\n", "entity_embedding", "\n", ")", "\n", "\n", "relation_embedding", "=", "model", ".", "relation_embedding", ".", "weight", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "np", ".", "save", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'relation_embedding'", ")", ",", "\n", "relation_embedding", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.set_logger": [[129, 153], ["logging.basicConfig", "os.path.join", "os.path.join", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger().addHandler", "logging.getLogger"], "function", ["None"], ["", "def", "set_logger", "(", "args", ")", ":", "\n", "    ", "'''\n    Write logs to checkpoint and console\n    '''", "\n", "\n", "if", "args", ".", "do_train", ":", "\n", "        ", "log_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", "or", "args", ".", "init_checkpoint", ",", "'train.log'", ")", "\n", "", "else", ":", "\n", "        ", "log_file", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", "or", "args", ".", "init_checkpoint", ",", "'test.log'", ")", "\n", "\n", "", "logging", ".", "basicConfig", "(", "\n", "format", "=", "'%(asctime)s %(levelname)-8s %(message)s'", ",", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "datefmt", "=", "'%Y-%m-%d %H:%M:%S'", ",", "\n", "filename", "=", "log_file", ",", "\n", "filemode", "=", "'w'", "\n", ")", "\n", "\n", "if", "args", ".", "print_on_screen", ":", "\n", "        ", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "console", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s %(levelname)-8s %(message)s'", ")", "\n", "console", ".", "setFormatter", "(", "formatter", ")", "\n", "logging", ".", "getLogger", "(", "''", ")", ".", "addHandler", "(", "console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.log_metrics": [[155, 162], ["logging.info", "writer.add_scalar"], "function", ["None"], ["", "", "def", "log_metrics", "(", "mode", ",", "step", ",", "metrics", ",", "writer", ")", ":", "\n", "    ", "'''\n    Print the evaluation logs\n    '''", "\n", "for", "metric", "in", "metrics", ":", "\n", "        ", "logging", ".", "info", "(", "'%s %s at step %d: %f'", "%", "(", "mode", ",", "metric", ",", "step", ",", "metrics", "[", "metric", "]", ")", ")", "\n", "writer", ".", "add_scalar", "(", "\"_\"", ".", "join", "(", "[", "mode", ",", "metric", "]", ")", ",", "metrics", "[", "metric", "]", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.main": [[164, 418], ["tensorboardX.SummaryWriter", "run_ogb.set_logger", "logging.info", "torch.manual_seed", "numpy.random.seed", "ogb.linkproppred.LinkPropPredDataset", "ogb.linkproppred.LinkPropPredDataset.get_edge_split", "ogb.linkproppred.Evaluator", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "print", "tqdm.tqdm", "ogb_wikikg2.model.KGEModel", "logging.info", "kge_model.cuda.named_parameters", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "ValueError", "run_ogb.override_config", "int", "print", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "print", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "range", "train_true_head[].append", "train_true_tail[].append", "logging.info", "kge_model.cuda.cuda", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "ogb_wikikg2.dataloader.BidirectionalOneShotIterator", "torch.optim.AdamW", "logging.info", "torch.load", "kge_model.cuda.load_state_dict", "logging.info", "logging.info", "logging.info", "tqdm.tqdm", "run_ogb.save_model", "logging.info", "kge_model.cuda.test_step", "run_ogb.log_metrics", "logging.info", "kge_model.cuda.test_step", "run_ogb.log_metrics", "logging.info", "numpy.random.choice", "kge_model.cuda.test_step", "run_ogb.log_metrics", "len", "len", "len", "logging.info", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "logging.info", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "len", "ogb_wikikg2.dataloader.TrainDataset", "ogb_wikikg2.dataloader.TrainDataset", "filter", "os.path.join", "torch.optim.AdamW.load_state_dict", "str", "range", "kge_model.cuda.train_step", "training_logs.append", "run_ogb.log_metrics", "run_ogb.log_metrics", "len", "time.time", "max", "sum", "max", "max", "kge_model.cuda.parameters", "logging.info", "run_ogb.save_model", "training_logs[].keys", "run_ogb.log_metrics", "logging.info", "kge_model.cuda.test_step", "run_ogb.log_metrics", "str", "str", "param.size", "p.numel", "sum", "len", "logging.info", "kge_model.cuda.test_step", "run_ogb.log_metrics", "kge_model.cuda.parameters"], "function", ["home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.set_logger", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.override_config", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.save_model", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.test_step", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.log_metrics", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.test_step", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.log_metrics", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.test_step", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.log_metrics", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.train_step", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.log_metrics", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.log_metrics", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.save_model", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.log_metrics", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.test_step", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.log_metrics", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.test_step", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.None.run_ogb.log_metrics"], ["", "", "def", "main", "(", "args", ")", ":", "\n", "# one of train/val/test mode must be choosed", "\n", "    ", "if", "(", "not", "args", ".", "do_train", ")", "and", "(", "not", "args", ".", "do_valid", ")", "and", "(", "not", "args", ".", "do_test", ")", "and", "(", "not", "args", ".", "evaluate_train", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'one of train/val/test mode must be choosed.'", ")", "\n", "\n", "", "if", "args", ".", "init_checkpoint", ":", "\n", "        ", "override_config", "(", "args", ")", "\n", "\n", "# \u53c2\u6570\u4fdd\u5b58\u8def\u5f84", "\n", "", "args", ".", "save_path", "=", "'log/%s/%s/%s-%s/%s'", "%", "(", "\n", "args", ".", "dataset", ",", "args", ".", "model", ",", "args", ".", "hidden_dim", ",", "args", ".", "gamma", ",", "time", ".", "time", "(", ")", ")", "if", "args", ".", "save_path", "==", "None", "else", "args", ".", "save_path", "\n", "writer", "=", "SummaryWriter", "(", "args", ".", "save_path", ")", "\n", "\n", "# Write logs to checkpoint and console", "\n", "set_logger", "(", "args", ")", "\n", "logging", ".", "info", "(", "'Random seed: {}'", ".", "format", "(", "args", ".", "randomSeed", ")", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "randomSeed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "randomSeed", ")", "\n", "dataset", "=", "LinkPropPredDataset", "(", "name", "=", "args", ".", "dataset", ")", "\n", "split_dict", "=", "dataset", ".", "get_edge_split", "(", ")", "\n", "nentity", "=", "dataset", ".", "graph", "[", "'num_nodes'", "]", "\n", "nrelation", "=", "int", "(", "max", "(", "dataset", ".", "graph", "[", "'edge_reltype'", "]", ")", "[", "0", "]", ")", "+", "1", "\n", "\n", "evaluator", "=", "Evaluator", "(", "name", "=", "args", ".", "dataset", ")", "\n", "\n", "args", ".", "nentity", "=", "nentity", "\n", "args", ".", "nrelation", "=", "nrelation", "\n", "\n", "logging", ".", "info", "(", "'Saving: %s'", "%", "args", ".", "save_path", ")", "\n", "logging", ".", "info", "(", "'Model: %s'", "%", "args", ".", "model", ")", "\n", "logging", ".", "info", "(", "'Dataset: %s'", "%", "args", ".", "dataset", ")", "\n", "logging", ".", "info", "(", "'#entity: %d'", "%", "nentity", ")", "\n", "logging", ".", "info", "(", "'#relation: %d'", "%", "nrelation", ")", "\n", "\n", "train_triples", "=", "split_dict", "[", "'train'", "]", "\n", "logging", ".", "info", "(", "'#train: %d'", "%", "len", "(", "train_triples", "[", "'head'", "]", ")", ")", "\n", "valid_triples", "=", "split_dict", "[", "'valid'", "]", "\n", "logging", ".", "info", "(", "'#valid: %d'", "%", "len", "(", "valid_triples", "[", "'head'", "]", ")", ")", "\n", "test_triples", "=", "split_dict", "[", "'test'", "]", "\n", "logging", ".", "info", "(", "'#test: %d'", "%", "len", "(", "test_triples", "[", "'head'", "]", ")", ")", "\n", "\n", "arr_inv", "=", "None", "\n", "if", "args", ".", "inverses", ":", "\n", "# add inverse triples", "\n", "        ", "print", "(", "\"Adding inverse edges\"", ")", "\n", "orig_head", ",", "orig_tail", "=", "train_triples", "[", "'head'", "]", ",", "train_triples", "[", "'tail'", "]", "\n", "train_triples", "[", "'head'", "]", "=", "np", ".", "concatenate", "(", "[", "orig_head", ",", "orig_tail", "]", ")", "\n", "train_triples", "[", "'tail'", "]", "=", "np", ".", "concatenate", "(", "[", "orig_tail", ",", "orig_head", "]", ")", "\n", "train_triples", "[", "'relation'", "]", "=", "np", ".", "concatenate", "(", "[", "train_triples", "[", "'relation'", "]", ",", "train_triples", "[", "'relation'", "]", "+", "nrelation", "]", ")", "\n", "\n", "# let's add inverses to the validation", "\n", "if", "args", ".", "val_inverses", ":", "\n", "            ", "logging", ".", "info", "(", "\"Adding inverses to the validation set\"", ")", "\n", "orig_head", ",", "orig_tail", "=", "valid_triples", "[", "'head'", "]", ",", "valid_triples", "[", "'tail'", "]", "\n", "orig_head_negs", ",", "orig_tail_negs", "=", "valid_triples", "[", "'head_neg'", "]", ",", "valid_triples", "[", "'tail_neg'", "]", "\n", "valid_triples", "[", "'head'", "]", "=", "np", ".", "concatenate", "(", "[", "orig_head", ",", "orig_tail", "]", ")", "\n", "valid_triples", "[", "'tail'", "]", "=", "np", ".", "concatenate", "(", "[", "orig_tail", ",", "orig_head", "]", ")", "\n", "valid_triples", "[", "'relation'", "]", "=", "np", ".", "concatenate", "(", "[", "valid_triples", "[", "'relation'", "]", ",", "valid_triples", "[", "'relation'", "]", "+", "nrelation", "]", ")", "\n", "valid_triples", "[", "'head_neg'", "]", "=", "np", ".", "concatenate", "(", "[", "orig_head_negs", ",", "orig_tail_negs", "]", ",", "axis", "=", "0", ")", "\n", "valid_triples", "[", "'tail_neg'", "]", "=", "np", ".", "concatenate", "(", "[", "orig_tail_negs", ",", "orig_head_negs", "]", ",", "axis", "=", "0", ")", "\n", "# let's add inverses to the test", "\n", "logging", ".", "info", "(", "\"Adding inverses to the test set\"", ")", "\n", "orig_head", ",", "orig_tail", "=", "test_triples", "[", "'head'", "]", ",", "test_triples", "[", "'tail'", "]", "\n", "orig_head_negs", ",", "orig_tail_negs", "=", "test_triples", "[", "'head_neg'", "]", ",", "test_triples", "[", "'tail_neg'", "]", "\n", "test_triples", "[", "'head'", "]", "=", "np", ".", "concatenate", "(", "[", "orig_head", ",", "orig_tail", "]", ")", "\n", "test_triples", "[", "'tail'", "]", "=", "np", ".", "concatenate", "(", "[", "orig_tail", ",", "orig_head", "]", ")", "\n", "test_triples", "[", "'relation'", "]", "=", "np", ".", "concatenate", "(", "[", "test_triples", "[", "'relation'", "]", ",", "test_triples", "[", "'relation'", "]", "+", "nrelation", "]", ")", "\n", "test_triples", "[", "'head_neg'", "]", "=", "np", ".", "concatenate", "(", "[", "orig_head_negs", ",", "orig_tail_negs", "]", ",", "axis", "=", "0", ")", "\n", "test_triples", "[", "'tail_neg'", "]", "=", "np", ".", "concatenate", "(", "[", "orig_tail_negs", ",", "orig_head_negs", "]", ",", "axis", "=", "0", ")", "\n", "del", "orig_head", ",", "orig_tail", ",", "orig_head_negs", ",", "orig_tail_negs", "\n", "\n", "", "nrelation", "=", "nrelation", "*", "2", "+", "1", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"No inverse edges\"", ")", "\n", "nrelation", "+=", "1", "\n", "", "print", "(", "f\"Total num relations: {nrelation}\"", ")", "\n", "\n", "train_count", ",", "train_true_head", ",", "train_true_tail", "=", "defaultdict", "(", "lambda", ":", "4", ")", ",", "defaultdict", "(", "list", ")", ",", "defaultdict", "(", "list", ")", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "len", "(", "train_triples", "[", "'head'", "]", ")", ")", ")", ":", "\n", "        ", "head", ",", "relation", ",", "tail", "=", "train_triples", "[", "'head'", "]", "[", "i", "]", ",", "train_triples", "[", "'relation'", "]", "[", "i", "]", ",", "train_triples", "[", "'tail'", "]", "[", "i", "]", "\n", "train_count", "[", "(", "head", ",", "relation", ")", "]", "+=", "1", "\n", "if", "not", "args", ".", "inverses", ":", "\n", "            ", "train_count", "[", "(", "tail", ",", "-", "relation", "-", "1", ")", "]", "+=", "1", "\n", "", "train_true_head", "[", "(", "relation", ",", "tail", ")", "]", ".", "append", "(", "head", ")", "\n", "train_true_tail", "[", "(", "head", ",", "relation", ")", "]", ".", "append", "(", "tail", ")", "\n", "\n", "", "kge_model", "=", "KGEModel", "(", "\n", "model_name", "=", "args", ".", "model", ",", "\n", "nentity", "=", "nentity", ",", "\n", "nrelation", "=", "nrelation", ",", "\n", "hidden_dim", "=", "args", ".", "hidden_dim", ",", "\n", "gamma", "=", "args", ".", "gamma", ",", "\n", "evaluator", "=", "evaluator", ",", "\n", "drop", "=", "args", ".", "drop", ",", "\n", "triples", "=", "train_triples", ",", "\n", ")", "\n", "logging", ".", "info", "(", "'Model Parameter Configuration:'", ")", "\n", "for", "name", ",", "param", "in", "kge_model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "logging", ".", "info", "(", "'Parameter %s: %s, require_grad = %s'", "%", "(", "name", ",", "str", "(", "param", ".", "size", "(", ")", ")", ",", "str", "(", "param", ".", "requires_grad", ")", ")", ")", "\n", "", "logging", ".", "info", "(", "f\"Total number of params: {sum(p.numel() for p in kge_model.parameters())}\"", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "        ", "kge_model", "=", "kge_model", ".", "cuda", "(", ")", "\n", "\n", "", "if", "args", ".", "do_train", ":", "\n", "# Set training dataloader iterator", "\n", "        ", "train_dataloader_head", "=", "DataLoader", "(", "\n", "TrainDataset", "(", "train_triples", ",", "nentity", ",", "nrelation", ",", "\n", "args", ".", "negative_sample_size", ",", "'head-batch'", ",", "\n", "train_count", ",", "train_true_head", ",", "train_true_tail", ",", "\n", "index_warp", "=", "arr_inv", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "max", "(", "1", ",", "args", ".", "cpu_num", "//", "2", ")", ",", "\n", "collate_fn", "=", "TrainDataset", ".", "collate_fn", "\n", ")", "\n", "\n", "train_dataloader_tail", "=", "DataLoader", "(", "\n", "TrainDataset", "(", "train_triples", ",", "nentity", ",", "nrelation", ",", "\n", "args", ".", "negative_sample_size", ",", "'tail-batch'", ",", "\n", "train_count", ",", "train_true_head", ",", "train_true_tail", ",", "\n", "index_warp", "=", "arr_inv", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "max", "(", "1", ",", "args", ".", "cpu_num", "//", "2", ")", ",", "\n", "collate_fn", "=", "TrainDataset", ".", "collate_fn", "\n", ")", "\n", "\n", "train_iterator", "=", "BidirectionalOneShotIterator", "(", "train_dataloader_head", ",", "train_dataloader_tail", ")", "\n", "\n", "# Set training configuration", "\n", "current_learning_rate", "=", "args", ".", "learning_rate", "\n", "optimizer", "=", "torch", ".", "optim", ".", "AdamW", "(", "\n", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "kge_model", ".", "parameters", "(", ")", ")", ",", "\n", "lr", "=", "current_learning_rate", "\n", ")", "\n", "if", "args", ".", "warm_up_steps", ":", "\n", "            ", "warm_up_steps", "=", "args", ".", "warm_up_steps", "\n", "", "else", ":", "\n", "            ", "warm_up_steps", "=", "args", ".", "max_steps", "//", "2", "\n", "\n", "", "", "if", "args", ".", "init_checkpoint", ":", "\n", "# Restore model from checkpoint directory", "\n", "        ", "logging", ".", "info", "(", "'Loading checkpoint %s...'", "%", "args", ".", "init_checkpoint", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "init_checkpoint", ",", "'checkpoint'", ")", ")", "\n", "init_step", "=", "checkpoint", "[", "'step'", "]", "\n", "kge_model", ".", "load_state_dict", "(", "checkpoint", "[", "'model_state_dict'", "]", ")", "\n", "if", "args", ".", "do_train", ":", "\n", "            ", "current_learning_rate", "=", "checkpoint", "[", "'current_learning_rate'", "]", "\n", "warm_up_steps", "=", "checkpoint", "[", "'warm_up_steps'", "]", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer_state_dict'", "]", ")", "\n", "", "", "else", ":", "\n", "        ", "logging", ".", "info", "(", "'Ramdomly Initializing %s Model...'", "%", "args", ".", "model", ")", "\n", "init_step", "=", "0", "\n", "\n", "", "step", "=", "init_step", "\n", "\n", "logging", ".", "info", "(", "'Start Training...'", ")", "\n", "logging", ".", "info", "(", "'init_step = %d'", "%", "init_step", ")", "\n", "logging", ".", "info", "(", "'batch_size = %d'", "%", "args", ".", "batch_size", ")", "\n", "logging", ".", "info", "(", "'negative_adversarial_sampling = %d'", "%", "args", ".", "negative_adversarial_sampling", ")", "\n", "logging", ".", "info", "(", "'hidden_dim = %d'", "%", "args", ".", "hidden_dim", ")", "\n", "logging", ".", "info", "(", "'gamma = %f'", "%", "args", ".", "gamma", ")", "\n", "logging", ".", "info", "(", "'negative_adversarial_sampling = %s'", "%", "str", "(", "args", ".", "negative_adversarial_sampling", ")", ")", "\n", "if", "args", ".", "negative_adversarial_sampling", ":", "\n", "        ", "logging", ".", "info", "(", "'adversarial_temperature = %f'", "%", "args", ".", "adversarial_temperature", ")", "\n", "\n", "# Set valid dataloader as it would be evaluated during training", "\n", "\n", "", "if", "args", ".", "do_train", ":", "\n", "        ", "logging", ".", "info", "(", "'learning_rate = %d'", "%", "current_learning_rate", ")", "\n", "training_logs", "=", "[", "]", "\n", "max_val_mrr", "=", "0", "\n", "best_val_metrics", "=", "None", "\n", "best_test_metrics", "=", "None", "\n", "best_metrics_step", "=", "0", "\n", "\n", "# Training Loop", "\n", "for", "step", "in", "tqdm", "(", "range", "(", "init_step", ",", "args", ".", "max_steps", ")", ")", ":", "\n", "\n", "            ", "log", "=", "kge_model", ".", "train_step", "(", "kge_model", ",", "optimizer", ",", "train_iterator", ",", "args", ")", "\n", "training_logs", ".", "append", "(", "log", ")", "\n", "\n", "if", "step", ">=", "warm_up_steps", ":", "\n", "                ", "current_learning_rate", "=", "current_learning_rate", "/", "10", "\n", "logging", ".", "info", "(", "'Change learning_rate to %f at step %d'", "%", "(", "current_learning_rate", ",", "step", ")", ")", "\n", "for", "p", "in", "optimizer", ".", "param_groups", ":", "\n", "                    ", "p", "[", "'lr'", "]", "=", "current_learning_rate", "\n", "", "warm_up_steps", "=", "warm_up_steps", "*", "3", "\n", "\n", "", "if", "step", "%", "args", ".", "save_checkpoint_steps", "==", "0", "and", "step", ">", "0", ":", "# ~ 41 seconds/saving", "\n", "                ", "save_variable_list", "=", "{", "\n", "'step'", ":", "step", ",", "\n", "'current_learning_rate'", ":", "current_learning_rate", ",", "\n", "'warm_up_steps'", ":", "warm_up_steps", "\n", "}", "\n", "save_model", "(", "kge_model", ",", "optimizer", ",", "save_variable_list", ",", "args", ")", "\n", "\n", "", "if", "step", "%", "args", ".", "log_steps", "==", "0", ":", "\n", "                ", "metrics", "=", "{", "}", "\n", "for", "metric", "in", "training_logs", "[", "0", "]", ".", "keys", "(", ")", ":", "\n", "                    ", "metrics", "[", "metric", "]", "=", "sum", "(", "[", "log", "[", "metric", "]", "for", "log", "in", "training_logs", "]", ")", "/", "len", "(", "training_logs", ")", "\n", "", "log_metrics", "(", "'Train'", ",", "step", ",", "metrics", ",", "writer", ")", "\n", "training_logs", "=", "[", "]", "\n", "\n", "", "if", "args", ".", "do_valid", "and", "step", "%", "args", ".", "valid_steps", "==", "0", "and", "step", ">", "0", ":", "\n", "                ", "logging", ".", "info", "(", "'Evaluating on Valid Dataset...'", ")", "\n", "metrics", "=", "kge_model", ".", "test_step", "(", "kge_model", ",", "valid_triples", ",", "args", ")", "\n", "log_metrics", "(", "'Valid'", ",", "step", ",", "metrics", ",", "writer", ")", "\n", "val_mrr", "=", "metrics", "[", "'mrr_list'", "]", "\n", "\n", "# evaluate on test set", "\n", "if", "val_mrr", ">", "max_val_mrr", ":", "\n", "                    ", "max_val_mrr", "=", "val_mrr", "\n", "best_val_metrics", "=", "metrics", "\n", "best_metrics_step", "=", "step", "\n", "\n", "if", "args", ".", "do_test", ":", "\n", "                        ", "logging", ".", "info", "(", "'Evaluating on Test Dataset...'", ")", "\n", "metrics", "=", "kge_model", ".", "test_step", "(", "kge_model", ",", "test_triples", ",", "args", ")", "\n", "log_metrics", "(", "'Test'", ",", "step", ",", "metrics", ",", "writer", ")", "\n", "best_test_metrics", "=", "metrics", "\n", "\n", "# record best metrics on validate and test set", "\n", "", "", "", "", "if", "args", ".", "do_valid", "and", "best_val_metrics", "!=", "None", ":", "\n", "            ", "log_metrics", "(", "'Best Val  Metrics'", ",", "best_metrics_step", ",", "best_val_metrics", ",", "writer", ")", "\n", "", "if", "args", ".", "do_test", "and", "best_test_metrics", "!=", "None", ":", "\n", "            ", "log_metrics", "(", "'Best Test Metrics'", ",", "best_metrics_step", ",", "best_test_metrics", ",", "writer", ")", "\n", "\n", "", "save_variable_list", "=", "{", "\n", "'step'", ":", "step", ",", "\n", "'current_learning_rate'", ":", "current_learning_rate", ",", "\n", "'warm_up_steps'", ":", "warm_up_steps", "\n", "}", "\n", "save_model", "(", "kge_model", ",", "optimizer", ",", "save_variable_list", ",", "args", ")", "\n", "\n", "", "if", "args", ".", "do_valid", ":", "\n", "        ", "logging", ".", "info", "(", "'Evaluating on Valid Dataset...'", ")", "\n", "metrics", "=", "kge_model", ".", "test_step", "(", "kge_model", ",", "valid_triples", ",", "args", ")", "\n", "log_metrics", "(", "'Valid'", ",", "step", ",", "metrics", ",", "writer", ")", "\n", "\n", "", "if", "args", ".", "do_test", ":", "\n", "        ", "logging", ".", "info", "(", "'Evaluating on Test Dataset...'", ")", "\n", "metrics", "=", "kge_model", ".", "test_step", "(", "kge_model", ",", "test_triples", ",", "args", ")", "\n", "log_metrics", "(", "'Test'", ",", "step", ",", "metrics", ",", "writer", ")", "\n", "\n", "", "if", "args", ".", "evaluate_train", ":", "\n", "        ", "logging", ".", "info", "(", "'Evaluating on Training Dataset...'", ")", "\n", "small_train_triples", "=", "{", "}", "\n", "indices", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "train_triples", "[", "'head'", "]", ")", ",", "args", ".", "ntriples_eval_train", ",", "replace", "=", "False", ")", "\n", "for", "i", "in", "train_triples", ":", "\n", "            ", "small_train_triples", "[", "i", "]", "=", "train_triples", "[", "i", "]", "[", "indices", "]", "\n", "", "metrics", "=", "kge_model", ".", "test_step", "(", "kge_model", ",", "small_train_triples", ",", "args", ",", "random_sampling", "=", "True", ")", "\n", "log_metrics", "(", "'Train'", ",", "step", ",", "metrics", ",", "writer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.__init__": [[29, 184], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_", "model.KGEModel.register_buffer", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "print", "print", "print", "print", "ValueError", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Sequential", "torch.Sequential", "torch.Sequential", "print", "model.KGEModel.register_buffer", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_", "type_ids.extend", "print", "pickle.load", "anchors.append", "len", "model.KGEModel.register_buffer", "torch.Embedding", "torch.Embedding", "torch.Embedding", "torch.init.uniform_", "torch.init.uniform_", "torch.init.uniform_", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "model.KGEModel.embedding_range.item", "model.KGEModel.embedding_range.item", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "type_ids.append", "type_ids.extend", "pickle.load", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.Linear", "torch.Linear", "torch.Linear", "open", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "ogb_wikikg2.transfile.TransformerBlock", "model.KGEModel.embedding_range.item", "model.KGEModel.embedding_range.item", "open", "pickle.load.get", "nodes[].extend", "model.KGEModel.embedding_range.item", "enumerate", "range", "model.KGEModel.embedding_range.item", "range", "range", "range", "len", "nodes[].extend", "model.KGEModel.embedding_range.item", "model.KGEModel.embedding_range.item", "model.KGEModel.gamma.item", "len", "range", "len"], "methods", ["home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.BidirectionalOneShotIterator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_name", ",", "nentity", ",", "nrelation", ",", "hidden_dim", ",", "gamma", ",", "evaluator", ",", "\n", "drop", ",", "triples", ")", ":", "\n", "        ", "super", "(", "KGEModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "nentity", "=", "nentity", "\n", "self", ".", "nrelation", "=", "nrelation", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "epsilon", "=", "2.0", "\n", "self", ".", "u", "=", "0.1", "\n", "\n", "self", ".", "drop", "=", "drop", "\n", "self", ".", "triples", "=", "triples", "\n", "\n", "if", "model_name", "not", "in", "[", "'TransE'", ",", "'DistMult'", ",", "'ComplEx'", ",", "'RotatE'", ",", "'AutoSF'", ",", "'PairRE'", ",", "'TripleRE'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "'model %s not supported'", "%", "model_name", ")", "\n", "\n", "", "if", "model_name", "==", "'RotatE'", ":", "\n", "            ", "self", ".", "entity_dim", "=", "hidden_dim", "*", "2", "\n", "self", ".", "relation_dim", "=", "hidden_dim", "\n", "", "elif", "model_name", "==", "'ComplEx'", ":", "\n", "            ", "self", ".", "entity_dim", "=", "hidden_dim", "*", "2", "\n", "self", ".", "relation_dim", "=", "hidden_dim", "*", "2", "\n", "", "elif", "model_name", "==", "'PairRE'", ":", "\n", "            ", "self", ".", "entity_dim", "=", "hidden_dim", "\n", "self", ".", "relation_dim", "=", "hidden_dim", "*", "2", "\n", "", "elif", "model_name", "==", "'TripleRE'", ":", "\n", "            ", "self", ".", "entity_dim", "=", "hidden_dim", "\n", "self", ".", "relation_dim", "=", "hidden_dim", "*", "3", "\n", "\n", "", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "Tensor", "(", "[", "gamma", "]", ")", ",", "\n", "requires_grad", "=", "False", "\n", ")", "\n", "\n", "self", ".", "embedding_range", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "Tensor", "(", "[", "(", "self", ".", "gamma", ".", "item", "(", ")", "+", "self", ".", "epsilon", ")", "/", "hidden_dim", "]", ")", ",", "\n", "requires_grad", "=", "False", "\n", ")", "\n", "\n", "anchor_file", "=", "'data/ogbl-wikikg2_20000_anchors_20000_paths_d0.4_b0.0_p0.4_r0.2_pykeen_50sp_bfs.pkl'", "\n", "neighbor_file", "=", "'data/neighbors+relations_with_max_degrees.pkl'", "\n", "\n", "anchor_dim", "=", "self", ".", "entity_dim", "\n", "self", ".", "sample_anchors", "=", "20", "\n", "\n", "node_dim", "=", "32", "\n", "self", ".", "node_itself", "=", "True", "\n", "\n", "self", ".", "sample_neighbors", "=", "5", "\n", "\n", "self", ".", "attn_layers_num", "=", "1", "\n", "self", ".", "attn_dim", "=", "self", ".", "entity_dim", "\n", "self", ".", "attn_heads", "=", "8", "\n", "\n", "merge_strategy", "=", "'mean_pooling'", "\n", "self", ".", "mean_pooling", "=", "False", "\n", "self", ".", "linear_proj", "=", "False", "\n", "if", "merge_strategy", "==", "'mean_pooling'", ":", "\n", "            ", "self", ".", "mean_pooling", "=", "True", "\n", "", "elif", "merge_strategy", "==", "'linear_proj'", ":", "\n", "            ", "self", ".", "linear_proj", "=", "True", "\n", "", "else", ":", "\n", "            ", "raise", "TypeError", "\n", "\n", "", "mlp_ratio", "=", "4", "\n", "\n", "# 3 types: node itself, neighbor nodes, anchors", "\n", "self", ".", "type_embedding", "=", "nn", ".", "Embedding", "(", "num_embeddings", "=", "3", ",", "embedding_dim", "=", "self", ".", "attn_dim", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "\n", "tensor", "=", "self", ".", "type_embedding", ".", "weight", ",", "# .weight for Embedding", "\n", "a", "=", "-", "self", ".", "embedding_range", ".", "item", "(", ")", ",", "\n", "b", "=", "self", ".", "embedding_range", ".", "item", "(", ")", "\n", ")", "\n", "# back to normal relation embs, +1 for the padding relation", "\n", "self", ".", "relation_embedding", "=", "nn", ".", "Embedding", "(", "num_embeddings", "=", "nrelation", ",", "embedding_dim", "=", "self", ".", "relation_dim", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "\n", "tensor", "=", "self", ".", "relation_embedding", ".", "weight", ",", "\n", "a", "=", "-", "self", ".", "embedding_range", ".", "item", "(", ")", ",", "\n", "b", "=", "self", ".", "embedding_range", ".", "item", "(", ")", "\n", ")", "\n", "\n", "if", "self", ".", "linear_proj", ":", "\n", "            ", "self", ".", "set_enc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "self", ".", "attn_dim", "*", "(", "self", ".", "sample_anchors", "+", "self", ".", "sample_neighbors", "+", "self", ".", "node_itself", ")", ",", "self", ".", "entity_dim", "*", "mlp_ratio", ")", ",", "\n", "nn", ".", "Dropout", "(", "self", ".", "drop", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "entity_dim", "*", "mlp_ratio", ",", "self", ".", "entity_dim", ")", "\n", ")", "\n", "\n", "", "type_ids", "=", "[", "]", "\n", "\n", "self", ".", "node_before_attn", "=", "None", "\n", "if", "self", ".", "node_itself", "or", "self", ".", "sample_neighbors", ">", "0", ":", "\n", "            ", "print", "(", "\"Creating nodes infomation\"", ")", "\n", "if", "self", ".", "node_itself", ":", "\n", "                ", "type_ids", ".", "append", "(", "0", ")", "\n", "nodes", "=", "[", "[", "i", "]", "for", "i", "in", "range", "(", "nentity", ")", "]", "\n", "", "else", ":", "\n", "                ", "nodes", "=", "[", "[", "]", "for", "i", "in", "range", "(", "nentity", ")", "]", "\n", "", "if", "self", ".", "sample_neighbors", ">", "0", ":", "\n", "                ", "type_ids", ".", "extend", "(", "[", "1", "]", "*", "self", ".", "sample_neighbors", ")", "\n", "nb_vocab", "=", "pickle", ".", "load", "(", "open", "(", "neighbor_file", ",", "'rb'", ")", ")", "\n", "# convert dict to list", "\n", "for", "i", "in", "range", "(", "nentity", ")", ":", "\n", "                    ", "nb_info", "=", "nb_vocab", ".", "get", "(", "i", ",", "{", "'nbs'", ":", "[", "]", ",", "'rels'", ":", "[", "]", "}", ")", "\n", "nodes", "[", "i", "]", ".", "extend", "(", "[", "n", "for", "n", "in", "nb_info", "[", "'nbs'", "]", "[", ":", "self", ".", "sample_neighbors", "]", "]", ")", "\n", "if", "len", "(", "nodes", "[", "i", "]", ")", "<", "self", ".", "sample_neighbors", "+", "self", ".", "node_itself", ":", "\n", "                        ", "nodes", "[", "i", "]", ".", "extend", "(", "[", "nentity", "for", "_", "in", "range", "(", "self", ".", "sample_neighbors", "+", "self", ".", "node_itself", "-", "len", "(", "nodes", "[", "i", "]", ")", ")", "]", ")", "\n", "", "", "", "self", ".", "register_buffer", "(", "'nodes'", ",", "torch", ".", "tensor", "(", "nodes", ",", "dtype", "=", "torch", ".", "long", ")", ")", "\n", "del", "nodes", "\n", "\n", "self", ".", "node_embeddings", "=", "nn", ".", "Embedding", "(", "num_embeddings", "=", "nentity", "+", "1", ",", "embedding_dim", "=", "self", ".", "attn_dim", "if", "node_dim", "==", "0", "else", "node_dim", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "\n", "tensor", "=", "self", ".", "node_embeddings", ".", "weight", ",", "# .weight for Embedding", "\n", "a", "=", "-", "self", ".", "embedding_range", ".", "item", "(", ")", ",", "\n", "b", "=", "self", ".", "embedding_range", ".", "item", "(", ")", "\n", ")", "\n", "self", ".", "node_before_attn", "=", "None", "if", "node_dim", "==", "0", "else", "nn", ".", "Linear", "(", "node_dim", ",", "self", ".", "attn_dim", ")", "\n", "\n", "", "if", "self", ".", "sample_anchors", ">", "0", ":", "\n", "            ", "type_ids", ".", "extend", "(", "[", "2", "]", "*", "self", ".", "sample_anchors", ")", "\n", "print", "(", "\"Creating hashes\"", ")", "\n", "anchors", ",", "_", ",", "vocab", "=", "pickle", ".", "load", "(", "open", "(", "anchor_file", ",", "\"rb\"", ")", ")", "\n", "anchors", ".", "append", "(", "-", "99", ")", "\n", "nanchor", "=", "len", "(", "anchors", ")", "\n", "token2id", "=", "{", "t", ":", "i", "for", "i", ",", "t", "in", "enumerate", "(", "anchors", ")", "}", "\n", "hashes", "=", "[", "\n", "[", "token2id", "[", "i", "]", "for", "i", "in", "vocab", "[", "e", "]", "[", "'ancs'", "]", "[", ":", "self", ".", "sample_anchors", "]", "]", "+", "[", "nanchor", "]", "*", "(", "self", ".", "sample_anchors", "-", "len", "(", "vocab", "[", "e", "]", "[", "'ancs'", "]", ")", ")", "\n", "for", "e", "in", "range", "(", "nentity", ")", "\n", "]", "\n", "self", ".", "register_buffer", "(", "'hashes'", ",", "torch", ".", "tensor", "(", "hashes", ",", "dtype", "=", "torch", ".", "long", ")", ")", "\n", "del", "hashes", "\n", "\n", "self", ".", "anchor_embeddings", "=", "nn", ".", "Embedding", "(", "num_embeddings", "=", "nanchor", "+", "1", ",", "embedding_dim", "=", "anchor_dim", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "\n", "tensor", "=", "self", ".", "anchor_embeddings", ".", "weight", ",", "# .weight for Embedding", "\n", "a", "=", "-", "self", ".", "embedding_range", ".", "item", "(", ")", ",", "\n", "b", "=", "self", ".", "embedding_range", ".", "item", "(", ")", "\n", ")", "\n", "\n", "", "self", ".", "register_buffer", "(", "'type_ids'", ",", "torch", ".", "tensor", "(", "type_ids", ",", "dtype", "=", "torch", ".", "long", ")", ")", "\n", "\n", "self", ".", "attn_layers", "=", "nn", ".", "ModuleList", "(", "[", "\n", "TransformerBlock", "(", "in_feat", "=", "self", ".", "attn_dim", ",", "mlp_ratio", "=", "mlp_ratio", ",", "num_heads", "=", "self", ".", "attn_heads", ",", "dropout_p", "=", "self", ".", "drop", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "attn_layers_num", ")", "\n", "]", ")", "\n", "\n", "print", "(", "'node embedding: {}\\tsample anchors: {}\\tsample neighbors: {}'", ".", "format", "(", "self", ".", "node_itself", ",", "self", ".", "sample_anchors", ",", "self", ".", "sample_neighbors", ")", ")", "\n", "print", "(", "'anchor dim: {}\\nentity dim: {}\\nrelation dim: {}\\nnode dim: {}\\nmerge strategy:{}'", ".", "format", "(", "\n", "anchor_dim", ",", "self", ".", "entity_dim", ",", "self", ".", "relation_dim", ",", "node_dim", ",", "merge_strategy", ")", ")", "\n", "print", "(", "'attention dim: {}, attention heads: {}\\n'", ".", "format", "(", "self", ".", "attn_dim", ",", "self", ".", "attn_heads", ")", ")", "\n", "print", "(", "'node layers:\\n{}\\nattention layers:\\n{}'", ".", "format", "(", "\n", "self", ".", "node_before_attn", ",", "\n", "self", ".", "attn_layers", ")", ")", "\n", "\n", "self", ".", "evaluator", "=", "evaluator", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.encode_by_index": [[187, 215], ["len", "model.KGEModel.anchor_embeddings", "model.KGEModel.node_embeddings", "model.KGEModel.mean", "model.KGEModel.node_before_attn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.KGEModel.type_embedding", "enc_layer", "model.KGEModel.set_enc", "model.KGEModel.view"], "methods", ["None"], ["", "def", "encode_by_index", "(", "self", ",", "entities", ":", "torch", ".", "LongTensor", ")", "->", "torch", ".", "FloatTensor", ":", "\n", "        ", "assert", "len", "(", "entities", ".", "shape", ")", "==", "1", "\n", "embs_seq", "=", "None", "# [entities.shape, sequence_length, feature_dimension]", "\n", "if", "self", ".", "sample_anchors", ">", "0", ":", "\n", "            ", "hashes", "=", "self", ".", "hashes", "[", "entities", "]", "\n", "anc_embs", "=", "self", ".", "anchor_embeddings", "(", "hashes", ")", "\n", "embs_seq", "=", "anc_embs", "#if embs_seq is None else torch.cat([embs_seq, anc_embs], dim=-2)", "\n", "\n", "", "if", "self", ".", "node_itself", "or", "self", ".", "sample_neighbors", ">", "0", ":", "\n", "            ", "nodes", "=", "self", ".", "nodes", "[", "entities", "]", "\n", "node_embs", "=", "self", ".", "node_embeddings", "(", "nodes", ")", "\n", "if", "self", ".", "node_before_attn", "is", "not", "None", ":", "\n", "                ", "node_embs", "=", "self", ".", "node_before_attn", "(", "node_embs", ")", "\n", "", "embs_seq", "=", "node_embs", "if", "embs_seq", "is", "None", "else", "torch", ".", "cat", "(", "[", "node_embs", ",", "embs_seq", "]", ",", "dim", "=", "-", "2", ")", "\n", "\n", "", "if", "self", ".", "attn_layers_num", ">", "0", ":", "\n", "            ", "embs_seq", "=", "embs_seq", "+", "self", ".", "type_embedding", "(", "self", ".", "type_ids", ")", "\n", "for", "enc_layer", "in", "self", ".", "attn_layers", ":", "\n", "                ", "embs_seq", "=", "enc_layer", "(", "embs_seq", ")", "\n", "\n", "", "", "if", "self", ".", "mean_pooling", ":", "\n", "            ", "embs_seq", "=", "embs_seq", ".", "mean", "(", "dim", "=", "-", "2", ")", "\n", "", "elif", "self", ".", "linear_proj", ":", "\n", "            ", "embs_seq", "=", "self", ".", "set_enc", "(", "embs_seq", ".", "view", "(", "*", "entities", ".", "shape", ",", "-", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "return", "embs_seq", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.forward": [[217, 267], ["model.KGEModel.encode_by_index().unsqueeze", "model.KGEModel.relation_embedding().unsqueeze", "model.KGEModel.encode_by_index().unsqueeze", "ValueError", "sample.size", "model.KGEModel.encode_by_index().view", "model.KGEModel.relation_embedding().unsqueeze", "model.KGEModel.encode_by_index().unsqueeze", "model.KGEModel.encode_by_index", "model.KGEModel.relation_embedding", "model.KGEModel.encode_by_index", "head_part.size", "head_part.size", "model.KGEModel.encode_by_index().unsqueeze", "model.KGEModel.relation_embedding().unsqueeze", "model.KGEModel.encode_by_index().view", "ValueError", "model.KGEModel.encode_by_index", "model.KGEModel.relation_embedding", "model.KGEModel.encode_by_index", "tail_part.size", "tail_part.size", "head_part.view", "model.KGEModel.encode_by_index", "model.KGEModel.relation_embedding", "model.KGEModel.encode_by_index", "tail_part.view"], "methods", ["home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.encode_by_index", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.encode_by_index", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.encode_by_index", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.encode_by_index", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.encode_by_index", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.encode_by_index"], ["", "def", "forward", "(", "self", ",", "sample", ",", "mode", "=", "'single'", ")", ":", "\n", "        ", "'''\n        Forward function that calculate the score of a batch of triples.\n        In the 'single' mode, sample is a batch of triple.\n        In the 'head-batch' or 'tail-batch' mode, sample consists two part.\n        The first part is usually the positive sample.\n        And the second part is the entities in the negative samples.\n        Because negative samples and positive samples usually share two elements\n        in their triple ((head, relation) or (relation, tail)).\n        '''", "\n", "\n", "if", "mode", "==", "'single'", ":", "\n", "            ", "batch_size", ",", "negative_sample_size", "=", "sample", ".", "size", "(", "0", ")", ",", "1", "\n", "head", "=", "self", ".", "encode_by_index", "(", "sample", "[", ":", ",", "0", "]", ")", ".", "unsqueeze", "(", "1", ")", "\n", "relation", "=", "self", ".", "relation_embedding", "(", "sample", "[", ":", ",", "1", "]", ")", ".", "unsqueeze", "(", "1", ")", "\n", "tail", "=", "self", ".", "encode_by_index", "(", "sample", "[", ":", ",", "2", "]", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "elif", "mode", "==", "'head-batch'", ":", "\n", "            ", "tail_part", ",", "head_part", "=", "sample", "\n", "batch_size", ",", "negative_sample_size", "=", "head_part", ".", "size", "(", "0", ")", ",", "head_part", ".", "size", "(", "1", ")", "\n", "head", "=", "self", ".", "encode_by_index", "(", "head_part", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "batch_size", ",", "negative_sample_size", ",", "-", "1", ")", "\n", "relation", "=", "self", ".", "relation_embedding", "(", "tail_part", "[", ":", ",", "1", "]", ")", ".", "unsqueeze", "(", "1", ")", "\n", "tail", "=", "self", ".", "encode_by_index", "(", "tail_part", "[", ":", ",", "2", "]", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "elif", "mode", "==", "'tail-batch'", ":", "\n", "            ", "head_part", ",", "tail_part", "=", "sample", "\n", "batch_size", ",", "negative_sample_size", "=", "tail_part", ".", "size", "(", "0", ")", ",", "tail_part", ".", "size", "(", "1", ")", "\n", "head", "=", "self", ".", "encode_by_index", "(", "head_part", "[", ":", ",", "0", "]", ")", ".", "unsqueeze", "(", "1", ")", "\n", "relation", "=", "self", ".", "relation_embedding", "(", "head_part", "[", ":", ",", "1", "]", ")", ".", "unsqueeze", "(", "1", ")", "\n", "tail", "=", "self", ".", "encode_by_index", "(", "tail_part", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "batch_size", ",", "negative_sample_size", ",", "-", "1", ")", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'mode %s not supported'", "%", "mode", ")", "\n", "\n", "", "model_func", "=", "{", "\n", "'TransE'", ":", "self", ".", "TransE", ",", "\n", "'DistMult'", ":", "self", ".", "DistMult", ",", "\n", "'ComplEx'", ":", "self", ".", "ComplEx", ",", "\n", "'RotatE'", ":", "self", ".", "RotatE", ",", "\n", "'AutoSF'", ":", "self", ".", "AutoSF", ",", "\n", "'PairRE'", ":", "self", ".", "PairRE", ",", "\n", "'TripleRE'", ":", "self", ".", "TripleRE", ",", "\n", "}", "\n", "\n", "if", "self", ".", "model_name", "in", "model_func", ":", "\n", "            ", "score", "=", "model_func", "[", "self", ".", "model_name", "]", "(", "head", ",", "relation", ",", "tail", ",", "mode", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'model %s not supported'", "%", "self", ".", "model_name", ")", "\n", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.AutoSF": [[268, 291], ["torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "AutoSF", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "\n", "        ", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "rs", "=", "torch", ".", "chunk", "(", "relation", ",", "4", ",", "dim", "=", "-", "1", ")", "\n", "ts", "=", "torch", ".", "chunk", "(", "tail", ",", "4", ",", "dim", "=", "-", "1", ")", "\n", "rt0", "=", "rs", "[", "0", "]", "*", "ts", "[", "0", "]", "\n", "rt1", "=", "rs", "[", "1", "]", "*", "ts", "[", "1", "]", "+", "rs", "[", "2", "]", "*", "ts", "[", "3", "]", "\n", "rt2", "=", "rs", "[", "0", "]", "*", "ts", "[", "2", "]", "+", "rs", "[", "2", "]", "*", "ts", "[", "3", "]", "\n", "rt3", "=", "-", "rs", "[", "1", "]", "*", "ts", "[", "1", "]", "+", "rs", "[", "3", "]", "*", "ts", "[", "2", "]", "\n", "rts", "=", "torch", ".", "cat", "(", "[", "rt0", ",", "rt1", ",", "rt2", ",", "rt3", "]", ",", "dim", "=", "-", "1", ")", "\n", "score", "=", "torch", ".", "sum", "(", "head", "*", "rts", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "else", ":", "\n", "            ", "hs", "=", "torch", ".", "chunk", "(", "head", ",", "4", ",", "dim", "=", "-", "1", ")", "\n", "rs", "=", "torch", ".", "chunk", "(", "relation", ",", "4", ",", "dim", "=", "-", "1", ")", "\n", "hr0", "=", "hs", "[", "0", "]", "*", "rs", "[", "0", "]", "\n", "hr1", "=", "hs", "[", "1", "]", "*", "rs", "[", "1", "]", "-", "hs", "[", "3", "]", "*", "rs", "[", "1", "]", "\n", "hr2", "=", "hs", "[", "2", "]", "*", "rs", "[", "0", "]", "+", "hs", "[", "3", "]", "*", "rs", "[", "3", "]", "\n", "hr3", "=", "hs", "[", "1", "]", "*", "rs", "[", "2", "]", "+", "hs", "[", "2", "]", "*", "rs", "[", "2", "]", "\n", "hrs", "=", "torch", ".", "cat", "(", "[", "hr0", ",", "hr1", ",", "hr2", ",", "hr3", "]", ",", "dim", "=", "-", "1", ")", "\n", "score", "=", "torch", ".", "sum", "(", "hrs", "*", "tail", ",", "dim", "=", "-", "1", ")", "\n", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.PairRE": [[292, 301], ["torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "model.KGEModel.gamma.item", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "methods", ["None"], ["", "def", "PairRE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "re_head", ",", "re_tail", "=", "torch", ".", "chunk", "(", "relation", ",", "2", ",", "dim", "=", "2", ")", "\n", "\n", "head", "=", "F", ".", "normalize", "(", "head", ",", "2", ",", "-", "1", ")", "\n", "tail", "=", "F", ".", "normalize", "(", "tail", ",", "2", ",", "-", "1", ")", "\n", "\n", "score", "=", "head", "*", "re_head", "-", "tail", "*", "re_tail", "+", "head", "-", "tail", "\n", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "torch", ".", "norm", "(", "score", ",", "p", "=", "1", ",", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.TripleRE": [[302, 314], ["torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "model.KGEModel.gamma.item", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "methods", ["None"], ["", "def", "TripleRE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "re_head", ",", "re_mid", ",", "re_tail", "=", "torch", ".", "chunk", "(", "relation", ",", "3", ",", "dim", "=", "2", ")", "\n", "\n", "e_h", "=", "torch", ".", "ones_like", "(", "head", ")", "\n", "e_t", "=", "torch", ".", "ones_like", "(", "tail", ")", "\n", "\n", "head", "=", "F", ".", "normalize", "(", "head", ",", "2", ",", "-", "1", ")", "\n", "tail", "=", "F", ".", "normalize", "(", "tail", ",", "2", ",", "-", "1", ")", "\n", "\n", "score", "=", "head", "*", "(", "self", ".", "u", "*", "re_head", "+", "e_h", ")", "-", "tail", "*", "(", "self", ".", "u", "*", "re_tail", "+", "e_t", ")", "+", "re_mid", "\n", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "torch", ".", "norm", "(", "score", ",", "p", "=", "1", ",", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.TransE": [[315, 325], ["torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "torch.normalize", "model.KGEModel.gamma.item", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "methods", ["None"], ["", "def", "TransE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "head", "=", "F", ".", "normalize", "(", "head", ",", "2", ",", "-", "1", ")", "\n", "tail", "=", "F", ".", "normalize", "(", "tail", ",", "2", ",", "-", "1", ")", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "score", "=", "head", "+", "(", "relation", "-", "tail", ")", "\n", "", "else", ":", "\n", "            ", "score", "=", "(", "head", "+", "relation", ")", "-", "tail", "\n", "\n", "", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "torch", ".", "norm", "(", "score", ",", "p", "=", "1", ",", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.DistMult": [[326, 334], ["score.sum.sum.sum"], "methods", ["None"], ["", "def", "DistMult", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "score", "=", "head", "*", "(", "relation", "*", "tail", ")", "\n", "", "else", ":", "\n", "            ", "score", "=", "(", "head", "*", "relation", ")", "*", "tail", "\n", "\n", "", "score", "=", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.ComplEx": [[335, 351], ["torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "score.sum.sum.sum"], "methods", ["None"], ["", "def", "ComplEx", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "re_head", ",", "im_head", "=", "torch", ".", "chunk", "(", "head", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_relation", ",", "im_relation", "=", "torch", ".", "chunk", "(", "relation", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_tail", ",", "im_tail", "=", "torch", ".", "chunk", "(", "tail", ",", "2", ",", "dim", "=", "2", ")", "\n", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "re_score", "=", "re_relation", "*", "re_tail", "+", "im_relation", "*", "im_tail", "\n", "im_score", "=", "re_relation", "*", "im_tail", "-", "im_relation", "*", "re_tail", "\n", "score", "=", "re_head", "*", "re_score", "+", "im_head", "*", "im_score", "\n", "", "else", ":", "\n", "            ", "re_score", "=", "re_head", "*", "re_relation", "-", "im_head", "*", "im_relation", "\n", "im_score", "=", "re_head", "*", "im_relation", "+", "im_head", "*", "re_relation", "\n", "score", "=", "re_score", "*", "re_tail", "+", "im_score", "*", "im_tail", "\n", "\n", "", "score", "=", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.RotatE": [[352, 381], ["torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.chunk", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.cos", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.sin", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "score.norm.norm.norm", "model.KGEModel.gamma.item", "score.norm.norm.sum", "model.KGEModel.embedding_range.item"], "methods", ["None"], ["", "def", "RotatE", "(", "self", ",", "head", ",", "relation", ",", "tail", ",", "mode", ")", ":", "\n", "        ", "pi", "=", "3.14159265358979323846", "\n", "\n", "re_head", ",", "im_head", "=", "torch", ".", "chunk", "(", "head", ",", "2", ",", "dim", "=", "2", ")", "\n", "re_tail", ",", "im_tail", "=", "torch", ".", "chunk", "(", "tail", ",", "2", ",", "dim", "=", "2", ")", "\n", "\n", "# Make phases of relations uniformly distributed in [-pi, pi]", "\n", "\n", "phase_relation", "=", "relation", "/", "(", "self", ".", "embedding_range", ".", "item", "(", ")", "/", "pi", ")", "\n", "\n", "re_relation", "=", "torch", ".", "cos", "(", "phase_relation", ")", "\n", "im_relation", "=", "torch", ".", "sin", "(", "phase_relation", ")", "\n", "\n", "if", "mode", "==", "'head-batch'", ":", "\n", "            ", "re_score", "=", "re_relation", "*", "re_tail", "+", "im_relation", "*", "im_tail", "\n", "im_score", "=", "re_relation", "*", "im_tail", "-", "im_relation", "*", "re_tail", "\n", "re_score", "=", "re_score", "-", "re_head", "\n", "im_score", "=", "im_score", "-", "im_head", "\n", "", "else", ":", "\n", "            ", "re_score", "=", "re_head", "*", "re_relation", "-", "im_head", "*", "im_relation", "\n", "im_score", "=", "re_head", "*", "im_relation", "+", "im_head", "*", "re_relation", "\n", "re_score", "=", "re_score", "-", "re_tail", "\n", "im_score", "=", "im_score", "-", "im_tail", "\n", "\n", "", "score", "=", "torch", ".", "stack", "(", "[", "re_score", ",", "im_score", "]", ",", "dim", "=", "0", ")", "\n", "score", "=", "score", ".", "norm", "(", "dim", "=", "0", ")", "\n", "\n", "score", "=", "self", ".", "gamma", ".", "item", "(", ")", "-", "score", ".", "sum", "(", "dim", "=", "2", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.train_step": [[382, 439], ["model.train", "optimizer.zero_grad", "next", "model", "model", "torch.logsigmoid().squeeze", "torch.logsigmoid().squeeze", "torch.logsigmoid().squeeze", "loss.backward", "optimizer.step", "positive_sample.cuda.cuda.cuda", "negative_sample.cuda.cuda.cuda", "subsampling_weight.cuda.cuda.cuda", "torch.logsigmoid().mean", "torch.logsigmoid().mean", "torch.logsigmoid().mean", "positive_sample_loss.item", "negative_sample_loss.item", "loss.item", "torch.logsigmoid", "torch.logsigmoid", "torch.logsigmoid", "torch.logsigmoid().squeeze.mean", "torch.logsigmoid().mean.mean", "subsampling_weight.cuda.cuda.sum", "subsampling_weight.cuda.cuda.sum", "regularization.item", "torch.logsigmoid", "torch.logsigmoid", "torch.logsigmoid", "torch.softmax().detach", "torch.softmax().detach", "torch.softmax().detach", "torch.logsigmoid", "torch.logsigmoid", "torch.logsigmoid", "model.entity_embedding.norm", "model.relation_embedding.norm().norm", "torch.softmax", "torch.softmax", "torch.softmax", "model.relation_embedding.norm"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "train_step", "(", "model", ",", "optimizer", ",", "train_iterator", ",", "args", ")", ":", "\n", "        ", "'''\n        A single train step. Apply back-propation and return the loss\n        '''", "\n", "\n", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "positive_sample", ",", "negative_sample", ",", "subsampling_weight", ",", "mode", "=", "next", "(", "train_iterator", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "positive_sample", "=", "positive_sample", ".", "cuda", "(", ")", "\n", "negative_sample", "=", "negative_sample", ".", "cuda", "(", ")", "\n", "subsampling_weight", "=", "subsampling_weight", ".", "cuda", "(", ")", "\n", "\n", "", "negative_score", "=", "model", "(", "(", "positive_sample", ",", "negative_sample", ")", ",", "mode", "=", "mode", ")", "\n", "if", "args", ".", "negative_adversarial_sampling", ":", "\n", "# In self-adversarial sampling, we do not apply back-propagation on the sampling weight", "\n", "            ", "negative_score", "=", "(", "F", ".", "softmax", "(", "negative_score", "*", "args", ".", "adversarial_temperature", ",", "dim", "=", "1", ")", ".", "detach", "(", ")", "\n", "*", "F", ".", "logsigmoid", "(", "-", "negative_score", ")", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "negative_score", "=", "F", ".", "logsigmoid", "(", "-", "negative_score", ")", ".", "mean", "(", "dim", "=", "1", ")", "\n", "\n", "", "positive_score", "=", "model", "(", "positive_sample", ")", "\n", "positive_score", "=", "F", ".", "logsigmoid", "(", "positive_score", ")", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "if", "args", ".", "uni_weight", ":", "\n", "            ", "positive_sample_loss", "=", "-", "positive_score", ".", "mean", "(", ")", "\n", "negative_sample_loss", "=", "-", "negative_score", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "            ", "positive_sample_loss", "=", "-", "(", "subsampling_weight", "*", "positive_score", ")", ".", "sum", "(", ")", "/", "subsampling_weight", ".", "sum", "(", ")", "\n", "negative_sample_loss", "=", "-", "(", "subsampling_weight", "*", "negative_score", ")", ".", "sum", "(", ")", "/", "subsampling_weight", ".", "sum", "(", ")", "\n", "\n", "", "loss", "=", "(", "positive_sample_loss", "+", "negative_sample_loss", ")", "/", "2", "\n", "\n", "if", "args", ".", "regularization", "!=", "0.0", ":", "\n", "# Use L3 regularization for ComplEx and DistMult", "\n", "            ", "regularization", "=", "args", ".", "regularization", "*", "(", "\n", "model", ".", "entity_embedding", ".", "norm", "(", "p", "=", "3", ")", "**", "3", "+", "\n", "model", ".", "relation_embedding", ".", "norm", "(", "p", "=", "3", ")", ".", "norm", "(", "p", "=", "3", ")", "**", "3", "\n", ")", "\n", "loss", "=", "loss", "+", "regularization", "\n", "regularization_log", "=", "{", "'regularization'", ":", "regularization", ".", "item", "(", ")", "}", "\n", "", "else", ":", "\n", "            ", "regularization_log", "=", "{", "}", "\n", "\n", "", "loss", ".", "backward", "(", ")", "\n", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "log", "=", "{", "\n", "**", "regularization_log", ",", "\n", "'positive_sample_loss'", ":", "positive_sample_loss", ".", "item", "(", ")", ",", "\n", "'negative_sample_loss'", ":", "negative_sample_loss", ".", "item", "(", ")", ",", "\n", "'loss'", ":", "loss", ".", "item", "(", ")", "\n", "}", "\n", "\n", "return", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.model.KGEModel.test_step": [[440, 504], ["model.eval", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "collections.defaultdict", "sum", "ogb_wikikg2.dataloader.TestDataset", "ogb_wikikg2.dataloader.TestDataset", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "max", "max", "len", "torch.cat().mean().item", "torch.cat().mean().item", "torch.cat().mean().item", "torch.cat().mean().item", "torch.cat().mean().item", "torch.cat().mean().item", "torch.cat().mean().item", "torch.cat().mean().item", "torch.cat().mean().item", "model", "model.evaluator.eval", "positive_sample.cuda.cuda.cuda", "negative_sample.cuda.cuda.cuda", "test_logs[].append", "logging.info", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat().mean", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "test_step", "(", "model", ",", "test_triples", ",", "args", ",", "random_sampling", "=", "False", ")", ":", "\n", "        ", "'''\n        Evaluate the model on test or valid datasets\n        '''", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "# Prepare dataloader for evaluation", "\n", "test_dataloader_head", "=", "DataLoader", "(", "\n", "TestDataset", "(", "\n", "test_triples", ",", "\n", "args", ",", "\n", "'head-batch'", ",", "\n", "random_sampling", "\n", ")", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "\n", "num_workers", "=", "max", "(", "1", ",", "args", ".", "cpu_num", "//", "2", ")", ",", "\n", "collate_fn", "=", "TestDataset", ".", "collate_fn", "\n", ")", "\n", "\n", "test_dataloader_tail", "=", "DataLoader", "(", "\n", "TestDataset", "(", "\n", "test_triples", ",", "\n", "args", ",", "\n", "'tail-batch'", ",", "\n", "random_sampling", "\n", ")", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "\n", "num_workers", "=", "max", "(", "1", ",", "args", ".", "cpu_num", "//", "2", ")", ",", "\n", "collate_fn", "=", "TestDataset", ".", "collate_fn", "\n", ")", "\n", "\n", "test_dataset_list", "=", "[", "test_dataloader_head", ",", "test_dataloader_tail", "]", "\n", "\n", "test_logs", "=", "defaultdict", "(", "list", ")", "\n", "\n", "step", "=", "0", "\n", "total_steps", "=", "sum", "(", "[", "len", "(", "dataset", ")", "for", "dataset", "in", "test_dataset_list", "]", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "test_dataset", "in", "test_dataset_list", ":", "\n", "                ", "for", "positive_sample", ",", "negative_sample", ",", "mode", "in", "test_dataset", ":", "\n", "                    ", "if", "args", ".", "cuda", ":", "\n", "                        ", "positive_sample", "=", "positive_sample", ".", "cuda", "(", ")", "\n", "negative_sample", "=", "negative_sample", ".", "cuda", "(", ")", "\n", "\n", "", "score", "=", "model", "(", "(", "positive_sample", ",", "negative_sample", ")", ",", "mode", ")", "\n", "\n", "batch_results", "=", "model", ".", "evaluator", ".", "eval", "(", "{", "'y_pred_pos'", ":", "score", "[", ":", ",", "0", "]", ",", "\n", "'y_pred_neg'", ":", "score", "[", ":", ",", "1", ":", "]", "}", ")", "\n", "for", "metric", "in", "batch_results", ":", "\n", "                        ", "test_logs", "[", "metric", "]", ".", "append", "(", "batch_results", "[", "metric", "]", ")", "\n", "\n", "", "if", "step", "%", "args", ".", "test_log_steps", "==", "0", ":", "\n", "                        ", "logging", ".", "info", "(", "'Evaluating the model... (%d/%d)'", "%", "(", "step", ",", "total_steps", ")", ")", "\n", "\n", "", "step", "+=", "1", "\n", "\n", "", "", "metrics", "=", "{", "}", "\n", "for", "metric", "in", "test_logs", ":", "\n", "                ", "metrics", "[", "metric", "]", "=", "torch", ".", "cat", "(", "test_logs", "[", "metric", "]", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "", "return", "metrics", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.transfile.DropPath.__init__": [[10, 13], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.BidirectionalOneShotIterator.__init__"], ["def", "__init__", "(", "self", ",", "dropout_p", "=", "0.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout_p", "=", "dropout_p", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.transfile.DropPath.forward": [[14, 27], ["random_tensor.floor_", "torch.rand"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "if", "self", ".", "dropout_p", "==", "0.0", "or", "not", "self", ".", "training", ":", "\n", "            ", "return", "x", "\n", "\n", "", "keep_prob", "=", "1", "-", "self", ".", "dropout_p", "\n", "shape", "=", "(", "x", ".", "shape", "[", "0", "]", ",", ")", "+", "(", "1", ",", ")", "*", "(", "x", ".", "ndim", "-", "1", ")", "\n", "random_tensor", "=", "keep_prob", "+", "torch", ".", "rand", "(", "shape", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "random_tensor", ".", "floor_", "(", ")", "# 0 / 1", "\n", "\n", "# Discussion: https://github.com/rwightman/pytorch-image-models/discussions/895", "\n", "output", "=", "x", "/", "keep_prob", "*", "random_tensor", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.transfile.MLP.__init__": [[32, 52], ["torch.nn.Module.__init__", "act_layer", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.BidirectionalOneShotIterator.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "in_feat", ":", "int", ",", "\n", "mlp_ratio", ":", "int", "=", "1", ",", "\n", "out_feat", ":", "int", "=", "0", ",", "\n", "dropout_p", ":", "float", "=", "0.0", ",", "\n", "act_layer", ":", "nn", ".", "Module", "=", "nn", ".", "ReLU", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "mid_feat", "=", "in_feat", "*", "mlp_ratio", "\n", "out_feat", "=", "out_feat", "or", "in_feat", "\n", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "in_feat", ",", "mid_feat", ")", "\n", "self", ".", "drop1", "=", "nn", ".", "Dropout", "(", "dropout_p", ")", "\n", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "mid_feat", ",", "out_feat", ")", "\n", "self", ".", "drop2", "=", "nn", ".", "Dropout", "(", "dropout_p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.transfile.MLP.forward": [[53, 57], ["transfile.MLP.drop1", "transfile.MLP.drop2", "transfile.MLP.act", "transfile.MLP.linear2", "transfile.MLP.linear1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "drop1", "(", "self", ".", "act", "(", "self", ".", "linear1", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "drop2", "(", "self", ".", "linear2", "(", "x", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.transfile.AttentionLayer.__init__": [[62, 77], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.BidirectionalOneShotIterator.__init__"], ["def", "__init__", "(", "self", ",", "num_feat", ":", "int", ",", "num_heads", ":", "int", "=", "8", ",", "qkv_bias", ":", "bool", "=", "False", ",", "dropout_p", ":", "float", "=", "0.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "num_feat", "%", "num_heads", "==", "0", "\n", "\n", "self", ".", "num_feat", "=", "num_feat", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "self", ".", "head_dim", "=", "num_feat", "//", "num_heads", "\n", "self", ".", "scale", "=", "self", ".", "head_dim", "**", "-", "0.5", "\n", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "self", ".", "num_feat", ",", "self", ".", "num_feat", "*", "3", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "dropout_p", ")", "\n", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "self", ".", "num_feat", ",", "self", ".", "num_feat", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "dropout_p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.transfile.AttentionLayer.forward": [[78, 99], ["transfile.AttentionLayer.qkv", "qkv.permute.permute.reshape", "qkv.permute.permute.permute", "qkv.permute.permute.unbind", "transfile.AttentionLayer.softmax", "transfile.AttentionLayer.attn_drop", "transfile.AttentionLayer.reshape", "transfile.AttentionLayer.proj", "transfile.AttentionLayer.proj_drop", "k.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "L", ",", "C", "=", "x", ".", "shape", "\n", "assert", "C", "==", "self", ".", "num_feat", "\n", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", "# [B, L, num_feat * 3]", "\n", "qkv", "=", "qkv", ".", "reshape", "(", "B", ",", "L", ",", "3", ",", "self", ".", "num_heads", ",", "self", ".", "head_dim", ")", "# [B, L, 3, num_heads, head_dim]", "\n", "qkv", "=", "qkv", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "# [3, B, num_heads, L, head_dim]", "\n", "q", ",", "k", ",", "v", "=", "qkv", ".", "unbind", "(", "0", ")", "# [B, num_heads, L, head_dim] * 3", "\n", "\n", "attn", "=", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", "# [B, num_heads, L, L]", "\n", "attn", "=", "attn", "*", "self", ".", "scale", "\n", "attn", "=", "attn", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", "# [B, L, num_heads, head_dim]", "\n", "x", "=", "x", ".", "reshape", "(", "B", ",", "L", ",", "self", ".", "num_feat", ")", "# [B, L, num_feat]", "\n", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.transfile.TransformerBlock.__init__": [[102, 127], ["torch.nn.Module.__init__", "transfile.DropPath", "norm_layer", "norm_layer", "transfile.AttentionLayer", "transfile.MLP"], "methods", ["home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.BidirectionalOneShotIterator.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_feat", ":", "int", ",", "\n", "out_feat", ":", "int", "=", "0", ",", "\n", "num_heads", ":", "int", "=", "8", ",", "\n", "qkv_bias", ":", "bool", "=", "False", ",", "\n", "mlp_ratio", ":", "int", "=", "4", ",", "\n", "dropout_p", ":", "float", "=", "0.0", ",", "\n", "droppath_p", ":", "float", "=", "0.0", ",", "\n", "act_layer", ":", "nn", ".", "Module", "=", "nn", ".", "GELU", ",", "\n", "norm_layer", ":", "nn", ".", "Module", "=", "nn", ".", "LayerNorm", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "out_feat", "=", "out_feat", "or", "in_feat", "\n", "\n", "self", ".", "droppath", "=", "DropPath", "(", "droppath_p", ")", "\n", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "in_feat", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "in_feat", ")", "\n", "\n", "self", ".", "attn", "=", "AttentionLayer", "(", "num_feat", "=", "in_feat", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "dropout_p", "=", "dropout_p", ")", "\n", "\n", "self", ".", "mlp", "=", "MLP", "(", "\n", "in_feat", "=", "in_feat", ",", "mlp_ratio", "=", "mlp_ratio", ",", "out_feat", "=", "out_feat", ",", "dropout_p", "=", "dropout_p", ",", "act_layer", "=", "act_layer", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.transfile.TransformerBlock.forward": [[129, 134], ["transfile.TransformerBlock.droppath", "transfile.TransformerBlock.droppath", "transfile.TransformerBlock.attn", "transfile.TransformerBlock.mlp", "transfile.TransformerBlock.norm1", "transfile.TransformerBlock.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "droppath", "(", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "droppath", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "# x = self.droppath(self.mlp(self.norm2(x)))", "\n", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.TrainDataset.__init__": [[12, 23], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "triples", ",", "nentity", ",", "nrelation", ",", "negative_sample_size", ",", "mode", ",", "count", ",", "true_head", ",", "true_tail", ",", "index_warp", "=", "None", ")", ":", "\n", "        ", "self", ".", "len", "=", "len", "(", "triples", "[", "'head'", "]", ")", "\n", "self", ".", "triples", "=", "triples", "\n", "self", ".", "nentity", "=", "nentity", "\n", "self", ".", "nrelation", "=", "nrelation", "\n", "self", ".", "negative_sample_size", "=", "negative_sample_size", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "count", "=", "count", "\n", "self", ".", "true_head", "=", "true_head", "\n", "self", ".", "true_tail", "=", "true_tail", "\n", "self", ".", "index_warp", "=", "index_warp", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.TrainDataset.__len__": [[24, 26], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.TrainDataset.__getitem__": [[27, 40], ["torch.sqrt", "torch.randint", "torch.LongTensor", "torch.Tensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "head", ",", "relation", ",", "tail", "=", "self", ".", "triples", "[", "'head'", "]", "[", "idx", "]", ",", "self", ".", "triples", "[", "'relation'", "]", "[", "idx", "]", ",", "self", ".", "triples", "[", "'tail'", "]", "[", "idx", "]", "\n", "positive_sample", "=", "[", "head", ",", "relation", ",", "tail", "]", "\n", "\n", "subsampling_weight", "=", "self", ".", "count", "[", "(", "head", ",", "relation", ")", "]", "+", "self", ".", "count", "[", "(", "tail", ",", "-", "relation", "-", "1", ")", "]", "\n", "subsampling_weight", "=", "torch", ".", "sqrt", "(", "1", "/", "torch", ".", "Tensor", "(", "[", "subsampling_weight", "]", ")", ")", "\n", "\n", "negative_sample", "=", "torch", ".", "randint", "(", "0", ",", "self", ".", "nentity", ",", "(", "self", ".", "negative_sample_size", ",", ")", ")", "\n", "if", "self", ".", "index_warp", "is", "not", "None", ":", "\n", "            ", "negative_sample", "=", "self", ".", "index_warp", "[", "negative_sample", "]", "\n", "", "positive_sample", "=", "torch", ".", "LongTensor", "(", "positive_sample", ")", "\n", "\n", "return", "positive_sample", ",", "negative_sample", ",", "subsampling_weight", ",", "self", ".", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.TrainDataset.collate_fn": [[41, 48], ["torch.stack", "torch.stack", "torch.cat"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "positive_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "0", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "negative_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "1", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "subsample_weight", "=", "torch", ".", "cat", "(", "[", "_", "[", "2", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "mode", "=", "data", "[", "0", "]", "[", "3", "]", "\n", "return", "positive_sample", ",", "negative_sample", ",", "subsample_weight", ",", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.TestDataset.__init__": [[51, 60], ["len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "triples", ",", "args", ",", "mode", ",", "random_sampling", ")", ":", "\n", "        ", "self", ".", "len", "=", "len", "(", "triples", "[", "'head'", "]", ")", "\n", "self", ".", "triples", "=", "triples", "\n", "self", ".", "nentity", "=", "args", ".", "nentity", "\n", "self", ".", "nrelation", "=", "args", ".", "nrelation", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "random_sampling", "=", "random_sampling", "\n", "if", "random_sampling", ":", "\n", "            ", "self", ".", "neg_size", "=", "args", ".", "neg_size_eval_train", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.TestDataset.__len__": [[61, 63], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.TestDataset.__getitem__": [[64, 82], ["torch.LongTensor", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.LongTensor", "torch.from_numpy", "torch.LongTensor", "torch.randint", "torch.LongTensor", "torch.from_numpy", "torch.LongTensor", "torch.randint"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "head", ",", "relation", ",", "tail", "=", "self", ".", "triples", "[", "'head'", "]", "[", "idx", "]", ",", "self", ".", "triples", "[", "'relation'", "]", "[", "idx", "]", ",", "self", ".", "triples", "[", "'tail'", "]", "[", "idx", "]", "\n", "positive_sample", "=", "torch", ".", "LongTensor", "(", "(", "head", ",", "relation", ",", "tail", ")", ")", "\n", "\n", "if", "self", ".", "mode", "==", "'head-batch'", ":", "\n", "            ", "if", "not", "self", ".", "random_sampling", ":", "\n", "                ", "negative_sample", "=", "torch", ".", "cat", "(", "[", "torch", ".", "LongTensor", "(", "[", "head", "]", ")", ",", "torch", ".", "from_numpy", "(", "self", ".", "triples", "[", "'head_neg'", "]", "[", "idx", "]", ")", "]", ")", "\n", "", "else", ":", "\n", "                ", "negative_sample", "=", "torch", ".", "cat", "(", "\n", "[", "torch", ".", "LongTensor", "(", "[", "head", "]", ")", ",", "torch", ".", "randint", "(", "0", ",", "self", ".", "nentity", ",", "size", "=", "(", "self", ".", "neg_size", ",", ")", ")", "]", ")", "\n", "", "", "elif", "self", ".", "mode", "==", "'tail-batch'", ":", "\n", "            ", "if", "not", "self", ".", "random_sampling", ":", "\n", "                ", "negative_sample", "=", "torch", ".", "cat", "(", "[", "torch", ".", "LongTensor", "(", "[", "tail", "]", ")", ",", "torch", ".", "from_numpy", "(", "self", ".", "triples", "[", "'tail_neg'", "]", "[", "idx", "]", ")", "]", ")", "\n", "", "else", ":", "\n", "                ", "negative_sample", "=", "torch", ".", "cat", "(", "\n", "[", "torch", ".", "LongTensor", "(", "[", "tail", "]", ")", ",", "torch", ".", "randint", "(", "0", ",", "self", ".", "nentity", ",", "size", "=", "(", "self", ".", "neg_size", ",", ")", ")", "]", ")", "\n", "\n", "", "", "return", "positive_sample", ",", "negative_sample", ",", "self", ".", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.TestDataset.collate_fn": [[83, 90], ["torch.stack", "torch.stack"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "data", ")", ":", "\n", "        ", "positive_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "0", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "negative_sample", "=", "torch", ".", "stack", "(", "[", "_", "[", "1", "]", "for", "_", "in", "data", "]", ",", "dim", "=", "0", ")", "\n", "mode", "=", "data", "[", "0", "]", "[", "2", "]", "\n", "\n", "return", "positive_sample", ",", "negative_sample", ",", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.BidirectionalOneShotIterator.__init__": [[93, 97], ["dataloader.BidirectionalOneShotIterator.one_shot_iterator", "dataloader.BidirectionalOneShotIterator.one_shot_iterator"], "methods", ["home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.BidirectionalOneShotIterator.one_shot_iterator", "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.BidirectionalOneShotIterator.one_shot_iterator"], ["    ", "def", "__init__", "(", "self", ",", "dataloader_head", ",", "dataloader_tail", ")", ":", "\n", "        ", "self", ".", "iterator_head", "=", "self", ".", "one_shot_iterator", "(", "dataloader_head", ")", "\n", "self", ".", "iterator_tail", "=", "self", ".", "one_shot_iterator", "(", "dataloader_tail", ")", "\n", "self", ".", "step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.BidirectionalOneShotIterator.__next__": [[98, 105], ["next", "next"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "self", ".", "step", "+=", "1", "\n", "if", "self", ".", "step", "%", "2", "==", "0", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "iterator_head", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "iterator_tail", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.hzli-ucas_stargraph.ogb_wikikg2.dataloader.BidirectionalOneShotIterator.one_shot_iterator": [[106, 114], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "one_shot_iterator", "(", "dataloader", ")", ":", "\n", "        ", "'''\n        Transform a PyTorch Dataloader into python iterator\n        '''", "\n", "while", "True", ":", "\n", "            ", "for", "data", "in", "dataloader", ":", "\n", "                ", "yield", "data", "\n", "", "", "", "", ""]]}