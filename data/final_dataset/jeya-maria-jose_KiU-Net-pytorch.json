{"home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.BasicBlock.__init__": [[38, 47], ["torch.Module.__init__", "extractors.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "extractors.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.conv3x3", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", "=", "1", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.BasicBlock.forward": [[48, 65], ["extractors.BasicBlock.conv1", "extractors.BasicBlock.bn1", "extractors.BasicBlock.relu", "extractors.BasicBlock.conv2", "extractors.BasicBlock.bn2", "extractors.BasicBlock.relu", "extractors.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.Bottleneck.__init__": [[70, 82], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ",", "\n", "padding", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.Bottleneck.forward": [[83, 104], ["extractors.Bottleneck.conv1", "extractors.Bottleneck.bn1", "extractors.Bottleneck.relu", "extractors.Bottleneck.conv2", "extractors.Bottleneck.bn2", "extractors.Bottleneck.relu", "extractors.Bottleneck.conv3", "extractors.Bottleneck.bn3", "extractors.Bottleneck.relu", "extractors.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.ResNet.__init__": [[107, 127], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "extractors.ResNet._make_layer", "extractors.ResNet._make_layer", "extractors.ResNet._make_layer", "extractors.ResNet._make_layer", "extractors.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.ResNet._make_layer", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.ResNet._make_layer", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.ResNet._make_layer", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", "=", "(", "3", ",", "4", ",", "23", ",", "3", ")", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "1", ",", "dilation", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "1", ",", "dilation", "=", "4", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.ResNet._make_layer": [[128, 143], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", "]", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.ResNet.forward": [[144, 156], ["extractors.ResNet.conv1", "extractors.ResNet.bn1", "extractors.ResNet.relu", "extractors.ResNet.maxpool", "extractors.ResNet.layer1", "extractors.ResNet.layer2", "extractors.ResNet.layer3", "extractors.ResNet.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x_3", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x_3", ")", "\n", "\n", "return", "x", ",", "x_3", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors._DenseLayer.__init__": [[164, 183], ["torch.Sequential.__init__", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "extractors._DenseLayer.add_module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_input_features", ",", "growth_rate", ",", "bn_size", ",", "drop_rate", ",", "index", ")", ":", "\n", "        ", "super", "(", "_DenseLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_module", "(", "'norm1'", ",", "nn", ".", "BatchNorm2d", "(", "num_input_features", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'relu1'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "if", "index", "==", "3", ":", "\n", "            ", "self", ".", "add_module", "(", "'conv1'", ",", "nn", ".", "Conv2d", "(", "num_input_features", ",", "bn_size", "*", "\n", "growth_rate", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'norm2'", ",", "nn", ".", "BatchNorm2d", "(", "bn_size", "*", "growth_rate", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'relu2'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'conv2'", ",", "nn", ".", "Conv2d", "(", "bn_size", "*", "growth_rate", ",", "growth_rate", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "2", ",", "padding", "=", "2", ",", "bias", "=", "False", ")", ")", ",", "\n", "", "else", ":", "\n", "            ", "self", ".", "add_module", "(", "'conv1'", ",", "nn", ".", "Conv2d", "(", "num_input_features", ",", "bn_size", "*", "\n", "growth_rate", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'norm2'", ",", "nn", ".", "BatchNorm2d", "(", "bn_size", "*", "growth_rate", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'relu2'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'conv2'", ",", "nn", ".", "Conv2d", "(", "bn_size", "*", "growth_rate", ",", "growth_rate", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "", "self", ".", "drop_rate", "=", "drop_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors._DenseLayer.forward": [[184, 189], ["super().forward", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.dropout", "torch.dropout", "torch.dropout"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.kiunet3dwcrfb.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "new_features", "=", "super", "(", "_DenseLayer", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "if", "self", ".", "drop_rate", ">", "0", ":", "\n", "            ", "new_features", "=", "F", ".", "dropout", "(", "new_features", ",", "p", "=", "self", ".", "drop_rate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "return", "torch", ".", "cat", "(", "[", "x", ",", "new_features", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors._DenseBlock.__init__": [[192, 197], ["torch.Sequential.__init__", "range", "extractors._DenseLayer", "extractors._DenseBlock.add_module"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "num_input_features", ",", "bn_size", ",", "growth_rate", ",", "drop_rate", ",", "index", ")", ":", "\n", "        ", "super", "(", "_DenseBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "            ", "layer", "=", "_DenseLayer", "(", "num_input_features", "+", "i", "*", "growth_rate", ",", "growth_rate", ",", "bn_size", ",", "drop_rate", ",", "index", ")", "\n", "self", ".", "add_module", "(", "'denselayer%d'", "%", "(", "i", "+", "1", ")", ",", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors._Transition.__init__": [[200, 210], ["torch.Sequential.__init__", "extractors._Transition.add_module", "extractors._Transition.add_module", "extractors._Transition.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "extractors._Transition.add_module", "extractors._Transition.add_module", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_input_features", ",", "num_output_features", ",", "downsample", "=", "True", ")", ":", "\n", "        ", "super", "(", "_Transition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_module", "(", "'norm'", ",", "nn", ".", "BatchNorm2d", "(", "num_input_features", ")", ")", "\n", "self", ".", "add_module", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "add_module", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "num_input_features", ",", "num_output_features", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "if", "downsample", ":", "\n", "            ", "self", ".", "add_module", "(", "'pool'", ",", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "add_module", "(", "'pool'", ",", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", ")", "# compatibility hack", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.DenseNet.__init__": [[213, 256], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "list", "enumerate", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "collections.OrderedDict", "torchvision.models.densenet.densenet121().features.children", "extractors.DenseNet.start_features.children", "extractors._DenseBlock", "extractors.DenseNet.blocks.append", "setattr", "_DenseBlock.load_state_dict", "extractors._Transition", "extractors.DenseNet.blocks.append", "setattr", "init_weights[].state_dict", "len", "_Transition.load_state_dict", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torchvision.models.densenet.densenet121", "init_weights[].state_dict"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "growth_rate", "=", "8", ",", "block_config", "=", "(", "6", ",", "12", ",", "24", ",", "16", ")", ",", "\n", "num_init_features", "=", "16", ",", "bn_size", "=", "4", ",", "drop_rate", "=", "0", ",", "pretrained", "=", "False", ")", ":", "\n", "\n", "        ", "super", "(", "DenseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# First convolution", "\n", "self", ".", "start_features", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv0'", ",", "nn", ".", "Conv2d", "(", "3", ",", "num_init_features", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'norm0'", ",", "nn", ".", "BatchNorm2d", "(", "num_init_features", ")", ")", ",", "\n", "(", "'relu0'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "(", "'pool0'", ",", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "# Each denseblock", "\n", "num_features", "=", "num_init_features", "\n", "\n", "init_weights", "=", "list", "(", "densenet121", "(", "pretrained", "=", "True", ")", ".", "features", ".", "children", "(", ")", ")", "\n", "start", "=", "0", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "self", ".", "start_features", ".", "children", "(", ")", ")", ":", "\n", "#if pretrained:", "\n", "#c.load_state_dict(init_weights[i].state_dict())", "\n", "            ", "start", "+=", "1", "\n", "", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", ",", "num_layers", "in", "enumerate", "(", "block_config", ")", ":", "\n", "            ", "block", "=", "_DenseBlock", "(", "num_layers", "=", "num_layers", ",", "num_input_features", "=", "num_features", ",", "\n", "bn_size", "=", "bn_size", ",", "growth_rate", "=", "growth_rate", ",", "drop_rate", "=", "drop_rate", ",", "index", "=", "i", ")", "\n", "if", "pretrained", ":", "\n", "                ", "block", ".", "load_state_dict", "(", "init_weights", "[", "start", "]", ".", "state_dict", "(", ")", ")", "\n", "", "start", "+=", "1", "\n", "self", ".", "blocks", ".", "append", "(", "block", ")", "\n", "setattr", "(", "self", ",", "'denseblock%d'", "%", "(", "i", "+", "1", ")", ",", "block", ")", "\n", "\n", "num_features", "=", "num_features", "+", "num_layers", "*", "growth_rate", "\n", "if", "i", "!=", "len", "(", "block_config", ")", "-", "1", ":", "\n", "                ", "downsample", "=", "i", "<", "1", "\n", "trans", "=", "_Transition", "(", "num_input_features", "=", "num_features", ",", "num_output_features", "=", "num_features", "//", "2", ",", "\n", "downsample", "=", "downsample", ")", "\n", "if", "pretrained", ":", "\n", "                    ", "trans", ".", "load_state_dict", "(", "init_weights", "[", "start", "]", ".", "state_dict", "(", ")", ")", "\n", "", "start", "+=", "1", "\n", "self", ".", "blocks", ".", "append", "(", "trans", ")", "\n", "setattr", "(", "self", ",", "'transition%d'", "%", "(", "i", "+", "1", ")", ",", "trans", ")", "\n", "num_features", "=", "num_features", "//", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.DenseNet.forward": [[257, 266], ["extractors.DenseNet.start_features", "enumerate", "block"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "start_features", "(", "x", ")", "\n", "deep_features", "=", "None", "\n", "for", "i", ",", "block", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "out", "=", "block", "(", "out", ")", "\n", "if", "i", "==", "5", ":", "\n", "                ", "deep_features", "=", "out", "\n", "\n", "", "", "return", "out", ",", "deep_features", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.Fire.__init__": [[270, 282], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "squeeze_planes", ",", "\n", "expand1x1_planes", ",", "expand3x3_planes", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "Fire", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "squeeze", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "squeeze_planes", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "squeeze_activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "expand1x1", "=", "nn", ".", "Conv2d", "(", "squeeze_planes", ",", "expand1x1_planes", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "expand1x1_activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "expand3x3", "=", "nn", ".", "Conv2d", "(", "squeeze_planes", ",", "expand3x3_planes", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "expand3x3_activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.Fire.forward": [[283, 289], ["extractors.Fire.squeeze_activation", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "extractors.Fire.squeeze", "extractors.Fire.expand1x1_activation", "extractors.Fire.expand3x3_activation", "extractors.Fire.expand1x1", "extractors.Fire.expand3x3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "squeeze_activation", "(", "self", ".", "squeeze", "(", "x", ")", ")", "\n", "return", "torch", ".", "cat", "(", "[", "\n", "self", ".", "expand1x1_activation", "(", "self", ".", "expand1x1", "(", "x", ")", ")", ",", "\n", "self", ".", "expand3x3_activation", "(", "self", ".", "expand3x3", "(", "x", ")", ")", "\n", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.SqueezeNet.__init__": [[293, 319], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "extractors.Fire", "extractors.Fire", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "extractors.Fire", "extractors.Fire", "extractors.Fire", "extractors.Fire", "extractors.Fire", "extractors.Fire", "torchvision.models.squeezenet.squeezenet1_1().features.state_dict", "extractors.load_weights_sequential", "torchvision.models.squeezenet.squeezenet1_1"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.load_weights_sequential"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "super", "(", "SqueezeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "feat_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "feat_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "Fire", "(", "64", ",", "16", ",", "64", ",", "64", ")", ",", "\n", "Fire", "(", "128", ",", "16", ",", "64", ",", "64", ")", "\n", ")", "\n", "self", ".", "feat_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "Fire", "(", "128", ",", "32", ",", "128", ",", "128", ",", "2", ")", ",", "\n", "Fire", "(", "256", ",", "32", ",", "128", ",", "128", ",", "2", ")", "\n", ")", "\n", "self", ".", "feat_4", "=", "nn", ".", "Sequential", "(", "\n", "Fire", "(", "256", ",", "48", ",", "192", ",", "192", ",", "4", ")", ",", "\n", "Fire", "(", "384", ",", "48", ",", "192", ",", "192", ",", "4", ")", ",", "\n", "Fire", "(", "384", ",", "64", ",", "256", ",", "256", ",", "4", ")", ",", "\n", "Fire", "(", "512", ",", "64", ",", "256", ",", "256", ",", "4", ")", "\n", ")", "\n", "if", "pretrained", ":", "\n", "            ", "weights", "=", "squeezenet1_1", "(", "pretrained", "=", "True", ")", ".", "features", ".", "state_dict", "(", ")", "\n", "load_weights_sequential", "(", "self", ",", "weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.SqueezeNet.forward": [[320, 326], ["extractors.SqueezeNet.feat_1", "extractors.SqueezeNet.feat_2", "extractors.SqueezeNet.feat_3", "extractors.SqueezeNet.feat_4"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "f1", "=", "self", ".", "feat_1", "(", "x", ")", "\n", "f2", "=", "self", ".", "feat_2", "(", "f1", ")", "\n", "f3", "=", "self", ".", "feat_3", "(", "f2", ")", "\n", "f4", "=", "self", ".", "feat_4", "(", "f3", ")", "\n", "return", "f4", ",", "f3", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.load_weights_sequential": [[12, 17], ["collections.OrderedDict", "zip", "target.load_state_dict", "target.state_dict().items", "source_state.items", "target.state_dict"], "function", ["None"], ["def", "load_weights_sequential", "(", "target", ",", "source_state", ")", ":", "\n", "    ", "new_dict", "=", "OrderedDict", "(", ")", "\n", "for", "(", "k1", ",", "v1", ")", ",", "(", "k2", ",", "v2", ")", "in", "zip", "(", "target", ".", "state_dict", "(", ")", ".", "items", "(", ")", ",", "source_state", ".", "items", "(", ")", ")", ":", "\n", "        ", "new_dict", "[", "k1", "]", "=", "v2", "\n", "", "target", ".", "load_state_dict", "(", "new_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.conv3x3": [[30, 33], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.squeezenet": [[333, 335], ["extractors.SqueezeNet"], "function", ["None"], ["def", "squeezenet", "(", "pretrained", "=", "True", ")", ":", "\n", "    ", "return", "SqueezeNet", "(", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.densenet": [[337, 339], ["extractors.DenseNet"], "function", ["None"], ["", "def", "densenet", "(", "pretrained", "=", "True", ")", ":", "\n", "    ", "return", "DenseNet", "(", "pretrained", "=", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.resnet18": [[341, 346], ["extractors.ResNet", "extractors.load_weights_sequential", "torch.utils.model_zoo.load_url"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.load_weights_sequential"], ["", "def", "resnet18", "(", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "load_weights_sequential", "(", "model", ",", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.resnet34": [[348, 353], ["extractors.ResNet", "extractors.load_weights_sequential", "torch.utils.model_zoo.load_url"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.load_weights_sequential"], ["", "def", "resnet34", "(", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "load_weights_sequential", "(", "model", ",", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.resnet50": [[355, 360], ["extractors.ResNet", "extractors.load_weights_sequential", "torch.utils.model_zoo.load_url"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.load_weights_sequential"], ["", "def", "resnet50", "(", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "load_weights_sequential", "(", "model", ",", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.resnet101": [[362, 367], ["extractors.ResNet", "extractors.load_weights_sequential", "torch.utils.model_zoo.load_url"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.load_weights_sequential"], ["", "def", "resnet101", "(", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "load_weights_sequential", "(", "model", ",", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.resnet152": [[369, 374], ["extractors.ResNet", "extractors.load_weights_sequential", "torch.utils.model_zoo.load_url"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.extractors.load_weights_sequential"], ["", "def", "resnet152", "(", "pretrained", "=", "True", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", "\n", "if", "pretrained", ":", "\n", "        ", "load_weights_sequential", "(", "model", ",", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.metrics.LogNLLLoss.__init__": [[12, 16], ["torch.nn.modules.loss._WeightedLoss.__init__"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "size_average", "=", "None", ",", "reduce", "=", "None", ",", "reduction", "=", "None", ",", "\n", "ignore_index", "=", "-", "100", ")", ":", "\n", "        ", "super", "(", "LogNLLLoss", ",", "self", ")", ".", "__init__", "(", "weight", ",", "size_average", ",", "reduce", ",", "reduction", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.metrics.LogNLLLoss.forward": [[17, 21], ["torch.nn.functional.cross_entropy"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "y_input", ",", "y_target", ")", ":", "\n", "# y_input = torch.log(y_input + EPSILON)", "\n", "        ", "return", "cross_entropy", "(", "y_input", ",", "y_target", ",", "weight", "=", "self", ".", "weight", ",", "\n", "ignore_index", "=", "self", ".", "ignore_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.metrics.classwise_iou": [[23, 36], ["torch.zeros_like().scatter_", "range", "torch.zeros_like", "intersection.sum().float", "union.sum", "len", "intersection.sum"], "function", ["None"], ["", "", "def", "classwise_iou", "(", "output", ",", "gt", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        output: torch.Tensor of shape (n_batch, n_classes, image.shape)\n        gt: torch.LongTensor of shape (n_batch, image.shape)\n    \"\"\"", "\n", "dims", "=", "(", "0", ",", "*", "range", "(", "2", ",", "len", "(", "output", ".", "shape", ")", ")", ")", "\n", "gt", "=", "torch", ".", "zeros_like", "(", "output", ")", ".", "scatter_", "(", "1", ",", "gt", "[", ":", ",", "None", ",", ":", "]", ",", "1", ")", "\n", "intersection", "=", "output", "*", "gt", "\n", "union", "=", "output", "+", "gt", "-", "intersection", "\n", "classwise_iou", "=", "(", "intersection", ".", "sum", "(", "dim", "=", "dims", ")", ".", "float", "(", ")", "+", "EPSILON", ")", "/", "(", "union", ".", "sum", "(", "dim", "=", "dims", ")", "+", "EPSILON", ")", "\n", "\n", "return", "classwise_iou", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.metrics.classwise_f1": [[38, 58], ["torch.argmax", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor", "torch.tensor", "torch.tensor", "range", "range", "range"], "function", ["None"], ["", "def", "classwise_f1", "(", "output", ",", "gt", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        output: torch.Tensor of shape (n_batch, n_classes, image.shape)\n        gt: torch.LongTensor of shape (n_batch, image.shape)\n    \"\"\"", "\n", "\n", "epsilon", "=", "1e-20", "\n", "n_classes", "=", "output", ".", "shape", "[", "1", "]", "\n", "\n", "output", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "true_positives", "=", "torch", ".", "tensor", "(", "[", "(", "(", "output", "==", "i", ")", "*", "(", "gt", "==", "i", ")", ")", ".", "sum", "(", ")", "for", "i", "in", "range", "(", "n_classes", ")", "]", ")", ".", "float", "(", ")", "\n", "selected", "=", "torch", ".", "tensor", "(", "[", "(", "output", "==", "i", ")", ".", "sum", "(", ")", "for", "i", "in", "range", "(", "n_classes", ")", "]", ")", ".", "float", "(", ")", "\n", "relevant", "=", "torch", ".", "tensor", "(", "[", "(", "gt", "==", "i", ")", ".", "sum", "(", ")", "for", "i", "in", "range", "(", "n_classes", ")", "]", ")", ".", "float", "(", ")", "\n", "\n", "precision", "=", "(", "true_positives", "+", "epsilon", ")", "/", "(", "selected", "+", "epsilon", ")", "\n", "recall", "=", "(", "true_positives", "+", "epsilon", ")", "/", "(", "relevant", "+", "epsilon", ")", "\n", "classwise_f1", "=", "2", "*", "(", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", ")", "\n", "\n", "return", "classwise_f1", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.metrics.make_weighted_metric": [[60, 88], ["classwise_metric().cpu", "torch.sum", "range", "torch.ones", "len", "ValueError", "isinstance", "torch.tensor", "len", "metrics.classwise_iou", "metrics.classwise_f1"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.metrics.classwise_iou", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.metrics.classwise_f1"], ["", "def", "make_weighted_metric", "(", "classwise_metric", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        classwise_metric: classwise metric like classwise_IOU or classwise_F1\n    \"\"\"", "\n", "\n", "def", "weighted_metric", "(", "output", ",", "gt", ",", "weights", "=", "None", ")", ":", "\n", "\n", "# dimensions to sum over", "\n", "        ", "dims", "=", "(", "0", ",", "*", "range", "(", "2", ",", "len", "(", "output", ".", "shape", ")", ")", ")", "\n", "\n", "# default weights", "\n", "if", "weights", "==", "None", ":", "\n", "            ", "weights", "=", "torch", ".", "ones", "(", "output", ".", "shape", "[", "1", "]", ")", "/", "output", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "# creating tensor if needed", "\n", "            ", "if", "len", "(", "weights", ")", "!=", "output", ".", "shape", "[", "1", "]", ":", "\n", "                ", "raise", "ValueError", "(", "\"The number of weights must match with the number of classes\"", ")", "\n", "", "if", "not", "isinstance", "(", "weights", ",", "torch", ".", "Tensor", ")", ":", "\n", "                ", "weights", "=", "torch", ".", "tensor", "(", "weights", ")", "\n", "# normalizing weights", "\n", "", "weights", "/=", "torch", ".", "sum", "(", "weights", ")", "\n", "\n", "", "classwise_scores", "=", "classwise_metric", "(", "output", ",", "gt", ")", ".", "cpu", "(", ")", "\n", "\n", "return", "classwise_scores", "\n", "\n", "", "return", "weighted_metric", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.train.mae": [[31, 41], ["numpy.sum", "float", "abs", "imageA.astype", "imageB.astype"], "function", ["None"], ["def", "mae", "(", "imageA", ",", "imageB", ")", ":", "\n", "# the 'Mean Squared Error' between the two images is the", "\n", "# sum of the squared difference between the two images;", "\n", "# NOTE: the two images must have the same dimension", "\n", "    ", "err", "=", "np", ".", "sum", "(", "abs", "(", "imageA", ".", "astype", "(", "\"float\"", ")", "-", "imageB", ".", "astype", "(", "\"float\"", ")", ")", ")", "\n", "err", "/=", "float", "(", "imageA", ".", "shape", "[", "0", "]", "*", "imageA", ".", "shape", "[", "1", "]", ")", "\n", "\n", "# return the MSE, the lower the error, the more \"similar\"", "\n", "# the two images are", "\n", "return", "err", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.train.weight_init": [[89, 119], ["isinstance", "torch.normal_", "isinstance", "torch.normal_", "torch.xavier_normal_", "isinstance", "torch.normal_", "torch.xavier_normal_", "isinstance", "torch.normal_", "torch.normal_", "isinstance", "torch.normal_", "torch.xavier_normal_", "isinstance", "torch.normal_", "torch.xavier_normal_", "torch.normal_"], "function", ["None"], ["def", "weight_init", "(", "m", ")", ":", "\n", "    ", "'''\n    Usage:\n        model = Model()\n        model.apply(weight_init)\n    '''", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv1d", ")", ":", "\n", "        ", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "init", ".", "normal_", "(", "m", ".", "bias", ".", "data", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "init", ".", "normal_", "(", "m", ".", "bias", ".", "data", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "        ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "init", ".", "normal_", "(", "m", ".", "bias", ".", "data", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose1d", ")", ":", "\n", "        ", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "init", ".", "normal_", "(", "m", ".", "bias", ".", "data", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose2d", ")", ":", "\n", "        ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "init", ".", "normal_", "(", "m", ".", "bias", ".", "data", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose3d", ")", ":", "\n", "        ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "init", ".", "normal_", "(", "m", ".", "bias", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.train.add_noise": [[121, 126], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "noise.cuda", "img.size"], "function", ["None"], ["", "", "", "def", "add_noise", "(", "img", ")", ":", "\n", "#random noise", "\n", "    ", "noise", "=", "torch", ".", "randn", "(", "img", ".", "size", "(", ")", ")", "*", "0.1", "\n", "noisy_img", "=", "img", "+", "noise", ".", "cuda", "(", ")", "\n", "return", "noisy_img", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.test.add_noise": [[74, 79], ["torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "noise.cuda", "img.size"], "function", ["None"], ["def", "add_noise", "(", "img", ")", ":", "\n", "    ", "noise", "=", "torch", ".", "randn", "(", "img", ".", "size", "(", ")", ")", "*", "0.1", "\n", "noisy_img", "=", "img", "+", "noise", ".", "cuda", "(", ")", "\n", "\n", "return", "noisy_img", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.JointTransform2D.__init__": [[60, 69], ["torchvision.transforms.ColorJitter"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "crop", "=", "(", "32", ",", "32", ")", ",", "p_flip", "=", "0.5", ",", "color_jitter_params", "=", "(", "0.1", ",", "0.1", ",", "0.1", ",", "0.1", ")", ",", "\n", "p_random_affine", "=", "0", ",", "long_mask", "=", "False", ")", ":", "\n", "        ", "self", ".", "crop", "=", "crop", "\n", "self", ".", "p_flip", "=", "p_flip", "\n", "self", ".", "color_jitter_params", "=", "color_jitter_params", "\n", "if", "color_jitter_params", ":", "\n", "            ", "self", ".", "color_tf", "=", "T", ".", "ColorJitter", "(", "*", "color_jitter_params", ")", "\n", "", "self", ".", "p_random_affine", "=", "p_random_affine", "\n", "self", ".", "long_mask", "=", "long_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.JointTransform2D.__call__": [[70, 99], ["torchvision.transforms.functional.to_tensor", "torchvision.transforms.functional.to_pil_image", "torchvision.transforms.functional.to_pil_image", "torchvision.transforms.RandomCrop.get_params", "numpy.random.rand", "utils.JointTransform2D.color_tf", "numpy.random.rand", "torchvision.transforms.RandomAffine().get_params", "torchvision.transforms.functional.to_tensor", "utils.to_long_tensor", "torchvision.transforms.functional.crop", "torchvision.transforms.functional.crop", "torchvision.transforms.functional.hflip", "torchvision.transforms.functional.hflip", "torchvision.transforms.functional.affine", "torchvision.transforms.functional.affine", "torchvision.transforms.RandomAffine"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.to_long_tensor", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.explore.crop", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.explore.crop"], ["", "def", "__call__", "(", "self", ",", "image", ",", "mask", ")", ":", "\n", "# transforming to PIL image", "\n", "        ", "image", ",", "mask", "=", "F", ".", "to_pil_image", "(", "image", ")", ",", "F", ".", "to_pil_image", "(", "mask", ")", "\n", "\n", "# random crop", "\n", "if", "self", ".", "crop", ":", "\n", "            ", "i", ",", "j", ",", "h", ",", "w", "=", "T", ".", "RandomCrop", ".", "get_params", "(", "image", ",", "self", ".", "crop", ")", "\n", "image", ",", "mask", "=", "F", ".", "crop", "(", "image", ",", "i", ",", "j", ",", "h", ",", "w", ")", ",", "F", ".", "crop", "(", "mask", ",", "i", ",", "j", ",", "h", ",", "w", ")", "\n", "\n", "", "if", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "p_flip", ":", "\n", "            ", "image", ",", "mask", "=", "F", ".", "hflip", "(", "image", ")", ",", "F", ".", "hflip", "(", "mask", ")", "\n", "\n", "# color transforms || ONLY ON IMAGE", "\n", "", "if", "self", ".", "color_jitter_params", ":", "\n", "            ", "image", "=", "self", ".", "color_tf", "(", "image", ")", "\n", "\n", "# random affine transform", "\n", "", "if", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "p_random_affine", ":", "\n", "            ", "affine_params", "=", "T", ".", "RandomAffine", "(", "180", ")", ".", "get_params", "(", "(", "-", "90", ",", "90", ")", ",", "(", "1", ",", "1", ")", ",", "(", "2", ",", "2", ")", ",", "(", "-", "45", ",", "45", ")", ",", "self", ".", "crop", ")", "\n", "image", ",", "mask", "=", "F", ".", "affine", "(", "image", ",", "*", "affine_params", ")", ",", "F", ".", "affine", "(", "mask", ",", "*", "affine_params", ")", "\n", "\n", "# transforming to tensor", "\n", "", "image", "=", "F", ".", "to_tensor", "(", "image", ")", "\n", "if", "not", "self", ".", "long_mask", ":", "\n", "            ", "mask", "=", "F", ".", "to_tensor", "(", "mask", ")", "\n", "", "else", ":", "\n", "            ", "mask", "=", "to_long_tensor", "(", "mask", ")", "\n", "\n", "", "return", "image", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.ImageToImage2D.__init__": [[128, 140], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "torchvision.transforms.ToTensor", "torchvision.transforms.ToTensor.", "torchvision.transforms.ToTensor."], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset_path", ":", "str", ",", "joint_transform", ":", "Callable", "=", "None", ",", "one_hot_mask", ":", "int", "=", "False", ")", "->", "None", ":", "\n", "        ", "self", ".", "dataset_path", "=", "dataset_path", "\n", "self", ".", "input_path", "=", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "'img'", ")", "\n", "self", ".", "output_path", "=", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "'label'", ")", "\n", "self", ".", "images_list", "=", "os", ".", "listdir", "(", "self", ".", "input_path", ")", "\n", "self", ".", "one_hot_mask", "=", "one_hot_mask", "\n", "\n", "if", "joint_transform", ":", "\n", "            ", "self", ".", "joint_transform", "=", "joint_transform", "\n", "", "else", ":", "\n", "            ", "to_tensor", "=", "T", ".", "ToTensor", "(", ")", "\n", "self", ".", "joint_transform", "=", "lambda", "x", ",", "y", ":", "(", "to_tensor", "(", "x", ")", ",", "to_tensor", "(", "y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.ImageToImage2D.__len__": [[141, 143], ["len", "os.listdir", "os.listdir", "os.listdir", "os.listdir"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "os", ".", "listdir", "(", "self", ".", "input_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.ImageToImage2D.__getitem__": [[144, 175], ["cv2.imread", "cv2.imread", "utils.correct_dims", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.ImageToImage2D.joint_transform", "torch.zeros().scatter_", "torch.zeros().scatter_.long", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.correct_dims"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image_filename", "=", "self", ".", "images_list", "[", "idx", "]", "\n", "#print(image_filename[: -3])", "\n", "# read image", "\n", "# print(os.path.join(self.input_path, image_filename))", "\n", "# print(os.path.join(self.output_path, image_filename[: -3] + \"png\"))", "\n", "# print(os.path.join(self.input_path, image_filename))", "\n", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "input_path", ",", "image_filename", ")", ")", "\n", "# print(image.shape)", "\n", "# read mask image", "\n", "mask", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "output_path", ",", "image_filename", "[", ":", "-", "3", "]", "+", "\"png\"", ")", ",", "0", ")", "\n", "\n", "# correct dimensions if needed", "\n", "image", ",", "mask", "=", "correct_dims", "(", "image", ",", "mask", ")", "\n", "# print(image.shape)", "\n", "\n", "if", "self", ".", "joint_transform", ":", "\n", "            ", "image", ",", "mask", "=", "self", ".", "joint_transform", "(", "image", ",", "mask", ")", "\n", "\n", "", "if", "self", ".", "one_hot_mask", ":", "\n", "            ", "assert", "self", ".", "one_hot_mask", ">", "0", ",", "'one_hot_mask must be nonnegative'", "\n", "mask", "=", "torch", ".", "zeros", "(", "(", "self", ".", "one_hot_mask", ",", "mask", ".", "shape", "[", "1", "]", ",", "mask", ".", "shape", "[", "2", "]", ")", ")", ".", "scatter_", "(", "0", ",", "mask", ".", "long", "(", ")", ",", "1", ")", "\n", "# mask = np.swapaxes(mask,2,0)", "\n", "# print(image.shape)", "\n", "# print(mask.shape)", "\n", "# mask = np.transpose(mask,(2,0,1))", "\n", "# image = np.transpose(image,(2,0,1))", "\n", "# print(image.shape)", "\n", "# print(mask.shape)", "\n", "\n", "", "return", "image", ",", "mask", ",", "image_filename", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Image2D.__init__": [[201, 211], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "torchvision.transforms.ToTensor"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset_path", ":", "str", ",", "transform", ":", "Callable", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "dataset_path", "=", "dataset_path", "\n", "self", ".", "input_path", "=", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "'img'", ")", "\n", "self", ".", "images_list", "=", "os", ".", "listdir", "(", "self", ".", "input_path", ")", "\n", "\n", "if", "transform", ":", "\n", "            ", "self", ".", "transform", "=", "transform", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "T", ".", "ToTensor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Image2D.__len__": [[212, 214], ["len", "os.listdir", "os.listdir", "os.listdir", "os.listdir"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "os", ".", "listdir", "(", "self", ".", "input_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Image2D.__getitem__": [[215, 230], ["cv2.imread", "utils.correct_dims", "utils.Image2D.transform", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.correct_dims"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "image_filename", "=", "self", ".", "images_list", "[", "idx", "]", "\n", "\n", "image", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "self", ".", "input_path", ",", "image_filename", ")", ",", "0", ")", "\n", "\n", "# image = np.transpose(image,(2,0,1))", "\n", "\n", "image", "=", "correct_dims", "(", "image", ")", "\n", "\n", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "\n", "# image = np.swapaxes(image,2,0)", "\n", "\n", "return", "image", ",", "image_filename", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Logger.__init__": [[244, 247], ["collections.defaultdict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "self", ".", "logs", "=", "defaultdict", "(", "list", ")", "\n", "self", ".", "verbose", "=", "verbose", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Logger.log": [[248, 254], ["logs.items", "utils.Logger.logs[].append", "print"], "methods", ["None"], ["", "def", "log", "(", "self", ",", "logs", ")", ":", "\n", "        ", "for", "key", ",", "value", "in", "logs", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "logs", "[", "key", "]", ".", "append", "(", "value", ")", "\n", "\n", "", "if", "self", ".", "verbose", ":", "\n", "            ", "print", "(", "logs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Logger.get_logs": [[255, 257], ["None"], "methods", ["None"], ["", "", "def", "get_logs", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "logs", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Logger.to_csv": [[258, 260], ["pandas.DataFrame().to_csv", "pandas.DataFrame"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Logger.to_csv"], ["", "def", "to_csv", "(", "self", ",", "path", ")", ":", "\n", "        ", "pd", ".", "DataFrame", "(", "self", ".", "logs", ")", ".", "to_csv", "(", "path", ",", "index", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.MetricList.__init__": [[263, 267], ["isinstance", "utils.MetricList.metrics.keys"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "metrics", ")", ":", "\n", "        ", "assert", "isinstance", "(", "metrics", ",", "dict", ")", ",", "'\\'metrics\\' must be a dictionary of callables'", "\n", "self", ".", "metrics", "=", "metrics", "\n", "self", ".", "results", "=", "{", "key", ":", "0.0", "for", "key", "in", "self", ".", "metrics", ".", "keys", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.MetricList.__call__": [[268, 271], ["utils.MetricList.metrics.items", "value"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "y_out", ",", "y_batch", ")", ":", "\n", "        ", "for", "key", ",", "value", "in", "self", ".", "metrics", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "results", "[", "key", "]", "+=", "value", "(", "y_out", ",", "y_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.MetricList.reset": [[272, 274], ["utils.MetricList.metrics.keys"], "methods", ["None"], ["", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "results", "=", "{", "key", ":", "0.0", "for", "key", "in", "self", ".", "metrics", ".", "keys", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.MetricList.get_results": [[275, 281], ["isinstance", "isinstance", "utils.MetricList.results.items"], "methods", ["None"], ["", "def", "get_results", "(", "self", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "assert", "isinstance", "(", "normalize", ",", "bool", ")", "or", "isinstance", "(", "normalize", ",", "Number", ")", ",", "'\\'normalize\\' must be boolean or a number'", "\n", "if", "not", "normalize", ":", "\n", "            ", "return", "self", ".", "results", "\n", "", "else", ":", "\n", "            ", "return", "{", "key", ":", "value", "/", "normalize", "for", "key", ",", "value", "in", "self", ".", "results", ".", "items", "(", ")", "}", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.to_long_tensor": [[21, 26], ["torch.from_numpy", "torch.from_numpy.long", "numpy.array"], "function", ["None"], ["def", "to_long_tensor", "(", "pic", ")", ":", "\n", "# handle numpy array", "\n", "    ", "img", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "pic", ",", "np", ".", "uint8", ")", ")", "\n", "# backward compatibility", "\n", "return", "img", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.correct_dims": [[28, 41], ["len", "len", "corr_images.append", "corr_images.append", "numpy.expand_dims"], "function", ["None"], ["", "def", "correct_dims", "(", "*", "images", ")", ":", "\n", "    ", "corr_images", "=", "[", "]", "\n", "# print(images)", "\n", "for", "img", "in", "images", ":", "\n", "        ", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "corr_images", ".", "append", "(", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "corr_images", ".", "append", "(", "img", ")", "\n", "\n", "", "", "if", "len", "(", "corr_images", ")", "==", "1", ":", "\n", "        ", "return", "corr_images", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "return", "corr_images", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.chk_mkdir": [[231, 241], ["os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs"], "function", ["None"], ["", "", "def", "chk_mkdir", "(", "*", "paths", ":", "Container", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Creates folders if they do not exist.\n\n    Args:        \n        paths: Container of paths to be created.\n    \"\"\"", "\n", "for", "path", "in", "paths", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.dataset.dataset.Dataset.__init__": [[22, 29], ["os.listdir", "list", "list", "list", "map", "map", "map", "x.replace().replace", "os.path.join", "os.path.join", "x.replace"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ct_dir", ",", "seg_dir", ")", ":", "\n", "\n", "        ", "self", ".", "ct_list", "=", "os", ".", "listdir", "(", "ct_dir", ")", "\n", "self", ".", "seg_list", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "replace", "(", "'volume'", ",", "'segmentation'", ")", ".", "replace", "(", "'.nii'", ",", "'.nii.gz'", ")", ",", "self", ".", "ct_list", ")", ")", "\n", "\n", "self", ".", "ct_list", "=", "list", "(", "map", "(", "lambda", "x", ":", "os", ".", "path", ".", "join", "(", "ct_dir", ",", "x", ")", ",", "self", ".", "ct_list", ")", ")", "\n", "self", ".", "seg_list", "=", "list", "(", "map", "(", "lambda", "x", ":", "os", ".", "path", ".", "join", "(", "seg_dir", ",", "x", ")", ",", "self", ".", "seg_list", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.dataset.dataset.Dataset.__getitem__": [[30, 58], ["SimpleITK.ReadImage", "SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "SimpleITK.GetArrayFromImage", "torch.FloatTensor().unsqueeze.astype", "random.randint", "torch.FloatTensor().unsqueeze", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "ct_path", "=", "self", ".", "ct_list", "[", "index", "]", "\n", "seg_path", "=", "self", ".", "seg_list", "[", "index", "]", "\n", "\n", "# \u5c06CT\u548c\u91d1\u6807\u51c6\u8bfb\u5165\u5230\u5185\u5b58\u4e2d", "\n", "ct", "=", "sitk", ".", "ReadImage", "(", "ct_path", ",", "sitk", ".", "sitkInt16", ")", "\n", "seg", "=", "sitk", ".", "ReadImage", "(", "seg_path", ",", "sitk", ".", "sitkUInt8", ")", "\n", "\n", "ct_array", "=", "sitk", ".", "GetArrayFromImage", "(", "ct", ")", "\n", "seg_array", "=", "sitk", ".", "GetArrayFromImage", "(", "seg", ")", "\n", "\n", "# min max \u5f52\u4e00\u5316", "\n", "ct_array", "=", "ct_array", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ct_array", "=", "ct_array", "/", "200", "\n", "\n", "# \u5728slice\u5e73\u9762\u5185\u968f\u673a\u9009\u53d648\u5f20slice", "\n", "start_slice", "=", "random", ".", "randint", "(", "0", ",", "ct_array", ".", "shape", "[", "0", "]", "-", "para", ".", "size", ")", "\n", "end_slice", "=", "start_slice", "+", "para", ".", "size", "-", "1", "\n", "\n", "ct_array", "=", "ct_array", "[", "start_slice", ":", "end_slice", "+", "1", ",", ":", ",", ":", "]", "\n", "seg_array", "=", "seg_array", "[", "start_slice", ":", "end_slice", "+", "1", ",", ":", ",", ":", "]", "\n", "\n", "# \u5904\u7406\u5b8c\u6bd5\uff0c\u5c06array\u8f6c\u6362\u4e3atensor", "\n", "ct_array", "=", "torch", ".", "FloatTensor", "(", "ct_array", ")", ".", "unsqueeze", "(", "0", ")", "\n", "seg_array", "=", "torch", ".", "FloatTensor", "(", "seg_array", ")", "\n", "\n", "return", "ct_array", ",", "seg_array", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.dataset.dataset.Dataset.__len__": [[59, 62], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "\n", "        ", "return", "len", "(", "self", ".", "ct_list", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.__init__": [[15, 31], ["calculate_metrics.Metirc.get_surface", "calculate_metrics.Metirc.get_surface", "calculate_metrics.Metirc.get_real2pred_nn", "calculate_metrics.Metirc.get_pred2real_nn"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_surface", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_surface", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_real2pred_nn", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_pred2real_nn"], ["    ", "def", "__init__", "(", "self", ",", "real_mask", ",", "pred_mask", ",", "voxel_spacing", ")", ":", "\n", "        ", "\"\"\"\n\n        :param real_mask: \u91d1\u6807\u51c6\n        :param pred_mask: \u9884\u6d4b\u7ed3\u679c\n        :param voxel_spacing: \u4f53\u6570\u636e\u7684spacing\n        \"\"\"", "\n", "self", ".", "real_mask", "=", "real_mask", "\n", "self", ".", "pred_mask", "=", "pred_mask", "\n", "self", ".", "voxel_sapcing", "=", "voxel_spacing", "\n", "\n", "self", ".", "real_mask_surface_pts", "=", "self", ".", "get_surface", "(", "real_mask", ",", "voxel_spacing", ")", "\n", "self", ".", "pred_mask_surface_pts", "=", "self", ".", "get_surface", "(", "pred_mask", ",", "voxel_spacing", ")", "\n", "\n", "self", ".", "real2pred_nn", "=", "self", ".", "get_real2pred_nn", "(", ")", "\n", "self", ".", "pred2real_nn", "=", "self", ".", "get_pred2real_nn", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_surface": [[33, 53], ["scipy.generate_binary_structure", "scipy.generate_binary_structure", "surface.nonzero", "numpy.array", "scipy.binary_erosion", "scipy.binary_erosion", "list", "numpy.array().reshape", "zip", "numpy.array"], "methods", ["None"], ["", "def", "get_surface", "(", "self", ",", "mask", ",", "voxel_spacing", ")", ":", "\n", "        ", "\"\"\"\n\n        :param mask: ndarray\n        :param voxel_spacing: \u4f53\u6570\u636e\u7684spacing\n        :return: \u63d0\u53d6array\u7684\u8868\u9762\u70b9\u7684\u771f\u5b9e\u5750\u6807(\u4ee5mm\u4e3a\u5355\u4f4d)\n        \"\"\"", "\n", "\n", "# \u5377\u79ef\u6838\u91c7\u7528\u7684\u662f\u4e09\u7ef418\u90bb\u57df", "\n", "\n", "kernel", "=", "morphology", ".", "generate_binary_structure", "(", "3", ",", "2", ")", "\n", "surface", "=", "morphology", ".", "binary_erosion", "(", "mask", ",", "kernel", ")", "^", "mask", "\n", "\n", "surface_pts", "=", "surface", ".", "nonzero", "(", ")", "\n", "\n", "surface_pts", "=", "np", ".", "array", "(", "list", "(", "zip", "(", "surface_pts", "[", "0", "]", ",", "surface_pts", "[", "1", "]", ",", "surface_pts", "[", "2", "]", ")", ")", ")", "\n", "\n", "# (0.7808688879013062, 0.7808688879013062, 2.5) (88, 410, 512)", "\n", "# \u8bfb\u51fa\u6765\u7684\u6570\u636espacing\u548cshape\u4e0d\u662f\u5bf9\u5e94\u7684,\u6240\u4ee5\u9700\u8981\u53cd\u5411", "\n", "return", "surface_pts", "*", "np", ".", "array", "(", "self", ".", "voxel_sapcing", "[", ":", ":", "-", "1", "]", ")", ".", "reshape", "(", "1", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_pred2real_nn": [[54, 64], ["scipy.cKDTree", "scipy.cKDTree", "scipy.cKDTree.query"], "methods", ["None"], ["", "def", "get_pred2real_nn", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: \u9884\u6d4b\u7ed3\u679c\u8868\u9762\u4f53\u7d20\u5230\u91d1\u6807\u51c6\u8868\u9762\u4f53\u7d20\u7684\u6700\u5c0f\u8ddd\u79bb\n        \"\"\"", "\n", "\n", "tree", "=", "spatial", ".", "cKDTree", "(", "self", ".", "real_mask_surface_pts", ")", "\n", "nn", ",", "_", "=", "tree", ".", "query", "(", "self", ".", "pred_mask_surface_pts", ")", "\n", "\n", "return", "nn", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_real2pred_nn": [[65, 74], ["scipy.cKDTree", "scipy.cKDTree", "scipy.cKDTree.query"], "methods", ["None"], ["", "def", "get_real2pred_nn", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: \u91d1\u6807\u51c6\u8868\u9762\u4f53\u7d20\u5230\u9884\u6d4b\u7ed3\u679c\u8868\u9762\u4f53\u7d20\u7684\u6700\u5c0f\u8ddd\u79bb\n        \"\"\"", "\n", "tree", "=", "spatial", ".", "cKDTree", "(", "self", ".", "pred_mask_surface_pts", ")", "\n", "nn", ",", "_", "=", "tree", ".", "query", "(", "self", ".", "real_mask_surface_pts", ")", "\n", "\n", "return", "nn", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_dice_coefficient": [[76, 85], ["calculate_metrics.Metirc.real_mask.sum", "calculate_metrics.Metirc.pred_mask.sum"], "methods", ["None"], ["", "def", "get_dice_coefficient", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: dice\u7cfb\u6570 dice\u7cfb\u6570\u7684\u5206\u5b50 dice\u7cfb\u6570\u7684\u5206\u6bcd(\u540e\u4e24\u8005\u7528\u4e8e\u8ba1\u7b97dice_global)\n        \"\"\"", "\n", "intersection", "=", "(", "self", ".", "real_mask", "*", "self", ".", "pred_mask", ")", ".", "sum", "(", ")", "\n", "union", "=", "self", ".", "real_mask", ".", "sum", "(", ")", "+", "self", ".", "pred_mask", ".", "sum", "(", ")", "\n", "\n", "return", "2", "*", "intersection", "/", "union", ",", "2", "*", "intersection", ",", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_jaccard_index": [[86, 95], ["None"], "methods", ["None"], ["", "def", "get_jaccard_index", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: \u6770\u5361\u5fb7\u7cfb\u6570\n        \"\"\"", "\n", "intersection", "=", "(", "self", ".", "real_mask", "*", "self", ".", "pred_mask", ")", ".", "sum", "(", ")", "\n", "union", "=", "(", "self", ".", "real_mask", "|", "self", ".", "pred_mask", ")", ".", "sum", "(", ")", "\n", "\n", "return", "intersection", "/", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_VOE": [[96, 103], ["calculate_metrics.Metirc.get_jaccard_index"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_jaccard_index"], ["", "def", "get_VOE", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: \u4f53\u7d20\u91cd\u53e0\u8bef\u5dee Volumetric Overlap Error\n        \"\"\"", "\n", "\n", "return", "1", "-", "self", ".", "get_jaccard_index", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_RVD": [[104, 111], ["float", "float", "calculate_metrics.Metirc.real_mask.sum", "calculate_metrics.Metirc.pred_mask.sum", "calculate_metrics.Metirc.real_mask.sum"], "methods", ["None"], ["", "def", "get_RVD", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: \u4f53\u7d20\u76f8\u5bf9\u8bef\u5dee Relative Volume Difference\n        \"\"\"", "\n", "\n", "return", "float", "(", "self", ".", "pred_mask", ".", "sum", "(", ")", "-", "self", ".", "real_mask", ".", "sum", "(", ")", ")", "/", "float", "(", "self", ".", "real_mask", ".", "sum", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_FNR": [[112, 121], ["calculate_metrics.Metirc.real_mask.sum"], "methods", ["None"], ["", "def", "get_FNR", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: \u6b20\u5206\u5272\u7387 False negative rate\n        \"\"\"", "\n", "fn", "=", "self", ".", "real_mask", ".", "sum", "(", ")", "-", "(", "self", ".", "real_mask", "*", "self", ".", "pred_mask", ")", ".", "sum", "(", ")", "\n", "union", "=", "(", "self", ".", "real_mask", "|", "self", ".", "pred_mask", ")", ".", "sum", "(", ")", "\n", "\n", "return", "fn", "/", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_FPR": [[122, 131], ["calculate_metrics.Metirc.pred_mask.sum"], "methods", ["None"], ["", "def", "get_FPR", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: \u8fc7\u5206\u5272\u7387 False positive rate\n        \"\"\"", "\n", "fp", "=", "self", ".", "pred_mask", ".", "sum", "(", ")", "-", "(", "self", ".", "real_mask", "*", "self", ".", "pred_mask", ")", ".", "sum", "(", ")", "\n", "union", "=", "(", "self", ".", "real_mask", "|", "self", ".", "pred_mask", ")", ".", "sum", "(", ")", "\n", "\n", "return", "fp", "/", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_ASSD": [[133, 140], ["calculate_metrics.Metirc.pred2real_nn.sum", "calculate_metrics.Metirc.real2pred_nn.sum"], "methods", ["None"], ["", "def", "get_ASSD", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: \u5bf9\u79f0\u4f4d\u7f6e\u5e73\u5747\u8868\u9762\u8ddd\u79bb Average Symmetric Surface Distance\n        \"\"\"", "\n", "return", "(", "self", ".", "pred2real_nn", ".", "sum", "(", ")", "+", "self", ".", "real2pred_nn", ".", "sum", "(", ")", ")", "/", "(", "self", ".", "real_mask_surface_pts", ".", "shape", "[", "0", "]", "+", "self", ".", "pred_mask_surface_pts", ".", "shape", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_RMSD": [[141, 148], ["math.sqrt", "numpy.power().sum", "numpy.power().sum", "numpy.power", "numpy.power"], "methods", ["None"], ["", "def", "get_RMSD", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: \u5bf9\u79f0\u4f4d\u7f6e\u8868\u9762\u8ddd\u79bb\u7684\u5747\u65b9\u6839 Root Mean Square symmetric Surface Distance\n        \"\"\"", "\n", "return", "math", ".", "sqrt", "(", "(", "np", ".", "power", "(", "self", ".", "pred2real_nn", ",", "2", ")", ".", "sum", "(", ")", "+", "np", ".", "power", "(", "self", ".", "real2pred_nn", ",", "2", ")", ".", "sum", "(", ")", ")", "/", "\n", "(", "self", ".", "real_mask_surface_pts", ".", "shape", "[", "0", "]", "+", "self", ".", "pred_mask_surface_pts", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.utilities.calculate_metrics.Metirc.get_MSD": [[149, 155], ["max", "calculate_metrics.Metirc.pred2real_nn.max", "calculate_metrics.Metirc.real2pred_nn.max"], "methods", ["None"], ["", "def", "get_MSD", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n\n        :return: \u5bf9\u79f0\u4f4d\u7f6e\u7684\u6700\u5927\u8868\u9762\u8ddd\u79bb Maximum Symmetric Surface Distance\n        \"\"\"", "\n", "return", "max", "(", "self", ".", "pred2real_nn", ".", "max", "(", ")", ",", "self", ".", "real2pred_nn", ".", "max", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.ResUNet.__init__": [[16, 164], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "training", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "training", "=", "training", "\n", "\n", "self", ".", "encoder_stage1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "1", ",", "16", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "16", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "16", ",", "16", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "16", ")", ",", "\n", ")", "\n", "\n", "self", ".", "encoder_stage2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "32", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "32", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "32", ")", ",", "\n", ")", "\n", "\n", "self", ".", "encoder_stage3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "64", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "64", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "padding", "=", "4", ",", "dilation", "=", "4", ")", ",", "\n", "nn", ".", "PReLU", "(", "64", ")", ",", "\n", ")", "\n", "\n", "self", ".", "encoder_stage4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "PReLU", "(", "128", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "padding", "=", "4", ",", "dilation", "=", "4", ")", ",", "\n", "nn", ".", "PReLU", "(", "128", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "padding", "=", "5", ",", "dilation", "=", "5", ")", ",", "\n", "nn", ".", "PReLU", "(", "128", ")", ",", "\n", ")", "\n", "\n", "self", ".", "decoder_stage1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "128", ",", "256", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "256", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "256", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "256", ")", ",", "\n", ")", "\n", "\n", "self", ".", "decoder_stage2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "128", "+", "64", ",", "128", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "128", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "128", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "128", ")", ",", "\n", ")", "\n", "\n", "self", ".", "decoder_stage3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "64", "+", "32", ",", "64", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "64", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "64", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "64", ")", ",", "\n", ")", "\n", "\n", "self", ".", "decoder_stage4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "32", "+", "16", ",", "32", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "32", ")", ",", "\n", "\n", "nn", ".", "Conv3d", "(", "32", ",", "32", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "32", ")", ",", "\n", ")", "\n", "\n", "self", ".", "down_conv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "16", ",", "32", ",", "2", ",", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "32", ")", "\n", ")", "\n", "\n", "self", ".", "down_conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "32", ",", "64", ",", "2", ",", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "64", ")", "\n", ")", "\n", "\n", "self", ".", "down_conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "64", ",", "128", ",", "2", ",", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "128", ")", "\n", ")", "\n", "\n", "self", ".", "down_conv4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "128", ",", "256", ",", "3", ",", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "256", ")", "\n", ")", "\n", "\n", "self", ".", "up_conv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose3d", "(", "256", ",", "128", ",", "2", ",", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "128", ")", "\n", ")", "\n", "\n", "self", ".", "up_conv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose3d", "(", "128", ",", "64", ",", "2", ",", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "64", ")", "\n", ")", "\n", "\n", "self", ".", "up_conv4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose3d", "(", "64", ",", "32", ",", "2", ",", "2", ")", ",", "\n", "nn", ".", "PReLU", "(", "32", ")", "\n", ")", "\n", "\n", "# \u6700\u540e\u5927\u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04\uff08256*256\uff09\uff0c\u4e0b\u9762\u7684\u5c3a\u5ea6\u4f9d\u6b21\u9012\u51cf", "\n", "self", ".", "map4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "32", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 128*128 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "64", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "2", ",", "4", ",", "4", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 64*64 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "128", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "4", ",", "8", ",", "8", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 32*32 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "256", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "8", ",", "16", ",", "16", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.ResUNet.forward": [[166, 216], ["models.ResUNet.down_conv1", "torch.dropout", "torch.dropout", "torch.dropout", "models.ResUNet.down_conv2", "torch.dropout", "torch.dropout", "torch.dropout", "models.ResUNet.down_conv3", "torch.dropout", "torch.dropout", "torch.dropout", "models.ResUNet.down_conv4", "torch.dropout", "torch.dropout", "torch.dropout", "models.ResUNet.map1", "models.ResUNet.up_conv2", "torch.dropout", "torch.dropout", "torch.dropout", "models.ResUNet.map2", "models.ResUNet.up_conv3", "torch.dropout", "torch.dropout", "torch.dropout", "models.ResUNet.map3", "models.ResUNet.up_conv4", "models.ResUNet.map4", "print", "models.ResUNet.encoder_stage1", "models.ResUNet.encoder_stage2", "models.ResUNet.encoder_stage3", "models.ResUNet.encoder_stage4", "models.ResUNet.decoder_stage1", "models.ResUNet.decoder_stage2", "models.ResUNet.decoder_stage3", "models.ResUNet.decoder_stage4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "\n", "        ", "long_range1", "=", "self", ".", "encoder_stage1", "(", "inputs", ")", "+", "inputs", "\n", "\n", "short_range1", "=", "self", ".", "down_conv1", "(", "long_range1", ")", "\n", "\n", "long_range2", "=", "self", ".", "encoder_stage2", "(", "short_range1", ")", "+", "short_range1", "\n", "long_range2", "=", "F", ".", "dropout", "(", "long_range2", ",", "para", ".", "drop_rate", ",", "self", ".", "training", ")", "\n", "\n", "short_range2", "=", "self", ".", "down_conv2", "(", "long_range2", ")", "\n", "\n", "long_range3", "=", "self", ".", "encoder_stage3", "(", "short_range2", ")", "+", "short_range2", "\n", "long_range3", "=", "F", ".", "dropout", "(", "long_range3", ",", "para", ".", "drop_rate", ",", "self", ".", "training", ")", "\n", "\n", "short_range3", "=", "self", ".", "down_conv3", "(", "long_range3", ")", "\n", "\n", "long_range4", "=", "self", ".", "encoder_stage4", "(", "short_range3", ")", "+", "short_range3", "\n", "long_range4", "=", "F", ".", "dropout", "(", "long_range4", ",", "para", ".", "drop_rate", ",", "self", ".", "training", ")", "\n", "\n", "short_range4", "=", "self", ".", "down_conv4", "(", "long_range4", ")", "\n", "\n", "outputs", "=", "self", ".", "decoder_stage1", "(", "long_range4", ")", "+", "short_range4", "\n", "outputs", "=", "F", ".", "dropout", "(", "outputs", ",", "para", ".", "drop_rate", ",", "self", ".", "training", ")", "\n", "\n", "output1", "=", "self", ".", "map1", "(", "outputs", ")", "\n", "\n", "short_range6", "=", "self", ".", "up_conv2", "(", "outputs", ")", "\n", "\n", "outputs", "=", "self", ".", "decoder_stage2", "(", "torch", ".", "cat", "(", "[", "short_range6", ",", "long_range3", "]", ",", "dim", "=", "1", ")", ")", "+", "short_range6", "\n", "outputs", "=", "F", ".", "dropout", "(", "outputs", ",", "0.3", ",", "self", ".", "training", ")", "\n", "\n", "output2", "=", "self", ".", "map2", "(", "outputs", ")", "\n", "\n", "short_range7", "=", "self", ".", "up_conv3", "(", "outputs", ")", "\n", "\n", "outputs", "=", "self", ".", "decoder_stage3", "(", "torch", ".", "cat", "(", "[", "short_range7", ",", "long_range2", "]", ",", "dim", "=", "1", ")", ")", "+", "short_range7", "\n", "outputs", "=", "F", ".", "dropout", "(", "outputs", ",", "0.3", ",", "self", ".", "training", ")", "\n", "\n", "output3", "=", "self", ".", "map3", "(", "outputs", ")", "\n", "\n", "short_range8", "=", "self", ".", "up_conv4", "(", "outputs", ")", "\n", "\n", "outputs", "=", "self", ".", "decoder_stage4", "(", "torch", ".", "cat", "(", "[", "short_range8", ",", "long_range1", "]", ",", "dim", "=", "1", ")", ")", "+", "short_range8", "\n", "\n", "output4", "=", "self", ".", "map4", "(", "outputs", ")", "\n", "print", "(", "output1", ".", "shape", ",", "output2", ".", "shape", ",", "output3", ".", "shape", ",", "output4", ".", "shape", ")", "\n", "if", "self", ".", "training", "is", "True", ":", "\n", "            ", "return", "output1", ",", "output2", ",", "output3", ",", "output4", "\n", "", "else", ":", "\n", "            ", "return", "output4", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.unet.__init__": [[218, 261], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "training", ")", ":", "\n", "        ", "super", "(", "unet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "training", "=", "training", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv3d", "(", "1", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 10, 10", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv3d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 3, 3", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv3d", "(", "64", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "encoder4", "=", "nn", ".", "Conv3d", "(", "128", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "encoder5", "=", "nn", ".", "Conv3d", "(", "256", ",", "512", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv3d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 5, 5", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv3d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 15, 1", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv3d", "(", "128", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 1, 28, 28", "\n", "self", ".", "decoder4", "=", "nn", ".", "Conv3d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "decoder5", "=", "nn", ".", "Conv3d", "(", "32", ",", "2", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "map4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "2", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 128*128 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "64", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "4", ",", "8", ",", "8", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 64*64 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "128", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "8", ",", "16", ",", "16", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 32*32 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "256", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "16", ",", "32", ",", "32", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.unet.forward": [[262, 296], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "models.unet.map1", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "models.unet.map2", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "models.unet.map3", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "models.unet.map4", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.pad", "torch.pad", "torch.pad", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "models.unet.encoder1", "models.unet.encoder2", "models.unet.encoder3", "models.unet.encoder4", "models.unet.encoder5", "models.unet.decoder1", "models.unet.decoder2", "models.unet.decoder3", "models.unet.decoder4", "models.unet.decoder5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder1", "(", "x", ")", ",", "2", ",", "2", ")", ")", "\n", "t1", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder2", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t2", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t3", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder4", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t4", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder5", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "\n", "# t2 = out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder1", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "# print(out.shape,t4.shape)", "\n", "out", "=", "torch", ".", "add", "(", "F", ".", "pad", "(", "out", ",", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "]", ")", ",", "t4", ")", "\n", "output1", "=", "self", ".", "map1", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder2", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t3", ")", "\n", "output2", "=", "self", ".", "map2", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder3", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t2", ")", "\n", "output3", "=", "self", ".", "map3", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder4", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t1", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder5", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "output4", "=", "self", ".", "map4", "(", "out", ")", "\n", "# print(out.shape)", "\n", "# print(output1.shape,output2.shape,output3.shape,output4.shape)", "\n", "if", "self", ".", "training", "is", "True", ":", "\n", "            ", "return", "output1", ",", "output2", ",", "output3", ",", "output4", "\n", "", "else", ":", "\n", "            ", "return", "output4", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.segnet.__init__": [[298, 341], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "training", ")", ":", "\n", "        ", "super", "(", "segnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "training", "=", "training", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv3d", "(", "1", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 10, 10", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv3d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 3, 3", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv3d", "(", "64", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "encoder4", "=", "nn", ".", "Conv3d", "(", "128", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "encoder5", "=", "nn", ".", "Conv3d", "(", "256", ",", "512", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv3d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 5, 5", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv3d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 15, 1", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv3d", "(", "128", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 1, 28, 28", "\n", "self", ".", "decoder4", "=", "nn", ".", "Conv3d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "decoder5", "=", "nn", ".", "Conv3d", "(", "32", ",", "2", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "map4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "2", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 128*128 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "64", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "4", ",", "8", ",", "8", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 64*64 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "128", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "8", ",", "16", ",", "16", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 32*32 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "256", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "16", ",", "32", ",", "32", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.segnet.forward": [[342, 376], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "models.segnet.map1", "torch.relu", "torch.relu", "torch.relu", "models.segnet.map2", "torch.relu", "torch.relu", "torch.relu", "models.segnet.map3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "models.segnet.map4", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.pad", "torch.pad", "torch.pad", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "models.segnet.encoder1", "models.segnet.encoder2", "models.segnet.encoder3", "models.segnet.encoder4", "models.segnet.encoder5", "models.segnet.decoder1", "models.segnet.decoder2", "models.segnet.decoder3", "models.segnet.decoder4", "models.segnet.decoder5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder1", "(", "x", ")", ",", "2", ",", "2", ")", ")", "\n", "t1", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder2", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t2", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t3", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder4", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t4", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder5", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "\n", "# t2 = out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder1", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "# print(out.shape,t4.shape)", "\n", "out", "=", "torch", ".", "add", "(", "F", ".", "pad", "(", "out", ",", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "]", ")", ",", "t4", ")", "\n", "output1", "=", "self", ".", "map1", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder2", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "# out = torch.add(out,t3)", "\n", "output2", "=", "self", ".", "map2", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder3", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "# out = torch.add(out,t2)", "\n", "output3", "=", "self", ".", "map3", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder4", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "# out = torch.add(out,t1)", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder5", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "output4", "=", "self", ".", "map4", "(", "out", ")", "\n", "# print(out.shape)", "\n", "# print(output1.shape,output2.shape,output3.shape,output4.shape)", "\n", "if", "self", ".", "training", "is", "True", ":", "\n", "            ", "return", "output1", ",", "output2", ",", "output3", ",", "output4", "\n", "", "else", ":", "\n", "            ", "return", "output4", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.kiunet_min.__init__": [[378, 424], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "training", ")", ":", "\n", "        ", "super", "(", "kiunet_min", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "training", "=", "training", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv3d", "(", "1", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 10, 10", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv3d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 3, 3", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv3d", "(", "64", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "encoder4", "=", "nn", ".", "Conv3d", "(", "128", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "encoder5", "=", "nn", ".", "Conv3d", "(", "256", ",", "512", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "kencoder1", "=", "nn", ".", "Conv3d", "(", "1", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "kdecoder1", "=", "nn", ".", "Conv3d", "(", "32", ",", "2", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv3d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 5, 5", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv3d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 15, 1", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv3d", "(", "128", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 1, 28, 28", "\n", "self", ".", "decoder4", "=", "nn", ".", "Conv3d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "decoder5", "=", "nn", ".", "Conv3d", "(", "32", ",", "2", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "map4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "2", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 128*128 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "64", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "4", ",", "8", ",", "8", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 64*64 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "128", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "8", ",", "16", ",", "16", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 32*32 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "256", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "16", ",", "32", ",", "32", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.kiunet_min.forward": [[425, 466], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "models.kiunet_min.map1", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "models.kiunet_min.map2", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "models.kiunet_min.map3", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "models.kiunet_min.map4", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.pad", "torch.pad", "torch.pad", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "models.kiunet_min.encoder1", "models.kiunet_min.encoder2", "models.kiunet_min.encoder3", "models.kiunet_min.encoder4", "models.kiunet_min.encoder5", "models.kiunet_min.decoder1", "models.kiunet_min.decoder2", "models.kiunet_min.decoder3", "models.kiunet_min.decoder4", "models.kiunet_min.kencoder1", "models.kiunet_min.kdecoder1", "models.kiunet_min.decoder5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder1", "(", "x", ")", ",", "2", ",", "2", ")", ")", "\n", "t1", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder2", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t2", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t3", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder4", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t4", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder5", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "\n", "# t2 = out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder1", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "# print(out.shape,t4.shape)", "\n", "out", "=", "torch", ".", "add", "(", "F", ".", "pad", "(", "out", ",", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "]", ")", ",", "t4", ")", "\n", "output1", "=", "self", ".", "map1", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder2", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t3", ")", "\n", "output2", "=", "self", ".", "map2", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder3", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t2", ")", "\n", "output3", "=", "self", ".", "map3", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder4", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t1", ")", "\n", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "kencoder1", "(", "x", ")", ",", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "kdecoder1", "(", "out1", ")", ",", "scale_factor", "=", "(", "1", ",", "0.5", ",", "0.5", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder5", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "# print(out.shape,out1.shape)", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "out1", ")", "\n", "output4", "=", "self", ".", "map4", "(", "out", ")", "\n", "\n", "# print(out.shape)", "\n", "\n", "# print(output1.shape,output2.shape,output3.shape,output4.shape)", "\n", "if", "self", ".", "training", "is", "True", ":", "\n", "            ", "return", "output1", ",", "output2", ",", "output3", ",", "output4", "\n", "", "else", ":", "\n", "            ", "return", "output4", "\n", "", "", "", "class", "kiunet_org", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.kiunet_org.__init__": [[468, 561], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "training", ")", ":", "\n", "        ", "super", "(", "kiunet_org", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "training", "=", "training", "\n", "self", ".", "start", "=", "nn", ".", "Conv3d", "(", "1", ",", "1", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv3d", "(", "1", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# First Layer GrayScale Image , change to input channels to 3 in case of RGB ", "\n", "self", ".", "en1_bn", "=", "nn", ".", "BatchNorm3d", "(", "16", ")", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv3d", "(", "16", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "en2_bn", "=", "nn", ".", "BatchNorm3d", "(", "32", ")", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv3d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "en3_bn", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv3d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "de1_bn", "=", "nn", ".", "BatchNorm3d", "(", "32", ")", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv3d", "(", "32", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "de2_bn", "=", "nn", ".", "BatchNorm3d", "(", "16", ")", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv3d", "(", "16", ",", "8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "de3_bn", "=", "nn", ".", "BatchNorm3d", "(", "8", ")", "\n", "\n", "self", ".", "decoderf1", "=", "nn", ".", "Conv3d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def1_bn", "=", "nn", ".", "BatchNorm3d", "(", "32", ")", "\n", "self", ".", "decoderf2", "=", "nn", ".", "Conv3d", "(", "32", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def2_bn", "=", "nn", ".", "BatchNorm3d", "(", "16", ")", "\n", "self", ".", "decoderf3", "=", "nn", ".", "Conv3d", "(", "16", ",", "8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def3_bn", "=", "nn", ".", "BatchNorm3d", "(", "8", ")", "\n", "\n", "self", ".", "encoderf1", "=", "nn", ".", "Conv3d", "(", "1", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# First Layer GrayScale Image , change to input channels to 3 in case of RGB ", "\n", "self", ".", "enf1_bn", "=", "nn", ".", "BatchNorm3d", "(", "16", ")", "\n", "self", ".", "encoderf2", "=", "nn", ".", "Conv3d", "(", "16", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "enf2_bn", "=", "nn", ".", "BatchNorm3d", "(", "32", ")", "\n", "self", ".", "encoderf3", "=", "nn", ".", "Conv3d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "enf3_bn", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "\n", "self", ".", "intere1_1", "=", "nn", ".", "Conv3d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte1_1bn", "=", "nn", ".", "BatchNorm3d", "(", "16", ")", "\n", "self", ".", "intere2_1", "=", "nn", ".", "Conv3d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte2_1bn", "=", "nn", ".", "BatchNorm3d", "(", "32", ")", "\n", "self", ".", "intere3_1", "=", "nn", ".", "Conv3d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte3_1bn", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "\n", "self", ".", "intere1_2", "=", "nn", ".", "Conv3d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte1_2bn", "=", "nn", ".", "BatchNorm3d", "(", "16", ")", "\n", "self", ".", "intere2_2", "=", "nn", ".", "Conv3d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte2_2bn", "=", "nn", ".", "BatchNorm3d", "(", "32", ")", "\n", "self", ".", "intere3_2", "=", "nn", ".", "Conv3d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte3_2bn", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "\n", "self", ".", "interd1_1", "=", "nn", ".", "Conv3d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd1_1bn", "=", "nn", ".", "BatchNorm3d", "(", "32", ")", "\n", "self", ".", "interd2_1", "=", "nn", ".", "Conv3d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd2_1bn", "=", "nn", ".", "BatchNorm3d", "(", "16", ")", "\n", "self", ".", "interd3_1", "=", "nn", ".", "Conv3d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd3_1bn", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "\n", "self", ".", "interd1_2", "=", "nn", ".", "Conv3d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd1_2bn", "=", "nn", ".", "BatchNorm3d", "(", "32", ")", "\n", "self", ".", "interd2_2", "=", "nn", ".", "Conv3d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd2_2bn", "=", "nn", ".", "BatchNorm3d", "(", "16", ")", "\n", "self", ".", "interd3_2", "=", "nn", ".", "Conv3d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd3_2bn", "=", "nn", ".", "BatchNorm3d", "(", "64", ")", "\n", "\n", "# self.start = nn.Conv3d(1, 1, 3, stride=1, padding=1)", "\n", "self", ".", "final", "=", "nn", ".", "Conv3d", "(", "8", ",", "1", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "fin", "=", "nn", ".", "Conv3d", "(", "1", ",", "1", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "map4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "32", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "4", ",", "16", ",", "16", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 128*128 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "16", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "4", ",", "8", ",", "8", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 64*64 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "8", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "4", ",", "4", ",", "4", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "# 32*32 \u5c3a\u5ea6\u4e0b\u7684\u6620\u5c04", "\n", "self", ".", "map1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "256", ",", "1", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "(", "16", ",", "32", ",", "32", ")", ",", "mode", "=", "'trilinear'", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.kiunet_org.forward": [[562, 638], ["models.kiunet_org.start", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.pad", "torch.pad", "torch.pad", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "models.kiunet_org.map4", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "models.kiunet_org.map3", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "models.kiunet_org.map2", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "models.kiunet_org.en1_bn", "models.kiunet_org.enf1_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "models.kiunet_org.en2_bn", "models.kiunet_org.enf2_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "models.kiunet_org.en3_bn", "models.kiunet_org.enf3_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "models.kiunet_org.de1_bn", "models.kiunet_org.def1_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "models.kiunet_org.de2_bn", "models.kiunet_org.def2_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "models.kiunet_org.de3_bn", "models.kiunet_org.def3_bn", "models.kiunet_org.final", "models.kiunet_org.fin", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "models.kiunet_org.encoder1", "models.kiunet_org.encoderf1", "models.kiunet_org.inte1_1bn", "models.kiunet_org.inte1_2bn", "models.kiunet_org.encoder2", "models.kiunet_org.encoderf2", "models.kiunet_org.inte2_1bn", "models.kiunet_org.inte2_2bn", "models.kiunet_org.encoder3", "models.kiunet_org.encoderf3", "models.kiunet_org.inte3_1bn", "models.kiunet_org.inte3_2bn", "models.kiunet_org.decoder1", "models.kiunet_org.decoderf1", "models.kiunet_org.intd1_1bn", "models.kiunet_org.intd1_2bn", "models.kiunet_org.decoder2", "models.kiunet_org.decoderf2", "models.kiunet_org.intd2_1bn", "models.kiunet_org.intd2_2bn", "models.kiunet_org.decoder3", "models.kiunet_org.decoderf3", "models.kiunet_org.intere1_1", "models.kiunet_org.intere1_2", "models.kiunet_org.intere2_1", "models.kiunet_org.intere2_2", "models.kiunet_org.intere3_1", "models.kiunet_org.intere3_2", "models.kiunet_org.interd1_1", "models.kiunet_org.interd1_2", "models.kiunet_org.interd2_1", "models.kiunet_org.interd2_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# print(x.shape)", "\n", "        ", "outx", "=", "self", ".", "start", "(", "x", ")", "\n", "# print(outx.shape)", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "en1_bn", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder1", "(", "outx", ")", ",", "2", ",", "2", ")", ")", ")", "#U-Net branch", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf1_bn", "(", "F", ".", "interpolate", "(", "self", ".", "encoderf1", "(", "outx", ")", ",", "scale_factor", "=", "(", "0.5", ",", "1", ",", "1", ")", ",", "mode", "=", "'trilinear'", ")", ")", ")", "#Ki-Net branch", "\n", "tmp", "=", "out", "\n", "# print(out.shape,out1.shape)", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte1_1bn", "(", "self", ".", "intere1_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "1", ",", "0.5", ",", "0.5", ")", ",", "mode", "=", "'trilinear'", ")", ")", "#CRFB", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte1_2bn", "(", "self", ".", "intere1_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "#CRFB", "\n", "\n", "u1", "=", "out", "#skip conn", "\n", "o1", "=", "out1", "#skip conn", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "en2_bn", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder2", "(", "out", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf2_bn", "(", "F", ".", "interpolate", "(", "self", ".", "encoderf2", "(", "out1", ")", ",", "scale_factor", "=", "(", "1", ",", "1", ",", "1", ")", ",", "mode", "=", "'trilinear'", ")", ")", ")", "\n", "tmp", "=", "out", "\n", "# print(out.shape,out1.shape)", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte2_1bn", "(", "self", ".", "intere2_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.5", ",", "0.25", ",", "0.25", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte2_2bn", "(", "self", ".", "intere2_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "2", ",", "4", ",", "4", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "u2", "=", "out", "\n", "o2", "=", "out1", "\n", "out", "=", "F", ".", "pad", "(", "out", ",", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "]", ")", "\n", "# print(out.shape)", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "en3_bn", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf3_bn", "(", "F", ".", "interpolate", "(", "self", ".", "encoderf3", "(", "out1", ")", ",", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", ")", "\n", "# print(out.shape,out1.shape)", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte3_1bn", "(", "self", ".", "intere3_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.5", ",", "0.0625", ",", "0.0625", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte3_2bn", "(", "self", ".", "intere3_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "2", ",", "16", ",", "16", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "### End of encoder block", "\n", "\n", "### Start Decoder", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de1_bn", "(", "F", ".", "interpolate", "(", "self", ".", "decoder1", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", ")", "#U-NET", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def1_bn", "(", "F", ".", "max_pool3d", "(", "self", ".", "decoderf1", "(", "out1", ")", ",", "2", ",", "2", ")", ")", ")", "#Ki-NET", "\n", "tmp", "=", "out", "\n", "# print(out.shape,out1.shape)", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd1_1bn", "(", "self", ".", "interd1_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "2", ",", "0.25", ",", "0.25", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd1_2bn", "(", "self", ".", "interd1_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "0.5", ",", "4", ",", "4", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "# print(out.shape)", "\n", "output1", "=", "self", ".", "map4", "(", "out", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u2", ")", "#skip conn", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o2", ")", "#skip conn", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de2_bn", "(", "F", ".", "interpolate", "(", "self", ".", "decoder2", "(", "out", ")", ",", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def2_bn", "(", "F", ".", "max_pool3d", "(", "self", ".", "decoderf2", "(", "out1", ")", ",", "1", ",", "1", ")", ")", ")", "\n", "# print(out.shape,out1.shape)", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd2_1bn", "(", "self", ".", "interd2_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "1", ",", "0.5", ",", "0.5", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd2_2bn", "(", "self", ".", "interd2_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "output2", "=", "self", ".", "map3", "(", "out", ")", "\n", "# print(out1.shape,o1.shape)", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u1", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o1", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de3_bn", "(", "F", ".", "interpolate", "(", "self", ".", "decoder3", "(", "out", ")", ",", "scale_factor", "=", "(", "1", ",", "2", ",", "2", ")", ",", "mode", "=", "'trilinear'", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def3_bn", "(", "F", ".", "max_pool3d", "(", "self", ".", "decoderf3", "(", "out1", ")", ",", "1", ",", "1", ")", ")", ")", "\n", "# print(out.shape,out1.shape)", "\n", "output3", "=", "self", ".", "map2", "(", "out", ")", "\n", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "out1", ")", "# fusion of both branches", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "final", "(", "out", ")", ")", "#1*1 conv", "\n", "\n", "output4", "=", "F", ".", "interpolate", "(", "self", ".", "fin", "(", "out", ")", ",", "scale_factor", "=", "(", "4", ",", "4", ",", "4", ")", ",", "mode", "=", "'trilinear'", ")", "\n", "# print(out.shape)", "\n", "# out = self.soft(out)", "\n", "# print(output1.shape,output2.shape,output3.shape,output4.shape)", "\n", "if", "self", ".", "training", "is", "True", ":", "\n", "            ", "return", "output1", ",", "output2", ",", "output3", ",", "output4", "\n", "", "else", ":", "\n", "            ", "return", "output4", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.net.models.init": [[639, 643], ["isinstance", "isinstance", "torch.init.kaiming_normal_", "torch.init.constant_"], "function", ["None"], ["", "", "", "def", "init", "(", "module", ")", ":", "\n", "    ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv3d", ")", "or", "isinstance", "(", "module", ",", "nn", ".", "ConvTranspose3d", ")", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_normal_", "(", "module", ".", "weight", ".", "data", ",", "0.25", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "module", ".", "bias", ".", "data", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.WBCE.WCELoss.__init__": [[12, 16], ["torch.Module.__init__", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "weight", "=", "torch", ".", "FloatTensor", "(", "[", "0.05", ",", "1", "]", ")", ".", "cuda", "(", ")", "\n", "self", ".", "ce_loss", "=", "nn", ".", "CrossEntropyLoss", "(", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.WBCE.WCELoss.forward": [[17, 24], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.long", "torch.long", "torch.long", "torch.long", "WBCE.WCELoss.ce_loss", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "        ", "pred_", "=", "torch", ".", "ones_like", "(", "pred", ")", "-", "pred", "\n", "pred", "=", "torch", ".", "cat", "(", "(", "pred_", ",", "pred", ")", ",", "dim", "=", "1", ")", "\n", "\n", "target", "=", "torch", ".", "long", "(", ")", "\n", "\n", "return", "self", ".", "ce_loss", "(", "pred", ",", "target", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.ELDice.ELDiceLoss.__init__": [[11, 13], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.ELDice.ELDiceLoss.forward": [[14, 26], ["pred.squeeze.squeeze.squeeze", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.pow().mean", "torch.pow().mean", "torch.pow().mean", "torch.pow().mean", "pred.squeeze.squeeze.pow().sum().sum().sum", "target.pow().sum().sum().sum", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "pred.squeeze.squeeze.pow().sum().sum", "target.pow().sum().sum", "torch.log", "torch.log", "torch.log", "torch.log", "pred.squeeze.squeeze.pow().sum", "target.pow().sum", "pred.squeeze.squeeze.pow", "target.pow"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Logger.log", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Logger.log", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Logger.log", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.None.utils.Logger.log"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "\n", "        ", "pred", "=", "pred", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "smooth", "=", "1", "\n", "\n", "# dice\u7cfb\u6570\u7684\u5b9a\u4e49", "\n", "dice", "=", "2", "*", "(", "pred", "*", "target", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "/", "(", "pred", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "\n", "target", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "smooth", ")", "\n", "\n", "# \u8fd4\u56de\u7684\u662fdice\u8ddd\u79bb", "\n", "return", "torch", ".", "clamp", "(", "(", "torch", ".", "pow", "(", "-", "torch", ".", "log", "(", "dice", "+", "1e-5", ")", ",", "0.3", ")", ")", ".", "mean", "(", ")", ",", "0", ",", "2", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.SS.SSLoss.__init__": [[10, 12], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.SS.SSLoss.forward": [[13, 26], ["pred.squeeze.squeeze.squeeze", "target.sum().sum().sum", "target.sum().sum", "target.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "\n", "        ", "pred", "=", "pred", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "smooth", "=", "1", "\n", "\n", "# jaccard\u7cfb\u6570\u7684\u5b9a\u4e49", "\n", "s1", "=", "(", "(", "pred", "-", "target", ")", ".", "pow", "(", "2", ")", "*", "target", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "/", "(", "smooth", "+", "target", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ")", "\n", "\n", "s2", "=", "(", "(", "pred", "-", "target", ")", ".", "pow", "(", "2", ")", "*", "(", "1", "-", "target", ")", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "/", "(", "smooth", "+", "(", "1", "-", "target", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ")", "\n", "\n", "# \u8fd4\u56de\u7684\u662fjaccard\u8ddd\u79bb", "\n", "return", "(", "0.05", "*", "s1", "+", "0.95", "*", "s2", ")", ".", "mean", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.Tversky.TverskyLoss.__init__": [[12, 14], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.Tversky.TverskyLoss.forward": [[15, 27], ["pred.squeeze.squeeze.squeeze", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "\n", "        ", "pred", "=", "pred", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "smooth", "=", "1", "\n", "\n", "# dice\u7cfb\u6570\u7684\u5b9a\u4e49", "\n", "dice", "=", "(", "pred", "*", "target", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "/", "(", "(", "pred", "*", "target", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "\n", "0.3", "*", "(", "pred", "*", "(", "1", "-", "target", ")", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "0.7", "*", "(", "(", "1", "-", "pred", ")", "*", "target", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "smooth", ")", "\n", "\n", "# \u8fd4\u56de\u7684\u662fdice\u8ddd\u79bb", "\n", "return", "torch", ".", "clamp", "(", "(", "1", "-", "dice", ")", ".", "mean", "(", ")", ",", "0", ",", "2", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.Jaccard.JaccardLoss.__init__": [[11, 13], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.Jaccard.JaccardLoss.forward": [[14, 26], ["pred.squeeze.squeeze.squeeze", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "pred.squeeze.squeeze.pow().sum().sum().sum", "target.pow().sum().sum().sum", "pred.squeeze.squeeze.pow().sum().sum", "target.pow().sum().sum", "pred.squeeze.squeeze.pow().sum", "target.pow().sum", "pred.squeeze.squeeze.pow", "target.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "\n", "        ", "pred", "=", "pred", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "smooth", "=", "1", "\n", "\n", "# jaccard\u7cfb\u6570\u7684\u5b9a\u4e49", "\n", "dice", "=", "(", "pred", "*", "target", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "/", "(", "pred", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "\n", "target", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "-", "(", "pred", "*", "target", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "smooth", ")", "\n", "\n", "# \u8fd4\u56de\u7684\u662fjaccard\u8ddd\u79bb", "\n", "return", "torch", ".", "clamp", "(", "(", "1", "-", "dice", ")", ".", "mean", "(", ")", ",", "0", ",", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.Hybrid.HybridLoss.__init__": [[11, 16], ["torch.Module.__init__", "torch.BCELoss", "torch.BCELoss"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bce_loss", "=", "nn", ".", "BCELoss", "(", ")", "\n", "self", ".", "bce_weight", "=", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.Hybrid.HybridLoss.forward": [[17, 29], ["pred.squeeze.squeeze.squeeze", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "Hybrid.HybridLoss.bce_loss", "pred.squeeze.squeeze.pow().sum().sum().sum", "target.pow().sum().sum().sum", "pred.squeeze.squeeze.pow().sum().sum", "target.pow().sum().sum", "pred.squeeze.squeeze.pow().sum", "target.pow().sum", "pred.squeeze.squeeze.pow", "target.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "\n", "        ", "pred", "=", "pred", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "smooth", "=", "1", "\n", "\n", "# dice\u7cfb\u6570\u7684\u5b9a\u4e49", "\n", "dice", "=", "2", "*", "(", "pred", "*", "target", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "/", "(", "pred", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "\n", "target", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "smooth", ")", "\n", "\n", "# \u8fd4\u56de\u7684\u662fdice\u8ddd\u79bb +\u3000\u4e8c\u503c\u5316\u4ea4\u53c9\u71b5\u635f\u5931", "\n", "return", "torch", ".", "clamp", "(", "(", "1", "-", "dice", ")", ".", "mean", "(", ")", ",", "0", ",", "1", ")", "+", "self", ".", "bce_loss", "(", "pred", ",", "target", ")", "*", "self", ".", "bce_weight", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.BCE.BCELoss.__init__": [[11, 15], ["torch.Module.__init__", "torch.BCELoss"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bce_loss", "=", "nn", ".", "BCELoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.BCE.BCELoss.forward": [[16, 21], ["pred.squeeze.squeeze.squeeze", "BCE.BCELoss.bce_loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "\n", "        ", "pred", "=", "pred", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "return", "self", ".", "bce_loss", "(", "pred", ",", "target", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.Dice.DiceLoss.__init__": [[12, 14], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.loss.Dice.DiceLoss.forward": [[15, 27], ["pred.squeeze.squeeze.squeeze", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "pred.squeeze.squeeze.pow().sum().sum().sum", "target.pow().sum().sum().sum", "pred.squeeze.squeeze.pow().sum().sum", "target.pow().sum().sum", "pred.squeeze.squeeze.pow().sum", "target.pow().sum", "pred.squeeze.squeeze.pow", "target.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ")", ":", "\n", "\n", "        ", "pred", "=", "pred", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "smooth", "=", "1", "\n", "\n", "# dice\u7cfb\u6570\u7684\u5b9a\u4e49", "\n", "dice", "=", "2", "*", "(", "pred", "*", "target", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "/", "(", "pred", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "\n", "target", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "sum", "(", "dim", "=", "1", ")", "+", "smooth", ")", "\n", "\n", "# \u8fd4\u56de\u7684\u662fdice\u8ddd\u79bb", "\n", "return", "torch", ".", "clamp", "(", "(", "1", "-", "dice", ")", ".", "mean", "(", ")", ",", "0", ",", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.autoencoder.__init__": [[17, 34], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Softmax", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "autoencoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 10, 10", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 3, 3", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "encoder4", "=", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "encoder5", "=", "nn", ".", "Conv2d", "(", "512", ",", "1024", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv2d", "(", "1024", ",", "512", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "# b, 16, 5, 5", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", "# b, 8, 15, 1", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 1, 28, 28", "\n", "self", ".", "decoder4", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "decoder5", "=", "nn", ".", "Conv2d", "(", "64", ",", "2", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.autoencoder.forward": [[35, 49], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.autoencoder.encoder1", "ae.autoencoder.encoder2", "ae.autoencoder.encoder3", "ae.autoencoder.decoder3", "ae.autoencoder.decoder4", "ae.autoencoder.decoder5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder1", "(", "x", ")", ",", "2", ",", "2", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder2", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder3", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder4", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder5", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "# print(out.shape)", "\n", "# out = self.soft(out)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.unet.__init__": [[51, 67], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Softmax", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "unet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 10, 10", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 3, 3", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "encoder4", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "encoder5", "=", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 5, 5", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 15, 1", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 1, 28, 28", "\n", "self", ".", "decoder4", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "decoder5", "=", "nn", ".", "Conv2d", "(", "32", ",", "2", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.unet.forward": [[68, 95], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.unet.encoder1", "ae.unet.encoder2", "ae.unet.encoder3", "ae.unet.encoder4", "ae.unet.encoder5", "ae.unet.decoder1", "ae.unet.decoder2", "ae.unet.decoder3", "ae.unet.decoder4", "ae.unet.decoder5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder1", "(", "x", ")", ",", "2", ",", "2", ")", ")", "\n", "t1", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder2", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t2", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t3", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder4", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "t4", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder5", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "\n", "# t2 = out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder1", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "# print(out.shape,t4.shape)", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t4", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder2", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t3", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder3", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t2", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder4", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t1", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder5", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "# print(out.shape)", "\n", "\n", "# out = self.soft(out)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.kinetwithsk.__init__": [[97, 123], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Softmax", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "kinetwithsk", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv2d", "(", "1", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 10, 10", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 3, 3", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "# self.encoder4=   nn.Conv2d(128, 256, 3, stride=1, padding=1)", "\n", "# self.encoder5=   nn.Conv2d(256, 512, 3, stride=1, padding=1)", "\n", "\n", "# self.decoder1 = nn.Conv2d(512, 256, 3, stride=1,padding=2)  # b, 16, 5, 5", "\n", "# self.decoder2 =   nn.Conv2d(256, 128, 3, stride=1, padding=2)  # b, 8, 15, 1", "\n", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 1, 28, 28", "\n", "self", ".", "decoder4", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "decoder5", "=", "nn", ".", "Conv2d", "(", "32", ",", "2", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "# self.decoderf1 =   nn.Conv2d(128, 64, 3, stride=1, padding=1)", "\n", "# self.decoderf2=   nn.Conv2d(64, 32, 3, stride=1, padding=1)", "\n", "# self.decoderf3 =   nn.Conv2d(32, 2, 3, stride=1, padding=1)", "\n", "\n", "# self.encoderf1 =   nn.Conv2d(16, 32, 3, stride=1, padding=1)", "\n", "# self.encoderf2=   nn.Conv2d(32, 64, 3, stride=1, padding=1)", "\n", "# self.encoderf3 =   nn.Conv2d(64, 128, 3, stride=1, padding=1)", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.kinetwithsk.forward": [[124, 141], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "ae.kinetwithsk.encoder1", "ae.kinetwithsk.encoder2", "ae.kinetwithsk.encoder3", "ae.kinetwithsk.decoder3", "ae.kinetwithsk.decoder4", "ae.kinetwithsk.decoder5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "encoder1", "(", "x", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "t1", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "encoder2", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "t2", "=", "out", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "encoder3", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "# print(out.shape)", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "decoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t2", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "decoder4", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "t1", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "decoder5", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "\n", "# out = self.soft(out)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.kitenet.__init__": [[144, 162], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Softmax", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "kitenet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv2d", "(", "1", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 16, 10, 10", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 3, 3", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "# self.encoder4=   nn.Conv2d(128, 256, 3, stride=1, padding=1)", "\n", "# self.encoder5=   nn.Conv2d(256, 512, 3, stride=1, padding=1)", "\n", "\n", "# self.decoder1 = nn.Conv2d(512, 256, 3, stride=1,padding=2)  # b, 16, 5, 5", "\n", "# self.decoder2 =   nn.Conv2d(256, 128, 3, stride=1, padding=2)  # b, 8, 15, 1", "\n", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 1, 28, 28", "\n", "self", ".", "decoder4", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "decoder5", "=", "nn", ".", "Conv2d", "(", "32", ",", "2", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.kitenet.forward": [[163, 177], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "ae.kitenet.encoder1", "ae.kitenet.encoder2", "ae.kitenet.encoder3", "ae.kitenet.decoder3", "ae.kitenet.decoder4", "ae.kitenet.decoder5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "\n", "        ", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "encoder1", "(", "x", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "encoder2", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "encoder3", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "decoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "decoder4", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool2d", "(", "self", ".", "decoder5", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "\n", "# out = self.soft(out)", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.kiunet.__init__": [[180, 243], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Softmax", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "kiunet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# First Layer GrayScale Image , change to input channels to 3 in case of RGB ", "\n", "self", ".", "en1_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "en2_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "en3_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "de1_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv2d", "(", "32", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "de2_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv2d", "(", "16", ",", "8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "de3_bn", "=", "nn", ".", "BatchNorm2d", "(", "8", ")", "\n", "\n", "self", ".", "decoderf1", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def1_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "decoderf2", "=", "nn", ".", "Conv2d", "(", "32", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def2_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "decoderf3", "=", "nn", ".", "Conv2d", "(", "16", ",", "8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def3_bn", "=", "nn", ".", "BatchNorm2d", "(", "8", ")", "\n", "\n", "self", ".", "encoderf1", "=", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# First Layer GrayScale Image , change to input channels to 3 in case of RGB ", "\n", "self", ".", "enf1_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "encoderf2", "=", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "enf2_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "encoderf3", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "enf3_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "intere1_1", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte1_1bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "intere2_1", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte2_1bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "intere3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte3_1bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "intere1_2", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte1_2bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "intere2_2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte2_2bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "intere3_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte3_2bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "interd1_1", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd1_1bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "interd2_1", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd2_1bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "interd3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd3_1bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "interd1_2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd1_2bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "interd2_2", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd2_2bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "interd3_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd3_2bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "final", "=", "nn", ".", "Conv2d", "(", "8", ",", "2", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.kiunet.forward": [[244, 305], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "ae.kiunet.en1_bn", "ae.kiunet.enf1_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.kiunet.en2_bn", "ae.kiunet.enf2_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.kiunet.en3_bn", "ae.kiunet.enf3_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.kiunet.de1_bn", "ae.kiunet.def1_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.kiunet.de2_bn", "ae.kiunet.def2_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.kiunet.de3_bn", "ae.kiunet.def3_bn", "ae.kiunet.final", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "ae.kiunet.encoder1", "ae.kiunet.encoderf1", "ae.kiunet.inte1_1bn", "ae.kiunet.inte1_2bn", "ae.kiunet.encoder2", "ae.kiunet.encoderf2", "ae.kiunet.inte2_1bn", "ae.kiunet.inte2_2bn", "ae.kiunet.encoder3", "ae.kiunet.encoderf3", "ae.kiunet.inte3_1bn", "ae.kiunet.inte3_2bn", "ae.kiunet.decoder1", "ae.kiunet.decoderf1", "ae.kiunet.intd1_1bn", "ae.kiunet.intd1_2bn", "ae.kiunet.decoder2", "ae.kiunet.decoderf2", "ae.kiunet.intd2_1bn", "ae.kiunet.intd2_2bn", "ae.kiunet.decoder3", "ae.kiunet.decoderf3", "ae.kiunet.intere1_1", "ae.kiunet.intere1_2", "ae.kiunet.intere2_1", "ae.kiunet.intere2_2", "ae.kiunet.intere3_1", "ae.kiunet.intere3_2", "ae.kiunet.interd1_1", "ae.kiunet.interd1_2", "ae.kiunet.interd2_1", "ae.kiunet.interd2_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "en1_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder1", "(", "x", ")", ",", "2", ",", "2", ")", ")", ")", "#U-Net branch", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf1_bn", "(", "F", ".", "interpolate", "(", "self", ".", "encoderf1", "(", "x", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "#Ki-Net branch", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte1_1bn", "(", "self", ".", "intere1_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.25", ",", "0.25", ")", ",", "mode", "=", "'bilinear'", ")", ")", "#CRFB", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte1_2bn", "(", "self", ".", "intere1_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "4", ",", "4", ")", ",", "mode", "=", "'bilinear'", ")", ")", "#CRFB", "\n", "\n", "u1", "=", "out", "#skip conn", "\n", "o1", "=", "out1", "#skip conn", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "en2_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder2", "(", "out", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf2_bn", "(", "F", ".", "interpolate", "(", "self", ".", "encoderf2", "(", "out1", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte2_1bn", "(", "self", ".", "intere2_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.0625", ",", "0.0625", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte2_2bn", "(", "self", ".", "intere2_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "16", ",", "16", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "u2", "=", "out", "\n", "o2", "=", "out1", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "en3_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "encoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf3_bn", "(", "F", ".", "interpolate", "(", "self", ".", "encoderf3", "(", "out1", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte3_1bn", "(", "self", ".", "intere3_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.015625", ",", "0.015625", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte3_2bn", "(", "self", ".", "intere3_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "64", ",", "64", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "### End of encoder block", "\n", "\n", "### Start Decoder", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de1_bn", "(", "F", ".", "interpolate", "(", "self", ".", "decoder1", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "#U-NET", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def1_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "decoderf1", "(", "out1", ")", ",", "2", ",", "2", ")", ")", ")", "#Ki-NET", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd1_1bn", "(", "self", ".", "interd1_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.0625", ",", "0.0625", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd1_2bn", "(", "self", ".", "interd1_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "16", ",", "16", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u2", ")", "#skip conn", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o2", ")", "#skip conn", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de2_bn", "(", "F", ".", "interpolate", "(", "self", ".", "decoder2", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def2_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "decoderf2", "(", "out1", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd2_1bn", "(", "self", ".", "interd2_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.25", ",", "0.25", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd2_2bn", "(", "self", ".", "interd2_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "4", ",", "4", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u1", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o1", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de3_bn", "(", "F", ".", "interpolate", "(", "self", ".", "decoder3", "(", "out", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def3_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "decoderf3", "(", "out1", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "\n", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "out1", ")", "# fusion of both branches", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "final", "(", "out", ")", ")", "#1*1 conv", "\n", "\n", "\n", "# out = self.soft(out)", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.reskiunet.__init__": [[308, 383], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Softmax", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "reskiunet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "en1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "# b, 16, 10, 10", "\n", "self", ".", "en1_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 3, 3", "\n", "self", ".", "en2", "=", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "en2_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "en3", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "en3_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 1, 28, 28", "\n", "self", ".", "de1", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "de1_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv2d", "(", "32", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "de2", "=", "nn", ".", "Conv2d", "(", "32", ",", "16", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "de2_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv2d", "(", "16", ",", "8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "de3", "=", "nn", ".", "Conv2d", "(", "16", ",", "8", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "de3_bn", "=", "nn", ".", "BatchNorm2d", "(", "8", ")", "\n", "\n", "self", ".", "decoderf1", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def1", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "def1_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "decoderf2", "=", "nn", ".", "Conv2d", "(", "32", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def2", "=", "nn", ".", "Conv2d", "(", "32", ",", "16", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "def2_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "decoderf3", "=", "nn", ".", "Conv2d", "(", "16", ",", "8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def3", "=", "nn", ".", "Conv2d", "(", "16", ",", "8", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "def3_bn", "=", "nn", ".", "BatchNorm2d", "(", "8", ")", "\n", "\n", "self", ".", "encoderf1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "enf1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "enf1_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "encoderf2", "=", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "enf2", "=", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "enf2_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "encoderf3", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "enf3", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "enf3_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "intere1_1", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte1_1bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "intere2_1", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte2_1bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "intere3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte3_1bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "intere1_2", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte1_2bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "intere2_2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte2_2bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "intere3_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte3_2bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "interd1_1", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd1_1bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "interd2_1", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd2_1bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "interd3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd3_1bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "interd1_2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd1_2bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "interd2_2", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd2_2bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "interd3_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd3_2bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "final", "=", "nn", ".", "Conv2d", "(", "8", ",", "2", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.reskiunet.forward": [[384, 467], ["torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "ae.reskiunet.en1", "ae.reskiunet.encoder1", "ae.reskiunet.en1_bn", "ae.reskiunet.enf1", "ae.reskiunet.encoder1", "ae.reskiunet.enf1_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.reskiunet.en2", "ae.reskiunet.encoder2", "ae.reskiunet.enf2", "ae.reskiunet.encoderf2", "ae.reskiunet.en2_bn", "ae.reskiunet.enf2_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.reskiunet.en3", "ae.reskiunet.encoder3", "ae.reskiunet.enf3", "ae.reskiunet.encoderf3", "ae.reskiunet.en3_bn", "ae.reskiunet.enf3_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.reskiunet.de1", "ae.reskiunet.decoder1", "ae.reskiunet.def1", "ae.reskiunet.decoderf1", "ae.reskiunet.de1_bn", "ae.reskiunet.def1_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.reskiunet.de2", "ae.reskiunet.decoder2", "ae.reskiunet.def2", "ae.reskiunet.decoderf2", "ae.reskiunet.de2_bn", "ae.reskiunet.def2_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.reskiunet.de3", "ae.reskiunet.decoder3", "ae.reskiunet.def3", "ae.reskiunet.decoderf3", "ae.reskiunet.de3_bn", "ae.reskiunet.def3_bn", "ae.reskiunet.final", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "ae.reskiunet.encoderf1", "ae.reskiunet.inte1_1bn", "ae.reskiunet.inte1_2bn", "ae.reskiunet.inte2_1bn", "ae.reskiunet.inte2_2bn", "ae.reskiunet.inte3_1bn", "ae.reskiunet.inte3_2bn", "ae.reskiunet.intd1_1bn", "ae.reskiunet.intd1_2bn", "ae.reskiunet.intd2_1bn", "ae.reskiunet.intd2_2bn", "ae.reskiunet.intere1_1", "ae.reskiunet.intere1_2", "ae.reskiunet.intere2_1", "ae.reskiunet.intere2_2", "ae.reskiunet.intere3_1", "ae.reskiunet.intere3_2", "ae.reskiunet.interd1_1", "ae.reskiunet.interd1_2", "ae.reskiunet.interd2_1", "ae.reskiunet.interd2_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "torch", ".", "add", "(", "self", ".", "en1", "(", "x", ")", ",", "self", ".", "encoder1", "(", "x", ")", ")", "#init", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "en1_bn", "(", "F", ".", "max_pool2d", "(", "out", ",", "2", ",", "2", ")", ")", ")", "# U-Net", "\n", "out1", "=", "torch", ".", "add", "(", "self", ".", "enf1", "(", "x", ")", ",", "self", ".", "encoder1", "(", "x", ")", ")", "#init", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf1_bn", "(", "F", ".", "interpolate", "(", "self", ".", "encoderf1", "(", "x", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "# ki-net", "\n", "\n", "tmp", "=", "out", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte1_1bn", "(", "self", ".", "intere1_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.25", ",", "0.25", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte1_2bn", "(", "self", ".", "intere1_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "4", ",", "4", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "u1", "=", "out", "\n", "o1", "=", "out1", "\n", "\n", "\n", "out", "=", "torch", ".", "add", "(", "self", ".", "en2", "(", "out", ")", ",", "self", ".", "encoder2", "(", "out", ")", ")", "#res", "\n", "out1", "=", "torch", ".", "add", "(", "self", ".", "enf2", "(", "out1", ")", ",", "self", ".", "encoderf2", "(", "out1", ")", ")", "#res", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "en2_bn", "(", "F", ".", "max_pool2d", "(", "out", ",", "2", ",", "2", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf2_bn", "(", "F", ".", "interpolate", "(", "out1", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte2_1bn", "(", "self", ".", "intere2_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.0625", ",", "0.0625", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte2_2bn", "(", "self", ".", "intere2_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "16", ",", "16", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "u2", "=", "out", "\n", "o2", "=", "out1", "\n", "\n", "out", "=", "torch", ".", "add", "(", "self", ".", "en3", "(", "out", ")", ",", "self", ".", "encoder3", "(", "out", ")", ")", "#res", "\n", "out1", "=", "torch", ".", "add", "(", "self", ".", "enf3", "(", "out1", ")", ",", "self", ".", "encoderf3", "(", "out1", ")", ")", "#res", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "en3_bn", "(", "F", ".", "max_pool2d", "(", "out", ",", "2", ",", "2", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf3_bn", "(", "F", ".", "interpolate", "(", "out1", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte3_1bn", "(", "self", ".", "intere3_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.015625", ",", "0.015625", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte3_2bn", "(", "self", ".", "intere3_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "64", ",", "64", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "### End of encoder block", "\n", "\n", "# print(out.shape,out1.shape)", "\n", "\n", "out", "=", "torch", ".", "add", "(", "self", ".", "de1", "(", "out", ")", ",", "self", ".", "decoder1", "(", "out", ")", ")", "#res", "\n", "out1", "=", "torch", ".", "add", "(", "self", ".", "def1", "(", "out1", ")", ",", "self", ".", "decoderf1", "(", "out1", ")", ")", "#res", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de1_bn", "(", "F", ".", "interpolate", "(", "out", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def1_bn", "(", "F", ".", "max_pool2d", "(", "out1", ",", "2", ",", "2", ")", ")", ")", "\n", "\n", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd1_1bn", "(", "self", ".", "interd1_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.0625", ",", "0.0625", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd1_2bn", "(", "self", ".", "interd1_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "16", ",", "16", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u2", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o2", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "self", ".", "de2", "(", "out", ")", ",", "self", ".", "decoder2", "(", "out", ")", ")", "#res", "\n", "out1", "=", "torch", ".", "add", "(", "self", ".", "def2", "(", "out1", ")", ",", "self", ".", "decoderf2", "(", "out1", ")", ")", "#res", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de2_bn", "(", "F", ".", "interpolate", "(", "out", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def2_bn", "(", "F", ".", "max_pool2d", "(", "out1", ",", "2", ",", "2", ")", ")", ")", "\n", "\n", "tmp", "=", "out", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd2_1bn", "(", "self", ".", "interd2_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.25", ",", "0.25", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd2_2bn", "(", "self", ".", "interd2_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "4", ",", "4", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u1", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o1", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "self", ".", "de3", "(", "out", ")", ",", "self", ".", "decoder3", "(", "out", ")", ")", "#res", "\n", "out1", "=", "torch", ".", "add", "(", "self", ".", "def3", "(", "out1", ")", ",", "self", ".", "decoderf3", "(", "out1", ")", ")", "#res", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de3_bn", "(", "F", ".", "interpolate", "(", "out", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def3_bn", "(", "F", ".", "max_pool2d", "(", "out1", ",", "2", ",", "2", ")", ")", ")", "\n", "\n", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "out1", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "final", "(", "out", ")", ")", "\n", "\n", "\n", "# out = self.soft(out)", "\n", "# print(out.shape)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.DenseBlock.__init__": [[470, 485], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ")", ":", "\n", "        ", "super", "(", "DenseBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# print(int(in_planes/4))", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "in_planes", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "c2", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "int", "(", "in_planes", "/", "4", ")", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "b1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "b2", "=", "nn", ".", "BatchNorm2d", "(", "int", "(", "in_planes", "/", "4", ")", ")", "\n", "self", ".", "c3", "=", "nn", ".", "Conv2d", "(", "in_planes", "+", "int", "(", "in_planes", "/", "4", ")", ",", "in_planes", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "int", "(", "in_planes", "/", "4", ")", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "c5", "=", "nn", ".", "Conv2d", "(", "in_planes", "+", "int", "(", "in_planes", "/", "2", ")", ",", "in_planes", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "c6", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "int", "(", "in_planes", "/", "4", ")", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "c7", "=", "nn", ".", "Conv2d", "(", "in_planes", "+", "3", "*", "int", "(", "in_planes", "/", "4", ")", ",", "in_planes", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "c8", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "int", "(", "in_planes", "/", "4", ")", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.DenseBlock.forward": [[486, 509], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.add", "torch.add", "torch.add", "torch.add", "ae.DenseBlock.b1", "ae.DenseBlock.b2", "ae.DenseBlock.b1", "ae.DenseBlock.b2", "ae.DenseBlock.b1", "ae.DenseBlock.b2", "ae.DenseBlock.b1", "ae.DenseBlock.b2", "ae.DenseBlock.c1", "ae.DenseBlock.c2", "ae.DenseBlock.c3", "ae.DenseBlock.c4", "ae.DenseBlock.c5", "ae.DenseBlock.c6", "ae.DenseBlock.c7", "ae.DenseBlock.c8"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "org", "=", "x", "\n", "# print(x.shape)", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "b1", "(", "self", ".", "c1", "(", "x", ")", ")", ")", "\n", "# print(x.shape)", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "b2", "(", "self", ".", "c2", "(", "x", ")", ")", ")", "\n", "d1", "=", "x", "\n", "# print(x.shape)", "\n", "x", "=", "torch", ".", "cat", "(", "(", "org", ",", "d1", ")", ",", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "b1", "(", "self", ".", "c3", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "b2", "(", "self", ".", "c4", "(", "x", ")", ")", ")", "\n", "d2", "=", "x", "\n", "x", "=", "torch", ".", "cat", "(", "(", "org", ",", "d1", ",", "d2", ")", ",", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "b1", "(", "self", ".", "c5", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "b2", "(", "self", ".", "c6", "(", "x", ")", ")", ")", "\n", "d3", "=", "x", "\n", "x", "=", "torch", ".", "cat", "(", "(", "org", ",", "d1", ",", "d2", ",", "d3", ")", ",", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "b1", "(", "self", ".", "c7", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "b2", "(", "self", ".", "c8", "(", "x", ")", ")", ")", "\n", "d4", "=", "x", "\n", "x", "=", "torch", ".", "cat", "(", "(", "d1", ",", "d2", ",", "d3", ",", "d4", ")", ",", "1", ")", "\n", "x", "=", "torch", ".", "add", "(", "org", ",", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.densekiunet.__init__": [[513, 588], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "ae.DenseBlock", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Softmax", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "densekiunet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "en1", "=", "DenseBlock", "(", "in_planes", "=", "16", ")", "# b, 16, 10, 10", "\n", "self", ".", "en1_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 8, 3, 3", "\n", "self", ".", "en2", "=", "DenseBlock", "(", "in_planes", "=", "32", ")", "\n", "self", ".", "en2_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "en3", "=", "DenseBlock", "(", "in_planes", "=", "64", ")", "\n", "self", ".", "en3_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "# b, 1, 28, 28", "\n", "self", ".", "de1", "=", "DenseBlock", "(", "in_planes", "=", "32", ")", "\n", "self", ".", "de1_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv2d", "(", "32", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "de2", "=", "DenseBlock", "(", "in_planes", "=", "16", ")", "\n", "self", ".", "de2_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv2d", "(", "16", ",", "8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "de3", "=", "DenseBlock", "(", "in_planes", "=", "8", ")", "\n", "self", ".", "de3_bn", "=", "nn", ".", "BatchNorm2d", "(", "8", ")", "\n", "\n", "self", ".", "decoderf1", "=", "nn", ".", "Conv2d", "(", "64", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def1", "=", "DenseBlock", "(", "in_planes", "=", "32", ")", "\n", "self", ".", "def1_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "decoderf2", "=", "nn", ".", "Conv2d", "(", "32", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def2", "=", "DenseBlock", "(", "in_planes", "=", "16", ")", "\n", "self", ".", "def2_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "decoderf3", "=", "nn", ".", "Conv2d", "(", "16", ",", "8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "def3", "=", "DenseBlock", "(", "in_planes", "=", "8", ")", "\n", "self", ".", "def3_bn", "=", "nn", ".", "BatchNorm2d", "(", "8", ")", "\n", "\n", "self", ".", "encoderf1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "enf1", "=", "DenseBlock", "(", "in_planes", "=", "16", ")", "\n", "self", ".", "enf1_bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "encoderf2", "=", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "enf2", "=", "DenseBlock", "(", "in_planes", "=", "32", ")", "\n", "self", ".", "enf2_bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "encoderf3", "=", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "enf3", "=", "DenseBlock", "(", "in_planes", "=", "64", ")", "\n", "self", ".", "enf3_bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "intere1_1", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte1_1bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "intere2_1", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte2_1bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "intere3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte3_1bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "intere1_2", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte1_2bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "intere2_2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte2_2bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "intere3_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "inte3_2bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "interd1_1", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd1_1bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "interd2_1", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd2_1bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "interd3_1", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd3_1bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "interd1_2", "=", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd1_2bn", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "interd2_2", "=", "nn", ".", "Conv2d", "(", "16", ",", "16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd2_2bn", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "interd3_2", "=", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "intd3_2bn", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "self", ".", "final", "=", "nn", ".", "Conv2d", "(", "8", ",", "2", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n", "self", ".", "soft", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.densekiunet.forward": [[589, 650], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "ae.densekiunet.en1_bn", "ae.densekiunet.enf1_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.densekiunet.en2_bn", "ae.densekiunet.enf2_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.densekiunet.en3_bn", "ae.densekiunet.enf3_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.densekiunet.de1_bn", "ae.densekiunet.def1_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.densekiunet.de2_bn", "ae.densekiunet.def2_bn", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "ae.densekiunet.de3_bn", "ae.densekiunet.def3_bn", "ae.densekiunet.final", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool2d", "torch.max_pool2d", "torch.interpolate", "torch.interpolate", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.interpolate", "torch.interpolate", "torch.max_pool2d", "torch.max_pool2d", "ae.densekiunet.en1", "ae.densekiunet.enf1", "ae.densekiunet.inte1_1bn", "ae.densekiunet.inte1_2bn", "ae.densekiunet.en2", "ae.densekiunet.enf2", "ae.densekiunet.inte2_1bn", "ae.densekiunet.inte2_2bn", "ae.densekiunet.en3", "ae.densekiunet.enf3", "ae.densekiunet.inte3_1bn", "ae.densekiunet.inte3_2bn", "ae.densekiunet.de1", "ae.densekiunet.def1", "ae.densekiunet.intd1_1bn", "ae.densekiunet.intd1_2bn", "ae.densekiunet.de2", "ae.densekiunet.def2", "ae.densekiunet.intd2_1bn", "ae.densekiunet.intd2_2bn", "ae.densekiunet.de3", "ae.densekiunet.def3", "ae.densekiunet.encoder1", "ae.densekiunet.encoderf1", "ae.densekiunet.intere1_1", "ae.densekiunet.intere1_2", "ae.densekiunet.encoder2", "ae.densekiunet.encoderf2", "ae.densekiunet.intere2_1", "ae.densekiunet.intere2_2", "ae.densekiunet.encoder3", "ae.densekiunet.encoderf3", "ae.densekiunet.intere3_1", "ae.densekiunet.intere3_2", "ae.densekiunet.decoder1", "ae.densekiunet.decoderf1", "ae.densekiunet.interd1_1", "ae.densekiunet.interd1_2", "ae.densekiunet.decoder2", "ae.densekiunet.decoderf2", "ae.densekiunet.interd2_1", "ae.densekiunet.interd2_2", "ae.densekiunet.decoder3", "ae.densekiunet.decoderf3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "en1_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "en1", "(", "self", ".", "encoder1", "(", "x", ")", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf1_bn", "(", "F", ".", "interpolate", "(", "self", ".", "enf1", "(", "self", ".", "encoderf1", "(", "x", ")", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte1_1bn", "(", "self", ".", "intere1_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.25", ",", "0.25", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte1_2bn", "(", "self", ".", "intere1_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "4", ",", "4", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "u1", "=", "out", "\n", "o1", "=", "out1", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "en2_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "en2", "(", "self", ".", "encoder2", "(", "out", ")", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf2_bn", "(", "F", ".", "interpolate", "(", "self", ".", "enf2", "(", "self", ".", "encoderf2", "(", "out1", ")", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte2_1bn", "(", "self", ".", "intere2_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.0625", ",", "0.0625", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte2_2bn", "(", "self", ".", "intere2_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "16", ",", "16", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "u2", "=", "out", "\n", "o2", "=", "out1", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "en3_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "en3", "(", "self", ".", "encoder3", "(", "out", ")", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "enf3_bn", "(", "F", ".", "interpolate", "(", "self", ".", "enf3", "(", "self", ".", "encoderf3", "(", "out1", ")", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte3_1bn", "(", "self", ".", "intere3_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.015625", ",", "0.015625", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "inte3_2bn", "(", "self", ".", "intere3_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "64", ",", "64", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "### End of encoder block", "\n", "\n", "# print(out.shape,out1.shape)", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de1_bn", "(", "F", ".", "interpolate", "(", "self", ".", "de1", "(", "self", ".", "decoder1", "(", "out", ")", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def1_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "def1", "(", "self", ".", "decoderf1", "(", "out1", ")", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd1_1bn", "(", "self", ".", "interd1_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.0625", ",", "0.0625", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd1_2bn", "(", "self", ".", "interd1_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "16", ",", "16", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u2", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o2", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de2_bn", "(", "F", ".", "interpolate", "(", "self", ".", "de2", "(", "self", ".", "decoder2", "(", "out", ")", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def2_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "def2", "(", "self", ".", "decoderf2", "(", "out1", ")", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd2_1bn", "(", "self", ".", "interd2_1", "(", "out1", ")", ")", ")", ",", "scale_factor", "=", "(", "0.25", ",", "0.25", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intd2_2bn", "(", "self", ".", "interd2_2", "(", "tmp", ")", ")", ")", ",", "scale_factor", "=", "(", "4", ",", "4", ")", ",", "mode", "=", "'bilinear'", ")", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u1", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o1", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "de3_bn", "(", "F", ".", "interpolate", "(", "self", ".", "de3", "(", "self", ".", "decoder3", "(", "out", ")", ")", ",", "scale_factor", "=", "(", "2", ",", "2", ")", ",", "mode", "=", "'bilinear'", ")", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "self", ".", "def3_bn", "(", "F", ".", "max_pool2d", "(", "self", ".", "def3", "(", "self", ".", "decoderf3", "(", "out1", ")", ")", ",", "2", ",", "2", ")", ")", ")", "\n", "\n", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "out1", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "final", "(", "out", ")", ")", "\n", "\n", "\n", "# out = self.soft(out)", "\n", "# print(out.shape)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.kiunet3d.__init__": [[653, 726], ["torch.nn.Module.__init__", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.MaxPool3d", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Upsample", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Softmax", "torch.nn.Softmax", "ae.kiunet3d.modules", "isinstance", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "isinstance", "isinstance", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", "=", "4", ",", "n", "=", "1", ",", "channels", "=", "128", ",", "groups", "=", "16", ",", "norm", "=", "'bn'", ",", "num_classes", "=", "5", ")", ":", "\n", "        ", "super", "(", "kiunet3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Entry flow", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv3d", "(", "c", ",", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "# H//2", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv3d", "(", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "4", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "kencoder1", "=", "nn", ".", "Conv3d", "(", "c", ",", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "kencoder2", "=", "nn", ".", "Conv3d", "(", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "kencoder3", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "downsample1", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "downsample2", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "downsample3", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "kdownsample1", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "kdownsample2", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "kdownsample3", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "\n", "\n", "self", ".", "upsample1", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//8        ", "\n", "self", ".", "upsample2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//4", "\n", "self", ".", "upsample3", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//2", "\n", "self", ".", "kupsample1", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//8        ", "\n", "self", ".", "kupsample2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//4", "\n", "self", ".", "kupsample3", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//2", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv3d", "(", "4", "*", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "c", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "kdecoder1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "kdecoder2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "kdecoder3", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "c", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "intere1_1", "=", "nn", ".", "Conv3d", "(", "n", ",", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte1_1bn = nn.BatchNorm2d(16)", "\n", "self", ".", "intere2_1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte2_1bn = nn.BatchNorm2d(32)", "\n", "self", ".", "intere3_1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "4", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte3_1bn = nn.BatchNorm2d(64)", "\n", "\n", "self", ".", "intere1_2", "=", "nn", ".", "Conv3d", "(", "n", ",", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte1_2bn = nn.BatchNorm2d(16)", "\n", "self", ".", "intere2_2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte2_2bn = nn.BatchNorm2d(32)", "\n", "self", ".", "intere3_2", "=", "nn", ".", "Conv3d", "(", "4", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte3_2bn = nn.BatchNorm2d(64)", "\n", "\n", "self", ".", "interd1_1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd1_1bn = nn.BatchNorm2d(32)", "\n", "self", ".", "interd2_1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd2_1bn = nn.BatchNorm2d(16)", "\n", "self", ".", "interd3_1", "=", "nn", ".", "Conv3d", "(", "n", ",", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd3_1bn = nn.BatchNorm2d(64)", "\n", "\n", "self", ".", "interd1_2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd1_2bn = nn.BatchNorm2d(32)", "\n", "self", ".", "interd2_2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd2_2bn = nn.BatchNorm2d(16)", "\n", "self", ".", "interd3_2", "=", "nn", ".", "Conv3d", "(", "n", ",", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd3_2bn = nn.BatchNorm2d(64)", "\n", "\n", "self", ".", "seg", "=", "nn", ".", "Conv3d", "(", "c", ",", "num_classes", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n", "# Initialization", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "#", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "GroupNorm", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.arch.ae.kiunet3d.forward": [[727, 787], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "ae.kiunet3d.seg", "ae.kiunet3d.encoder1", "ae.kiunet3d.kencoder1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "ae.kiunet3d.encoder2", "ae.kiunet3d.kencoder2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "ae.kiunet3d.encoder3", "ae.kiunet3d.kencoder3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "ae.kiunet3d.decoder1", "ae.kiunet3d.kdecoder1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "ae.kiunet3d.decoder2", "ae.kiunet3d.kdecoder2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "ae.kiunet3d.decoder3", "ae.kiunet3d.kdecoder3", "ae.kiunet3d.intere1_1", "ae.kiunet3d.intere1_2", "ae.kiunet3d.intere2_1", "ae.kiunet3d.intere2_2", "ae.kiunet3d.intere3_1", "ae.kiunet3d.intere3_2", "ae.kiunet3d.interd1_1", "ae.kiunet3d.interd1_2", "ae.kiunet3d.interd2_1", "ae.kiunet3d.interd2_2"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# Encoder", "\n", "        ", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder1", "(", "x", ")", ",", "2", ",", "2", ")", ")", "#U-Net branch", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "kencoder1", "(", "x", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "#Ki-Net branch", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere1_1", "(", "out1", ")", ")", ",", "scale_factor", "=", "0.25", ",", "mode", "=", "'trilinear'", ")", ")", "#CRFB", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere1_2", "(", "tmp", ")", ")", ",", "scale_factor", "=", "4", ",", "mode", "=", "'trilinear'", ")", ")", "#CRFB", "\n", "\n", "u1", "=", "out", "#skip conn", "\n", "o1", "=", "out1", "#skip conn", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder2", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "kencoder2", "(", "out1", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere2_1", "(", "out1", ")", ")", ",", "scale_factor", "=", "0.0625", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere2_2", "(", "tmp", ")", ")", ",", "scale_factor", "=", "16", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "u2", "=", "out", "\n", "o2", "=", "out1", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "kencoder3", "(", "out1", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere3_1", "(", "out1", ")", ")", ",", "scale_factor", "=", "0.015625", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere3_2", "(", "tmp", ")", ")", ",", "scale_factor", "=", "64", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "### End of encoder block", "\n", "\n", "### Start Decoder", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder1", "(", "out", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "#U-NET", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "kdecoder1", "(", "out1", ")", ",", "2", ",", "2", ")", ")", "#Ki-NET", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "interd1_1", "(", "out1", ")", ")", ",", "scale_factor", "=", "0.0625", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "interd1_2", "(", "tmp", ")", ")", ",", "scale_factor", "=", "16", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u2", ")", "#skip conn", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o2", ")", "#skip conn", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder2", "(", "out", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "kdecoder2", "(", "out1", ")", ",", "2", ",", "2", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "interd2_1", "(", "out1", ")", ")", ",", "scale_factor", "=", "0.25", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "interd2_2", "(", "tmp", ")", ")", ",", "scale_factor", "=", "4", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u1", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o1", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder3", "(", "out", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "kdecoder3", "(", "out1", ")", ",", "2", ",", "2", ")", ")", "\n", "\n", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "out1", ")", "# fusion of both branches", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "seg", "(", "out", ")", ")", "#1*1 conv", "\n", "\n", "\n", "# out = self.soft(out)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.train_kiunet.main": [[49, 209], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "random.seed", "numpy.random.seed", "models.unet.kiunet", "model.cuda.cuda", "getattr", "logging.info", "getattr", "os.path.join", "getattr.", "data.sampler.CycleSampler", "torch.utils.data.DataLoader", "time.time", "int", "int", "predict_unet.AverageMeter", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "torch.set_grad_enabled", "enumerate", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "logging.info", "getattr", "model.cuda.parameters", "os.path.isfile", "str", "len", "os.path.join", "getattr.", "torch.utils.data.DataLoader", "getattr.", "torch.utils.data.DataLoader", "len", "float", "int", "train_kiunet.adjust_learning_rate", "model.cuda.", "getattr.", "predict_unet.AverageMeter.update", "optimizer.zero_grad", "criterion.backward", "optimizer.step", "logging.info", "predict_unet.AverageMeter.reset", "logging.info", "logging.info", "print", "torch.load", "torch.load", "torch.load", "torch.load", "model.cuda.load_state_dict", "optimizer.load_state_dict", "args.schedule.items", "t.cuda", "len", "data.data_utils.add_mask", "criterion.item", "target.numel", "int", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "model.cuda.state_dict", "optimizer.state_dict", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "predict_unet.validate", "len", "data.pop", "time.time", "model.cuda.state_dict", "optimizer.state_dict"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.train_kiunet.adjust_learning_rate", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.AverageMeter.update", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.AverageMeter.reset", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.add_mask", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.validate"], ["", "def", "main", "(", ")", ":", "\n", "# setup environments and seeds", "\n", "    ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "args", ".", "gpu", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "# setup networks", "\n", "# Network = getattr(models, args.net)", "\n", "# model = Network(**args.net_params)", "\n", "model", "=", "models", ".", "unet", ".", "kiunet", "(", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "optimizer", "=", "getattr", "(", "torch", ".", "optim", ",", "args", ".", "opt", ")", "(", "\n", "model", ".", "parameters", "(", ")", ",", "**", "args", ".", "opt_params", ")", "\n", "criterion", "=", "getattr", "(", "criterions", ",", "args", ".", "criterion", ")", "\n", "\n", "msg", "=", "''", "\n", "# optionally resume from a checkpoint", "\n", "if", "args", ".", "resume", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "args", ".", "resume", ")", ":", "\n", "            ", "print", "(", "\"=> loading checkpoint '{}'\"", ".", "format", "(", "args", ".", "resume", ")", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "resume", ")", "\n", "args", ".", "start_iter", "=", "checkpoint", "[", "'iter'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optim_dict'", "]", ")", "\n", "msg", "=", "(", "\"=> loaded checkpoint '{}' (iter {})\"", "\n", ".", "format", "(", "args", ".", "resume", ",", "checkpoint", "[", "'iter'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "msg", "=", "\"=> no checkpoint found at '{}'\"", ".", "format", "(", "args", ".", "resume", ")", "\n", "", "", "else", ":", "\n", "        ", "msg", "=", "'-------------- New training session ----------------'", "\n", "\n", "", "msg", "+=", "'\\n'", "+", "str", "(", "args", ")", "\n", "logging", ".", "info", "(", "msg", ")", "\n", "\n", "# Data loading code", "\n", "Dataset", "=", "getattr", "(", "datasets", ",", "args", ".", "dataset", ")", "\n", "\n", "train_list", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_dir", ",", "args", ".", "train_list", ")", "\n", "train_set", "=", "Dataset", "(", "train_list", ",", "root", "=", "args", ".", "data_dir", ",", "for_train", "=", "True", ",", "\n", "transforms", "=", "args", ".", "train_transforms", ")", "\n", "\n", "num_iters", "=", "args", ".", "num_iters", "or", "(", "len", "(", "train_set", ")", "*", "args", ".", "num_epochs", ")", "//", "args", ".", "batch_size", "\n", "num_iters", "-=", "args", ".", "start_iter", "\n", "train_sampler", "=", "CycleSampler", "(", "len", "(", "train_set", ")", ",", "num_iters", "*", "args", ".", "batch_size", ")", "\n", "train_loader", "=", "DataLoader", "(", "\n", "train_set", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "collate_fn", "=", "train_set", ".", "collate", ",", "sampler", "=", "train_sampler", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "pin_memory", "=", "True", ",", "worker_init_fn", "=", "init_fn", ")", "\n", "\n", "if", "args", ".", "valid_list", ":", "\n", "        ", "valid_list", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_dir", ",", "args", ".", "valid_list", ")", "\n", "valid_set", "=", "Dataset", "(", "valid_list", ",", "root", "=", "args", ".", "data_dir", ",", "\n", "for_train", "=", "False", ",", "transforms", "=", "args", ".", "test_transforms", ")", "\n", "\n", "valid_loader", "=", "DataLoader", "(", "\n", "valid_set", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "valid_set", ".", "collate", ",", "\n", "num_workers", "=", "4", ",", "pin_memory", "=", "True", ")", "\n", "\n", "train_valid_set", "=", "Dataset", "(", "train_list", ",", "root", "=", "args", ".", "data_dir", ",", "\n", "for_train", "=", "False", ",", "transforms", "=", "args", ".", "test_transforms", ")", "\n", "\n", "train_valid_loader", "=", "DataLoader", "(", "\n", "train_valid_set", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "train_valid_set", ".", "collate", ",", "\n", "num_workers", "=", "4", ",", "pin_memory", "=", "True", ")", "\n", "\n", "\n", "", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "enum_batches", "=", "len", "(", "train_set", ")", "/", "float", "(", "args", ".", "batch_size", ")", "\n", "args", ".", "schedule", "=", "{", "int", "(", "k", "*", "enum_batches", ")", ":", "v", "for", "k", ",", "v", "in", "args", ".", "schedule", ".", "items", "(", ")", "}", "\n", "args", ".", "save_freq", "=", "int", "(", "enum_batches", "*", "args", ".", "save_freq", ")", "\n", "args", ".", "valid_freq", "=", "int", "(", "enum_batches", "*", "args", ".", "valid_freq", ")", "\n", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "torch", ".", "set_grad_enabled", "(", "True", ")", "\n", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "train_loader", ",", "args", ".", "start_iter", ")", ":", "\n", "## validation", "\n", "#if args.valid_list and  (i % args.valid_freq) == 0:", "\n", "#    logging.info('-'*50)", "\n", "#    msg  =  'Iter {}, Epoch {:.4f}, {}'.format(i, i/enum_batches, 'validation')", "\n", "#    logging.info(msg)", "\n", "#    with torch.no_grad():", "\n", "#        validate(valid_loader, model, names=valid_set.names)", "\n", "\n", "# actual training", "\n", "        ", "adjust_learning_rate", "(", "optimizer", ",", "i", ")", "\n", "\n", "data", "=", "[", "t", ".", "cuda", "(", "non_blocking", "=", "True", ")", "for", "t", "in", "data", "]", "\n", "\n", "x", ",", "target", "=", "data", "[", ":", "2", "]", "\n", "\n", "if", "len", "(", "data", ")", ">", "2", ":", "# has mask", "\n", "            ", "x", "=", "add_mask", "(", "x", ",", "data", ".", "pop", "(", ")", ",", "1", ")", "\n", "\n", "# logging.info(x.shape)", "\n", "# logging.info(torch.max(x))", "\n", "# logging.info(torch.min(x))", "\n", "# logging.info(target.shape)", "\n", "# logging.info(torch.max(target))", "\n", "# logging.info(torch.min(target))", "\n", "\n", "# compute output", "\n", "", "output", "=", "model", "(", "x", ")", "# nx5x128x128x128, target nx128x128x128", "\n", "loss", "=", "criterion", "(", "output", ",", "target", ",", "args", ".", "alpha", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "target", ".", "numel", "(", ")", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "args", ".", "save_freq", "==", "0", ":", "\n", "            ", "epoch", "=", "int", "(", "(", "i", "+", "1", ")", "//", "enum_batches", ")", "\n", "file_name", "=", "os", ".", "path", ".", "join", "(", "ckpts", ",", "'model_epoch_{}.tar'", ".", "format", "(", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "{", "\n", "'iter'", ":", "i", "+", "1", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optim_dict'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "\n", "file_name", ")", "\n", "\n", "", "msg", "=", "'Iter {0:}, Epoch {1:.4f}, Loss {2:.4f}'", ".", "format", "(", "\n", "i", "+", "1", ",", "(", "i", "+", "1", ")", "/", "enum_batches", ",", "losses", ".", "avg", ")", "\n", "logging", ".", "info", "(", "msg", ")", "\n", "\n", "losses", ".", "reset", "(", ")", "\n", "\n", "", "i", "=", "num_iters", "+", "args", ".", "start_iter", "\n", "file_name", "=", "os", ".", "path", ".", "join", "(", "ckpts", ",", "'model_last.tar'", ")", "\n", "torch", ".", "save", "(", "{", "\n", "'iter'", ":", "i", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optim_dict'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "\n", "file_name", ")", "\n", "\n", "if", "args", ".", "valid_list", ":", "\n", "        ", "logging", ".", "info", "(", "'-'", "*", "50", ")", "\n", "msg", "=", "'Iter {}, Epoch {:.4f}, {}'", ".", "format", "(", "i", ",", "i", "/", "enum_batches", ",", "'validate validation data'", ")", "\n", "logging", ".", "info", "(", "msg", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "validate", "(", "valid_loader", ",", "model", ",", "names", "=", "valid_set", ".", "names", ",", "out_dir", "=", "args", ".", "out", ")", "\n", "\n", "#logging.info('-'*50)", "\n", "#msg  =  'Iter {}, Epoch {:.4f}, {}'.format(i, i/enum_batches, 'validate training data')", "\n", "#logging.info(msg)", "\n", "#with torch.no_grad():", "\n", "#    validate(train_valid_loader, model, names=train_valid_set.names, verbose=False)", "\n", "\n", "", "", "msg", "=", "'total time: {:.4f} minutes'", ".", "format", "(", "(", "time", ".", "time", "(", ")", "-", "start", ")", "/", "60", ")", "\n", "logging", ".", "info", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.train_kiunet.adjust_learning_rate": [[211, 216], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "# reduce learning rate by a factor of 10", "\n", "    ", "if", "epoch", "+", "1", "in", "args", ".", "schedule", ":", "\n", "        ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "*=", "0.1", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.compress_data.float2uint": [[7, 15], ["numpy.load", "data_temp.astype", "print", "numpy.savez_compressed", "os.remove", "file_path.find"], "function", ["None"], ["def", "float2uint", "(", "file_path", ")", ":", "\n", "\t", "filename", "=", "file_path", "[", ":", "file_path", ".", "find", "(", "'.npy'", ")", "]", "+", "'.npz'", "\n", "data_float32", "=", "np", ".", "load", "(", "file_path", ")", "\n", "data_temp", "=", "255", "*", "data_float32", "\n", "data_uint8", "=", "data_temp", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "print", "(", "filename", ")", "\n", "np", ".", "savez_compressed", "(", "filename", ",", "data", "=", "data_uint8", ")", "\n", "os", ".", "remove", "(", "file_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.AverageMeter.__init__": [[175, 177], ["predict_kiunet.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.AverageMeter.reset": [[178, 183], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.AverageMeter.update": [[184, 189], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.calculate_metrics": [[28, 32], ["medpy.metric.sensitivity", "medpy.metric.specificity", "medpy.metric.dc"], "function", ["None"], ["def", "calculate_metrics", "(", "pred", ",", "target", ")", ":", "\n", "    ", "sens", "=", "metric", ".", "sensitivity", "(", "pred", ",", "target", ")", "\n", "spec", "=", "metric", ".", "specificity", "(", "pred", ",", "target", ")", "\n", "dice", "=", "metric", ".", "dc", "(", "pred", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.f1_score": [[34, 38], ["o.sum", "t.sum"], "function", ["None"], ["def", "f1_score", "(", "o", ",", "t", ")", ":", "\n", "    ", "num", "=", "2", "*", "(", "o", "*", "t", ")", ".", "sum", "(", ")", "+", "eps", "\n", "den", "=", "o", ".", "sum", "(", ")", "+", "t", ".", "sum", "(", ")", "+", "eps", "\n", "return", "num", "/", "den", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.dice": [[43, 57], ["predict_kiunet.f1_score", "predict_kiunet.f1_score", "predict_kiunet.f1_score"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.f1_score", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.f1_score", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.f1_score"], ["", "def", "dice", "(", "output", ",", "target", ")", ":", "\n", "    ", "ret", "=", "[", "]", "\n", "# whole", "\n", "o", "=", "output", ">", "0", ";", "t", "=", "target", ">", "0", "\n", "ret", "+=", "f1_score", "(", "o", ",", "t", ")", ",", "\n", "# core", "\n", "o", "=", "(", "output", "==", "1", ")", "|", "(", "output", "==", "4", ")", "\n", "t", "=", "(", "target", "==", "1", ")", "|", "(", "target", "==", "4", ")", "\n", "ret", "+=", "f1_score", "(", "o", ",", "t", ")", ",", "\n", "# active", "\n", "o", "=", "(", "output", "==", "4", ")", ";", "t", "=", "(", "target", "==", "4", ")", "\n", "ret", "+=", "f1_score", "(", "o", ",", "t", ")", ",", "\n", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.main": [[59, 91], ["args.getdir", "getattr", "getattr.", "model.cuda.cuda", "os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "model.cuda.load_state_dict", "getattr", "os.path.join", "getattr.", "torch.utils.data.DataLoader", "time.time", "logging.info", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "predict_kiunet.validate", "time.time"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.validate"], ["def", "main", "(", ")", ":", "\n", "    ", "ckpts", "=", "args", ".", "getdir", "(", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "args", ".", "gpu", "\n", "# setup networks", "\n", "Network", "=", "getattr", "(", "models", ".", "unet", ",", "args", ".", "net", ")", "\n", "# model = models.unet.kiunet()", "\n", "model", "=", "Network", "(", "**", "args", ".", "net_params", ")", "\n", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "model_file", "=", "os", ".", "path", ".", "join", "(", "ckpts", ",", "args", ".", "ckpt", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "model_file", ")", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "\n", "Dataset", "=", "getattr", "(", "datasets", ",", "args", ".", "dataset", ")", "\n", "\n", "valid_list", "=", "os", ".", "path", ".", "join", "(", "args", ".", "data_dir", ",", "args", ".", "valid_list", ")", "\n", "valid_set", "=", "Dataset", "(", "valid_list", ",", "root", "=", "args", ".", "data_dir", ",", "\n", "for_train", "=", "False", ",", "return_target", "=", "args", ".", "scoring", ",", "\n", "transforms", "=", "args", ".", "test_transforms", ")", "\n", "valid_loader", "=", "DataLoader", "(", "\n", "valid_set", ",", "\n", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "collate_fn", "=", "valid_set", ".", "collate", ",", "\n", "num_workers", "=", "1", ",", "pin_memory", "=", "True", ")", "\n", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "scores", "=", "validate", "(", "valid_loader", ",", "model", ",", "\n", "args", ".", "out_dir", ",", "valid_set", ".", "names", ",", "scoring", "=", "args", ".", "scoring", ")", "\n", "\n", "", "msg", "=", "'total time {:.4f} minutes'", ".", "format", "(", "(", "time", ".", "time", "(", ")", "-", "start", ")", "/", "60", ")", "\n", "logging", ".", "info", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.validate": [[93, 171], ["model.eval", "predict_kiunet.AverageMeter", "enumerate", "model.train", "model", "torch.softmax", "output[].cpu().numpy", "str", "logging.info", "t.cuda", "len", "data.data_utils.add_mask", "len", "os.path.join", "numpy.zeros", "output.argmax.argmax", "print", "print", "nibabel.save", "output.argmax.argmax", "predict_kiunet.dice", "predict_kiunet.AverageMeter.update", "logging.info", "data.pop", "output[].cpu", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "nibabel.Nifti1Image", "numpy.array", "numpy.where", "numpy.where", "numpy.where", "zip", "zip"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.add_mask", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.dice", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.predict_kiunet.AverageMeter.update"], ["", "def", "validate", "(", "valid_loader", ",", "model", ",", "\n", "out_dir", "=", "''", ",", "names", "=", "None", ",", "scoring", "=", "True", ",", "verbose", "=", "True", ")", ":", "\n", "\n", "    ", "H", ",", "W", ",", "T", "=", "240", ",", "240", ",", "155", "\n", "dtype", "=", "torch", ".", "float32", "\n", "\n", "dset", "=", "valid_loader", ".", "dataset", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "criterion", "=", "F", ".", "cross_entropy", "\n", "\n", "vals", "=", "AverageMeter", "(", ")", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "valid_loader", ")", ":", "\n", "\n", "# target_cpu = data[1][0, :H, :W, :T].numpy() if scoring else None", "\n", "        ", "data", "=", "[", "t", ".", "cuda", "(", "non_blocking", "=", "True", ")", "for", "t", "in", "data", "]", "\n", "\n", "x", ",", "target", "=", "data", "[", ":", "2", "]", "\n", "\n", "if", "len", "(", "data", ")", ">", "2", ":", "\n", "            ", "x", "=", "add_mask", "(", "x", ",", "data", ".", "pop", "(", ")", ",", "1", ")", "\n", "\n", "# compute output", "\n", "", "logit", "=", "model", "(", "x", ")", "# nx5x9x9x9, target nx9x9x9", "\n", "output", "=", "F", ".", "softmax", "(", "logit", ",", "dim", "=", "1", ")", "# nx5x9x9x9", "\n", "\n", "## measure accuracy and record loss", "\n", "#loss = None", "\n", "#if scoring and criterion is not None:", "\n", "#    loss = criterion(logit, target).item()", "\n", "\n", "output", "=", "output", "[", "0", ",", ":", ",", ":", "H", ",", ":", "W", ",", ":", "T", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "msg", "=", "'Subject {}/{}, '", ".", "format", "(", "i", "+", "1", ",", "len", "(", "valid_loader", ")", ")", "\n", "name", "=", "str", "(", "i", ")", "\n", "if", "names", ":", "\n", "            ", "name", "=", "names", "[", "i", "]", "\n", "msg", "+=", "'{:>20}, '", ".", "format", "(", "name", ")", "\n", "\n", "", "if", "out_dir", ":", "\n", "            ", "oname", "=", "os", ".", "path", ".", "join", "(", "out_dir", ",", "name", "+", "'.nii.gz'", ")", "\n", "H", ",", "W", ",", "T", "=", "240", ",", "240", ",", "155", "\n", "seg_img", "=", "np", ".", "zeros", "(", "shape", "=", "(", "H", ",", "W", ",", "T", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "output", "=", "output", ".", "argmax", "(", "0", ")", "\n", "# print(seg_img.shape,output.shape)", "\n", "# ET_voxels = (output == 4).sum()", "\n", "# if ET_voxels < 500:", "\n", "#     output[np.where(output == 4)] = 1", "\n", "seg_img", "[", "np", ".", "where", "(", "output", "==", "1", ")", "]", "=", "1", "\n", "seg_img", "[", "np", ".", "where", "(", "output", "==", "2", ")", "]", "=", "2", "\n", "seg_img", "[", "np", ".", "where", "(", "output", "==", "4", ")", "]", "=", "4", "\n", "\n", "# if verbose:", "\n", "print", "(", "'1:'", ",", "np", ".", "sum", "(", "seg_img", "==", "1", ")", ",", "' | 2:'", ",", "np", ".", "sum", "(", "seg_img", "==", "2", ")", ",", "' | 4:'", ",", "np", ".", "sum", "(", "seg_img", "==", "4", ")", ")", "\n", "print", "(", "'WT:'", ",", "np", ".", "sum", "(", "(", "seg_img", "==", "1", ")", "|", "(", "seg_img", "==", "2", ")", "|", "(", "seg_img", "==", "4", ")", ")", ",", "' | TC:'", ",", "np", ".", "sum", "(", "(", "seg_img", "==", "1", ")", "|", "(", "seg_img", "==", "4", ")", ")", ",", "' | ET:'", ",", "np", ".", "sum", "(", "seg_img", "==", "4", ")", ")", "\n", "nib", ".", "save", "(", "nib", ".", "Nifti1Image", "(", "seg_img", ",", "None", ")", ",", "oname", ")", "\n", "\n", "", "if", "scoring", ":", "\n", "            ", "output", "=", "output", ".", "argmax", "(", "0", ")", "\n", "scores", "=", "dice", "(", "output", ",", "target_cpu", ")", "\n", "\n", "#if loss is not None:", "\n", "#    scores += loss,", "\n", "\n", "vals", ".", "update", "(", "np", ".", "array", "(", "scores", ")", ")", "\n", "\n", "msg", "+=", "', '", ".", "join", "(", "[", "'{}: {:.4f}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "zip", "(", "keys", ",", "scores", ")", "]", ")", "\n", "\n", "", "if", "verbose", ":", "\n", "            ", "logging", ".", "info", "(", "msg", ")", "\n", "\n", "", "", "if", "scoring", ":", "\n", "        ", "msg", "=", "'Average scores: '", "\n", "msg", "+=", "', '", ".", "join", "(", "[", "'{}: {:.4f}'", ".", "format", "(", "k", ",", "v", ")", "for", "k", ",", "v", "in", "zip", "(", "keys", ",", "vals", ".", "avg", ")", "]", ")", "\n", "logging", ".", "info", "(", "msg", ")", "\n", "\n", "", "model", ".", "train", "(", ")", "\n", "return", "vals", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.prep.nib_load": [[18, 27], ["nibabel.load", "nib.load.get_data", "nib.load.uncache", "os.path.exists", "numpy.array"], "function", ["None"], ["def", "nib_load", "(", "file_name", ")", ":", "\n", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "file_name", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "1", "]", ")", "\n", "\n", "", "proxy", "=", "nib", ".", "load", "(", "file_name", ")", "\n", "data", "=", "proxy", ".", "get_data", "(", ")", "\n", "proxy", ".", "uncache", "(", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.prep.get_dist2center": [[29, 36], ["len", "numpy.zeros", "enumerate"], "function", ["None"], ["", "def", "get_dist2center", "(", "patch_shape", ")", ":", "\n", "    ", "ndim", "=", "len", "(", "patch_shape", ")", "\n", "dist2center", "=", "np", ".", "zeros", "(", "(", "ndim", ",", "2", ")", ",", "dtype", "=", "'int32'", ")", "# from patch boundaries", "\n", "for", "dim", ",", "shape", "in", "enumerate", "(", "patch_shape", ")", ":", "\n", "        ", "dist2center", "[", "dim", "]", "=", "[", "shape", "/", "2", "-", "1", ",", "shape", "/", "2", "]", "if", "shape", "%", "2", "==", "0", "else", "[", "shape", "//", "2", ",", "shape", "//", "2", "]", "\n", "", "return", "dist2center", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.prep.process": [[38, 124], ["numpy.array", "numpy.stack", "range", "prep.nib_load", "np.stack.sum", "numpy.percentile", "numpy.percentile", "y.mean", "y.std", "open", "pickle.dump", "prep.get_dist2center", "numpy.zeros", "numpy.stack().T.astype", "numpy.stack().T.astype", "numpy.array", "open", "pickle.dump", "prep.nib_load", "numpy.stack", "numpy.stack", "np.stack().T.astype.nonzero", "np.stack().T.astype.nonzero"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.parcellation.nib_load", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.prep.get_dist2center", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.parcellation.nib_load"], ["", "def", "process", "(", "path", ",", "has_label", "=", "True", ")", ":", "\n", "    ", "label", "=", "np", ".", "array", "(", "\n", "nib_load", "(", "path", "+", "'seg.nii.gz'", ")", ",", "dtype", "=", "'uint8'", ",", "order", "=", "'C'", ")", "\n", "\n", "images", "=", "np", ".", "stack", "(", "[", "\n", "np", ".", "array", "(", "nib_load", "(", "path", "+", "modal", "+", "'.nii.gz'", ")", ",", "dtype", "=", "'float32'", ",", "order", "=", "'C'", ")", "\n", "for", "modal", "in", "modalities", "]", ",", "-", "1", ")", "\n", "\n", "mask", "=", "images", ".", "sum", "(", "-", "1", ")", ">", "0", "\n", "\n", "for", "k", "in", "range", "(", "4", ")", ":", "\n", "        ", "x", "=", "images", "[", "...", ",", "k", "]", "\n", "y", "=", "x", "[", "mask", "]", "\n", "lower", "=", "np", ".", "percentile", "(", "y", ",", "0.2", ")", "\n", "upper", "=", "np", ".", "percentile", "(", "y", ",", "99.8", ")", "\n", "x", "[", "mask", "&", "(", "x", "<", "lower", ")", "]", "=", "lower", "\n", "x", "[", "mask", "&", "(", "x", ">", "upper", ")", "]", "=", "upper", "\n", "\n", "y", "=", "x", "[", "mask", "]", "\n", "\n", "# 0.8885", "\n", "#x[mask] -= y.mean()", "\n", "#x[mask] /= y.std()", "\n", "\n", "# 0.909", "\n", "x", "-=", "y", ".", "mean", "(", ")", "\n", "x", "/=", "y", ".", "std", "(", ")", "\n", "\n", "#0.8704", "\n", "#x /= y.mean()", "\n", "\n", "images", "[", "...", ",", "k", "]", "=", "x", "\n", "\n", "#return images, label", "\n", "\n", "#output = path + 'data_f32_divm.pkl'", "\n", "", "output", "=", "path", "+", "'data_f32.pkl'", "\n", "with", "open", "(", "output", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "(", "images", ",", "label", ")", ",", "f", ")", "\n", "\n", "#mean, std = [], []", "\n", "#for k in range(4):", "\n", "#    x = images[..., k]", "\n", "#    y = x[mask]", "\n", "#    lower = np.percentile(y, 0.2)", "\n", "#    upper = np.percentile(y, 99.8)", "\n", "#    x[mask & (x < lower)] = lower", "\n", "#    x[mask & (x > upper)] = upper", "\n", "\n", "#    y = x[mask]", "\n", "\n", "#    mean.append(y.mean())", "\n", "#    std.append(y.std())", "\n", "\n", "#    images[..., k] = x", "\n", "#path = '/home/thuyen/FastData/'", "\n", "#output = path + 'data_i16.pkl'", "\n", "#with open(output, 'wb') as f:", "\n", "#    pickle.dump((images, mask, mean, std, label), f)", "\n", "\n", "", "if", "not", "has_label", ":", "\n", "        ", "return", "\n", "\n", "", "for", "patch_shape", "in", "patch_shapes", ":", "\n", "        ", "dist2center", "=", "get_dist2center", "(", "patch_shape", ")", "\n", "\n", "sx", ",", "sy", ",", "sz", "=", "dist2center", "[", ":", ",", "0", "]", "# left-most boundary", "\n", "ex", ",", "ey", ",", "ez", "=", "mask", ".", "shape", "-", "dist2center", "[", ":", ",", "1", "]", "# right-most boundary", "\n", "shape", "=", "mask", ".", "shape", "\n", "maps", "=", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "\"int16\"", ")", "\n", "maps", "[", "sx", ":", "ex", ",", "sy", ":", "ey", ",", "sz", ":", "ez", "]", "=", "1", "\n", "\n", "fg", "=", "(", "label", ">", "0", ")", ".", "astype", "(", "'int16'", ")", "\n", "bg", "=", "(", "(", "mask", ">", "0", ")", "*", "(", "fg", "==", "0", ")", ")", ".", "astype", "(", "'int16'", ")", "\n", "\n", "fg", "=", "fg", "*", "maps", "\n", "bg", "=", "bg", "*", "maps", "\n", "\n", "fg", "=", "np", ".", "stack", "(", "fg", ".", "nonzero", "(", ")", ")", ".", "T", ".", "astype", "(", "'uint8'", ")", "\n", "bg", "=", "np", ".", "stack", "(", "bg", ".", "nonzero", "(", ")", ")", ".", "T", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "suffix", "=", "'{}x{}x{}_'", ".", "format", "(", "*", "patch_shape", ")", "\n", "\n", "output", "=", "path", "+", "suffix", "+", "'coords.pkl'", "\n", "with", "open", "(", "output", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pickle", ".", "dump", "(", "(", "fg", ",", "bg", ")", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.prep.doit": [[127, 135], ["os.path.join", "open().read().splitlines", "os.path.join", "prep.process", "open().read", "sub.split", "zip", "open"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.BRATS.prep.process"], ["", "", "", "def", "doit", "(", "dset", ")", ":", "\n", "    ", "root", ",", "has_label", "=", "dset", "[", "'root'", "]", ",", "dset", "[", "'has_label'", "]", "\n", "file_list", "=", "os", ".", "path", ".", "join", "(", "root", ",", "dset", "[", "'flist'", "]", ")", "\n", "subjects", "=", "open", "(", "file_list", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "names", "=", "[", "sub", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "for", "sub", "in", "subjects", "]", "\n", "paths", "=", "[", "os", ".", "path", ".", "join", "(", "root", ",", "sub", ",", "name", "+", "'_'", ")", "for", "sub", ",", "name", "in", "zip", "(", "subjects", ",", "names", ")", "]", "\n", "for", "path", "in", "paths", ":", "\n", "        ", "process", "(", "path", ",", "has_label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.ConvD.__init__": [[21, 38], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "dropout", "=", "0.0", ",", "norm", "=", "'gn'", ",", "first", "=", "False", ")", ":", "\n", "        ", "super", "(", "ConvD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "first", "=", "first", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "2", ")", "\n", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "inplanes", ",", "planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "normalization", "(", "planes", ",", "norm", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv3d", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "normalization", "(", "planes", ",", "norm", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv3d", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "normalization", "(", "planes", ",", "norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.ConvD.forward": [[39, 48], ["unet.ConvD.bn1", "unet.ConvD.relu", "unet.ConvD.bn3", "unet.ConvD.relu", "unet.ConvD.maxpool", "unet.ConvD.conv1", "unet.ConvD.bn2", "torch.dropout3d", "torch.dropout3d", "torch.dropout3d", "unet.ConvD.conv3", "unet.ConvD.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "self", ".", "first", ":", "\n", "            ", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "", "x", "=", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "y", "=", "self", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "dropout", ">", "0", ":", "\n", "            ", "y", "=", "F", ".", "dropout3d", "(", "y", ",", "self", ".", "dropout", ")", "\n", "", "y", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "return", "self", ".", "relu", "(", "x", "+", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.ConvU.__init__": [[51, 67], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization"], ["    ", "def", "__init__", "(", "self", ",", "planes", ",", "norm", "=", "'gn'", ",", "first", "=", "False", ")", ":", "\n", "        ", "super", "(", "ConvU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "first", "=", "first", "\n", "\n", "if", "not", "self", ".", "first", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "2", "*", "planes", ",", "planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "normalization", "(", "planes", ",", "norm", ")", "\n", "\n", "", "self", ".", "conv2", "=", "nn", ".", "Conv3d", "(", "planes", ",", "planes", "//", "2", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "normalization", "(", "planes", "//", "2", ",", "norm", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv3d", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "normalization", "(", "planes", ",", "norm", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.ConvU.forward": [[68, 80], ["torch.upsample", "torch.upsample", "torch.upsample", "unet.ConvU.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "unet.ConvU.relu", "unet.ConvU.relu", "unet.ConvU.bn2", "unet.ConvU.bn3", "unet.ConvU.bn1", "unet.ConvU.conv2", "unet.ConvU.conv3", "unet.ConvU.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "prev", ")", ":", "\n", "# final output is the localization layer", "\n", "        ", "if", "not", "self", ".", "first", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "\n", "", "y", "=", "F", ".", "upsample", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "\n", "y", "=", "self", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "y", ")", ")", ")", "\n", "\n", "y", "=", "torch", ".", "cat", "(", "[", "prev", ",", "y", "]", ",", "1", ")", "\n", "y", "=", "self", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "y", ")", ")", ")", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.KnetU.__init__": [[82, 98], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization"], ["    ", "def", "__init__", "(", "self", ",", "planes", ",", "norm", "=", "'bn'", ",", "first", "=", "False", ")", ":", "\n", "        ", "super", "(", "KnetU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "first", "=", "first", "\n", "\n", "if", "not", "self", ".", "first", ":", "\n", "            ", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "normalization", "(", "planes", ",", "norm", ")", "\n", "\n", "", "self", ".", "conv2", "=", "nn", ".", "Conv3d", "(", "planes", ",", "planes", "//", "2", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "normalization", "(", "planes", "//", "2", ",", "norm", ")", "\n", "\n", "# self.conv3 = nn.Conv3d(planes//2, planes//2, 3, 1, 1, bias=False)", "\n", "# self.bn3   = normalization(planes, norm)", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.KnetU.forward": [[99, 113], ["torch.upsample", "torch.upsample", "torch.upsample", "unet.KnetU.relu", "unet.KnetU.relu", "unet.KnetU.conv2", "unet.KnetU.bn1", "unet.KnetU.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# final output is the localization layer", "\n", "        ", "if", "not", "self", ".", "first", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "", "a", ",", "b", ",", "c", ",", "d", ",", "e", "=", "x", ".", "shape", "\n", "# print(a,b,c,d,e)", "\n", "y", "=", "F", ".", "upsample", "(", "x", ",", "size", "=", "(", "2", "*", "c", ",", "2", "*", "d", ",", "e", ")", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "\n", "# print(y.shape)", "\n", "y", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "y", ")", ")", "\n", "\n", "# y = torch.cat([prev, y], 1)", "\n", "# y = self.relu(self.bn3(self.conv3(y)))", "\n", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.KnetD.__init__": [[115, 132], ["torch.Module.__init__", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.normalization"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "dropout", "=", "0.0", ",", "norm", "=", "'in'", ",", "first", "=", "False", ")", ":", "\n", "        ", "super", "(", "KnetD", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "first", "=", "first", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", "\n", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "inplanes", ",", "planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "normalization", "(", "planes", ",", "norm", ")", "\n", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv3d", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "normalization", "(", "planes", ",", "norm", ")", "\n", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv3d", "(", "planes", ",", "planes", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "normalization", "(", "planes", ",", "norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.KnetD.forward": [[133, 146], ["unet.KnetD.permute", "unet.KnetD.unsqueeze", "unet.KnetD.permute", "unet.KnetD.bn1", "unet.KnetD.relu", "unet.KnetD.bn3", "unet.KnetD.relu", "unet.KnetD.maxpool", "unet.KnetD.conv1", "unet.KnetD.bn2", "torch.dropout3d", "torch.dropout3d", "torch.dropout3d", "unet.KnetD.conv3", "unet.KnetD.squeeze", "unet.KnetD.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# print(x.shape)", "\n", "        ", "x", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "3", ")", "\n", "if", "not", "self", ".", "first", ":", "\n", "            ", "x", "=", "self", ".", "maxpool", "(", "x", ".", "squeeze", "(", "0", ")", ")", "\n", "", "x", "=", "x", ".", "unsqueeze", "(", "0", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "4", ",", "2", ")", "\n", "x", "=", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "y", "=", "self", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "if", "self", ".", "dropout", ">", "0", ":", "\n", "            ", "y", "=", "F", ".", "dropout3d", "(", "y", ",", "self", ".", "dropout", ")", "\n", "", "y", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "return", "self", ".", "relu", "(", "x", "+", "y", ")", "\n", "", "", "class", "Unet", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.Unet.__init__": [[147, 173], ["torch.Module.__init__", "torch.Upsample", "torch.Upsample", "torch.Upsample", "unet.ConvD", "unet.ConvD", "unet.ConvD", "unet.ConvD", "unet.ConvD", "unet.ConvU", "unet.ConvU", "unet.ConvU", "unet.ConvU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.Unet.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", "=", "4", ",", "n", "=", "16", ",", "dropout", "=", "0.5", ",", "norm", "=", "'gn'", ",", "num_classes", "=", "5", ")", ":", "\n", "        ", "super", "(", "Unet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "self", ".", "convd1", "=", "ConvD", "(", "c", ",", "n", ",", "dropout", ",", "norm", ",", "first", "=", "True", ")", "\n", "self", ".", "convd2", "=", "ConvD", "(", "n", ",", "2", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "convd3", "=", "ConvD", "(", "2", "*", "n", ",", "4", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "convd4", "=", "ConvD", "(", "4", "*", "n", ",", "8", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "convd5", "=", "ConvD", "(", "8", "*", "n", ",", "16", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "\n", "self", ".", "convu4", "=", "ConvU", "(", "16", "*", "n", ",", "norm", ",", "True", ")", "\n", "self", ".", "convu3", "=", "ConvU", "(", "8", "*", "n", ",", "norm", ",", "True", ")", "\n", "self", ".", "convu2", "=", "ConvU", "(", "4", "*", "n", ",", "norm", ",", "True", ")", "\n", "self", ".", "convu1", "=", "ConvU", "(", "2", "*", "n", ",", "norm", ",", "True", ")", "\n", "\n", "self", ".", "seg3", "=", "nn", ".", "Conv3d", "(", "8", "*", "n", ",", "num_classes", ",", "1", ")", "\n", "self", ".", "seg2", "=", "nn", ".", "Conv3d", "(", "4", "*", "n", ",", "num_classes", ",", "1", ")", "\n", "self", ".", "seg1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "num_classes", ",", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "GroupNorm", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.Unet.forward": [[174, 192], ["unet.Unet.convd1", "unet.Unet.convd2", "unet.Unet.convd3", "unet.Unet.convd4", "unet.Unet.convd5", "unet.Unet.convu4", "unet.Unet.convu3", "unet.Unet.convu2", "unet.Unet.convu1"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "convd1", "(", "x", ")", "\n", "# print(x1.shape)", "\n", "x2", "=", "self", ".", "convd2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "convd3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "convd4", "(", "x3", ")", "\n", "x5", "=", "self", ".", "convd5", "(", "x4", ")", "\n", "\n", "y4", "=", "self", ".", "convu4", "(", "x5", ",", "x4", ")", "\n", "y3", "=", "self", ".", "convu3", "(", "y4", ",", "x3", ")", "\n", "y2", "=", "self", ".", "convu2", "(", "y3", ",", "x2", ")", "\n", "y1", "=", "self", ".", "convu1", "(", "y2", ",", "x1", ")", "\n", "\n", "# y3 = self.seg3(y3)", "\n", "# y2 = self.seg2(y2) + self.upsample(y3)", "\n", "# y1 = self.seg1(y1) + self.upsample(y2)", "\n", "\n", "return", "y1", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.segnet.__init__": [[194, 220], ["torch.Module.__init__", "torch.Upsample", "torch.Upsample", "torch.Upsample", "unet.ConvD", "unet.ConvD", "unet.ConvD", "unet.ConvD", "unet.ConvD", "unet.ConvU", "unet.ConvU", "unet.ConvU", "unet.ConvU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.segnet.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", "=", "4", ",", "n", "=", "16", ",", "dropout", "=", "0.5", ",", "norm", "=", "'gn'", ",", "num_classes", "=", "5", ")", ":", "\n", "        ", "super", "(", "segnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "self", ".", "convd1", "=", "ConvD", "(", "c", ",", "n", ",", "dropout", ",", "norm", ",", "first", "=", "True", ")", "\n", "self", ".", "convd2", "=", "ConvD", "(", "n", ",", "2", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "convd3", "=", "ConvD", "(", "2", "*", "n", ",", "4", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "convd4", "=", "ConvD", "(", "4", "*", "n", ",", "8", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "convd5", "=", "ConvD", "(", "8", "*", "n", ",", "16", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "\n", "self", ".", "convu4", "=", "ConvU", "(", "16", "*", "n", ",", "norm", ",", "True", ")", "\n", "self", ".", "convu3", "=", "ConvU", "(", "8", "*", "n", ",", "norm", ",", "True", ")", "\n", "self", ".", "convu2", "=", "ConvU", "(", "4", "*", "n", ",", "norm", ",", "True", ")", "\n", "self", ".", "convu1", "=", "ConvU", "(", "2", "*", "n", ",", "norm", ",", "True", ")", "\n", "\n", "self", ".", "seg3", "=", "nn", ".", "Conv3d", "(", "4", "*", "n", ",", "num_classes", ",", "1", ")", "\n", "self", ".", "seg2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "num_classes", ",", "1", ")", "\n", "self", ".", "seg1", "=", "nn", ".", "Conv3d", "(", "n", ",", "num_classes", ",", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "GroupNorm", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.segnet.forward": [[221, 239], ["unet.segnet.convd1", "unet.segnet.convd2", "unet.segnet.convd3", "unet.segnet.convd4", "unet.segnet.convd5", "unet.segnet.convu4", "unet.segnet.convu3", "unet.segnet.convu2", "unet.segnet.convu1", "unet.segnet.seg3", "unet.segnet.seg2", "unet.segnet.upsample", "unet.segnet.seg1", "unet.segnet.upsample"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "convd1", "(", "x", ")", "\n", "# print(x1.shape)", "\n", "x2", "=", "self", ".", "convd2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "convd3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "convd4", "(", "x3", ")", "\n", "x5", "=", "self", ".", "convd5", "(", "x4", ")", "\n", "\n", "y4", "=", "self", ".", "convu4", "(", "x5", ",", "x4", ")", "\n", "y3", "=", "self", ".", "convu3", "(", "y4", ",", "x3", ")", "\n", "y2", "=", "self", ".", "convu2", "(", "y3", ",", "x2", ")", "\n", "y1", "=", "self", ".", "convu1", "(", "y2", ",", "x1", ")", "\n", "\n", "y3", "=", "self", ".", "seg3", "(", "y3", ")", "\n", "y2", "=", "self", ".", "seg2", "(", "y2", ")", "+", "self", ".", "upsample", "(", "y3", ")", "\n", "y1", "=", "self", ".", "seg1", "(", "y1", ")", "+", "self", ".", "upsample", "(", "y2", ")", "\n", "\n", "return", "y1", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.kiunet3d.__init__": [[241, 279], ["torch.Module.__init__", "torch.Upsample", "torch.Upsample", "torch.Upsample", "unet.ConvD", "unet.ConvD", "unet.ConvD", "unet.ConvD", "unet.ConvD", "unet.KnetU", "unet.KnetU", "unet.KnetU", "unet.KnetD", "unet.KnetD", "unet.KnetD", "unet.ConvU", "unet.ConvU", "unet.ConvU", "unet.ConvU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "unet.kiunet3d.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", "=", "4", ",", "n", "=", "16", ",", "dropout", "=", "0.5", ",", "norm", "=", "'gn'", ",", "num_classes", "=", "5", ")", ":", "\n", "        ", "super", "(", "kiunet3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# print(\"HERE\")", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "self", ".", "convd1", "=", "ConvD", "(", "c", ",", "n", ",", "dropout", ",", "norm", ",", "first", "=", "True", ")", "\n", "self", ".", "convd2", "=", "ConvD", "(", "n", ",", "2", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "convd3", "=", "ConvD", "(", "2", "*", "n", ",", "4", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "convd4", "=", "ConvD", "(", "4", "*", "n", ",", "8", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "convd5", "=", "ConvD", "(", "8", "*", "n", ",", "16", "*", "n", ",", "dropout", ",", "norm", ")", "\n", "\n", "self", ".", "kconvu1", "=", "KnetU", "(", "n", ",", "norm", ",", "first", "=", "True", ")", "\n", "self", ".", "kconvu2", "=", "KnetU", "(", "n", "//", "2", ",", "norm", ",", "first", "=", "False", ")", "\n", "self", ".", "kconvu3", "=", "KnetU", "(", "n", "//", "2", ",", "norm", ",", "first", "=", "False", ")", "\n", "# self.kconvu4 = KnetU(n//4, norm, first = False)", "\n", "# self.kconvd1 = KnetD(n//2,n//2,dropout,norm)", "\n", "self", ".", "kconvd2", "=", "KnetD", "(", "1", ",", "n", "//", "2", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "kconvd3", "=", "KnetD", "(", "n", "//", "2", ",", "n", ",", "dropout", ",", "norm", ")", "\n", "self", ".", "kconvd4", "=", "KnetD", "(", "n", ",", "n", "*", "2", ",", "dropout", ",", "norm", ")", "\n", "\n", "self", ".", "convu4", "=", "ConvU", "(", "16", "*", "n", ",", "norm", ",", "True", ")", "\n", "self", ".", "convu3", "=", "ConvU", "(", "8", "*", "n", ",", "norm", ")", "\n", "self", ".", "convu2", "=", "ConvU", "(", "4", "*", "n", ",", "norm", ")", "\n", "self", ".", "convu1", "=", "ConvU", "(", "2", "*", "n", ",", "norm", ")", "\n", "\n", "self", ".", "seg3", "=", "nn", ".", "Conv3d", "(", "8", "*", "n", ",", "num_classes", ",", "1", ")", "\n", "self", ".", "seg2", "=", "nn", ".", "Conv3d", "(", "4", "*", "n", ",", "num_classes", ",", "1", ")", "\n", "self", ".", "seg1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "num_classes", ",", "1", ")", "\n", "\n", "self", ".", "segk", "=", "nn", ".", "Conv3d", "(", "n", ",", "num_classes", ",", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "GroupNorm", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.kiunet3d.forward": [[280, 321], ["unet.kiunet3d.convd1", "unet.kiunet3d.convd2", "unet.kiunet3d.convd3", "unet.kiunet3d.convd4", "unet.kiunet3d.convd5", "unet.kiunet3d.kconvu1", "unet.kiunet3d.kconvu2", "unet.kiunet3d.kconvd2", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "unet.kiunet3d.kconvd3", "unet.kiunet3d.segk", "unet.kiunet3d.convu4", "unet.kiunet3d.convu3", "unet.kiunet3d.convu2", "unet.kiunet3d.convu1", "unet.kiunet3d.seg3", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "unet.kiunet3d.seg2", "unet.kiunet3d.upsample", "unet.kiunet3d.seg1", "unet.kiunet3d.upsample"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "convd1", "(", "x", ")", "\n", "# print(x1.shape)", "\n", "x2", "=", "self", ".", "convd2", "(", "x1", ")", "\n", "x3", "=", "self", ".", "convd3", "(", "x2", ")", "\n", "x4", "=", "self", ".", "convd4", "(", "x3", ")", "\n", "x5", "=", "self", ".", "convd5", "(", "x4", ")", "\n", "\n", "k1", "=", "self", ".", "kconvu1", "(", "x1", ")", "\n", "# print(k1.shape)", "\n", "k2", "=", "self", ".", "kconvu2", "(", "k1", ")", "\n", "# print(k2.shape)", "\n", "k3", "=", "k2", "\n", "# k3 = self.kconvu3(k2)", "\n", "# print(k3.shape)", "\n", "# k4 = self.kconvu4(k3)", "\n", "\n", "# k3 = self.kconvd1(k3)", "\n", "# print(k3.shape)", "\n", "# k3 = torch.add(k3,k2)", "\n", "k3", "=", "self", ".", "kconvd2", "(", "k3", ")", "\n", "k3", "=", "torch", ".", "add", "(", "k3", ",", "k1", ")", "\n", "k3", "=", "self", ".", "kconvd3", "(", "k3", ")", "\n", "# k3 = self.kconvd4(k3)", "\n", "k3", "=", "self", ".", "segk", "(", "k3", ")", "\n", "\n", "y4", "=", "self", ".", "convu4", "(", "x5", ",", "x4", ")", "\n", "y3", "=", "self", ".", "convu3", "(", "y4", ",", "x3", ")", "\n", "y2", "=", "self", ".", "convu2", "(", "y3", ",", "x2", ")", "\n", "y1", "=", "self", ".", "convu1", "(", "y2", ",", "x1", ")", "\n", "\n", "# print(y1.shape)", "\n", "\n", "\n", "y3", "=", "self", ".", "seg3", "(", "y3", ")", "\n", "y2", "=", "self", ".", "seg2", "(", "y2", ")", "+", "self", ".", "upsample", "(", "y3", ")", "\n", "y1", "=", "self", ".", "seg1", "(", "y1", ")", "+", "self", ".", "upsample", "(", "y2", ")", "\n", "# print(y1.shape,k3.shape)", "\n", "y1", "=", "torch", ".", "add", "(", "y1", ",", "k3", ")", "\n", "\n", "return", "y1", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.kiunet3dwcrfb.__init__": [[324, 397], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Softmax", "torch.Softmax", "torch.Softmax", "unet.kiunet3dwcrfb.modules", "isinstance", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "torch.nn.init.torch.nn.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", "=", "4", ",", "n", "=", "1", ",", "channels", "=", "128", ",", "groups", "=", "16", ",", "norm", "=", "'bn'", ",", "num_classes", "=", "5", ")", ":", "\n", "        ", "super", "(", "kiunet3dwcrfb", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Entry flow", "\n", "self", ".", "encoder1", "=", "nn", ".", "Conv3d", "(", "c", ",", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "# H//2", "\n", "self", ".", "encoder2", "=", "nn", ".", "Conv3d", "(", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "encoder3", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "4", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "kencoder1", "=", "nn", ".", "Conv3d", "(", "c", ",", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "kencoder2", "=", "nn", ".", "Conv3d", "(", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "kencoder3", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "downsample1", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "downsample2", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "downsample3", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "kdownsample1", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "kdownsample2", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "kdownsample3", "=", "nn", ".", "MaxPool3d", "(", "2", ",", "stride", "=", "2", ")", "\n", "\n", "\n", "self", ".", "upsample1", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//8        ", "\n", "self", ".", "upsample2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//4", "\n", "self", ".", "upsample3", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//2", "\n", "self", ".", "kupsample1", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//8        ", "\n", "self", ".", "kupsample2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//4", "\n", "self", ".", "kupsample3", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ",", "align_corners", "=", "False", ")", "# H//2", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Conv3d", "(", "4", "*", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "decoder2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "decoder3", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "c", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "kdecoder1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "kdecoder2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "kdecoder3", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "c", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "intere1_1", "=", "nn", ".", "Conv3d", "(", "n", ",", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte1_1bn = nn.BatchNorm2d(16)", "\n", "self", ".", "intere2_1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte2_1bn = nn.BatchNorm2d(32)", "\n", "self", ".", "intere3_1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "4", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte3_1bn = nn.BatchNorm2d(64)", "\n", "\n", "self", ".", "intere1_2", "=", "nn", ".", "Conv3d", "(", "n", ",", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte1_2bn = nn.BatchNorm2d(16)", "\n", "self", ".", "intere2_2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte2_2bn = nn.BatchNorm2d(32)", "\n", "self", ".", "intere3_2", "=", "nn", ".", "Conv3d", "(", "4", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.inte3_2bn = nn.BatchNorm2d(64)", "\n", "\n", "self", ".", "interd1_1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd1_1bn = nn.BatchNorm2d(32)", "\n", "self", ".", "interd2_1", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd2_1bn = nn.BatchNorm2d(16)", "\n", "self", ".", "interd3_1", "=", "nn", ".", "Conv3d", "(", "n", ",", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd3_1bn = nn.BatchNorm2d(64)", "\n", "\n", "self", ".", "interd1_2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd1_2bn = nn.BatchNorm2d(32)", "\n", "self", ".", "interd2_2", "=", "nn", ".", "Conv3d", "(", "2", "*", "n", ",", "2", "*", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd2_2bn = nn.BatchNorm2d(16)", "\n", "self", ".", "interd3_2", "=", "nn", ".", "Conv3d", "(", "n", ",", "n", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "# self.intd3_2bn = nn.BatchNorm2d(64)", "\n", "\n", "self", ".", "seg", "=", "nn", ".", "Conv3d", "(", "c", ",", "num_classes", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n", "# Initialization", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "#", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "GroupNorm", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.kiunet3dwcrfb.forward": [[398, 458], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.add", "torch.relu", "torch.relu", "torch.relu", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.max_pool3d", "torch.max_pool3d", "torch.max_pool3d", "unet.kiunet3dwcrfb.seg", "unet.kiunet3dwcrfb.encoder1", "unet.kiunet3dwcrfb.kencoder1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "unet.kiunet3dwcrfb.encoder2", "unet.kiunet3dwcrfb.kencoder2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "unet.kiunet3dwcrfb.encoder3", "unet.kiunet3dwcrfb.kencoder3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "unet.kiunet3dwcrfb.decoder1", "unet.kiunet3dwcrfb.kdecoder1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "unet.kiunet3dwcrfb.decoder2", "unet.kiunet3dwcrfb.kdecoder2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "unet.kiunet3dwcrfb.decoder3", "unet.kiunet3dwcrfb.kdecoder3", "unet.kiunet3dwcrfb.intere1_1", "unet.kiunet3dwcrfb.intere1_2", "unet.kiunet3dwcrfb.intere2_1", "unet.kiunet3dwcrfb.intere2_2", "unet.kiunet3dwcrfb.intere3_1", "unet.kiunet3dwcrfb.intere3_2", "unet.kiunet3dwcrfb.interd1_1", "unet.kiunet3dwcrfb.interd1_2", "unet.kiunet3dwcrfb.interd2_1", "unet.kiunet3dwcrfb.interd2_2"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# Encoder", "\n", "        ", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder1", "(", "x", ")", ",", "2", ",", "2", ")", ")", "#U-Net branch", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "kencoder1", "(", "x", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "#Ki-Net branch", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere1_1", "(", "out1", ")", ")", ",", "scale_factor", "=", "0.25", ",", "mode", "=", "'trilinear'", ")", ")", "#CRFB", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere1_2", "(", "tmp", ")", ")", ",", "scale_factor", "=", "4", ",", "mode", "=", "'trilinear'", ")", ")", "#CRFB", "\n", "\n", "u1", "=", "out", "#skip conn", "\n", "o1", "=", "out1", "#skip conn", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder2", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "kencoder2", "(", "out1", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere2_1", "(", "out1", ")", ")", ",", "scale_factor", "=", "0.0625", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere2_2", "(", "tmp", ")", ")", ",", "scale_factor", "=", "16", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "u2", "=", "out", "\n", "o2", "=", "out1", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "encoder3", "(", "out", ")", ",", "2", ",", "2", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "kencoder3", "(", "out1", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere3_1", "(", "out1", ")", ")", ",", "scale_factor", "=", "0.015625", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "intere3_2", "(", "tmp", ")", ")", ",", "scale_factor", "=", "64", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "### End of encoder block", "\n", "\n", "### Start Decoder", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder1", "(", "out", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "#U-NET", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "kdecoder1", "(", "out1", ")", ",", "2", ",", "2", ")", ")", "#Ki-NET", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "interd1_1", "(", "out1", ")", ")", ",", "scale_factor", "=", "0.0625", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "interd1_2", "(", "tmp", ")", ")", ",", "scale_factor", "=", "16", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u2", ")", "#skip conn", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o2", ")", "#skip conn", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder2", "(", "out", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "kdecoder2", "(", "out1", ")", ",", "2", ",", "2", ")", ")", "\n", "tmp", "=", "out", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "interd2_1", "(", "out1", ")", ")", ",", "scale_factor", "=", "0.25", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "F", ".", "interpolate", "(", "F", ".", "relu", "(", "self", ".", "interd2_2", "(", "tmp", ")", ")", ",", "scale_factor", "=", "4", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "u1", ")", "\n", "out1", "=", "torch", ".", "add", "(", "out1", ",", "o1", ")", "\n", "\n", "out", "=", "F", ".", "relu", "(", "F", ".", "interpolate", "(", "self", ".", "decoder3", "(", "out", ")", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", ")", "\n", "out1", "=", "F", ".", "relu", "(", "F", ".", "max_pool3d", "(", "self", ".", "kdecoder3", "(", "out1", ")", ",", "2", ",", "2", ")", ")", "\n", "\n", "\n", "\n", "out", "=", "torch", ".", "add", "(", "out", ",", "out1", ")", "# fusion of both branches", "\n", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "seg", "(", "out", ")", ")", "#1*1 conv", "\n", "\n", "\n", "# out = self.soft(out)", "\n", "return", "out", "", "", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.unet.normalization": [[8, 18], ["torch.BatchNorm3d", "torch.GroupNorm", "torch.InstanceNorm3d", "ValueError"], "function", ["None"], ["def", "normalization", "(", "planes", ",", "norm", "=", "'gn'", ")", ":", "\n", "    ", "if", "norm", "==", "'bn'", ":", "\n", "        ", "m", "=", "nn", ".", "BatchNorm3d", "(", "planes", ")", "\n", "", "elif", "norm", "==", "'gn'", ":", "\n", "        ", "m", "=", "nn", ".", "GroupNorm", "(", "4", ",", "planes", ")", "\n", "", "elif", "norm", "==", "'in'", ":", "\n", "        ", "m", "=", "nn", ".", "InstanceNorm3d", "(", "planes", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'normalization type {} is not supported'", ".", "format", "(", "norm", ")", ")", "\n", "", "return", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.hard_cross_entropy": [[8, 30], ["torch.cross_entropy", "pos.sum.sum", "min", "pos.sum.numel", "neg.sum.numel", "torch.topk", "torch.topk", "neg.sum.sum", "int"], "function", ["None"], ["def", "hard_cross_entropy", "(", "output", ",", "target", ",", "alpha", "=", "3.0", ")", ":", "\n", "    ", "mtx", "=", "F", ".", "cross_entropy", "(", "output", ",", "target", ",", "reduce", "=", "False", ")", "\n", "\n", "bg", "=", "(", "target", "==", "0", ")", "\n", "\n", "neg", "=", "mtx", "[", "bg", "]", "\n", "pos", "=", "mtx", "[", "1", "-", "bg", "]", "\n", "\n", "Np", ",", "Nn", "=", "pos", ".", "numel", "(", ")", ",", "neg", ".", "numel", "(", ")", "\n", "\n", "pos", "=", "pos", ".", "sum", "(", ")", "\n", "\n", "k", "=", "min", "(", "Np", "*", "alpha", ",", "Nn", ")", "\n", "if", "k", ">", "0", ":", "\n", "        ", "neg", ",", "_", "=", "torch", ".", "topk", "(", "neg", ",", "int", "(", "k", ")", ")", "\n", "neg", "=", "neg", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "        ", "neg", "=", "0.0", "\n", "\n", "", "loss", "=", "(", "pos", "+", "neg", ")", "/", "(", "Np", "+", "k", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.hard_per_im_cross_entropy": [[32, 51], ["output.view.view", "target.view.view", "torch.cross_entropy", "pos.long().sum", "F.cross_entropy.clone().detach", "mtx.clone().detach.sort", "loss_idx.sort", "torch.clamp", "torch.clamp", "mtx[].mean", "pos.long", "F.cross_entropy.clone", "pos.size"], "function", ["None"], ["", "def", "hard_per_im_cross_entropy", "(", "output", ",", "target", ",", "alpha", "=", "3.0", ")", ":", "\n", "    ", "n", ",", "c", "=", "output", ".", "shape", "[", ":", "2", "]", "\n", "output", "=", "output", ".", "view", "(", "n", ",", "c", ",", "-", "1", ")", "\n", "target", "=", "target", ".", "view", "(", "n", ",", "-", "1", ")", "\n", "\n", "mtx", "=", "F", ".", "cross_entropy", "(", "output", ",", "target", ",", "reduce", "=", "False", ")", "\n", "\n", "pos", "=", "target", ">", "0", "\n", "num_pos", "=", "pos", ".", "long", "(", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "loss", "=", "mtx", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "loss", "[", "pos", "]", "=", "0", "\n", "_", ",", "loss_idx", "=", "loss", ".", "sort", "(", "1", ",", "descending", "=", "True", ")", "\n", "_", ",", "idx_rank", "=", "loss_idx", ".", "sort", "(", "1", ")", "\n", "\n", "num_neg", "=", "torch", ".", "clamp", "(", "alpha", "*", "num_pos", ",", "max", "=", "pos", ".", "size", "(", "1", ")", "-", "1", ")", "\n", "neg", "=", "idx_rank", "<", "num_neg", "\n", "\n", "return", "mtx", "[", "neg", "+", "pos", "]", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.focal_loss": [[53, 68], ["target.size", "torch.cross_entropy", "pos.view().sum().view", "torch.clamp", "torch.clamp", "z.detach.detach", "focal.sum", "pos.view().sum", "torch.pow", "torch.pow", "pos.view", "torch.exp", "torch.exp"], "function", ["None"], ["", "def", "focal_loss", "(", "output", ",", "target", ",", "alpha", "=", "0.25", ",", "gamma", "=", "2.0", ")", ":", "\n", "    ", "n", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "lsfm", "=", "F", ".", "cross_entropy", "(", "output", ",", "target", ",", "reduce", "=", "False", ")", "\n", "\n", "pos", "=", "(", "target", ">", "0", ")", ".", "float", "(", ")", "\n", "Np", "=", "pos", ".", "view", "(", "n", ",", "-", "1", ")", ".", "sum", "(", "1", ")", ".", "view", "(", "n", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "Np", "=", "torch", ".", "clamp", "(", "Np", ",", "1.0", ")", "\n", "z", "=", "pos", "*", "alpha", "/", "Np", "/", "n", "+", "(", "1.0", "-", "pos", ")", "*", "(", "1.0", "-", "alpha", ")", "/", "Np", "/", "n", "\n", "z", "=", "z", ".", "detach", "(", ")", "\n", "\n", "focal", "=", "torch", ".", "pow", "(", "1.0", "-", "torch", ".", "exp", "(", "-", "lsfm", ")", ",", "gamma", ")", "*", "lsfm", "*", "z", "\n", "\n", "return", "focal", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.mean_cross_entropy": [[70, 83], ["torch.cross_entropy", "pos.mean", "neg.mean", "pos.numel", "pos.neg"], "function", ["None"], ["", "def", "mean_cross_entropy", "(", "output", ",", "target", ",", "alpha", "=", "3.0", ")", ":", "\n", "    ", "mtx", "=", "F", ".", "cross_entropy", "(", "output", ",", "target", ",", "reduce", "=", "False", ")", "\n", "\n", "bg", "=", "(", "target", "==", "0", ")", "\n", "\n", "neg", "=", "mtx", "[", "bg", "]", "\n", "pos", "=", "mtx", "[", "1", "-", "bg", "]", "\n", "\n", "pos", "=", "pos", ".", "mean", "(", ")", "if", "pos", ".", "numel", "(", ")", ">", "0", "else", "0", "\n", "neg", "=", "neg", ".", "mean", "(", ")", "if", "pos", ".", "neg", "(", ")", ">", "0", "else", "0", "\n", "\n", "loss", "=", "(", "neg", "*", "alpha", "+", "pos", ")", "/", "(", "alpha", "+", "1.0", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.dice": [[88, 92], ["output.sum", "target.sum"], "function", ["None"], ["def", "dice", "(", "output", ",", "target", ")", ":", "\n", "    ", "num", "=", "2", "*", "(", "output", "*", "target", ")", ".", "sum", "(", ")", "+", "eps", "\n", "den", "=", "output", ".", "sum", "(", ")", "+", "target", ".", "sum", "(", ")", "+", "eps", "\n", "return", "1.0", "-", "num", "/", "den", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.cross_entropy_dice": [[94, 103], ["torch.softmax", "range", "torch.cross_entropy", "criterions.dice"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.dice"], ["", "def", "cross_entropy_dice", "(", "output", ",", "target", ",", "weight", "=", "1.0", ")", ":", "\n", "    ", "loss", "=", "weight", "*", "F", ".", "cross_entropy", "(", "output", ",", "target", ")", "\n", "output", "=", "F", ".", "softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "for", "c", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "        ", "o", "=", "output", "[", ":", ",", "c", "]", "\n", "t", "=", "(", "target", "==", "c", ")", ".", "float", "(", ")", "\n", "loss", "+=", "0.25", "*", "dice", "(", "o", ",", "t", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.dice_per_im": [[107, 114], ["output.view.view", "target.view.view", "output.view.sum", "target.view.sum"], "function", ["None"], ["", "def", "dice_per_im", "(", "output", ",", "target", ")", ":", "\n", "    ", "n", "=", "output", ".", "shape", "[", "0", "]", "\n", "output", "=", "output", ".", "view", "(", "n", ",", "-", "1", ")", "\n", "target", "=", "target", ".", "view", "(", "n", ",", "-", "1", ")", "\n", "num", "=", "2", "*", "(", "output", "*", "target", ")", ".", "sum", "(", "1", ")", "+", "eps", "\n", "den", "=", "output", ".", "sum", "(", "1", ")", "+", "target", ".", "sum", "(", "1", ")", "+", "eps", "\n", "return", "1.0", "-", "(", "num", "/", "den", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.cross_entropy_dice_per_im": [[115, 124], ["torch.softmax", "range", "torch.cross_entropy", "criterions.dice_per_im"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.models.criterions.dice_per_im"], ["", "def", "cross_entropy_dice_per_im", "(", "output", ",", "target", ",", "weight", "=", "1.0", ")", ":", "\n", "    ", "loss", "=", "weight", "*", "F", ".", "cross_entropy", "(", "output", ",", "target", ")", "\n", "output", "=", "F", ".", "softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "for", "c", "in", "range", "(", "1", ",", "5", ")", ":", "\n", "        ", "o", "=", "output", "[", ":", ",", "c", "]", "\n", "t", "=", "(", "target", "==", "c", ")", ".", "float", "(", ")", "\n", "loss", "+=", "0.25", "*", "dice_per_im", "(", "o", ",", "t", ")", "\n", "\n", "", "return", "loss", "\n", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.generate_elastic_transform_coordinates": [[23, 32], ["len", "range", "tuple", "numpy.meshgrid", "offsets.append", "numpy.reshape", "numpy.arange", "zip", "scipy.ndimage.filters.gaussian_filter", "numpy.random.random"], "function", ["None"], ["def", "generate_elastic_transform_coordinates", "(", "shape", ",", "alpha", ",", "sigma", ")", ":", "\n", "    ", "n_dim", "=", "len", "(", "shape", ")", "\n", "offsets", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_dim", ")", ":", "\n", "        ", "offsets", ".", "append", "(", "gaussian_filter", "(", "(", "np", ".", "random", ".", "random", "(", "shape", ")", "*", "2", "-", "1", ")", ",", "sigma", ",", "mode", "=", "\"constant\"", ",", "cval", "=", "0", ")", "*", "alpha", ")", "\n", "", "tmp", "=", "tuple", "(", "[", "np", ".", "arange", "(", "i", ")", "for", "i", "in", "shape", "]", ")", "\n", "coords", "=", "np", ".", "meshgrid", "(", "*", "tmp", ",", "indexing", "=", "'ij'", ")", "\n", "indices", "=", "[", "np", ".", "reshape", "(", "i", "+", "j", ",", "(", "-", "1", ",", "1", ")", ")", "for", "i", ",", "j", "in", "zip", "(", "offsets", ",", "coords", ")", "]", "\n", "return", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.create_zero_centered_coordinate_mesh": [[34, 40], ["tuple", "numpy.array().astype", "range", "len", "numpy.arange", "numpy.array", "numpy.meshgrid", "numpy.array().astype", "numpy.array"], "function", ["None"], ["", "def", "create_zero_centered_coordinate_mesh", "(", "shape", ")", ":", "\n", "    ", "tmp", "=", "tuple", "(", "[", "np", ".", "arange", "(", "i", ")", "for", "i", "in", "shape", "]", ")", "\n", "coords", "=", "np", ".", "array", "(", "np", ".", "meshgrid", "(", "*", "tmp", ",", "indexing", "=", "'ij'", ")", ")", ".", "astype", "(", "float", ")", "\n", "for", "d", "in", "range", "(", "len", "(", "shape", ")", ")", ":", "\n", "        ", "coords", "[", "d", "]", "-=", "(", "(", "np", ".", "array", "(", "shape", ")", ".", "astype", "(", "float", ")", "-", "1", ")", "/", "2.", ")", "[", "d", "]", "\n", "", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.elastic_deform_coordinates": [[42, 51], ["len", "range", "numpy.array", "np.array.append", "scipy.ndimage.filters.gaussian_filter", "numpy.random.random"], "function", ["None"], ["", "def", "elastic_deform_coordinates", "(", "coordinates", ",", "alpha", ",", "sigma", ")", ":", "\n", "    ", "n_dim", "=", "len", "(", "coordinates", ")", "\n", "offsets", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_dim", ")", ":", "\n", "        ", "offsets", ".", "append", "(", "\n", "gaussian_filter", "(", "(", "np", ".", "random", ".", "random", "(", "coordinates", ".", "shape", "[", "1", ":", "]", ")", "*", "2", "-", "1", ")", ",", "sigma", ",", "mode", "=", "\"constant\"", ",", "cval", "=", "0", ")", "*", "alpha", ")", "\n", "", "offsets", "=", "np", ".", "array", "(", "offsets", ")", "\n", "indices", "=", "offsets", "+", "coordinates", "\n", "return", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.rotate_coords_3d": [[53, 60], ["numpy.identity", "create_matrix_rotation_x_3d", "create_matrix_rotation_y_3d", "create_matrix_rotation_z_3d", "numpy.dot().transpose().reshape", "len", "numpy.dot().transpose", "numpy.dot", "np.dot().transpose().reshape.reshape().transpose", "np.dot().transpose().reshape.reshape", "len"], "function", ["None"], ["", "def", "rotate_coords_3d", "(", "coords", ",", "angle_x", ",", "angle_y", ",", "angle_z", ")", ":", "\n", "    ", "rot_matrix", "=", "np", ".", "identity", "(", "len", "(", "coords", ")", ")", "\n", "rot_matrix", "=", "create_matrix_rotation_x_3d", "(", "angle_x", ",", "rot_matrix", ")", "\n", "rot_matrix", "=", "create_matrix_rotation_y_3d", "(", "angle_y", ",", "rot_matrix", ")", "\n", "rot_matrix", "=", "create_matrix_rotation_z_3d", "(", "angle_z", ",", "rot_matrix", ")", "\n", "coords", "=", "np", ".", "dot", "(", "coords", ".", "reshape", "(", "len", "(", "coords", ")", ",", "-", "1", ")", ".", "transpose", "(", ")", ",", "rot_matrix", ")", ".", "transpose", "(", ")", ".", "reshape", "(", "coords", ".", "shape", ")", "\n", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.rotate_coords_2d": [[62, 66], ["create_matrix_rotation_2d", "numpy.dot().transpose().reshape", "numpy.dot().transpose", "numpy.dot", "np.dot().transpose().reshape.reshape().transpose", "np.dot().transpose().reshape.reshape", "len"], "function", ["None"], ["", "def", "rotate_coords_2d", "(", "coords", ",", "angle", ")", ":", "\n", "    ", "rot_matrix", "=", "create_matrix_rotation_2d", "(", "angle", ")", "\n", "coords", "=", "np", ".", "dot", "(", "coords", ".", "reshape", "(", "len", "(", "coords", ")", ",", "-", "1", ")", ".", "transpose", "(", ")", ",", "rot_matrix", ")", ".", "transpose", "(", ")", ".", "reshape", "(", "coords", ".", "shape", ")", "\n", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.scale_coords": [[68, 70], ["None"], "function", ["None"], ["", "def", "scale_coords", "(", "coords", ",", "scale", ")", ":", "\n", "    ", "return", "coords", "*", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.uncenter_coords": [[72, 78], ["copy.deepcopy", "range"], "function", ["None"], ["", "def", "uncenter_coords", "(", "coords", ")", ":", "\n", "    ", "shp", "=", "coords", ".", "shape", "[", "1", ":", "]", "\n", "coords", "=", "deepcopy", "(", "coords", ")", "\n", "for", "d", "in", "range", "(", "coords", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "coords", "[", "d", "]", "+=", "(", "shp", "[", "d", "]", "-", "1", ")", "/", "2.", "\n", "", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.interpolate_img": [[80, 82], ["scipy.ndimage.map_coordinates"], "function", ["None"], ["", "def", "interpolate_img", "(", "img", ",", "coords", ",", "order", "=", "3", ",", "mode", "=", "'nearest'", ",", "cval", "=", "0.0", ")", ":", "\n", "    ", "return", "map_coordinates", "(", "img", ",", "coords", ",", "order", "=", "order", ",", "mode", "=", "mode", ",", "cval", "=", "cval", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.generate_noise": [[84, 88], ["scipy.ndimage.filters.gaussian_filter", "numpy.random.random"], "function", ["None"], ["", "def", "generate_noise", "(", "shape", ",", "alpha", ",", "sigma", ")", ":", "\n", "    ", "noise", "=", "np", ".", "random", ".", "random", "(", "shape", ")", "*", "2", "-", "1", "\n", "noise", "=", "gaussian_filter", "(", "noise", ",", "sigma", ",", "mode", "=", "\"constant\"", ",", "cval", "=", "0", ")", "*", "alpha", "\n", "return", "noise", "\n", "", ""]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.explore.nib_load": [[6, 11], ["nibabel.load", "nib.load.get_data().astype", "nib.load.uncache", "nib.load.get_data"], "function", ["None"], ["def", "nib_load", "(", "file_name", ")", ":", "\n", "    ", "proxy", "=", "nib", ".", "load", "(", "file_name", ")", "\n", "data", "=", "proxy", ".", "get_data", "(", ")", ".", "astype", "(", "'float32'", ")", "\n", "proxy", ".", "uncache", "(", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.explore.crop": [[12, 21], ["numpy.lib.stride_tricks.as_strided", "numpy.array", "tuple", "tuple", "numpy.array"], "function", ["None"], ["", "def", "crop", "(", "x", ",", "ksize", ",", "stride", "=", "3", ")", ":", "\n", "    ", "shape", "=", "(", "np", ".", "array", "(", "x", ".", "shape", "[", ":", "3", "]", ")", "-", "ksize", ")", "/", "stride", "+", "1", "\n", "shape", "=", "tuple", "(", "shape", ")", "+", "(", "ksize", ",", ")", "*", "3", "+", "(", "x", ".", "shape", "[", "3", "]", ",", ")", "\n", "\n", "strides", "=", "np", ".", "array", "(", "x", ".", "strides", "[", ":", "3", "]", ")", "*", "3", "\n", "strides", "=", "tuple", "(", "strides", ")", "+", "x", ".", "strides", "\n", "\n", "x", "=", "as_strided", "(", "x", ",", "shape", "=", "shape", ",", "strides", "=", "strides", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Base.sample": [[11, 13], ["None"], "methods", ["None"], ["    ", "def", "sample", "(", "self", ",", "*", "shape", ")", ":", "\n", "        ", "return", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Base.tf": [[14, 16], ["None"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Base.__call__": [[17, 31], ["isinstance", "transforms.Base.tf", "transforms.Base.sample", "isinstance", "transforms.Base.tf", "enumerate"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Spatial.tf", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Spatial.tf"], ["", "def", "__call__", "(", "self", ",", "img", ",", "dim", "=", "3", ",", "reuse", "=", "False", ")", ":", "\n", "# image: nhwtc", "\n", "# shape: no first dim", "\n", "        ", "if", "not", "reuse", ":", "\n", "            ", "im", "=", "img", "if", "isinstance", "(", "img", ",", "np", ".", "ndarray", ")", "else", "img", "[", "0", "]", "\n", "# how to know  if the last dim is channel??", "\n", "# nhwtc vs nhwt??", "\n", "shape", "=", "im", ".", "shape", "[", "1", ":", "dim", "+", "1", "]", "\n", "self", ".", "sample", "(", "*", "shape", ")", "\n", "\n", "", "if", "isinstance", "(", "img", ",", "collections", ".", "Sequence", ")", ":", "\n", "            ", "return", "[", "self", ".", "tf", "(", "x", ",", "k", ")", "for", "k", ",", "x", "in", "enumerate", "(", "img", ")", "]", "\n", "\n", "", "return", "self", ".", "tf", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Base.__str__": [[32, 34], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'Itendity()'", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Rot90.__init__": [[42, 47], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "axes", "=", "(", "0", ",", "1", ")", ")", ":", "\n", "        ", "self", ".", "axes", "=", "axes", "\n", "\n", "for", "a", "in", "self", ".", "axes", ":", "\n", "            ", "assert", "a", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Rot90.sample": [[48, 57], ["list"], "methods", ["None"], ["", "", "def", "sample", "(", "self", ",", "*", "shape", ")", ":", "\n", "        ", "shape", "=", "list", "(", "shape", ")", "\n", "i", ",", "j", "=", "self", ".", "axes", "\n", "\n", "# shape: no first dim", "\n", "i", ",", "j", "=", "i", "-", "1", ",", "j", "-", "1", "\n", "shape", "[", "i", "]", ",", "shape", "[", "j", "]", "=", "shape", "[", "j", "]", ",", "shape", "[", "i", "]", "\n", "\n", "return", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Rot90.tf": [[58, 60], ["numpy.rot90"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "return", "np", ".", "rot90", "(", "img", ",", "axes", "=", "self", ".", "axes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Rot90.__str__": [[61, 63], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'Rot90(axes=({}, {})'", ".", "format", "(", "*", "self", ".", "axes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Flip.__init__": [[66, 68], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "axis", "=", "0", ")", ":", "\n", "        ", "self", ".", "axis", "=", "axis", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Flip.tf": [[69, 71], ["numpy.flip"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "return", "np", ".", "flip", "(", "img", ",", "self", ".", "axis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Flip.__str__": [[72, 74], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'Flip(axis={})'", ".", "format", "(", "self", ".", "axis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.RandSelect.__init__": [[77, 81], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "prob", "=", "0.5", ",", "tf", "=", "None", ")", ":", "\n", "        ", "self", ".", "prob", "=", "prob", "\n", "self", ".", "ops", "=", "tf", "if", "isinstance", "(", "tf", ",", "collections", ".", "Sequence", ")", "else", "(", "tf", ",", ")", "\n", "self", ".", "buff", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.RandSelect.sample": [[82, 90], ["random.random", "op.sample"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample"], ["", "def", "sample", "(", "self", ",", "*", "shape", ")", ":", "\n", "        ", "self", ".", "buff", "=", "random", ".", "random", "(", ")", "<", "self", ".", "prob", "\n", "\n", "if", "self", ".", "buff", ":", "\n", "            ", "for", "op", "in", "self", ".", "ops", ":", "\n", "                ", "shape", "=", "op", ".", "sample", "(", "*", "shape", ")", "\n", "\n", "", "", "return", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.RandSelect.tf": [[91, 96], ["op.tf"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Spatial.tf"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "if", "self", ".", "buff", ":", "\n", "            ", "for", "op", "in", "self", ".", "ops", ":", "\n", "                ", "img", "=", "op", ".", "tf", "(", "img", ",", "k", ")", "\n", "", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.RandSelect.__str__": [[97, 103], ["len", "str", "str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "ops", ")", "==", "1", ":", "\n", "            ", "ops", "=", "str", "(", "self", ".", "ops", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "            ", "ops", "=", "'[{}]'", ".", "format", "(", "', '", ".", "join", "(", "[", "str", "(", "op", ")", "for", "op", "in", "self", ".", "ops", "]", ")", ")", "\n", "", "return", "'RandSelect({}, {})'", ".", "format", "(", "self", ".", "prob", ",", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.CenterCrop.__init__": [[106, 109], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "self", ".", "buffer", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.CenterCrop.sample": [[110, 115], ["len", "slice", "slice"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "*", "shape", ")", ":", "\n", "        ", "size", "=", "self", ".", "size", "\n", "start", "=", "[", "(", "s", "-", "size", ")", "//", "2", "for", "s", "in", "shape", "]", "\n", "self", ".", "buffer", "=", "[", "slice", "(", "None", ")", "]", "+", "[", "slice", "(", "s", ",", "s", "+", "size", ")", "for", "s", "in", "start", "]", "\n", "return", "[", "size", "]", "*", "len", "(", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.CenterCrop.tf": [[117, 119], ["None"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "return", "img", "[", "self", ".", "buffer", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.CenterCrop.__str__": [[120, 122], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'CenterCrop({})'", ".", "format", "(", "self", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.RandCrop.sample": [[125, 130], ["random.randint", "len", "slice", "slice"], "methods", ["None"], ["    ", "def", "sample", "(", "self", ",", "*", "shape", ")", ":", "\n", "        ", "size", "=", "self", ".", "size", "\n", "start", "=", "[", "random", ".", "randint", "(", "0", ",", "s", "-", "size", ")", "for", "s", "in", "shape", "]", "\n", "self", ".", "buffer", "=", "[", "slice", "(", "None", ")", "]", "+", "[", "slice", "(", "s", ",", "s", "+", "size", ")", "for", "s", "in", "start", "]", "\n", "return", "[", "size", "]", "*", "len", "(", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.RandCrop.__str__": [[131, 133], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'RandCrop({})'", ".", "format", "(", "self", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Pad.__init__": [[136, 139], ["tuple", "zip", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "pad", ")", ":", "\n", "        ", "self", ".", "pad", "=", "pad", "\n", "self", ".", "px", "=", "tuple", "(", "zip", "(", "[", "0", "]", "*", "len", "(", "pad", ")", ",", "pad", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Pad.sample": [[140, 149], ["list", "range", "len"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "*", "shape", ")", ":", "\n", "\n", "        ", "shape", "=", "list", "(", "shape", ")", "\n", "\n", "# shape: no first dim", "\n", "for", "i", "in", "range", "(", "len", "(", "shape", ")", ")", ":", "\n", "            ", "shape", "[", "i", "]", "+=", "self", ".", "pad", "[", "i", "+", "1", "]", "\n", "\n", "", "return", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Pad.tf": [[150, 154], ["len", "numpy.pad"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "#nhwtc, nhwt", "\n", "        ", "dim", "=", "len", "(", "img", ".", "shape", ")", "\n", "return", "np", ".", "pad", "(", "img", ",", "self", ".", "px", "[", ":", "dim", "]", ",", "mode", "=", "'constant'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Pad.__str__": [[155, 157], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'Pad(({}, {}, {}))'", ".", "format", "(", "*", "self", ".", "pad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Noise.__init__": [[161, 166], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "sigma", "=", "0.1", ",", "channel", "=", "True", ",", "num", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "dim", "=", "dim", "\n", "self", ".", "sigma", "=", "sigma", "\n", "self", ".", "channel", "=", "channel", "\n", "self", ".", "num", "=", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Noise.tf": [[167, 177], ["numpy.exp", "len", "torch.randn().numpy", "torch.randn"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "if", "self", ".", "num", ">", "0", "and", "k", ">=", "self", ".", "num", ":", "\n", "            ", "return", "img", "\n", "\n", "", "if", "self", ".", "channel", ":", "\n", "#nhwtc, hwtc, hwt", "\n", "            ", "shape", "=", "[", "1", "]", "if", "len", "(", "img", ".", "shape", ")", "<", "self", ".", "dim", "+", "2", "else", "[", "img", ".", "shape", "[", "-", "1", "]", "]", "\n", "", "else", ":", "\n", "            ", "shape", "=", "img", ".", "shape", "\n", "", "return", "img", "*", "np", ".", "exp", "(", "self", ".", "sigma", "*", "torch", ".", "randn", "(", "shape", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "numpy", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Noise.__str__": [[178, 180], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'Noise()'", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.GaussianBlur.__init__": [[184, 190], ["rand.Constant"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "sigma", "=", "Constant", "(", "1.5", ")", ",", "app", "=", "-", "1", ")", ":", "\n", "# 1.5 pixel", "\n", "        ", "self", ".", "dim", "=", "dim", "\n", "self", ".", "sigma", "=", "sigma", "\n", "self", ".", "eps", "=", "0.001", "\n", "self", ".", "app", "=", "app", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.GaussianBlur.tf": [[191, 210], ["range", "transforms.GaussianBlur.sigma.sample", "len", "range", "scipy.ndimage.gaussian_filter", "len", "scipy.ndimage.gaussian_filter", "ValueError"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "if", "self", ".", "num", ">", "0", "and", "k", ">=", "self", ".", "num", ":", "\n", "            ", "return", "img", "\n", "\n", "# image is nhwtc", "\n", "", "for", "n", "in", "range", "(", "img", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "sig", "=", "self", ".", "sigma", ".", "sample", "(", ")", "\n", "# sample each channel saperately to avoid correlations", "\n", "if", "sig", ">", "self", ".", "eps", ":", "\n", "                ", "if", "len", "(", "img", ".", "shape", ")", "==", "self", ".", "dim", "+", "2", ":", "\n", "                    ", "C", "=", "img", ".", "shape", "[", "-", "1", "]", "\n", "for", "c", "in", "range", "(", "C", ")", ":", "\n", "                        ", "img", "[", "n", ",", "...", ",", "c", "]", "=", "ndimage", ".", "gaussian_filter", "(", "img", "[", "n", ",", "...", ",", "c", "]", ",", "sig", ")", "\n", "", "", "elif", "len", "(", "img", ".", "shape", ")", "==", "self", ".", "dim", "+", "1", ":", "\n", "                    ", "img", "[", "n", "]", "=", "ndimage", ".", "gaussian_filter", "(", "img", "[", "n", "]", ",", "sig", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "'image shape is not supported'", ")", "\n", "\n", "", "", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.GaussianBlur.__str__": [[211, 213], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'GaussianBlur()'", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.ToNumpy.__init__": [[216, 218], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "num", "=", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.ToNumpy.tf": [[219, 223], ["img.numpy"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "if", "self", ".", "num", ">", "0", "and", "k", ">=", "self", ".", "num", ":", "\n", "            ", "return", "img", "\n", "", "return", "img", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.ToNumpy.__str__": [[224, 226], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'ToNumpy()'", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.ToTensor.__init__": [[229, 231], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "num", "=", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.ToTensor.tf": [[232, 237], ["torch.from_numpy"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "if", "self", ".", "num", ">", "0", "and", "k", ">=", "self", ".", "num", ":", "\n", "            ", "return", "img", "\n", "\n", "", "return", "torch", ".", "from_numpy", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.ToTensor.__str__": [[238, 240], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'ToTensor'", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.TensorType.__init__": [[243, 246], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "types", ",", "num", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "types", "=", "types", "# ('torch.float32', 'torch.int64')", "\n", "self", ".", "num", "=", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.TensorType.tf": [[247, 252], ["img.type"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "if", "self", ".", "num", ">", "0", "and", "k", ">=", "self", ".", "num", ":", "\n", "            ", "return", "img", "\n", "# make this work with both Tensor and Numpy", "\n", "", "return", "img", ".", "type", "(", "self", ".", "types", "[", "k", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.TensorType.__str__": [[253, 256], ["str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "s", "=", "', '", ".", "join", "(", "[", "str", "(", "s", ")", "for", "s", "in", "self", ".", "types", "]", ")", "\n", "return", "'TensorType(({}))'", ".", "format", "(", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.NumpyType.__init__": [[259, 262], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "types", ",", "num", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "types", "=", "types", "# ('float32', 'int64')", "\n", "self", ".", "num", "=", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.NumpyType.tf": [[263, 268], ["img.astype"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "if", "self", ".", "num", ">", "0", "and", "k", ">=", "self", ".", "num", ":", "\n", "            ", "return", "img", "\n", "# make this work with both Tensor and Numpy", "\n", "", "return", "img", ".", "astype", "(", "self", ".", "types", "[", "k", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.NumpyType.__str__": [[269, 272], ["str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "s", "=", "', '", ".", "join", "(", "[", "str", "(", "s", ")", "for", "s", "in", "self", ".", "types", "]", ")", "\n", "return", "'NumpyType(({}))'", ".", "format", "(", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Normalize.__init__": [[275, 279], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", "=", "0.0", ",", "std", "=", "1.0", ",", "num", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "self", ".", "num", "=", "num", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Normalize.tf": [[280, 286], ["None"], "methods", ["None"], ["", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "        ", "if", "self", ".", "num", ">", "0", "and", "k", ">=", "self", ".", "num", ":", "\n", "            ", "return", "img", "\n", "", "img", "-=", "self", ".", "mean", "\n", "img", "/=", "self", ".", "std", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Normalize.__str__": [[287, 289], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'Normalize()'", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Compose.__init__": [[292, 296], ["isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ops", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "ops", ",", "collections", ".", "Sequence", ")", ":", "\n", "            ", "ops", "=", "ops", ",", "\n", "", "self", ".", "ops", "=", "ops", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Compose.sample": [[297, 300], ["op.sample"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample"], ["", "def", "sample", "(", "self", ",", "*", "shape", ")", ":", "\n", "        ", "for", "op", "in", "self", ".", "ops", ":", "\n", "            ", "shape", "=", "op", ".", "sample", "(", "*", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Compose.tf": [[301, 314], ["op.tf"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Spatial.tf"], ["", "", "def", "tf", "(", "self", ",", "img", ",", "k", "=", "0", ")", ":", "\n", "#is_tensor = isinstance(img, torch.Tensor)", "\n", "#if is_tensor:", "\n", "#    img = img.numpy()", "\n", "\n", "        ", "for", "op", "in", "self", ".", "ops", ":", "\n", "            ", "img", "=", "op", ".", "tf", "(", "img", ",", "k", ")", "# do not use op(img) here", "\n", "\n", "#if is_tensor:", "\n", "#    img = np.ascontiguousarray(img)", "\n", "#    img = torch.from_numpy(img)", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Compose.__str__": [[315, 318], ["str"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "ops", "=", "', '", ".", "join", "(", "[", "str", "(", "op", ")", "for", "op", "in", "self", ".", "ops", "]", ")", "\n", "return", "'Compose([{}])'", ".", "format", "(", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Spatial.__init__": [[326, 355], ["len", "list", "isinstance", "ValueError", "numpy.array"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "patch_size", ",", "center_to_border", "=", "None", ",", "\n", "alpha", "=", "None", ",", "sigma", "=", "None", ",", "\n", "angle_x", "=", "None", ",", "angle_y", "=", "None", ",", "angle_z", "=", "None", ",", "\n", "scale", "=", "None", ",", "random_crop", "=", "True", ")", ":", "\n", "\n", "        ", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "buff", "=", "None", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "sigma", "=", "sigma", "\n", "self", ".", "angle_x", "=", "angle_x", "\n", "self", ".", "angle_y", "=", "angle_y", "\n", "self", ".", "angle_z", "=", "angle_z", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "dim", "=", "len", "(", "patch_size", ")", "\n", "self", ".", "random_crop", "=", "random_crop", "\n", "\n", "if", "center_to_border", "is", "None", ":", "\n", "            ", "center_to_border", "=", "list", "(", "np", ".", "array", "(", "patch_size", ")", "//", "2", ")", "\n", "", "elif", "not", "isinstance", "(", "center_to_border", ",", "collections", ".", "Sequence", ")", ":", "\n", "            ", "center_to_border", "=", "self", ".", "dim", "*", "(", "center_to_border", ",", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'center to border'", ")", "\n", "\n", "", "self", ".", "center_to_border", "=", "center_to_border", "\n", "\n", "\n", "self", ".", "order_data", "=", "3", "\n", "self", ".", "border_mode_data", "=", "'nearest'", "\n", "self", ".", "border_cval_data", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Spatial.sample": [[356, 389], ["tf_utils.create_zero_centered_coordinate_mesh", "range", "transforms.Spatial.alpha.sample", "transforms.Spatial.sigma.sample", "tf_utils.elastic_deform_coordinates", "transforms.Spatial.angle_x.sample", "transforms.Spatial.scale.sample", "tf_utils.scale_coords", "transforms.Spatial.angle_y.sample", "transforms.Spatial.angle_z.sample", "tf_utils.rotate_coords_3d", "tf_utils.rotate_coords_2d", "random.uniform", "int", "numpy.round"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.create_zero_centered_coordinate_mesh", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.elastic_deform_coordinates", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.scale_coords", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.rotate_coords_3d", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.rotate_coords_2d"], ["", "def", "sample", "(", "self", ",", "*", "shape", ")", ":", "\n", "#nhwtc", "\n", "        ", "coords", "=", "create_zero_centered_coordinate_mesh", "(", "self", ".", "patch_size", ")", "\n", "# dimxhxwxt", "\n", "\n", "if", "self", ".", "alpha", "is", "not", "None", "and", "self", ".", "sigma", "is", "not", "None", ":", "\n", "            ", "a", "=", "self", ".", "alpha", ".", "sample", "(", ")", "\n", "s", "=", "self", ".", "sigma", ".", "sample", "(", ")", "\n", "coords", "=", "elastic_deform_coordinates", "(", "coords", ",", "a", ",", "s", ")", "\n", "\n", "", "if", "self", ".", "angle_x", "is", "not", "None", ":", "\n", "            ", "ax", "=", "self", ".", "angle_x", ".", "sample", "(", ")", "\n", "if", "self", ".", "dim", "==", "3", ":", "\n", "                ", "ay", "=", "self", ".", "angle_y", ".", "sample", "(", ")", "\n", "az", "=", "self", ".", "angle_z", ".", "sample", "(", ")", "\n", "coords", "=", "rotate_coords_3d", "(", "coords", ",", "ax", ",", "ay", ",", "az", ")", "\n", "", "else", ":", "\n", "                ", "coords", "=", "rotate_coords_2d", "(", "coords", ",", "ax", ")", "\n", "", "", "if", "self", ".", "scale", "is", "not", "None", ":", "\n", "            ", "sc", "=", "self", ".", "scale", ".", "sample", "(", ")", "\n", "coords", "=", "scale_coords", "(", "coords", ",", "sc", ")", "\n", "\n", "", "for", "d", "in", "range", "(", "self", ".", "dim", ")", ":", "\n", "            ", "if", "self", ".", "random_crop", ":", "\n", "                ", "ctr", "=", "random", ".", "uniform", "(", "self", ".", "center_to_border", "[", "d", "]", ",", "\n", "shape", "[", "d", "]", "-", "self", ".", "center_to_border", "[", "d", "]", ")", "\n", "", "else", ":", "\n", "                ", "ctr", "=", "int", "(", "np", ".", "round", "(", "shape", "[", "d", "]", "/", "2.", ")", ")", "\n", "", "coords", "[", "d", "]", "+=", "ctr", "\n", "\n", "", "self", ".", "buff", "=", "coords", "\n", "\n", "return", "self", ".", "patch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.transforms.Spatial.tf": [[390, 405], ["list", "numpy.zeros", "range", "len", "range", "tf_utils.interpolate_img", "len", "tf_utils.interpolate_img", "ValueError"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.interpolate_img", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.tf_utils.interpolate_img"], ["", "def", "tf", "(", "self", ",", "img", ")", ":", "\n", "        ", "shape", "=", "list", "(", "img", ".", "shape", ")", "\n", "shape", "[", "1", ":", "self", ".", "dim", "+", "1", "]", "=", "self", ".", "patch_size", "\n", "out", "=", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "img", ".", "dtype", ")", "\n", "for", "n", "in", "range", "(", "img", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "len", "(", "img", ".", "shape", ")", "==", "self", ".", "dim", "+", "2", ":", "\n", "                ", "for", "c", "in", "range", "(", "img", ".", "shape", "[", "-", "1", "]", ")", ":", "\n", "                    ", "out", "[", "n", ",", "...", ",", "c", "]", "=", "interpolate_img", "(", "img", "[", "n", ",", "...", ",", "c", "]", ",", "self", ".", "buff", ",", "\n", "self", ".", "order_data", ",", "self", ".", "border_mode_data", ",", "cval", "=", "self", ".", "border_cval_data", ")", "\n", "", "", "elif", "len", "(", "img", ".", "shape", ")", "==", "self", ".", "dim", "+", "1", ":", "\n", "                ", "out", "[", "n", "]", "=", "interpolate_img", "(", "img", "[", "n", "]", ",", "self", ".", "buff", ",", "\n", "self", ".", "order_data", ",", "self", ".", "border_mode_data", ",", "cval", "=", "self", ".", "border_cval_data", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'image shape is not supported'", ")", "\n", "", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.init_fn": [[7, 12], ["torch.LongTensor().random_().item", "numpy.random.seed", "random.seed", "torch.LongTensor().random_", "torch.LongTensor"], "function", ["None"], ["def", "init_fn", "(", "worker", ")", ":", "\n", "    ", "seed", "=", "torch", ".", "LongTensor", "(", "1", ")", ".", "random_", "(", ")", ".", "item", "(", ")", "\n", "seed", "=", "(", "seed", "+", "worker", ")", "%", "M", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.add_mask": [[13, 22], ["mask.unsqueeze.unsqueeze", "list", "x.new().zero_", "new_x.scatter_.scatter_", "slice", "len", "x.new", "slice"], "function", ["None"], ["", "def", "add_mask", "(", "x", ",", "mask", ",", "dim", "=", "1", ")", ":", "\n", "    ", "mask", "=", "mask", ".", "unsqueeze", "(", "dim", ")", "\n", "shape", "=", "list", "(", "x", ".", "shape", ")", ";", "shape", "[", "dim", "]", "+=", "21", "\n", "new_x", "=", "x", ".", "new", "(", "*", "shape", ")", ".", "zero_", "(", ")", "\n", "new_x", "=", "new_x", ".", "scatter_", "(", "dim", ",", "mask", ",", "1.0", ")", "\n", "s", "=", "[", "slice", "(", "None", ")", "]", "*", "len", "(", "shape", ")", "\n", "s", "[", "dim", "]", "=", "slice", "(", "21", ",", "None", ")", "\n", "new_x", "[", "s", "]", "=", "x", "\n", "return", "new_x", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.sample": [[23, 27], ["random.sample", "torch.tensor", "range"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample"], ["", "def", "sample", "(", "x", ",", "size", ")", ":", "\n", "#https://gist.github.com/yoavram/4134617", "\n", "    ", "i", "=", "random", ".", "sample", "(", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ",", "size", ")", "\n", "return", "torch", ".", "tensor", "(", "x", "[", "i", "]", ",", "dtype", "=", "torch", ".", "int16", ")", "\n", "#x = np.random.permutation(x)", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.pkload": [[30, 33], ["open", "pickle.load"], "function", ["None"], ["", "def", "pkload", "(", "fname", ")", ":", "\n", "    ", "with", "open", "(", "fname", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "return", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.get_all_coords": [[36, 43], ["torch.tensor", "numpy.stack", "v.reshape", "numpy.meshgrid", "numpy.arange"], "function", ["None"], ["def", "get_all_coords", "(", "stride", ")", ":", "\n", "    ", "return", "torch", ".", "tensor", "(", "\n", "np", ".", "stack", "(", "[", "v", ".", "reshape", "(", "-", "1", ")", "for", "v", "in", "\n", "np", ".", "meshgrid", "(", "\n", "*", "[", "stride", "//", "2", "+", "np", ".", "arange", "(", "0", ",", "s", ",", "stride", ")", "for", "s", "in", "_shape", "]", ",", "\n", "indexing", "=", "'ij'", ")", "]", ",", "\n", "-", "1", ")", ",", "dtype", "=", "torch", ".", "int16", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.gen_feats": [[46, 57], ["numpy.stack().astype", "numpy.array", "numpy.stack", "numpy.meshgrid", "numpy.arange", "numpy.arange", "numpy.arange"], "function", ["None"], ["def", "gen_feats", "(", ")", ":", "\n", "    ", "x", ",", "y", ",", "z", "=", "240", ",", "240", ",", "155", "\n", "feats", "=", "np", ".", "stack", "(", "\n", "np", ".", "meshgrid", "(", "\n", "np", ".", "arange", "(", "x", ")", ",", "np", ".", "arange", "(", "y", ")", ",", "np", ".", "arange", "(", "z", ")", ",", "\n", "indexing", "=", "'ij'", ")", ",", "-", "1", ")", ".", "astype", "(", "'float32'", ")", "\n", "shape", "=", "np", ".", "array", "(", "[", "x", ",", "y", ",", "z", "]", ")", "\n", "feats", "-=", "shape", "/", "2.0", "\n", "feats", "/=", "shape", "\n", "\n", "return", "feats", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.test_sampling.sample1": [[13, 16], ["random.sample", "torch.tensor", "range"], "function", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample"], ["def", "sample1", "(", ")", ":", "\n", "    ", "i", "=", "random", ".", "sample", "(", "range", "(", "x", ".", "shape", "[", "0", "]", ")", ",", "size", ")", "\n", "return", "torch", ".", "tensor", "(", "x", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.test_sampling.sample2": [[17, 20], ["numpy.random.permutation", "torch.tensor"], "function", ["None"], ["", "def", "sample2", "(", ")", ":", "\n", "    ", "y", "=", "np", ".", "random", ".", "permutation", "(", "x", ")", "\n", "return", "torch", ".", "tensor", "(", "y", "[", ":", "size", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.RandomCycleIter.__init__": [[9, 13], ["list", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "data_list", "=", "list", "(", "data", ")", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "data_list", ")", "\n", "self", ".", "i", "=", "self", ".", "length", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.RandomCycleIter.__iter__": [[14, 16], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.RandomCycleIter.__next__": [[17, 23], ["random.shuffle"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "self", ".", "i", "+=", "1", "\n", "if", "self", ".", "i", "==", "self", ".", "length", ":", "\n", "            ", "self", ".", "i", "=", "0", "\n", "random", ".", "shuffle", "(", "self", ".", "data_list", ")", "\n", "", "return", "self", ".", "data_list", "[", "self", ".", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.MSampler.__init__": [[36, 48], ["sum", "range", "sum", "sampler.RandomCycleIter", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "batch_sizes", ",", "sizes", ",", "num_samples", "=", "None", ",", "num_iters", "=", "None", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "sum", "(", "batch_sizes", ")", "\n", "self", ".", "index_data", "=", "{", "}", "\n", "size", ",", "c", "=", "0", ",", "-", "1", "\n", "for", "i", "in", "range", "(", "self", ".", "batch_size", ")", ":", "\n", "            ", "if", "i", "==", "size", ":", "\n", "                ", "c", "+=", "1", "\n", "size", "+=", "batch_sizes", "[", "c", "]", "\n", "", "self", ".", "index_data", "[", "i", "]", "=", "c", "\n", "\n", "", "self", ".", "num_samples", "=", "num_samples", "or", "num_iters", "*", "self", ".", "batch_size", "or", "sum", "(", "sizes", ")", "\n", "self", ".", "data_iters", "=", "[", "RandomCycleIter", "(", "range", "(", "n", ")", ")", "for", "n", "in", "sizes", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.MSampler.__iter__": [[49, 53], ["sampler.multi_data_generator"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.multi_data_generator"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "multi_data_generator", "(", "\n", "self", ".", "data_iters", ",", "self", ".", "index_data", ",", "\n", "self", ".", "num_samples", ",", "self", ".", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.MSampler.__len__": [[54, 56], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.CycleSampler.__init__": [[65, 68], ["sampler.RandomCycleIter", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "num_samples", "=", "None", ",", "num_epochs", "=", "0", ")", ":", "\n", "        ", "self", ".", "num_samples", "=", "num_samples", "or", "size", "*", "num_epochs", "\n", "self", ".", "data_iter", "=", "RandomCycleIter", "(", "range", "(", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.CycleSampler.__iter__": [[69, 71], ["sampler.single_data_generator"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.single_data_generator"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "single_data_generator", "(", "self", ".", "data_iter", ",", "self", ".", "num_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.CycleSampler.__len__": [[72, 74], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.RandomSampler.__init__": [[78, 81], ["numpy.random.RandomSatate"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_source", ",", "state", "=", "None", ",", "seed", "=", "None", ")", ":", "\n", "        ", "self", ".", "data_source", "=", "data_source", "\n", "self", ".", "rng", "=", "np", ".", "random", ".", "RandomSatate", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.RandomSampler.__iter__": [[82, 84], ["iter", "torch.randperm().long", "torch.randperm", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "torch", ".", "randperm", "(", "len", "(", "self", ".", "data_source", ")", ")", ".", "long", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.RandomSampler.__len__": [[85, 87], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.RandomSampler.get_state": [[88, 90], ["sampler.RandomSampler.rng.get_state"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.RandomSampler.get_state"], ["", "def", "get_state", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "rng", ".", "get_state", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.RandomSampler.set_state": [[91, 93], ["sampler.RandomSampler.rng.set_state"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.RandomSampler.set_state"], ["", "def", "set_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "rng", ".", "set_state", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.multi_data_generator": [[27, 34], ["next"], "function", ["None"], ["", "def", "multi_data_generator", "(", "data_iters", ",", "index_data", ",", "n", ",", "size", ")", ":", "\n", "    ", "i", "=", "0", "\n", "while", "i", "<", "n", ":", "\n", "        ", "index", "=", "i", "%", "size", "\n", "d", "=", "index_data", "[", "index", "]", "\n", "yield", "d", ",", "next", "(", "data_iters", "[", "d", "]", ")", "\n", "i", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.sampler.single_data_generator": [[58, 63], ["next"], "function", ["None"], ["", "", "def", "single_data_generator", "(", "data_iter", ",", "n", ")", ":", "\n", "    ", "i", "=", "0", "\n", "while", "i", "<", "n", ":", "\n", "        ", "yield", "next", "(", "data_iter", ")", "\n", "i", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData28.__init__": [[22, 54], ["data_utils.get_all_coords", "numpy.ceil().astype", "eval", "data_utils.gen_feats", "open", "line.strip.strip.strip", "names.append", "os.path.join", "paths.append", "numpy.ceil", "line.strip.strip.split", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.get_all_coords", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.gen_feats"], ["    ", "def", "__init__", "(", "self", ",", "list_file", ",", "root", "=", "''", ",", "num_patches", "=", "20", ",", "for_train", "=", "False", ",", "\n", "transforms", "=", "''", ",", "return_target", "=", "True", ",", "crop", "=", "True", ",", "\n", "sample_size", "=", "25", ",", "sub_sample_size", "=", "19", ",", "target_size", "=", "19", ")", ":", "\n", "        ", "paths", ",", "names", "=", "[", "]", ",", "[", "]", "\n", "with", "open", "(", "list_file", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "name", "=", "line", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "names", ".", "append", "(", "name", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "line", ",", "name", "+", "'_'", ")", "\n", "paths", ".", "append", "(", "path", ")", "\n", "\n", "", "", "self", ".", "root", "=", "root", "\n", "self", ".", "names", "=", "names", "\n", "self", ".", "paths", "=", "paths", "\n", "self", ".", "crop", "=", "crop", "\n", "self", ".", "num_patches", "=", "num_patches", "\n", "self", ".", "for_train", "=", "for_train", "\n", "self", ".", "return_target", "=", "return_target", "\n", "\n", "self", ".", "sample_size", "=", "sample_size", "\n", "self", ".", "sub_sample_size", "=", "sub_sample_size", "\n", "self", ".", "target_size", "=", "target_size", "\n", "\n", "self", ".", "suffix", "=", "'{}x{}x{}_'", ".", "format", "(", "sample_size", ",", "sample_size", ",", "sample_size", ")", "\n", "\n", "self", ".", "all_coords", "=", "get_all_coords", "(", "target_size", ")", "\n", "self", ".", "shape", "=", "np", ".", "ceil", "(", "np", ".", "array", "(", "_shape", ",", "dtype", "=", "'float32'", ")", "/", "target_size", ")", ".", "astype", "(", "'int'", ")", "\n", "\n", "self", ".", "transforms", "=", "eval", "(", "transforms", "or", "'Identity()'", ")", "\n", "\n", "self", ".", "feats", "=", "gen_feats", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData28.__getitem__": [[55, 117], ["data_utils.pkload", "numpy.concatenate", "numpy.load", "torch.from_numpy", "multicrop.crop3d_cpu", "multicrop.crop3d_cpu", "multicrop.crop3d_cpu", "multicrop.crop3d_cpu", "samples.permute().contiguous.permute().contiguous.permute().contiguous", "sub_samples.permute().contiguous.permute().contiguous.permute().contiguous", "torch.from_numpy", "torch.from_numpy", "dualpath.DualData28.transforms", "images.permute().contiguous.permute().contiguous.permute().contiguous", "data_utils.pkload", "torch.cat", "multicrop.crop3d_cpu", "dualpath.DualData28.transforms", "dualpath.DualData28.transforms", "images.permute().contiguous.permute().contiguous.unsqueeze", "label.unsqueeze", "torch.from_numpy.unsqueeze", "images.permute().contiguous.permute().contiguous.squeeze", "label.squeeze", "torch.from_numpy.squeeze", "samples.permute().contiguous.permute().contiguous.permute", "sub_samples.permute().contiguous.permute().contiguous.permute", "images.permute().contiguous.permute().contiguous.permute", "data_utils.sample"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.pkload", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.pkload", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", "=", "self", ".", "paths", "[", "index", "]", "\n", "\n", "# faster than niffty", "\n", "#images, label = pkload(path + 'data_f32_divm.pkl')", "\n", "\n", "#images, label = pkload(path + 'data_f32.pkl')", "\n", "#images, label = torch.tensor(images), torch.tensor(label)", "\n", "\n", "images", ",", "label", "=", "pkload", "(", "path", "+", "'data_f32.pkl'", ")", "\n", "images", ",", "label", "=", "torch", ".", "from_numpy", "(", "images", ")", ",", "torch", ".", "from_numpy", "(", "label", ")", "\n", "\n", "images", "=", "np", ".", "concatenate", "(", "[", "images", ",", "self", ".", "feats", "]", ",", "-", "1", ")", "\n", "\n", "mask", "=", "np", ".", "load", "(", "path", "+", "'HarvardOxford-sub.npy'", ")", "\n", "mask", "=", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "\n", "if", "not", "self", ".", "crop", ":", "\n", "# transformation needs nhwtc", "\n", "            ", "images", ",", "label", ",", "mask", "=", "images", ".", "unsqueeze", "(", "0", ")", ",", "label", ".", "unsqueeze", "(", "0", ")", ",", "mask", ".", "unsqueeze", "(", "0", ")", "\n", "images", ",", "label", ",", "mask", "=", "self", ".", "transforms", "(", "[", "images", ",", "label", ",", "mask", "]", ")", "\n", "images", ",", "label", ",", "mask", "=", "images", ".", "squeeze", "(", "0", ")", ",", "label", ".", "squeeze", "(", "0", ")", ",", "mask", ".", "squeeze", "(", "0", ")", "\n", "images", "=", "images", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "\n", "return", "(", "images", ",", "self", ".", "all_coords", ",", "mask", ")", ",", "label", "\n", "\n", "", "if", "self", ".", "for_train", ":", "\n", "            ", "fg", ",", "bg", "=", "pkload", "(", "path", "+", "self", ".", "suffix", "+", "'coords.pkl'", ")", "\n", "coords", "=", "torch", ".", "cat", "(", "[", "sample", "(", "x", ",", "self", ".", "num_patches", "//", "2", ")", "for", "x", "in", "(", "fg", ",", "bg", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "coords", "=", "self", ".", "all_coords", "\n", "\n", "", "samples", "=", "multicrop", ".", "crop3d_cpu", "(", "images", ",", "coords", ",", "\n", "self", ".", "sample_size", ",", "self", ".", "sample_size", ",", "self", ".", "sample_size", ",", "1", ",", "False", ")", "\n", "\n", "sub_samples", "=", "multicrop", ".", "crop3d_cpu", "(", "images", ",", "coords", ",", "\n", "self", ".", "sub_sample_size", ",", "self", ".", "sub_sample_size", ",", "self", ".", "sub_sample_size", ",", "3", ",", "False", ")", "\n", "\n", "mask_id", "=", "multicrop", ".", "crop3d_cpu", "(", "mask", ",", "coords", ",", "\n", "self", ".", "sample_size", ",", "self", ".", "sample_size", ",", "self", ".", "sample_size", ",", "1", ",", "False", ")", "\n", "\n", "sub_mask_id", "=", "multicrop", ".", "crop3d_cpu", "(", "mask", ",", "coords", ",", "\n", "self", ".", "sub_sample_size", ",", "self", ".", "sub_sample_size", ",", "self", ".", "sub_sample_size", ",", "3", ",", "False", ")", "\n", "\n", "if", "self", ".", "return_target", ":", "\n", "            ", "target", "=", "multicrop", ".", "crop3d_cpu", "(", "\n", "label", ",", "coords", ",", "\n", "self", ".", "target_size", ",", "self", ".", "target_size", ",", "self", ".", "target_size", ",", "1", ",", "False", ")", "\n", "samples", ",", "sub_samples", ",", "mask_id", ",", "sub_mask_id", ",", "target", "=", "self", ".", "transforms", "(", "[", "samples", ",", "sub_samples", ",", "mask_id", ",", "sub_mask_id", ",", "target", "]", ")", "\n", "", "else", ":", "\n", "            ", "samples", ",", "sub_samples", ",", "mask_id", ",", "sub_mask_id", "=", "self", ".", "transforms", "(", "[", "samples", ",", "sub_samples", ",", "mask_id", ",", "sub_mask_id", "]", ")", "\n", "target", "=", "coords", "\n", "\n", "", "if", "self", ".", "for_train", ":", "label", "=", "_zero", "\n", "\n", "samples", "=", "samples", ".", "permute", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "sub_samples", "=", "sub_samples", ".", "permute", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "\n", "#samples = self.add_mask(samples, mask_id, 1)", "\n", "#sub_samples = self.add_mask(sub_samples, sub_mask_id, 1)", "\n", "\n", "return", "(", "samples", ",", "sub_samples", ",", "target", ",", "mask_id", ",", "sub_mask_id", ")", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData28.__len__": [[129, 131], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData28.collate": [[132, 142], ["list", "torch.cat", "zip", "torch.cat", "torch.randperm", "zip"], "methods", ["None"], ["", "def", "collate", "(", "self", ",", "batch", ")", ":", "\n", "        ", "data", ",", "label", "=", "list", "(", "zip", "(", "*", "batch", ")", ")", "\n", "data", "=", "[", "torch", ".", "cat", "(", "v", ")", "for", "v", "in", "zip", "(", "*", "data", ")", "]", "\n", "label", "=", "torch", ".", "cat", "(", "label", ")", "\n", "\n", "if", "self", ".", "for_train", ":", "\n", "            ", "perm", "=", "torch", ".", "randperm", "(", "data", "[", "0", "]", ".", "shape", "[", "0", "]", ")", "\n", "data", "=", "[", "t", "[", "perm", "]", "for", "t", "in", "data", "]", "\n", "\n", "", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData25.__init__": [[145, 175], ["data_utils.get_all_coords", "numpy.ceil().astype", "eval", "open", "line.strip.strip.strip", "names.append", "os.path.join", "paths.append", "numpy.ceil", "line.strip.strip.split", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.get_all_coords"], ["    ", "def", "__init__", "(", "self", ",", "list_file", ",", "root", "=", "''", ",", "num_patches", "=", "20", ",", "for_train", "=", "False", ",", "\n", "transforms", "=", "''", ",", "return_target", "=", "True", ",", "crop", "=", "True", ",", "\n", "sample_size", "=", "25", ",", "sub_sample_size", "=", "19", ",", "target_size", "=", "19", ")", ":", "\n", "        ", "paths", ",", "names", "=", "[", "]", ",", "[", "]", "\n", "with", "open", "(", "list_file", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "name", "=", "line", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "names", ".", "append", "(", "name", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "line", ",", "name", "+", "'_'", ")", "\n", "paths", ".", "append", "(", "path", ")", "\n", "\n", "", "", "self", ".", "root", "=", "root", "\n", "self", ".", "names", "=", "names", "\n", "self", ".", "paths", "=", "paths", "\n", "self", ".", "crop", "=", "crop", "\n", "self", ".", "num_patches", "=", "num_patches", "\n", "self", ".", "for_train", "=", "for_train", "\n", "self", ".", "return_target", "=", "return_target", "\n", "\n", "self", ".", "sample_size", "=", "sample_size", "\n", "self", ".", "sub_sample_size", "=", "sub_sample_size", "\n", "self", ".", "target_size", "=", "target_size", "\n", "\n", "self", ".", "suffix", "=", "'{}x{}x{}_'", ".", "format", "(", "sample_size", ",", "sample_size", ",", "sample_size", ")", "\n", "\n", "self", ".", "all_coords", "=", "get_all_coords", "(", "target_size", ")", "\n", "self", ".", "shape", "=", "np", ".", "ceil", "(", "np", ".", "array", "(", "_shape", ",", "dtype", "=", "'float32'", ")", "/", "target_size", ")", ".", "astype", "(", "'int'", ")", "\n", "\n", "self", ".", "transforms", "=", "eval", "(", "transforms", "or", "'Identity()'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData25.__getitem__": [[177, 238], ["data_utils.pkload", "numpy.load", "torch.from_numpy", "multicrop.crop3d_cpu", "multicrop.crop3d_cpu", "multicrop.crop3d_cpu", "multicrop.crop3d_cpu", "samples.permute().contiguous.permute().contiguous.permute().contiguous", "sub_samples.permute().contiguous.permute().contiguous.permute().contiguous", "torch.from_numpy", "torch.from_numpy", "dualpath.DualData25.transforms", "images.permute().contiguous.permute().contiguous.permute().contiguous", "data_utils.pkload", "torch.cat", "multicrop.crop3d_cpu", "dualpath.DualData25.transforms", "dualpath.DualData25.transforms", "images.permute().contiguous.permute().contiguous.unsqueeze", "label.unsqueeze", "torch.from_numpy.unsqueeze", "images.permute().contiguous.permute().contiguous.squeeze", "label.squeeze", "torch.from_numpy.squeeze", "samples.permute().contiguous.permute().contiguous.permute", "sub_samples.permute().contiguous.permute().contiguous.permute", "images.permute().contiguous.permute().contiguous.permute", "data_utils.sample"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.pkload", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.pkload", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", "=", "self", ".", "paths", "[", "index", "]", "\n", "\n", "# faster than niffty", "\n", "#images, label = pkload(path + 'data_f32_divm.pkl')", "\n", "\n", "#images, label = pkload(path + 'data_f32.pkl')", "\n", "#images, label = torch.tensor(images), torch.tensor(label)", "\n", "\n", "images", ",", "label", "=", "pkload", "(", "path", "+", "'data_f32.pkl'", ")", "\n", "images", ",", "label", "=", "torch", ".", "from_numpy", "(", "images", ")", ",", "torch", ".", "from_numpy", "(", "label", ")", "\n", "\n", "\n", "mask", "=", "np", ".", "load", "(", "path", "+", "'HarvardOxford-sub.npy'", ")", "\n", "mask", "=", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "\n", "if", "not", "self", ".", "crop", ":", "\n", "# transformation needs nhwtc", "\n", "            ", "images", ",", "label", ",", "mask", "=", "images", ".", "unsqueeze", "(", "0", ")", ",", "label", ".", "unsqueeze", "(", "0", ")", ",", "mask", ".", "unsqueeze", "(", "0", ")", "\n", "images", ",", "label", ",", "mask", "=", "self", ".", "transforms", "(", "[", "images", ",", "label", ",", "mask", "]", ")", "\n", "images", ",", "label", ",", "mask", "=", "images", ".", "squeeze", "(", "0", ")", ",", "label", ".", "squeeze", "(", "0", ")", ",", "mask", ".", "squeeze", "(", "0", ")", "\n", "images", "=", "images", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "\n", "return", "(", "images", ",", "self", ".", "all_coords", ",", "mask", ")", ",", "label", "\n", "\n", "", "if", "self", ".", "for_train", ":", "\n", "            ", "fg", ",", "bg", "=", "pkload", "(", "path", "+", "self", ".", "suffix", "+", "'coords.pkl'", ")", "\n", "coords", "=", "torch", ".", "cat", "(", "[", "sample", "(", "x", ",", "self", ".", "num_patches", "//", "2", ")", "for", "x", "in", "(", "fg", ",", "bg", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "coords", "=", "self", ".", "all_coords", "\n", "\n", "", "samples", "=", "multicrop", ".", "crop3d_cpu", "(", "images", ",", "coords", ",", "\n", "self", ".", "sample_size", ",", "self", ".", "sample_size", ",", "self", ".", "sample_size", ",", "1", ",", "False", ")", "\n", "\n", "sub_samples", "=", "multicrop", ".", "crop3d_cpu", "(", "images", ",", "coords", ",", "\n", "self", ".", "sub_sample_size", ",", "self", ".", "sub_sample_size", ",", "self", ".", "sub_sample_size", ",", "3", ",", "False", ")", "\n", "\n", "mask_id", "=", "multicrop", ".", "crop3d_cpu", "(", "mask", ",", "coords", ",", "\n", "self", ".", "sample_size", ",", "self", ".", "sample_size", ",", "self", ".", "sample_size", ",", "1", ",", "False", ")", "\n", "\n", "sub_mask_id", "=", "multicrop", ".", "crop3d_cpu", "(", "mask", ",", "coords", ",", "\n", "self", ".", "sub_sample_size", ",", "self", ".", "sub_sample_size", ",", "self", ".", "sub_sample_size", ",", "3", ",", "False", ")", "\n", "\n", "if", "self", ".", "return_target", ":", "\n", "            ", "target", "=", "multicrop", ".", "crop3d_cpu", "(", "\n", "label", ",", "coords", ",", "\n", "self", ".", "target_size", ",", "self", ".", "target_size", ",", "self", ".", "target_size", ",", "1", ",", "False", ")", "\n", "samples", ",", "sub_samples", ",", "mask_id", ",", "sub_mask_id", ",", "target", "=", "self", ".", "transforms", "(", "[", "samples", ",", "sub_samples", ",", "mask_id", ",", "sub_mask_id", ",", "target", "]", ")", "\n", "", "else", ":", "\n", "            ", "samples", ",", "sub_samples", ",", "mask_id", ",", "sub_mask_id", "=", "self", ".", "transforms", "(", "[", "samples", ",", "sub_samples", ",", "mask_id", ",", "sub_mask_id", "]", ")", "\n", "target", "=", "coords", "\n", "\n", "", "if", "self", ".", "for_train", ":", "label", "=", "_zero", "\n", "\n", "samples", "=", "samples", ".", "permute", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "sub_samples", "=", "sub_samples", ".", "permute", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "\n", "#samples = self.add_mask(samples, mask_id, 1)", "\n", "#sub_samples = self.add_mask(sub_samples, sub_mask_id, 1)", "\n", "\n", "return", "(", "samples", ",", "sub_samples", ",", "target", ",", "mask_id", ",", "sub_mask_id", ")", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData25.__len__": [[250, 252], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData25.collate": [[253, 263], ["list", "torch.cat", "zip", "torch.cat", "torch.randperm", "zip"], "methods", ["None"], ["", "def", "collate", "(", "self", ",", "batch", ")", ":", "\n", "        ", "data", ",", "label", "=", "list", "(", "zip", "(", "*", "batch", ")", ")", "\n", "data", "=", "[", "torch", ".", "cat", "(", "v", ")", "for", "v", "in", "zip", "(", "*", "data", ")", "]", "\n", "label", "=", "torch", ".", "cat", "(", "label", ")", "\n", "\n", "if", "self", ".", "for_train", ":", "\n", "            ", "perm", "=", "torch", ".", "randperm", "(", "data", "[", "0", "]", ".", "shape", "[", "0", "]", ")", "\n", "data", "=", "[", "t", "[", "perm", "]", "for", "t", "in", "data", "]", "\n", "\n", "", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData.__init__": [[266, 296], ["data_utils.get_all_coords", "numpy.ceil().astype", "eval", "open", "line.strip.strip.strip", "names.append", "os.path.join", "paths.append", "numpy.ceil", "line.strip.strip.split", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.get_all_coords"], ["    ", "def", "__init__", "(", "self", ",", "list_file", ",", "root", "=", "''", ",", "num_patches", "=", "20", ",", "for_train", "=", "False", ",", "\n", "transforms", "=", "''", ",", "return_target", "=", "True", ",", "crop", "=", "True", ",", "\n", "sample_size", "=", "25", ",", "sub_sample_size", "=", "19", ",", "target_size", "=", "19", ")", ":", "\n", "        ", "paths", ",", "names", "=", "[", "]", ",", "[", "]", "\n", "with", "open", "(", "list_file", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "name", "=", "line", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "names", ".", "append", "(", "name", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "line", ",", "name", "+", "'_'", ")", "\n", "paths", ".", "append", "(", "path", ")", "\n", "\n", "", "", "self", ".", "root", "=", "root", "\n", "self", ".", "names", "=", "names", "\n", "self", ".", "paths", "=", "paths", "\n", "self", ".", "crop", "=", "crop", "\n", "self", ".", "num_patches", "=", "num_patches", "\n", "self", ".", "for_train", "=", "for_train", "\n", "self", ".", "return_target", "=", "return_target", "\n", "\n", "self", ".", "sample_size", "=", "sample_size", "\n", "self", ".", "sub_sample_size", "=", "sub_sample_size", "\n", "self", ".", "target_size", "=", "target_size", "\n", "\n", "self", ".", "suffix", "=", "'{}x{}x{}_'", ".", "format", "(", "sample_size", ",", "sample_size", ",", "sample_size", ")", "\n", "\n", "self", ".", "all_coords", "=", "get_all_coords", "(", "target_size", ")", "\n", "self", ".", "shape", "=", "np", ".", "ceil", "(", "np", ".", "array", "(", "_shape", ",", "dtype", "=", "'float32'", ")", "/", "target_size", ")", ".", "astype", "(", "'int'", ")", "\n", "\n", "self", ".", "transforms", "=", "eval", "(", "transforms", "or", "'Identity()'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData.__getitem__": [[297, 345], ["data_utils.pkload", "multicrop.crop3d_cpu", "multicrop.crop3d_cpu", "samples.permute().contiguous.permute().contiguous.permute().contiguous", "sub_samples.permute().contiguous.permute().contiguous.permute().contiguous", "torch.from_numpy", "torch.from_numpy", "dualpath.DualData.transforms", "images.permute().contiguous.permute().contiguous.permute().contiguous", "data_utils.pkload", "torch.cat", "multicrop.crop3d_cpu", "dualpath.DualData.transforms", "dualpath.DualData.transforms", "images.permute().contiguous.permute().contiguous.unsqueeze", "label.unsqueeze", "images.permute().contiguous.permute().contiguous.squeeze", "label.squeeze", "samples.permute().contiguous.permute().contiguous.permute", "sub_samples.permute().contiguous.permute().contiguous.permute", "images.permute().contiguous.permute().contiguous.permute", "data_utils.sample"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.pkload", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.pkload", "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", "=", "self", ".", "paths", "[", "index", "]", "\n", "\n", "# faster than niffty", "\n", "#images, label = pkload(path + 'data_f32_divm.pkl')", "\n", "\n", "#images, label = pkload(path + 'data_f32.pkl')", "\n", "#images, label = torch.tensor(images), torch.tensor(label)", "\n", "\n", "images", ",", "label", "=", "pkload", "(", "path", "+", "'data_f32.pkl'", ")", "\n", "images", ",", "label", "=", "torch", ".", "from_numpy", "(", "images", ")", ",", "torch", ".", "from_numpy", "(", "label", ")", "\n", "\n", "\n", "if", "not", "self", ".", "crop", ":", "\n", "# transformation needs nhwtc", "\n", "            ", "images", ",", "label", "=", "images", ".", "unsqueeze", "(", "0", ")", ",", "label", ".", "unsqueeze", "(", "0", ")", "\n", "images", ",", "label", "=", "self", ".", "transforms", "(", "[", "images", ",", "label", "]", ")", "\n", "images", ",", "label", "=", "images", ".", "squeeze", "(", "0", ")", ",", "label", ".", "squeeze", "(", "0", ")", "\n", "\n", "images", "=", "images", ".", "permute", "(", "3", ",", "0", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "return", "(", "images", ",", "self", ".", "all_coords", ")", ",", "label", "\n", "\n", "", "if", "self", ".", "for_train", ":", "\n", "            ", "fg", ",", "bg", "=", "pkload", "(", "path", "+", "self", ".", "suffix", "+", "'coords.pkl'", ")", "\n", "coords", "=", "torch", ".", "cat", "(", "[", "sample", "(", "x", ",", "self", ".", "num_patches", "//", "2", ")", "for", "x", "in", "(", "fg", ",", "bg", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "coords", "=", "self", ".", "all_coords", "\n", "\n", "", "samples", "=", "multicrop", ".", "crop3d_cpu", "(", "images", ",", "coords", ",", "\n", "self", ".", "sample_size", ",", "self", ".", "sample_size", ",", "self", ".", "sample_size", ",", "1", ",", "False", ")", "\n", "\n", "sub_samples", "=", "multicrop", ".", "crop3d_cpu", "(", "images", ",", "coords", ",", "\n", "self", ".", "sub_sample_size", ",", "self", ".", "sub_sample_size", ",", "self", ".", "sub_sample_size", ",", "3", ",", "False", ")", "\n", "\n", "if", "self", ".", "return_target", ":", "\n", "            ", "target", "=", "multicrop", ".", "crop3d_cpu", "(", "\n", "label", ",", "coords", ",", "\n", "self", ".", "target_size", ",", "self", ".", "target_size", ",", "self", ".", "target_size", ",", "1", ",", "False", ")", "\n", "samples", ",", "sub_samples", ",", "target", "=", "self", ".", "transforms", "(", "[", "samples", ",", "sub_samples", ",", "target", "]", ")", "\n", "", "else", ":", "\n", "            ", "samples", ",", "sub_samples", "=", "self", ".", "transforms", "(", "[", "samples", ",", "sub_samples", "]", ")", "\n", "target", "=", "coords", "\n", "\n", "", "if", "self", ".", "for_train", ":", "label", "=", "_zero", "\n", "\n", "samples", "=", "samples", ".", "permute", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "sub_samples", "=", "sub_samples", ".", "permute", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "return", "(", "samples", ",", "sub_samples", ",", "target", ")", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData.__len__": [[346, 348], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.dualpath.DualData.collate": [[349, 359], ["list", "torch.cat", "zip", "torch.cat", "torch.randperm", "zip"], "methods", ["None"], ["", "def", "collate", "(", "self", ",", "batch", ")", ":", "\n", "        ", "data", ",", "label", "=", "list", "(", "zip", "(", "*", "batch", ")", ")", "\n", "data", "=", "[", "torch", ".", "cat", "(", "v", ")", "for", "v", "in", "zip", "(", "*", "data", ")", "]", "\n", "label", "=", "torch", ".", "cat", "(", "label", ")", "\n", "\n", "if", "self", ".", "for_train", ":", "\n", "            ", "perm", "=", "torch", ".", "randperm", "(", "data", "[", "0", "]", ".", "shape", "[", "0", "]", ")", "\n", "data", "=", "[", "t", "[", "perm", "]", "for", "t", "in", "data", "]", "\n", "\n", "", "return", "data", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Uniform.__init__": [[4, 7], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "        ", "self", ".", "a", "=", "a", "\n", "self", ".", "b", "=", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Uniform.sample": [[8, 10], ["random.uniform"], "methods", ["None"], ["", "def", "sample", "(", "self", ")", ":", "\n", "        ", "return", "random", ".", "uniform", "(", "self", ".", "a", ",", "self", ".", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Gaussian.__init__": [[12, 15], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Gaussian.sample": [[16, 18], ["random.gauss"], "methods", ["None"], ["", "def", "sample", "(", "self", ")", ":", "\n", "        ", "return", "random", ".", "gauss", "(", "self", ".", "mean", ",", "self", ".", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.__init__": [[20, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "val", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.rand.Constant.sample": [[23, 25], ["None"], "methods", ["None"], ["", "def", "sample", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.parcellation.nib_load": [[5, 12], ["nibabel.load", "nib.load.get_data", "nib.load.uncache"], "function", ["None"], ["def", "nib_load", "(", "file_name", ")", ":", "\n", "    ", "proxy", "=", "nib", ".", "load", "(", "file_name", ")", "\n", "data", "=", "proxy", ".", "get_data", "(", ")", "\n", "#print('thuyen', data.dtype)", "\n", "#data = data.astype('float32')", "\n", "proxy", ".", "uncache", "(", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData28.__init__": [[20, 37], ["eval", "data_utils.gen_feats", "open", "line.strip.strip.strip", "names.append", "os.path.join", "paths.append", "line.strip.strip.split"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.gen_feats"], ["    ", "def", "__init__", "(", "self", ",", "list_file", ",", "root", "=", "''", ",", "for_train", "=", "False", ",", "\n", "transforms", "=", "''", ",", "return_target", "=", "True", ",", "crop", "=", "True", ")", ":", "\n", "        ", "paths", ",", "names", "=", "[", "]", ",", "[", "]", "\n", "with", "open", "(", "list_file", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "name", "=", "line", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "names", ".", "append", "(", "name", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "line", ",", "name", "+", "'_'", ")", "\n", "paths", ".", "append", "(", "path", ")", "\n", "\n", "", "", "self", ".", "names", "=", "names", "\n", "self", ".", "paths", "=", "paths", "\n", "self", ".", "return_target", "=", "return_target", "\n", "\n", "self", ".", "transforms", "=", "eval", "(", "transforms", "or", "'Identity()'", ")", "\n", "self", ".", "feats", "=", "gen_feats", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData28.__getitem__": [[38, 65], ["data_utils.pkload", "numpy.concatenate", "numpy.load", "numpy.ascontiguousarray", "numpy.ascontiguousarray", "singlepath.SingleData28.transforms", "numpy.array", "numpy.ascontiguousarray.transpose", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "singlepath.SingleData28.transforms", "b.sum"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.pkload"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", "=", "self", ".", "paths", "[", "index", "]", "\n", "\n", "x", ",", "y", "=", "pkload", "(", "path", "+", "'data_f32.pkl'", ")", "\n", "x", "=", "np", ".", "concatenate", "(", "[", "x", ",", "self", ".", "feats", "]", ",", "-", "1", ")", "\n", "\n", "mask", "=", "np", ".", "load", "(", "path", "+", "'HarvardOxford-sub.npy'", ")", "\n", "# transforms work with nhwtc", "\n", "x", ",", "y", ",", "mask", "=", "x", "[", "None", ",", "...", "]", ",", "y", "[", "None", ",", "...", "]", ",", "mask", "[", "None", ",", "...", "]", "\n", "\n", "done", "=", "False", "\n", "if", "self", ".", "return_target", ":", "\n", "            ", "while", "not", "done", ":", "\n", "                ", "a", ",", "b", ",", "c", "=", "self", ".", "transforms", "(", "[", "x", ",", "y", ",", "mask", "]", ")", "\n", "if", "b", ".", "sum", "(", ")", ">", "0", ":", "\n", "                    ", "done", "=", "True", "\n", "x", ",", "y", ",", "mask", "=", "a", ",", "b", ",", "c", "\n", "", "", "", "else", ":", "\n", "            ", "x", ",", "mask", "=", "self", ".", "transforms", "(", "[", "x", ",", "mask", "]", ")", "\n", "y", "=", "np", ".", "array", "(", "[", "1", "]", ")", "\n", "\n", "", "x", "=", "np", ".", "ascontiguousarray", "(", "x", ".", "transpose", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", ")", "\n", "y", "=", "np", ".", "ascontiguousarray", "(", "y", ")", "\n", "\n", "x", ",", "y", ",", "mask", "=", "torch", ".", "from_numpy", "(", "x", ")", ",", "torch", ".", "from_numpy", "(", "y", ")", ",", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "\n", "return", "x", ",", "y", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData28.__len__": [[67, 69], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData28.collate": [[70, 72], ["torch.cat", "zip"], "methods", ["None"], ["", "def", "collate", "(", "self", ",", "batch", ")", ":", "\n", "        ", "return", "[", "torch", ".", "cat", "(", "v", ")", "for", "v", "in", "zip", "(", "*", "batch", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData25.__init__": [[86, 102], ["eval", "open", "line.strip.strip.strip", "names.append", "os.path.join", "paths.append", "line.strip.strip.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "list_file", ",", "root", "=", "''", ",", "for_train", "=", "False", ",", "\n", "transforms", "=", "''", ",", "return_target", "=", "True", ",", "crop", "=", "True", ")", ":", "\n", "        ", "paths", ",", "names", "=", "[", "]", ",", "[", "]", "\n", "with", "open", "(", "list_file", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "name", "=", "line", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "names", ".", "append", "(", "name", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "line", ",", "name", "+", "'_'", ")", "\n", "paths", ".", "append", "(", "path", ")", "\n", "\n", "", "", "self", ".", "names", "=", "names", "\n", "self", ".", "paths", "=", "paths", "\n", "self", ".", "return_target", "=", "return_target", "\n", "\n", "self", ".", "transforms", "=", "eval", "(", "transforms", "or", "'Identity()'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData25.__getitem__": [[103, 129], ["data_utils.pkload", "numpy.load", "numpy.ascontiguousarray", "numpy.ascontiguousarray", "singlepath.SingleData25.transforms", "numpy.array", "numpy.ascontiguousarray.transpose", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "singlepath.SingleData25.transforms", "b.sum"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.pkload"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", "=", "self", ".", "paths", "[", "index", "]", "\n", "\n", "x", ",", "y", "=", "pkload", "(", "path", "+", "'data_f32.pkl'", ")", "\n", "mask", "=", "np", ".", "load", "(", "path", "+", "'HarvardOxford-sub.npy'", ")", "\n", "\n", "# transforms work with nhwtc", "\n", "x", ",", "y", ",", "mask", "=", "x", "[", "None", ",", "...", "]", ",", "y", "[", "None", ",", "...", "]", ",", "mask", "[", "None", ",", "...", "]", "\n", "\n", "done", "=", "False", "\n", "if", "self", ".", "return_target", ":", "\n", "            ", "while", "not", "done", ":", "\n", "                ", "a", ",", "b", ",", "c", "=", "self", ".", "transforms", "(", "[", "x", ",", "y", ",", "mask", "]", ")", "\n", "if", "b", ".", "sum", "(", ")", ">", "0", ":", "\n", "                    ", "done", "=", "True", "\n", "x", ",", "y", ",", "mask", "=", "a", ",", "b", ",", "c", "\n", "", "", "", "else", ":", "\n", "            ", "x", ",", "mask", "=", "self", ".", "transforms", "(", "[", "x", ",", "mask", "]", ")", "\n", "y", "=", "np", ".", "array", "(", "[", "1", "]", ")", "\n", "\n", "", "x", "=", "np", ".", "ascontiguousarray", "(", "x", ".", "transpose", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", ")", "\n", "y", "=", "np", ".", "ascontiguousarray", "(", "y", ")", "\n", "\n", "x", ",", "y", ",", "mask", "=", "torch", ".", "from_numpy", "(", "x", ")", ",", "torch", ".", "from_numpy", "(", "y", ")", ",", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "\n", "return", "x", ",", "y", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData25.__len__": [[130, 132], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData25.collate": [[133, 135], ["torch.cat", "zip"], "methods", ["None"], ["", "def", "collate", "(", "self", ",", "batch", ")", ":", "\n", "        ", "return", "[", "torch", ".", "cat", "(", "v", ")", "for", "v", "in", "zip", "(", "*", "batch", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__init__": [[149, 165], ["eval", "open", "line.strip.strip.strip", "names.append", "os.path.join", "paths.append", "line.strip.strip.split"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "list_file", ",", "root", "=", "''", ",", "for_train", "=", "False", ",", "\n", "transforms", "=", "''", ",", "return_target", "=", "True", ",", "crop", "=", "True", ")", ":", "\n", "        ", "paths", ",", "names", "=", "[", "]", ",", "[", "]", "\n", "with", "open", "(", "list_file", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "name", "=", "line", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "names", ".", "append", "(", "name", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "line", ",", "name", "+", "'_'", ")", "\n", "paths", ".", "append", "(", "path", ")", "\n", "\n", "", "", "self", ".", "names", "=", "names", "\n", "self", ".", "paths", "=", "paths", "\n", "self", ".", "return_target", "=", "return_target", "\n", "\n", "self", ".", "transforms", "=", "eval", "(", "transforms", "or", "'Identity()'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__getitem__": [[166, 191], ["data_utils.pkload", "numpy.ascontiguousarray", "numpy.ascontiguousarray", "singlepath.SingleData.transforms", "singlepath.SingleData.transpose", "torch.from_numpy", "torch.from_numpy", "singlepath.SingleData.transforms", "b.sum"], "methods", ["home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.data_utils.pkload"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", "=", "self", ".", "paths", "[", "index", "]", "\n", "\n", "x", ",", "y", "=", "pkload", "(", "path", "+", "'data_f32.pkl'", ")", "\n", "\n", "# transforms work with nhwtc", "\n", "x", ",", "y", "=", "x", "[", "None", ",", "...", "]", ",", "y", "[", "None", ",", "...", "]", "\n", "\n", "done", "=", "False", "\n", "if", "self", ".", "return_target", ":", "\n", "            ", "while", "not", "done", ":", "\n", "                ", "a", ",", "b", "=", "self", ".", "transforms", "(", "[", "x", ",", "y", "]", ")", "\n", "if", "b", ".", "sum", "(", ")", ">", "0", ":", "\n", "                    ", "done", "=", "True", "\n", "x", ",", "y", "=", "a", ",", "b", "\n", "\n", "", "", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "transforms", "(", "x", ")", "\n", "\n", "", "x", "=", "np", ".", "ascontiguousarray", "(", "x", ".", "transpose", "(", "0", ",", "4", ",", "1", ",", "2", ",", "3", ")", ")", "\n", "y", "=", "np", ".", "ascontiguousarray", "(", "y", ")", "\n", "\n", "x", ",", "y", "=", "torch", ".", "from_numpy", "(", "x", ")", ",", "torch", ".", "from_numpy", "(", "y", ")", "\n", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.__len__": [[192, 194], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jeya-maria-jose_KiU-Net-pytorch.data.singlepath.SingleData.collate": [[195, 197], ["torch.cat", "zip"], "methods", ["None"], ["", "def", "collate", "(", "self", ",", "batch", ")", ":", "\n", "        ", "return", "[", "torch", ".", "cat", "(", "v", ")", "for", "v", "in", "zip", "(", "*", "batch", ")", "]", "\n", "\n"]]}