{"home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.preprocessing.get_count": [[34, 38], ["tp[].groupby", "tp[].groupby.size"], "function", ["None"], ["def", "get_count", "(", "tp", ",", "id", ")", ":", "\n", "    ", "playcount_groupbyid", "=", "tp", "[", "[", "id", "]", "]", ".", "groupby", "(", "id", ",", "as_index", "=", "False", ")", "\n", "count", "=", "playcount_groupbyid", ".", "size", "(", ")", "\n", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.preprocessing.filter_triplets": [[40, 51], ["preprocessing.get_count", "preprocessing.get_count", "preprocessing.get_count", "preprocessing.get_count", "tp[].isin", "tp[].isin"], "function", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.preprocessing.get_count", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.preprocessing.get_count", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.preprocessing.get_count", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.preprocessing.get_count"], ["", "def", "filter_triplets", "(", "tp", ",", "min_uc", "=", "min_uc", ",", "min_sc", "=", "min_sc", ")", ":", "\n", "    ", "if", "min_sc", ">", "0", ":", "\n", "        ", "itemcount", "=", "get_count", "(", "tp", ",", "'movieId'", ")", "\n", "tp", "=", "tp", "[", "tp", "[", "'movieId'", "]", ".", "isin", "(", "itemcount", ".", "index", "[", "itemcount", ">=", "min_sc", "]", ")", "]", "\n", "\n", "", "if", "min_uc", ">", "0", ":", "\n", "        ", "usercount", "=", "get_count", "(", "tp", ",", "'userId'", ")", "\n", "tp", "=", "tp", "[", "tp", "[", "'userId'", "]", ".", "isin", "(", "usercount", ".", "index", "[", "usercount", ">=", "min_uc", "]", ")", "]", "\n", "\n", "", "usercount", ",", "itemcount", "=", "get_count", "(", "tp", ",", "'userId'", ")", ",", "get_count", "(", "tp", ",", "'movieId'", ")", "\n", "return", "tp", ",", "usercount", ",", "itemcount", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.preprocessing.split_train_test_proportion": [[91, 117], ["data.groupby", "numpy.random.seed", "enumerate", "pandas.concat", "pandas.concat", "list", "list", "len", "numpy.zeros", "tr_list.append", "te_list.append", "tr_list.append", "print", "sys.stdout.flush", "numpy.random.choice().astype", "numpy.logical_not", "numpy.random.choice", "int"], "function", ["None"], ["", "", "def", "split_train_test_proportion", "(", "data", ",", "test_prop", "=", "0.2", ")", ":", "\n", "    ", "data_grouped_by_user", "=", "data", ".", "groupby", "(", "'userId'", ")", "\n", "tr_list", ",", "te_list", "=", "list", "(", ")", ",", "list", "(", ")", "\n", "\n", "np", ".", "random", ".", "seed", "(", "98765", ")", "\n", "\n", "for", "i", ",", "(", "_", ",", "group", ")", "in", "enumerate", "(", "data_grouped_by_user", ")", ":", "\n", "        ", "n_items_u", "=", "len", "(", "group", ")", "\n", "\n", "if", "n_items_u", ">=", "5", ":", "\n", "            ", "idx", "=", "np", ".", "zeros", "(", "n_items_u", ",", "dtype", "=", "'bool'", ")", "\n", "idx", "[", "np", ".", "random", ".", "choice", "(", "n_items_u", ",", "size", "=", "int", "(", "test_prop", "*", "n_items_u", ")", ",", "replace", "=", "False", ")", ".", "astype", "(", "'int64'", ")", "]", "=", "True", "\n", "\n", "tr_list", ".", "append", "(", "group", "[", "np", ".", "logical_not", "(", "idx", ")", "]", ")", "\n", "te_list", ".", "append", "(", "group", "[", "idx", "]", ")", "\n", "", "else", ":", "\n", "            ", "tr_list", ".", "append", "(", "group", ")", "\n", "\n", "", "if", "i", "%", "1000", "==", "0", ":", "\n", "            ", "print", "(", "\"%d users sampled\"", "%", "i", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "", "", "data_tr", "=", "pd", ".", "concat", "(", "tr_list", ")", "\n", "data_te", "=", "pd", ".", "concat", "(", "te_list", ")", "\n", "\n", "return", "data_tr", ",", "data_te", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.preprocessing.numerize": [[129, 133], ["list", "list", "pandas.DataFrame", "map", "map"], "function", ["None"], ["def", "numerize", "(", "tp", ")", ":", "\n", "    ", "uid", "=", "list", "(", "map", "(", "lambda", "x", ":", "profile2id", "[", "x", "]", ",", "tp", "[", "'userId'", "]", ")", ")", "\n", "sid", "=", "list", "(", "map", "(", "lambda", "x", ":", "show2id", "[", "x", "]", ",", "tp", "[", "'movieId'", "]", ")", ")", "\n", "return", "pd", ".", "DataFrame", "(", "data", "=", "{", "'uid'", ":", "uid", ",", "'sid'", ":", "sid", "}", ",", "columns", "=", "[", "'uid'", ",", "'sid'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.CompositePrior.__init__": [[17, 33], ["torch.nn.Module.__init__", "torch.nn.Parameter", "model.CompositePrior.mu_prior.data.fill_", "torch.nn.Parameter", "model.CompositePrior.logvar_prior.data.fill_", "torch.nn.Parameter", "model.CompositePrior.logvar_uniform_prior.data.fill_", "model.Encoder", "model.CompositePrior.encoder_old.requires_grad_", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_dim", ",", "latent_dim", ",", "input_dim", ",", "mixture_weights", "=", "[", "3", "/", "20", ",", "3", "/", "4", ",", "1", "/", "10", "]", ")", ":", "\n", "        ", "super", "(", "CompositePrior", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mixture_weights", "=", "mixture_weights", "\n", "\n", "self", ".", "mu_prior", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "latent_dim", ")", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "mu_prior", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n", "self", ".", "logvar_prior", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "latent_dim", ")", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "logvar_prior", ".", "data", ".", "fill_", "(", "0", ")", "\n", "\n", "self", ".", "logvar_uniform_prior", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ",", "latent_dim", ")", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "logvar_uniform_prior", ".", "data", ".", "fill_", "(", "10", ")", "\n", "\n", "self", ".", "encoder_old", "=", "Encoder", "(", "hidden_dim", ",", "latent_dim", ",", "input_dim", ")", "\n", "self", ".", "encoder_old", ".", "requires_grad_", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.CompositePrior.forward": [[34, 47], ["model.CompositePrior.encoder_old", "model.log_norm_pdf", "model.log_norm_pdf", "model.log_norm_pdf", "torch.stack", "torch.logsumexp", "g.add", "numpy.log", "zip"], "methods", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.log_norm_pdf", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.log_norm_pdf", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.log_norm_pdf"], ["", "def", "forward", "(", "self", ",", "x", ",", "z", ")", ":", "\n", "        ", "post_mu", ",", "post_logvar", "=", "self", ".", "encoder_old", "(", "x", ",", "0", ")", "\n", "\n", "stnd_prior", "=", "log_norm_pdf", "(", "z", ",", "self", ".", "mu_prior", ",", "self", ".", "logvar_prior", ")", "\n", "post_prior", "=", "log_norm_pdf", "(", "z", ",", "post_mu", ",", "post_logvar", ")", "\n", "unif_prior", "=", "log_norm_pdf", "(", "z", ",", "self", ".", "mu_prior", ",", "self", ".", "logvar_uniform_prior", ")", "\n", "\n", "gaussians", "=", "[", "stnd_prior", ",", "post_prior", ",", "unif_prior", "]", "\n", "gaussians", "=", "[", "g", ".", "add", "(", "np", ".", "log", "(", "w", ")", ")", "for", "g", ",", "w", "in", "zip", "(", "gaussians", ",", "self", ".", "mixture_weights", ")", "]", "\n", "\n", "density_per_gaussian", "=", "torch", ".", "stack", "(", "gaussians", ",", "dim", "=", "-", "1", ")", "\n", "\n", "return", "torch", ".", "logsumexp", "(", "density_per_gaussian", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.Encoder.__init__": [[50, 65], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_dim", ",", "latent_dim", ",", "input_dim", ",", "eps", "=", "1e-1", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_dim", ",", "hidden_dim", ")", "\n", "self", ".", "ln1", "=", "nn", ".", "LayerNorm", "(", "hidden_dim", ",", "eps", "=", "eps", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", "\n", "self", ".", "ln2", "=", "nn", ".", "LayerNorm", "(", "hidden_dim", ",", "eps", "=", "eps", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", "\n", "self", ".", "ln3", "=", "nn", ".", "LayerNorm", "(", "hidden_dim", ",", "eps", "=", "eps", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", "\n", "self", ".", "ln4", "=", "nn", ".", "LayerNorm", "(", "hidden_dim", ",", "eps", "=", "eps", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", "\n", "self", ".", "ln5", "=", "nn", ".", "LayerNorm", "(", "hidden_dim", ",", "eps", "=", "eps", ")", "\n", "self", ".", "fc_mu", "=", "nn", ".", "Linear", "(", "hidden_dim", ",", "latent_dim", ")", "\n", "self", ".", "fc_logvar", "=", "nn", ".", "Linear", "(", "hidden_dim", ",", "latent_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.Encoder.forward": [[66, 78], ["torch.nn.functional.dropout.pow().sum().sqrt", "torch.nn.functional.dropout", "model.Encoder.ln1", "model.Encoder.ln2", "model.Encoder.ln3", "model.Encoder.ln4", "model.Encoder.ln5", "model.swish", "model.swish", "model.swish", "model.swish", "model.swish", "model.Encoder.fc_mu", "model.Encoder.fc_logvar", "torch.nn.functional.dropout.pow().sum", "model.Encoder.fc1", "model.Encoder.fc2", "torch.nn.functional.dropout.pow", "model.Encoder.fc3", "model.Encoder.fc4", "model.Encoder.fc5"], "methods", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.swish", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.swish", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.swish", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.swish", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.swish"], ["", "def", "forward", "(", "self", ",", "x", ",", "dropout_rate", ")", ":", "\n", "        ", "norm", "=", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", ".", "sqrt", "(", ")", "\n", "x", "=", "x", "/", "norm", "[", ":", ",", "None", "]", "\n", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "p", "=", "dropout_rate", ",", "training", "=", "self", ".", "training", ")", "\n", "\n", "h1", "=", "self", ".", "ln1", "(", "swish", "(", "self", ".", "fc1", "(", "x", ")", ")", ")", "\n", "h2", "=", "self", ".", "ln2", "(", "swish", "(", "self", ".", "fc2", "(", "h1", ")", "+", "h1", ")", ")", "\n", "h3", "=", "self", ".", "ln3", "(", "swish", "(", "self", ".", "fc3", "(", "h2", ")", "+", "h1", "+", "h2", ")", ")", "\n", "h4", "=", "self", ".", "ln4", "(", "swish", "(", "self", ".", "fc4", "(", "h3", ")", "+", "h1", "+", "h2", "+", "h3", ")", ")", "\n", "h5", "=", "self", ".", "ln5", "(", "swish", "(", "self", ".", "fc5", "(", "h4", ")", "+", "h1", "+", "h2", "+", "h3", "+", "h4", ")", ")", "\n", "return", "self", ".", "fc_mu", "(", "h5", ")", ",", "self", ".", "fc_logvar", "(", "h5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.VAE.__init__": [[81, 87], ["torch.nn.Module.__init__", "model.Encoder", "model.CompositePrior", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_dim", ",", "latent_dim", ",", "input_dim", ")", ":", "\n", "        ", "super", "(", "VAE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "Encoder", "(", "hidden_dim", ",", "latent_dim", ",", "input_dim", ")", "\n", "self", ".", "prior", "=", "CompositePrior", "(", "hidden_dim", ",", "latent_dim", ",", "input_dim", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "Linear", "(", "latent_dim", ",", "input_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.VAE.reparameterize": [[88, 95], ["torch.exp", "torch.randn_like", "torch.randn_like.mul().add_", "torch.randn_like.mul"], "methods", ["None"], ["", "def", "reparameterize", "(", "self", ",", "mu", ",", "logvar", ")", ":", "\n", "        ", "if", "self", ".", "training", ":", "\n", "            ", "std", "=", "torch", ".", "exp", "(", "0.5", "*", "logvar", ")", "\n", "eps", "=", "torch", ".", "randn_like", "(", "std", ")", "\n", "return", "eps", ".", "mul", "(", "std", ")", ".", "add_", "(", "mu", ")", "\n", "", "else", ":", "\n", "            ", "return", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.VAE.forward": [[96, 116], ["model.VAE.encoder", "model.VAE.reparameterize", "model.VAE.decoder", "user_ratings.sum", "torch.nn.functional.log_softmax", "model.log_norm_pdf", "model.VAE.prior"], "methods", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.VAE.reparameterize", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.log_norm_pdf"], ["", "", "def", "forward", "(", "self", ",", "user_ratings", ",", "beta", "=", "None", ",", "gamma", "=", "1", ",", "dropout_rate", "=", "0.5", ",", "calculate_loss", "=", "True", ")", ":", "\n", "        ", "mu", ",", "logvar", "=", "self", ".", "encoder", "(", "user_ratings", ",", "dropout_rate", "=", "dropout_rate", ")", "\n", "z", "=", "self", ".", "reparameterize", "(", "mu", ",", "logvar", ")", "\n", "x_pred", "=", "self", ".", "decoder", "(", "z", ")", "\n", "\n", "if", "calculate_loss", ":", "\n", "            ", "if", "gamma", ":", "\n", "                ", "norm", "=", "user_ratings", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "kl_weight", "=", "gamma", "*", "norm", "\n", "", "elif", "beta", ":", "\n", "                ", "kl_weight", "=", "beta", "\n", "\n", "", "mll", "=", "(", "F", ".", "log_softmax", "(", "x_pred", ",", "dim", "=", "-", "1", ")", "*", "user_ratings", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", ".", "mean", "(", ")", "\n", "kld", "=", "(", "log_norm_pdf", "(", "z", ",", "mu", ",", "logvar", ")", "-", "self", ".", "prior", "(", "user_ratings", ",", "z", ")", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", ".", "mul", "(", "kl_weight", ")", ".", "mean", "(", ")", "\n", "negative_elbo", "=", "-", "(", "mll", "-", "kld", ")", "\n", "\n", "return", "(", "mll", ",", "kld", ")", ",", "negative_elbo", "\n", "\n", "", "else", ":", "\n", "            ", "return", "x_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.VAE.update_prior": [[117, 119], ["model.VAE.prior.encoder_old.load_state_dict", "copy.deepcopy", "model.VAE.encoder.state_dict"], "methods", ["None"], ["", "", "def", "update_prior", "(", "self", ")", ":", "\n", "        ", "self", ".", "prior", ".", "encoder_old", ".", "load_state_dict", "(", "deepcopy", "(", "self", ".", "encoder", ".", "state_dict", "(", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.swish": [[9, 11], ["x.mul", "torch.sigmoid"], "function", ["None"], ["def", "swish", "(", "x", ")", ":", "\n", "    ", "return", "x", ".", "mul", "(", "torch", ".", "sigmoid", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.model.log_norm_pdf": [[12, 14], ["numpy.log", "logvar.exp"], "function", ["None"], ["", "def", "log_norm_pdf", "(", "x", ",", "mu", ",", "logvar", ")", ":", "\n", "    ", "return", "-", "0.5", "*", "(", "logvar", "+", "np", ".", "log", "(", "2", "*", "np", ".", "pi", ")", "+", "(", "x", "-", "mu", ")", ".", "pow", "(", "2", ")", "/", "logvar", ".", "exp", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.__init__": [[59, 64], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "device", ",", "idx", ",", "data_in", ",", "data_out", "=", "None", ")", ":", "\n", "        ", "self", ".", "_device", "=", "device", "\n", "self", ".", "_idx", "=", "idx", "\n", "self", ".", "_data_in", "=", "data_in", "\n", "self", ".", "_data_out", "=", "data_out", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.get_idx": [[65, 67], ["None"], "methods", ["None"], ["", "def", "get_idx", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.get_idx_to_dev": [[68, 70], ["torch.LongTensor().to", "torch.LongTensor", "run.Batch.get_idx"], "methods", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.get_idx"], ["", "def", "get_idx_to_dev", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "LongTensor", "(", "self", ".", "get_idx", "(", ")", ")", ".", "to", "(", "self", ".", "_device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.get_ratings": [[71, 74], ["None"], "methods", ["None"], ["", "def", "get_ratings", "(", "self", ",", "is_out", "=", "False", ")", ":", "\n", "        ", "data", "=", "self", ".", "_data_out", "if", "is_out", "else", "self", ".", "_data_in", "\n", "return", "data", "[", "self", ".", "_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.get_ratings_to_dev": [[75, 79], ["torch.Tensor().to", "torch.Tensor", "run.Batch.get_ratings().toarray", "run.Batch.get_ratings"], "methods", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.get_ratings"], ["", "def", "get_ratings_to_dev", "(", "self", ",", "is_out", "=", "False", ")", ":", "\n", "        ", "return", "torch", ".", "Tensor", "(", "\n", "self", ".", "get_ratings", "(", "is_out", ")", ".", "toarray", "(", ")", "\n", ")", ".", "to", "(", "self", ".", "_device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.generate": [[38, 56], ["int", "range", "numpy.arange", "numpy.random.shuffle", "numpy.arange", "min", "run.Batch"], "function", ["None"], ["def", "generate", "(", "batch_size", ",", "device", ",", "data_in", ",", "data_out", "=", "None", ",", "shuffle", "=", "False", ",", "samples_perc_per_epoch", "=", "1", ")", ":", "\n", "    ", "assert", "0", "<", "samples_perc_per_epoch", "<=", "1", "\n", "\n", "total_samples", "=", "data_in", ".", "shape", "[", "0", "]", "\n", "samples_per_epoch", "=", "int", "(", "total_samples", "*", "samples_perc_per_epoch", ")", "\n", "\n", "if", "shuffle", ":", "\n", "        ", "idxlist", "=", "np", ".", "arange", "(", "total_samples", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxlist", ")", "\n", "idxlist", "=", "idxlist", "[", ":", "samples_per_epoch", "]", "\n", "", "else", ":", "\n", "        ", "idxlist", "=", "np", ".", "arange", "(", "samples_per_epoch", ")", "\n", "\n", "", "for", "st_idx", "in", "range", "(", "0", ",", "samples_per_epoch", ",", "batch_size", ")", ":", "\n", "        ", "end_idx", "=", "min", "(", "st_idx", "+", "batch_size", ",", "samples_per_epoch", ")", "\n", "idx", "=", "idxlist", "[", "st_idx", ":", "end_idx", "]", "\n", "\n", "yield", "Batch", "(", "device", ",", "idx", ",", "data_in", ",", "data_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.evaluate": [[81, 110], ["copy.deepcopy", "model.eval", "run.generate", "batch.get_ratings_to_dev", "batch.get_ratings", "model().cpu().detach().numpy", "numpy.concatenate().mean", "m[].append", "model().cpu().detach", "numpy.concatenate", "batch.get_ratings().nonzero", "model().cpu", "batch.get_ratings", "model"], "function", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.generate", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.get_ratings_to_dev", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.get_ratings", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.get_ratings"], ["", "", "def", "evaluate", "(", "model", ",", "data_in", ",", "data_out", ",", "metrics", ",", "samples_perc_per_epoch", "=", "1", ",", "batch_size", "=", "500", ")", ":", "\n", "    ", "metrics", "=", "deepcopy", "(", "metrics", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "for", "m", "in", "metrics", ":", "\n", "        ", "m", "[", "'score'", "]", "=", "[", "]", "\n", "\n", "", "for", "batch", "in", "generate", "(", "batch_size", "=", "batch_size", ",", "\n", "device", "=", "device", ",", "\n", "data_in", "=", "data_in", ",", "\n", "data_out", "=", "data_out", ",", "\n", "samples_perc_per_epoch", "=", "samples_perc_per_epoch", "\n", ")", ":", "\n", "\n", "        ", "ratings_in", "=", "batch", ".", "get_ratings_to_dev", "(", ")", "\n", "ratings_out", "=", "batch", ".", "get_ratings", "(", "is_out", "=", "True", ")", "\n", "\n", "ratings_pred", "=", "model", "(", "ratings_in", ",", "calculate_loss", "=", "False", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "if", "not", "(", "data_in", "is", "data_out", ")", ":", "\n", "            ", "ratings_pred", "[", "batch", ".", "get_ratings", "(", ")", ".", "nonzero", "(", ")", "]", "=", "-", "np", ".", "inf", "\n", "\n", "", "for", "m", "in", "metrics", ":", "\n", "            ", "m", "[", "'score'", "]", ".", "append", "(", "m", "[", "'metric'", "]", "(", "ratings_pred", ",", "ratings_out", ",", "k", "=", "m", "[", "'k'", "]", ")", ")", "\n", "\n", "", "", "for", "m", "in", "metrics", ":", "\n", "        ", "m", "[", "'score'", "]", "=", "np", ".", "concatenate", "(", "m", "[", "'score'", "]", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "[", "x", "[", "'score'", "]", "for", "x", "in", "metrics", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.run": [[112, 126], ["model.train", "range", "run.generate", "batch.get_ratings_to_dev", "model", "loss.backward", "optimizer.zero_grad", "optimizer.step"], "function", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.generate", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.run.Batch.get_ratings_to_dev"], ["", "def", "run", "(", "model", ",", "opts", ",", "train_data", ",", "batch_size", ",", "n_epochs", ",", "beta", ",", "gamma", ",", "dropout_rate", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "n_epochs", ")", ":", "\n", "        ", "for", "batch", "in", "generate", "(", "batch_size", "=", "batch_size", ",", "device", "=", "device", ",", "data_in", "=", "train_data", ",", "shuffle", "=", "True", ")", ":", "\n", "            ", "ratings", "=", "batch", ".", "get_ratings_to_dev", "(", ")", "\n", "\n", "for", "optimizer", "in", "opts", ":", "\n", "                ", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "", "_", ",", "loss", "=", "model", "(", "ratings", ",", "beta", "=", "beta", ",", "gamma", "=", "gamma", ",", "dropout_rate", "=", "dropout_rate", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "optimizer", "in", "opts", ":", "\n", "                ", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.utils.load_train_data": [[12, 22], ["pandas.read_csv", "scipy.sparse.csr_matrix", "tp[].max", "numpy.ones_like"], "function", ["None"], ["def", "load_train_data", "(", "csv_file", ",", "n_items", ",", "n_users", ",", "global_indexing", "=", "False", ")", ":", "\n", "    ", "tp", "=", "pd", ".", "read_csv", "(", "csv_file", ")", "\n", "\n", "n_users", "=", "n_users", "if", "global_indexing", "else", "tp", "[", "'uid'", "]", ".", "max", "(", ")", "+", "1", "\n", "\n", "rows", ",", "cols", "=", "tp", "[", "'uid'", "]", ",", "tp", "[", "'sid'", "]", "\n", "data", "=", "sparse", ".", "csr_matrix", "(", "(", "np", ".", "ones_like", "(", "rows", ")", ",", "\n", "(", "rows", ",", "cols", ")", ")", ",", "dtype", "=", "'float64'", ",", "\n", "shape", "=", "(", "n_users", ",", "n_items", ")", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.utils.load_tr_te_data": [[24, 43], ["pandas.read_csv", "pandas.read_csv", "scipy.sparse.csr_matrix", "scipy.sparse.csr_matrix", "min", "max", "len", "tp_tr[].min", "tp_te[].min", "tp_tr[].max", "tp_te[].max", "numpy.ones_like", "numpy.ones_like"], "function", ["None"], ["", "def", "load_tr_te_data", "(", "csv_file_tr", ",", "csv_file_te", ",", "n_items", ",", "n_users", ",", "global_indexing", "=", "False", ")", ":", "\n", "    ", "tp_tr", "=", "pd", ".", "read_csv", "(", "csv_file_tr", ")", "\n", "tp_te", "=", "pd", ".", "read_csv", "(", "csv_file_te", ")", "\n", "\n", "if", "global_indexing", ":", "\n", "        ", "start_idx", "=", "0", "\n", "end_idx", "=", "len", "(", "unique_uid", ")", "-", "1", "\n", "", "else", ":", "\n", "        ", "start_idx", "=", "min", "(", "tp_tr", "[", "'uid'", "]", ".", "min", "(", ")", ",", "tp_te", "[", "'uid'", "]", ".", "min", "(", ")", ")", "\n", "end_idx", "=", "max", "(", "tp_tr", "[", "'uid'", "]", ".", "max", "(", ")", ",", "tp_te", "[", "'uid'", "]", ".", "max", "(", ")", ")", "\n", "\n", "", "rows_tr", ",", "cols_tr", "=", "tp_tr", "[", "'uid'", "]", "-", "start_idx", ",", "tp_tr", "[", "'sid'", "]", "\n", "rows_te", ",", "cols_te", "=", "tp_te", "[", "'uid'", "]", "-", "start_idx", ",", "tp_te", "[", "'sid'", "]", "\n", "\n", "data_tr", "=", "sparse", ".", "csr_matrix", "(", "(", "np", ".", "ones_like", "(", "rows_tr", ")", ",", "\n", "(", "rows_tr", ",", "cols_tr", ")", ")", ",", "dtype", "=", "'float64'", ",", "shape", "=", "(", "end_idx", "-", "start_idx", "+", "1", ",", "n_items", ")", ")", "\n", "data_te", "=", "sparse", ".", "csr_matrix", "(", "(", "np", ".", "ones_like", "(", "rows_te", ")", ",", "\n", "(", "rows_te", ",", "cols_te", ")", ")", ",", "dtype", "=", "'float64'", ",", "shape", "=", "(", "end_idx", "-", "start_idx", "+", "1", ",", "n_items", ")", ")", "\n", "return", "data_tr", ",", "data_te", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.utils.get_data": [[45, 76], ["list", "list", "len", "len", "utils.load_train_data", "utils.load_tr_te_data", "utils.load_tr_te_data", "open", "open", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "x.astype", "os.path.join", "list.append", "os.path.join", "list.append", "line.strip", "line.strip"], "function", ["home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.utils.load_train_data", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.utils.load_tr_te_data", "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.utils.load_tr_te_data"], ["", "def", "get_data", "(", "dataset", ",", "global_indexing", "=", "False", ")", ":", "\n", "    ", "unique_sid", "=", "list", "(", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset", ",", "'unique_sid.txt'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "unique_sid", ".", "append", "(", "line", ".", "strip", "(", ")", ")", "\n", "\n", "", "", "unique_uid", "=", "list", "(", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset", ",", "'unique_uid.txt'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "unique_uid", ".", "append", "(", "line", ".", "strip", "(", ")", ")", "\n", "\n", "", "", "n_items", "=", "len", "(", "unique_sid", ")", "\n", "n_users", "=", "len", "(", "unique_uid", ")", "\n", "\n", "train_data", "=", "load_train_data", "(", "os", ".", "path", ".", "join", "(", "dataset", ",", "'train.csv'", ")", ",", "n_items", ",", "n_users", ",", "global_indexing", "=", "global_indexing", ")", "\n", "\n", "\n", "vad_data_tr", ",", "vad_data_te", "=", "load_tr_te_data", "(", "os", ".", "path", ".", "join", "(", "dataset", ",", "'validation_tr.csv'", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "dataset", ",", "'validation_te.csv'", ")", ",", "\n", "n_items", ",", "n_users", ",", "\n", "global_indexing", "=", "global_indexing", ")", "\n", "\n", "test_data_tr", ",", "test_data_te", "=", "load_tr_te_data", "(", "os", ".", "path", ".", "join", "(", "dataset", ",", "'test_tr.csv'", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "dataset", ",", "'test_te.csv'", ")", ",", "\n", "n_items", ",", "n_users", ",", "\n", "global_indexing", "=", "global_indexing", ")", "\n", "\n", "data", "=", "train_data", ",", "vad_data_tr", ",", "vad_data_te", ",", "test_data_tr", ",", "test_data_te", "\n", "data", "=", "(", "x", ".", "astype", "(", "'float32'", ")", "for", "x", "in", "data", ")", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.utils.ndcg": [[78, 99], ["bottleneck.argpartition", "numpy.argsort", "numpy.array", "numpy.log2", "numpy.arange", "tp[].sum", "heldout_batch[].toarray", "heldout_batch.getnnz", "numpy.arange", "numpy.arange", "min", "numpy.arange"], "function", ["None"], ["", "def", "ndcg", "(", "X_pred", ",", "heldout_batch", ",", "k", "=", "100", ")", ":", "\n", "    ", "'''\n    normalized discounted cumulative gain@k for binary relevance\n    ASSUMPTIONS: all the 0's in heldout_data indicate 0 relevance\n    '''", "\n", "batch_users", "=", "X_pred", ".", "shape", "[", "0", "]", "\n", "idx_topk_part", "=", "bn", ".", "argpartition", "(", "-", "X_pred", ",", "k", ",", "axis", "=", "1", ")", "\n", "topk_part", "=", "X_pred", "[", "np", ".", "arange", "(", "batch_users", ")", "[", ":", ",", "np", ".", "newaxis", "]", ",", "\n", "idx_topk_part", "[", ":", ",", ":", "k", "]", "]", "\n", "idx_part", "=", "np", ".", "argsort", "(", "-", "topk_part", ",", "axis", "=", "1", ")", "\n", "# X_pred[np.arange(batch_users)[:, np.newaxis], idx_topk] is the sorted", "\n", "# topk predicted score", "\n", "idx_topk", "=", "idx_topk_part", "[", "np", ".", "arange", "(", "batch_users", ")", "[", ":", ",", "np", ".", "newaxis", "]", ",", "idx_part", "]", "\n", "# build the discount template", "\n", "tp", "=", "1.", "/", "np", ".", "log2", "(", "np", ".", "arange", "(", "2", ",", "k", "+", "2", ")", ")", "\n", "\n", "DCG", "=", "(", "heldout_batch", "[", "np", ".", "arange", "(", "batch_users", ")", "[", ":", ",", "np", ".", "newaxis", "]", ",", "\n", "idx_topk", "]", ".", "toarray", "(", ")", "*", "tp", ")", ".", "sum", "(", "axis", "=", "1", ")", "\n", "IDCG", "=", "np", ".", "array", "(", "[", "(", "tp", "[", ":", "min", "(", "n", ",", "k", ")", "]", ")", ".", "sum", "(", ")", "\n", "for", "n", "in", "heldout_batch", ".", "getnnz", "(", "axis", "=", "1", ")", "]", ")", "\n", "return", "DCG", "/", "IDCG", "\n", "\n"]], "home.repos.pwc.inspect_result.ilya-shenbin_RecVAE.None.utils.recall": [[101, 113], ["bottleneck.argpartition", "numpy.zeros_like", "numpy.logical_and().sum().astype", "numpy.minimum", "numpy.logical_and().sum", "X_true_binary.sum", "numpy.arange", "numpy.logical_and"], "function", ["None"], ["", "def", "recall", "(", "X_pred", ",", "heldout_batch", ",", "k", "=", "100", ")", ":", "\n", "    ", "batch_users", "=", "X_pred", ".", "shape", "[", "0", "]", "\n", "\n", "idx", "=", "bn", ".", "argpartition", "(", "-", "X_pred", ",", "k", ",", "axis", "=", "1", ")", "\n", "X_pred_binary", "=", "np", ".", "zeros_like", "(", "X_pred", ",", "dtype", "=", "bool", ")", "\n", "X_pred_binary", "[", "np", ".", "arange", "(", "batch_users", ")", "[", ":", ",", "np", ".", "newaxis", "]", ",", "idx", "[", ":", ",", ":", "k", "]", "]", "=", "True", "\n", "\n", "X_true_binary", "=", "(", "heldout_batch", ">", "0", ")", ".", "toarray", "(", ")", "\n", "tmp", "=", "(", "np", ".", "logical_and", "(", "X_true_binary", ",", "X_pred_binary", ")", ".", "sum", "(", "axis", "=", "1", ")", ")", ".", "astype", "(", "\n", "np", ".", "float32", ")", "\n", "recall", "=", "tmp", "/", "np", ".", "minimum", "(", "k", ",", "X_true_binary", ".", "sum", "(", "axis", "=", "1", ")", ")", "\n", "return", "recall", "", "", ""]]}