{"home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.log.setup_logger": [[11, 30], ["os.path.join", "loguru.logger.add", "os.path.exists", "os.remove", "loguru.logger.remove"], "function", ["None"], ["def", "setup_logger", "(", "save_dir", ",", "distributed_rank", "=", "0", ",", "filename", "=", "\"log.txt\"", ",", "mode", "=", "\"a\"", ")", ":", "\n", "    ", "\"\"\"setup logger for training and testing.\n    Args:\n        save_dir(str): location to save log file\n        distributed_rank(int): device rank when multi-gpu environment\n        mode(str): log file write mode, `append` or `override`. default is `a`.\n    Return:\n        logger instance.\n    \"\"\"", "\n", "save_file", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "filename", ")", "\n", "if", "mode", "==", "\"o\"", "and", "os", ".", "path", ".", "exists", "(", "save_file", ")", ":", "\n", "        ", "os", ".", "remove", "(", "save_file", ")", "\n", "", "if", "distributed_rank", ">", "0", ":", "\n", "        ", "logger", ".", "remove", "(", ")", "\n", "", "logger", ".", "add", "(", "\n", "save_file", ",", "format", "=", "\"{time:YYYY-MM-DD at HH:mm:ss} | {level} | {message}\"", ",", "filter", "=", "\"\"", ",", "level", "=", "\"INFO\"", ",", "enqueue", "=", "True", "\n", ")", "\n", "\n", "return", "logger", "\n", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.AvgMeter.__init__": [[75, 81], ["__init__.AvgMeter.reset"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.AvgMeter.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "cnt", "=", "0", "\n", "self", ".", "reset", "(", ")", "\n", "self", ".", "val", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.AvgMeter.reset": [[82, 86], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "cnt", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.AvgMeter.update": [[87, 92], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "cnt", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "cnt", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.adjust_learning_rate_iter": [[13, 36], ["math.cos", "ValueError", "int", "float", "math.cos"], "function", ["None"], ["def", "adjust_learning_rate_iter", "(", "optimizer", ",", "iters", ",", "args", ",", "ITERS_PER_EPOCH", "=", "5004", ")", ":", "\n", "    ", "\"\"\"Decay the learning rate based on schedule\"\"\"", "\n", "total_iters", "=", "ITERS_PER_EPOCH", "*", "args", ".", "total_epochs", "\n", "\n", "lr", "=", "args", ".", "lr", "\n", "if", "args", ".", "scheduler", "==", "\"cos\"", ":", "# cosine lr schedule", "\n", "        ", "lr", "*=", "0.5", "*", "(", "1.0", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "iters", "/", "total_iters", ")", ")", "\n", "", "elif", "args", ".", "scheduler", "==", "\"warmcos\"", ":", "\n", "        ", "warmup_total_iters", "=", "ITERS_PER_EPOCH", "*", "args", ".", "warmup_epochs", "\n", "if", "iters", "<=", "warmup_total_iters", ":", "\n", "            ", "lr_start", "=", "1e-6", "\n", "lr", "=", "(", "lr", "-", "lr_start", ")", "*", "iters", "/", "float", "(", "warmup_total_iters", ")", "+", "lr_start", "\n", "", "else", ":", "\n", "            ", "lr", "*=", "0.5", "*", "(", "1.0", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "(", "iters", "-", "warmup_total_iters", ")", "/", "(", "total_iters", "-", "warmup_total_iters", ")", ")", ")", "\n", "", "", "elif", "args", ".", "scheduler", "==", "\"multistep\"", ":", "# stepwise lr schedule", "\n", "        ", "milestones", "=", "[", "int", "(", "total_iters", "*", "milestone", "/", "args", ".", "total_epochs", ")", "for", "milestone", "in", "args", ".", "milestones", "]", "\n", "for", "milestone", "in", "milestones", ":", "\n", "            ", "lr", "*=", "0.1", "if", "iters", ">=", "milestone", "else", "1.0", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Scheduler version {} not supported.\"", ".", "format", "(", "args", ".", "scheduler", ")", ")", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "\"lr\"", "]", "=", "lr", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.save_checkpoint": [[38, 46], ["os.path.join", "torch.save", "os.path.exists", "os.makedirs", "os.path.join", "shutil.copyfile"], "function", ["None"], ["", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "save", ",", "model_name", "=", "\"\"", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "save", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "save", ")", "\n", "", "filename", "=", "os", ".", "path", ".", "join", "(", "save", ",", "model_name", "+", "\"_ckpt.pth.tar\"", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "if", "is_best", ":", "\n", "        ", "best_filename", "=", "os", ".", "path", ".", "join", "(", "save", ",", "model_name", "+", "\"_best_ckpt.pth.tar\"", ")", "\n", "shutil", ".", "copyfile", "(", "filename", ",", "best_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.accuracy": [[48, 61], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.reshape().expand_as", "correct[].reshape().float().sum", "res.append", "correct[].reshape().float().sum.mul_", "target.reshape", "correct[].reshape().float", "correct[].reshape"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "reshape", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "reshape", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.parse_devices": [[63, 72], ["gpu_ids.split", "int", "int", "map", "list", "str", "range"], "function", ["None"], ["", "def", "parse_devices", "(", "gpu_ids", ")", ":", "\n", "    ", "if", "\"-\"", "in", "gpu_ids", ":", "\n", "        ", "gpus", "=", "gpu_ids", ".", "split", "(", "\"-\"", ")", "\n", "gpus", "[", "0", "]", "=", "int", "(", "gpus", "[", "0", "]", ")", "\n", "gpus", "[", "1", "]", "=", "int", "(", "gpus", "[", "1", "]", ")", "+", "1", "\n", "parsed_ids", "=", "\",\"", ".", "join", "(", "map", "(", "lambda", "x", ":", "str", "(", "x", ")", ",", "list", "(", "range", "(", "*", "gpus", ")", ")", ")", ")", "\n", "return", "parsed_ids", "\n", "", "else", ":", "\n", "        ", "return", "gpu_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.torch_dist.reduce_tensor_sum": [[11, 15], ["tensor.clone", "torch.distributed.all_reduce"], "function", ["None"], ["def", "reduce_tensor_sum", "(", "tensor", ")", ":", "\n", "    ", "rt", "=", "tensor", ".", "clone", "(", ")", "\n", "dist", ".", "all_reduce", "(", "rt", ",", "op", "=", "dist", ".", "ReduceOp", ".", "SUM", ")", "\n", "return", "rt", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.torch_dist.configure_nccl": [[17, 33], ["subprocess.getoutput"], "function", ["None"], ["", "def", "configure_nccl", "(", ")", ":", "\n", "    ", "\"\"\"Configure multi-machine environment variables.\n\n    It is required for multi-machine training.\n    \"\"\"", "\n", "os", ".", "environ", "[", "\"NCCL_SOCKET_IFNAME\"", "]", "=", "\"ib0\"", "\n", "os", ".", "environ", "[", "\"NCCL_IB_DISABLE\"", "]", "=", "\"1\"", "\n", "\n", "os", ".", "environ", "[", "\"NCCL_LAUNCH_MODE\"", "]", "=", "\"PARALLEL\"", "\n", "os", ".", "environ", "[", "\"NCCL_IB_HCA\"", "]", "=", "subprocess", ".", "getoutput", "(", "\n", "\"cd /sys/class/infiniband/ > /dev/null; for i in mlx5_*; \"", "\n", "\"do cat $i/ports/1/gid_attrs/types/* 2>/dev/null \"", "\n", "\"| grep v >/dev/null && echo $i ; done; > /dev/null\"", "\n", ")", "\n", "os", ".", "environ", "[", "\"NCCL_IB_GID_INDEX\"", "]", "=", "\"3\"", "\n", "os", ".", "environ", "[", "\"NCCL_IB_TC\"", "]", "=", "\"106\"", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.torch_dist.synchronize": [[35, 46], ["torch.distributed.get_world_size", "torch.distributed.barrier", "torch.distributed.is_available", "torch.distributed.is_initialized"], "function", ["None"], ["", "def", "synchronize", "(", ")", ":", "\n", "    ", "\"\"\"Helper function to synchronize (barrier) among all processes when using distributed training\n    \"\"\"", "\n", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "\n", "", "if", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "\n", "", "current_world_size", "=", "dist", ".", "get_world_size", "(", ")", "\n", "if", "current_world_size", "==", "1", ":", "\n", "        ", "return", "\n", "", "dist", ".", "barrier", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.tools.eval.main": [[43, 64], ["momentum_teacher.utils.parse_devices", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "int", "random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "warnings.warn", "os.getenv", "torch.spawn", "eval.main_worker"], "function", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.parse_devices", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.tools.train.main_worker"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", ".", "devices", "=", "parse_devices", "(", "args", ".", "devices", ")", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "args", ".", "devices", "\n", "nr_gpu", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "\n", "if", "exp", ".", "seed", "is", "not", "None", ":", "\n", "        ", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "deterministic", "=", "True", "\n", "warnings", ".", "warn", "(", "\n", "\"You have chosen to seed training. This will turn on the CUDNN deterministic setting, \"", "\n", "\"which can slow down your training considerably! You may see unexpected behavior when restarting \"", "\n", "\"from checkpoints.\"", "\n", ")", "\n", "\n", "", "nr_machine", "=", "int", "(", "os", ".", "getenv", "(", "\"MACHINE_TOTAL\"", ",", "\"1\"", ")", ")", "\n", "if", "nr_gpu", ">", "1", ":", "\n", "        ", "args", ".", "world_size", "=", "nr_gpu", "*", "nr_machine", "\n", "mp", ".", "spawn", "(", "main_worker", ",", "nprocs", "=", "nr_gpu", ",", "args", "=", "(", "nr_gpu", ",", "args", ")", ")", "\n", "", "else", ":", "\n", "        ", "main_worker", "(", "0", ",", "nr_gpu", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.tools.eval.main_worker": [[66, 230], ["momentum_teacher.utils.torch_dist.configure_nccl", "os.path.join", "os.path.join", "momentum_teacher.utils.log.setup_logger", "momentum_teacher.utils.log.setup_logger.info", "exp.get_data_loader", "exp.get_model", "os.path.join", "torch.load", "torch.load", "torch.load", "torch.load", "state_dict.items", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "exp.get_optimizer", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.nn.parallel.DistributedDataParallel.cuda", "len", "torch.nn.parallel.DistributedDataParallel.train", "range", "torch.init_process_group", "print", "momentum_teacher.utils.torch_dist.synchronize", "k.replace", "momentum_teacher.utils.log.setup_logger.info", "momentum_teacher.utils.log.setup_logger.info", "momentum_teacher.utils.log.setup_logger.info", "torch.nn.parallel.DistributedDataParallel", "enumerate", "print", "print", "int", "subprocess.check_output().decode", "str().strip", "os.path.exists", "os.path.exists", "os.mkdir", "ckpt[].items", "name.startswith", "missing_keys.append", "str", "train_loader.sampler.set_epoch", "time.time", "inp.cuda.cuda", "target.cuda.cuda", "torch.nn.parallel.DistributedDataParallel", "momentum_teacher.utils.accuracy", "exp.get_optimizer.zero_grad", "loss.backward", "exp.get_optimizer.step", "momentum_teacher.utils.adjust_learning_rate_iter", "momentum_teacher.utils.log.setup_logger.info", "torch.nn.parallel.DistributedDataParallel.eval", "eval.run_eval", "torch.nn.parallel.DistributedDataParallel.train", "momentum_teacher.utils.log.setup_logger.info", "momentum_teacher.utils.log.setup_logger.info", "os.getenv", "os.remove", "torch.nn.parallel.DistributedDataParallel.state_dict", "time.time", "momentum_teacher.utils.log.setup_logger.info", "momentum_teacher.utils.save_checkpoint", "subprocess.check_output", "str", "open", "ip_add.write", "os.path.exists", "time.sleep", "open", "ip_add.readline", "torch.nn.parallel.DistributedDataParallel.state_dict", "exp.get_optimizer.state_dict"], "function", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.torch_dist.configure_nccl", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.log.setup_logger", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.base_exp.BaseExp.get_data_loader", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.base_exp.BaseExp.get_model", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_128_2080ti.momentum2_teacher_100e_4096batch_16mm_exp.Exp.get_optimizer", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.ResNetWithLinear.train", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.torch_dist.synchronize", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.accuracy", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.layers.optimizer.LARS_SGD.step", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.adjust_learning_rate_iter", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.tools.eval.run_eval", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.ResNetWithLinear.train", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.save_checkpoint"], ["", "", "def", "main_worker", "(", "gpu", ",", "nr_gpu", ",", "args", ")", ":", "\n", "    ", "configure_nccl", "(", ")", "\n", "\n", "# ------------ set environment variables for distributed training ------------------------------------- #", "\n", "rank", "=", "gpu", "\n", "if", "nr_gpu", ">", "1", ":", "\n", "        ", "rank", "+=", "int", "(", "os", ".", "getenv", "(", "\"MACHINE\"", ",", "\"0\"", ")", ")", "*", "nr_gpu", "\n", "\n", "if", "args", ".", "dist_url", "is", "None", ":", "\n", "            ", "master_ip", "=", "subprocess", ".", "check_output", "(", "[", "\"hostname\"", ",", "\"--fqdn\"", "]", ")", ".", "decode", "(", "\"utf-8\"", ")", "\n", "master_ip", "=", "str", "(", "master_ip", ")", ".", "strip", "(", ")", "\n", "args", ".", "dist_url", "=", "\"tcp://{}:23456\"", ".", "format", "(", "master_ip", ")", "\n", "\n", "# ------------------------ for multi-machine training -------------------- #", "\n", "if", "args", ".", "world_size", ">", "8", ":", "\n", "                ", "ip_add_file", "=", "\"./\"", "+", "args", ".", "experiment_name", "+", "\"ip_add.txt\"", "\n", "if", "rank", "==", "0", ":", "\n", "                    ", "with", "open", "(", "ip_add_file", ",", "\"w\"", ")", "as", "ip_add", ":", "\n", "                        ", "ip_add", ".", "write", "(", "args", ".", "dist_url", ")", "\n", "", "", "else", ":", "\n", "                    ", "while", "not", "os", ".", "path", ".", "exists", "(", "ip_add_file", ")", ":", "\n", "                        ", "time", ".", "sleep", "(", "0.5", ")", "\n", "\n", "", "with", "open", "(", "ip_add_file", ",", "\"r\"", ")", "as", "ip_add", ":", "\n", "                        ", "dist_url", "=", "ip_add", ".", "readline", "(", ")", "\n", "", "args", ".", "dist_url", "=", "dist_url", "\n", "", "", "", "else", ":", "\n", "            ", "args", ".", "dist_url", "=", "\"tcp://{}:23456\"", ".", "format", "(", "args", ".", "dist_url", ")", "\n", "\n", "", "dist", ".", "init_process_group", "(", "\n", "backend", "=", "args", ".", "dist_backend", ",", "init_method", "=", "args", ".", "dist_url", ",", "world_size", "=", "args", ".", "world_size", ",", "rank", "=", "rank", "\n", ")", "\n", "print", "(", "\"Rank {} initialization finished.\"", ".", "format", "(", "rank", ")", ")", "\n", "synchronize", "(", ")", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "if", "os", ".", "path", ".", "exists", "(", "\"./\"", "+", "args", ".", "experiment_name", "+", "\"ip_add.txt\"", ")", ":", "\n", "                ", "os", ".", "remove", "(", "\"./\"", "+", "args", ".", "experiment_name", "+", "\"ip_add.txt\"", ")", "\n", "\n", "", "", "", "pretrained_file_name", "=", "os", ".", "path", ".", "join", "(", "exp", ".", "output_dir", ",", "args", ".", "experiment_name", ")", "\n", "file_name", "=", "os", ".", "path", ".", "join", "(", "pretrained_file_name", ",", "\"{}linear_eval_teacher\"", ".", "format", "(", "exp", ".", "save_folder_prefix", ")", ")", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "pretrained_file_name", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "pretrained_file_name", ")", "\n", "\n", "", "", "logger", "=", "setup_logger", "(", "file_name", ",", "distributed_rank", "=", "rank", ",", "filename", "=", "\"eval_log.txt\"", ",", "mode", "=", "\"a\"", ")", "\n", "logger", ".", "info", "(", "\"args: {}\"", ".", "format", "(", "args", ")", ")", "\n", "\n", "data_loader", "=", "exp", ".", "get_data_loader", "(", "batch_size", "=", "args", ".", "batch_size", ",", "is_distributed", "=", "nr_gpu", ">", "1", ")", "\n", "train_loader", ",", "eval_loader", "=", "data_loader", "[", "\"train\"", "]", ",", "data_loader", "[", "\"eval\"", "]", "\n", "model", "=", "exp", ".", "get_model", "(", ")", "\n", "\n", "#  ------------------------------------------- load ckpt ------------------------------------ #", "\n", "ckpt_tar", "=", "os", ".", "path", ".", "join", "(", "pretrained_file_name", ",", "\"last_epoch_ckpt.pth.tar\"", ")", "\n", "ckpt", "=", "torch", ".", "load", "(", "ckpt_tar", ",", "map_location", "=", "\"cpu\"", ")", "\n", "state_dict", "=", "{", "k", ".", "replace", "(", "\"module.teacher_encoder.\"", ",", "\"\"", ")", ":", "v", "for", "k", ",", "v", "in", "ckpt", "[", "\"model\"", "]", ".", "items", "(", ")", "}", "\n", "missing_keys", "=", "[", "]", "\n", "matched_state_dict", "=", "{", "}", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "\"encoder.{}\"", ".", "format", "(", "name", ")", "not", "in", "model", ".", "state_dict", "(", ")", "or", "name", ".", "startswith", "(", "\"fc\"", ")", ":", "\n", "            ", "missing_keys", ".", "append", "(", "name", ")", "\n", "", "else", ":", "\n", "            ", "matched_state_dict", "[", "\"encoder.{}\"", ".", "format", "(", "name", ")", "]", "=", "param", "\n", "", "", "del", "state_dict", "\n", "msg", "=", "model", ".", "load_state_dict", "(", "matched_state_dict", ",", "strict", "=", "False", ")", "\n", "del", "matched_state_dict", "\n", "\n", "# -------------------------------------- end of the tmp --------------------------------------- #", "\n", "if", "rank", "==", "0", ":", "\n", "        ", "logger", ".", "info", "(", "str", "(", "model", ")", ")", "\n", "logger", ".", "info", "(", "\"Missing keys: {}\"", ".", "format", "(", "missing_keys", ")", ")", "\n", "logger", ".", "info", "(", "\"Params {} are not loaded from matched state dict\"", ".", "format", "(", "msg", ".", "missing_keys", ")", ")", "\n", "\n", "", "optimizer", "=", "exp", ".", "get_optimizer", "(", "args", ".", "batch_size", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "gpu", ")", "\n", "model", ".", "cuda", "(", "gpu", ")", "\n", "if", "nr_gpu", ">", "1", ":", "\n", "        ", "model", "=", "DDP", "(", "model", ",", "device_ids", "=", "[", "gpu", "]", ")", "\n", "\n", "#  ---------------------------------- start linear-evaluation ------------------------------ #", "\n", "", "best_top1", "=", "0", "\n", "_best_top5", "=", "0", "\n", "best_top1_epoch", "=", "0", "\n", "\n", "ITERS_PER_EPOCH", "=", "len", "(", "train_loader", ")", "\n", "args", ".", "lr", "=", "exp", ".", "basic_lr_per_img", "*", "args", ".", "batch_size", "\n", "args", ".", "total_epochs", "=", "exp", ".", "max_epochs", "\n", "args", ".", "scheduler", "=", "exp", ".", "scheduler", "\n", "args", ".", "milestones", "=", "exp", ".", "epoch_of_stage", "\n", "model", ".", "train", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "total_epochs", ")", ":", "\n", "        ", "if", "nr_gpu", ">", "1", ":", "\n", "            ", "train_loader", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n", "", "for", "i", ",", "(", "inp", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "data_time", "=", "time", ".", "time", "(", ")", "\n", "inp", "=", "inp", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "target", "=", "target", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "data_time", "=", "time", ".", "time", "(", ")", "-", "data_time", "\n", "\n", "# forward", "\n", "logits", ",", "loss", "=", "model", "(", "inp", ",", "target", ")", "\n", "top1", ",", "top5", "=", "accuracy", "(", "logits", ",", "target", ",", "(", "1", ",", "5", ")", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "iter_count", "=", "epoch", "*", "ITERS_PER_EPOCH", "+", "i", "+", "1", "\n", "lr", "=", "adjust_learning_rate_iter", "(", "optimizer", ",", "iter_count", ",", "args", ",", "ITERS_PER_EPOCH", ")", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "exp", ".", "print_interval", "==", "0", "and", "rank", "==", "0", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "\"\\tIter: [{}/{}], Data-Time: {:.3f}, LR: {:.4f},\"", "\n", "\" Loss: {:.4f}, Top-1: {:.2f}, Top-5: {:.2f}\"", ".", "format", "(", "\n", "i", "+", "1", ",", "ITERS_PER_EPOCH", ",", "data_time", ",", "lr", ",", "loss", ",", "top1", ",", "top5", "\n", ")", "\n", ")", "\n", "\n", "", "", "if", "(", "epoch", "+", "1", ")", "%", "exp", ".", "eval_interval", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\"start evaluation\"", ")", "\n", "model", ".", "eval", "(", ")", "\n", "eval_top1", ",", "eval_top5", "=", "run_eval", "(", "model", ",", "eval_loader", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "logger", ".", "info", "(", "\n", "\"\\tEval-Epoch: [{}/{}], Top-1: {:.2f}, Top-5: {:.2f}\"", ".", "format", "(", "\n", "epoch", "+", "1", ",", "args", ".", "total_epochs", ",", "eval_top1", ",", "eval_top5", "\n", ")", "\n", ")", "\n", "\n", "if", "eval_top1", ">", "best_top1", ":", "\n", "                ", "is_best", "=", "True", "\n", "best_top1", "=", "eval_top1", "\n", "_best_top5", "=", "eval_top5", "\n", "best_top1_epoch", "=", "epoch", "+", "1", "\n", "", "else", ":", "\n", "                ", "is_best", "=", "False", "\n", "\n", "", "logger", ".", "info", "(", "\n", "\"\\tBest Top-1 at epoch [{}/{}], Best Top-1: {:.2f}, Top-5: {:.2f}\"", ".", "format", "(", "\n", "best_top1_epoch", ",", "args", ".", "total_epochs", ",", "best_top1", ",", "_best_top5", "\n", ")", "\n", ")", "\n", "if", "rank", "==", "0", ":", "\n", "                ", "save_checkpoint", "(", "\n", "{", "\n", "\"start_epoch\"", ":", "epoch", "+", "1", ",", "\n", "\"classifier\"", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "\"best_top1\"", ":", "best_top1", ",", "\n", "\"_best_top5\"", ":", "_best_top5", ",", "\n", "\"best_top1_epoch\"", ":", "best_top1_epoch", ",", "\n", "\"optimizer\"", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "\n", "is_best", ",", "\n", "file_name", ",", "\n", "\"linear_eval\"", ",", "\n", ")", "\n", "\n", "", "", "", "if", "rank", "==", "0", ":", "\n", "        ", "print", "(", "\"Pre-training done.\"", ")", "\n", "print", "(", "\"Experiment name: {}\"", ".", "format", "(", "args", ".", "experiment_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.tools.eval.run_eval": [[232, 251], ["momentum_teacher.utils.AvgMeter", "momentum_teacher.utils.AvgMeter", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm", "zip", "range", "inp.cuda.cuda", "target.cuda.cuda", "model", "momentum_teacher.utils.accuracy", "momentum_teacher.utils.AvgMeter.update", "momentum_teacher.utils.AvgMeter.update", "len", "acc1.item", "inp.cuda.size", "acc5.item", "inp.cuda.size", "momentum_teacher.utils.torch_dist.reduce_tensor_sum", "torch.get_world_size", "momentum_teacher.utils.torch_dist.reduce_tensor_sum", "torch.get_world_size"], "function", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.accuracy", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.AvgMeter.update", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.AvgMeter.update", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.torch_dist.reduce_tensor_sum", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.torch_dist.reduce_tensor_sum"], ["", "", "def", "run_eval", "(", "model", ",", "eval_loader", ")", ":", "\n", "\n", "    ", "top1", "=", "AvgMeter", "(", ")", "\n", "top5", "=", "AvgMeter", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "range", "(", "len", "(", "eval_loader", ")", ")", ")", "\n", "for", "_", ",", "(", "inp", ",", "target", ")", "in", "zip", "(", "pbar", ",", "eval_loader", ")", ":", "\n", "            ", "inp", "=", "inp", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "target", "=", "target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "logits", "=", "model", "(", "inp", ")", "\n", "acc1", ",", "acc5", "=", "accuracy", "(", "logits", ",", "target", ",", "(", "1", ",", "5", ")", ")", "\n", "acc1", ",", "acc5", "=", "(", "\n", "reduce_tensor_sum", "(", "acc1", ")", "/", "dist", ".", "get_world_size", "(", ")", ",", "\n", "reduce_tensor_sum", "(", "acc5", ")", "/", "dist", ".", "get_world_size", "(", ")", ",", "\n", ")", "\n", "top1", ".", "update", "(", "acc1", ".", "item", "(", ")", ",", "inp", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "acc5", ".", "item", "(", ")", ",", "inp", ".", "size", "(", "0", ")", ")", "\n", "", "", "return", "top1", ".", "avg", ",", "top5", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.tools.train.main": [[48, 72], ["momentum_teacher.utils.parse_devices", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "int", "random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "warnings.warn", "os.getenv", "torch.spawn", "train.main_worker"], "function", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.parse_devices", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.tools.train.main_worker"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", ".", "devices", "=", "parse_devices", "(", "args", ".", "devices", ")", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "args", ".", "devices", "\n", "nr_gpu", "=", "torch", ".", "cuda", ".", "device_count", "(", ")", "\n", "\n", "if", "not", "args", ".", "experiment_name", ":", "\n", "        ", "args", ".", "experiment_name", "=", "exp", ".", "exp_name", "\n", "\n", "", "if", "exp", ".", "seed", "is", "not", "None", ":", "\n", "        ", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "cudnn", ".", "deterministic", "=", "True", "\n", "warnings", ".", "warn", "(", "\n", "\"You have chosen to seed training. This will turn on the CUDNN deterministic setting, \"", "\n", "\"which can slow down your training considerably! You may see unexpected behavior when restarting \"", "\n", "\"from checkpoints.\"", "\n", ")", "\n", "\n", "", "nr_machine", "=", "int", "(", "os", ".", "getenv", "(", "\"MACHINE_TOTAL\"", ",", "\"1\"", ")", ")", "\n", "if", "nr_gpu", ">", "1", ":", "\n", "        ", "args", ".", "world_size", "=", "nr_gpu", "*", "nr_machine", "\n", "mp", ".", "spawn", "(", "main_worker", ",", "nprocs", "=", "nr_gpu", ",", "args", "=", "(", "nr_gpu", ",", "args", ")", ")", "\n", "", "else", ":", "\n", "        ", "main_worker", "(", "0", ",", "nr_gpu", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.tools.train.main_worker": [[74, 194], ["momentum_teacher.utils.torch_dist.configure_nccl", "os.path.join", "momentum_teacher.utils.log.setup_logger", "momentum_teacher.utils.log.setup_logger.info", "exp.get_model", "exp.get_optimizer", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel.train", "len", "range", "torch.init_process_group", "print", "momentum_teacher.utils.torch_dist.synchronize", "exp.get_data_loader", "torch.nn.parallel.DistributedDataParallel", "momentum_teacher.utils.log.setup_logger.info", "momentum_teacher.utils.log.setup_logger.info", "momentum_teacher.utils.AvgMeter", "enumerate", "print", "int", "subprocess.check_output().decode", "str().strip", "os.path.exists", "os.path.exists", "os.mkdir", "str", "train_loader.sampler.set_epoch", "time.time", "range", "torch.nn.parallel.DistributedDataParallel", "exp.get_optimizer.zero_grad", "model.backward", "exp.get_optimizer.step", "momentum_teacher.utils.adjust_learning_rate_iter", "momentum_teacher.utils.AvgMeter.update", "momentum_teacher.utils.log.setup_logger.info", "momentum_teacher.utils.save_checkpoint", "os.getenv", "os.remove", "len", "inps[].cuda", "time.time", "divmod", "divmod", "divmod", "momentum_teacher.utils.log.setup_logger.info", "subprocess.check_output", "str", "time.time", "int", "int", "int", "torch.nn.parallel.DistributedDataParallel.state_dict", "exp.get_optimizer.state_dict", "open", "ip_add.write", "os.path.exists", "time.sleep", "open", "ip_add.readline"], "function", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.torch_dist.configure_nccl", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.log.setup_logger", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.base_exp.BaseExp.get_model", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_128_2080ti.momentum2_teacher_100e_4096batch_16mm_exp.Exp.get_optimizer", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.ResNetWithLinear.train", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.torch_dist.synchronize", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.base_exp.BaseExp.get_data_loader", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.layers.optimizer.LARS_SGD.step", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.adjust_learning_rate_iter", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.AvgMeter.update", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.utils.__init__.save_checkpoint"], ["", "", "def", "main_worker", "(", "gpu", ",", "nr_gpu", ",", "args", ")", ":", "\n", "    ", "configure_nccl", "(", ")", "\n", "\n", "# ------------ set environment variables for distributed training ------------------------------------- #", "\n", "rank", "=", "gpu", "\n", "if", "nr_gpu", ">", "1", ":", "\n", "        ", "rank", "+=", "int", "(", "os", ".", "getenv", "(", "\"MACHINE\"", ",", "\"0\"", ")", ")", "*", "nr_gpu", "\n", "\n", "if", "args", ".", "dist_url", "is", "None", ":", "\n", "            ", "master_ip", "=", "subprocess", ".", "check_output", "(", "[", "\"hostname\"", ",", "\"--fqdn\"", "]", ")", ".", "decode", "(", "\"utf-8\"", ")", "\n", "master_ip", "=", "str", "(", "master_ip", ")", ".", "strip", "(", ")", "\n", "args", ".", "dist_url", "=", "\"tcp://{}:23456\"", ".", "format", "(", "master_ip", ")", "\n", "\n", "# ------------------------hack for multi-machine training -------------------- #", "\n", "if", "args", ".", "world_size", ">", "8", ":", "\n", "                ", "ip_add_file", "=", "\"./\"", "+", "args", ".", "experiment_name", "+", "\"ip_add.txt\"", "\n", "if", "rank", "==", "0", ":", "\n", "                    ", "with", "open", "(", "ip_add_file", ",", "\"w\"", ")", "as", "ip_add", ":", "\n", "                        ", "ip_add", ".", "write", "(", "args", ".", "dist_url", ")", "\n", "", "", "else", ":", "\n", "                    ", "while", "not", "os", ".", "path", ".", "exists", "(", "ip_add_file", ")", ":", "\n", "                        ", "time", ".", "sleep", "(", "0.5", ")", "\n", "\n", "", "with", "open", "(", "ip_add_file", ",", "\"r\"", ")", "as", "ip_add", ":", "\n", "                        ", "dist_url", "=", "ip_add", ".", "readline", "(", ")", "\n", "", "args", ".", "dist_url", "=", "dist_url", "\n", "", "", "", "else", ":", "\n", "            ", "args", ".", "dist_url", "=", "\"tcp://{}:23456\"", ".", "format", "(", "args", ".", "dist_url", ")", "\n", "\n", "", "dist", ".", "init_process_group", "(", "\n", "backend", "=", "args", ".", "dist_backend", ",", "init_method", "=", "args", ".", "dist_url", ",", "world_size", "=", "args", ".", "world_size", ",", "rank", "=", "rank", "\n", ")", "\n", "print", "(", "\"Rank {} initialization finished.\"", ".", "format", "(", "rank", ")", ")", "\n", "synchronize", "(", ")", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "if", "os", ".", "path", ".", "exists", "(", "\"./\"", "+", "args", ".", "experiment_name", "+", "\"ip_add.txt\"", ")", ":", "\n", "                ", "os", ".", "remove", "(", "\"./\"", "+", "args", ".", "experiment_name", "+", "\"ip_add.txt\"", ")", "\n", "\n", "", "", "", "file_name", "=", "os", ".", "path", ".", "join", "(", "exp", ".", "output_dir", ",", "args", ".", "experiment_name", ")", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "file_name", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "file_name", ")", "\n", "\n", "", "", "logger", "=", "setup_logger", "(", "file_name", ",", "distributed_rank", "=", "rank", ",", "filename", "=", "\"train_log.txt\"", ",", "mode", "=", "\"a\"", ")", "\n", "logger", ".", "info", "(", "\"gpuid: {}, args: {}\"", ".", "format", "(", "rank", ",", "args", ")", ")", "\n", "\n", "train_loader", "=", "exp", ".", "get_data_loader", "(", "batch_size", "=", "args", ".", "batch_size", ",", "is_distributed", "=", "nr_gpu", ">", "1", ")", "[", "\"train\"", "]", "\n", "model", "=", "exp", ".", "get_model", "(", ")", "\n", "optimizer", "=", "exp", ".", "get_optimizer", "(", "args", ".", "batch_size", ")", "\n", "\n", "torch", ".", "cuda", ".", "set_device", "(", "gpu", ")", "\n", "model", ".", "cuda", "(", "gpu", ")", "\n", "if", "nr_gpu", ">", "1", ":", "\n", "        ", "model", "=", "DDP", "(", "model", ",", "device_ids", "=", "[", "gpu", "]", ")", "\n", "\n", "", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "# ------------------------ start training ------------------------------------------------------------ #", "\n", "model", ".", "train", "(", ")", "\n", "ITERS_PER_EPOCH", "=", "len", "(", "train_loader", ")", "\n", "if", "rank", "==", "0", ":", "\n", "        ", "logger", ".", "info", "(", "\"Training start...\"", ")", "\n", "logger", ".", "info", "(", "str", "(", "model", ")", ")", "\n", "\n", "", "args", ".", "lr", "=", "exp", ".", "basic_lr_per_img", "*", "args", ".", "batch_size", "\n", "args", ".", "warmup_epochs", "=", "exp", ".", "warmup_epochs", "\n", "args", ".", "total_epochs", "=", "exp", ".", "max_epoch", "\n", "iter_count", "=", "0", "\n", "\n", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "total_epochs", ")", ":", "\n", "        ", "if", "nr_gpu", ">", "1", ":", "\n", "            ", "train_loader", ".", "sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "", "batch_time_meter", "=", "AvgMeter", "(", ")", "\n", "\n", "for", "i", ",", "(", "inps", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "iter_count", "+=", "1", "\n", "iter_start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "for", "indx", "in", "range", "(", "len", "(", "inps", ")", ")", ":", "\n", "                ", "inps", "[", "indx", "]", "=", "inps", "[", "indx", "]", ".", "cuda", "(", "gpu", ",", "non_blocking", "=", "True", ")", "\n", "\n", "", "data_time", "=", "time", ".", "time", "(", ")", "-", "iter_start_time", "\n", "\n", "loss", "=", "model", "(", "inps", ",", "update_param", "=", "True", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "lr", "=", "adjust_learning_rate_iter", "(", "optimizer", ",", "iter_count", ",", "args", ",", "ITERS_PER_EPOCH", ")", "\n", "batch_time_meter", ".", "update", "(", "time", ".", "time", "(", ")", "-", "iter_start_time", ")", "\n", "if", "rank", "==", "0", "and", "(", "i", "+", "1", ")", "%", "exp", ".", "print_interval", "==", "0", ":", "\n", "                ", "remain_time", "=", "(", "ITERS_PER_EPOCH", "*", "exp", ".", "max_epoch", "-", "iter_count", ")", "*", "batch_time_meter", ".", "avg", "\n", "t_m", ",", "t_s", "=", "divmod", "(", "remain_time", ",", "60", ")", "\n", "t_h", ",", "t_m", "=", "divmod", "(", "t_m", ",", "60", ")", "\n", "t_d", ",", "t_h", "=", "divmod", "(", "t_h", ",", "24", ")", "\n", "remain_time", "=", "\"{}d.{:02d}h.{:02d}m\"", ".", "format", "(", "int", "(", "t_d", ")", ",", "int", "(", "t_h", ")", ",", "int", "(", "t_m", ")", ")", "\n", "\n", "logger", ".", "info", "(", "\n", "\"[{}/{}], remain:{}, It:[{}/{}], Data-Time:{:.3f}, LR:{:.4f}, Loss:{:.2f}\"", ".", "format", "(", "\n", "epoch", "+", "1", ",", "args", ".", "total_epochs", ",", "remain_time", ",", "i", "+", "1", ",", "ITERS_PER_EPOCH", ",", "data_time", ",", "lr", ",", "loss", "\n", ")", "\n", ")", "\n", "\n", "", "", "if", "rank", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"Train-Epoch: [{}/{}], LR: {:.4f}, Con-Loss: {:.2f}\"", ".", "format", "(", "epoch", "+", "1", ",", "args", ".", "total_epochs", ",", "lr", ",", "loss", ")", "\n", ")", "\n", "\n", "save_checkpoint", "(", "\n", "{", "\"start_epoch\"", ":", "epoch", "+", "1", ",", "\"model\"", ":", "model", ".", "state_dict", "(", ")", ",", "\"optimizer\"", ":", "optimizer", ".", "state_dict", "(", ")", "}", ",", "\n", "False", ",", "\n", "file_name", ",", "\n", "\"last_epoch\"", ",", "\n", ")", "\n", "\n", "", "", "if", "rank", "==", "0", ":", "\n", "        ", "print", "(", "\"Pre-training of experiment: {} is done.\"", ".", "format", "(", "args", ".", "exp_file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.layers.optimizer.LARS_SGD.__init__": [[31, 43], ["dict", "torch.optim.optimizer.Optimizer.__init__", "ValueError", "ValueError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["def", "__init__", "(", "self", ",", "params", ",", "lr", "=", "required", ",", "momentum", "=", "0.9", ",", "dampening", "=", "0", ",", "weight_decay", "=", "0.0001", ",", "eta", "=", "0.001", ",", "eps", "=", "1e-8", ")", ":", "\n", "        ", "if", "lr", "is", "not", "required", "and", "lr", "<", "0.0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid learning rate: {}\"", ".", "format", "(", "lr", ")", ")", "\n", "", "if", "momentum", "<", "0.0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid momentum value: {}\"", ".", "format", "(", "momentum", ")", ")", "\n", "", "if", "weight_decay", "<", "0.0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid weight_decay value: {}\"", ".", "format", "(", "weight_decay", ")", ")", "\n", "", "if", "eta", "<", "0.0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Invalid LARS coefficient value: {}\"", ".", "format", "(", "eta", ")", ")", "\n", "\n", "", "defaults", "=", "dict", "(", "lr", "=", "lr", ",", "momentum", "=", "momentum", ",", "dampening", "=", "dampening", ",", "weight_decay", "=", "weight_decay", ",", "eta", "=", "eta", ")", "\n", "super", "(", "LARS_SGD", ",", "self", ")", ".", "__init__", "(", "params", ",", "defaults", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.layers.optimizer.LARS_SGD.step": [[44, 90], ["torch.no_grad", "torch.enable_grad", "closure", "torch.zeros_like.mul_().add_", "p.data.add_", "torch.norm", "torch.norm", "torch.zeros_like", "torch.zeros_like.mul_"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "        ", "\"\"\"Performs a single optimization step.\n        Arguments:\n            closure (callable, optional): A closure that reevaluates the model and returns the loss.\n        \"\"\"", "\n", "loss", "=", "None", "\n", "if", "closure", "is", "not", "None", ":", "\n", "            ", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "                ", "loss", "=", "closure", "(", ")", "\n", "\n", "", "", "for", "group", "in", "self", ".", "param_groups", ":", "\n", "            ", "weight_decay", "=", "group", "[", "\"weight_decay\"", "]", "\n", "momentum", "=", "group", "[", "\"momentum\"", "]", "\n", "eta", "=", "group", "[", "\"eta\"", "]", "\n", "lr", "=", "group", "[", "\"lr\"", "]", "\n", "lars_exclude", "=", "group", "[", "\"lars_exclude\"", "]", "\n", "\n", "for", "p", "in", "group", "[", "\"params\"", "]", ":", "\n", "                ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                    ", "continue", "\n", "\n", "", "param_state", "=", "self", ".", "state", "[", "p", "]", "\n", "d_p", "=", "p", ".", "grad", ".", "data", "\n", "\n", "# ------------------------------ grad_norm without grad of weight-decay ---------------- #", "\n", "if", "not", "lars_exclude", ":", "\n", "                    ", "weight_norm", "=", "torch", ".", "norm", "(", "p", ".", "data", ")", "\n", "grad_norm", "=", "torch", ".", "norm", "(", "d_p", ")", "\n", "if", "weight_norm", "*", "grad_norm", ">", "1e-8", ":", "\n", "                        ", "local_lr", "=", "eta", "*", "weight_norm", "/", "(", "grad_norm", "+", "weight_decay", "*", "weight_norm", ")", "\n", "actual_lr", "=", "local_lr", "*", "lr", "\n", "# local_lr = eta * weight_norm / (grad_norm + weight_decay * weight_norm + 1e-8)", "\n", "", "else", ":", "\n", "                        ", "actual_lr", "=", "lr", "\n", "", "", "else", ":", "\n", "                    ", "actual_lr", "=", "lr", "\n", "\n", "# Update the momentum term", "\n", "", "if", "\"momentum_buffer\"", "not", "in", "param_state", ":", "\n", "                    ", "buf", "=", "param_state", "[", "\"momentum_buffer\"", "]", "=", "torch", ".", "zeros_like", "(", "p", ".", "data", ")", "\n", "", "else", ":", "\n", "                    ", "buf", "=", "param_state", "[", "\"momentum_buffer\"", "]", "\n", "", "buf", ".", "mul_", "(", "momentum", ")", ".", "add_", "(", "d_p", "+", "weight_decay", "*", "p", ".", "data", ",", "alpha", "=", "actual_lr", ")", "\n", "p", ".", "data", ".", "add_", "(", "-", "buf", ")", "\n", "", "", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.ResNetWithLinear.__init__": [[15, 28], ["torch.nn.Module.__init__", "momentum_teacher.models.resnet_mbn.resnet50", "linear_eval_exp.ResNetWithLinear.encoder.parameters", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "linear_eval_exp.ResNetWithLinear.classifier.modules", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "isinstance", "m.weight.data.normal_", "m.bias.data.fill_"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.resnet50"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNetWithLinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "resnet", ".", "resnet50", "(", "width", "=", "1", ",", "bn", "=", "\"vanilla\"", ")", "\n", "for", "p", "in", "self", ".", "encoder", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "False", "\n", "\n", "", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "2048", ",", "1000", ")", ",", "nn", ".", "BatchNorm1d", "(", "1000", ")", ")", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "for", "m", "in", "self", ".", "classifier", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.ResNetWithLinear.train": [[29, 33], ["linear_eval_exp.ResNetWithLinear.encoder.eval", "linear_eval_exp.ResNetWithLinear.classifier.train"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.ResNetWithLinear.train"], ["", "", "", "def", "train", "(", "self", ",", "mode", ":", "bool", "=", "True", ")", ":", "\n", "        ", "self", ".", "training", "=", "mode", "\n", "self", ".", "encoder", ".", "eval", "(", ")", "\n", "self", ".", "classifier", ".", "train", "(", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.ResNetWithLinear.forward": [[34, 43], ["linear_eval_exp.ResNetWithLinear.classifier", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "linear_eval_exp.ResNetWithLinear.encoder().detach", "linear_eval_exp.ResNetWithLinear.criterion", "linear_eval_exp.ResNetWithLinear.encoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "target", "=", "None", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "feat", "=", "self", ".", "encoder", "(", "x", ",", "res5", "=", "True", ")", ".", "detach", "(", ")", "\n", "", "logits", "=", "self", ".", "classifier", "(", "feat", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "loss", "=", "self", ".", "criterion", "(", "logits", ",", "target", ")", "\n", "return", "logits", ",", "loss", "\n", "", "else", ":", "\n", "            ", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.Exp.__init__": [[46, 55], ["momentum_teacher.exps.arxiv.base_exp.BaseExp.__init__"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# ----------------------------- moco setting ------------------------------- #", "\n", "self", ".", "basic_lr_per_img", "=", "30.0", "/", "256.0", "\n", "self", ".", "max_epochs", "=", "100", "\n", "self", ".", "scheduler", "=", "\"multistep\"", "# \"cos\"", "\n", "self", ".", "epoch_of_stage", "=", "[", "60", ",", "80", "]", "\n", "self", ".", "save_folder_prefix", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.Exp.get_model": [[56, 60], ["linear_eval_exp.ResNetWithLinear"], "methods", ["None"], ["", "def", "get_model", "(", "self", ")", ":", "\n", "        ", "if", "\"model\"", "not", "in", "self", ".", "__dict__", ":", "\n", "            ", "self", ".", "model", "=", "ResNetWithLinear", "(", ")", "\n", "", "return", "self", ".", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.Exp.get_data_loader": [[61, 94], ["ImageNet", "ImageNet", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "typical_imagenet_transform", "typical_imagenet_transform", "torch.get_world_size", "torch.get_world_size", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.transforms.typical_imagenet_transform", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.transforms.typical_imagenet_transform"], ["", "def", "get_data_loader", "(", "self", ",", "batch_size", ",", "is_distributed", ")", ":", "\n", "        ", "if", "\"data_loader\"", "not", "in", "self", ".", "__dict__", ":", "\n", "\n", "            ", "from", "momentum_teacher", ".", "data", ".", "dataset", "import", "ImageNet", "\n", "from", "momentum_teacher", ".", "data", ".", "transforms", "import", "typical_imagenet_transform", "\n", "\n", "train_set", "=", "ImageNet", "(", "True", ",", "typical_imagenet_transform", "(", "True", ")", ")", "\n", "eval_set", "=", "ImageNet", "(", "False", ",", "typical_imagenet_transform", "(", "False", ")", ")", "\n", "\n", "if", "is_distributed", ":", "\n", "                ", "batch_size", "=", "batch_size", "//", "dist", ".", "get_world_size", "(", ")", "\n", "\n", "", "train_dataloader_kwargs", "=", "{", "\n", "\"num_workers\"", ":", "10", ",", "\n", "\"pin_memory\"", ":", "False", ",", "\n", "\"batch_size\"", ":", "batch_size", ",", "\n", "\"shuffle\"", ":", "False", ",", "\n", "\"drop_last\"", ":", "True", ",", "\n", "\"sampler\"", ":", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "train_set", ")", "if", "is_distributed", "else", "None", ",", "\n", "}", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_set", ",", "**", "train_dataloader_kwargs", ")", "\n", "\n", "eval_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "eval_set", ",", "\n", "batch_size", "=", "100", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "2", ",", "\n", "pin_memory", "=", "False", ",", "\n", "drop_last", "=", "False", ",", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "eval_set", ")", "if", "is_distributed", "else", "None", ",", "\n", ")", "\n", "self", ".", "data_loader", "=", "{", "\"train\"", ":", "train_loader", ",", "\"eval\"", ":", "eval_loader", "}", "\n", "", "return", "self", ".", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp.Exp.get_optimizer": [[95, 102], ["torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "linear_eval_exp.Exp.model.classifier.parameters"], "methods", ["None"], ["", "def", "get_optimizer", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "if", "\"optimizer\"", "not", "in", "self", ".", "__dict__", ":", "\n", "            ", "lr", "=", "self", ".", "basic_lr_per_img", "*", "batch_size", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "self", ".", "model", ".", "classifier", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "0", ",", "nesterov", "=", "False", "\n", ")", "\n", "", "return", "self", ".", "optimizer", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.momentum2_teacher_exp.Exp.__init__": [[16, 35], ["momentum_teacher.exps.arxiv.base_exp.BaseExp.__init__", "[].split", "os.path.split", "os.path.realpath"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# ------------------------------------- model config ------------------------------ #", "\n", "self", ".", "param_momentum", "=", "0.99", "\n", "\n", "# ------------------------------------ data loader config ------------------------- #", "\n", "self", ".", "data_num_workers", "=", "6", "\n", "\n", "# ------------------------------------  training config --------------------------- #", "\n", "self", ".", "warmup_epochs", "=", "10", "\n", "self", ".", "max_epoch", "=", "40", "\n", "self", ".", "warmup_lr", "=", "1e-6", "\n", "self", ".", "basic_lr_per_img", "=", "0.05", "/", "256.0", "\n", "\n", "self", ".", "weight_decay", "=", "1e-4", "\n", "self", ".", "momentum", "=", "0.9", "\n", "self", ".", "print_interval", "=", "10", "\n", "self", ".", "exp_name", "=", "os", ".", "path", ".", "split", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.momentum2_teacher_exp.Exp.get_model": [[36, 40], ["momentum_teacher.models.m2_teacher.M2Teacher", "len"], "methods", ["None"], ["", "def", "get_model", "(", "self", ")", ":", "\n", "        ", "if", "\"model\"", "not", "in", "self", ".", "__dict__", ":", "\n", "            ", "self", ".", "model", "=", "M2Teacher", "(", "self", ".", "param_momentum", ",", "len", "(", "self", ".", "data_loader", "[", "\"train\"", "]", ")", "*", "self", ".", "max_epoch", ")", "\n", "", "return", "self", ".", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.momentum2_teacher_exp.Exp.get_data_loader": [[41, 63], ["byol_transform", "SSL_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.get_world_size", "torch.get_world_size"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.transforms.byol_transform"], ["", "def", "get_data_loader", "(", "self", ",", "batch_size", ",", "is_distributed", ")", ":", "\n", "        ", "if", "\"data_loader\"", "not", "in", "self", ".", "__dict__", ":", "\n", "            ", "from", "momentum_teacher", ".", "data", ".", "transforms", "import", "byol_transform", "\n", "from", "momentum_teacher", ".", "data", ".", "dataset", "import", "SSL_Dataset", "\n", "\n", "transform", "=", "byol_transform", "(", ")", "\n", "train_set", "=", "SSL_Dataset", "(", "transform", ")", "\n", "sampler", "=", "None", "\n", "\n", "if", "is_distributed", ":", "\n", "                ", "batch_size", "=", "batch_size", "//", "dist", ".", "get_world_size", "(", ")", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "distributed", ".", "DistributedSampler", "(", "train_set", ")", "\n", "\n", "", "dataloader_kwargs", "=", "{", "\"num_workers\"", ":", "self", ".", "data_num_workers", ",", "\"pin_memory\"", ":", "False", "}", "\n", "dataloader_kwargs", "[", "\"sampler\"", "]", "=", "sampler", "\n", "dataloader_kwargs", "[", "\"batch_size\"", "]", "=", "batch_size", "\n", "dataloader_kwargs", "[", "\"shuffle\"", "]", "=", "False", "\n", "dataloader_kwargs", "[", "\"drop_last\"", "]", "=", "True", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_set", ",", "**", "dataloader_kwargs", ")", "\n", "self", ".", "data_loader", "=", "{", "\"train\"", ":", "train_loader", ",", "\"eval\"", ":", "None", "}", "\n", "\n", "", "return", "self", ".", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.momentum2_teacher_exp.Exp.get_optimizer": [[64, 76], ["torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "momentum2_teacher_exp.Exp.model.student_encoder.parameters"], "methods", ["None"], ["", "def", "get_optimizer", "(", "self", ",", "batch_size", ")", ":", "\n", "# Noticing hear we only optimize student_encoder", "\n", "        ", "if", "\"optimizer\"", "not", "in", "self", ".", "__dict__", ":", "\n", "            ", "if", "self", ".", "warmup_epochs", ">", "0", ":", "\n", "                ", "lr", "=", "self", ".", "warmup_lr", "\n", "", "else", ":", "\n", "                ", "lr", "=", "self", ".", "basic_lr_per_img", "*", "batch_size", "\n", "\n", "", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "self", ".", "model", ".", "student_encoder", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "self", ".", "weight_decay", ",", "momentum", "=", "self", ".", "momentum", "\n", ")", "\n", "", "return", "self", ".", "optimizer", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.linear_eval_exp_byol.Exp.__init__": [[11, 20], ["momentum_teacher.exps.arxiv.linear_eval_exp.Exp.__init__"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# ----------------------------- byol setting ------------------------------- #", "\n", "self", ".", "basic_lr_per_img", "=", "0.2", "/", "256.0", "\n", "self", ".", "max_epochs", "=", "80", "\n", "self", ".", "scheduler", "=", "\"cos\"", "# \"multistep\"", "\n", "self", ".", "epoch_of_stage", "=", "None", "\n", "self", ".", "save_folder_prefix", "=", "\"byol_\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.base_exp.BaseExp.__init__": [[16, 21], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "seed", "=", "None", "\n", "self", ".", "output_dir", "=", "\"outputs\"", "\n", "self", ".", "print_interval", "=", "100", "\n", "self", ".", "eval_interval", "=", "10", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.base_exp.BaseExp.get_model": [[22, 25], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_model", "(", "self", ")", "->", "Module", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.base_exp.BaseExp.get_data_loader": [[26, 29], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_data_loader", "(", "self", ",", "batch_size", ":", "int", ",", "is_distributed", ":", "bool", ")", "->", "Dict", "[", "str", ",", "torch", ".", "utils", ".", "data", ".", "DataLoader", "]", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.arxiv.base_exp.BaseExp.get_optimizer": [[30, 33], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_optimizer", "(", "self", ",", "batch_size", ":", "int", ")", "->", "torch", ".", "optim", ".", "Optimizer", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_128_2080ti.momentum2_teacher_200e_4096batch_16mm_exp.Exp.__init__": [[12, 16], ["momentum_teacher.exps.arxiv.exp_128_2080ti.momentum2_teacher_100e_4096batch_16mm_exp.Exp.__init__", "[].split", "os.path.split", "os.path.realpath"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_epoch", "=", "200", "\n", "self", ".", "exp_name", "=", "os", ".", "path", ".", "split", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_128_2080ti.momentum2_teacher_300e_4096batch_16mm_exp.Exp.__init__": [[12, 17], ["momentum_teacher.exps.arxiv.exp_128_2080ti.momentum2_teacher_100e_4096batch_16mm_exp.Exp.__init__", "[].split", "os.path.split", "os.path.realpath"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "basic_lr_per_img", "=", "0.3", "/", "256.0", "\n", "self", ".", "max_epoch", "=", "300", "\n", "self", ".", "exp_name", "=", "os", ".", "path", ".", "split", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_128_2080ti.momentum2_teacher_100e_4096batch_16mm_exp.Exp.__init__": [[14, 23], ["momentum_teacher.exps.arxiv.momentum2_teacher_exp.Exp.__init__", "[].split", "os.path.split", "os.path.realpath"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_epoch", "=", "100", "\n", "self", ".", "exp_name", "=", "os", ".", "path", ".", "split", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "\n", "# ----------------------- setting for 4096 batch-size -------------------------- #", "\n", "self", ".", "param_momentum", "=", "0.99", "\n", "self", ".", "basic_lr_per_img", "=", "0.45", "/", "256.0", "\n", "self", ".", "weight_decay", "=", "1e-6", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_128_2080ti.momentum2_teacher_100e_4096batch_16mm_exp.Exp.get_optimizer": [[24, 52], ["momentum2_teacher_100e_4096batch_16mm_exp.Exp.model.modules", "momentum_teacher.layers.optimizer.LARS_SGD", "len", "isinstance", "isinstance", "isinstance", "params_exclude.append", "params_exclude.append", "isinstance", "len", "len", "list", "params_lars.append", "params_exclude.append", "isinstance", "momentum2_teacher_100e_4096batch_16mm_exp.Exp.model.parameters", "params_lars.extend", "list", "m.parameters"], "methods", ["None"], ["", "def", "get_optimizer", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "if", "\"optimizer\"", "not", "in", "self", ".", "__dict__", ":", "\n", "            ", "if", "self", ".", "warmup_epochs", ">", "0", ":", "\n", "                ", "lr", "=", "self", ".", "warmup_lr", "\n", "", "else", ":", "\n", "                ", "lr", "=", "self", ".", "basic_lr_per_img", "*", "batch_size", "\n", "\n", "", "params_lars", "=", "[", "]", "\n", "params_exclude", "=", "[", "]", "\n", "for", "m", "in", "self", ".", "model", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "SyncBatchNorm", ")", ":", "\n", "                    ", "params_exclude", ".", "append", "(", "m", ".", "weight", ")", "\n", "params_exclude", ".", "append", "(", "m", ".", "bias", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                    ", "params_lars", ".", "append", "(", "m", ".", "weight", ")", "\n", "params_exclude", ".", "append", "(", "m", ".", "bias", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                    ", "params_lars", ".", "extend", "(", "list", "(", "m", ".", "parameters", "(", ")", ")", ")", "\n", "\n", "", "", "assert", "len", "(", "params_lars", ")", "+", "len", "(", "params_exclude", ")", "==", "len", "(", "list", "(", "self", ".", "model", ".", "parameters", "(", ")", ")", ")", "\n", "\n", "self", ".", "optimizer", "=", "LARS_SGD", "(", "\n", "[", "{", "\"params\"", ":", "params_lars", ",", "\"lars_exclude\"", ":", "False", "}", ",", "{", "\"params\"", ":", "params_exclude", ",", "\"lars_exclude\"", ":", "True", "}", "]", ",", "\n", "lr", "=", "lr", ",", "\n", "weight_decay", "=", "self", ".", "weight_decay", ",", "\n", "momentum", "=", "self", ".", "momentum", ",", "\n", ")", "\n", "", "return", "self", ".", "optimizer", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_8_2080ti.momentum2_teacher_200e_32batch_1mm_099_exp.Exp.__init__": [[12, 17], ["momentum_teacher.exps.arxiv.momentum2_teacher_exp.Exp.__init__", "[].split", "os.path.split", "os.path.realpath"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_epoch", "=", "200", "\n", "self", ".", "param_momentum", "=", "1.0", "-", "0.01", "\n", "self", ".", "exp_name", "=", "os", ".", "path", ".", "split", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_8_2080ti.momentum2_teacher_100e_32batch_1mm_099_exp.Exp.__init__": [[12, 17], ["momentum_teacher.exps.arxiv.momentum2_teacher_exp.Exp.__init__", "[].split", "os.path.split", "os.path.realpath"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_epoch", "=", "100", "\n", "self", ".", "param_momentum", "=", "1.0", "-", "0.01", "\n", "self", ".", "exp_name", "=", "os", ".", "path", ".", "split", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_8_2080ti.momentum2_teacher_300e_32batch_1mm_099_exp.Exp.__init__": [[12, 17], ["momentum_teacher.exps.arxiv.momentum2_teacher_exp.Exp.__init__", "[].split", "os.path.split", "os.path.realpath"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_epoch", "=", "300", "\n", "self", ".", "param_momentum", "=", "1.0", "-", "0.01", "\n", "self", ".", "exp_name", "=", "os", ".", "path", ".", "split", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_8_v100.momentum2_teacher_300e_exp.Exp.__init__": [[12, 16], ["momentum_teacher.exps.arxiv.momentum2_teacher_exp.Exp.__init__", "[].split", "os.path.split", "os.path.realpath"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_epoch", "=", "300", "\n", "self", ".", "exp_name", "=", "os", ".", "path", ".", "split", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_8_v100.momentum2_teacher_100e_exp.Exp.__init__": [[12, 16], ["momentum_teacher.exps.arxiv.momentum2_teacher_exp.Exp.__init__", "[].split", "os.path.split", "os.path.realpath"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_epoch", "=", "100", "\n", "self", ".", "exp_name", "=", "os", ".", "path", ".", "split", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.exp_8_v100.momentum2_teacher_200e_exp.Exp.__init__": [[12, 16], ["momentum_teacher.exps.arxiv.momentum2_teacher_exp.Exp.__init__", "[].split", "os.path.split", "os.path.realpath"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Exp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_epoch", "=", "200", "\n", "self", ".", "exp_name", "=", "os", ".", "path", ".", "split", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.Normalize.__init__": [[39, 42], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "p", "=", "2", ")", ":", "\n", "        ", "super", "(", "Normalize", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "p", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.Normalize.forward": [[43, 45], ["torch.normalize", "torch.normalize", "torch.normalize"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "F", ".", "normalize", "(", "x", ",", "p", "=", "self", ".", "p", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.SimpleBatchNorm2d.forward": [[47, 53], ["resnet_mbn.SimpleBatchNorm2d.running_mean.clone", "resnet_mbn.SimpleBatchNorm2d.running_var.clone", "super().forward"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.m2_teacher.M2Teacher.forward"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "running_mean", "=", "self", ".", "running_mean", ".", "clone", "(", ")", "\n", "self", ".", "running_var", "=", "self", ".", "running_var", ".", "clone", "(", ")", "\n", "result", "=", "super", "(", "SimpleBatchNorm2d", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.SimpleBatchNorm1d.forward": [[56, 62], ["resnet_mbn.SimpleBatchNorm1d.running_mean.clone", "resnet_mbn.SimpleBatchNorm1d.running_var.clone", "super().forward"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.m2_teacher.M2Teacher.forward"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "running_mean", "=", "self", ".", "running_mean", ".", "clone", "(", ")", "\n", "self", ".", "running_var", "=", "self", ".", "running_var", ".", "clone", "(", ")", "\n", "result", "=", "super", "(", "SimpleBatchNorm1d", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.MomentumBatchNorm2d.__init__": [[65, 71], ["torch.BatchNorm2d.__init__"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ",", "momentum", "=", "1.0", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ",", "total_iters", "=", "100", ")", ":", "\n", "        ", "super", "(", "MomentumBatchNorm2d", ",", "self", ")", ".", "__init__", "(", "num_features", ",", "eps", ",", "momentum", ",", "affine", ",", "track_running_stats", ")", "\n", "self", ".", "total_iters", "=", "total_iters", "\n", "self", ".", "cur_iter", "=", "0", "\n", "self", ".", "mean_last_batch", "=", "None", "\n", "self", ".", "var_last_batch", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.MomentumBatchNorm2d.momentum_cosine_decay": [[72, 75], ["math.cos"], "methods", ["None"], ["", "def", "momentum_cosine_decay", "(", "self", ")", ":", "\n", "        ", "self", ".", "cur_iter", "+=", "1", "\n", "self", ".", "momentum", "=", "(", "math", ".", "cos", "(", "math", ".", "pi", "*", "(", "self", ".", "cur_iter", "/", "self", ".", "total_iters", ")", ")", "+", "1", ")", "*", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.MomentumBatchNorm2d.forward": [[76, 112], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "x.numel", "x.size", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "resnet_mbn.MomentumBatchNorm2d.momentum_cosine_decay", "tmp_running_mean[].detach", "tmp_running_var[].detach"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.MomentumBatchNorm1d.momentum_cosine_decay"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# if not self.training:", "\n", "#     return super().forward(x)", "\n", "\n", "        ", "mean", "=", "torch", ".", "mean", "(", "x", ",", "dim", "=", "[", "0", ",", "2", ",", "3", "]", ")", "\n", "var", "=", "torch", ".", "var", "(", "x", ",", "dim", "=", "[", "0", ",", "2", ",", "3", "]", ")", "\n", "n", "=", "x", ".", "numel", "(", ")", "/", "x", ".", "size", "(", "1", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "tmp_running_mean", "=", "self", ".", "momentum", "*", "mean", "+", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_mean", "\n", "# update running_var with unbiased var", "\n", "tmp_running_var", "=", "self", ".", "momentum", "*", "var", "*", "n", "/", "(", "n", "-", "1", ")", "+", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_var", "\n", "\n", "", "x", "=", "(", "x", "-", "tmp_running_mean", "[", "None", ",", ":", ",", "None", ",", "None", "]", ".", "detach", "(", ")", ")", "/", "(", "\n", "torch", ".", "sqrt", "(", "tmp_running_var", "[", "None", ",", ":", ",", "None", ",", "None", "]", ".", "detach", "(", ")", "+", "self", ".", "eps", ")", "\n", ")", "\n", "if", "self", ".", "affine", ":", "\n", "            ", "x", "=", "x", "*", "self", ".", "weight", "[", "None", ",", ":", ",", "None", ",", "None", "]", "+", "self", ".", "bias", "[", "None", ",", ":", ",", "None", ",", "None", "]", "\n", "\n", "# update the parameters", "\n", "", "if", "self", ".", "mean_last_batch", "is", "None", "and", "self", ".", "var_last_batch", "is", "None", ":", "\n", "            ", "self", ".", "mean_last_batch", "=", "mean", "\n", "self", ".", "var_last_batch", "=", "var", "\n", "", "else", ":", "\n", "            ", "self", ".", "running_mean", "=", "(", "\n", "self", ".", "momentum", "*", "(", "(", "mean", "+", "self", ".", "mean_last_batch", ")", "*", "0.5", ")", "+", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_mean", "\n", ")", "\n", "self", ".", "running_var", "=", "(", "\n", "self", ".", "momentum", "*", "(", "(", "var", "+", "self", ".", "var_last_batch", ")", "*", "0.5", ")", "*", "n", "/", "(", "n", "-", "1", ")", "\n", "+", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_var", "\n", ")", "\n", "self", ".", "mean_last_batch", "=", "None", "\n", "self", ".", "var_last_batch", "=", "None", "\n", "self", ".", "momentum_cosine_decay", "(", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.MomentumBatchNorm1d.__init__": [[115, 121], ["torch.BatchNorm1d.__init__"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ",", "momentum", "=", "1.0", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ",", "total_iters", "=", "100", ")", ":", "\n", "        ", "super", "(", "MomentumBatchNorm1d", ",", "self", ")", ".", "__init__", "(", "num_features", ",", "eps", ",", "momentum", ",", "affine", ",", "track_running_stats", ")", "\n", "self", ".", "total_iters", "=", "total_iters", "\n", "self", ".", "cur_iter", "=", "0", "\n", "self", ".", "mean_last_batch", "=", "None", "\n", "self", ".", "var_last_batch", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.MomentumBatchNorm1d.momentum_cosine_decay": [[122, 125], ["math.cos"], "methods", ["None"], ["", "def", "momentum_cosine_decay", "(", "self", ")", ":", "\n", "        ", "self", ".", "cur_iter", "+=", "1", "\n", "self", ".", "momentum", "=", "(", "math", ".", "cos", "(", "math", ".", "pi", "*", "(", "self", ".", "cur_iter", "/", "self", ".", "total_iters", ")", ")", "+", "1", ")", "*", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.MomentumBatchNorm1d.forward": [[126, 160], ["torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "x.numel", "x.size", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "resnet_mbn.MomentumBatchNorm1d.momentum_cosine_decay", "tmp_running_mean[].detach", "tmp_running_var[].detach"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.MomentumBatchNorm1d.momentum_cosine_decay"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# if not self.training:", "\n", "#     return super().forward(x)", "\n", "\n", "        ", "mean", "=", "torch", ".", "mean", "(", "x", ",", "dim", "=", "[", "0", "]", ")", "\n", "var", "=", "torch", ".", "var", "(", "x", ",", "dim", "=", "[", "0", "]", ")", "\n", "n", "=", "x", ".", "numel", "(", ")", "/", "x", ".", "size", "(", "1", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "tmp_running_mean", "=", "self", ".", "momentum", "*", "mean", "+", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_mean", "\n", "# update running_var with unbiased var", "\n", "tmp_running_var", "=", "self", ".", "momentum", "*", "var", "*", "n", "/", "(", "n", "-", "1", ")", "+", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_var", "\n", "\n", "", "x", "=", "(", "x", "-", "tmp_running_mean", "[", "None", ",", ":", "]", ".", "detach", "(", ")", ")", "/", "(", "torch", ".", "sqrt", "(", "tmp_running_var", "[", "None", ",", ":", "]", ".", "detach", "(", ")", "+", "self", ".", "eps", ")", ")", "\n", "if", "self", ".", "affine", ":", "\n", "            ", "x", "=", "x", "*", "self", ".", "weight", "[", "None", ",", ":", "]", "+", "self", ".", "bias", "[", "None", ",", ":", "]", "\n", "\n", "# update the parameters", "\n", "", "if", "self", ".", "mean_last_batch", "is", "None", "and", "self", ".", "var_last_batch", "is", "None", ":", "\n", "            ", "self", ".", "mean_last_batch", "=", "mean", "\n", "self", ".", "var_last_batch", "=", "var", "\n", "", "else", ":", "\n", "            ", "self", ".", "running_mean", "=", "(", "\n", "self", ".", "momentum", "*", "(", "(", "mean", "+", "self", ".", "mean_last_batch", ")", "*", "0.5", ")", "+", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_mean", "\n", ")", "\n", "self", ".", "running_var", "=", "(", "\n", "self", ".", "momentum", "*", "(", "(", "var", "+", "self", ".", "var_last_batch", ")", "*", "0.5", ")", "*", "n", "/", "(", "n", "-", "1", ")", "\n", "+", "(", "1", "-", "self", ".", "momentum", ")", "*", "self", ".", "running_var", "\n", ")", "\n", "self", ".", "mean_last_batch", "=", "None", "\n", "self", ".", "var_last_batch", "=", "None", "\n", "self", ".", "momentum_cosine_decay", "(", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.BasicBlock.__init__": [[165, 183], ["torch.Module.__init__", "resnet_mbn.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet_mbn.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.conv3x3", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.conv3x3"], ["def", "__init__", "(", "\n", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", "\n", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "\"BasicBlock only supports groups=1 and base_width=64\"", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "# Both self.conv1 and self.downsample layers downsample the input when stride != 1", "\n", "", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.BasicBlock.forward": [[184, 201], ["resnet_mbn.BasicBlock.conv1", "resnet_mbn.BasicBlock.bn1", "resnet_mbn.BasicBlock.relu", "resnet_mbn.BasicBlock.conv2", "resnet_mbn.BasicBlock.bn2", "resnet_mbn.BasicBlock.relu", "resnet_mbn.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.Bottleneck.__init__": [[212, 229], ["torch.Module.__init__", "resnet_mbn.conv1x1", "norm_layer", "resnet_mbn.conv3x3", "norm_layer", "resnet_mbn.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.conv1x1", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.conv3x3", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.conv1x1"], ["def", "__init__", "(", "\n", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm_layer", "=", "None", "\n", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_layer", "is", "None", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "", "width", "=", "int", "(", "planes", "*", "(", "base_width", "/", "64.0", ")", ")", "*", "groups", "\n", "# Both self.conv2 and self.downsample layers downsample the input when stride != 1", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "width", ")", "\n", "self", ".", "bn1", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "width", ",", "width", ",", "stride", ",", "groups", ",", "dilation", ")", "\n", "self", ".", "bn2", "=", "norm_layer", "(", "width", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "width", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "norm_layer", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.Bottleneck.forward": [[230, 251], ["resnet_mbn.Bottleneck.conv1", "resnet_mbn.Bottleneck.bn1", "resnet_mbn.Bottleneck.relu", "resnet_mbn.Bottleneck.conv2", "resnet_mbn.Bottleneck.bn2", "resnet_mbn.Bottleneck.relu", "resnet_mbn.Bottleneck.conv3", "resnet_mbn.Bottleneck.bn3", "resnet_mbn.Bottleneck.relu", "resnet_mbn.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.ResNet.__init__": [[254, 377], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "resnet_mbn.ResNet._norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet_mbn.ResNet._make_layer", "resnet_mbn.ResNet._make_layer", "resnet_mbn.ResNet._make_layer", "resnet_mbn.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "resnet_mbn.ResNet.modules", "len", "ValueError", "torch.Sequential", "torch.Sequential", "torch.Sequential", "isinstance", "resnet_mbn.ResNet.modules", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_mbn.Normalize", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_mbn.ResNet._norm1d_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_mbn.ResNet._norm1d_layer", "resnet_mbn.Normalize", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "ValueError", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "resnet_mbn.Normalize", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "NotImplementedError", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_mbn.ResNet._norm1d_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_mbn.ResNet._norm1d_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_mbn.Normalize", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_mbn.ResNet._norm1d_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_mbn.Normalize", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_mbn.Normalize"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.ResNet._make_layer", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.ResNet._make_layer", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.ResNet._make_layer", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.ResNet._make_layer"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "block", ",", "\n", "layers", ",", "\n", "low_dim", "=", "128", ",", "\n", "width", "=", "1", ",", "\n", "MLP", "=", "\"none\"", ",", "\n", "CLS", "=", "False", ",", "\n", "hidden_dim", "=", "2048", ",", "\n", "groups", "=", "1", ",", "\n", "bn", "=", "\"vanilla\"", ",", "\n", "predictor", "=", "False", ",", "\n", "zero_init_residual", "=", "False", ",", "\n", "replace_stride_with_dilation", "=", "None", ",", "\n", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "bn", "==", "\"customized\"", ":", "\n", "            ", "self", ".", "_norm_layer", "=", "SimpleBatchNorm2d", "\n", "self", ".", "_norm1d_layer", "=", "SimpleBatchNorm1d", "\n", "", "elif", "bn", "==", "\"vanilla\"", ":", "\n", "            ", "self", ".", "_norm_layer", "=", "nn", ".", "BatchNorm2d", "\n", "self", ".", "_norm1d_layer", "=", "nn", ".", "BatchNorm1d", "\n", "", "elif", "bn", "==", "\"torchsync\"", ":", "\n", "            ", "self", ".", "_norm_layer", "=", "nn", ".", "SyncBatchNorm", "\n", "self", ".", "_norm1d_layer", "=", "nn", ".", "SyncBatchNorm", "\n", "", "elif", "bn", "==", "\"mbn\"", ":", "\n", "            ", "self", ".", "_norm_layer", "=", "MomentumBatchNorm2d", "\n", "self", ".", "_norm1d_layer", "=", "MomentumBatchNorm1d", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"bn should be none or 'cvsync' or 'torchsync', got {}\"", ".", "format", "(", "bn", ")", ")", "\n", "\n", "", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", "\n", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "64", "*", "width", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "self", ".", "_norm_layer", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "CLS", "=", "CLS", "\n", "self", ".", "predictor", "=", "predictor", "\n", "\n", "if", "MLP", "==", "\"moco\"", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_dim", ",", "low_dim", ")", ",", "\n", "Normalize", "(", ")", ",", "\n", ")", "\n", "", "elif", "MLP", "==", "\"simclr\"", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "hidden_dim", ")", ",", "\n", "self", ".", "_norm1d_layer", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_dim", ",", "low_dim", ")", ",", "\n", "self", ".", "_norm1d_layer", "(", "low_dim", ")", ",", "\n", "Normalize", "(", ")", ",", "\n", ")", "\n", "", "elif", "MLP", "==", "\"vanilla\"", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "hidden_dim", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_dim", ",", "low_dim", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "low_dim", ")", ",", "\n", "Normalize", "(", ")", ",", "\n", ")", "\n", "", "elif", "MLP", "==", "\"byol\"", ":", "\n", "            ", "if", "predictor", ":", "\n", "                ", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "hidden_dim", ")", ",", "\n", "self", ".", "_norm1d_layer", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_dim", ",", "low_dim", ")", ",", "\n", "nn", ".", "Linear", "(", "low_dim", ",", "hidden_dim", ")", ",", "\n", "self", ".", "_norm1d_layer", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_dim", ",", "low_dim", ")", ",", "\n", "Normalize", "(", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "hidden_dim", ")", ",", "\n", "self", ".", "_norm1d_layer", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_dim", ",", "low_dim", ")", ",", "\n", "Normalize", "(", ")", ",", "\n", ")", "\n", "", "", "elif", "MLP", "==", "\"none\"", ":", "\n", "            ", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "low_dim", ")", ",", "Normalize", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"MLP version is wrong!\"", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "\"fan_out\"", ",", "nonlinearity", "=", "\"relu\"", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.ResNet._make_layer": [[378, 410], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet_mbn.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ")", ":", "\n", "        ", "norm_layer", "=", "self", ".", "_norm_layer", "\n", "downsample", "=", "None", "\n", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "norm_layer", "(", "planes", "*", "block", ".", "expansion", ")", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ",", "self", ".", "groups", ",", "self", ".", "base_width", ",", "previous_dilation", ",", "norm_layer", "\n", ")", "\n", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", ",", "\n", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "\n", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm_layer", "=", "norm_layer", ",", "\n", ")", "\n", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.ResNet.forward": [[411, 435], ["resnet_mbn.ResNet.conv1", "resnet_mbn.ResNet.bn1", "resnet_mbn.ResNet.relu", "resnet_mbn.ResNet.maxpool", "resnet_mbn.ResNet.layer1", "resnet_mbn.ResNet.layer2", "resnet_mbn.ResNet.layer3", "resnet_mbn.ResNet.layer4", "resnet_mbn.ResNet.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet_mbn.ResNet.fc", "resnet_mbn.ResNet.detach", "resnet_mbn.ResNet.clone().detach", "resnet_mbn.ResNet.clone"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "res5", "=", "False", ")", ":", "\n", "# See note [TorchScript super()]", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "torch", ".", "flatten", "(", "x", ",", "1", ")", "\n", "if", "res5", ":", "\n", "            ", "return", "x", ".", "detach", "(", ")", "\n", "", "if", "self", ".", "CLS", ":", "\n", "            ", "x_flatten", "=", "x", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "if", "self", ".", "CLS", ":", "\n", "            ", "return", "x", ",", "x_flatten", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.conv3x3": [[19, 30], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "\n", "in_planes", ",", "\n", "out_planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "\n", "groups", "=", "groups", ",", "\n", "bias", "=", "False", ",", "\n", "dilation", "=", "dilation", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.conv1x1": [[33, 36], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn._resnet": [[437, 440], ["resnet_mbn.ResNet"], "function", ["None"], ["", "", "", "def", "_resnet", "(", "block", ",", "layers", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "ResNet", "(", "block", ",", "layers", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.resnet18": [[442, 450], ["resnet_mbn._resnet"], "function", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn._resnet"], ["", "def", "resnet18", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-18 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.resnet34": [[452, 460], ["resnet_mbn._resnet"], "function", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn._resnet"], ["", "def", "resnet34", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-34 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.resnet50": [[462, 470], ["resnet_mbn._resnet"], "function", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn._resnet"], ["", "def", "resnet50", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-50 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.resnet101": [[472, 480], ["resnet_mbn._resnet"], "function", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn._resnet"], ["", "def", "resnet101", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-101 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.resnet152": [[482, 490], ["resnet_mbn._resnet"], "function", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn._resnet"], ["", "def", "resnet152", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-152 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_resnet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.m2_teacher.M2Teacher.__init__": [[13, 32], ["torch.nn.Module.__init__", "resnet_mbn.resnet50", "resnet_mbn.resnet50", "m2_teacher.M2Teacher.teacher_encoder.parameters", "m2_teacher.M2Teacher.momentum_update", "m2_teacher.M2Teacher.teacher_encoder.modules", "isinstance", "isinstance"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.resnet50", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.resnet_mbn.resnet50", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.m2_teacher.M2Teacher.momentum_update"], ["    ", "def", "__init__", "(", "self", ",", "param_momentum", ",", "total_iters", ")", ":", "\n", "        ", "super", "(", "M2Teacher", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "total_iters", "=", "total_iters", "\n", "self", ".", "param_momentum", "=", "param_momentum", "\n", "self", ".", "current_train_iter", "=", "0", "\n", "\n", "self", ".", "student_encoder", "=", "resnet", ".", "resnet50", "(", "\n", "low_dim", "=", "256", ",", "width", "=", "1", ",", "hidden_dim", "=", "4096", ",", "MLP", "=", "\"byol\"", ",", "CLS", "=", "False", ",", "bn", "=", "\"customized\"", ",", "predictor", "=", "True", "\n", ")", "\n", "self", ".", "teacher_encoder", "=", "resnet", ".", "resnet50", "(", "\n", "low_dim", "=", "256", ",", "width", "=", "1", ",", "hidden_dim", "=", "4096", ",", "MLP", "=", "\"byol\"", ",", "CLS", "=", "False", ",", "bn", "=", "\"mbn\"", ",", "predictor", "=", "False", "\n", ")", "\n", "for", "p", "in", "self", ".", "teacher_encoder", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "False", "\n", "\n", "", "self", ".", "momentum_update", "(", "m", "=", "0", ")", "\n", "for", "m", "in", "self", ".", "teacher_encoder", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "resnet", ".", "MomentumBatchNorm1d", ")", "or", "isinstance", "(", "m", ",", "resnet", ".", "MomentumBatchNorm2d", ")", ":", "\n", "                ", "m", ".", "total_iters", "=", "self", ".", "total_iters", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.m2_teacher.M2Teacher.momentum_update": [[33, 38], ["torch.no_grad", "zip", "m2_teacher.M2Teacher.student_encoder.parameters", "m2_teacher.M2Teacher.teacher_encoder.parameters", "p1.detach"], "methods", ["None"], ["", "", "", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "momentum_update", "(", "self", ",", "m", ")", ":", "\n", "        ", "for", "p1", ",", "p2", "in", "zip", "(", "self", ".", "student_encoder", ".", "parameters", "(", ")", ",", "self", ".", "teacher_encoder", ".", "parameters", "(", ")", ")", ":", "\n", "# p2.data.mul_(m).add_(1 - m, p1.detach().data)", "\n", "            ", "p2", ".", "data", "=", "m", "*", "p2", ".", "data", "+", "(", "1.0", "-", "m", ")", "*", "p1", ".", "detach", "(", ")", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.m2_teacher.M2Teacher.get_param_momentum": [[39, 42], ["math.cos"], "methods", ["None"], ["", "", "def", "get_param_momentum", "(", "self", ")", ":", "\n", "        ", "return", "1.0", "-", "(", "1.0", "-", "self", ".", "param_momentum", ")", "*", "(", "\n", "(", "math", ".", "cos", "(", "math", ".", "pi", "*", "self", ".", "current_train_iter", "/", "self", ".", "total_iters", ")", "+", "1", ")", "*", "0.5", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.m2_teacher.M2Teacher.forward": [[44, 61], ["m2_teacher.M2Teacher.student_encoder", "m2_teacher.M2Teacher.student_encoder", "m2_teacher.M2Teacher.get_param_momentum", "m2_teacher.M2Teacher.momentum_update", "torch.no_grad", "m2_teacher.M2Teacher.teacher_encoder", "m2_teacher.M2Teacher.teacher_encoder"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.m2_teacher.M2Teacher.get_param_momentum", "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.models.m2_teacher.M2Teacher.momentum_update"], ["", "def", "forward", "(", "self", ",", "inps", ",", "update_param", "=", "True", ")", ":", "\n", "        ", "if", "update_param", ":", "\n", "            ", "current_param_momentum", "=", "self", ".", "get_param_momentum", "(", ")", "\n", "self", ".", "momentum_update", "(", "current_param_momentum", ")", "\n", "\n", "", "x1", ",", "x2", "=", "inps", "[", "0", "]", ",", "inps", "[", "1", "]", "\n", "q1", "=", "self", ".", "student_encoder", "(", "x1", ")", "\n", "q2", "=", "self", ".", "student_encoder", "(", "x2", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "k1", "=", "self", ".", "teacher_encoder", "(", "x2", ")", "\n", "k2", "=", "self", ".", "teacher_encoder", "(", "x1", ")", "\n", "", "con_loss", "=", "(", "4", "-", "2", "*", "(", "(", "q1", "*", "k1", ")", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "+", "(", "q2", "*", "k2", ")", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", ")", ")", ".", "mean", "(", ")", "\n", "\n", "self", ".", "current_train_iter", "+=", "1", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "con_loss", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.transforms.ToRGB.__call__": [[8, 10], ["x.convert"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.transforms.Solarization.__call__": [[13, 15], ["PIL.ImageOps.solarize"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "ImageOps", ".", "solarize", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.transforms.GaussianBlur.__init__": [[20, 22], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "sigma", "=", "[", "0.1", ",", "2.0", "]", ")", ":", "\n", "        ", "self", ".", "sigma", "=", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.transforms.GaussianBlur.__call__": [[23, 27], ["random.uniform", "x.filter.filter.filter", "PIL.ImageFilter.GaussianBlur"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "sigma", "=", "random", ".", "uniform", "(", "self", ".", "sigma", "[", "0", "]", ",", "self", ".", "sigma", "[", "1", "]", ")", "\n", "x", "=", "x", ".", "filter", "(", "ImageFilter", ".", "GaussianBlur", "(", "radius", "=", "sigma", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.transforms.byol_transform": [[29, 57], ["torchvision.Compose", "torchvision.Compose", "transforms.ToRGB", "torchvision.RandomResizedCrop", "torchvision.RandomApply", "torchvision.RandomApply", "torchvision.RandomGrayscale", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "transforms.ToRGB", "torchvision.RandomResizedCrop", "torchvision.RandomApply", "torchvision.RandomApply", "torchvision.RandomGrayscale", "torchvision.RandomHorizontalFlip", "torchvision.RandomApply", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ColorJitter", "transforms.GaussianBlur", "torchvision.ColorJitter", "transforms.GaussianBlur", "transforms.Solarization"], "function", ["None"], ["", "", "def", "byol_transform", "(", ")", ":", "\n", "    ", "transform_q", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "ToRGB", "(", ")", ",", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "scale", "=", "(", "0.08", ",", "1.0", ")", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "transforms", ".", "ColorJitter", "(", "0.4", ",", "0.4", ",", "0.2", ",", "0.1", ")", "]", ",", "p", "=", "0.8", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "GaussianBlur", "(", "[", "0.1", ",", "2.0", "]", ")", "]", ",", "p", "=", "1.0", ")", ",", "\n", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", ")", "\n", "\n", "transform_k", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "ToRGB", "(", ")", ",", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ",", "scale", "=", "(", "0.08", ",", "1.0", ")", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "transforms", ".", "ColorJitter", "(", "0.4", ",", "0.4", ",", "0.2", ",", "0.1", ")", "]", ",", "p", "=", "0.8", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "GaussianBlur", "(", "[", "0.1", ",", "2.0", "]", ")", "]", ",", "p", "=", "0.1", ")", ",", "\n", "transforms", ".", "RandomGrayscale", "(", "p", "=", "0.2", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "RandomApply", "(", "[", "Solarization", "(", ")", "]", ",", "p", "=", "0.2", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", ")", "\n", "return", "[", "transform_q", ",", "transform_k", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.transforms.typical_imagenet_transform": [[59, 82], ["torchvision.Compose", "torchvision.Compose", "transforms.ToRGB", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "transforms.ToRGB", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["None"], ["", "def", "typical_imagenet_transform", "(", "train", ")", ":", "\n", "    ", "if", "train", ":", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "ToRGB", "(", ")", ",", "\n", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", ")", "\n", "", "else", ":", "\n", "        ", "transform", "=", "transforms", ".", "Compose", "(", "\n", "[", "\n", "ToRGB", "(", ")", ",", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "# transforms.Normalize(mean=[0.406, 0.456, 0.485], std=[0.225, 0.224, 0.229])", "\n", "]", "\n", ")", "\n", "", "return", "transform", "\n", "", ""]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.SSL_Dataset.__init__": [[5, 21], ["torchvision.datasets.ImageFolder.__init__", "ValueError", "isinstance", "len"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "transform", "=", "None", ",", "root", "=", "\"data/imagenet_train\"", ",", "target_transform", "=", "None", ",", "is_valid_file", "=", "None", ")", ":", "\n", "        ", "super", "(", "SSL_Dataset", ",", "self", ")", ".", "__init__", "(", "\n", "root", ",", "\n", "transform", "=", "transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "is_valid_file", "=", "is_valid_file", "\n", ")", "\n", "# self.image_dir + f\"imagenet_{'train' if stage in ('train', 'ft') else 'val'}\"", "\n", "\n", "if", "transform", "is", "not", "None", ":", "\n", "            ", "if", "isinstance", "(", "transform", ",", "list", ")", "and", "len", "(", "transform", ")", ">", "1", ":", "\n", "                ", "self", ".", "transform", ",", "self", ".", "transform_k", "=", "transform", "\n", "", "else", ":", "\n", "                ", "self", ".", "transform", ",", "self", ".", "transform_k", "=", "transform", ",", "None", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Transform function missing!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.SSL_Dataset.__getitem__": [[22, 36], ["dataset.SSL_Dataset.loader", "dataset.SSL_Dataset.transform", "dataset.SSL_Dataset.transform_k", "dataset.SSL_Dataset.transform", "dataset.SSL_Dataset.target_transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", ",", "target", "=", "self", ".", "samples", "[", "index", "]", "\n", "sample", "=", "self", ".", "loader", "(", "path", ")", "\n", "\n", "img1", "=", "self", ".", "transform", "(", "sample", ")", "\n", "if", "self", ".", "transform_k", "is", "not", "None", ":", "\n", "            ", "img2", "=", "self", ".", "transform_k", "(", "sample", ")", "\n", "", "else", ":", "\n", "            ", "img2", "=", "self", ".", "transform", "(", "sample", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "[", "img1", ",", "img2", "]", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__": [[39, 43], ["torchvision.datasets.ImageFolder.__init__"], "methods", ["home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "transform", "=", "None", ")", ":", "\n", "        ", "root", "=", "\"data/imagenet_{}\"", ".", "format", "(", "'train'", "if", "train", "else", "'val'", ")", "\n", "super", "(", "ImageNet", ",", "self", ")", ".", "__init__", "(", "root", ",", "transform", "=", "transform", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.zengarden_momentum2-teacher.data.dataset.ImageNet.__getitem__": [[45, 52], ["dataset.ImageNet.loader", "dataset.ImageNet.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", ",", "target", "=", "self", ".", "samples", "[", "index", "]", "\n", "sample", "=", "self", ".", "loader", "(", "path", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "", "return", "sample", ",", "target", "\n", "", "", ""]]}