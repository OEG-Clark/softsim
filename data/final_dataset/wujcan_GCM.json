{"home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.__init__": [[25, 86], ["utility.AbstractRecommender.AbstractRecommender.__init__", "GCM.GCM.get_feature_matrix", "GCM.GCM.get_feature_matrix", "GCM.GCM.get_feature_matrix", "len", "[].to_list", "[].to_list", "[].to_list", "numpy.zeros", "GCM.GCM.cnt_neighbour_number", "GCM.GCM.get_inv_neighbor_num", "GCM.GCM.get_inv_neighbor_num", "len"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.__init__", "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.get_feature_matrix", "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.get_feature_matrix", "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.get_feature_matrix", "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.cnt_neighbour_number", "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.get_inv_neighbor_num", "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.get_inv_neighbor_num"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "dataset", ",", "conf", ")", ":", "\n", "        ", "super", "(", "GCM", ",", "self", ")", ".", "__init__", "(", "dataset", ",", "conf", ")", "\n", "\n", "# dataset", "\n", "self", ".", "dataset_name", "=", "dataset", ".", "dataset_name", "\n", "self", ".", "num_users", "=", "dataset", ".", "num_users", "\n", "self", ".", "num_items", "=", "dataset", ".", "num_items", "\n", "self", ".", "num_valid_items", "=", "dataset", ".", "num_valid_items", "\n", "self", ".", "num_user_features", "=", "dataset", ".", "num_user_features", "\n", "self", ".", "num_item_features", "=", "dataset", ".", "num_item_featuers", "\n", "self", ".", "num_context_features", "=", "dataset", ".", "num_context_features", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "user_feature_mat", "=", "self", ".", "get_feature_matrix", "(", "'user'", ")", "\n", "self", ".", "item_feature_mat", "=", "self", ".", "get_feature_matrix", "(", "'item'", ")", "\n", "self", ".", "context_feature_mat", "=", "self", ".", "get_feature_matrix", "(", "'context'", ")", "\n", "self", ".", "num_contexts", "=", "len", "(", "self", ".", "context_feature_mat", ")", "\n", "# share the item id embedding in last purchase", "\n", "self", ".", "context_feature_wo_last", "=", "self", ".", "context_feature_mat", "[", ":", ",", ":", "-", "1", "]", "\n", "self", ".", "context_feature_last", "=", "self", ".", "context_feature_mat", "[", ":", ",", "-", "1", "]", "\n", "self", ".", "insts2userid", "=", "dataset", ".", "all_data_dict", "[", "'train_data'", "]", "[", "'user_id'", "]", ".", "to_list", "(", ")", "\n", "self", ".", "insts2itemid", "=", "dataset", ".", "all_data_dict", "[", "'train_data'", "]", "[", "'item_id'", "]", ".", "to_list", "(", ")", "\n", "self", ".", "insts2contextid", "=", "dataset", ".", "all_data_dict", "[", "'train_data'", "]", "[", "'context_id'", "]", ".", "to_list", "(", ")", "\n", "self", ".", "num_context_fields", "=", "self", ".", "dataset", ".", "side_info", "[", "'side_info_stats'", "]", "[", "'num_context_fields'", "]", "\n", "self", ".", "adj_norm_type", "=", "conf", ".", "adj_norm_type", "\n", "if", "self", ".", "adj_norm_type", "in", "[", "'rs'", ",", "'rd'", ",", "'db'", "]", ":", "\n", "            ", "self", ".", "user_neighbor_num", ",", "self", ".", "item_neighbor_num", "=", "self", ".", "cnt_neighbour_number", "(", "dataset", ".", "all_data_dict", "[", "'train_data'", "]", ")", "\n", "self", ".", "norm_user_neighbor_num", "=", "self", ".", "get_inv_neighbor_num", "(", "self", ".", "user_neighbor_num", ",", "self", ".", "adj_norm_type", ")", "\n", "self", ".", "norm_item_neighbor_num", "=", "self", ".", "get_inv_neighbor_num", "(", "self", ".", "item_neighbor_num", ",", "self", ".", "adj_norm_type", ")", "\n", "", "assert", "self", ".", "num_valid_items", "==", "len", "(", "self", ".", "item_feature_mat", ")", "\n", "\n", "# learning hyper-parameters", "\n", "self", ".", "batch_size", "=", "conf", ".", "batch_size", "\n", "self", ".", "test_batch_size", "=", "conf", ".", "test_batch_size", "\n", "self", ".", "learning_rate", "=", "conf", ".", "lr", "\n", "self", ".", "hidden_factor", "=", "conf", ".", "hidden_factor", "\n", "self", ".", "num_epochs", "=", "conf", ".", "epoch", "\n", "self", ".", "optimizer_type", "=", "conf", ".", "optimizer", "\n", "self", ".", "reg", "=", "conf", ".", "reg", "\n", "self", ".", "loss_type", "=", "conf", ".", "loss_type", "\n", "if", "self", ".", "loss_type", "==", "'log_loss'", ":", "\n", "            ", "self", ".", "num_negatives", "=", "conf", ".", "num_negatives", "\n", "", "self", ".", "init_method", "=", "conf", ".", "init_method", "\n", "self", ".", "stddev", "=", "conf", ".", "stddev", "\n", "self", ".", "num_gcn_layers", "=", "conf", ".", "num_gcn_layers", "\n", "self", ".", "gcn_layer_weight", "=", "conf", ".", "gcn_layer_weight", "\n", "self", ".", "merge_type", "=", "conf", ".", "merge_type", "\n", "self", ".", "decoder_type", "=", "conf", ".", "decoder_type", "\n", "if", "self", ".", "decoder_type", "==", "'MLP'", ":", "\n", "            ", "self", ".", "num_hidden_layers", "=", "conf", ".", "num_hidden_layers", "\n", "\n", "# other parameters", "\n", "", "self", ".", "pretrain_flag", "=", "conf", ".", "pretrain", "\n", "if", "self", ".", "pretrain_flag", ":", "\n", "            ", "self", ".", "read_file", "=", "args", ".", "read_file", "\n", "", "self", ".", "save_flag", "=", "conf", ".", "save_flag", "\n", "if", "self", ".", "save_flag", ":", "\n", "            ", "self", ".", "save_file", "=", "args", ".", "save_file", "\n", "\n", "", "self", ".", "sess", "=", "sess", "\n", "self", ".", "best_result", "=", "np", ".", "zeros", "(", "[", "9", "]", ",", "dtype", "=", "float", ")", "\n", "self", ".", "best_epoch", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.get_feature_matrix": [[87, 90], ["None"], "methods", ["None"], ["", "def", "get_feature_matrix", "(", "self", ",", "key_word", ")", ":", "\n", "        ", "mat", "=", "self", ".", "dataset", ".", "side_info", "[", "'%s_feature'", "%", "key_word", "]", "\n", "return", "mat", ".", "values", "if", "mat", "is", "not", "None", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.cnt_neighbour_number": [[91, 101], ["numpy.zeros", "numpy.zeros", "df[].value_counts().to_dict", "df[].value_counts().to_dict", "df[].value_counts().to_dict.items", "df[].value_counts().to_dict.items", "df[].value_counts", "df[].value_counts"], "methods", ["None"], ["", "def", "cnt_neighbour_number", "(", "self", ",", "df", ")", ":", "\n", "        ", "user_neighbor_num", "=", "np", ".", "zeros", "(", "[", "self", ".", "num_users", "]", ",", "dtype", "=", "int", ")", "\n", "item_neighbor_num", "=", "np", ".", "zeros", "(", "[", "self", ".", "num_valid_items", "]", ",", "dtype", "=", "int", ")", "\n", "dict_user_neightbor_num", "=", "df", "[", "'user_id'", "]", ".", "value_counts", "(", ")", ".", "to_dict", "(", ")", "\n", "dict_item_neightbor_num", "=", "df", "[", "'item_id'", "]", ".", "value_counts", "(", ")", ".", "to_dict", "(", ")", "\n", "for", "id", ",", "value", "in", "dict_user_neightbor_num", ".", "items", "(", ")", ":", "\n", "            ", "user_neighbor_num", "[", "id", "]", "=", "value", "\n", "", "for", "id", ",", "value", "in", "dict_item_neightbor_num", ".", "items", "(", ")", ":", "\n", "            ", "item_neighbor_num", "[", "id", "]", "=", "value", "\n", "", "return", "user_neighbor_num", ",", "item_neighbor_num", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.get_inv_neighbor_num": [[102, 111], ["numpy.power().flatten", "numpy.power().flatten", "Exception", "numpy.isinf", "numpy.power", "numpy.power"], "methods", ["None"], ["", "def", "get_inv_neighbor_num", "(", "self", ",", "data", ",", "norm_type", ")", ":", "\n", "        ", "if", "norm_type", "in", "[", "'rs'", ",", "'db'", "]", ":", "\n", "            ", "d_inv", "=", "np", ".", "power", "(", "data", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "", "elif", "norm_type", "==", "'rd'", ":", "\n", "            ", "d_inv", "=", "np", ".", "power", "(", "data", ",", "-", "1.0", ")", ".", "flatten", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"adj_norm_type is invalid.\"", ")", "\n", "", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "return", "d_inv", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM._create_placeholders": [[112, 118], ["tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder"], "methods", ["None"], ["", "def", "_create_placeholders", "(", "self", ")", ":", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"input_data\"", ")", ":", "\n", "            ", "self", ".", "user_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "\"user_input\"", ")", "\n", "self", ".", "context_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'context_input'", ")", "\n", "self", ".", "item_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "\"item_input\"", ")", "\n", "self", ".", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", "]", ",", "name", "=", "'labels'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM._create_variables": [[119, 213], ["tensorflow.name_scope", "tensorflow.gather", "tensorflow.concat", "tensorflow.concat", "tensorflow.train.import_meta_graph", "tensorflow.get_default_graph", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "utility.Tool.get_initializer", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "list", "tensorflow.constant", "tensorflow.constant", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.get_default_graph.get_tensor_by_name", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.Session", "tensorflow.train.import_meta_graph.restore", "sess.run", "utility.Tool.get_initializer.", "utility.Tool.get_initializer.", "utility.Tool.get_initializer.", "utility.Tool.get_initializer.", "utility.Tool.get_initializer.", "utility.Tool.get_initializer.", "utility.Tool.get_initializer.", "utility.Tool.get_initializer.", "utility.Tool.get_initializer.", "utility.Tool.get_initializer.", "tensorflow.zeros", "range"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.get_initializer"], ["", "", "def", "_create_variables", "(", "self", ")", ":", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"embedding\"", ")", ":", "\n", "            ", "if", "self", ".", "pretrain_flag", ">", "0", ":", "\n", "                ", "weight_saver", "=", "tf", ".", "train", ".", "import_meta_graph", "(", "self", ".", "read_file", "+", "'.meta'", ")", "\n", "pretrain_graph", "=", "tf", ".", "get_default_graph", "(", ")", "\n", "user_embeddings", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/user_embeddings:0'", ")", "\n", "item_embeddings", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/item_embeddings:0'", ")", "\n", "item_feature_embeddings", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/item_feature_embeddings:0'", ")", "\n", "context_feature_embeddings", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/context_feature_embeddings:0'", ")", "\n", "user_bias", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/user_bias:0'", ")", "\n", "item_bias", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/item_bias:0'", ")", "\n", "item_feature_bias", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/item_feature_bias:0'", ")", "\n", "context_feature_bias", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/context_feature_bias:0'", ")", "\n", "global_bias", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/global_bias:0'", ")", "\n", "if", "self", ".", "user_feature_mat", "is", "not", "None", ":", "\n", "                    ", "user_feature_embeddings", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/user_feature_embeddings:0'", ")", "\n", "user_feature_bias", "=", "pretrain_graph", ".", "get_tensor_by_name", "(", "'embedding/embedding/user_feature_bias:0'", ")", "\n", "", "else", ":", "\n", "                    ", "user_feature_embeddings", "=", "tf", ".", "zeros", "(", "[", "0", ",", "self", ".", "hidden_factor", "]", ")", "\n", "user_feature_bias", "=", "tf", ".", "zeros", "(", "[", "0", ",", "1", "]", ")", "\n", "\n", "", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "                    ", "weight_saver", ".", "restore", "(", "sess", ",", "self", ".", "read_file", ")", "\n", "ue", ",", "ufe", ",", "ie", ",", "ife", ",", "cfe", ",", "ub", ",", "ufb", ",", "ib", ",", "ifb", ",", "cfb", ",", "gb", "=", "sess", ".", "run", "(", "\n", "[", "user_embeddings", ",", "\n", "user_feature_embeddings", ",", "\n", "item_embeddings", ",", "\n", "item_feature_embeddings", ",", "\n", "context_feature_embeddings", ",", "\n", "user_bias", ",", "\n", "user_feature_bias", ",", "\n", "item_bias", ",", "\n", "item_feature_bias", ",", "\n", "context_feature_bias", ",", "\n", "global_bias", "]", ")", "\n", "", "self", ".", "user_embeddings", "=", "tf", ".", "Variable", "(", "ue", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'user_embeddings'", ")", "\n", "self", ".", "user_feature_embeddings", "=", "tf", ".", "Variable", "(", "ufe", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'user_feature_embeddings'", ")", "\n", "self", ".", "item_embeddings", "=", "tf", ".", "Variable", "(", "ie", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'item_embeddings'", ")", "\n", "self", ".", "item_feature_embeddings", "=", "tf", ".", "Variable", "(", "ife", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'item_feature_embeddings'", ")", "\n", "self", ".", "context_feature_embeddings", "=", "tf", ".", "Variable", "(", "cfe", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'context_feature_embeddings'", ")", "\n", "self", ".", "user_bias", "=", "tf", ".", "Variable", "(", "ub", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'user_bias'", ")", "\n", "self", ".", "user_feature_bias", "=", "tf", ".", "Variable", "(", "ufb", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'user_feature_bias'", ")", "\n", "self", ".", "item_bias", "=", "tf", ".", "Variable", "(", "ib", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'item_bias'", ")", "\n", "self", ".", "item_feature_bias", "=", "tf", ".", "Variable", "(", "ifb", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'item_feature_bias'", ")", "\n", "self", ".", "context_feature_bias", "=", "tf", ".", "Variable", "(", "cfb", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'context_feature_bias'", ")", "\n", "self", ".", "global_bias", "=", "tf", ".", "Variable", "(", "gb", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'global_bias'", ")", "\n", "\n", "", "else", ":", "\n", "                ", "initializer", "=", "Tool", ".", "get_initializer", "(", "self", ".", "init_method", ",", "self", ".", "stddev", ")", "\n", "\n", "self", ".", "user_embeddings", "=", "tf", ".", "Variable", "(", "initializer", "(", "[", "self", ".", "num_users", ",", "self", ".", "hidden_factor", "]", ")", ",", "\n", "name", "=", "'user_embeddings'", ",", "dtype", "=", "tf", ".", "float32", ")", "# (users, embedding_size)", "\n", "self", ".", "user_feature_embeddings", "=", "tf", ".", "Variable", "(", "initializer", "(", "[", "self", ".", "num_user_features", ",", "self", ".", "hidden_factor", "]", ")", ",", "\n", "name", "=", "'user_feature_embeddings'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "item_embeddings", "=", "tf", ".", "Variable", "(", "initializer", "(", "[", "self", ".", "num_items", ",", "self", ".", "hidden_factor", "]", ")", ",", "\n", "name", "=", "'item_embeddings'", ",", "dtype", "=", "tf", ".", "float32", ")", "# (items, embedding_size)", "\n", "self", ".", "item_feature_embeddings", "=", "tf", ".", "Variable", "(", "initializer", "(", "[", "self", ".", "num_item_features", ",", "self", ".", "hidden_factor", "]", ")", ",", "\n", "name", "=", "'item_feature_embeddings'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "context_feature_embeddings", "=", "tf", ".", "Variable", "(", "initializer", "(", "[", "self", ".", "num_context_features", "-", "self", ".", "num_items", ",", "\n", "self", ".", "hidden_factor", "]", ")", ",", "\n", "name", "=", "'context_feature_embeddings'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "user_bias", "=", "tf", ".", "Variable", "(", "initializer", "(", "[", "self", ".", "num_users", ",", "1", "]", ")", ",", "\n", "name", "=", "'user_bias'", ",", "dtype", "=", "tf", ".", "float32", ")", "# (users, embedding_size)", "\n", "self", ".", "user_feature_bias", "=", "tf", ".", "Variable", "(", "initializer", "(", "[", "self", ".", "num_user_features", ",", "1", "]", ")", ",", "\n", "name", "=", "'user_feature_bias'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "item_bias", "=", "tf", ".", "Variable", "(", "initializer", "(", "[", "self", ".", "num_items", ",", "1", "]", ")", ",", "\n", "name", "=", "'item_bias'", ",", "dtype", "=", "tf", ".", "float32", ")", "# (items, embedding_size)", "\n", "self", ".", "item_feature_bias", "=", "tf", ".", "Variable", "(", "initializer", "(", "[", "self", ".", "num_item_features", ",", "1", "]", ")", ",", "\n", "name", "=", "'item_feature_bias'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "context_feature_bias", "=", "tf", ".", "Variable", "(", "initializer", "(", "[", "self", ".", "num_context_features", "-", "self", ".", "num_items", ",", "1", "]", ")", ",", "\n", "name", "=", "'context_feature_bias'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "global_bias", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros", "(", "[", "1", ",", "1", "]", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "name", "=", "'global_bias'", ")", "\n", "", "self", ".", "valid_item_embeddings", "=", "tf", ".", "gather", "(", "self", ".", "item_embeddings", ",", "list", "(", "range", "(", "self", ".", "num_valid_items", ")", ")", ")", "\n", "if", "self", ".", "adj_norm_type", "in", "[", "'rs'", ",", "'rd'", ",", "'db'", "]", ":", "\n", "                ", "self", ".", "norm_user_nn", "=", "tf", ".", "constant", "(", "self", ".", "norm_user_neighbor_num", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'norm_user_neighbor_number'", ")", "\n", "self", ".", "norm_item_nn", "=", "tf", ".", "constant", "(", "self", ".", "norm_item_neighbor_num", ",", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "'norm_item_neighbor_number'", ")", "\n", "\n", "", "self", ".", "all_init_embedding", "=", "tf", ".", "concat", "(", "[", "self", ".", "user_embeddings", ",", "\n", "self", ".", "user_feature_embeddings", ",", "\n", "self", ".", "item_embeddings", ",", "\n", "self", ".", "item_feature_embeddings", ",", "\n", "self", ".", "context_feature_embeddings", "]", ",", "\n", "axis", "=", "0", ",", "\n", "name", "=", "'all_init_embeddings'", ")", "\n", "self", ".", "all_init_bias", "=", "tf", ".", "concat", "(", "[", "self", ".", "user_bias", ",", "\n", "self", ".", "user_feature_bias", ",", "\n", "self", ".", "item_bias", ",", "\n", "self", ".", "item_feature_bias", ",", "\n", "self", ".", "context_feature_bias", ",", "\n", "self", ".", "global_bias", "]", ",", "\n", "axis", "=", "0", ",", "\n", "name", "=", "'all_init_bias'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM._create_inference": [[214, 483], ["tensorflow.name_scope", "tensorflow.expand_dims", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.reduce_mean", "tensorflow.nn.embedding_lookup", "range", "tensorflow.stack", "tensorflow.reduce_sum", "tensorflow.stack", "tensorflow.reduce_sum", "tensorflow.Variable", "tensorflow.Variable", "GCM.GCM.updated_user_embeddings.assign", "GCM.GCM.updated_item_embeddings.assign", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.nn.l2_normalize", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.zeros_like", "tensorflow.zeros_like", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.concat", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.add", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.add", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.add", "tensorflow.add", "tensorflow.math.unsorted_segment_sqrt_n", "tensorflow.math.unsorted_segment_sqrt_n", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.subtract", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.subtract", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.reduce_mean", "tensorflow.nn.embedding_lookup", "tensorflow.nn.reduce_mean", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.concat", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.add", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.square", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.add", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.math.unsorted_segment_sum", "tensorflow.math.unsorted_segment_sum", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.subtract", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.subtract", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.reshape", "range", "tensorflow.layers.dense", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.reshape", "range", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "ValueError", "tensorflow.math.unsorted_segment_mean", "tensorflow.math.unsorted_segment_mean", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.reduce_sum", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.reduce_sum", "tensorflow.concat", "tensorflow.concat", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.multiply", "tensorflow.multiply"], "methods", ["None"], ["", "", "def", "_create_inference", "(", "self", ")", ":", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"inference\"", ")", ":", "\n", "######################## Encoder ########################", "\n", "# user feature", "\n", "            ", "all_user_embedding", "=", "tf", ".", "expand_dims", "(", "self", ".", "user_embeddings", ",", "1", ")", "\n", "if", "self", ".", "user_feature_mat", "is", "not", "None", ":", "\n", "                ", "user_feature_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "user_feature_embeddings", ",", "self", ".", "user_feature_mat", ")", "# [num_users, 2, h]", "\n", "all_user_embedding", "=", "tf", ".", "concat", "(", "[", "all_user_embedding", ",", "\n", "user_feature_embedding", "]", ",", "axis", "=", "1", ")", "# [num_users, 3, h]", "\n", "\n", "# item feature", "\n", "", "item_feature_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "item_feature_embeddings", ",", "self", ".", "item_feature_mat", ")", "# [num_valid_items, 3, h]", "\n", "all_item_feature_embedding", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "self", ".", "valid_item_embeddings", ",", "1", ")", ",", "\n", "item_feature_embedding", "]", ",", "axis", "=", "1", ")", "# [num_valid_items, 4, h]", "\n", "if", "self", ".", "num_gcn_layers", "==", "0", ":", "\n", "                ", "self", ".", "encoded_user_embedding", "=", "tf", ".", "reduce_sum", "(", "all_user_embedding", ",", "axis", "=", "1", ")", "\n", "self", ".", "encoded_item_embedding", "=", "tf", ".", "reduce_sum", "(", "all_item_feature_embedding", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "encoded_user_embedding", "=", "tf", ".", "reduce_mean", "(", "all_user_embedding", ",", "axis", "=", "1", ")", "\n", "self", ".", "encoded_item_embedding", "=", "tf", ".", "reduce_mean", "(", "all_item_feature_embedding", ",", "axis", "=", "1", ")", "\n", "\n", "# context", "\n", "", "self", ".", "context_feature_embedding_wo_last", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "context_feature_embeddings", ",", "\n", "self", ".", "context_feature_wo_last", ")", "# [num_contexts, 4, h]", "\n", "self", ".", "context_feature_embedding_last", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "item_embeddings", ",", "\n", "self", ".", "context_feature_last", ")", "# [num_contexts, h]", "\n", "self", ".", "context_feature_embedding", "=", "tf", ".", "concat", "(", "[", "self", ".", "context_feature_embedding_wo_last", ",", "\n", "tf", ".", "expand_dims", "(", "self", ".", "context_feature_embedding_last", ",", "1", ")", "]", ",", "\n", "axis", "=", "1", ")", "# [num_contexts, 5, h]", "\n", "self", ".", "context_feature_bias_wo_last", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "context_feature_bias", ",", "\n", "self", ".", "context_feature_wo_last", ")", "# [num_contexts, 4, 1]", "\n", "self", ".", "context_feature_bias_last", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "item_bias", ",", "\n", "self", ".", "context_feature_last", ")", "# [num_contexts, 1]", "\n", "self", ".", "context_feature_bias", "=", "tf", ".", "concat", "(", "[", "self", ".", "context_feature_bias_wo_last", ",", "\n", "tf", ".", "expand_dims", "(", "self", ".", "context_feature_bias_last", ",", "1", ")", "]", ",", "\n", "axis", "=", "1", ")", "# [num_contexts, 5, 1]", "\n", "self", ".", "encoded_context_embedding", "=", "tf", ".", "reduce_mean", "(", "self", ".", "context_feature_embedding", ",", "axis", "=", "1", ")", "# [num_contexts, h]", "\n", "\n", "######################## GNN layers ########################", "\n", "insts_context_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "encoded_context_embedding", ",", "self", ".", "insts2contextid", ")", "# [num_insts, h]", "\n", "if", "self", ".", "merge_type", "==", "'ip'", ":", "\n", "                ", "norm_insts_context_embedding", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "insts_context_embedding", ",", "axis", "=", "1", ",", "name", "=", "'normalize_context'", ")", "\n", "\n", "", "layer_user_embedding", "=", "self", ".", "encoded_user_embedding", "\n", "layer_item_embedding", "=", "self", ".", "encoded_item_embedding", "\n", "all_user_embeddings", "=", "[", "layer_user_embedding", "*", "self", ".", "gcn_layer_weight", "[", "0", "]", "]", "\n", "all_item_embeddings", "=", "[", "layer_item_embedding", "*", "self", ".", "gcn_layer_weight", "[", "0", "]", "]", "\n", "\n", "for", "k", "in", "range", "(", "1", ",", "self", ".", "num_gcn_layers", "+", "1", ")", ":", "\n", "                ", "if", "self", ".", "adj_norm_type", "in", "[", "'rs'", ",", "'rd'", ",", "'db'", "]", ":", "\n", "                    ", "layer_user_embedding", "=", "tf", ".", "multiply", "(", "layer_user_embedding", ",", "tf", ".", "expand_dims", "(", "self", ".", "norm_user_nn", ",", "1", ")", ")", "\n", "layer_item_embedding", "=", "tf", ".", "multiply", "(", "layer_item_embedding", ",", "tf", ".", "expand_dims", "(", "self", ".", "norm_item_nn", ",", "1", ")", ")", "\n", "\n", "", "insts_user_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "layer_user_embedding", ",", "self", ".", "insts2userid", ")", "# [num_insts, h]", "\n", "insts_item_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "layer_item_embedding", ",", "self", ".", "insts2itemid", ")", "# [num_insts, h]", "\n", "\n", "if", "self", ".", "merge_type", "==", "'sum'", ":", "\n", "                    ", "insts_user_embedding_new", "=", "tf", ".", "add", "(", "insts_item_embedding", ",", "insts_context_embedding", ")", "\n", "insts_item_embedding_new", "=", "tf", ".", "add", "(", "insts_user_embedding", ",", "insts_context_embedding", ")", "\n", "", "elif", "self", ".", "merge_type", "==", "'ip'", ":", "\n", "                    ", "insts_user_embedding_new", "=", "tf", ".", "multiply", "(", "insts_item_embedding", ",", "norm_insts_context_embedding", ")", "\n", "insts_item_embedding_new", "=", "tf", ".", "multiply", "(", "insts_user_embedding", ",", "norm_insts_context_embedding", ")", "\n", "", "elif", "self", ".", "merge_type", "==", "'mlp'", ":", "\n", "                    ", "insts_user_embedding_new", "=", "tf", ".", "layers", ".", "dense", "(", "\n", "tf", ".", "concat", "(", "[", "insts_item_embedding", ",", "insts_context_embedding", "]", ",", "axis", "=", "1", ")", ",", "\n", "self", ".", "hidden_factor", ",", "\n", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ",", "\n", "use_bias", "=", "True", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "name", "=", "'gc_user_l%d'", "%", "k", "\n", ")", "\n", "insts_item_embedding_new", "=", "tf", ".", "layers", ".", "dense", "(", "\n", "tf", ".", "concat", "(", "[", "insts_user_embedding", ",", "insts_context_embedding", "]", ",", "axis", "=", "1", ")", ",", "\n", "self", ".", "hidden_factor", ",", "\n", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ",", "\n", "use_bias", "=", "True", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "name", "=", "'gc_item_l%d'", "%", "k", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "\"Invalid merge_type!\"", ")", "\n", "\n", "", "if", "self", ".", "adj_norm_type", "in", "[", "'ls'", ",", "'db'", "]", ":", "\n", "                    ", "layer_user_embedding", "=", "tf", ".", "math", ".", "unsorted_segment_sqrt_n", "(", "\n", "insts_user_embedding_new", ",", "\n", "self", ".", "insts2userid", ",", "\n", "self", ".", "num_users", ",", "\n", "name", "=", "'aggregate_user_l%d'", "%", "k", ")", "# [num_users, h]", "\n", "layer_item_embedding", "=", "tf", ".", "math", ".", "unsorted_segment_sqrt_n", "(", "\n", "insts_item_embedding_new", ",", "\n", "self", ".", "insts2itemid", ",", "\n", "self", ".", "num_valid_items", ",", "\n", "name", "=", "'aggregate_item_l%d'", "%", "k", ")", "# [num_valid_items, h]", "\n", "", "elif", "self", ".", "adj_norm_type", "in", "[", "'rs'", ",", "'rd'", "]", ":", "\n", "                    ", "layer_user_embedding", "=", "tf", ".", "math", ".", "unsorted_segment_sum", "(", "\n", "insts_user_embedding_new", ",", "\n", "self", ".", "insts2userid", ",", "\n", "self", ".", "num_users", ",", "\n", "name", "=", "'aggregate_user_l%d'", "%", "k", ")", "# [num_users, h]", "\n", "layer_item_embedding", "=", "tf", ".", "math", ".", "unsorted_segment_sum", "(", "\n", "insts_item_embedding_new", ",", "\n", "self", ".", "insts2itemid", ",", "\n", "self", ".", "num_valid_items", ",", "\n", "name", "=", "'aggregate_item_l%d'", "%", "k", ")", "# [num_valid_items, h]", "\n", "", "elif", "self", ".", "adj_norm_type", "==", "'ld'", ":", "\n", "                    ", "layer_user_embedding", "=", "tf", ".", "math", ".", "unsorted_segment_mean", "(", "\n", "insts_user_embedding_new", ",", "\n", "self", ".", "insts2userid", ",", "\n", "self", ".", "num_users", ",", "\n", "name", "=", "'aggregate_user_l%d'", "%", "k", ")", "# [num_users, h]", "\n", "layer_item_embedding", "=", "tf", ".", "math", ".", "unsorted_segment_mean", "(", "\n", "insts_item_embedding_new", ",", "\n", "self", ".", "insts2itemid", ",", "\n", "self", ".", "num_valid_items", ",", "\n", "name", "=", "'aggregate_item_l%d'", "%", "k", ")", "# [num_valid_items, h]", "\n", "\n", "", "all_user_embeddings", "+=", "[", "layer_user_embedding", "*", "self", ".", "gcn_layer_weight", "[", "k", "]", "]", "\n", "all_item_embeddings", "+=", "[", "layer_item_embedding", "*", "self", ".", "gcn_layer_weight", "[", "k", "]", "]", "\n", "\n", "", "all_user_embeddings", "=", "tf", ".", "stack", "(", "all_user_embeddings", ",", "1", ")", "\n", "self", ".", "u_g_embeddings", "=", "tf", ".", "reduce_sum", "(", "all_user_embeddings", ",", "axis", "=", "1", ",", "keepdims", "=", "False", ",", "name", "=", "'updated_u_embedding'", ")", "# [num_users, h]", "\n", "all_item_embeddings", "=", "tf", ".", "stack", "(", "all_item_embeddings", ",", "1", ")", "\n", "self", ".", "i_g_embeddings", "=", "tf", ".", "reduce_sum", "(", "all_item_embeddings", ",", "axis", "=", "1", ",", "keepdims", "=", "False", ",", "name", "=", "'updated_item_embedding'", ")", "# [num_valid_items, h]", "\n", "\n", "######################## Decoder ########################", "\n", "self", ".", "updated_user_embeddings", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros_like", "(", "self", ".", "user_embeddings", ")", ",", "\n", "name", "=", "'updated_user_embeddings'", ",", "dtype", "=", "tf", ".", "float32", ")", "# (users, embedding_size)", "\n", "self", ".", "updated_item_embeddings", "=", "tf", ".", "Variable", "(", "tf", ".", "zeros_like", "(", "self", ".", "valid_item_embeddings", ")", ",", "\n", "name", "=", "'updated_item_embeddings'", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "update_user_assign", "=", "self", ".", "updated_user_embeddings", ".", "assign", "(", "self", ".", "u_g_embeddings", ")", "\n", "self", ".", "update_item_assign", "=", "self", ".", "updated_item_embeddings", ".", "assign", "(", "self", ".", "i_g_embeddings", ")", "\n", "if", "self", ".", "decoder_type", "==", "'FM'", ":", "\n", "# user id", "\n", "                ", "batch_user_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "u_g_embeddings", ",", "self", ".", "user_input", ")", "# [batch_size, h]", "\n", "batch_user_bias", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "user_bias", ",", "self", ".", "user_input", ")", "# [batch_size, 1]", "\n", "# context id", "\n", "batch_context_feature_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "context_feature_embedding", ",", "self", ".", "context_input", ")", "# [batch_size, 5, h]", "\n", "batch_context_feature_bias", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "context_feature_bias", ",", "self", ".", "context_input", ")", "# [batch_size, 5, 1]", "\n", "# positive item id", "\n", "batch_item_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "i_g_embeddings", ",", "self", ".", "item_input", ")", "# [batch_size, h]", "\n", "batch_item_bias", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "item_bias", ",", "self", ".", "item_input", ")", "# [batch_size, 1]", "\n", "# postive part", "\n", "batch_embedding", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "batch_user_embedding", ",", "1", ")", ",", "\n", "tf", ".", "expand_dims", "(", "batch_item_embedding", ",", "1", ")", ",", "\n", "batch_context_feature_embedding", "]", ",", "axis", "=", "1", ")", "# [batch_size, 7, h]", "\n", "batch_bias", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "batch_user_bias", ",", "1", ")", ",", "\n", "tf", ".", "expand_dims", "(", "batch_item_bias", ",", "1", ")", ",", "\n", "batch_context_feature_bias", "]", ",", "axis", "=", "1", ")", "# [batch_size, 7, 1]", "\n", "square_of_sum", "=", "tf", ".", "square", "(", "tf", ".", "reduce_sum", "(", "batch_embedding", ",", "1", ")", ")", "# [batch_size, h]", "\n", "sum_of_square", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "batch_embedding", ")", ",", "1", ")", "# [batch_size, h]", "\n", "bi_linear", "=", "0.5", "*", "tf", ".", "subtract", "(", "square_of_sum", ",", "sum_of_square", ")", "# [batch_size, h]", "\n", "bi_linear", "=", "tf", ".", "reduce_sum", "(", "bi_linear", ",", "1", ",", "keepdims", "=", "True", ")", "# [batch_size, 1]", "\n", "bias", "=", "tf", ".", "reduce_sum", "(", "batch_bias", ",", "1", ",", "keep_dims", "=", "False", ")", "# [batch_size, 1]", "\n", "self", ".", "output", "=", "tf", ".", "add", "(", "bi_linear", ",", "bias", ")", "\n", "self", ".", "output", "=", "tf", ".", "add", "(", "self", ".", "output", ",", "self", ".", "global_bias", ")", "\n", "\n", "#### for evaluation ####", "\n", "# user id", "\n", "batch_user_embedding_eval", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "updated_user_embeddings", ",", "self", ".", "user_input", ")", "# [batch_size, h]", "\n", "# positive item id", "\n", "batch_item_embedding_eval", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "updated_item_embeddings", ",", "self", ".", "item_input", ")", "# [batch_size, h]", "\n", "# postive part", "\n", "batch_embedding_eval", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "batch_user_embedding_eval", ",", "1", ")", ",", "\n", "tf", ".", "expand_dims", "(", "batch_item_embedding_eval", ",", "1", ")", ",", "\n", "batch_context_feature_embedding", "]", ",", "axis", "=", "1", ")", "# [batch_size, 7, h]", "\n", "square_of_sum_eval", "=", "tf", ".", "square", "(", "tf", ".", "reduce_sum", "(", "batch_embedding_eval", ",", "1", ")", ")", "# [batch_size, h]", "\n", "sum_of_square_eval", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "batch_embedding_eval", ")", ",", "1", ")", "# [batch_size, h]", "\n", "bi_linear_eval", "=", "0.5", "*", "tf", ".", "subtract", "(", "square_of_sum_eval", ",", "sum_of_square_eval", ")", "# [batch_size, h]", "\n", "bi_linear_eval", "=", "tf", ".", "reduce_sum", "(", "bi_linear_eval", ",", "1", ",", "keepdims", "=", "True", ")", "# [batch_size, 1]", "\n", "self", ".", "output_eval", "=", "tf", ".", "add", "(", "bi_linear_eval", ",", "bias", ")", "\n", "self", ".", "output_eval", "=", "tf", ".", "add", "(", "self", ".", "output_eval", ",", "self", ".", "global_bias", ")", "\n", "", "elif", "self", ".", "decoder_type", "==", "'FM-pooling'", ":", "\n", "# user id", "\n", "                ", "batch_user_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "u_g_embeddings", ",", "self", ".", "user_input", ")", "# [batch_size, h]", "\n", "batch_user_bias", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "user_bias", ",", "self", ".", "user_input", ")", "# [batch_size, 1]", "\n", "# context id", "\n", "batch_context_feature_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "context_feature_embedding", ",", "self", ".", "context_input", ")", "# [batch_size, 5, h]", "\n", "batch_context_feature_embedding", "=", "tf", ".", "nn", ".", "reduce_mean", "(", "batch_context_feature_embedding", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "# [batch_size, 1, h]", "\n", "batch_context_feature_bias", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "context_feature_bias", ",", "self", ".", "context_input", ")", "# [batch_size, 5, 1]", "\n", "batch_context_feature_bias", "=", "tf", ".", "nn", ".", "reduce_mean", "(", "batch_context_feature_bias", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "# positive item id", "\n", "batch_item_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "i_g_embeddings", ",", "self", ".", "item_input", ")", "# [batch_size, h]", "\n", "batch_item_bias", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "item_bias", ",", "self", ".", "item_input", ")", "# [batch_size, 1]", "\n", "# postive part", "\n", "batch_embedding", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "batch_user_embedding", ",", "1", ")", ",", "\n", "tf", ".", "expand_dims", "(", "batch_item_embedding", ",", "1", ")", ",", "\n", "batch_context_feature_embedding", "]", ",", "axis", "=", "1", ")", "# [batch_size, 7, h]", "\n", "batch_bias", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "batch_user_bias", ",", "1", ")", ",", "\n", "tf", ".", "expand_dims", "(", "batch_item_bias", ",", "1", ")", ",", "\n", "batch_context_feature_bias", "]", ",", "axis", "=", "1", ")", "# [batch_size, 7, 1]", "\n", "square_of_sum", "=", "tf", ".", "square", "(", "tf", ".", "reduce_sum", "(", "batch_embedding", ",", "1", ")", ")", "# [batch_size, h]", "\n", "sum_of_square", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "batch_embedding", ")", ",", "1", ")", "# [batch_size, h]", "\n", "bi_linear", "=", "0.5", "*", "tf", ".", "subtract", "(", "square_of_sum", ",", "sum_of_square", ")", "# [batch_size, h]", "\n", "bi_linear", "=", "tf", ".", "reduce_sum", "(", "bi_linear", ",", "1", ",", "keepdims", "=", "True", ")", "# [batch_size, 1]", "\n", "bias", "=", "tf", ".", "reduce_sum", "(", "batch_bias", ",", "1", ",", "keep_dims", "=", "False", ")", "# [batch_size, 1]", "\n", "self", ".", "output", "=", "tf", ".", "add", "(", "bi_linear", ",", "bias", ")", "\n", "self", ".", "output", "=", "tf", ".", "add", "(", "self", ".", "output", ",", "self", ".", "global_bias", ")", "\n", "\n", "#### for evaluation ####", "\n", "# user id", "\n", "batch_user_embedding_eval", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "updated_user_embeddings", ",", "self", ".", "user_input", ")", "# [batch_size, h]", "\n", "# positive item id", "\n", "batch_item_embedding_eval", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "updated_item_embeddings", ",", "self", ".", "item_input", ")", "# [batch_size, h]", "\n", "# postive part", "\n", "batch_embedding_eval", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "batch_user_embedding_eval", ",", "1", ")", ",", "\n", "tf", ".", "expand_dims", "(", "batch_item_embedding_eval", ",", "1", ")", ",", "\n", "batch_context_feature_embedding", "]", ",", "axis", "=", "1", ")", "# [batch_size, 7, h]", "\n", "square_of_sum_eval", "=", "tf", ".", "square", "(", "tf", ".", "reduce_sum", "(", "batch_embedding_eval", ",", "1", ")", ")", "# [batch_size, h]", "\n", "sum_of_square_eval", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "batch_embedding_eval", ")", ",", "1", ")", "# [batch_size, h]", "\n", "bi_linear_eval", "=", "0.5", "*", "tf", ".", "subtract", "(", "square_of_sum_eval", ",", "sum_of_square_eval", ")", "# [batch_size, h]", "\n", "bi_linear_eval", "=", "tf", ".", "reduce_sum", "(", "bi_linear_eval", ",", "1", ",", "keepdims", "=", "True", ")", "# [batch_size, 1]", "\n", "self", ".", "output_eval", "=", "tf", ".", "add", "(", "bi_linear_eval", ",", "bias", ")", "\n", "self", ".", "output_eval", "=", "tf", ".", "add", "(", "self", ".", "output_eval", ",", "self", ".", "global_bias", ")", "\n", "", "elif", "self", ".", "decoder_type", "==", "'MLP'", ":", "\n", "# user id", "\n", "                ", "batch_user_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "u_g_embeddings", ",", "self", ".", "user_input", ")", "# [batch_size, h]", "\n", "# context id", "\n", "batch_context_feature_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "context_feature_embedding", ",", "self", ".", "context_input", ")", "# [batch_size, 5, h]", "\n", "# positive item id", "\n", "batch_item_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "i_g_embeddings", ",", "self", ".", "item_input", ")", "# [batch_size, h]", "\n", "batch_embedding", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "batch_user_embedding", ",", "1", ")", ",", "\n", "tf", ".", "expand_dims", "(", "batch_item_embedding", ",", "1", ")", ",", "\n", "batch_context_feature_embedding", "]", ",", "axis", "=", "1", ")", "# [batch_size, 7, h]", "\n", "batch_embedding", "=", "tf", ".", "reshape", "(", "batch_embedding", ",", "[", "-", "1", ",", "self", ".", "hidden_factor", "*", "(", "self", ".", "num_context_fields", "+", "2", ")", "]", ")", "\n", "for", "k", "in", "range", "(", "1", ",", "self", ".", "num_hidden_layers", "+", "1", ")", ":", "\n", "                    ", "batch_embedding", "=", "tf", ".", "layers", ".", "dense", "(", "batch_embedding", ",", "\n", "self", ".", "hidden_factor", ",", "\n", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ",", "\n", "use_bias", "=", "True", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "name", "=", "'predict_hidden_l%d'", "%", "k", ")", "\n", "", "self", ".", "output", "=", "tf", ".", "layers", ".", "dense", "(", "batch_embedding", ",", "\n", "1", ",", "\n", "use_bias", "=", "False", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "name", "=", "'predictor'", ")", "\n", "#### for evaluation ####", "\n", "# user id", "\n", "batch_user_embedding_eval", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "updated_user_embeddings", ",", "self", ".", "user_input", ")", "# [batch_size, h]", "\n", "# positive item id", "\n", "batch_item_embedding_eval", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "updated_item_embeddings", ",", "self", ".", "item_input", ")", "# [batch_size, h]", "\n", "batch_embedding_eval", "=", "tf", ".", "concat", "(", "[", "tf", ".", "expand_dims", "(", "batch_user_embedding_eval", ",", "1", ")", ",", "\n", "tf", ".", "expand_dims", "(", "batch_item_embedding_eval", ",", "1", ")", ",", "\n", "batch_context_feature_embedding", "]", ",", "axis", "=", "1", ")", "# [batch_size, 7, h]", "\n", "batch_embedding_eval", "=", "tf", ".", "reshape", "(", "batch_embedding_eval", ",", "[", "-", "1", ",", "self", ".", "hidden_factor", "*", "(", "self", ".", "num_context_fields", "+", "2", ")", "]", ")", "\n", "for", "k", "in", "range", "(", "1", ",", "self", ".", "num_hidden_layers", "+", "1", ")", ":", "\n", "                    ", "batch_embedding_eval", "=", "tf", ".", "layers", ".", "dense", "(", "batch_embedding_eval", ",", "\n", "self", ".", "hidden_factor", ",", "\n", "activation", "=", "tf", ".", "nn", ".", "leaky_relu", ",", "\n", "use_bias", "=", "True", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "name", "=", "'predict_hidden_l%d'", "%", "k", ")", "\n", "", "self", ".", "output_eval", "=", "tf", ".", "layers", ".", "dense", "(", "batch_embedding_eval", ",", "\n", "1", ",", "\n", "use_bias", "=", "False", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "name", "=", "'predictor'", ")", "\n", "", "elif", "self", ".", "decoder_type", "==", "'IP'", ":", "\n", "# user id", "\n", "                ", "batch_user_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "u_g_embeddings", ",", "self", ".", "user_input", ")", "# [batch_size, h]", "\n", "# positive item id", "\n", "batch_item_embedding", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "i_g_embeddings", ",", "self", ".", "item_input", ")", "# [batch_size, h]", "\n", "self", ".", "output", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "batch_user_embedding", ",", "batch_item_embedding", ")", ",", "1", ",", "keepdims", "=", "True", ")", "\n", "#### for evaluation ####", "\n", "# user id", "\n", "batch_user_embedding_eval", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "updated_user_embeddings", ",", "self", ".", "user_input", ")", "# [batch_size, h]", "\n", "# positive item id", "\n", "batch_item_embedding_eval", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "updated_item_embeddings", ",", "self", ".", "item_input", ")", "# [batch_size, h]", "\n", "self", ".", "output_eval", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "batch_user_embedding_eval", ",", "batch_item_embedding_eval", ")", ",", "1", ",", "keepdims", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM._create_loss": [[484, 496], ["tensorflow.name_scope", "tensorflow.reduce_sum", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "utility.Tool.l2_loss", "tensorflow.squeeze"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.l2_loss"], ["", "", "", "def", "_create_loss", "(", "self", ")", ":", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"loss\"", ")", ":", "\n", "            ", "self", ".", "log_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "self", ".", "labels", ",", "logits", "=", "tf", ".", "squeeze", "(", "self", ".", "output", ")", ")", ")", "\n", "\n", "u_embeddings_pre", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "user_embeddings", ",", "self", ".", "user_input", ")", "\n", "i_embeddings_pre", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "item_embeddings", ",", "self", ".", "item_input", ")", "\n", "feature_embeddings_pre", "=", "tf", ".", "concat", "(", "[", "self", ".", "user_feature_embeddings", ",", "\n", "self", ".", "item_feature_embeddings", ",", "\n", "self", ".", "context_feature_embeddings", "]", ",", "0", ")", "\n", "self", ".", "emb_loss", "=", "self", ".", "reg", "*", "Tool", ".", "l2_loss", "(", "u_embeddings_pre", ",", "i_embeddings_pre", ",", "feature_embeddings_pre", ")", "\n", "# self.emb_loss = self.regs[0] * Tool.l2_loss(self.all_init_embedding, self.all_init_bias)", "\n", "self", ".", "loss", "=", "self", ".", "log_loss", "+", "self", ".", "emb_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM._create_optimizer": [[497, 500], ["tensorflow.name_scope", "utility.Learner.optimizer"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Learner.optimizer"], ["", "", "def", "_create_optimizer", "(", "self", ")", ":", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"learner\"", ")", ":", "\n", "            ", "self", ".", "optimizer", "=", "Learner", ".", "optimizer", "(", "self", ".", "optimizer_type", ",", "self", ".", "loss", ",", "self", ".", "learning_rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.build_graph": [[501, 508], ["GCM.GCM._create_placeholders", "GCM.GCM._create_variables", "GCM.GCM._create_inference", "GCM.GCM._create_loss", "GCM.GCM._create_optimizer", "tensorflow.train.Saver"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM._create_placeholders", "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM._create_variables", "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM._create_inference", "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM._create_loss", "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM._create_optimizer"], ["", "", "def", "build_graph", "(", "self", ")", ":", "\n", "        ", "self", ".", "_create_placeholders", "(", ")", "\n", "self", ".", "_create_variables", "(", ")", "\n", "self", ".", "_create_inference", "(", ")", "\n", "self", ".", "_create_loss", "(", ")", "\n", "self", ".", "_create_optimizer", "(", ")", "\n", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.train_model": [[510, 591], ["logger.info", "GCM.GCM.evaluate", "logger.info", "utility.DataGenerator._get_pointwise_all_data_context", "utility.DataIterator.DataIterator", "range", "logger.info", "GCM.GCM.evaluator.metrics_info", "time.time.time", "logger.info", "logger.info", "utility.DataGenerator._get_pairwise_all_data_context", "utility.DataIterator.DataIterator", "time.time.time", "utility.DataGenerator._get_pointwise_all_data_context", "utility.DataIterator.DataIterator", "time.time.time", "GCM.GCM.sess.run", "GCM.GCM.evaluate", "logger.info", "GCM.GCM.sess.run", "GCM.GCM.sess.run", "logger.info", "logger.info", "GCM.GCM.saver.save", "logger.info", "len", "len", "len", "time.time.time", "time.time.time", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.evaluate", "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataGenerator._get_pointwise_all_data_context", "home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.metrics_info", "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataGenerator._get_pairwise_all_data_context", "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataGenerator._get_pointwise_all_data_context", "home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.evaluate"], ["", "def", "train_model", "(", "self", ")", ":", "\n", "# FM_user_embedding, FM_item_embedding = self.sess.run([self.user_embeddings, self.item_embeddings])", "\n", "# np.savez('./visual/FM/results.npz', user_embed=FM_user_embedding, item_embed=FM_item_embedding)", "\n", "        ", "logger", ".", "info", "(", "self", ".", "evaluator", ".", "metrics_info", "(", ")", ")", "\n", "buf", ",", "flag", "=", "self", ".", "evaluate", "(", ")", "\n", "logger", ".", "info", "(", "\"epoch 0:\\t%s\"", "%", "buf", ")", "\n", "user_input_val", ",", "context_input_val", ",", "item_input_val", ",", "labels_val", "=", "DataGenerator", ".", "_get_pointwise_all_data_context", "(", "self", ".", "dataset", ",", "self", ".", "num_negatives", ",", "phase", "=", "'valid'", ")", "\n", "data_iter_val", "=", "DataIterator", "(", "user_input_val", ",", "context_input_val", ",", "item_input_val", ",", "labels_val", ",", "\n", "batch_size", "=", "self", ".", "test_batch_size", ",", "shuffle", "=", "False", ")", "\n", "for", "epoch", "in", "range", "(", "1", ",", "self", ".", "num_epochs", "+", "1", ")", ":", "\n", "            ", "total_loss", ",", "total_emb_loss", "=", "0.0", ",", "0.0", "\n", "training_start_time", "=", "time", "(", ")", "\n", "\n", "# Generate training instances", "\n", "if", "self", ".", "loss_type", "==", "'bpr_loss'", ":", "\n", "                ", "user_input", ",", "context_input", ",", "item_input_pos", ",", "item_input_neg", "=", "DataGenerator", ".", "_get_pairwise_all_data_context", "(", "self", ".", "dataset", ")", "\n", "data_iter", "=", "DataIterator", "(", "user_input", ",", "context_input", ",", "item_input_pos", ",", "item_input_neg", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "\n", "time1", "=", "time", "(", ")", "\n", "for", "bat_users", ",", "bat_context", ",", "bat_items_pos", ",", "bat_items_neg", "in", "data_iter", ":", "\n", "                    ", "feed_dict", "=", "{", "self", ".", "user_input", ":", "bat_users", ",", "\n", "self", ".", "context_input", ":", "bat_context", ",", "\n", "self", ".", "item_input", ":", "bat_items_pos", ",", "\n", "self", ".", "item_input_neg", ":", "bat_items_neg", "}", "\n", "loss", ",", "_", "=", "self", ".", "sess", ".", "run", "(", "(", "self", ".", "loss", ",", "self", ".", "optimizer", ")", ",", "feed_dict", "=", "feed_dict", ")", "\n", "total_loss", "+=", "loss", "\n", "", "", "else", ":", "\n", "                ", "user_input", ",", "context_input", ",", "item_input", ",", "labels", "=", "DataGenerator", ".", "_get_pointwise_all_data_context", "(", "self", ".", "dataset", ",", "self", ".", "num_negatives", ")", "\n", "data_iter", "=", "DataIterator", "(", "user_input", ",", "context_input", ",", "item_input", ",", "labels", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "time1", "=", "time", "(", ")", "\n", "for", "bat_users", ",", "bat_context", ",", "bat_items", ",", "bat_labels", "in", "data_iter", ":", "\n", "                    ", "feed_dict", "=", "{", "self", ".", "user_input", ":", "bat_users", ",", "\n", "self", ".", "context_input", ":", "bat_context", ",", "\n", "self", ".", "item_input", ":", "bat_items", ",", "\n", "self", ".", "labels", ":", "bat_labels", "}", "\n", "loss", ",", "emb_loss", ",", "_", "=", "self", ".", "sess", ".", "run", "(", "(", "self", ".", "loss", ",", "self", ".", "emb_loss", ",", "self", ".", "optimizer", ")", ",", "feed_dict", "=", "feed_dict", ")", "\n", "total_loss", "+=", "loss", "\n", "total_emb_loss", "+=", "emb_loss", "\n", "", "", "logger", ".", "info", "(", "\"[iter %d : loss: %f = %f + %f, time: %.1f = %.1f + %.1f]\"", "%", "(", "epoch", ",", "\n", "total_loss", "/", "len", "(", "user_input", ")", ",", "\n", "(", "total_loss", "-", "total_emb_loss", ")", "/", "len", "(", "user_input", ")", ",", "\n", "total_emb_loss", "/", "len", "(", "user_input", ")", ",", "\n", "time", "(", ")", "-", "training_start_time", ",", "\n", "time1", "-", "training_start_time", ",", "\n", "time", "(", ")", "-", "time1", ")", ")", "\n", "total_loss_val", ",", "total_emb_loss_val", "=", "0.0", ",", "0.0", "\n", "for", "bat_users", ",", "bat_context", ",", "bat_items", ",", "bat_labels", "in", "data_iter_val", ":", "\n", "                ", "feed_dict", "=", "{", "self", ".", "user_input", ":", "bat_users", ",", "\n", "self", ".", "context_input", ":", "bat_context", ",", "\n", "self", ".", "item_input", ":", "bat_items", ",", "\n", "self", ".", "labels", ":", "bat_labels", "}", "\n", "loss", ",", "emb_loss", "=", "self", ".", "sess", ".", "run", "(", "(", "self", ".", "loss", ",", "self", ".", "emb_loss", ")", ",", "feed_dict", "=", "feed_dict", ")", "\n", "total_loss_val", "+=", "loss", "\n", "total_emb_loss_val", "+=", "emb_loss", "\n", "", "logger", ".", "info", "(", "\"[Validation loss @ %d: %.4f = %.4f + %.4f]\"", "%", "(", "epoch", ",", "\n", "total_loss_val", "/", "len", "(", "user_input_val", ")", ",", "\n", "(", "total_loss_val", "-", "total_emb_loss_val", ")", "/", "len", "(", "user_input_val", ")", ",", "\n", "total_emb_loss_val", "/", "len", "(", "user_input_val", ")", ")", ")", "\n", "if", "epoch", "%", "args", ".", "test_interval", "==", "0", ":", "\n", "# GCM_user_embedding, GCM_item_embedding = self.sess.run([self.u_g_embeddings, self.i_g_embeddings])", "\n", "# np.savez('./visual/GCM/results.npz', user_embed=GCM_user_embedding, item_embed=GCM_item_embedding)", "\n", "                ", "buf", ",", "flag", "=", "self", ".", "evaluate", "(", ")", "\n", "if", "flag", ":", "\n", "                    ", "self", ".", "best_epoch", "=", "epoch", "\n", "stopping_step", "=", "0", "\n", "logger", ".", "info", "(", "\"Find a better model.\"", ")", "\n", "if", "self", ".", "save_flag", ">", "0", ":", "\n", "                        ", "logger", ".", "info", "(", "\"Save model to file as pretrain.\"", ")", "\n", "self", ".", "saver", ".", "save", "(", "self", ".", "sess", ",", "self", ".", "save_file", ")", "\n", "", "", "else", ":", "\n", "                    ", "stopping_step", "+=", "1", "\n", "if", "stopping_step", ">=", "args", ".", "stop_cnt", ":", "\n", "                        ", "logger", ".", "info", "(", "\"Early stopping is trigger at epoch: {}\"", ".", "format", "(", "epoch", ")", ")", "\n", "break", "\n", "", "", "logger", ".", "info", "(", "\"epoch %d:\\t%s\"", "%", "(", "epoch", ",", "buf", ")", ")", "\n", "\n", "", "", "buf", "=", "'\\t'", ".", "join", "(", "[", "(", "\"%.4f\"", "%", "x", ")", ".", "ljust", "(", "12", ")", "for", "x", "in", "self", ".", "best_result", "]", ")", "\n", "logger", ".", "info", "(", "\"best_result@epoch %d:\\n\"", "%", "self", ".", "best_epoch", "+", "buf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.evaluate": [[596, 605], ["GCM.GCM.sess.run", "GCM.GCM.evaluator.evaluate4CARS"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.evaluate4CARS"], ["", "@", "timer", "\n", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "_", "=", "self", ".", "sess", ".", "run", "(", "(", "self", ".", "update_user_assign", ",", "self", ".", "update_item_assign", ")", ")", "\n", "flag", "=", "False", "\n", "current_result", ",", "buf", "=", "self", ".", "evaluator", ".", "evaluate4CARS", "(", "self", ")", "\n", "if", "self", ".", "best_result", "[", "0", "]", "+", "self", ".", "best_result", "[", "2", "]", "<", "current_result", "[", "0", "]", "+", "current_result", "[", "2", "]", ":", "\n", "            ", "self", ".", "best_result", "=", "current_result", "\n", "flag", "=", "True", "\n", "", "return", "buf", ",", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.None.GCM.GCM.predict": [[606, 618], ["time.time.time", "numpy.empty", "zip", "GCM.GCM.sess.run", "len", "list", "range"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "user_ids", ",", "context_ids", ")", ":", "\n", "        ", "t1", "=", "time", "(", ")", "\n", "ratings", "=", "np", ".", "empty", "(", "[", "len", "(", "user_ids", ")", ",", "self", ".", "num_valid_items", "]", ")", "\n", "cnt", "=", "0", "\n", "for", "user_id", ",", "context_id", "in", "zip", "(", "user_ids", ",", "context_ids", ")", ":", "\n", "            ", "feed_dict", "=", "{", "self", ".", "user_input", ":", "[", "user_id", "]", "*", "self", ".", "num_valid_items", ",", "\n", "self", ".", "context_input", ":", "[", "context_id", "]", "*", "self", ".", "num_valid_items", ",", "\n", "self", ".", "item_input", ":", "list", "(", "range", "(", "self", ".", "num_valid_items", ")", ")", "}", "\n", "rating_one_user", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "output_eval", ",", "feed_dict", "=", "feed_dict", ")", "\n", "ratings", "[", "cnt", ",", ":", "]", "=", "rating_one_user", "[", ":", ",", "0", "]", "\n", "cnt", "+=", "1", "\n", "", "return", "ratings", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.Sampler.__init__": [[15, 17], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.Sampler.__iter__": [[18, 20], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.Sampler.__len__": [[21, 23], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.SequentialSampler.__init__": [[32, 35], ["DataIterator.Sampler.__init__"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.__init__"], ["def", "__init__", "(", "self", ",", "data_source", ")", ":", "\n", "        ", "super", "(", "SequentialSampler", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data_source", "=", "data_source", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.SequentialSampler.__iter__": [[36, 38], ["iter", "range", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "range", "(", "len", "(", "self", ".", "data_source", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.SequentialSampler.__len__": [[39, 41], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.RandomSampler.__init__": [[50, 53], ["DataIterator.Sampler.__init__"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.__init__"], ["def", "__init__", "(", "self", ",", "data_source", ")", ":", "\n", "        ", "super", "(", "RandomSampler", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data_source", "=", "data_source", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.RandomSampler.__iter__": [[54, 57], ["numpy.random.permutation().tolist", "iter", "numpy.random.permutation", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "perm", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "self", ".", "data_source", ")", ")", ".", "tolist", "(", ")", "\n", "return", "iter", "(", "perm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.RandomSampler.__len__": [[58, 60], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.BatchSampler.__init__": [[72, 88], ["DataIterator.Sampler.__init__", "isinstance", "ValueError", "isinstance", "ValueError", "isinstance", "ValueError", "isinstance"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.__init__"], ["def", "__init__", "(", "self", ",", "sampler", ",", "batch_size", ",", "drop_last", ")", ":", "\n", "        ", "super", "(", "BatchSampler", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "not", "isinstance", "(", "sampler", ",", "Sampler", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"sampler should be an instance of \"", "\n", "\"torch.utils.data.Sampler, but got sampler={}\"", "\n", ".", "format", "(", "sampler", ")", ")", "\n", "", "if", "not", "isinstance", "(", "batch_size", ",", "int", ")", "or", "isinstance", "(", "batch_size", ",", "bool", ")", "or", "batch_size", "<=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"batch_size should be a positive integeral value, \"", "\n", "\"but got batch_size={}\"", ".", "format", "(", "batch_size", ")", ")", "\n", "", "if", "not", "isinstance", "(", "drop_last", ",", "bool", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"drop_last should be a boolean value, but got \"", "\n", "\"drop_last={}\"", ".", "format", "(", "drop_last", ")", ")", "\n", "", "self", ".", "sampler", "=", "sampler", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "drop_last", "=", "drop_last", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.BatchSampler.__iter__": [[89, 98], ["batch.append", "len", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "batch", "=", "[", "]", "\n", "for", "idx", "in", "self", ".", "sampler", ":", "\n", "            ", "batch", ".", "append", "(", "idx", ")", "\n", "if", "len", "(", "batch", ")", "==", "self", ".", "batch_size", ":", "\n", "                ", "yield", "batch", "\n", "batch", "=", "[", "]", "\n", "", "", "if", "len", "(", "batch", ")", ">", "0", "and", "not", "self", ".", "drop_last", ":", "\n", "            ", "yield", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.BatchSampler.__len__": [[99, 104], ["len", "len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "drop_last", ":", "\n", "            ", "return", "len", "(", "self", ".", "sampler", ")", "//", "self", ".", "batch_size", "\n", "", "else", ":", "\n", "            ", "return", "(", "len", "(", "self", ".", "sampler", ")", "+", "self", ".", "batch_size", "-", "1", ")", "//", "self", ".", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator._Dataset.__init__": [[112, 116], ["len", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "data", ")", ":", "\n", "        ", "for", "d", "in", "data", ":", "\n", "            ", "assert", "len", "(", "d", ")", "==", "len", "(", "data", "[", "0", "]", ")", "\n", "", "self", ".", "data", "=", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator._Dataset.__len__": [[117, 119], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator._Dataset.__getitem__": [[120, 122], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "[", "data", "[", "idx", "]", "for", "data", "in", "self", ".", "data", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator._DataLoaderIter.__init__": [[127, 132], ["iter"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "loader", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "loader", ".", "dataset", "\n", "self", ".", "batch_sampler", "=", "loader", ".", "batch_sampler", "\n", "\n", "self", ".", "sample_iter", "=", "iter", "(", "self", ".", "batch_sampler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator._DataLoaderIter.__len__": [[133, 135], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "batch_sampler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator._DataLoaderIter.__next__": [[136, 144], ["next", "list", "len", "zip"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "indices", "=", "next", "(", "self", ".", "sample_iter", ")", "# may raise StopIteration", "\n", "batch", "=", "[", "self", ".", "dataset", "[", "i", "]", "for", "i", "in", "indices", "]", "\n", "\n", "transposed", "=", "[", "list", "(", "samples", ")", "for", "samples", "in", "zip", "(", "*", "batch", ")", "]", "\n", "if", "len", "(", "transposed", ")", "==", "1", ":", "\n", "            ", "transposed", "=", "transposed", "[", "0", "]", "\n", "", "return", "transposed", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator._DataLoaderIter.__iter__": [[145, 147], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator._DataLoaderIter.__getstate__": [[148, 154], ["NotImplementedError"], "methods", ["None"], ["", "def", "__getstate__", "(", "self", ")", ":", "\n", "# across multiple threads for HOGWILD.", "\n", "# Probably the best way to do this is by moving the sample pushing", "\n", "# to a separate thread and then just sharing the data queue", "\n", "# but signalling the end is tricky without a non-blocking API", "\n", "        ", "raise", "NotImplementedError", "(", "\"_DataLoaderIter cannot be pickled\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator._DataLoaderIter.__del__": [[155, 157], ["None"], "methods", ["None"], ["", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.DataIterator.__init__": [[176, 188], ["DataIterator._Dataset", "DataIterator.BatchSampler", "list", "DataIterator.RandomSampler", "DataIterator.SequentialSampler"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "*", "data", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ")", ":", "\n", "        ", "dataset", "=", "_Dataset", "(", "list", "(", "data", ")", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "drop_last", "=", "drop_last", "\n", "\n", "if", "shuffle", ":", "\n", "            ", "sampler", "=", "RandomSampler", "(", "dataset", ")", "\n", "", "else", ":", "\n", "            ", "sampler", "=", "SequentialSampler", "(", "dataset", ")", "\n", "\n", "", "self", ".", "batch_sampler", "=", "BatchSampler", "(", "sampler", ",", "batch_size", ",", "drop_last", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.DataIterator.__iter__": [[189, 191], ["DataIterator._DataLoaderIter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "_DataLoaderIter", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataIterator.DataIterator.__len__": [[192, 194], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "batch_sampler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.__init__": [[24, 39], ["LoadData.LoadData.cnt_user_item_context", "LoadData.LoadData.bind_contexts", "LoadData.LoadData.get_item_features", "len", "LoadData.LoadData.construct_context_mat", "LoadData.LoadData.construct_u_i_c_mat", "LoadData.LoadData.normalize_adj_mat", "LoadData.LoadData.get_positive_list", "LoadData.LoadData.construct_data"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.cnt_user_item_context", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.bind_contexts", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.get_item_features", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_context_mat", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.construct_u_i_c_mat", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.normalize_adj_mat", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.get_positive_list", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_data"], ["def", "__init__", "(", "self", ",", "path", ",", "dataset", ",", "model_name", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "+", "dataset", "+", "\"/\"", "\n", "self", ".", "trainfile", "=", "self", ".", "path", "+", "\"train.dat\"", "\n", "self", ".", "testfile", "=", "self", ".", "path", "+", "\"test.dat\"", "\n", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "num_users", ",", "self", ".", "num_items", ",", "self", ".", "num_context_features", ",", "self", ".", "num_fields", ",", "self", ".", "num_item_features", "=", "self", ".", "cnt_user_item_context", "(", ")", "\n", "self", ".", "binded_context", ",", "self", ".", "binded_context_reverse", "=", "self", ".", "bind_contexts", "(", ")", "\n", "self", ".", "binded_item_features", "=", "self", ".", "get_item_features", "(", ")", "\n", "self", ".", "num_contexts", "=", "len", "(", "self", ".", "binded_context", ")", "\n", "self", ".", "context_matrix", "=", "self", ".", "construct_context_mat", "(", ")", "\n", "self", ".", "sp_H_u_i", ",", "self", ".", "sp_H_u_c", ",", "self", ".", "sp_H_i_c", "=", "self", ".", "construct_u_i_c_mat", "(", ")", "\n", "# self.binded_ins_user, self.binded_ins_item, self.binded_ins_context = self.bind_instance_u_i_c()", "\n", "self", ".", "norm_adj_mat", "=", "self", ".", "normalize_adj_mat", "(", ")", "\n", "self", ".", "user_context_positive_list", "=", "self", ".", "get_positive_list", "(", "self", ".", "trainfile", ")", "# userID positive itemID and contextID", "\n", "self", ".", "Train_data", ",", "self", ".", "Test_data", "=", "self", ".", "construct_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.cnt_user_item_context": [[40, 59], ["pandas.read_csv", "pandas.read_csv", "max", "max", "max", "max", "df[].max", "df[].max", "len", "df[].max", "df[].max", "df[].min", "df_test[].max", "df_test[].max", "df_test[].max", "df_test[].max", "df_test[].min"], "methods", ["None"], ["", "def", "cnt_user_item_context", "(", "self", ")", ":", "\n", "        ", "'''\n        count the number of users and items\n        '''", "\n", "df", "=", "pd", ".", "read_csv", "(", "self", ".", "trainfile", ")", "\n", "num_users", "=", "df", "[", "'uid'", "]", ".", "max", "(", ")", "+", "1", "\n", "num_items", "=", "df", "[", "'iid'", "]", ".", "max", "(", ")", "+", "1", "\n", "num_fields", "=", "len", "(", "df", ".", "columns", ")", "-", "3", "# the last column is item feature", "\n", "num_context_features", "=", "df", "[", "df", ".", "columns", "[", "-", "2", "]", "]", ".", "max", "(", ")", "+", "1", "\n", "num_item_features", "=", "df", "[", "df", ".", "columns", "[", "-", "1", "]", "]", ".", "max", "(", ")", "-", "df", "[", "\n", "df", ".", "columns", "[", "-", "1", "]", "]", ".", "min", "(", ")", "+", "1", "\n", "\n", "df_test", "=", "pd", ".", "read_csv", "(", "self", ".", "testfile", ")", "\n", "num_users", "=", "max", "(", "num_users", ",", "df_test", "[", "'uid'", "]", ".", "max", "(", ")", "+", "1", ")", "\n", "num_items", "=", "max", "(", "num_items", ",", "df_test", "[", "'iid'", "]", ".", "max", "(", ")", "+", "1", ")", "\n", "num_context_features", "=", "max", "(", "num_context_features", ",", "df_test", "[", "df_test", ".", "columns", "[", "-", "2", "]", "]", ".", "max", "(", ")", "+", "1", ")", "\n", "num_item_features", "=", "max", "(", "num_item_features", ",", "df_test", "[", "df_test", ".", "columns", "[", "-", "1", "]", "]", ".", "max", "(", ")", "-", "df_test", "[", "\n", "df_test", ".", "columns", "[", "-", "1", "]", "]", ".", "min", "(", ")", "+", "1", ")", "\n", "return", "num_users", ",", "num_items", ",", "num_context_features", ",", "num_fields", ",", "num_item_features", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.construct_u_i_c_mat": [[60, 84], ["scipy.dok_matrix", "scipy.dok_matrix", "scipy.dok_matrix", "open", "open.readline", "open.readline", "open.close", "open.readline.strip().split", "int", "int", "open.readline", "scipy.dok_matrix.tolil", "scipy.dok_matrix.tolil", "scipy.dok_matrix.tolil", "open.readline.strip", "str"], "methods", ["None"], ["", "def", "construct_u_i_c_mat", "(", "self", ")", ":", "\n", "        ", "'''\n        construct user-item interaction matrix R\n        :return: a sparse matrix R\n        '''", "\n", "H_ui", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "num_users", ",", "self", ".", "num_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "H_uc", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "num_users", ",", "self", ".", "num_contexts", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "H_ic", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "num_items", ",", "self", ".", "num_contexts", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# H_cf_ui = sp.dok_matrix((self.num_context_features, self.num_users + self.num_items), dtype=np.float32)", "\n", "f", "=", "open", "(", "self", ".", "trainfile", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "user_id", "=", "int", "(", "features", "[", "0", "]", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "context", "=", "\"-\"", ".", "join", "(", "[", "str", "(", "feature", ")", "for", "feature", "in", "features", "[", "2", ":", "-", "1", "]", "]", ")", "# the last column is item feature", "\n", "context_id", "=", "self", ".", "binded_context", "[", "context", "]", "\n", "H_ui", "[", "user_id", ",", "item_id", "]", "=", "1.", "\n", "H_uc", "[", "user_id", ",", "context_id", "]", "=", "1.", "\n", "H_ic", "[", "item_id", ",", "context_id", "]", "=", "1.", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "H_ui", ".", "tolil", "(", ")", ",", "H_uc", ".", "tolil", "(", ")", ",", "H_ic", ".", "tolil", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.bind_contexts": [[85, 108], ["LoadData.LoadData.bind_contexts.bind_c"], "methods", ["None"], ["", "def", "bind_contexts", "(", "self", ")", ":", "\n", "        ", "def", "bind_c", "(", "filename", ",", "binded_context", ",", "binded_context_reverse", ")", ":", "\n", "            ", "f", "=", "open", "(", "filename", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "n_context", "=", "len", "(", "binded_context", ")", "\n", "while", "line", ":", "\n", "                ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "context", "=", "\"-\"", ".", "join", "(", "[", "str", "(", "item", ")", "for", "item", "in", "features", "[", "2", ":", "-", "1", "]", "]", ")", "\n", "if", "context", "not", "in", "binded_context", ":", "\n", "                    ", "binded_context", "[", "context", "]", "=", "n_context", "\n", "binded_context_reverse", "[", "n_context", "]", "=", "context", "\n", "n_context", "+=", "1", "\n", "", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "binded_context", ",", "binded_context_reverse", "\n", "\n", "", "binded_context", ",", "binded_context_reverse", "=", "{", "}", ",", "{", "}", "\n", "binded_context", ",", "binded_context_reverse", "=", "bind_c", "(", "\n", "self", ".", "trainfile", ",", "binded_context", ",", "binded_context_reverse", ")", "\n", "binded_context", ",", "binded_context_reverse", "=", "bind_c", "(", "\n", "self", ".", "testfile", ",", "binded_context", ",", "binded_context_reverse", ")", "\n", "return", "binded_context", ",", "binded_context_reverse", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.get_item_features": [[109, 145], ["open", "open.readline", "open.readline", "open.close", "len", "open", "open.readline", "open.readline", "open.close", "len", "print", "open.readline.strip().split", "int", "int", "open.readline", "open.readline.strip().split", "int", "int", "open.readline", "open.readline.strip", "open.readline.strip"], "methods", ["None"], ["", "def", "get_item_features", "(", "self", ")", ":", "\n", "# scan training file", "\n", "        ", "f", "=", "open", "(", "self", ".", "trainfile", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "item_features", "=", "{", "}", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "feature_id", "=", "int", "(", "features", "[", "-", "1", "]", ")", "\n", "if", "item_id", "not", "in", "item_features", ":", "\n", "                ", "item_features", "[", "item_id", "]", "=", "feature_id", "\n", "", "else", ":", "\n", "                ", "if", "feature_id", "!=", "item_features", "[", "item_id", "]", ":", "\n", "                    ", "return", "\n", "", "", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "cnt1", "=", "len", "(", "item_features", ")", "\n", "# scan testing file", "\n", "f", "=", "open", "(", "self", ".", "testfile", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "feature_id", "=", "int", "(", "features", "[", "-", "1", "]", ")", "\n", "if", "item_id", "not", "in", "item_features", ":", "\n", "                ", "item_features", "[", "item_id", "]", "=", "feature_id", "\n", "", "else", ":", "\n", "                ", "if", "feature_id", "!=", "item_features", "[", "item_id", "]", ":", "\n", "                    ", "return", "\n", "", "", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "cnt2", "=", "len", "(", "item_features", ")", "\n", "print", "(", "'the number of items that only exist in testing set is %d, amount to %.1f %%'", "%", "(", "cnt2", "-", "cnt1", ",", "100", "*", "(", "cnt2", "-", "cnt1", ")", "/", "cnt2", ")", ")", "\n", "return", "item_features", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.bind_instance_u_i_c": [[146, 163], ["open", "open.readline", "open.readline", "open.close", "open.readline.strip().split", "int", "int", "binded_ins_user.append", "binded_ins_item.append", "binded_ins_context.append", "open.readline", "open.readline.strip", "str"], "methods", ["None"], ["", "def", "bind_instance_u_i_c", "(", "self", ")", ":", "\n", "        ", "f", "=", "open", "(", "self", ".", "trainfile", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "binded_ins_user", ",", "binded_ins_item", ",", "binded_ins_context", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "user_id", "=", "int", "(", "features", "[", "0", "]", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "context", "=", "\"-\"", ".", "join", "(", "[", "str", "(", "c", ")", "for", "c", "in", "features", "[", "2", ":", "-", "1", "]", "]", ")", "\n", "context_id", "=", "self", ".", "binded_context", "[", "context", "]", "\n", "binded_ins_user", ".", "append", "(", "user_id", ")", "\n", "binded_ins_item", ".", "append", "(", "item_id", ")", "\n", "binded_ins_context", ".", "append", "(", "context_id", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "binded_ins_user", ",", "binded_ins_item", ",", "binded_ins_context", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.normalize_adj_mat": [[164, 204], ["scipy.dok_matrix", "adj_mat.todok.todok.tolil", "adj_mat.todok.todok.todok", "LoadData.LoadData.normalize_adj_mat.normalized_adj_double"], "methods", ["None"], ["", "def", "normalize_adj_mat", "(", "self", ")", ":", "\n", "        ", "def", "normalized_adj_single", "(", "adj", ")", ":", "\n", "            ", "rowsum", "=", "np", ".", "array", "(", "adj", ".", "sum", "(", "1", ")", ")", "\n", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat_inv", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat_inv", ".", "dot", "(", "adj", ")", "\n", "print", "(", "'generate single-normalized user-item adjacency matrix.'", ")", "\n", "return", "norm_adj", ".", "tocoo", "(", ")", "\n", "\n", "", "def", "normalized_adj_double", "(", "adj", ")", ":", "\n", "            ", "rowsum", "=", "np", ".", "array", "(", "adj", ".", "sum", "(", "1", ")", ")", "\n", "\n", "d_sqrt_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_sqrt_inv", "[", "np", ".", "isinf", "(", "d_sqrt_inv", ")", "]", "=", "0.", "\n", "d_mat_inv", "=", "sp", ".", "diags", "(", "d_sqrt_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat_inv", ".", "dot", "(", "adj", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat_inv", ")", "\n", "print", "(", "'generate double-normalized user-item adjacency matrix.'", ")", "\n", "return", "norm_adj", ".", "tocoo", "(", ")", "\n", "\n", "# construct adj matrix for user-item pair", "\n", "", "adj_mat", "=", "sp", ".", "dok_matrix", "(", "\n", "(", "self", ".", "num_users", "+", "self", ".", "num_items", "+", "self", ".", "num_contexts", ",", "self", ".", "num_users", "+", "self", ".", "num_items", "+", "self", ".", "num_contexts", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat", "=", "adj_mat", ".", "tolil", "(", ")", "\n", "adj_mat", "[", ":", "self", ".", "num_users", ",", "self", ".", "num_users", ":", "self", ".", "num_users", "+", "self", ".", "num_items", "]", "=", "self", ".", "sp_H_u_i", "\n", "adj_mat", "[", ":", "self", ".", "num_users", ",", "self", ".", "num_users", "+", "self", ".", "num_items", ":", "]", "=", "self", ".", "sp_H_u_c", "\n", "adj_mat", "[", "self", ".", "num_users", ":", "self", ".", "num_users", "+", "self", ".", "num_items", ",", ":", "self", ".", "num_users", "]", "=", "self", ".", "sp_H_u_i", ".", "T", "\n", "adj_mat", "[", "self", ".", "num_users", ":", "self", ".", "num_users", "+", "self", ".", "num_items", ",", "self", ".", "num_users", "+", "self", ".", "num_items", ":", "]", "=", "self", ".", "sp_H_i_c", "\n", "adj_mat", "[", "self", ".", "num_users", "+", "self", ".", "num_items", ":", ",", ":", "self", ".", "num_users", "]", "=", "self", ".", "sp_H_u_c", ".", "T", "\n", "adj_mat", "[", "self", ".", "num_users", "+", "self", ".", "num_items", ":", ",", "self", ".", "num_users", ":", "self", ".", "num_users", "+", "self", ".", "num_items", "]", "=", "self", ".", "sp_H_i_c", ".", "T", "\n", "adj_mat", "=", "adj_mat", ".", "todok", "(", ")", "\n", "\n", "# norm_adj_mat = normalized_adj_single(adj_mat + sp.eye(adj_mat.shape[0]))", "\n", "norm_adj_mat", "=", "normalized_adj_double", "(", "adj_mat", "+", "sp", ".", "eye", "(", "adj_mat", ".", "shape", "[", "0", "]", ")", ")", "\n", "return", "norm_adj_mat", ".", "tocsr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.normalize_useritem_context_mat": [[205, 227], ["LoadData.LoadData.sp_H_uc.todok", "LoadData.LoadData.normalize_adj_mat.normalized_adj_single"], "methods", ["None"], ["", "def", "normalize_useritem_context_mat", "(", "self", ")", ":", "\n", "        ", "def", "normalized_adj_single", "(", "adj", ")", ":", "\n", "            ", "rowsum", "=", "np", ".", "array", "(", "adj", ".", "sum", "(", "1", ")", ")", "\n", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat_inv", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat_inv", ".", "dot", "(", "adj", ")", "\n", "print", "(", "\n", "'generate single-normalized useritem-context adjacency matrix.'", "\n", ")", "\n", "return", "norm_adj", ".", "tocoo", "(", ")", "\n", "\n", "# normalize H_uc sp matrix", "\n", "", "adj_mat", "=", "self", ".", "sp_H_uc", ".", "todok", "(", ")", "\n", "norm_H_uc_sp_mat", "=", "normalized_adj_single", "(", "adj_mat", ")", "\n", "\n", "# normalize H_ic sp matrix", "\n", "adj_mat", "=", "self", ".", "sp_H_ic", ".", "todok", "(", ")", "\n", "norm_H_ic_sp_mat", "=", "normalized_adj_single", "(", "adj_mat", ")", "\n", "return", "norm_H_uc_sp_mat", ".", "tocsr", "(", ")", ",", "norm_H_ic_sp_mat", ".", "tocsr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.construct_context_mat": [[228, 234], ["numpy.empty", "int", "context.split"], "methods", ["None"], ["", "def", "construct_context_mat", "(", "self", ")", ":", "\n", "        ", "context_mat", "=", "np", ".", "empty", "(", "[", "self", ".", "num_contexts", ",", "self", ".", "num_fields", "]", ",", "dtype", "=", "int", ")", "\n", "for", "context", "in", "self", ".", "binded_context", ":", "\n", "            ", "id", "=", "self", ".", "binded_context", "[", "context", "]", "\n", "context_mat", "[", "id", "]", "=", "[", "int", "(", "c", ")", "for", "c", "in", "context", ".", "split", "(", "'-'", ")", "]", "\n", "", "return", "context_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.get_positive_list": [[235, 264], ["open", "open.readline", "open.readline", "open.close", "open.readline.strip().split", "int", "int", "open.readline", "open.readline.strip", "str", "[].append"], "methods", ["None"], ["", "def", "get_positive_list", "(", "self", ",", "file", ")", ":", "\n", "        ", "'''\n        Obtain positive item lists for each user\n        :param file: train file\n        :return:\n        '''", "\n", "f", "=", "open", "(", "file", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "user_context_positive_list", "=", "{", "}", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "user_id", "=", "int", "(", "features", "[", "0", "]", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "context", "=", "\"-\"", ".", "join", "(", "[", "str", "(", "item", ")", "for", "item", "in", "features", "[", "2", ":", "-", "1", "]", "]", ")", "\n", "context_id", "=", "self", ".", "binded_context", "[", "context", "]", "\n", "if", "user_id", "in", "user_context_positive_list", ":", "\n", "                ", "if", "context_id", "in", "user_context_positive_list", "[", "user_id", "]", ":", "\n", "                    ", "user_context_positive_list", "[", "user_id", "]", "[", "context_id", "]", ".", "append", "(", "\n", "item_id", ")", "\n", "", "else", ":", "\n", "                    ", "user_context_positive_list", "[", "user_id", "]", "[", "context_id", "]", "=", "[", "item_id", "]", "\n", "", "", "else", ":", "\n", "                ", "user_context_positive_list", "[", "user_id", "]", "=", "{", "}", "\n", "user_context_positive_list", "[", "user_id", "]", "[", "context_id", "]", "=", "[", "item_id", "]", "\n", "\n", "", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "user_context_positive_list", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.construct_data": [[265, 278], ["LoadData.LoadData.read_data", "LoadData.LoadData.construct_dataset", "print", "LoadData.LoadData.read_data", "LoadData.LoadData.construct_dataset", "print", "len", "len"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.read_data", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_dataset", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.read_data", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_dataset"], ["", "def", "construct_data", "(", "self", ")", ":", "\n", "        ", "'''\n        Construct train and test data\n        :return:\n        '''", "\n", "X_user", ",", "X_context", ",", "X_item", "=", "self", ".", "read_data", "(", "self", ".", "trainfile", ")", "\n", "Train_data", "=", "self", ".", "construct_dataset", "(", "X_user", ",", "X_context", ",", "X_item", ")", "\n", "print", "(", "\"# of training:\"", ",", "len", "(", "X_user", ")", ")", "\n", "\n", "X_user", ",", "X_context", ",", "X_item", "=", "self", ".", "read_data", "(", "self", ".", "testfile", ")", "\n", "Test_data", "=", "self", ".", "construct_dataset", "(", "X_user", ",", "X_context", ",", "X_item", ")", "\n", "print", "(", "\"# of test:\"", ",", "len", "(", "X_user", ")", ")", "\n", "return", "Train_data", ",", "Test_data", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.read_data": [[280, 305], ["open", "open.readline", "open.readline", "open.close", "open.readline.strip().split", "int", "int", "X_user.append", "X_item.append", "X_context.append", "open.readline", "open.readline.strip", "str"], "methods", ["None"], ["", "def", "read_data", "(", "self", ",", "file", ")", ":", "\n", "        ", "'''\n        read raw data\n        :param file: data file\n        :return: structured data\n        '''", "\n", "# read a data file;", "\n", "f", "=", "open", "(", "file", ")", "\n", "X_user", "=", "[", "]", "\n", "X_item", "=", "[", "]", "\n", "X_context", "=", "[", "]", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "user_id", "=", "int", "(", "features", "[", "0", "]", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "context", "=", "\"-\"", ".", "join", "(", "[", "str", "(", "item", ")", "for", "item", "in", "features", "[", "2", ":", "-", "1", "]", "]", ")", "\n", "context_id", "=", "self", ".", "binded_context", "[", "context", "]", "\n", "X_user", ".", "append", "(", "user_id", ")", "\n", "X_item", ".", "append", "(", "item_id", ")", "\n", "X_context", ".", "append", "(", "context_id", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "X_user", ",", "X_context", ",", "X_item", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData.LoadData.construct_dataset": [[306, 318], ["None"], "methods", ["None"], ["", "def", "construct_dataset", "(", "self", ",", "X_user", ",", "X_context", ",", "X_item", ")", ":", "\n", "        ", "'''\n        Construct dataset\n        :param X_user: user structured data\n        :param X_item: item structured data\n        :return:\n        '''", "\n", "Data_Dic", "=", "{", "}", "\n", "Data_Dic", "[", "'X_user'", "]", "=", "X_user", "\n", "Data_Dic", "[", "'X_context'", "]", "=", "X_context", "\n", "Data_Dic", "[", "'X_item'", "]", "=", "X_item", "\n", "return", "Data_Dic", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.activation_function": [[12, 37], ["tensorflow.nn.sigmoid", "tensorflow.nn.tanh", "tensorflow.nn.relu", "tensorflow.nn.elu", "tensorflow.identity", "tensorflow.nn.softmax", "tensorflow.nn.selu", "NotImplementedError"], "function", ["None"], ["def", "activation_function", "(", "act", ",", "act_input", ")", ":", "\n", "        ", "act_func", "=", "None", "\n", "if", "act", "==", "\"sigmoid\"", ":", "\n", "            ", "act_func", "=", "tf", ".", "nn", ".", "sigmoid", "(", "act_input", ")", "\n", "", "elif", "act", "==", "\"tanh\"", ":", "\n", "            ", "act_func", "=", "tf", ".", "nn", ".", "tanh", "(", "act_input", ")", "\n", "\n", "", "elif", "act", "==", "\"relu\"", ":", "\n", "            ", "act_func", "=", "tf", ".", "nn", ".", "relu", "(", "act_input", ")", "\n", "\n", "", "elif", "act", "==", "\"elu\"", ":", "\n", "            ", "act_func", "=", "tf", ".", "nn", ".", "elu", "(", "act_input", ")", "\n", "\n", "", "elif", "act", "==", "\"identity\"", ":", "\n", "            ", "act_func", "=", "tf", ".", "identity", "(", "act_input", ")", "\n", "\n", "", "elif", "act", "==", "\"softmax\"", ":", "\n", "            ", "act_func", "=", "tf", ".", "nn", ".", "softmax", "(", "act_input", ")", "\n", "\n", "", "elif", "act", "==", "\"selu\"", ":", "\n", "            ", "act_func", "=", "tf", ".", "nn", ".", "selu", "(", "act_input", ")", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"ERROR\"", ")", "\n", "", "return", "act_func", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.ensureDir": [[38, 42], ["os.path.dirname", "os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "ensureDir", "(", "dir_path", ")", ":", "\n", "    ", "d", "=", "os", ".", "path", ".", "dirname", "(", "dir_path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "d", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.save_dict_to_file": [[43, 47], ["open", "open.write", "open.close", "str"], "function", ["None"], ["", "", "def", "save_dict_to_file", "(", "dic", ",", "filename", ")", ":", "\n", "    ", "f", "=", "open", "(", "filename", ",", "'w'", ")", "\n", "f", ".", "write", "(", "str", "(", "dic", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.load_dict_from_file": [[48, 53], ["open", "open.read", "open.close", "eval"], "function", ["None"], ["", "def", "load_dict_from_file", "(", "filename", ")", ":", "\n", "    ", "f", "=", "open", "(", "filename", ",", "'r'", ")", "\n", "data", "=", "f", ".", "read", "(", ")", "\n", "f", ".", "close", "(", ")", "\n", "return", "eval", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.csr_to_user_dict": [[54, 64], ["enumerate", "len", "value.indices.copy().tolist", "value.indices.copy"], "function", ["None"], ["", "def", "csr_to_user_dict", "(", "train_matrix", ")", ":", "\n", "    ", "\"\"\"convert a scipy.sparse.csr_matrix to a dict,\n    where the key is row number, and value is the\n    non-empty index in each row.\n    \"\"\"", "\n", "train_dict", "=", "{", "}", "\n", "for", "idx", ",", "value", "in", "enumerate", "(", "train_matrix", ")", ":", "\n", "        ", "if", "len", "(", "value", ".", "indices", ")", ":", "\n", "            ", "train_dict", "[", "idx", "]", "=", "value", ".", "indices", ".", "copy", "(", ")", ".", "tolist", "(", ")", "\n", "", "", "return", "train_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.df_to_positive_dict_per_user": [[66, 73], ["df[].unique", "df_context[].tolist"], "function", ["None"], ["", "def", "df_to_positive_dict_per_user", "(", "df", ")", ":", "\n", "    ", "positive_dict", "=", "{", "}", "\n", "unique_context", "=", "df", "[", "'context_id'", "]", ".", "unique", "(", ")", "\n", "for", "context_id", "in", "unique_context", ":", "\n", "        ", "df_context", "=", "df", "[", "df", "[", "'context_id'", "]", "==", "context_id", "]", "\n", "positive_dict", "[", "context_id", "]", "=", "df_context", "[", "'item_id'", "]", ".", "tolist", "(", ")", "\n", "", "return", "positive_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.df_to_positive_dict": [[75, 92], ["range", "len", "[].append"], "function", ["None"], ["", "def", "df_to_positive_dict", "(", "df_train", ")", ":", "\n", "    ", "positive_dict", "=", "{", "}", "\n", "for", "idx", "in", "range", "(", "len", "(", "df_train", ")", ")", ":", "\n", "        ", "user_id", "=", "df_train", "[", "'user_id'", "]", "[", "idx", "]", "\n", "item_id", "=", "df_train", "[", "'item_id'", "]", "[", "idx", "]", "\n", "context_id", "=", "df_train", "[", "'context_id'", "]", "[", "idx", "]", "\n", "if", "user_id", "not", "in", "positive_dict", ":", "\n", "            ", "positive_dict", "[", "user_id", "]", "=", "{", "}", "\n", "", "if", "context_id", "not", "in", "positive_dict", "[", "user_id", "]", ":", "\n", "            ", "positive_dict", "[", "user_id", "]", "[", "context_id", "]", "=", "[", "item_id", "]", "\n", "", "else", ":", "\n", "            ", "positive_dict", "[", "user_id", "]", "[", "context_id", "]", ".", "append", "(", "item_id", ")", "\n", "# unique_user = df_train['user_id'].unique()", "\n", "# for user in unique_user:", "\n", "#     df_user = df_train[df_train['user_id'] == user]", "\n", "#     positive_dict[user] = df_to_positive_dict_per_user(df_user)", "\n", "", "", "return", "positive_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.get_initializer": [[94, 113], ["tensorflow.truncated_normal_initializer", "tensorflow.random_uniform_initializer", "tensorflow.random_normal_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.variance_scaling_initializer", "tensorflow.contrib.layers.variance_scaling_initializer", "tensorflow.truncated_normal_initializer"], "function", ["None"], ["", "def", "get_initializer", "(", "init_method", ",", "stddev", ")", ":", "\n", "        ", "if", "init_method", "==", "'tnormal'", ":", "\n", "            ", "return", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "stddev", ")", "\n", "", "elif", "init_method", "==", "'uniform'", ":", "\n", "            ", "return", "tf", ".", "random_uniform_initializer", "(", "-", "stddev", ",", "stddev", ")", "\n", "", "elif", "init_method", "==", "'normal'", ":", "\n", "            ", "return", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "stddev", ")", "\n", "", "elif", "init_method", "==", "'xavier_normal'", ":", "\n", "            ", "return", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", "uniform", "=", "False", ")", "\n", "", "elif", "init_method", "==", "'xavier_uniform'", ":", "\n", "            ", "return", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", "uniform", "=", "True", ")", "\n", "", "elif", "init_method", "==", "'he_normal'", ":", "\n", "            ", "return", "tf", ".", "contrib", ".", "layers", ".", "variance_scaling_initializer", "(", "\n", "factor", "=", "2.0", ",", "mode", "=", "'FAN_IN'", ",", "uniform", "=", "False", ")", "\n", "", "elif", "init_method", "==", "'he_uniform'", ":", "\n", "            ", "return", "tf", ".", "contrib", ".", "layers", ".", "variance_scaling_initializer", "(", "\n", "factor", "=", "2.0", ",", "mode", "=", "'FAN_IN'", ",", "uniform", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "return", "tf", ".", "truncated_normal_initializer", "(", "stddev", "=", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.randint_choice": [[115, 129], ["numpy.arange", "numpy.random.choice", "np.array.flatten", "numpy.ones_like", "numpy.array", "numpy.sum"], "function", ["None"], ["", "", "def", "randint_choice", "(", "high", ",", "size", "=", "None", ",", "replace", "=", "True", ",", "p", "=", "None", ",", "exclusion", "=", "None", ")", ":", "\n", "    ", "\"\"\"Return random integers from `0` (inclusive) to `high` (exclusive).\n    \"\"\"", "\n", "a", "=", "np", ".", "arange", "(", "high", ")", "\n", "if", "exclusion", "is", "not", "None", ":", "\n", "        ", "if", "p", "is", "None", ":", "\n", "            ", "p", "=", "np", ".", "ones_like", "(", "a", ")", "\n", "", "else", ":", "\n", "            ", "p", "=", "np", ".", "array", "(", "p", ",", "copy", "=", "True", ")", "\n", "", "p", "=", "p", ".", "flatten", "(", ")", "\n", "p", "[", "exclusion", "]", "=", "0", "\n", "p", "=", "p", "/", "np", ".", "sum", "(", "p", ")", "\n", "", "sample", "=", "np", ".", "random", ".", "choice", "(", "a", ",", "size", "=", "size", ",", "replace", "=", "replace", ",", "p", "=", "p", ")", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.batch_random_choice": [[131, 156], ["ValueError", "ValueError", "Tool.randint_choice", "concurrent.futures.ThreadPoolExecutor", "executor.map", "len", "len", "range", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.randint_choice", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.map"], ["", "def", "batch_random_choice", "(", "high", ",", "size", ",", "replace", "=", "True", ",", "p", "=", "None", ",", "exclusion", "=", "None", ")", ":", "\n", "    ", "\"\"\"Return random integers from `0` (inclusive) to `high` (exclusive).\n    :param high: integer\n    :param size: 1-D array_like\n    :param replace: bool\n    :param p: 2-D array_like\n    :param exclusion: a list of 1-D array_like\n    :return: a list of 1-D array_like sample\n    \"\"\"", "\n", "\n", "if", "p", "is", "not", "None", "and", "(", "len", "(", "p", ")", "!=", "len", "(", "size", ")", "or", "len", "(", "p", "[", "0", "]", ")", "!=", "high", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"The shape of 'p' is not compatible with the shapes of 'array' and 'size'!\"", ")", "\n", "\n", "", "if", "exclusion", "is", "not", "None", "and", "len", "(", "exclusion", ")", "!=", "len", "(", "size", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"The shape of 'exclusion' is not compatible with the shape of 'size'!\"", ")", "\n", "\n", "", "def", "choice_one", "(", "idx", ")", ":", "\n", "        ", "p_tmp", "=", "p", "[", "idx", "]", "if", "p", "is", "not", "None", "else", "None", "\n", "exc", "=", "exclusion", "[", "idx", "]", "if", "exclusion", "is", "not", "None", "else", "None", "\n", "return", "randint_choice", "(", "high", ",", "size", "[", "idx", "]", ",", "replace", "=", "replace", ",", "p", "=", "p_tmp", ",", "exclusion", "=", "exc", ")", "\n", "\n", "", "with", "ThreadPoolExecutor", "(", ")", "as", "executor", ":", "\n", "        ", "results", "=", "executor", ".", "map", "(", "choice_one", ",", "range", "(", "len", "(", "size", ")", ")", ")", "\n", "\n", "", "return", "[", "result", "for", "result", "in", "results", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.typeassert": [[158, 173], ["inspect.signature", "functools.wraps", "inspect.signature.bind_partial", "inspect.signature.bind", "sig.bind.arguments.items", "func", "isinstance", "TypeError"], "function", ["None"], ["", "def", "typeassert", "(", "*", "type_args", ",", "**", "type_kwargs", ")", ":", "\n", "    ", "def", "decorate", "(", "func", ")", ":", "\n", "        ", "sig", "=", "signature", "(", "func", ")", "\n", "bound_types", "=", "sig", ".", "bind_partial", "(", "*", "type_args", ",", "**", "type_kwargs", ")", ".", "arguments", "\n", "\n", "@", "wraps", "(", "func", ")", "\n", "def", "wrapper", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "bound_values", "=", "sig", ".", "bind", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "for", "name", ",", "value", "in", "bound_values", ".", "arguments", ".", "items", "(", ")", ":", "\n", "                ", "if", "name", "in", "bound_types", ":", "\n", "                    ", "if", "not", "isinstance", "(", "value", ",", "bound_types", "[", "name", "]", ")", ":", "\n", "                        ", "raise", "TypeError", "(", "'Argument {} must be {}'", ".", "format", "(", "name", ",", "bound_types", "[", "name", "]", ")", ")", "\n", "", "", "", "return", "func", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "return", "wrapper", "\n", "", "return", "decorate", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.argmax_top_k": [[175, 178], ["heapq.nlargest", "numpy.array", "zip", "itertools.count"], "function", ["None"], ["", "def", "argmax_top_k", "(", "a", ",", "top_k", "=", "50", ")", ":", "\n", "    ", "ele_idx", "=", "heapq", ".", "nlargest", "(", "top_k", ",", "zip", "(", "a", ",", "itertools", ".", "count", "(", ")", ")", ")", "\n", "return", "np", ".", "array", "(", "[", "idx", "for", "ele", ",", "idx", "in", "ele_idx", "]", ",", "dtype", "=", "np", ".", "intc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.pad_sequences": [[180, 191], ["tensorflow.keras.preprocessing.sequence.pad_sequences"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.pad_sequences"], ["", "def", "pad_sequences", "(", "array", ",", "value", "=", "0", ",", "max_len", "=", "None", ",", "padding", "=", "'post'", ",", "truncating", "=", "'post'", ")", ":", "\n", "    ", "\"\"\"padding: String, 'pre' or 'post':\n            pad either before or after each sequence.\n       truncating: String, 'pre' or 'post':\n            remove values from sequences larger than `maxlen`,\n            either at the beginning or at the end of the sequences.\n    \"\"\"", "\n", "array", "=", "tf", ".", "keras", ".", "preprocessing", ".", "sequence", ".", "pad_sequences", "(", "array", ",", "maxlen", "=", "max_len", ",", "value", "=", "value", ",", "dtype", "=", "'int32'", ",", "\n", "padding", "=", "padding", ",", "truncating", "=", "truncating", ")", "\n", "\n", "return", "array", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.inner_product": [[193, 196], ["tensorflow.name_scope", "tensorflow.reduce_sum", "tensorflow.multiply"], "function", ["None"], ["", "def", "inner_product", "(", "a", ",", "b", ",", "name", "=", "\"inner_product\"", ")", ":", "\n", "    ", "with", "tf", ".", "name_scope", "(", "name", "=", "name", ")", ":", "\n", "        ", "return", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "a", ",", "b", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.timer": [[198, 209], ["functools.wraps", "time.time", "func", "time.time", "print"], "function", ["None"], ["", "", "def", "timer", "(", "func", ")", ":", "\n", "    ", "\"\"\"The timer decorator\n    \"\"\"", "\n", "@", "wraps", "(", "func", ")", "\n", "def", "wrapper", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "result", "=", "func", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "end_time", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "\"%s function cost: %fs\"", "%", "(", "func", ".", "__name__", ",", "end_time", "-", "start_time", ")", ")", "\n", "return", "result", "\n", "", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.l2_loss": [[211, 213], ["tensorflow.add_n", "tensorflow.nn.l2_loss"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.l2_loss"], ["", "def", "l2_loss", "(", "*", "params", ")", ":", "\n", "    ", "return", "tf", ".", "add_n", "(", "[", "tf", ".", "nn", ".", "l2_loss", "(", "w", ")", "for", "w", "in", "params", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.get_available_gpus": [[215, 223], ["_device_lib.list_local_devices"], "function", ["None"], ["", "def", "get_available_gpus", "(", "gpu_id", ")", ":", "\n", "    ", "from", "tensorflow", ".", "python", ".", "client", "import", "device_lib", "as", "_device_lib", "\n", "local_device_protos", "=", "_device_lib", ".", "list_local_devices", "(", ")", "\n", "for", "x", "in", "local_device_protos", ":", "\n", "        ", "if", "x", ".", "device_type", "==", "'GPU'", "and", "gpu_id", "in", "x", ".", "name", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.__init__": [[24, 40], ["LoadData_MF.LoadData.cnt_user_item_context", "LoadData_MF.LoadData.bind_contexts", "len", "LoadData_MF.LoadData.construct_context_mat", "LoadData_MF.LoadData.construct_user_feature_mat", "LoadData_MF.LoadData.construct_item_feature_mat", "LoadData_MF.LoadData.construct_u_i_mat", "LoadData_MF.LoadData.normalize_adj_mat", "LoadData_MF.LoadData.get_positive_list", "LoadData_MF.LoadData.construct_data"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.cnt_user_item_context", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.bind_contexts", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_context_mat", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_user_feature_mat", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_item_feature_mat", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_u_i_mat", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.normalize_adj_mat", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.get_positive_list", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_data"], ["def", "__init__", "(", "self", ",", "path", ",", "dataset", ",", "model_name", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "+", "dataset", "\n", "self", ".", "trainfile", "=", "self", ".", "path", "+", "\"/train.dat\"", "\n", "self", ".", "testfile", "=", "self", ".", "path", "+", "\"/test.dat\"", "\n", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "num_users", ",", "self", ".", "num_items", ",", "self", ".", "num_context_fields", ",", "self", ".", "num_context_features", ",", "self", ".", "num_user_fields", ",", "self", ".", "num_user_features", ",", "self", ".", "num_item_fields", ",", "self", ".", "num_item_features", "=", "self", ".", "cnt_user_item_context", "(", ")", "\n", "self", ".", "binded_context", ",", "self", ".", "binded_context_reverse", "=", "self", ".", "bind_contexts", "(", ")", "\n", "self", ".", "num_contexts", "=", "len", "(", "self", ".", "binded_context", ")", "\n", "self", ".", "context_matrix", "=", "self", ".", "construct_context_mat", "(", ")", "\n", "self", ".", "user_feature_matrix", ",", "self", ".", "user_feature_dict", "=", "self", ".", "construct_user_feature_mat", "(", ")", "\n", "self", ".", "item_feature_matrix", ",", "self", ".", "item_feawture_dict", "=", "self", ".", "construct_item_feature_mat", "(", ")", "\n", "self", ".", "sp_H_u_i", "=", "self", ".", "construct_u_i_mat", "(", ")", "\n", "# self.binded_ins_user, self.binded_ins_item, self.binded_ins_context = self.bind_instance_u_i_c()", "\n", "self", ".", "norm_adj_matrix", "=", "self", ".", "normalize_adj_mat", "(", ")", "\n", "self", ".", "user_positive_list", ",", "self", ".", "user_context_positive_list", "=", "self", ".", "get_positive_list", "(", "self", ".", "trainfile", ")", "# userID positive itemID and contextID", "\n", "self", ".", "Train_data", ",", "self", ".", "Test_data", "=", "self", ".", "construct_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.cnt_user_item_context": [[41, 60], ["pandas.read_csv", "pandas.read_csv", "max", "max", "df_train[].max", "df_train[].max", "df_test[].max", "df_test[].max"], "methods", ["None"], ["", "def", "cnt_user_item_context", "(", "self", ")", ":", "\n", "        ", "'''\n        count the number of users and items\n        '''", "\n", "df_train", "=", "pd", ".", "read_csv", "(", "self", ".", "trainfile", ")", "\n", "num_users", "=", "df_train", "[", "'user_id'", "]", ".", "max", "(", ")", "+", "1", "\n", "num_items", "=", "df_train", "[", "'item_id'", "]", ".", "max", "(", ")", "+", "1", "\n", "df_test", "=", "pd", ".", "read_csv", "(", "self", ".", "testfile", ")", "\n", "num_users", "=", "max", "(", "num_users", ",", "df_test", "[", "'user_id'", "]", ".", "max", "(", ")", "+", "1", ")", "\n", "num_items", "=", "max", "(", "num_items", ",", "df_test", "[", "'item_id'", "]", ".", "max", "(", ")", "+", "1", ")", "\n", "\n", "num_context_fields", "=", "7", "\n", "num_context_features", "=", "210", "\n", "num_user_fields", "=", "2", "\n", "num_user_features", "=", "26", "\n", "num_item_fields", "=", "3", "\n", "num_item_features", "=", "72", "\n", "\n", "return", "num_users", ",", "num_items", ",", "num_context_fields", ",", "num_context_features", ",", "num_user_fields", ",", "num_user_features", ",", "num_item_fields", ",", "num_item_features", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_u_i_mat": [[61, 78], ["scipy.dok_matrix", "open", "open.readline", "open.readline", "open.close", "scipy.dok_matrix.tolil", "open.readline.strip().split", "int", "int", "open.readline", "open.readline.strip"], "methods", ["None"], ["", "def", "construct_u_i_mat", "(", "self", ")", ":", "\n", "        ", "'''\n        construct user-item interaction matrix R\n        :return: a sparse matrix R\n        '''", "\n", "H_ui", "=", "sp", ".", "dok_matrix", "(", "(", "self", ".", "num_users", ",", "self", ".", "num_items", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "f", "=", "open", "(", "self", ".", "trainfile", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "user_id", "=", "int", "(", "features", "[", "0", "]", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "H_ui", "[", "user_id", ",", "item_id", "]", "=", "1.", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "H_ui", ".", "tolil", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.bind_contexts": [[79, 102], ["LoadData_MF.LoadData.bind_contexts.bind_c"], "methods", ["None"], ["", "def", "bind_contexts", "(", "self", ")", ":", "\n", "        ", "def", "bind_c", "(", "filename", ",", "binded_context", ",", "binded_context_reverse", ")", ":", "\n", "            ", "f", "=", "open", "(", "filename", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "n_context", "=", "len", "(", "binded_context", ")", "\n", "while", "line", ":", "\n", "                ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "context", "=", "features", "[", "2", "]", "\n", "if", "context", "not", "in", "binded_context", ":", "\n", "                    ", "binded_context", "[", "context", "]", "=", "n_context", "\n", "binded_context_reverse", "[", "n_context", "]", "=", "context", "\n", "n_context", "+=", "1", "\n", "", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "binded_context", ",", "binded_context_reverse", "\n", "\n", "", "binded_context", ",", "binded_context_reverse", "=", "{", "}", ",", "{", "}", "\n", "binded_context", ",", "binded_context_reverse", "=", "bind_c", "(", "\n", "self", ".", "trainfile", ",", "binded_context", ",", "binded_context_reverse", ")", "\n", "binded_context", ",", "binded_context_reverse", "=", "bind_c", "(", "\n", "self", ".", "testfile", ",", "binded_context", ",", "binded_context_reverse", ")", "\n", "return", "binded_context", ",", "binded_context_reverse", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_context_mat": [[103, 109], ["numpy.empty", "context.split"], "methods", ["None"], ["", "def", "construct_context_mat", "(", "self", ")", ":", "\n", "        ", "context_mat", "=", "np", ".", "empty", "(", "[", "self", ".", "num_contexts", ",", "self", ".", "num_context_fields", "]", ",", "dtype", "=", "int", ")", "\n", "for", "context", "in", "self", ".", "binded_context", ":", "\n", "            ", "id", "=", "self", ".", "binded_context", "[", "context", "]", "\n", "context_mat", "[", "id", "]", "=", "context", ".", "split", "(", "'-'", ")", "\n", "", "return", "context_mat", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_user_feature_mat": [[110, 136], ["numpy.empty", "open", "open.readline", "open.readline", "open.close", "open", "open.readline", "open.readline", "open.close", "open.readline.strip().split", "int", "open.readline", "open.readline.strip().split", "int", "open.readline", "features[].split", "features[].split", "open.readline.strip", "open.readline.strip"], "methods", ["None"], ["", "def", "construct_user_feature_mat", "(", "self", ")", ":", "\n", "        ", "user_feature_dict", "=", "{", "}", "\n", "user_feature_mat", "=", "np", ".", "empty", "(", "[", "self", ".", "num_users", ",", "self", ".", "num_user_fields", "]", ",", "dtype", "=", "int", ")", "\n", "f", "=", "open", "(", "self", ".", "trainfile", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "user_id", "=", "int", "(", "features", "[", "0", "]", ")", "\n", "if", "user_id", "not", "in", "user_feature_dict", ":", "\n", "                ", "user_feature_dict", "[", "user_id", "]", "=", "features", "[", "3", "]", "\n", "user_feature_mat", "[", "user_id", "]", "=", "features", "[", "3", "]", ".", "split", "(", "'-'", ")", "\n", "", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "f", "=", "open", "(", "self", ".", "testfile", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "user_id", "=", "int", "(", "features", "[", "0", "]", ")", "\n", "if", "user_id", "not", "in", "user_feature_dict", ":", "\n", "                ", "user_feature_dict", "[", "user_id", "]", "=", "features", "[", "3", "]", "\n", "user_feature_mat", "[", "user_id", "]", "=", "features", "[", "3", "]", ".", "split", "(", "'-'", ")", "\n", "", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "user_feature_mat", ",", "user_feature_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_item_feature_mat": [[137, 163], ["numpy.empty", "open", "open.readline", "open.readline", "open.close", "open", "open.readline", "open.readline", "open.close", "open.readline.strip().split", "int", "open.readline", "open.readline.strip().split", "int", "open.readline", "features[].split", "features[].split", "open.readline.strip", "open.readline.strip"], "methods", ["None"], ["", "def", "construct_item_feature_mat", "(", "self", ")", ":", "\n", "        ", "item_feature_dict", "=", "{", "}", "\n", "item_feature_mat", "=", "np", ".", "empty", "(", "[", "self", ".", "num_items", ",", "self", ".", "num_item_fields", "]", ",", "dtype", "=", "int", ")", "\n", "f", "=", "open", "(", "self", ".", "trainfile", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "if", "item_id", "not", "in", "item_feature_dict", ":", "\n", "                ", "item_feature_dict", "[", "item_id", "]", "=", "features", "[", "4", "]", "\n", "item_feature_mat", "[", "item_id", "]", "=", "features", "[", "4", "]", ".", "split", "(", "'-'", ")", "\n", "", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "f", "=", "open", "(", "self", ".", "testfile", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "if", "item_id", "not", "in", "item_feature_dict", ":", "\n", "                ", "item_feature_dict", "[", "item_id", "]", "=", "features", "[", "4", "]", "\n", "item_feature_mat", "[", "item_id", "]", "=", "features", "[", "4", "]", ".", "split", "(", "'-'", ")", "\n", "", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "item_feature_mat", ",", "item_feature_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.bind_instance_u_i_c": [[164, 181], ["open", "open.readline", "open.readline", "open.close", "open.readline.strip().split", "int", "int", "binded_ins_user.append", "binded_ins_item.append", "binded_ins_context.append", "open.readline", "open.readline.strip", "str"], "methods", ["None"], ["", "def", "bind_instance_u_i_c", "(", "self", ")", ":", "\n", "        ", "f", "=", "open", "(", "self", ".", "trainfile", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "binded_ins_user", ",", "binded_ins_item", ",", "binded_ins_context", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "user_id", "=", "int", "(", "features", "[", "0", "]", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "context", "=", "\"-\"", ".", "join", "(", "[", "str", "(", "c", ")", "for", "c", "in", "features", "[", "2", ":", "-", "1", "]", "]", ")", "\n", "context_id", "=", "self", ".", "binded_context", "[", "context", "]", "\n", "binded_ins_user", ".", "append", "(", "user_id", ")", "\n", "binded_ins_item", ".", "append", "(", "item_id", ")", "\n", "binded_ins_context", ".", "append", "(", "context_id", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "binded_ins_user", ",", "binded_ins_item", ",", "binded_ins_context", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.normalize_adj_mat": [[182, 220], ["scipy.dok_matrix", "adj_mat.todok.todok.tolil", "adj_mat.todok.todok.todok", "LoadData_MF.LoadData.normalize_adj_mat.normalized_adj_double"], "methods", ["None"], ["", "def", "normalize_adj_mat", "(", "self", ")", ":", "\n", "        ", "def", "normalized_adj_single", "(", "adj", ")", ":", "\n", "            ", "rowsum", "=", "np", ".", "array", "(", "adj", ".", "sum", "(", "1", ")", ")", "\n", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat_inv", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat_inv", ".", "dot", "(", "adj", ")", "\n", "print", "(", "'generate single-normalized user-item adjacency matrix.'", ")", "\n", "return", "norm_adj", ".", "tocoo", "(", ")", "\n", "\n", "", "def", "normalized_adj_double", "(", "adj", ")", ":", "\n", "            ", "rowsum", "=", "np", ".", "array", "(", "adj", ".", "sum", "(", "1", ")", ")", "\n", "\n", "d_sqrt_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "0.5", ")", ".", "flatten", "(", ")", "\n", "d_sqrt_inv", "[", "np", ".", "isinf", "(", "d_sqrt_inv", ")", "]", "=", "0.", "\n", "d_mat_inv", "=", "sp", ".", "diags", "(", "d_sqrt_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat_inv", ".", "dot", "(", "adj", ")", "\n", "norm_adj", "=", "norm_adj", ".", "dot", "(", "d_mat_inv", ")", "\n", "print", "(", "'generate double-normalized user-item adjacency matrix.'", ")", "\n", "return", "norm_adj", ".", "tocoo", "(", ")", "\n", "\n", "# construct adj matrix for user-item pair", "\n", "", "adj_mat", "=", "sp", ".", "dok_matrix", "(", "\n", "(", "self", ".", "num_users", "+", "self", ".", "num_items", ",", "self", ".", "num_users", "+", "self", ".", "num_items", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "adj_mat", "=", "adj_mat", ".", "tolil", "(", ")", "\n", "adj_mat", "[", ":", "self", ".", "num_users", ",", "self", ".", "num_users", ":", "]", "=", "self", ".", "sp_H_u_i", "\n", "adj_mat", "[", "self", ".", "num_users", ":", ",", ":", "self", ".", "num_users", "]", "=", "self", ".", "sp_H_u_i", ".", "T", "\n", "adj_mat", "=", "adj_mat", ".", "todok", "(", ")", "\n", "\n", "# norm_adj_mat = normalized_adj_single(adj_mat + sp.eye(adj_mat.shape[0]))", "\n", "# norm_adj_mat = normalized_adj_single(adj_mat)", "\n", "# norm_adj_mat = normalized_adj_double(adj_mat + sp.eye(adj_mat.shape[0]))", "\n", "norm_adj_mat", "=", "normalized_adj_double", "(", "adj_mat", ")", "\n", "return", "norm_adj_mat", ".", "tocsr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.normalize_useritem_context_mat": [[221, 243], ["LoadData_MF.LoadData.sp_H_uc.todok", "LoadData_MF.LoadData.normalize_adj_mat.normalized_adj_single"], "methods", ["None"], ["", "def", "normalize_useritem_context_mat", "(", "self", ")", ":", "\n", "        ", "def", "normalized_adj_single", "(", "adj", ")", ":", "\n", "            ", "rowsum", "=", "np", ".", "array", "(", "adj", ".", "sum", "(", "1", ")", ")", "\n", "\n", "d_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "d_inv", "[", "np", ".", "isinf", "(", "d_inv", ")", "]", "=", "0.", "\n", "d_mat_inv", "=", "sp", ".", "diags", "(", "d_inv", ")", "\n", "\n", "norm_adj", "=", "d_mat_inv", ".", "dot", "(", "adj", ")", "\n", "print", "(", "\n", "'generate single-normalized useritem-context adjacency matrix.'", "\n", ")", "\n", "return", "norm_adj", ".", "tocoo", "(", ")", "\n", "\n", "# normalize H_uc sp matrix", "\n", "", "adj_mat", "=", "self", ".", "sp_H_uc", ".", "todok", "(", ")", "\n", "norm_H_uc_sp_mat", "=", "normalized_adj_single", "(", "adj_mat", ")", "\n", "\n", "# normalize H_ic sp matrix", "\n", "adj_mat", "=", "self", ".", "sp_H_ic", ".", "todok", "(", ")", "\n", "norm_H_ic_sp_mat", "=", "normalized_adj_single", "(", "adj_mat", ")", "\n", "return", "norm_H_uc_sp_mat", ".", "tocsr", "(", ")", ",", "norm_H_ic_sp_mat", ".", "tocsr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.get_positive_list": [[244, 275], ["open", "open.readline", "open.readline", "open.close", "open.readline.strip().split", "int", "int", "open.readline", "open.readline.strip", "user_positive_list[].append", "[].append"], "methods", ["None"], ["", "def", "get_positive_list", "(", "self", ",", "file", ")", ":", "\n", "        ", "'''\n        Obtain positive item lists for each user\n        :param file: train file\n        :return:\n        '''", "\n", "f", "=", "open", "(", "file", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "user_positive_list", ",", "user_context_positive_list", "=", "{", "}", ",", "{", "}", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "user_id", "=", "int", "(", "features", "[", "0", "]", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "context", "=", "features", "[", "2", "]", "\n", "context_id", "=", "self", ".", "binded_context", "[", "context", "]", "\n", "if", "user_id", "in", "user_positive_list", ":", "\n", "                ", "if", "item_id", "not", "in", "user_positive_list", "[", "user_id", "]", ":", "\n", "                    ", "user_positive_list", "[", "user_id", "]", ".", "append", "(", "item_id", ")", "\n", "", "if", "context_id", "in", "user_context_positive_list", "[", "user_id", "]", ":", "\n", "                    ", "user_context_positive_list", "[", "user_id", "]", "[", "context_id", "]", ".", "append", "(", "item_id", ")", "\n", "", "else", ":", "\n", "                    ", "user_context_positive_list", "[", "user_id", "]", "[", "context_id", "]", "=", "[", "item_id", "]", "\n", "", "", "else", ":", "\n", "                ", "user_positive_list", "[", "user_id", "]", "=", "[", "item_id", "]", "\n", "user_context_positive_list", "[", "user_id", "]", "=", "{", "}", "\n", "user_context_positive_list", "[", "user_id", "]", "[", "context_id", "]", "=", "[", "item_id", "]", "\n", "\n", "", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "user_positive_list", ",", "user_context_positive_list", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_data": [[276, 289], ["LoadData_MF.LoadData.read_data", "LoadData_MF.LoadData.construct_dataset", "print", "LoadData_MF.LoadData.read_data", "LoadData_MF.LoadData.construct_dataset", "print", "len", "len"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.read_data", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_dataset", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.read_data", "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_dataset"], ["", "def", "construct_data", "(", "self", ")", ":", "\n", "        ", "'''\n        Construct train and test data\n        :return:\n        '''", "\n", "X_user", ",", "X_context", ",", "X_item", "=", "self", ".", "read_data", "(", "self", ".", "trainfile", ")", "\n", "Train_data", "=", "self", ".", "construct_dataset", "(", "X_user", ",", "X_context", ",", "X_item", ")", "\n", "print", "(", "\"# of training:\"", ",", "len", "(", "X_user", ")", ")", "\n", "\n", "X_user", ",", "X_context", ",", "X_item", "=", "self", ".", "read_data", "(", "self", ".", "testfile", ")", "\n", "Test_data", "=", "self", ".", "construct_dataset", "(", "X_user", ",", "X_context", ",", "X_item", ")", "\n", "print", "(", "\"# of test:\"", ",", "len", "(", "X_user", ")", ")", "\n", "return", "Train_data", ",", "Test_data", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.read_data": [[291, 316], ["open", "open.readline", "open.readline", "open.close", "open.readline.strip().split", "int", "int", "X_user.append", "X_item.append", "X_context.append", "open.readline", "open.readline.strip"], "methods", ["None"], ["", "def", "read_data", "(", "self", ",", "file", ")", ":", "\n", "        ", "'''\n        read raw data\n        :param file: data file\n        :return: structured data\n        '''", "\n", "# read a data file;", "\n", "f", "=", "open", "(", "file", ")", "\n", "X_user", "=", "[", "]", "\n", "X_item", "=", "[", "]", "\n", "X_context", "=", "[", "]", "\n", "line", "=", "f", ".", "readline", "(", ")", "# column name", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "while", "line", ":", "\n", "            ", "features", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "','", ")", "\n", "user_id", "=", "int", "(", "features", "[", "0", "]", ")", "\n", "item_id", "=", "int", "(", "features", "[", "1", "]", ")", "\n", "context", "=", "features", "[", "2", "]", "\n", "context_id", "=", "self", ".", "binded_context", "[", "context", "]", "\n", "X_user", ".", "append", "(", "user_id", ")", "\n", "X_item", ".", "append", "(", "item_id", ")", "\n", "X_context", ".", "append", "(", "context_id", ")", "\n", "line", "=", "f", ".", "readline", "(", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "return", "X_user", ",", "X_context", ",", "X_item", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.LoadData_MF.LoadData.construct_dataset": [[317, 329], ["None"], "methods", ["None"], ["", "def", "construct_dataset", "(", "self", ",", "X_user", ",", "X_context", ",", "X_item", ")", ":", "\n", "        ", "'''\n        Construct dataset\n        :param X_user: user structured data\n        :param X_item: item structured data\n        :return:\n        '''", "\n", "Data_Dic", "=", "{", "}", "\n", "Data_Dic", "[", "'X_user'", "]", "=", "X_user", "\n", "Data_Dic", "[", "'X_context'", "]", "=", "X_context", "\n", "Data_Dic", "[", "'X_item'", "]", "=", "X_item", "\n", "return", "Data_Dic", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.AbstractRecommender.AbstractRecommender.__init__": [[8, 13], ["evaluator.LeaveOneOutEvaluator", "eval"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "conf", ")", ":", "\n", "        ", "self", ".", "evaluator", "=", "LeaveOneOutEvaluator", "(", "dataset", ".", "train_matrix", ",", "\n", "dataset", ".", "test_matrix", ",", "\n", "dataset", ".", "test_context_dict", ",", "\n", "top_k", "=", "eval", "(", "conf", ".", "topk", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.AbstractRecommender.AbstractRecommender.build_graph": [[14, 16], ["None"], "methods", ["None"], ["", "def", "build_graph", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.AbstractRecommender.AbstractRecommender.train_model": [[17, 19], ["None"], "methods", ["None"], ["", "def", "train_model", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.AbstractRecommender.AbstractRecommender.predict": [[20, 22], ["None"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "user_ids", ",", "items", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.AbstractRecommender.SeqAbstractRecommender.__init__": [[25, 29], ["AbstractRecommender.AbstractRecommender.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "conf", ")", ":", "\n", "        ", "if", "dataset", ".", "time_matrix", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"Dataset does not contant time infomation!\"", ")", "\n", "", "super", "(", "SeqAbstractRecommender", ",", "self", ")", ".", "__init__", "(", "dataset", ",", "conf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.AbstractRecommender.SocialAbstractRecommender.__init__": [[32, 50], ["AbstractRecommender.AbstractRecommender.__init__", "pandas.read_csv", "numpy.array", "numpy.in1d", "numpy.in1d", "scipy.csr_matrix", "list", "dataset.userids.keys", "len"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "conf", ")", ":", "\n", "        ", "super", "(", "SocialAbstractRecommender", ",", "self", ")", ".", "__init__", "(", "dataset", ",", "conf", ")", "\n", "social_users", "=", "pd", ".", "read_csv", "(", "conf", "[", "\"social_file\"", "]", ",", "sep", "=", "conf", "[", "\"data.convert.separator\"", "]", ",", "\n", "header", "=", "None", ",", "names", "=", "[", "\"user\"", ",", "\"friend\"", "]", ")", "\n", "users_key", "=", "np", ".", "array", "(", "list", "(", "dataset", ".", "userids", ".", "keys", "(", ")", ")", ")", "\n", "index", "=", "np", ".", "in1d", "(", "social_users", "[", "\"user\"", "]", ",", "users_key", ")", "\n", "social_users", "=", "social_users", "[", "index", "]", "\n", "\n", "index", "=", "np", ".", "in1d", "(", "social_users", "[", "\"friend\"", "]", ",", "users_key", ")", "\n", "social_users", "=", "social_users", "[", "index", "]", "\n", "\n", "user", "=", "social_users", "[", "\"user\"", "]", "\n", "user_id", "=", "[", "dataset", ".", "userids", "[", "u", "]", "for", "u", "in", "user", "]", "\n", "friend", "=", "social_users", "[", "\"friend\"", "]", "\n", "friend_id", "=", "[", "dataset", ".", "userids", "[", "u", "]", "for", "u", "in", "friend", "]", "\n", "num_users", ",", "num_items", "=", "dataset", ".", "train_matrix", ".", "shape", "\n", "self", ".", "social_matrix", "=", "sp", ".", "csr_matrix", "(", "(", "[", "1", "]", "*", "len", "(", "user_id", ")", ",", "(", "user_id", ",", "friend_id", ")", ")", ",", "\n", "shape", "=", "(", "num_users", ",", "num_users", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Dataset.GivenData.__init__": [[16, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset_name", ",", "path", ",", "data_format", ",", "separator", ",", "logger", ")", ":", "\n", "        ", "self", ".", "dataset_name", "=", "dataset_name", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "data_format", "=", "data_format", "\n", "self", ".", "separator", "=", "separator", "\n", "self", ".", "logger", "=", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Dataset.GivenData.load_data": [[23, 112], ["Dataset.GivenData.logger.info", "pandas.read_csv", "pandas.read_csv", "utility.Tool.load_dict_from_file", "utility.Tool.load_dict_from_file", "pandas.concat", "len", "len", "len", "len", "scipy.csr_matrix", "scipy.csr_matrix", "Dataset.GivenData.logger.info", "all_data[].max", "pandas.concat.columns.values.tolist", "column[].split", "column[].split", "all_data[].str.split", "all_data[].apply", "all_data[].unique", "pandas.Series", "all_data[].map", "pandas.concat.drop_duplicates", "item_feature[].str.split", "pd.concat.drop_duplicates.drop", "context_feature[].str.split", "context_feature.drop", "pd.concat.drop_duplicates.set_index().astype", "context_feature.set_index().astype", "len", "len", "Dataset.GivenData.logger.info", "Dataset.GivenData.logger.info", "len", "len", "column[].split", "pandas.concat.drop_duplicates", "user_feature[].str.split", "pd.concat.drop_duplicates.drop", "pandas.concat.drop_duplicates", "pd.concat.drop_duplicates.set_index().astype", "len", "[].max", "time.time.time", "utility.Tool.load_dict_from_file", "print", "Dataset.GivenData.dataset_name.lower", "Dataset.GivenData.dataset_name.lower", "range", "[].max", "pd.concat.drop_duplicates.set_index", "context_feature.set_index", "[].max", "utility.Tool.df_to_positive_dict", "utility.Tool.save_dict_to_file", "len", "pd.concat.drop_duplicates.set_index", "time.time.time", "f.replace", "side_info_stats.items"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.load_dict_from_file", "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.load_dict_from_file", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.map", "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.load_dict_from_file", "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.df_to_positive_dict", "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.save_dict_to_file"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "side_info", ",", "all_data_dict", "=", "None", ",", "None", "\n", "self", ".", "logger", ".", "info", "(", "\"Loading interaction records from folder: %s \"", "%", "(", "self", ".", "path", ")", ")", "\n", "\n", "train_data", "=", "pd", ".", "read_csv", "(", "self", ".", "path", "+", "\"train.dat\"", ",", "sep", "=", "self", ".", "separator", "[", "0", "]", ")", "\n", "test_data", "=", "pd", ".", "read_csv", "(", "self", ".", "path", "+", "\"test.dat\"", ",", "sep", "=", "self", ".", "separator", "[", "0", "]", ")", "\n", "userid_dict", "=", "load_dict_from_file", "(", "self", ".", "path", "+", "'userid_dict.txt'", ")", "\n", "itemid_dict", "=", "load_dict_from_file", "(", "self", ".", "path", "+", "'itemid_dict.txt'", ")", "\n", "# self.logger.info('Loading full testset')", "\n", "\n", "all_data", "=", "pd", ".", "concat", "(", "[", "train_data", ",", "test_data", "]", ")", "\n", "\n", "num_users", "=", "len", "(", "userid_dict", ")", "\n", "num_items", "=", "len", "(", "itemid_dict", ")", "\n", "num_valid_items", "=", "all_data", "[", "\"item_id\"", "]", ".", "max", "(", ")", "+", "1", "\n", "\n", "num_train", "=", "len", "(", "train_data", "[", "\"user_id\"", "]", ")", "\n", "num_test", "=", "len", "(", "test_data", "[", "\"user_id\"", "]", ")", "\n", "\n", "train_matrix", "=", "sp", ".", "csr_matrix", "(", "(", "[", "1", "]", "*", "num_train", ",", "(", "train_data", "[", "\"user_id\"", "]", ",", "train_data", "[", "\"item_id\"", "]", ")", ")", ",", "shape", "=", "(", "num_users", ",", "num_valid_items", ")", ")", "\n", "test_matrix", "=", "sp", ".", "csr_matrix", "(", "(", "[", "1", "]", "*", "num_test", ",", "(", "test_data", "[", "\"user_id\"", "]", ",", "test_data", "[", "\"item_id\"", "]", ")", ")", ",", "shape", "=", "(", "num_users", ",", "num_valid_items", ")", ")", "\n", "\n", "if", "self", ".", "data_format", "==", "'UIC'", ":", "\n", "            ", "side_info", ",", "side_info_stats", ",", "all_data_dict", "=", "{", "}", ",", "{", "}", ",", "{", "}", "\n", "column", "=", "all_data", ".", "columns", ".", "values", ".", "tolist", "(", ")", "\n", "context_column", "=", "column", "[", "2", "]", ".", "split", "(", "self", ".", "separator", "[", "1", "]", ")", "\n", "user_feature_column", "=", "column", "[", "3", "]", ".", "split", "(", "self", ".", "separator", "[", "1", "]", ")", "if", "'yelp'", "in", "self", ".", "dataset_name", ".", "lower", "(", ")", "else", "None", "\n", "item_feature_column", "=", "column", "[", "-", "1", "]", ".", "split", "(", "self", ".", "separator", "[", "1", "]", ")", "\n", "\n", "keep_context", "=", "KEEP_CONTEXT", "[", "self", ".", "dataset_name", ".", "lower", "(", ")", "]", "\n", "new_context_column", "=", "'-'", ".", "join", "(", "keep_context", ")", "\n", "all_data", "[", "context_column", "]", "=", "all_data", "[", "all_data", ".", "columns", "[", "2", "]", "]", ".", "str", ".", "split", "(", "self", ".", "separator", "[", "1", "]", ",", "expand", "=", "True", ")", "\n", "all_data", "[", "new_context_column", "]", "=", "all_data", "[", "keep_context", "]", ".", "apply", "(", "'-'", ".", "join", ",", "axis", "=", "1", ")", "\n", "\n", "# map context to id", "\n", "unique_context", "=", "all_data", "[", "new_context_column", "]", ".", "unique", "(", ")", "\n", "context2id", "=", "pd", ".", "Series", "(", "data", "=", "range", "(", "len", "(", "unique_context", ")", ")", ",", "index", "=", "unique_context", ")", "\n", "# contextids = context2id.to_dict()", "\n", "all_data", "[", "\"context_id\"", "]", "=", "all_data", "[", "new_context_column", "]", ".", "map", "(", "context2id", ")", "\n", "train_data", "=", "all_data", ".", "iloc", "[", ":", "num_train", ",", ":", "]", "\n", "test_data", "=", "all_data", ".", "iloc", "[", "num_train", ":", ",", ":", "]", "\n", "\n", "if", "user_feature_column", ":", "\n", "                ", "user_feature", "=", "all_data", ".", "drop_duplicates", "(", "[", "\"user_id\"", ",", "'-'", ".", "join", "(", "user_feature_column", ")", "]", ")", "\n", "user_feature", "=", "user_feature", "[", "[", "\"user_id\"", ",", "'-'", ".", "join", "(", "user_feature_column", ")", "]", "]", "\n", "user_feature", "[", "user_feature_column", "]", "=", "user_feature", "[", "user_feature", ".", "columns", "[", "-", "1", "]", "]", ".", "str", ".", "split", "(", "self", ".", "separator", "[", "1", "]", ",", "expand", "=", "True", ")", "\n", "user_feature", ".", "drop", "(", "user_feature", ".", "columns", "[", "[", "1", "]", "]", ",", "axis", "=", "1", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "user_feature", "=", "None", "\n", "", "item_feature", "=", "all_data", ".", "drop_duplicates", "(", "[", "\"item_id\"", ",", "'-'", ".", "join", "(", "item_feature_column", ")", "]", ")", "\n", "item_feature", "=", "item_feature", "[", "[", "\"item_id\"", ",", "'-'", ".", "join", "(", "item_feature_column", ")", "]", "]", "\n", "item_feature", "[", "item_feature_column", "]", "=", "item_feature", "[", "item_feature", ".", "columns", "[", "-", "1", "]", "]", ".", "str", ".", "split", "(", "self", ".", "separator", "[", "1", "]", ",", "expand", "=", "True", ")", "\n", "item_feature", ".", "drop", "(", "item_feature", ".", "columns", "[", "[", "1", "]", "]", ",", "axis", "=", "1", ",", "inplace", "=", "True", ")", "\n", "context_feature", "=", "all_data", ".", "drop_duplicates", "(", "[", "\"context_id\"", ",", "new_context_column", "]", ")", "[", "[", "\"context_id\"", ",", "new_context_column", "]", "]", "\n", "context_feature", "[", "keep_context", "]", "=", "context_feature", "[", "context_feature", ".", "columns", "[", "-", "1", "]", "]", ".", "str", ".", "split", "(", "self", ".", "separator", "[", "1", "]", ",", "expand", "=", "True", ")", "\n", "context_feature", ".", "drop", "(", "context_feature", ".", "columns", "[", "[", "1", "]", "]", ",", "axis", "=", "1", ",", "inplace", "=", "True", ")", "\n", "if", "user_feature_column", ":", "\n", "                ", "side_info", "[", "'user_feature'", "]", "=", "user_feature", ".", "set_index", "(", "'user_id'", ")", ".", "astype", "(", "int", ")", "\n", "side_info_stats", "[", "'num_user_features'", "]", "=", "side_info", "[", "'user_feature'", "]", "[", "user_feature_column", "[", "-", "1", "]", "]", ".", "max", "(", ")", "+", "1", "\n", "side_info_stats", "[", "'num_user_fields'", "]", "=", "len", "(", "user_feature_column", ")", "\n", "", "else", ":", "\n", "                ", "side_info", "[", "'user_feature'", "]", "=", "None", "\n", "side_info_stats", "[", "'num_user_features'", "]", "=", "0", "\n", "side_info_stats", "[", "'num_user_fields'", "]", "=", "0", "\n", "\n", "", "side_info", "[", "'item_feature'", "]", "=", "item_feature", ".", "set_index", "(", "'item_id'", ")", ".", "astype", "(", "int", ")", "\n", "side_info", "[", "'context_feature'", "]", "=", "context_feature", ".", "set_index", "(", "'context_id'", ")", ".", "astype", "(", "int", ")", "\n", "side_info_stats", "[", "'num_item_features'", "]", "=", "side_info", "[", "'item_feature'", "]", "[", "item_feature_column", "[", "-", "1", "]", "]", ".", "max", "(", ")", "+", "1", "\n", "side_info_stats", "[", "'num_item_fields'", "]", "=", "len", "(", "item_feature_column", ")", "\n", "side_info_stats", "[", "'num_context_features'", "]", "=", "side_info", "[", "'context_feature'", "]", "[", "keep_context", "[", "-", "2", "]", "]", ".", "max", "(", ")", "+", "1", "+", "num_items", "\n", "side_info_stats", "[", "'num_context_fields'", "]", "=", "len", "(", "keep_context", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"\\n\"", "+", "\"\\n\"", ".", "join", "(", "[", "\"{}={}\"", ".", "format", "(", "key", ",", "value", ")", "for", "key", ",", "value", "in", "side_info_stats", ".", "items", "(", ")", "]", ")", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"context feature name: \"", "+", "\",\"", ".", "join", "(", "[", "f", ".", "replace", "(", "'c_'", ",", "''", ")", "for", "f", "in", "keep_context", "]", ")", ")", "\n", "all_data_dict", "[", "'train_data'", "]", "=", "train_data", "[", "[", "'user_id'", ",", "'item_id'", ",", "'context_id'", "]", "]", "\n", "all_data_dict", "[", "'test_data'", "]", "=", "test_data", "[", "[", "'user_id'", ",", "'item_id'", ",", "'context_id'", "]", "]", "\n", "# all_data_dict['positive_dict'] = df_to_positive_dict(all_data_dict['train_data'])", "\n", "try", ":", "\n", "                ", "t1", "=", "time", "(", ")", "\n", "all_data_dict", "[", "'positive_dict'", "]", "=", "load_dict_from_file", "(", "self", ".", "path", "+", "'/user_pos_dict.txt'", ")", "\n", "print", "(", "'already load user positive dict'", ",", "time", "(", ")", "-", "t1", ")", "\n", "", "except", "Exception", ":", "\n", "                ", "all_data_dict", "[", "'positive_dict'", "]", "=", "df_to_positive_dict", "(", "all_data_dict", "[", "'train_data'", "]", ")", "\n", "save_dict_to_file", "(", "all_data_dict", "[", "'positive_dict'", "]", ",", "self", ".", "path", "+", "'/user_pos_dict.txt'", ")", "\n", "", "side_info", "[", "'side_info_stats'", "]", "=", "side_info_stats", "\n", "\n", "", "num_ratings", "=", "len", "(", "train_data", "[", "\"user_id\"", "]", ")", "+", "len", "(", "test_data", "[", "\"user_id\"", "]", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"\\\"num_users\\\": %d,\\\"num_items\\\":%d,\\\"num_valid_items\\\":%d, \\\"num_ratings\\\":%d\"", "%", "(", "num_users", ",", "num_items", ",", "num_valid_items", ",", "num_ratings", ")", ")", "\n", "\n", "return", "train_matrix", ",", "test_matrix", ",", "all_data_dict", ",", "side_info", ",", "num_items", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Dataset.Dataset.__init__": [[114, 141], ["Dataset.GivenData", "Dataset.GivenData.load_data", "Dataset.Dataset.logger.info", "zip", "[].tolist", "[].tolist"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Dataset.GivenData.load_data"], ["    ", "def", "__init__", "(", "self", ",", "conf", ",", "logger", ")", ":", "\n", "        ", "\"\"\"\n        Constructor\n        \"\"\"", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "separator", "=", "conf", ".", "data_separator", "\n", "\n", "self", ".", "dataset_name", "=", "conf", ".", "dataset", "\n", "self", ".", "dataset_folder", "=", "conf", ".", "data_path", "\n", "\n", "data_splitter", "=", "GivenData", "(", "self", ".", "dataset_name", ",", "self", ".", "dataset_folder", ",", "conf", ".", "data_format", ",", "self", ".", "separator", ",", "self", ".", "logger", ")", "\n", "\n", "self", ".", "train_matrix", ",", "self", ".", "test_matrix", ",", "self", ".", "all_data_dict", ",", "self", ".", "side_info", ",", "self", ".", "num_items", "=", "data_splitter", ".", "load_data", "(", ")", "\n", "# self.test_context_list = self.all_data_dict['test_data']['context_id'].tolist() if self.side_info is not None else None", "\n", "if", "self", ".", "side_info", "is", "None", ":", "\n", "            ", "self", ".", "test_context_dict", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "test_context_dict", "=", "{", "}", "\n", "for", "user", ",", "context", "in", "zip", "(", "self", ".", "all_data_dict", "[", "'test_data'", "]", "[", "'user_id'", "]", ".", "tolist", "(", ")", ",", "self", ".", "all_data_dict", "[", "'test_data'", "]", "[", "'context_id'", "]", ".", "tolist", "(", ")", ")", ":", "\n", "                ", "self", ".", "test_context_dict", "[", "user", "]", "=", "context", "\n", "\n", "", "", "self", ".", "num_users", ",", "self", ".", "num_valid_items", "=", "self", ".", "train_matrix", ".", "shape", "\n", "if", "self", ".", "side_info", "is", "not", "None", ":", "\n", "            ", "self", ".", "num_user_features", "=", "self", ".", "side_info", "[", "'side_info_stats'", "]", "[", "'num_user_features'", "]", "\n", "self", ".", "num_item_featuers", "=", "self", ".", "side_info", "[", "'side_info_stats'", "]", "[", "'num_item_features'", "]", "\n", "self", ".", "num_context_features", "=", "self", ".", "side_info", "[", "'side_info_stats'", "]", "[", "'num_context_features'", "]", "\n", "", "self", ".", "logger", ".", "info", "(", "'Data Loading is Done!'", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.Learner.optimizer": [[4, 20], ["learner.lower", "tensorflow.train.AdagradOptimizer().minimize", "learner.lower", "tensorflow.train.RMSPropOptimizer().minimize", "tensorflow.train.AdagradOptimizer", "learner.lower", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.RMSPropOptimizer", "learner.lower", "tensorflow.train.GradientDescentOptimizer().minimize", "tensorflow.train.AdamOptimizer", "learner.lower", "tensorflow.train.MomentumOptimizer().minimize", "ValueError", "tensorflow.train.GradientDescentOptimizer", "tensorflow.train.MomentumOptimizer"], "function", ["None"], ["def", "optimizer", "(", "learner", ",", "loss", ",", "learning_rate", ",", "momentum", "=", "0.9", ")", ":", "\n", "    ", "opt", "=", "None", "\n", "if", "\"adagrad\"", "in", "learner", ".", "lower", "(", ")", ":", "\n", "        ", "opt", "=", "tf", ".", "train", ".", "AdagradOptimizer", "(", "learning_rate", "=", "learning_rate", ",", "initial_accumulator_value", "=", "1e-8", ")", ".", "minimize", "(", "loss", ")", "\n", "", "elif", "\"rmsprop\"", "in", "learner", ".", "lower", "(", ")", ":", "\n", "        ", "opt", "=", "tf", ".", "train", ".", "RMSPropOptimizer", "(", "learning_rate", ")", ".", "minimize", "(", "loss", ")", "\n", "", "elif", "\"adam\"", "in", "learner", ".", "lower", "(", ")", ":", "\n", "        ", "opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", ")", ".", "minimize", "(", "loss", ")", "\n", "", "elif", "\"gd\"", "in", "learner", ".", "lower", "(", ")", ":", "\n", "        ", "opt", "=", "tf", ".", "train", ".", "GradientDescentOptimizer", "(", "learning_rate", ")", ".", "minimize", "(", "loss", ")", "\n", "", "elif", "\"momentum\"", "in", "learner", ".", "lower", "(", ")", ":", "\n", "        ", "opt", "=", "tf", ".", "train", ".", "MomentumOptimizer", "(", "learning_rate", ",", "momentum", ")", ".", "minimize", "(", "loss", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"please select a suitable optimizer\"", ")", "\n", "", "return", "opt", "\n", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.configs.parse_args": [[3, 60], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.configs.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Run GCM.\"", ")", "\n", "parser", ".", "add_argument", "(", "'--env'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'select the environment for this implementation (1 for PC, 2 for cluster)'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "nargs", "=", "'?'", ",", "default", "=", "'Yelp-OH'", ",", "\n", "help", "=", "'Choose a dataset: Yelp-OH, or Yelp-NC, or Amazon-Book'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch'", ",", "type", "=", "int", ",", "default", "=", "300", ",", "\n", "help", "=", "'Number of epochs.'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "2048", ",", "\n", "help", "=", "'Batch size.'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_batch_size'", ",", "type", "=", "int", ",", "default", "=", "10000", ",", "\n", "help", "=", "'Test batch size.'", ")", "\n", "parser", ".", "add_argument", "(", "'--hidden_factor'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "\n", "help", "=", "'Number of hidden factors, i.e., embedding size.'", ")", "\n", "parser", ".", "add_argument", "(", "'--merge_type'", ",", "nargs", "=", "'?'", ",", "default", "=", "'sum'", ",", "\n", "help", "=", "'can be sum, ip (i.e., inner product) or mlp(i.e., concat then MLP'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_gcn_layers'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'Number of GCN layers.'", ")", "\n", "parser", ".", "add_argument", "(", "'--gcn_layer_weight'", ",", "nargs", "=", "'?'", ",", "default", "=", "'[0.5,0.5]'", ",", "\n", "help", "=", "'GCN layer weight when combine different gcn layer output'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.001", ",", "\n", "help", "=", "'Learning rate.'", ")", "\n", "parser", ".", "add_argument", "(", "'--loss_type'", ",", "nargs", "=", "'?'", ",", "default", "=", "'log_loss'", ",", "\n", "help", "=", "'Specify a loss type (bpr_loss or log_loss).'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_negatives'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "\n", "help", "=", "'the number of negatives for log loss, can be 1, 2 or 4'", ")", "\n", "parser", ".", "add_argument", "(", "'--decoder_type'", ",", "nargs", "=", "'?'", ",", "default", "=", "'FM'", ",", "\n", "help", "=", "'Specify a decoder type.(IP for inner prodcut, FM for factorzation machine, MLP for multilayer perceptron)'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_hidden_layers'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'Number of hidden layers for NFM and GCM with MLP decoder.'", ")", "\n", "parser", ".", "add_argument", "(", "'--optimizer'", ",", "nargs", "=", "'?'", ",", "default", "=", "'AdamOptimizer'", ",", "\n", "help", "=", "'Specify an optimizer type (AdamOptimizer, AdagradOptimizer, GradientDescentOptimizer, MomentumOptimizer).'", ")", "\n", "parser", ".", "add_argument", "(", "'--reg'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ",", "\n", "help", "=", "'Regularization coefficient of embeddings.'", ")", "\n", "parser", ".", "add_argument", "(", "'--adj_norm_type'", ",", "nargs", "=", "'?'", ",", "default", "=", "'ls'", ",", "\n", "help", "=", "'normalization type of adj matrix for NGCF, LightGCN and GCM, can be \\\n                            1. ls for left-single, \\\n                            2. ld for left-double, \\\n                            3. rs for right-single, \\\n                            4. rd for right-double and \\\n                            5. db for double'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_interval'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'Test interval.'", ")", "\n", "parser", ".", "add_argument", "(", "'--stop_cnt'", ",", "type", "=", "int", ",", "default", "=", "50", ",", "\n", "help", "=", "'stop count'", ")", "\n", "parser", ".", "add_argument", "(", "'--topk'", ",", "nargs", "=", "'?'", ",", "default", "=", "'[10,50]'", ",", "\n", "help", "=", "'Top K'", ")", "\n", "parser", ".", "add_argument", "(", "'--init_method'", ",", "nargs", "=", "'?'", ",", "default", "=", "'xavier_normal'", ",", "\n", "help", "=", "'1. tnormal for truncated_normal_initializer, 2.uniform for random_uniform_initializer 3.normal for random_normal_initializer, 4.xavier_normal, 5. xavier_uniform, 6.he_normal, 7.he_uniform'", ")", "\n", "parser", ".", "add_argument", "(", "'--stddev'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "\n", "help", "=", "'standard devariation for initialization'", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrain'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "\n", "help", "=", "'flag for pretrain. 1: initialize from pretrain; 0: randomly initialize'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_flag'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "\n", "help", "=", "'flag for saving model to pretrain file. 0: not save; 1: save'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.configs.post_process_for_config": [[62, 88], ["eval", "ValueError", "ValueError", "len"], "function", ["None"], ["", "def", "post_process_for_config", "(", "args", ",", "model_name", ")", ":", "\n", "    ", "args", ".", "model_name", "=", "model_name", "\n", "# select project path for different environment", "\n", "if", "args", ".", "env", "==", "1", ":", "\n", "        ", "args", ".", "proj_path", "=", "'D:/OneDrive - mail.ustc.edu.cn/PythonProjects/GCM-master/'", "\n", "args", ".", "data_path", "=", "'D:/OneDrive - mail.ustc.edu.cn/PythonProjects/GCM-master/dataset/%s/'", "%", "args", ".", "dataset", "\n", "", "elif", "args", ".", "env", "==", "2", ":", "\n", "        ", "args", ".", "proj_path", "=", "'/home/wujc/PythonProjects/GCM-master/'", "\n", "args", ".", "data_path", "=", "'/home/wujc/PythonProjects/GCM-master/dataset/%s/'", "%", "args", ".", "dataset", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Environment is Not recognized!\"", ")", "\n", "\n", "", "args", ".", "data_separator", "=", "[", "','", ",", "'-'", "]", "\n", "\n", "if", "model_name", "in", "[", "'MF'", ",", "'LightGCN'", "]", ":", "\n", "        ", "args", ".", "data_format", "=", "'UI'", "\n", "", "else", ":", "\n", "        ", "args", ".", "data_format", "=", "'UIC'", "\n", "", "if", "model_name", "in", "[", "'GCM'", ",", "'LightGCN'", "]", ":", "\n", "        ", "args", ".", "gcn_layer_weight", "=", "eval", "(", "args", ".", "gcn_layer_weight", ")", "\n", "if", "len", "(", "args", ".", "gcn_layer_weight", ")", "-", "1", "!=", "args", ".", "num_gcn_layers", ":", "\n", "            ", "args", ".", "gcn_layer_weight", "=", "[", "1", "/", "(", "args", ".", "num_gcn_layers", "+", "1", ")", "]", "*", "(", "args", ".", "num_gcn_layers", "+", "1", ")", "\n", "\n", "", "", "if", "args", ".", "adj_norm_type", "not", "in", "[", "'ls'", ",", "'ld'", ",", "'rs'", ",", "'rd'", ",", "'db'", "]", ":", "\n", "        ", "raise", "ValueError", "(", "\"adj_norm_type is invalid.\"", ")", "\n", "", "return", "args", "", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataGenerator._get_pairwise_all_data": [[6, 21], ["range", "len", "user_input.extend", "item_input_pos.extend", "item_input_neg.extend", "utility.Tool.randint_choice"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.randint_choice"], ["def", "_get_pairwise_all_data", "(", "dataset", ")", ":", "\n", "    ", "user_input", ",", "item_input_pos", ",", "item_input_neg", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "train_matrix", "=", "dataset", ".", "train_matrix", "\n", "num_items", "=", "dataset", ".", "num_valid_items", "\n", "num_users", "=", "dataset", ".", "num_users", "\n", "\n", "for", "u", "in", "range", "(", "num_users", ")", ":", "\n", "        ", "items_by_u", "=", "train_matrix", "[", "u", "]", ".", "indices", "\n", "num_items_by_u", "=", "len", "(", "items_by_u", ")", "\n", "if", "num_items_by_u", ">", "0", ":", "\n", "            ", "user_input", ".", "extend", "(", "[", "u", "]", "*", "num_items_by_u", ")", "\n", "item_input_pos", ".", "extend", "(", "items_by_u", ")", "\n", "item_input_neg", ".", "extend", "(", "randint_choice", "(", "num_items", ",", "num_items_by_u", ",", "replace", "=", "True", ",", "exclusion", "=", "items_by_u", ")", ")", "\n", "\n", "", "", "return", "user_input", ",", "item_input_pos", ",", "item_input_neg", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataGenerator._get_pairwise_all_data_context": [[22, 42], ["train_data[].tolist", "train_data[].tolist", "train_data[].tolist", "range", "len", "numpy.random.randint", "item_input_neg.append", "numpy.random.randint"], "function", ["None"], ["", "def", "_get_pairwise_all_data_context", "(", "dataset", ")", ":", "\n", "    ", "user_input", ",", "context_input", ",", "item_input_pos", ",", "item_input_neg", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "train_data", "=", "dataset", ".", "all_data_dict", "[", "'train_data'", "]", "\n", "user_input", "=", "train_data", "[", "'user_id'", "]", ".", "tolist", "(", ")", "\n", "context_input", "=", "train_data", "[", "'context_id'", "]", ".", "tolist", "(", ")", "\n", "item_input_pos", "=", "train_data", "[", "'item_id'", "]", ".", "tolist", "(", ")", "\n", "\n", "num_items", "=", "dataset", ".", "num_valid_items", "\n", "\n", "for", "idx", "in", "range", "(", "len", "(", "user_input", ")", ")", ":", "\n", "        ", "user_id", "=", "user_input", "[", "idx", "]", "\n", "context_id", "=", "context_input", "[", "idx", "]", "\n", "# pos = train_data[(train_data['user_id'] == user_id) & (train_data['context_id'] == context_id)]['item_id'].tolist()", "\n", "pos", "=", "dataset", ".", "all_data_dict", "[", "'positive_dict'", "]", "[", "user_id", "]", "[", "context_id", "]", "\n", "neg_item_id", "=", "np", ".", "random", ".", "randint", "(", "num_items", ")", "\n", "while", "neg_item_id", "in", "pos", ":", "\n", "            ", "neg_item_id", "=", "np", ".", "random", ".", "randint", "(", "num_items", ")", "\n", "", "item_input_neg", ".", "append", "(", "neg_item_id", ")", "\n", "\n", "", "return", "user_input", ",", "context_input", ",", "item_input_pos", ",", "item_input_neg", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataGenerator._get_pointwise_all_data": [[43, 70], ["range", "len", "utility.Tool.randint_choice", "user_input.append", "item_input.append", "labels.append", "user_input.extend", "item_input.extend", "labels.extend"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.randint_choice"], ["", "def", "_get_pointwise_all_data", "(", "dataset", ",", "num_negatives", ",", "phase", "=", "'train'", ")", ":", "\n", "    ", "user_input", ",", "item_input", ",", "labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "if", "phase", "==", "'train'", ":", "\n", "        ", "train_matrix", "=", "dataset", ".", "train_matrix", "\n", "", "else", ":", "\n", "        ", "train_matrix", "=", "dataset", ".", "test_matrix", "\n", "\n", "", "num_items", "=", "dataset", ".", "num_valid_items", "\n", "num_users", "=", "dataset", ".", "num_users", "\n", "\n", "for", "u", "in", "range", "(", "num_users", ")", ":", "\n", "        ", "items_by_u", "=", "train_matrix", "[", "u", "]", ".", "indices", "\n", "num_items_by_u", "=", "len", "(", "items_by_u", ")", "\n", "if", "num_items_by_u", ">", "0", ":", "\n", "            ", "negative_items", "=", "randint_choice", "(", "num_items", ",", "num_items_by_u", "*", "num_negatives", ",", "replace", "=", "True", ",", "exclusion", "=", "items_by_u", ")", "\n", "index", "=", "0", "\n", "for", "i", "in", "items_by_u", ":", "\n", "# positive instance", "\n", "                ", "user_input", ".", "append", "(", "u", ")", "\n", "item_input", ".", "append", "(", "i", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "# negative instance", "\n", "user_input", ".", "extend", "(", "[", "u", "]", "*", "num_negatives", ")", "\n", "item_input", ".", "extend", "(", "negative_items", "[", "index", ":", "index", "+", "num_negatives", "]", ")", "\n", "labels", ".", "extend", "(", "[", "0", "]", "*", "num_negatives", ")", "\n", "index", "=", "index", "+", "num_negatives", "\n", "", "", "", "return", "user_input", ",", "item_input", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.utility.DataGenerator._get_pointwise_all_data_context": [[71, 104], ["train_data[].tolist", "train_data[].tolist", "train_data[].tolist", "range", "utility.Tool.csr_to_user_dict", "len", "user_input.extend", "context_input.extend", "item_input.append", "labels.append", "range", "numpy.random.randint", "item_input.append", "labels.append", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.csr_to_user_dict"], ["", "def", "_get_pointwise_all_data_context", "(", "dataset", ",", "num_negatives", ",", "phase", "=", "'train'", ")", ":", "\n", "    ", "user_input", ",", "context_input", ",", "item_input", ",", "labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "if", "phase", "==", "'train'", ":", "\n", "        ", "train_data", "=", "dataset", ".", "all_data_dict", "[", "'train_data'", "]", "\n", "", "else", ":", "\n", "        ", "train_data", "=", "dataset", ".", "all_data_dict", "[", "'test_data'", "]", "\n", "user_pos_test", "=", "csr_to_user_dict", "(", "dataset", ".", "test_matrix", ")", "\n", "", "user_insts", "=", "train_data", "[", "'user_id'", "]", ".", "tolist", "(", ")", "\n", "context_insts", "=", "train_data", "[", "'context_id'", "]", ".", "tolist", "(", ")", "\n", "item_insts_pos", "=", "train_data", "[", "'item_id'", "]", ".", "tolist", "(", ")", "\n", "\n", "num_items", "=", "dataset", ".", "num_valid_items", "\n", "\n", "for", "idx", "in", "range", "(", "len", "(", "user_insts", ")", ")", ":", "\n", "        ", "user_id", "=", "user_insts", "[", "idx", "]", "\n", "context_id", "=", "context_insts", "[", "idx", "]", "\n", "user_input", ".", "extend", "(", "[", "user_id", "]", "*", "(", "num_negatives", "+", "1", ")", ")", "\n", "context_input", ".", "extend", "(", "[", "context_id", "]", "*", "(", "num_negatives", "+", "1", ")", ")", "\n", "item_input", ".", "append", "(", "item_insts_pos", "[", "idx", "]", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "try", ":", "\n", "            ", "user_pos", "=", "dataset", ".", "all_data_dict", "[", "'positive_dict'", "]", "[", "user_id", "]", "[", "context_id", "]", "\n", "", "except", "Exception", ":", "\n", "            ", "user_pos", "=", "[", "]", "\n", "", "if", "phase", "!=", "'train'", ":", "\n", "            ", "user_pos", "=", "user_pos", "+", "user_pos_test", "[", "user_id", "]", "\n", "", "for", "_", "in", "range", "(", "num_negatives", ")", ":", "\n", "            ", "neg_item_id", "=", "np", ".", "random", ".", "randint", "(", "num_items", ")", "\n", "while", "neg_item_id", "in", "user_pos", ":", "\n", "                ", "neg_item_id", "=", "np", ".", "random", ".", "randint", "(", "num_items", ")", "\n", "", "item_input", ".", "append", "(", "neg_item_id", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "", "", "return", "user_input", ",", "context_input", ",", "item_input", ",", "labels", "", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.AbstractEvaluator.__init__": [[14, 16], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.AbstractEvaluator.metrics_info": [[17, 19], ["None"], "methods", ["None"], ["", "def", "metrics_info", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.AbstractEvaluator.evaluate": [[20, 22], ["None"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ",", "ranking_score", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.__init__": [[27, 38], ["evaluator.AbstractEvaluator.__init__", "isinstance", "utility.Tool.csr_to_user_dict", "utility.Tool.csr_to_user_dict", "isinstance", "max", "numpy.sort", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.__init__", "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.csr_to_user_dict", "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.csr_to_user_dict"], ["def", "__init__", "(", "self", ",", "train_matrix", ",", "test_matrix", ",", "test_context_dict", "=", "None", ",", "top_k", "=", "50", ")", ":", "\n", "        ", "super", "(", "LeaveOneOutEvaluator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "max_top", "=", "top_k", "if", "isinstance", "(", "top_k", ",", "int", ")", "else", "max", "(", "top_k", ")", "\n", "if", "isinstance", "(", "top_k", ",", "int", ")", ":", "\n", "            ", "self", ".", "top_show", "=", "np", ".", "arange", "(", "top_k", ")", "+", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "top_show", "=", "np", ".", "sort", "(", "top_k", ")", "\n", "", "self", ".", "user_pos_train", "=", "csr_to_user_dict", "(", "train_matrix", ")", "\n", "self", ".", "user_pos_test", "=", "csr_to_user_dict", "(", "test_matrix", ")", "\n", "self", ".", "test_context_dict", "=", "test_context_dict", "\n", "self", ".", "metrics_num", "=", "3", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.metrics_info": [[39, 46], ["str", "str", "str"], "methods", ["None"], ["", "def", "metrics_info", "(", "self", ")", ":", "\n", "        ", "HR", "=", "'\\t'", ".", "join", "(", "[", "(", "\"HitRatio@\"", "+", "str", "(", "k", ")", ")", ".", "ljust", "(", "12", ")", "for", "k", "in", "self", ".", "top_show", "]", ")", "\n", "NDCG", "=", "'\\t'", ".", "join", "(", "[", "(", "\"NDCG@\"", "+", "str", "(", "k", ")", ")", ".", "ljust", "(", "12", ")", "for", "k", "in", "self", ".", "top_show", "]", ")", "\n", "MRR", "=", "'\\t'", ".", "join", "(", "[", "(", "\"MRR@\"", "+", "str", "(", "k", ")", ")", ".", "ljust", "(", "12", ")", "for", "k", "in", "self", ".", "top_show", "]", ")", "\n", "metric", "=", "'\\t'", ".", "join", "(", "[", "HR", ",", "NDCG", ",", "MRR", "]", ")", "\n", "# return metric", "\n", "return", "\"metrics:\\t%s\"", "%", "metric", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.evaluate": [[47, 82], ["utility.DataIterator.DataIterator", "numpy.concatenate", "numpy.mean", "numpy.reshape", "numpy.reshape", "list", "model.predict", "numpy.array", "enumerate", "evaluator.backend.eval_score_matrix_loo", "batch_result.append", "evaluator.LeaveOneOutEvaluator.user_pos_test.keys", "len", "test_items.append", "ValueError"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.AbstractRecommender.AbstractRecommender.predict", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.eval_score_matrix_loo"], ["", "def", "evaluate", "(", "self", ",", "model", ")", ":", "\n", "# B: batch size", "\n", "# N: the number of items", "\n", "        ", "test_batch_size", "=", "model", ".", "test_batch_size", "\n", "\n", "test_users", "=", "DataIterator", "(", "list", "(", "self", ".", "user_pos_test", ".", "keys", "(", ")", ")", ",", "batch_size", "=", "test_batch_size", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ")", "\n", "batch_result", "=", "[", "]", "\n", "for", "batch_users", "in", "test_users", ":", "\n", "            ", "test_items", "=", "[", "]", "\n", "for", "user", "in", "batch_users", ":", "\n", "                ", "num_item", "=", "len", "(", "self", ".", "user_pos_test", "[", "user", "]", ")", "\n", "if", "num_item", "!=", "1", ":", "\n", "                    ", "raise", "ValueError", "(", "\"the number of test item of user %d is %d\"", "%", "(", "user", ",", "num_item", ")", ")", "\n", "", "test_items", ".", "append", "(", "self", ".", "user_pos_test", "[", "user", "]", "[", "0", "]", ")", "\n", "", "ranking_score", "=", "model", ".", "predict", "(", "batch_users", ",", "None", ")", "# (B,N)", "\n", "ranking_score", "=", "np", ".", "array", "(", "ranking_score", ")", "\n", "\n", "# set the ranking scores of training items to -inf,", "\n", "# then the training items will be sorted at the end of the ranking list.", "\n", "for", "idx", ",", "user", "in", "enumerate", "(", "batch_users", ")", ":", "\n", "                ", "train_items", "=", "self", ".", "user_pos_train", "[", "user", "]", "\n", "ranking_score", "[", "idx", "]", "[", "train_items", "]", "=", "-", "np", ".", "inf", "\n", "\n", "", "result", "=", "eval_score_matrix_loo", "(", "ranking_score", ",", "test_items", ",", "top_k", "=", "self", ".", "max_top", ",", "thread_num", "=", "None", ")", "# (B,k*metric_num)", "\n", "batch_result", ".", "append", "(", "result", ")", "\n", "\n", "# concatenate the batch results to a matrix", "\n", "", "all_user_result", "=", "np", ".", "concatenate", "(", "batch_result", ",", "axis", "=", "0", ")", "\n", "final_result", "=", "np", ".", "mean", "(", "all_user_result", ",", "axis", "=", "0", ")", "# mean", "\n", "\n", "final_result", "=", "np", ".", "reshape", "(", "final_result", ",", "newshape", "=", "[", "self", ".", "metrics_num", ",", "self", ".", "max_top", "]", ")", "\n", "final_result", "=", "final_result", "[", ":", ",", "self", ".", "top_show", "-", "1", "]", "\n", "final_result", "=", "np", ".", "reshape", "(", "final_result", ",", "newshape", "=", "[", "-", "1", "]", ")", "\n", "buf", "=", "'\\t'", ".", "join", "(", "[", "(", "\"%.4f\"", "%", "x", ")", ".", "ljust", "(", "12", ")", "for", "x", "in", "final_result", "]", ")", "\n", "return", "final_result", ",", "buf", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.evaluate4recall": [[83, 119], ["utility.DataIterator.DataIterator", "numpy.concatenate", "list", "batch_result.append", "evaluator.LeaveOneOutEvaluator.user_pos_test.keys", "model.predict", "numpy.array", "enumerate", "enumerate", "all_pos_items.extend", "numpy.argsort", "numpy.sort", "result.append", "all_pos_items.extend", "utility.Tool.randint_choice", "numpy.sort", "result.append"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.AbstractRecommender.AbstractRecommender.predict", "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.randint_choice"], ["", "def", "evaluate4recall", "(", "self", ",", "model", ",", "num_recall", ",", "recall_type", "=", "'MF'", ")", ":", "\n", "# B: batch size", "\n", "# N: the number of items", "\n", "        ", "test_users", "=", "DataIterator", "(", "list", "(", "self", ".", "user_pos_test", ".", "keys", "(", ")", ")", ",", "batch_size", "=", "2048", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ")", "\n", "batch_result", "=", "[", "]", "\n", "for", "batch_users", "in", "test_users", ":", "\n", "            ", "result", "=", "[", "]", "\n", "if", "recall_type", "==", "'MF'", ":", "\n", "                ", "ranking_score", "=", "model", ".", "predict", "(", "batch_users", ",", "None", ")", "# (B,N)", "\n", "ranking_score", "=", "np", ".", "array", "(", "ranking_score", ")", "\n", "\n", "# set the ranking scores of training items to -inf,", "\n", "# then the training items will be sorted at the end of the ranking list.", "\n", "for", "idx", ",", "user", "in", "enumerate", "(", "batch_users", ")", ":", "\n", "                    ", "ranking_score_cur_user", "=", "ranking_score", "[", "idx", "]", "\n", "all_pos_items", "=", "self", ".", "user_pos_train", "[", "user", "]", "\n", "all_pos_items", ".", "extend", "(", "self", ".", "user_pos_test", "[", "user", "]", ")", "\n", "ranking_score_cur_user", "[", "all_pos_items", "]", "=", "-", "np", ".", "inf", "# mark scores of all positive items as -inf", "\n", "recall_item_cur", "=", "np", ".", "argsort", "(", "-", "ranking_score_cur_user", ")", "# sort in decent order, return id", "\n", "recall_item_cur", "=", "recall_item_cur", "[", "0", ":", "num_recall", "-", "1", "]", "# only keep first (num_recall - 1) items", "\n", "# recall_item_cur = np.append(recall_item_cur, self.user_pos_test[user])    # include test item", "\n", "recall_item_cur", "=", "np", ".", "sort", "(", "recall_item_cur", ")", "\n", "result", ".", "append", "(", "recall_item_cur", ")", "\n", "", "", "else", ":", "\n", "                ", "for", "idx", ",", "user", "in", "enumerate", "(", "batch_users", ")", ":", "\n", "                    ", "all_pos_items", "=", "self", ".", "user_pos_train", "[", "user", "]", "\n", "all_pos_items", ".", "extend", "(", "self", ".", "user_pos_test", "[", "user", "]", ")", "\n", "recall_item_cur", "=", "randint_choice", "(", "model", ".", "num_valid_items", ",", "num_recall", "-", "1", ",", "replace", "=", "False", ",", "exclusion", "=", "all_pos_items", ")", "\n", "recall_item_cur", "=", "np", ".", "sort", "(", "recall_item_cur", ")", "\n", "result", ".", "append", "(", "recall_item_cur", ")", "\n", "\n", "", "", "batch_result", ".", "append", "(", "result", ")", "\n", "\n", "# concatenate the batch results to a matrix", "\n", "", "final_result", "=", "np", ".", "concatenate", "(", "batch_result", ",", "axis", "=", "0", ")", "\n", "return", "final_result", "\n", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.evaluator.evaluator.LeaveOneOutEvaluator.evaluate4CARS": [[120, 157], ["list", "utility.DataIterator.DataIterator", "numpy.concatenate", "numpy.mean", "numpy.reshape", "numpy.reshape", "evaluator.LeaveOneOutEvaluator.user_pos_test.keys", "model.predict", "numpy.array", "enumerate", "evaluator.backend.eval_score_matrix_loo", "batch_result.append", "len", "test_items.append", "ValueError"], "methods", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.AbstractRecommender.AbstractRecommender.predict", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.eval_score_matrix_loo"], ["", "def", "evaluate4CARS", "(", "self", ",", "model", ")", ":", "\n", "# B: batch size", "\n", "# N: the number of items", "\n", "        ", "test_batch_size", "=", "model", ".", "test_batch_size", "\n", "\n", "pos_user_test_list", "=", "list", "(", "self", ".", "user_pos_test", ".", "keys", "(", ")", ")", "\n", "test_context_list", "=", "[", "self", ".", "test_context_dict", "[", "u", "]", "for", "u", "in", "pos_user_test_list", "]", "\n", "test_iter", "=", "DataIterator", "(", "pos_user_test_list", ",", "test_context_list", ",", "batch_size", "=", "test_batch_size", ",", "shuffle", "=", "False", ",", "drop_last", "=", "False", ")", "\n", "batch_result", "=", "[", "]", "\n", "for", "batch_users", ",", "batch_contexts", "in", "test_iter", ":", "\n", "            ", "test_items", "=", "[", "]", "\n", "for", "user", "in", "batch_users", ":", "\n", "                ", "num_item", "=", "len", "(", "self", ".", "user_pos_test", "[", "user", "]", ")", "\n", "if", "num_item", "!=", "1", ":", "\n", "                    ", "raise", "ValueError", "(", "\"the number of test item of user %d is %d\"", "%", "(", "user", ",", "num_item", ")", ")", "\n", "", "test_items", ".", "append", "(", "self", ".", "user_pos_test", "[", "user", "]", "[", "0", "]", ")", "\n", "", "ranking_score", "=", "model", ".", "predict", "(", "batch_users", ",", "batch_contexts", ")", "# (B,N)", "\n", "ranking_score", "=", "np", ".", "array", "(", "ranking_score", ")", "\n", "\n", "# set the ranking scores of training items to -inf,", "\n", "# then the training items will be sorted at the end of the ranking list.", "\n", "for", "idx", ",", "user", "in", "enumerate", "(", "batch_users", ")", ":", "\n", "                ", "train_items", "=", "self", ".", "user_pos_train", "[", "user", "]", "\n", "ranking_score", "[", "idx", "]", "[", "train_items", "]", "=", "-", "np", ".", "inf", "\n", "\n", "", "result", "=", "eval_score_matrix_loo", "(", "ranking_score", ",", "test_items", ",", "top_k", "=", "self", ".", "max_top", ",", "thread_num", "=", "None", ")", "# (B,k*metric_num)", "\n", "batch_result", ".", "append", "(", "result", ")", "\n", "\n", "# concatenate the batch results to a matrix", "\n", "", "all_user_result", "=", "np", ".", "concatenate", "(", "batch_result", ",", "axis", "=", "0", ")", "\n", "final_result", "=", "np", ".", "mean", "(", "all_user_result", ",", "axis", "=", "0", ")", "# mean", "\n", "\n", "final_result", "=", "np", ".", "reshape", "(", "final_result", ",", "newshape", "=", "[", "self", ".", "metrics_num", ",", "self", ".", "max_top", "]", ")", "\n", "final_result", "=", "final_result", "[", ":", ",", "self", ".", "top_show", "-", "1", "]", "\n", "final_result", "=", "np", ".", "reshape", "(", "final_result", ",", "newshape", "=", "[", "-", "1", "]", ")", "\n", "buf", "=", "'\\t'", ".", "join", "(", "[", "(", "\"%.4f\"", "%", "x", ")", ".", "ljust", "(", "12", ")", "for", "x", "in", "final_result", "]", ")", "\n", "return", "final_result", ",", "buf", "\n", "", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.cpp.evaluate_foldout.eval_score_matrix_foldout": [[13, 20], ["util.typeassert", "apt_evaluate_foldout", "len", "len", "ValueError", "os.cpu_count"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.typeassert"], ["@", "typeassert", "(", "score_matrix", "=", "np", ".", "ndarray", ",", "test_items", "=", "list", ",", "top_k", "=", "int", ")", "\n", "def", "eval_score_matrix_foldout", "(", "score_matrix", ",", "test_items", ",", "top_k", "=", "50", ",", "thread_num", "=", "None", ")", ":", "\n", "    ", "if", "len", "(", "score_matrix", ")", "!=", "len", "(", "test_items", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"The lengths of score_matrix and test_items are not equal.\"", ")", "\n", "", "thread_num", "=", "(", "thread_num", "or", "(", "os", ".", "cpu_count", "(", ")", "or", "1", ")", "*", "5", ")", "\n", "results", "=", "apt_evaluate_foldout", "(", "score_matrix", ",", "test_items", ",", "top_k", ",", "thread_num", ")", "\n", "return", "results", "\n", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.cpp.evaluate_loo.eval_score_matrix_loo": [[13, 20], ["utility.Tool.typeassert", "apt_evaluate_loo", "len", "len", "ValueError", "os.cpu_count"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.typeassert"], ["@", "typeassert", "(", "score_matrix", "=", "np", ".", "ndarray", ",", "test_items", "=", "(", "list", ",", "np", ".", "ndarray", ")", ",", "top_k", "=", "int", ")", "\n", "def", "eval_score_matrix_loo", "(", "score_matrix", ",", "test_items", ",", "top_k", "=", "50", ",", "thread_num", "=", "None", ")", ":", "\n", "    ", "if", "len", "(", "score_matrix", ")", "!=", "len", "(", "test_items", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"The lengths of score_matrix and test_items are not equal.\"", ")", "\n", "", "thread_num", "=", "(", "thread_num", "or", "(", "os", ".", "cpu_count", "(", ")", "or", "1", ")", "*", "5", ")", "\n", "results", "=", "apt_evaluate_loo", "(", "score_matrix", ",", "test_items", ",", "top_k", ",", "thread_num", ")", "\n", "return", "results", "\n", "", ""]], "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.precision": [[9, 13], ["numpy.cumsum", "numpy.arange", "len"], "function", ["None"], ["import", "numpy", "as", "np", "\n", "import", "os", "\n", "\n", "\n", "@", "typeassert", "(", "score_matrix", "=", "np", ".", "ndarray", ",", "test_items", "=", "list", ",", "top_k", "=", "int", ")", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.recall": [[15, 19], ["numpy.cumsum", "len"], "function", ["None"], ["    ", "if", "len", "(", "score_matrix", ")", "!=", "len", "(", "test_items", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"The lengths of score_matrix and test_items are not equal.\"", ")", "\n", "", "thread_num", "=", "(", "thread_num", "or", "(", "os", ".", "cpu_count", "(", ")", "or", "1", ")", "*", "5", ")", "\n", "results", "=", "apt_evaluate_foldout", "(", "score_matrix", ",", "test_items", ",", "top_k", ",", "thread_num", ")", "\n", "return", "results", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.map": [[21, 29], ["evaluate_foldout.precision", "numpy.cumsum", "len", "enumerate"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.precision"], []], "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.ndcg": [[31, 37], ["len", "numpy.cumsum", "numpy.cumsum", "numpy.log2", "numpy.arange", "enumerate", "numpy.log2"], "function", ["None"], []], "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.mrr": [[39, 46], ["enumerate", "numpy.zeros", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.eval_score_matrix_foldout": [[48, 70], ["util.typeassert", "list", "numpy.array", "util.argmax_top_k", "np.array().flatten.extend", "np.array().flatten.extend", "np.array().flatten.extend", "np.array().flatten.extend", "np.array().flatten.extend", "numpy.array().flatten", "concurrent.futures.ThreadPoolExecutor", "executor.map", "evaluate_foldout.precision", "evaluate_foldout.recall", "evaluate_foldout.map", "evaluate_foldout.ndcg", "evaluate_foldout.mrr", "range", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.typeassert", "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.argmax_top_k", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.map", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.precision", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.recall", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.map", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.ndcg", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.mrr"], []], "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.hit": [[10, 19], ["enumerate", "numpy.zeros", "len"], "function", ["None"], ["import", "os", "\n", "\n", "\n", "@", "typeassert", "(", "score_matrix", "=", "np", ".", "ndarray", ",", "test_items", "=", "(", "list", ",", "np", ".", "ndarray", ")", ",", "top_k", "=", "int", ")", "\n", "def", "eval_score_matrix_loo", "(", "score_matrix", ",", "test_items", ",", "top_k", "=", "50", ",", "thread_num", "=", "None", ")", ":", "\n", "    ", "if", "len", "(", "score_matrix", ")", "!=", "len", "(", "test_items", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"The lengths of score_matrix and test_items are not equal.\"", ")", "\n", "", "thread_num", "=", "(", "thread_num", "or", "(", "os", ".", "cpu_count", "(", ")", "or", "1", ")", "*", "5", ")", "\n", "results", "=", "apt_evaluate_loo", "(", "score_matrix", ",", "test_items", ",", "top_k", ",", "thread_num", ")", "\n", "return", "results", "\n"]], "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.ndcg": [[21, 30], ["enumerate", "numpy.zeros", "len", "numpy.log2"], "function", ["None"], []], "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.mrr": [[32, 41], ["enumerate", "numpy.zeros", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.eval_score_matrix_loo": [[43, 63], ["utility.Tool.typeassert", "list", "numpy.array", "utility.Tool.argmax_top_k", "np.array().flatten.extend", "np.array().flatten.extend", "np.array().flatten.extend", "numpy.array().flatten", "concurrent.futures.ThreadPoolExecutor", "executor.map", "evaluate_loo.hit", "evaluate_loo.ndcg", "evaluate_loo.mrr", "range", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.typeassert", "home.repos.pwc.inspect_result.wujcan_GCM.utility.Tool.argmax_top_k", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_foldout.map", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.hit", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.ndcg", "home.repos.pwc.inspect_result.wujcan_GCM.python.evaluate_loo.mrr"], []]}