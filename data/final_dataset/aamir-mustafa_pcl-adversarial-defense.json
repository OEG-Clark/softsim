{"home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.BasicBlock.__init__": [[19, 28], ["torch.Module.__init__", "resnet_model.conv3x3", "torch.BatchNorm2d", "torch.ReLU", "resnet_model.conv3x3", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.Model.__init__", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.conv3x3", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.BasicBlock.forward": [[29, 45], ["resnet_model.BasicBlock.conv1", "resnet_model.BasicBlock.bn1", "resnet_model.BasicBlock.relu", "resnet_model.BasicBlock.conv2", "resnet_model.BasicBlock.bn2", "resnet_model.BasicBlock.relu", "resnet_model.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.Bottleneck.__init__": [[50, 62], ["torch.Module.__init__", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.Model.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.Bottleneck.forward": [[63, 82], ["resnet_model.Bottleneck.conv1", "resnet_model.Bottleneck.bn1", "resnet_model.Bottleneck.relu", "resnet_model.Bottleneck.conv2", "resnet_model.Bottleneck.bn2", "resnet_model.Bottleneck.relu", "resnet_model.Bottleneck.conv3", "resnet_model.Bottleneck.bn3", "resnet_model.Bottleneck.relu", "resnet_model.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "# (conv-bn-relu) x 3 times", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "# in our case is none", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.ResNet.__init__": [[86, 116], ["torch.Module.__init__", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "resnet_model.ResNet._make_layer", "resnet_model.ResNet._make_layer", "resnet_model.ResNet._make_layer", "torch.AvgPool2d", "torch.MaxPool2d", "torch.Linear", "torch.Linear", "resnet_model.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.Model.__init__", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.ResNet._make_layer", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.ResNet._make_layer", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# Model type specifies number of layers for CIFAR-10 model", "\n", "assert", "(", "depth", "-", "2", ")", "%", "6", "==", "0", ",", "'depth should be 6n+2'", "\n", "n", "=", "(", "depth", "-", "2", ")", "//", "6", "\n", "\n", "block", "=", "Bottleneck", "if", "depth", ">=", "44", "else", "BasicBlock", "\n", "\n", "self", ".", "inplanes", "=", "16", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "16", ",", "n", ")", "\n", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "32", ",", "n", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "n", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ")", "\n", "\n", "self", ".", "maxpool2", "=", "nn", ".", "MaxPool2d", "(", "16", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "64", "*", "block", ".", "expansion", ",", "1024", ")", "\n", "self", ".", "fcf", "=", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.ResNet._make_layer": [[117, 133], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.ResNet.forward": [[134, 156], ["resnet_model.ResNet.conv1", "resnet_model.ResNet.bn1", "resnet_model.ResNet.relu", "resnet_model.ResNet.layer1", "resnet_model.ResNet.layer2", "resnet_model.ResNet.maxpool2", "m.view.view.view", "resnet_model.ResNet.layer3", "resnet_model.ResNet.avgpool", "resnet_model.ResNet.view", "resnet_model.ResNet.fc", "resnet_model.ResNet.fcf", "m.view.view.size", "resnet_model.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "\n", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "\n", "m", "=", "self", ".", "maxpool2", "(", "x", ")", "\n", "m", "=", "m", ".", "view", "(", "m", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# 128 dimensional", "\n", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "z", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# 256 dimensional", "\n", "x", "=", "self", ".", "fc", "(", "z", ")", "# 1024 dimensional", "\n", "y", "=", "self", ".", "fcf", "(", "x", ")", "# num_classes dimensional", "\n", "\n", "return", "m", ",", "z", ",", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.conv3x3": [[10, 14], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.resnet": [[158, 163], ["resnet_model.ResNet"], "function", ["None"], ["", "", "def", "resnet", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    Constructs a ResNet model.\n    \"\"\"", "\n", "return", "ResNet", "(", "**", "kwargs", ")", "", "", ""]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_fgsm.normalize": [[61, 67], ["None"], "function", ["None"], ["def", "normalize", "(", "t", ")", ":", "\n", "    ", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "-", "mean", "[", "0", "]", ")", "/", "std", "[", "0", "]", "\n", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "-", "mean", "[", "1", "]", ")", "/", "std", "[", "1", "]", "\n", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "-", "mean", "[", "2", "]", ")", "/", "std", "[", "2", "]", "\n", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_fgsm.un_normalize": [[68, 74], ["None"], "function", ["None"], ["", "def", "un_normalize", "(", "t", ")", ":", "\n", "    ", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "*", "std", "[", "0", "]", ")", "+", "mean", "[", "0", "]", "\n", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "*", "std", "[", "1", "]", ")", "+", "mean", "[", "1", "]", "\n", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "*", "std", "[", "2", "]", ")", "+", "mean", "[", "2", "]", "\n", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_fgsm.FGSM": [[75, 85], ["img.clone", "model", "criterion", "criterion.backward", "img.clone.data.clamp_", "img.clone.grad.data.zero_", "img.clone.detach", "pcl_training_adversarial_fgsm.un_normalize", "img.clone.grad.sign"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.un_normalize"], ["", "def", "FGSM", "(", "model", ",", "criterion", ",", "img", ",", "label", ",", "eps", ")", ":", "\n", "    ", "adv", "=", "img", ".", "clone", "(", ")", "\n", "adv", ".", "requires_grad", "=", "True", "\n", "_", ",", "_", ",", "_", ",", "out", "=", "model", "(", "adv", ")", "\n", "loss", "=", "criterion", "(", "out", ",", "label", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "adv", ".", "data", "=", "un_normalize", "(", "adv", ".", "data", ")", "+", "eps", "*", "adv", ".", "grad", ".", "sign", "(", ")", "\n", "adv", ".", "data", ".", "clamp_", "(", "0.0", ",", "1.0", ")", "\n", "adv", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "return", "adv", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_fgsm.main": [[86, 185], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "utils.Logger", "print", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "resnet_model.resnet", "torch.CrossEntropyLoss", "proximity.Proximity", "proximity.Proximity", "contrastive_proximity.Con_Proximity", "contrastive_proximity.Con_Proximity", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.load", "torch.load", "torch.load", "nn.DataParallel().cuda.load_state_dict", "time.time", "range", "round", "str", "print", "os.join", "print", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "print", "torch.DataParallel().cuda", "nn.DataParallel().cuda.parameters", "proximity.Proximity.parameters", "proximity.Proximity.parameters", "contrastive_proximity.Con_Proximity.parameters", "contrastive_proximity.Con_Proximity.parameters", "pcl_training_adversarial_fgsm.adjust_learning_rate", "pcl_training_adversarial_fgsm.adjust_learning_rate_prox", "pcl_training_adversarial_fgsm.adjust_learning_rate_prox", "pcl_training_adversarial_fgsm.adjust_learning_rate_conprox", "pcl_training_adversarial_fgsm.adjust_learning_rate_conprox", "print", "pcl_training_adversarial_fgsm.train", "datetime.timedelta", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "print", "pcl_training_adversarial_fgsm.test", "print", "torch.save", "torch.save", "torch.save", "time.time", "torch.DataParallel", "nn.DataParallel().cuda.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.resnet", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_prox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_prox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_conprox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_conprox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.train", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.test"], ["", "def", "main", "(", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "args", ".", "gpu", "\n", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "args", ".", "use_cpu", ":", "use_gpu", "=", "False", "\n", "\n", "sys", ".", "stdout", "=", "Logger", "(", "osp", ".", "join", "(", "args", ".", "save_dir", ",", "'log_'", "+", "'CIFAR-10_PC_Loss_FGSM_AdvTrain'", "+", "'.txt'", ")", ")", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "print", "(", "\"Currently using GPU: {}\"", ".", "format", "(", "args", ".", "gpu", ")", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Currently using CPU\"", ")", "\n", "\n", "# Data Load", "\n", "", "num_classes", "=", "10", "\n", "print", "(", "'==> Preparing dataset'", ")", "\n", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "]", ")", "\n", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "]", ")", "\n", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "'./data/cifar10'", ",", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "train_batch", ",", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "'./data/cifar10'", ",", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "batch_size", "=", "args", ".", "test_batch", ",", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "# Loading the Model    ", "\n", "model", "=", "resnet", "(", "num_classes", "=", "num_classes", ",", "depth", "=", "110", ")", "\n", "\n", "if", "True", ":", "\n", "        ", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", ".", "cuda", "(", ")", "\n", "\n", "", "criterion_xent", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion_prox_1024", "=", "Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "1024", ",", "use_gpu", "=", "use_gpu", ")", "\n", "criterion_prox_256", "=", "Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "256", ",", "use_gpu", "=", "use_gpu", ")", "\n", "\n", "criterion_conprox_1024", "=", "Con_Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "1024", ",", "use_gpu", "=", "use_gpu", ")", "\n", "criterion_conprox_256", "=", "Con_Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "256", ",", "use_gpu", "=", "use_gpu", ")", "\n", "\n", "optimizer_model", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_model", ",", "weight_decay", "=", "1e-04", ",", "momentum", "=", "0.9", ")", "\n", "\n", "optimizer_prox_1024", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_prox_1024", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_prox", ")", "\n", "optimizer_prox_256", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_prox_256", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_prox", ")", "\n", "\n", "optimizer_conprox_1024", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_conprox_1024", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_conprox", ")", "\n", "optimizer_conprox_256", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_conprox_256", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_conprox", ")", "\n", "\n", "\n", "filename", "=", "'Models_Softmax/CIFAR10_Softmax.pth.tar'", "\n", "checkpoint", "=", "torch", ".", "load", "(", "filename", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "optimizer_model", ".", "load_state_dict", "=", "checkpoint", "[", "'optimizer_model'", "]", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "max_epoch", ")", ":", "\n", "\n", "        ", "adjust_learning_rate", "(", "optimizer_model", ",", "epoch", ")", "\n", "adjust_learning_rate_prox", "(", "optimizer_prox_1024", ",", "epoch", ")", "\n", "adjust_learning_rate_prox", "(", "optimizer_prox_256", ",", "epoch", ")", "\n", "\n", "adjust_learning_rate_conprox", "(", "optimizer_conprox_1024", ",", "epoch", ")", "\n", "adjust_learning_rate_conprox", "(", "optimizer_conprox_256", ",", "epoch", ")", "\n", "\n", "print", "(", "\"==> Epoch {}/{}\"", ".", "format", "(", "epoch", "+", "1", ",", "args", ".", "max_epoch", ")", ")", "\n", "train", "(", "model", ",", "criterion_xent", ",", "criterion_prox_1024", ",", "criterion_prox_256", ",", "\n", "criterion_conprox_1024", ",", "criterion_conprox_256", ",", "\n", "optimizer_model", ",", "optimizer_prox_1024", ",", "optimizer_prox_256", ",", "\n", "optimizer_conprox_1024", ",", "optimizer_conprox_256", ",", "\n", "trainloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", "\n", "\n", "if", "args", ".", "eval_freq", ">", "0", "and", "(", "epoch", "+", "1", ")", "%", "args", ".", "eval_freq", "==", "0", "or", "(", "epoch", "+", "1", ")", "==", "args", ".", "max_epoch", ":", "\n", "            ", "print", "(", "\"==> Test\"", ")", "#Tests after every 10 epochs", "\n", "acc", ",", "err", "=", "test", "(", "model", ",", "testloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", "\n", "print", "(", "\"Accuracy (%): {}\\t Error rate (%): {}\"", ".", "format", "(", "acc", ",", "err", ")", ")", "\n", "\n", "state_", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_model'", ":", "optimizer_model", ".", "state_dict", "(", ")", ",", "'optimizer_prox_1024'", ":", "optimizer_prox_1024", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_prox_256'", ":", "optimizer_prox_256", ".", "state_dict", "(", ")", ",", "'optimizer_conprox_1024'", ":", "optimizer_conprox_1024", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_conprox_256'", ":", "optimizer_conprox_256", ".", "state_dict", "(", ")", ",", "}", "\n", "\n", "torch", ".", "save", "(", "state_", ",", "'Models_PCL_AdvTrain_FGSM/CIFAR10_PCL_AdvTrain_FGSM.pth.tar'", ")", "\n", "\n", "", "", "elapsed", "=", "round", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "print", "(", "\"Finished. Total elapsed time (h:m:s): {}\"", ".", "format", "(", "elapsed", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_fgsm.train": [[186, 275], ["utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "enumerate", "model.eval", "numpy.random.uniform", "pcl_training_adversarial_fgsm.FGSM", "pcl_training_adversarial_fgsm.normalize", "adv.cuda.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.train", "model", "criterion_xent", "criterion_prox_1024", "criterion_prox_256", "criterion_conprox_1024", "criterion_conprox_256", "optimizer_model.zero_grad", "optimizer_prox_1024.zero_grad", "optimizer_prox_256.zero_grad", "optimizer_conprox_1024.zero_grad", "optimizer_conprox_256.zero_grad", "loss.backward", "optimizer_model.step", "criterion_prox_1024.parameters", "optimizer_prox_1024.step", "criterion_prox_256.parameters", "optimizer_prox_256.step", "criterion_conprox_1024.parameters", "optimizer_conprox_1024.step", "criterion_conprox_256.parameters", "optimizer_conprox_256.step", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "loss.item", "torch.cat.size", "criterion_xent.item", "torch.cat.size", "criterion_prox_1024.item", "torch.cat.size", "criterion_prox_256.item", "torch.cat.size", "criterion_conprox_1024.item", "torch.cat.size", "criterion_conprox_256.item", "torch.cat.size", "print", "torch.cat.cuda", "torch.cat.cuda", "len"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_fgsm.FGSM", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.normalize", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.train", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update"], ["", "def", "train", "(", "model", ",", "criterion_xent", ",", "criterion_prox_1024", ",", "criterion_prox_256", ",", "\n", "criterion_conprox_1024", ",", "criterion_conprox_256", ",", "\n", "optimizer_model", ",", "optimizer_prox_1024", ",", "optimizer_prox_256", ",", "\n", "optimizer_conprox_1024", ",", "optimizer_conprox_256", ",", "\n", "trainloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", ":", "\n", "\n", "#    model.train()", "\n", "    ", "xent_losses", "=", "AverageMeter", "(", ")", "#Computes and stores the average and current value", "\n", "prox_losses_1024", "=", "AverageMeter", "(", ")", "\n", "prox_losses_256", "=", "AverageMeter", "(", ")", "\n", "\n", "conprox_losses_1024", "=", "AverageMeter", "(", ")", "\n", "conprox_losses_256", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "\n", "#Batchwise training", "\n", "for", "batch_idx", ",", "(", "data", ",", "labels", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "if", "use_gpu", ":", "\n", "            ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "", "model", ".", "eval", "(", ")", "\n", "eps", "=", "np", ".", "random", ".", "uniform", "(", "0.02", ",", "0.05", ")", "\n", "adv", "=", "FGSM", "(", "model", ",", "criterion_xent", ",", "data", ",", "labels", ",", "eps", "=", "eps", ")", "# Generates Batch-wise Adv Images", "\n", "adv", ".", "requires_grad", "=", "False", "\n", "\n", "adv", "=", "normalize", "(", "adv", ")", "\n", "adv", "=", "adv", ".", "cuda", "(", ")", "\n", "true_labels_adv", "=", "labels", "\n", "data", "=", "torch", ".", "cat", "(", "(", "data", ",", "adv", ")", ",", "0", ")", "\n", "labels", "=", "torch", ".", "cat", "(", "(", "labels", ",", "true_labels_adv", ")", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "feats128", ",", "feats256", ",", "feats1024", ",", "outputs", "=", "model", "(", "data", ")", "\n", "loss_xent", "=", "criterion_xent", "(", "outputs", ",", "labels", ")", "\n", "\n", "loss_prox_1024", "=", "criterion_prox_1024", "(", "feats1024", ",", "labels", ")", "\n", "loss_prox_256", "=", "criterion_prox_256", "(", "feats256", ",", "labels", ")", "\n", "\n", "loss_conprox_1024", "=", "criterion_conprox_1024", "(", "feats1024", ",", "labels", ")", "\n", "loss_conprox_256", "=", "criterion_conprox_256", "(", "feats256", ",", "labels", ")", "\n", "\n", "loss_prox_1024", "*=", "args", ".", "weight_prox", "\n", "loss_prox_256", "*=", "args", ".", "weight_prox", "\n", "\n", "loss_conprox_1024", "*=", "args", ".", "weight_conprox", "\n", "loss_conprox_256", "*=", "args", ".", "weight_conprox", "\n", "\n", "loss", "=", "loss_xent", "+", "loss_prox_1024", "+", "loss_prox_256", "-", "loss_conprox_1024", "-", "loss_conprox_256", "# total loss", "\n", "optimizer_model", ".", "zero_grad", "(", ")", "\n", "\n", "optimizer_prox_1024", ".", "zero_grad", "(", ")", "\n", "optimizer_prox_256", ".", "zero_grad", "(", ")", "\n", "\n", "optimizer_conprox_1024", ".", "zero_grad", "(", ")", "\n", "optimizer_conprox_256", ".", "zero_grad", "(", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer_model", ".", "step", "(", ")", "\n", "\n", "for", "param", "in", "criterion_prox_1024", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_prox", ")", "\n", "", "optimizer_prox_1024", ".", "step", "(", ")", "\n", "\n", "for", "param", "in", "criterion_prox_256", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_prox", ")", "\n", "", "optimizer_prox_256", ".", "step", "(", ")", "\n", "\n", "\n", "for", "param", "in", "criterion_conprox_1024", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_conprox", ")", "\n", "", "optimizer_conprox_1024", ".", "step", "(", ")", "\n", "\n", "for", "param", "in", "criterion_conprox_256", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_conprox", ")", "\n", "", "optimizer_conprox_256", ".", "step", "(", ")", "\n", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "xent_losses", ".", "update", "(", "loss_xent", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "prox_losses_1024", ".", "update", "(", "loss_prox_1024", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "prox_losses_256", ".", "update", "(", "loss_prox_256", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "\n", "conprox_losses_1024", ".", "update", "(", "loss_conprox_1024", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "conprox_losses_256", ".", "update", "(", "loss_conprox_256", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "(", "batch_idx", "+", "1", ")", "%", "args", ".", "print_freq", "==", "0", ":", "\n", "            ", "print", "(", "\"Batch {}/{}\\t Loss {:.6f} ({:.6f})  XentLoss {:.6f} ({:.6f})  ProxLoss_1024 {:.6f} ({:.6f}) ProxLoss_256 {:.6f} ({:.6f}) \\n ConProxLoss_1024 {:.6f} ({:.6f}) ConProxLoss_256 {:.6f} ({:.6f}) \"", ".", "format", "(", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "losses", ".", "val", ",", "losses", ".", "avg", ",", "xent_losses", ".", "val", ",", "xent_losses", ".", "avg", ",", "\n", "prox_losses_1024", ".", "val", ",", "prox_losses_1024", ".", "avg", ",", "prox_losses_256", ".", "val", ",", "prox_losses_256", ".", "avg", ",", "\n", "conprox_losses_1024", ".", "val", ",", "conprox_losses_1024", ".", "avg", ",", "conprox_losses_256", ".", "val", ",", "\n", "conprox_losses_256", ".", "avg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_fgsm.test": [[277, 294], ["model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "labels.size", "outputs.data.max", "data.cuda", "labels.cuda"], "function", ["None"], ["", "", "", "def", "test", "(", "model", ",", "testloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "correct", ",", "total", "=", "0", ",", "0", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "labels", "in", "testloader", ":", "\n", "            ", "if", "True", ":", "\n", "                ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "", "feats128", ",", "feats256", ",", "feats1024", ",", "outputs", "=", "model", "(", "data", ")", "\n", "predictions", "=", "outputs", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "total", "+=", "labels", ".", "size", "(", "0", ")", "\n", "correct", "+=", "(", "predictions", "==", "labels", ".", "data", ")", ".", "sum", "(", ")", "\n", "\n", "\n", "", "", "acc", "=", "correct", "*", "100.", "/", "total", "\n", "err", "=", "100.", "-", "acc", "\n", "return", "acc", ",", "err", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_fgsm.adjust_learning_rate": [[295, 301], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "global", "state", "\n", "if", "epoch", "in", "args", ".", "schedule", ":", "\n", "        ", "state", "[", "'lr_model'", "]", "*=", "args", ".", "gamma", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr_model'", "]", "=", "state", "[", "'lr_model'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_fgsm.adjust_learning_rate_prox": [[302, 308], ["None"], "function", ["None"], ["", "", "", "def", "adjust_learning_rate_prox", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "global", "state", "\n", "if", "epoch", "in", "args", ".", "schedule", ":", "\n", "        ", "state", "[", "'lr_prox'", "]", "*=", "args", ".", "gamma", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr_prox'", "]", "=", "state", "[", "'lr_prox'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_fgsm.adjust_learning_rate_conprox": [[309, 315], ["None"], "function", ["None"], ["", "", "", "def", "adjust_learning_rate_conprox", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "global", "state", "\n", "if", "epoch", "in", "args", ".", "schedule", ":", "\n", "        ", "state", "[", "'lr_conprox'", "]", "*=", "args", ".", "gamma", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr_conprox'", "]", "=", "state", "[", "'lr_conprox'", "]", "\n", "", "", "", "if", "__name__", "==", "'__main__'", ":", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training.main": [[60, 159], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "utils.Logger", "print", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "resnet_model.resnet", "torch.CrossEntropyLoss", "proximity.Proximity", "proximity.Proximity", "contrastive_proximity.Con_Proximity", "contrastive_proximity.Con_Proximity", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.load", "torch.load", "torch.load", "nn.DataParallel().cuda.load_state_dict", "time.time", "range", "round", "str", "print", "os.join", "print", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "print", "torch.DataParallel().cuda", "nn.DataParallel().cuda.parameters", "proximity.Proximity.parameters", "proximity.Proximity.parameters", "contrastive_proximity.Con_Proximity.parameters", "contrastive_proximity.Con_Proximity.parameters", "pcl_training.adjust_learning_rate", "pcl_training.adjust_learning_rate_prox", "pcl_training.adjust_learning_rate_prox", "pcl_training.adjust_learning_rate_conprox", "pcl_training.adjust_learning_rate_conprox", "print", "pcl_training.train", "datetime.timedelta", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "print", "pcl_training.test", "print", "torch.save", "torch.save", "torch.save", "time.time", "torch.DataParallel", "nn.DataParallel().cuda.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.resnet", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_prox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_prox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_conprox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_conprox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.train", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.test"], ["def", "main", "(", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "args", ".", "gpu", "\n", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "args", ".", "use_cpu", ":", "use_gpu", "=", "False", "\n", "\n", "sys", ".", "stdout", "=", "Logger", "(", "osp", ".", "join", "(", "args", ".", "save_dir", ",", "'log_'", "+", "'CIFAR-10_PC_Loss'", "+", "'.txt'", ")", ")", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "print", "(", "\"Currently using GPU: {}\"", ".", "format", "(", "args", ".", "gpu", ")", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Currently using CPU\"", ")", "\n", "\n", "# Data Load", "\n", "", "num_classes", "=", "10", "\n", "print", "(", "'==> Preparing dataset'", ")", "\n", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "]", ")", "\n", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "]", ")", "\n", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "'./data/cifar10'", ",", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "train_batch", ",", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "'./data/cifar10'", ",", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "batch_size", "=", "args", ".", "test_batch", ",", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "# Loading the Model    ", "\n", "model", "=", "resnet", "(", "num_classes", "=", "num_classes", ",", "depth", "=", "110", ")", "\n", "\n", "if", "True", ":", "\n", "        ", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", ".", "cuda", "(", ")", "\n", "\n", "", "criterion_xent", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion_prox_1024", "=", "Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "1024", ",", "use_gpu", "=", "use_gpu", ")", "\n", "criterion_prox_256", "=", "Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "256", ",", "use_gpu", "=", "use_gpu", ")", "\n", "\n", "criterion_conprox_1024", "=", "Con_Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "1024", ",", "use_gpu", "=", "use_gpu", ")", "\n", "criterion_conprox_256", "=", "Con_Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "256", ",", "use_gpu", "=", "use_gpu", ")", "\n", "\n", "optimizer_model", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_model", ",", "weight_decay", "=", "1e-04", ",", "momentum", "=", "0.9", ")", "\n", "\n", "optimizer_prox_1024", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_prox_1024", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_prox", ")", "\n", "optimizer_prox_256", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_prox_256", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_prox", ")", "\n", "\n", "optimizer_conprox_1024", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_conprox_1024", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_conprox", ")", "\n", "optimizer_conprox_256", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_conprox_256", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_conprox", ")", "\n", "\n", "\n", "filename", "=", "'Models_Softmax/CIFAR10_Softmax.pth.tar'", "\n", "checkpoint", "=", "torch", ".", "load", "(", "filename", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "optimizer_model", ".", "load_state_dict", "=", "checkpoint", "[", "'optimizer_model'", "]", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "max_epoch", ")", ":", "\n", "\n", "        ", "adjust_learning_rate", "(", "optimizer_model", ",", "epoch", ")", "\n", "adjust_learning_rate_prox", "(", "optimizer_prox_1024", ",", "epoch", ")", "\n", "adjust_learning_rate_prox", "(", "optimizer_prox_256", ",", "epoch", ")", "\n", "\n", "adjust_learning_rate_conprox", "(", "optimizer_conprox_1024", ",", "epoch", ")", "\n", "adjust_learning_rate_conprox", "(", "optimizer_conprox_256", ",", "epoch", ")", "\n", "\n", "print", "(", "\"==> Epoch {}/{}\"", ".", "format", "(", "epoch", "+", "1", ",", "args", ".", "max_epoch", ")", ")", "\n", "train", "(", "model", ",", "criterion_xent", ",", "criterion_prox_1024", ",", "criterion_prox_256", ",", "\n", "criterion_conprox_1024", ",", "criterion_conprox_256", ",", "\n", "optimizer_model", ",", "optimizer_prox_1024", ",", "optimizer_prox_256", ",", "\n", "optimizer_conprox_1024", ",", "optimizer_conprox_256", ",", "\n", "trainloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", "\n", "\n", "if", "args", ".", "eval_freq", ">", "0", "and", "(", "epoch", "+", "1", ")", "%", "args", ".", "eval_freq", "==", "0", "or", "(", "epoch", "+", "1", ")", "==", "args", ".", "max_epoch", ":", "\n", "            ", "print", "(", "\"==> Test\"", ")", "#Tests after every 10 epochs", "\n", "acc", ",", "err", "=", "test", "(", "model", ",", "testloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", "\n", "print", "(", "\"Accuracy (%): {}\\t Error rate (%): {}\"", ".", "format", "(", "acc", ",", "err", ")", ")", "\n", "\n", "state_", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_model'", ":", "optimizer_model", ".", "state_dict", "(", ")", ",", "'optimizer_prox_1024'", ":", "optimizer_prox_1024", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_prox_256'", ":", "optimizer_prox_256", ".", "state_dict", "(", ")", ",", "'optimizer_conprox_1024'", ":", "optimizer_conprox_1024", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_conprox_256'", ":", "optimizer_conprox_256", ".", "state_dict", "(", ")", ",", "}", "\n", "\n", "torch", ".", "save", "(", "state_", ",", "'Models_PCL/CIFAR10_PCL.pth.tar'", ")", "\n", "\n", "", "", "elapsed", "=", "round", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "print", "(", "\"Finished. Total elapsed time (h:m:s): {}\"", ".", "format", "(", "elapsed", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training.train": [[160, 237], ["model.train", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "enumerate", "model", "criterion_xent", "criterion_prox_1024", "criterion_prox_256", "criterion_conprox_1024", "criterion_conprox_256", "optimizer_model.zero_grad", "optimizer_prox_1024.zero_grad", "optimizer_prox_256.zero_grad", "optimizer_conprox_1024.zero_grad", "optimizer_conprox_256.zero_grad", "loss.backward", "optimizer_model.step", "criterion_prox_1024.parameters", "optimizer_prox_1024.step", "criterion_prox_256.parameters", "optimizer_prox_256.step", "criterion_conprox_1024.parameters", "optimizer_conprox_1024.step", "criterion_conprox_256.parameters", "optimizer_conprox_256.step", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "loss.item", "labels.size", "criterion_xent.item", "labels.size", "criterion_prox_1024.item", "labels.size", "criterion_prox_256.item", "labels.size", "criterion_conprox_1024.item", "labels.size", "criterion_conprox_256.item", "labels.size", "print", "data.cuda", "labels.cuda", "len"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.train", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update"], ["", "def", "train", "(", "model", ",", "criterion_xent", ",", "criterion_prox_1024", ",", "criterion_prox_256", ",", "\n", "criterion_conprox_1024", ",", "criterion_conprox_256", ",", "\n", "optimizer_model", ",", "optimizer_prox_1024", ",", "optimizer_prox_256", ",", "\n", "optimizer_conprox_1024", ",", "optimizer_conprox_256", ",", "\n", "trainloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", ":", "\n", "\n", "    ", "model", ".", "train", "(", ")", "\n", "xent_losses", "=", "AverageMeter", "(", ")", "#Computes and stores the average and current value", "\n", "prox_losses_1024", "=", "AverageMeter", "(", ")", "\n", "prox_losses_256", "=", "AverageMeter", "(", ")", "\n", "\n", "conprox_losses_1024", "=", "AverageMeter", "(", ")", "\n", "conprox_losses_256", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "\n", "#Batchwise training", "\n", "for", "batch_idx", ",", "(", "data", ",", "labels", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "if", "use_gpu", ":", "\n", "            ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "", "feats128", ",", "feats256", ",", "feats1024", ",", "outputs", "=", "model", "(", "data", ")", "\n", "loss_xent", "=", "criterion_xent", "(", "outputs", ",", "labels", ")", "\n", "\n", "loss_prox_1024", "=", "criterion_prox_1024", "(", "feats1024", ",", "labels", ")", "\n", "loss_prox_256", "=", "criterion_prox_256", "(", "feats256", ",", "labels", ")", "\n", "\n", "loss_conprox_1024", "=", "criterion_conprox_1024", "(", "feats1024", ",", "labels", ")", "\n", "loss_conprox_256", "=", "criterion_conprox_256", "(", "feats256", ",", "labels", ")", "\n", "\n", "loss_prox_1024", "*=", "args", ".", "weight_prox", "\n", "loss_prox_256", "*=", "args", ".", "weight_prox", "\n", "\n", "loss_conprox_1024", "*=", "args", ".", "weight_conprox", "\n", "loss_conprox_256", "*=", "args", ".", "weight_conprox", "\n", "\n", "loss", "=", "loss_xent", "+", "loss_prox_1024", "+", "loss_prox_256", "-", "loss_conprox_1024", "-", "loss_conprox_256", "# total loss", "\n", "optimizer_model", ".", "zero_grad", "(", ")", "\n", "\n", "optimizer_prox_1024", ".", "zero_grad", "(", ")", "\n", "optimizer_prox_256", ".", "zero_grad", "(", ")", "\n", "\n", "optimizer_conprox_1024", ".", "zero_grad", "(", ")", "\n", "optimizer_conprox_256", ".", "zero_grad", "(", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer_model", ".", "step", "(", ")", "\n", "\n", "for", "param", "in", "criterion_prox_1024", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_prox", ")", "\n", "", "optimizer_prox_1024", ".", "step", "(", ")", "\n", "\n", "for", "param", "in", "criterion_prox_256", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_prox", ")", "\n", "", "optimizer_prox_256", ".", "step", "(", ")", "\n", "\n", "\n", "for", "param", "in", "criterion_conprox_1024", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_conprox", ")", "\n", "", "optimizer_conprox_1024", ".", "step", "(", ")", "\n", "\n", "for", "param", "in", "criterion_conprox_256", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_conprox", ")", "\n", "", "optimizer_conprox_256", ".", "step", "(", ")", "\n", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "xent_losses", ".", "update", "(", "loss_xent", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "prox_losses_1024", ".", "update", "(", "loss_prox_1024", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "prox_losses_256", ".", "update", "(", "loss_prox_256", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "\n", "conprox_losses_1024", ".", "update", "(", "loss_conprox_1024", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "conprox_losses_256", ".", "update", "(", "loss_conprox_256", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "(", "batch_idx", "+", "1", ")", "%", "args", ".", "print_freq", "==", "0", ":", "\n", "            ", "print", "(", "\"Batch {}/{}\\t Loss {:.6f} ({:.6f})  XentLoss {:.6f} ({:.6f})  ProxLoss_1024 {:.6f} ({:.6f}) ProxLoss_256 {:.6f} ({:.6f}) \\n ConProxLoss_1024 {:.6f} ({:.6f}) ConProxLoss_256 {:.6f} ({:.6f}) \"", ".", "format", "(", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "losses", ".", "val", ",", "losses", ".", "avg", ",", "xent_losses", ".", "val", ",", "xent_losses", ".", "avg", ",", "\n", "prox_losses_1024", ".", "val", ",", "prox_losses_1024", ".", "avg", ",", "prox_losses_256", ".", "val", ",", "prox_losses_256", ".", "avg", ",", "\n", "conprox_losses_1024", ".", "val", ",", "conprox_losses_1024", ".", "avg", ",", "conprox_losses_256", ".", "val", ",", "\n", "conprox_losses_256", ".", "avg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training.test": [[239, 256], ["model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "labels.size", "outputs.data.max", "data.cuda", "labels.cuda"], "function", ["None"], ["", "", "", "def", "test", "(", "model", ",", "testloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "correct", ",", "total", "=", "0", ",", "0", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "labels", "in", "testloader", ":", "\n", "            ", "if", "True", ":", "\n", "                ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "", "feats128", ",", "feats256", ",", "feats1024", ",", "outputs", "=", "model", "(", "data", ")", "\n", "predictions", "=", "outputs", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "total", "+=", "labels", ".", "size", "(", "0", ")", "\n", "correct", "+=", "(", "predictions", "==", "labels", ".", "data", ")", ".", "sum", "(", ")", "\n", "\n", "\n", "", "", "acc", "=", "correct", "*", "100.", "/", "total", "\n", "err", "=", "100.", "-", "acc", "\n", "return", "acc", ",", "err", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training.adjust_learning_rate": [[257, 263], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "global", "state", "\n", "if", "epoch", "in", "args", ".", "schedule", ":", "\n", "        ", "state", "[", "'lr_model'", "]", "*=", "args", ".", "gamma", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr_model'", "]", "=", "state", "[", "'lr_model'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training.adjust_learning_rate_prox": [[264, 270], ["None"], "function", ["None"], ["", "", "", "def", "adjust_learning_rate_prox", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "global", "state", "\n", "if", "epoch", "in", "args", ".", "schedule", ":", "\n", "        ", "state", "[", "'lr_prox'", "]", "*=", "args", ".", "gamma", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr_prox'", "]", "=", "state", "[", "'lr_prox'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training.adjust_learning_rate_conprox": [[271, 277], ["None"], "function", ["None"], ["", "", "", "def", "adjust_learning_rate_conprox", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "global", "state", "\n", "if", "epoch", "in", "args", ".", "schedule", ":", "\n", "        ", "state", "[", "'lr_conprox'", "]", "*=", "args", ".", "gamma", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr_conprox'", "]", "=", "state", "[", "'lr_conprox'", "]", "\n", "", "", "", "if", "__name__", "==", "'__main__'", ":", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.proximity.Proximity.__init__": [[6, 16], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "100", ",", "feat_dim", "=", "1024", ",", "use_gpu", "=", "True", ")", ":", "\n", "        ", "super", "(", "Proximity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "feat_dim", "=", "feat_dim", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "\n", "if", "self", ".", "use_gpu", ":", "\n", "            ", "self", ".", "centers", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "self", ".", "num_classes", ",", "self", ".", "feat_dim", ")", ".", "cuda", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "centers", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "self", ".", "num_classes", ",", "self", ".", "feat_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.proximity.Proximity.forward": [[17, 38], ["x.size", "distmat.addmm_", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "labels.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "labels.unsqueeze().expand.unsqueeze().expand.eq", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.mean", "torch.cat.mean", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow().sum().expand().t", "torch.pow().sum().expand().t", "torch.pow().sum().expand().t", "torch.pow().sum().expand().t", "proximity.Proximity.centers.t", "classes.cuda.cuda.cuda", "classes.cuda.cuda.expand", "value.clamp.clamp.clamp", "torch.cat.append", "torch.cat.append", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "labels.unsqueeze().expand.unsqueeze().expand.unsqueeze", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "labels", ")", ":", "\n", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "distmat", "=", "torch", ".", "pow", "(", "x", ",", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "expand", "(", "batch_size", ",", "self", ".", "num_classes", ")", "+", "torch", ".", "pow", "(", "self", ".", "centers", ",", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "expand", "(", "self", ".", "num_classes", ",", "batch_size", ")", ".", "t", "(", ")", "\n", "distmat", ".", "addmm_", "(", "1", ",", "-", "2", ",", "x", ",", "self", ".", "centers", ".", "t", "(", ")", ")", "\n", "\n", "classes", "=", "torch", ".", "arange", "(", "self", ".", "num_classes", ")", ".", "long", "(", ")", "\n", "if", "self", ".", "use_gpu", ":", "classes", "=", "classes", ".", "cuda", "(", ")", "\n", "labels", "=", "labels", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "batch_size", ",", "self", ".", "num_classes", ")", "\n", "mask", "=", "labels", ".", "eq", "(", "classes", ".", "expand", "(", "batch_size", ",", "self", ".", "num_classes", ")", ")", "\n", "\n", "dist", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "value", "=", "distmat", "[", "i", "]", "[", "mask", "[", "i", "]", "]", "\n", "value", "=", "value", ".", "clamp", "(", "min", "=", "1e-12", ",", "max", "=", "1e+12", ")", "\n", "dist", ".", "append", "(", "value", ")", "\n", "", "dist", "=", "torch", ".", "cat", "(", "dist", ")", "\n", "loss", "=", "dist", ".", "mean", "(", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robustness.normalize": [[40, 46], ["None"], "function", ["None"], ["def", "normalize", "(", "t", ")", ":", "\n", "    ", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "-", "mean", "[", "0", "]", ")", "/", "std", "[", "0", "]", "\n", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "-", "mean", "[", "1", "]", ")", "/", "std", "[", "1", "]", "\n", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "-", "mean", "[", "2", "]", ")", "/", "std", "[", "2", "]", "\n", "\n", "return", "t", "\n", "", "def", "un_normalize", "(", "t", ")", ":", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robustness.un_normalize": [[46, 52], ["None"], "function", ["None"], ["", "def", "un_normalize", "(", "t", ")", ":", "\n", "    ", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "*", "std", "[", "0", "]", ")", "+", "mean", "[", "0", "]", "\n", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "*", "std", "[", "1", "]", ")", "+", "mean", "[", "1", "]", "\n", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "*", "std", "[", "2", "]", ")", "+", "mean", "[", "2", "]", "\n", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robustness.attack": [[54, 96], ["img.detach", "range", "img.detach.detach", "model", "criterion", "criterion.backward", "img.detach.data.clamp_", "img.detach.grad.data.zero_", "robustness.normalize", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.where", "torch.where", "torch.where", "torch.where", "img.detach.clone", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "noise.sign"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.normalize"], ["", "def", "attack", "(", "model", ",", "criterion", ",", "img", ",", "label", ",", "eps", ",", "attack_type", ",", "iters", ")", ":", "\n", "    ", "adv", "=", "img", ".", "detach", "(", ")", "\n", "adv", ".", "requires_grad", "=", "True", "\n", "\n", "if", "attack_type", "==", "'fgsm'", ":", "\n", "        ", "iterations", "=", "1", "\n", "", "else", ":", "\n", "        ", "iterations", "=", "iters", "\n", "\n", "", "if", "attack_type", "==", "'pgd'", ":", "\n", "        ", "step", "=", "2", "/", "255", "\n", "", "else", ":", "\n", "        ", "step", "=", "eps", "/", "iterations", "\n", "\n", "noise", "=", "0", "\n", "\n", "", "for", "j", "in", "range", "(", "iterations", ")", ":", "\n", "        ", "_", ",", "_", ",", "_", ",", "out_adv", "=", "model", "(", "normalize", "(", "adv", ".", "clone", "(", ")", ")", ")", "\n", "loss", "=", "criterion", "(", "out_adv", ",", "label", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "if", "attack_type", "==", "'mim'", ":", "\n", "            ", "adv_mean", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "adv", ".", "grad", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "adv_mean", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "adv_mean", ")", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "adv_mean", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "adv_mean", ")", ",", "dim", "=", "3", ",", "keepdim", "=", "True", ")", "\n", "adv", ".", "grad", "=", "adv", ".", "grad", "/", "adv_mean", "\n", "noise", "=", "noise", "+", "adv", ".", "grad", "\n", "", "else", ":", "\n", "            ", "noise", "=", "adv", ".", "grad", "\n", "\n", "# Optimization step", "\n", "", "adv", ".", "data", "=", "adv", ".", "data", "+", "step", "*", "noise", ".", "sign", "(", ")", "\n", "#        adv.data = adv.data + step * adv.grad.sign()", "\n", "\n", "if", "attack_type", "==", "'pgd'", ":", "\n", "            ", "adv", ".", "data", "=", "torch", ".", "where", "(", "adv", ".", "data", ">", "img", ".", "data", "+", "eps", ",", "img", ".", "data", "+", "eps", ",", "adv", ".", "data", ")", "\n", "adv", ".", "data", "=", "torch", ".", "where", "(", "adv", ".", "data", "<", "img", ".", "data", "-", "eps", ",", "img", ".", "data", "-", "eps", ",", "adv", ".", "data", ")", "\n", "", "adv", ".", "data", ".", "clamp_", "(", "0.0", ",", "1.0", ")", "\n", "\n", "adv", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "return", "adv", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.softmax_training.main": [[54, 126], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "utils.Logger", "print", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "resnet_model.resnet", "torch.CrossEntropyLoss", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "time.time", "range", "round", "str", "print", "os.join", "print", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "print", "torch.DataParallel().cuda", "nn.DataParallel().cuda.parameters", "softmax_training.adjust_learning_rate", "print", "print", "softmax_training.train", "datetime.timedelta", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "print", "softmax_training.test", "print", "torch.save", "torch.save", "torch.save", "time.time", "torch.DataParallel", "nn.DataParallel().cuda.state_dict", "torch.optim.SGD.state_dict"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.resnet", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.train", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.test"], ["def", "main", "(", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "args", ".", "gpu", "\n", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "args", ".", "use_cpu", ":", "use_gpu", "=", "False", "\n", "\n", "sys", ".", "stdout", "=", "Logger", "(", "osp", ".", "join", "(", "args", ".", "save_dir", ",", "'log_'", "+", "'CIFAR-10_OnlySoftmax'", "+", "'.txt'", ")", ")", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "print", "(", "\"Currently using GPU: {}\"", ".", "format", "(", "args", ".", "gpu", ")", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Currently using CPU\"", ")", "\n", "\n", "# Data Loading", "\n", "", "num_classes", "=", "10", "\n", "print", "(", "'==> Preparing dataset '", ")", "\n", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "]", ")", "\n", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "]", ")", "\n", "\n", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "'./data/cifar10'", ",", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "train_batch", ",", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "'./data/cifar10'", ",", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "batch_size", "=", "args", ".", "test_batch", ",", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "# Loading the Model", "\n", "\n", "model", "=", "resnet", "(", "num_classes", "=", "num_classes", ",", "depth", "=", "110", ")", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", ".", "cuda", "(", ")", "\n", "\n", "", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "max_epoch", ")", ":", "\n", "        ", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", "\n", "\n", "print", "(", "\"==> Epoch {}/{}\"", ".", "format", "(", "epoch", "+", "1", ",", "args", ".", "max_epoch", ")", ")", "\n", "print", "(", "'LR: %f'", "%", "(", "state", "[", "'lr'", "]", ")", ")", "\n", "\n", "train", "(", "trainloader", ",", "model", ",", "criterion", ",", "optimizer", ",", "epoch", ",", "use_gpu", ",", "num_classes", ")", "\n", "\n", "if", "args", ".", "eval_freq", ">", "0", "and", "(", "epoch", "+", "1", ")", "%", "args", ".", "eval_freq", "==", "0", "or", "(", "epoch", "+", "1", ")", "==", "args", ".", "max_epoch", ":", "\n", "            ", "print", "(", "\"==> Test\"", ")", "#Tests after every 10 epochs", "\n", "acc", ",", "err", "=", "test", "(", "model", ",", "testloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", "\n", "print", "(", "\"Accuracy (%): {}\\t Error rate (%): {}\"", ".", "format", "(", "acc", ",", "err", ")", ")", "\n", "\n", "checkpoint", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_model'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "}", "\n", "torch", ".", "save", "(", "checkpoint", ",", "'Models_Softmax/CIFAR10_Softmax.pth.tar'", ")", "\n", "\n", "", "", "elapsed", "=", "round", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "print", "(", "\"Finished. Total elapsed time (h:m:s): {}\"", ".", "format", "(", "elapsed", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.softmax_training.train": [[128, 149], ["model.train", "utils.AverageMeter", "enumerate", "model", "criterion", "optimizer.zero_grad", "criterion.backward", "optimizer.step", "utils.AverageMeter.update", "criterion.item", "labels.size", "print", "data.cuda", "labels.cuda", "len"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.train", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update"], ["", "def", "train", "(", "trainloader", ",", "model", ",", "criterion", ",", "optimizer", ",", "epoch", ",", "use_gpu", ",", "num_classes", ")", ":", "\n", "\n", "    ", "model", ".", "train", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "\n", "#Batch-wise Training", "\n", "for", "batch_idx", ",", "(", "data", ",", "labels", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "if", "use_gpu", ":", "\n", "            ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "", "feats_128", ",", "feats_256", ",", "feats_1024", ",", "outputs", "=", "model", "(", "data", ")", "\n", "loss_xent", "=", "criterion", "(", "outputs", ",", "labels", ")", "# cross-entropy loss calculation", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_xent", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "losses", ".", "update", "(", "loss_xent", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "# AverageMeter() has this param", "\n", "\n", "if", "(", "batch_idx", "+", "1", ")", "%", "args", ".", "print_freq", "==", "0", ":", "\n", "            ", "print", "(", "\"Batch {}/{}\\t Loss {:.6f} ({:.6f}) \"", ".", "format", "(", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "losses", ".", "val", ",", "losses", ".", "avg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.softmax_training.test": [[150, 166], ["model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "labels.size", "outputs.data.max", "data.cuda", "labels.cuda"], "function", ["None"], ["", "", "", "def", "test", "(", "model", ",", "testloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "correct", ",", "total", "=", "0", ",", "0", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "labels", "in", "testloader", ":", "\n", "            ", "if", "use_gpu", ":", "\n", "                ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "", "feats_128", ",", "feats_256", ",", "feats_1024", ",", "outputs", "=", "model", "(", "data", ")", "\n", "predictions", "=", "outputs", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "total", "+=", "labels", ".", "size", "(", "0", ")", "\n", "correct", "+=", "(", "predictions", "==", "labels", ".", "data", ")", ".", "sum", "(", ")", "\n", "\n", "", "", "acc", "=", "correct", "*", "100.", "/", "total", "\n", "err", "=", "100.", "-", "acc", "\n", "return", "acc", ",", "err", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.softmax_training.adjust_learning_rate": [[167, 173], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "global", "state", "\n", "if", "epoch", "in", "args", ".", "schedule", ":", "\n", "        ", "state", "[", "'lr'", "]", "*=", "args", ".", "gamma", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "state", "[", "'lr'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.normalize": [[61, 67], ["None"], "function", ["None"], ["def", "normalize", "(", "t", ")", ":", "\n", "    ", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "-", "mean", "[", "0", "]", ")", "/", "std", "[", "0", "]", "\n", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "-", "mean", "[", "1", "]", ")", "/", "std", "[", "1", "]", "\n", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "-", "mean", "[", "2", "]", ")", "/", "std", "[", "2", "]", "\n", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.un_normalize": [[68, 74], ["None"], "function", ["None"], ["", "def", "un_normalize", "(", "t", ")", ":", "\n", "    ", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "*", "std", "[", "0", "]", ")", "+", "mean", "[", "0", "]", "\n", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "*", "std", "[", "1", "]", ")", "+", "mean", "[", "1", "]", "\n", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "*", "std", "[", "2", "]", ")", "+", "mean", "[", "2", "]", "\n", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.attack": [[75, 117], ["img.detach", "range", "img.detach.detach", "model", "criterion", "criterion.backward", "img.detach.data.clamp_", "img.detach.grad.data.zero_", "img.detach.clone", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "pcl_training_adversarial_pgd.un_normalize", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "noise.sign"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.un_normalize"], ["", "def", "attack", "(", "model", ",", "criterion", ",", "img", ",", "label", ",", "eps", ",", "attack_type", ",", "iters", ")", ":", "\n", "    ", "adv", "=", "img", ".", "detach", "(", ")", "\n", "adv", ".", "requires_grad", "=", "True", "\n", "\n", "if", "attack_type", "==", "'fgsm'", ":", "\n", "        ", "iterations", "=", "1", "\n", "", "else", ":", "\n", "        ", "iterations", "=", "iters", "\n", "\n", "", "if", "attack_type", "==", "'pgd'", ":", "\n", "        ", "step", "=", "2", "/", "255", "\n", "", "else", ":", "\n", "        ", "step", "=", "eps", "/", "iterations", "\n", "\n", "noise", "=", "0", "\n", "\n", "", "for", "j", "in", "range", "(", "iterations", ")", ":", "\n", "        ", "_", ",", "_", ",", "_", ",", "out_adv", "=", "model", "(", "adv", ".", "clone", "(", ")", ")", "\n", "loss", "=", "criterion", "(", "out_adv", ",", "label", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "if", "attack_type", "==", "'mim'", ":", "\n", "            ", "adv_mean", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "adv", ".", "grad", ")", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "adv_mean", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "adv_mean", ")", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "adv_mean", "=", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "adv_mean", ")", ",", "dim", "=", "3", ",", "keepdim", "=", "True", ")", "\n", "adv", ".", "grad", "=", "adv", ".", "grad", "/", "adv_mean", "\n", "noise", "=", "noise", "+", "adv", ".", "grad", "\n", "", "else", ":", "\n", "            ", "noise", "=", "adv", ".", "grad", "\n", "\n", "# Optimization step", "\n", "", "adv", ".", "data", "=", "un_normalize", "(", "adv", ".", "data", ")", "+", "step", "*", "noise", ".", "sign", "(", ")", "\n", "#        adv.data = adv.data + step * adv.grad.sign()", "\n", "\n", "if", "attack_type", "==", "'pgd'", ":", "\n", "            ", "adv", ".", "data", "=", "torch", ".", "where", "(", "adv", ".", "data", ">", "img", ".", "data", "+", "eps", ",", "img", ".", "data", "+", "eps", ",", "adv", ".", "data", ")", "\n", "adv", ".", "data", "=", "torch", ".", "where", "(", "adv", ".", "data", "<", "img", ".", "data", "-", "eps", ",", "img", ".", "data", "-", "eps", ",", "adv", ".", "data", ")", "\n", "", "adv", ".", "data", ".", "clamp_", "(", "0.0", ",", "1.0", ")", "\n", "\n", "adv", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "return", "adv", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.main": [[118, 217], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "utils.Logger", "print", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "resnet_model.resnet", "torch.CrossEntropyLoss", "proximity.Proximity", "proximity.Proximity", "contrastive_proximity.Con_Proximity", "contrastive_proximity.Con_Proximity", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.load", "torch.load", "torch.load", "nn.DataParallel().cuda.load_state_dict", "time.time", "range", "round", "str", "print", "os.join", "print", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "print", "torch.DataParallel().cuda", "nn.DataParallel().cuda.parameters", "proximity.Proximity.parameters", "proximity.Proximity.parameters", "contrastive_proximity.Con_Proximity.parameters", "contrastive_proximity.Con_Proximity.parameters", "pcl_training_adversarial_pgd.adjust_learning_rate", "pcl_training_adversarial_pgd.adjust_learning_rate_prox", "pcl_training_adversarial_pgd.adjust_learning_rate_prox", "pcl_training_adversarial_pgd.adjust_learning_rate_conprox", "pcl_training_adversarial_pgd.adjust_learning_rate_conprox", "print", "pcl_training_adversarial_pgd.train", "datetime.timedelta", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "print", "pcl_training_adversarial_pgd.test", "print", "torch.save", "torch.save", "torch.save", "time.time", "torch.DataParallel", "nn.DataParallel().cuda.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict", "torch.optim.SGD.state_dict"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.resnet_model.resnet", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_prox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_prox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_conprox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_conprox", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.train", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.test"], ["", "def", "main", "(", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "args", ".", "gpu", "\n", "use_gpu", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "if", "args", ".", "use_cpu", ":", "use_gpu", "=", "False", "\n", "\n", "sys", ".", "stdout", "=", "Logger", "(", "osp", ".", "join", "(", "args", ".", "save_dir", ",", "'log_'", "+", "'CIFAR-10_PC_Loss_PGD_AdvTrain'", "+", "'.txt'", ")", ")", "\n", "\n", "if", "use_gpu", ":", "\n", "        ", "print", "(", "\"Currently using GPU: {}\"", ".", "format", "(", "args", ".", "gpu", ")", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Currently using CPU\"", ")", "\n", "\n", "# Data Load", "\n", "", "num_classes", "=", "10", "\n", "print", "(", "'==> Preparing dataset'", ")", "\n", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "]", ")", "\n", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "]", ")", "\n", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "'./data/cifar10'", ",", "train", "=", "True", ",", "\n", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "trainloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "train_batch", ",", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "'./data/cifar10'", ",", "train", "=", "False", ",", "\n", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "testloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "batch_size", "=", "args", ".", "test_batch", ",", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "workers", ")", "\n", "\n", "# Loading the Model    ", "\n", "model", "=", "resnet", "(", "num_classes", "=", "num_classes", ",", "depth", "=", "110", ")", "\n", "\n", "if", "True", ":", "\n", "        ", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", ".", "cuda", "(", ")", "\n", "\n", "", "criterion_xent", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "criterion_prox_1024", "=", "Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "1024", ",", "use_gpu", "=", "use_gpu", ")", "\n", "criterion_prox_256", "=", "Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "256", ",", "use_gpu", "=", "use_gpu", ")", "\n", "\n", "criterion_conprox_1024", "=", "Con_Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "1024", ",", "use_gpu", "=", "use_gpu", ")", "\n", "criterion_conprox_256", "=", "Con_Proximity", "(", "num_classes", "=", "num_classes", ",", "feat_dim", "=", "256", ",", "use_gpu", "=", "use_gpu", ")", "\n", "\n", "optimizer_model", "=", "torch", ".", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_model", ",", "weight_decay", "=", "1e-04", ",", "momentum", "=", "0.9", ")", "\n", "\n", "optimizer_prox_1024", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_prox_1024", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_prox", ")", "\n", "optimizer_prox_256", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_prox_256", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_prox", ")", "\n", "\n", "optimizer_conprox_1024", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_conprox_1024", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_conprox", ")", "\n", "optimizer_conprox_256", "=", "torch", ".", "optim", ".", "SGD", "(", "criterion_conprox_256", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_conprox", ")", "\n", "\n", "\n", "filename", "=", "'Models_Softmax/CIFAR10_Softmax.pth.tar'", "\n", "checkpoint", "=", "torch", ".", "load", "(", "filename", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "optimizer_model", ".", "load_state_dict", "=", "checkpoint", "[", "'optimizer_model'", "]", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "max_epoch", ")", ":", "\n", "\n", "        ", "adjust_learning_rate", "(", "optimizer_model", ",", "epoch", ")", "\n", "adjust_learning_rate_prox", "(", "optimizer_prox_1024", ",", "epoch", ")", "\n", "adjust_learning_rate_prox", "(", "optimizer_prox_256", ",", "epoch", ")", "\n", "\n", "adjust_learning_rate_conprox", "(", "optimizer_conprox_1024", ",", "epoch", ")", "\n", "adjust_learning_rate_conprox", "(", "optimizer_conprox_256", ",", "epoch", ")", "\n", "\n", "print", "(", "\"==> Epoch {}/{}\"", ".", "format", "(", "epoch", "+", "1", ",", "args", ".", "max_epoch", ")", ")", "\n", "train", "(", "model", ",", "criterion_xent", ",", "criterion_prox_1024", ",", "criterion_prox_256", ",", "\n", "criterion_conprox_1024", ",", "criterion_conprox_256", ",", "\n", "optimizer_model", ",", "optimizer_prox_1024", ",", "optimizer_prox_256", ",", "\n", "optimizer_conprox_1024", ",", "optimizer_conprox_256", ",", "\n", "trainloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", "\n", "\n", "if", "args", ".", "eval_freq", ">", "0", "and", "(", "epoch", "+", "1", ")", "%", "args", ".", "eval_freq", "==", "0", "or", "(", "epoch", "+", "1", ")", "==", "args", ".", "max_epoch", ":", "\n", "            ", "print", "(", "\"==> Test\"", ")", "#Tests after every 10 epochs", "\n", "acc", ",", "err", "=", "test", "(", "model", ",", "testloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", "\n", "print", "(", "\"Accuracy (%): {}\\t Error rate (%): {}\"", ".", "format", "(", "acc", ",", "err", ")", ")", "\n", "\n", "state_", "=", "{", "'epoch'", ":", "epoch", "+", "1", ",", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_model'", ":", "optimizer_model", ".", "state_dict", "(", ")", ",", "'optimizer_prox_1024'", ":", "optimizer_prox_1024", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_prox_256'", ":", "optimizer_prox_256", ".", "state_dict", "(", ")", ",", "'optimizer_conprox_1024'", ":", "optimizer_conprox_1024", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_conprox_256'", ":", "optimizer_conprox_256", ".", "state_dict", "(", ")", ",", "}", "\n", "\n", "torch", ".", "save", "(", "state_", ",", "'Models_PCL_AdvTrain_PGD/CIFAR10_PCL_AdvTrain_PGD.pth.tar'", ")", "\n", "\n", "", "", "elapsed", "=", "round", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "\n", "elapsed", "=", "str", "(", "datetime", ".", "timedelta", "(", "seconds", "=", "elapsed", ")", ")", "\n", "print", "(", "\"Finished. Total elapsed time (h:m:s): {}\"", ".", "format", "(", "elapsed", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.train": [[218, 307], ["utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "enumerate", "model.eval", "numpy.random.uniform", "pcl_training_adversarial_pgd.attack", "pcl_training_adversarial_pgd.normalize", "adv.cuda.cuda", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.train", "model", "criterion_xent", "criterion_prox_1024", "criterion_prox_256", "criterion_conprox_1024", "criterion_conprox_256", "optimizer_model.zero_grad", "optimizer_prox_1024.zero_grad", "optimizer_prox_256.zero_grad", "optimizer_conprox_1024.zero_grad", "optimizer_conprox_256.zero_grad", "loss.backward", "optimizer_model.step", "criterion_prox_1024.parameters", "optimizer_prox_1024.step", "criterion_prox_256.parameters", "optimizer_prox_256.step", "criterion_conprox_1024.parameters", "optimizer_conprox_1024.step", "criterion_conprox_256.parameters", "optimizer_conprox_256.step", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "loss.item", "torch.cat.size", "criterion_xent.item", "torch.cat.size", "criterion_prox_1024.item", "torch.cat.size", "criterion_prox_256.item", "torch.cat.size", "criterion_conprox_1024.item", "torch.cat.size", "criterion_conprox_256.item", "torch.cat.size", "print", "torch.cat.cuda", "torch.cat.cuda", "len"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.attack", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.normalize", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.train", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update"], ["", "def", "train", "(", "model", ",", "criterion_xent", ",", "criterion_prox_1024", ",", "criterion_prox_256", ",", "\n", "criterion_conprox_1024", ",", "criterion_conprox_256", ",", "\n", "optimizer_model", ",", "optimizer_prox_1024", ",", "optimizer_prox_256", ",", "\n", "optimizer_conprox_1024", ",", "optimizer_conprox_256", ",", "\n", "trainloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", ":", "\n", "\n", "#    model.train()", "\n", "    ", "xent_losses", "=", "AverageMeter", "(", ")", "#Computes and stores the average and current value", "\n", "prox_losses_1024", "=", "AverageMeter", "(", ")", "\n", "prox_losses_256", "=", "AverageMeter", "(", ")", "\n", "\n", "conprox_losses_1024", "=", "AverageMeter", "(", ")", "\n", "conprox_losses_256", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "\n", "#Batchwise training", "\n", "for", "batch_idx", ",", "(", "data", ",", "labels", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "if", "use_gpu", ":", "\n", "            ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "", "model", ".", "eval", "(", ")", "\n", "eps", "=", "np", ".", "random", ".", "uniform", "(", "0.02", ",", "0.05", ")", "\n", "adv", "=", "attack", "(", "model", ",", "criterion_xent", ",", "data", ",", "labels", ",", "eps", "=", "eps", ",", "attack_type", "=", "'pgd'", ",", "iters", "=", "10", ")", "# Generates Batch-wise Adv Images", "\n", "adv", ".", "requires_grad", "=", "False", "\n", "\n", "adv", "=", "normalize", "(", "adv", ")", "\n", "adv", "=", "adv", ".", "cuda", "(", ")", "\n", "true_labels_adv", "=", "labels", "\n", "data", "=", "torch", ".", "cat", "(", "(", "data", ",", "adv", ")", ",", "0", ")", "\n", "labels", "=", "torch", ".", "cat", "(", "(", "labels", ",", "true_labels_adv", ")", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "feats128", ",", "feats256", ",", "feats1024", ",", "outputs", "=", "model", "(", "data", ")", "\n", "loss_xent", "=", "criterion_xent", "(", "outputs", ",", "labels", ")", "\n", "\n", "loss_prox_1024", "=", "criterion_prox_1024", "(", "feats1024", ",", "labels", ")", "\n", "loss_prox_256", "=", "criterion_prox_256", "(", "feats256", ",", "labels", ")", "\n", "\n", "loss_conprox_1024", "=", "criterion_conprox_1024", "(", "feats1024", ",", "labels", ")", "\n", "loss_conprox_256", "=", "criterion_conprox_256", "(", "feats256", ",", "labels", ")", "\n", "\n", "loss_prox_1024", "*=", "args", ".", "weight_prox", "\n", "loss_prox_256", "*=", "args", ".", "weight_prox", "\n", "\n", "loss_conprox_1024", "*=", "args", ".", "weight_conprox", "\n", "loss_conprox_256", "*=", "args", ".", "weight_conprox", "\n", "\n", "loss", "=", "loss_xent", "+", "loss_prox_1024", "+", "loss_prox_256", "-", "loss_conprox_1024", "-", "loss_conprox_256", "# total loss", "\n", "optimizer_model", ".", "zero_grad", "(", ")", "\n", "\n", "optimizer_prox_1024", ".", "zero_grad", "(", ")", "\n", "optimizer_prox_256", ".", "zero_grad", "(", ")", "\n", "\n", "optimizer_conprox_1024", ".", "zero_grad", "(", ")", "\n", "optimizer_conprox_256", ".", "zero_grad", "(", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer_model", ".", "step", "(", ")", "\n", "\n", "for", "param", "in", "criterion_prox_1024", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_prox", ")", "\n", "", "optimizer_prox_1024", ".", "step", "(", ")", "\n", "\n", "for", "param", "in", "criterion_prox_256", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_prox", ")", "\n", "", "optimizer_prox_256", ".", "step", "(", ")", "\n", "\n", "\n", "for", "param", "in", "criterion_conprox_1024", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_conprox", ")", "\n", "", "optimizer_conprox_1024", ".", "step", "(", ")", "\n", "\n", "for", "param", "in", "criterion_conprox_256", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "grad", ".", "data", "*=", "(", "1.", "/", "args", ".", "weight_conprox", ")", "\n", "", "optimizer_conprox_256", ".", "step", "(", ")", "\n", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "xent_losses", ".", "update", "(", "loss_xent", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "prox_losses_1024", ".", "update", "(", "loss_prox_1024", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "prox_losses_256", ".", "update", "(", "loss_prox_256", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "\n", "conprox_losses_1024", ".", "update", "(", "loss_conprox_1024", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "conprox_losses_256", ".", "update", "(", "loss_conprox_256", ".", "item", "(", ")", ",", "labels", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "(", "batch_idx", "+", "1", ")", "%", "args", ".", "print_freq", "==", "0", ":", "\n", "            ", "print", "(", "\"Batch {}/{}\\t Loss {:.6f} ({:.6f})  XentLoss {:.6f} ({:.6f})  ProxLoss_1024 {:.6f} ({:.6f}) ProxLoss_256 {:.6f} ({:.6f}) \\n ConProxLoss_1024 {:.6f} ({:.6f}) ConProxLoss_256 {:.6f} ({:.6f}) \"", ".", "format", "(", "batch_idx", "+", "1", ",", "len", "(", "trainloader", ")", ",", "losses", ".", "val", ",", "losses", ".", "avg", ",", "xent_losses", ".", "val", ",", "xent_losses", ".", "avg", ",", "\n", "prox_losses_1024", ".", "val", ",", "prox_losses_1024", ".", "avg", ",", "prox_losses_256", ".", "val", ",", "prox_losses_256", ".", "avg", ",", "\n", "conprox_losses_1024", ".", "val", ",", "conprox_losses_1024", ".", "avg", ",", "conprox_losses_256", ".", "val", ",", "\n", "conprox_losses_256", ".", "avg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.test": [[309, 326], ["model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model", "labels.size", "outputs.data.max", "data.cuda", "labels.cuda"], "function", ["None"], ["", "", "", "def", "test", "(", "model", ",", "testloader", ",", "use_gpu", ",", "num_classes", ",", "epoch", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "correct", ",", "total", "=", "0", ",", "0", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "labels", "in", "testloader", ":", "\n", "            ", "if", "True", ":", "\n", "                ", "data", ",", "labels", "=", "data", ".", "cuda", "(", ")", ",", "labels", ".", "cuda", "(", ")", "\n", "", "feats128", ",", "feats256", ",", "feats1024", ",", "outputs", "=", "model", "(", "data", ")", "\n", "predictions", "=", "outputs", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "total", "+=", "labels", ".", "size", "(", "0", ")", "\n", "correct", "+=", "(", "predictions", "==", "labels", ".", "data", ")", ".", "sum", "(", ")", "\n", "\n", "\n", "", "", "acc", "=", "correct", "*", "100.", "/", "total", "\n", "err", "=", "100.", "-", "acc", "\n", "return", "acc", ",", "err", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate": [[327, 333], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "global", "state", "\n", "if", "epoch", "in", "args", ".", "schedule", ":", "\n", "        ", "state", "[", "'lr_model'", "]", "*=", "args", ".", "gamma", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr_model'", "]", "=", "state", "[", "'lr_model'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_prox": [[334, 340], ["None"], "function", ["None"], ["", "", "", "def", "adjust_learning_rate_prox", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "global", "state", "\n", "if", "epoch", "in", "args", ".", "schedule", ":", "\n", "        ", "state", "[", "'lr_prox'", "]", "*=", "args", ".", "gamma", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr_prox'", "]", "=", "state", "[", "'lr_prox'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.pcl_training_adversarial_pgd.adjust_learning_rate_conprox": [[341, 347], ["None"], "function", ["None"], ["", "", "", "def", "adjust_learning_rate_conprox", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "global", "state", "\n", "if", "epoch", "in", "args", ".", "schedule", ":", "\n", "        ", "state", "[", "'lr_conprox'", "]", "*=", "args", ".", "gamma", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr_conprox'", "]", "=", "state", "[", "'lr_conprox'", "]", "\n", "", "", "", "if", "__name__", "==", "'__main__'", ":", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.contrastive_proximity.Con_Proximity.__init__": [[6, 16], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn().cuda", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "100", ",", "feat_dim", "=", "1024", ",", "use_gpu", "=", "True", ")", ":", "\n", "        ", "super", "(", "Con_Proximity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "feat_dim", "=", "feat_dim", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "\n", "if", "self", ".", "use_gpu", ":", "\n", "            ", "self", ".", "centers", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "self", ".", "num_classes", ",", "self", ".", "feat_dim", ")", ".", "cuda", "(", ")", ")", "#100 x feats- for 100 centers", "\n", "", "else", ":", "\n", "            ", "self", ".", "centers", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "self", ".", "num_classes", ",", "self", ".", "feat_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.contrastive_proximity.Con_Proximity.forward": [[17, 47], ["x.size", "distmat.addmm_", "torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange().long", "labels.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "labels.unsqueeze().expand.unsqueeze().expand.eq", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.mean", "torch.cat.mean", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow().sum().expand().t", "torch.pow().sum().expand().t", "torch.pow().sum().expand().t", "torch.pow().sum().expand().t", "contrastive_proximity.Con_Proximity.centers.t", "classes.cuda.cuda.cuda", "classes.cuda.cuda.expand", "mask[].clone().to", "mask[].clone().to.clone().to", "value.clamp.clamp.clamp", "torch.cat.append", "torch.cat.append", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "labels.unsqueeze().expand.unsqueeze().expand.unsqueeze", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow().sum().expand", "torch.pow().sum().expand", "mask[].clone", "mask[].clone().to.clone", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "labels", ")", ":", "\n", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "distmat", "=", "torch", ".", "pow", "(", "x", ",", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "expand", "(", "batch_size", ",", "self", ".", "num_classes", ")", "+", "torch", ".", "pow", "(", "self", ".", "centers", ",", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "expand", "(", "self", ".", "num_classes", ",", "batch_size", ")", ".", "t", "(", ")", "\n", "distmat", ".", "addmm_", "(", "1", ",", "-", "2", ",", "x", ",", "self", ".", "centers", ".", "t", "(", ")", ")", "\n", "\n", "classes", "=", "torch", ".", "arange", "(", "self", ".", "num_classes", ")", ".", "long", "(", ")", "\n", "if", "self", ".", "use_gpu", ":", "classes", "=", "classes", ".", "cuda", "(", ")", "\n", "labels", "=", "labels", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "batch_size", ",", "self", ".", "num_classes", ")", "\n", "mask", "=", "labels", ".", "eq", "(", "classes", ".", "expand", "(", "batch_size", ",", "self", ".", "num_classes", ")", ")", "\n", "\n", "dist", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "\n", "            ", "k", "=", "mask", "[", "i", "]", ".", "clone", "(", ")", ".", "to", "(", "dtype", "=", "torch", ".", "int8", ")", "\n", "\n", "k", "=", "-", "1", "*", "k", "+", "1", "\n", "\n", "kk", "=", "k", ".", "clone", "(", ")", ".", "to", "(", "dtype", "=", "torch", ".", "uint8", ")", "\n", "\n", "value", "=", "distmat", "[", "i", "]", "[", "kk", "]", "\n", "\n", "value", "=", "value", ".", "clamp", "(", "min", "=", "1e-12", ",", "max", "=", "1e+12", ")", "# for numerical stability", "\n", "\n", "dist", ".", "append", "(", "value", ")", "\n", "", "dist", "=", "torch", ".", "cat", "(", "dist", ")", "\n", "loss", "=", "dist", ".", "mean", "(", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.__init__": [[22, 24], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.reset": [[25, 30], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.AverageMeter.update": [[31, 36], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.__init__": [[49, 55], ["utils.mkdir_if_missing", "open", "os.path.dirname", "os.path.dirname", "os.path.dirname", "os.path.dirname"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.mkdir_if_missing"], ["def", "__init__", "(", "self", ",", "fpath", "=", "None", ")", ":", "\n", "        ", "self", ".", "console", "=", "sys", ".", "stdout", "\n", "self", ".", "file", "=", "None", "\n", "if", "fpath", "is", "not", "None", ":", "\n", "            ", "mkdir_if_missing", "(", "os", ".", "path", ".", "dirname", "(", "fpath", ")", ")", "\n", "self", ".", "file", "=", "open", "(", "fpath", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.__del__": [[56, 58], ["utils.Logger.close"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.close"], ["", "", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "self", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.__enter__": [[59, 61], ["None"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.__exit__": [[62, 64], ["utils.Logger.close"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.close"], ["", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.write": [[65, 69], ["utils.Logger.console.write", "utils.Logger.file.write"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.write", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.write"], ["", "def", "write", "(", "self", ",", "msg", ")", ":", "\n", "        ", "self", ".", "console", ".", "write", "(", "msg", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.flush": [[70, 75], ["utils.Logger.console.flush", "utils.Logger.file.flush", "os.fsync", "os.fsync", "os.fsync", "os.fsync", "utils.Logger.file.fileno"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.flush", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.flush"], ["", "", "def", "flush", "(", "self", ")", ":", "\n", "        ", "self", ".", "console", ".", "flush", "(", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "flush", "(", ")", "\n", "os", ".", "fsync", "(", "self", ".", "file", ".", "fileno", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.close": [[76, 80], ["utils.Logger.console.close", "utils.Logger.file.close"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.close", "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.Logger.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "console", ".", "close", "(", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "close", "(", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.mkdir_if_missing": [[9, 16], ["os.exists", "os.makedirs", "os.makedirs"], "function", ["None"], ["def", "mkdir_if_missing", "(", "directory", ")", ":", "\n", "    ", "if", "not", "osp", ".", "exists", "(", "directory", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "directory", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "!=", "errno", ".", "EEXIST", ":", "\n", "                ", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.save_checkpoint": [[37, 42], ["utils.mkdir_if_missing", "torch.save", "os.dirname", "shutil.copy", "os.join", "os.dirname"], "function", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.utils.mkdir_if_missing"], ["", "", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "fpath", "=", "'checkpoint.pth.tar'", ")", ":", "\n", "    ", "mkdir_if_missing", "(", "osp", ".", "dirname", "(", "fpath", ")", ")", "\n", "torch", ".", "save", "(", "state", ",", "fpath", ")", "\n", "if", "is_best", ":", "\n", "        ", "shutil", ".", "copy", "(", "fpath", ",", "osp", ".", "join", "(", "osp", ".", "dirname", "(", "fpath", ")", ",", "'best_model.pth.tar'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.Model.__init__": [[31, 35], ["robustml.dataset.CIFAR10", "robustml.threat_model.Linf"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "\n", "    ", "self", ".", "_dataset", "=", "robustml", ".", "dataset", ".", "CIFAR10", "(", ")", "\n", "self", ".", "_threat_model", "=", "robustml", ".", "threat_model", ".", "Linf", "(", "epsilon", "=", "8", "/", "255", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.Model.dataset": [[36, 39], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "dataset", "(", "self", ")", ":", "\n", "      ", "return", "self", ".", "_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.Model.threat_model": [[40, 43], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "threat_model", "(", "self", ")", ":", "\n", "      ", "return", "self", ".", "_threat_model", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.Model.classify": [[44, 49], ["torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "torch.Tensor().cuda", "model.eval", "[].argmax", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "model", "robust_ml.normalize", "torch.Tensor().cuda.clone().detach", "torch.Tensor().cuda.clone().detach", "torch.Tensor().cuda.clone", "torch.Tensor().cuda.clone"], "methods", ["home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.normalize"], ["", "def", "classify", "(", "self", ",", "x", ")", ":", "\n", "      ", "X", "=", "torch", ".", "Tensor", "(", "[", "x", "]", ")", ".", "cuda", "(", ")", "\n", "model", ".", "eval", "(", ")", "\n", "out", "=", "model", "(", "normalize", "(", "X", ".", "clone", "(", ")", ".", "detach", "(", ")", ")", ")", "[", "-", "1", "]", ".", "argmax", "(", "dim", "=", "-", "1", ")", "# Our Model outputs intermediate feats as well", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.aamir-mustafa_pcl-adversarial-defense.None.robust_ml.normalize": [[23, 28], ["None"], "function", ["None"], ["def", "normalize", "(", "t", ")", ":", "\n", "    ", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "0", ",", ":", ",", ":", "]", "-", "mean", "[", "0", "]", ")", "/", "std", "[", "0", "]", "\n", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "1", ",", ":", ",", ":", "]", "-", "mean", "[", "1", "]", ")", "/", "std", "[", "1", "]", "\n", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "=", "(", "t", "[", ":", ",", "2", ",", ":", ",", ":", "]", "-", "mean", "[", "2", "]", ")", "/", "std", "[", "2", "]", "\n", "return", "t", "\n", "\n"]]}