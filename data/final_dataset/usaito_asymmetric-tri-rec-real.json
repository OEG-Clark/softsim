{"home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.Objective.__init__": [[240, 244], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ":", "str", ",", "model_name", ":", "str", "=", "'mf'", ")", "->", "None", ":", "\n", "        ", "\"\"\"Initialize Class\"\"\"", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "model_name", "=", "model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.Objective.__call__": [[245, 282], ["utils.preprocessor.preprocess_datasets", "yaml.safe_load", "trial.suggest_discrete_uniform", "trial.suggest_loguniform", "tensorflow.python.framework.ops.reset_default_graph", "tensorflow.set_random_seed", "tensorflow.Session", "open", "trial.suggest_loguniform", "models.models.MFIPS", "trainer.train_mfips", "models.models.MFIPS", "models.models.MFIPS", "models.models.MFIPS", "trainer.train_mfips_with_at"], "methods", ["home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.utils.preprocessor.preprocess_datasets", "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.train_mfips", "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.train_mfips_with_at"], ["", "def", "__call__", "(", "self", ",", "trial", ":", "Trial", ")", "->", "float", ":", "\n", "        ", "\"\"\"Calculate an objective value.\"\"\"", "\n", "train", ",", "val", ",", "test", ",", "num_users", ",", "num_items", "=", "preprocess_datasets", "(", "data", "=", "self", ".", "data", ",", "seed", "=", "12345", ")", "\n", "\n", "# sample a set of hyperparameters.", "\n", "config", "=", "yaml", ".", "safe_load", "(", "open", "(", "'../config.yaml'", ",", "'r'", ")", ")", "\n", "eta", "=", "config", "[", "'eta'", "]", "\n", "max_iters", "=", "config", "[", "'max_iters'", "]", "\n", "batch_size", "=", "config", "[", "'batch_size'", "]", "\n", "pre_iters", "=", "config", "[", "'pre_iters'", "]", "\n", "post_iters", "=", "config", "[", "'post_iters'", "]", "\n", "post_steps", "=", "config", "[", "'post_steps'", "]", "\n", "dim", "=", "trial", ".", "suggest_discrete_uniform", "(", "'dim'", ",", "5", ",", "50", ",", "5", ")", "\n", "lam", "=", "trial", ".", "suggest_loguniform", "(", "'lam'", ",", "1e-6", ",", "1", ")", "\n", "if", "'-at'", "in", "self", ".", "model_name", ":", "\n", "            ", "epsilon", "=", "trial", ".", "suggest_loguniform", "(", "'epsilon'", ",", "1e-3", ",", "1", ")", "\n", "\n", "", "ops", ".", "reset_default_graph", "(", ")", "\n", "tf", ".", "set_random_seed", "(", "12345", ")", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "if", "'-at'", "not", "in", "self", ".", "model_name", ":", "\n", "            ", "model", "=", "MFIPS", "(", "num_users", "=", "num_users", ",", "num_items", "=", "num_items", ",", "dim", "=", "dim", ",", "lam", "=", "lam", ",", "eta", "=", "eta", ")", "\n", "score", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", "=", "train_mfips", "(", "\n", "sess", ",", "model", "=", "model", ",", "data", "=", "self", ".", "data", ",", "train", "=", "train", ",", "val", "=", "val", ",", "test", "=", "test", ",", "\n", "max_iters", "=", "max_iters", ",", "batch_size", "=", "batch_size", ",", "model_name", "=", "self", ".", "model_name", ")", "\n", "", "else", ":", "\n", "            ", "model", "=", "MFIPS", "(", "num_users", "=", "num_users", ",", "num_items", "=", "num_items", ",", "dim", "=", "dim", ",", "lam", "=", "lam", ",", "eta", "=", "eta", ",", "num", "=", "0", ")", "\n", "model1", "=", "MFIPS", "(", "num_users", "=", "num_users", ",", "num_items", "=", "num_items", ",", "dim", "=", "dim", ",", "lam", "=", "lam", ",", "eta", "=", "eta", ",", "num", "=", "1", ")", "\n", "model2", "=", "MFIPS", "(", "num_users", "=", "num_users", ",", "num_items", "=", "num_items", ",", "dim", "=", "dim", ",", "lam", "=", "lam", ",", "eta", "=", "eta", ",", "num", "=", "2", ")", "\n", "score", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", "=", "train_mfips_with_at", "(", "\n", "sess", ",", "model", "=", "model", ",", "mfips1", "=", "model1", ",", "mfips2", "=", "model2", ",", "data", "=", "self", ".", "data", ",", "\n", "train", "=", "train", ",", "val", "=", "val", ",", "test", "=", "test", ",", "epsilon", "=", "epsilon", ",", "\n", "pre_iters", "=", "pre_iters", ",", "post_iters", "=", "post_iters", ",", "post_steps", "=", "post_steps", ",", "\n", "batch_size", "=", "batch_size", ",", "model_name", "=", "self", ".", "model_name", ")", "\n", "\n", "", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.Tuner.__init__": [[287, 291], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "data", ":", "str", ",", "model_name", ":", "str", ")", "->", "None", ":", "\n", "        ", "\"\"\"Initialize Class.\"\"\"", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "model_name", "=", "model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.Tuner.tune": [[292, 313], ["pathlib.Path", "pathlib.Path.mkdir", "pathlib.Path", "pathlib.Path.mkdir", "trainer.Objective", "optuna.create_study", "optuna.create_study.optimize", "optuna.create_study.trials_dataframe().to_csv", "pathlib.Path().exists", "time.sleep", "yaml.safe_load", "yaml.dump", "str", "yaml.dump", "numpy.random.rand", "open", "open", "optuna.samplers.TPESampler", "optuna.create_study.trials_dataframe", "pathlib.Path", "dict", "open", "dict", "dict"], "methods", ["None"], ["", "def", "tune", "(", "self", ",", "n_trials", ":", "int", "=", "30", ")", "->", "None", ":", "\n", "        ", "\"\"\"Hyperparameter Tuning by TPE.\"\"\"", "\n", "path", "=", "Path", "(", "f'../logs/{self.data}'", ")", "\n", "path", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "path_model", "=", "Path", "(", "f'../logs/{self.data}/{self.model_name}'", ")", "\n", "path_model", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "# tune hyperparameters by Optuna", "\n", "objective", "=", "Objective", "(", "data", "=", "self", ".", "data", ",", "model_name", "=", "self", ".", "model_name", ")", "\n", "study", "=", "optuna", ".", "create_study", "(", "sampler", "=", "TPESampler", "(", "seed", "=", "123", ")", ")", "\n", "study", ".", "optimize", "(", "objective", ",", "n_trials", "=", "n_trials", ")", "\n", "# save tuning results", "\n", "study", ".", "trials_dataframe", "(", ")", ".", "to_csv", "(", "str", "(", "path_model", "/", "f'tuning_results.csv'", ")", ")", "\n", "if", "Path", "(", "'../hyper_params.yaml'", ")", ".", "exists", "(", ")", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "yaml", ".", "dump", "(", "dict", "(", "yahoo", "=", "dict", "(", ")", ",", "coat", "=", "dict", "(", ")", ")", ",", "\n", "open", "(", "'../hyper_params.yaml'", ",", "'w'", ")", ",", "default_flow_style", "=", "False", ")", "\n", "", "time", ".", "sleep", "(", "np", ".", "random", ".", "rand", "(", ")", ")", "\n", "hyper_params_dict", "=", "yaml", ".", "safe_load", "(", "open", "(", "'../hyper_params.yaml'", ",", "'r'", ")", ")", "\n", "hyper_params_dict", "[", "self", ".", "data", "]", "[", "self", ".", "model_name", "]", "=", "study", ".", "best_params", "\n", "yaml", ".", "dump", "(", "hyper_params_dict", ",", "open", "(", "'../hyper_params.yaml'", ",", "'w'", ")", ",", "default_flow_style", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.Trainer.__init__": [[317, 334], ["yaml.safe_load", "open"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ":", "str", ",", "batch_size", ":", "int", "=", "10", ",", "eta", ":", "float", "=", "0.01", ",", "\n", "max_iters", ":", "int", "=", "500", ",", "pre_iters", ":", "int", "=", "150", ",", "post_iters", ":", "int", "=", "10", ",", "\n", "post_steps", ":", "int", "=", "10", ",", "model_name", ":", "str", "=", "'mf'", ")", "->", "None", ":", "\n", "        ", "\"\"\"Initialize class.\"\"\"", "\n", "self", ".", "data", "=", "data", "\n", "hyper_params", "=", "yaml", ".", "safe_load", "(", "open", "(", "f'../hyper_params.yaml'", ",", "'r'", ")", ")", "[", "data", "]", "[", "model_name", "]", "\n", "self", ".", "dim", "=", "hyper_params", "[", "'dim'", "]", "\n", "self", ".", "lam", "=", "hyper_params", "[", "'lam'", "]", "\n", "if", "'-at'", "in", "model_name", ":", "\n", "            ", "self", ".", "epsilon", "=", "hyper_params", "[", "'epsilon'", "]", "\n", "", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "max_iters", "=", "max_iters", "\n", "self", ".", "pre_iters", "=", "pre_iters", "\n", "self", ".", "post_iters", "=", "post_iters", "\n", "self", ".", "post_steps", "=", "post_steps", "\n", "self", ".", "eta", "=", "eta", "\n", "self", ".", "model_name", "=", "model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.Trainer.run_simulations": [[335, 381], ["time.time", "numpy.arange", "pathlib.Path", "pathlib.Path.mkdir", "pandas.concat().to_csv", "utils.preprocessor.preprocess_datasets", "tensorflow.python.framework.ops.reset_default_graph", "tensorflow.set_random_seed", "tensorflow.Session", "results_mae.append", "results_mse.append", "evaluate.evaluator.aoa_evaluator", "results_ndcg.append", "print", "str", "models.models.MFIPS", "trainer.train_mfips", "models.models.MFIPS", "models.models.MFIPS", "models.models.MFIPS", "trainer.train_mfips_with_at", "pandas.concat", "numpy.round", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "time.time"], "methods", ["home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.utils.preprocessor.preprocess_datasets", "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.evaluate.evaluator.aoa_evaluator", "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.train_mfips", "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.train_mfips_with_at"], ["", "def", "run_simulations", "(", "self", ",", "num_sims", ":", "int", "=", "5", ")", "->", "None", ":", "\n", "        ", "\"\"\"Train mf.\"\"\"", "\n", "results_mse", "=", "[", "]", "\n", "results_mae", "=", "[", "]", "\n", "results_ndcg", "=", "[", "]", "\n", "\n", "# start running simulations", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "for", "seed", "in", "np", ".", "arange", "(", "num_sims", ")", ":", "\n", "            ", "train", ",", "val", ",", "test", ",", "num_users", ",", "num_items", "=", "preprocess_datasets", "(", "data", "=", "self", ".", "data", ",", "seed", "=", "seed", ")", "\n", "\n", "ops", ".", "reset_default_graph", "(", ")", "\n", "tf", ".", "set_random_seed", "(", "seed", ")", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "if", "'-at'", "not", "in", "self", ".", "model_name", ":", "\n", "                ", "model", "=", "MFIPS", "(", "num_users", "=", "num_users", ",", "num_items", "=", "num_items", ",", "\n", "dim", "=", "self", ".", "dim", ",", "lam", "=", "self", ".", "lam", ",", "eta", "=", "self", ".", "eta", ")", "\n", "_", ",", "mse", ",", "mae", ",", "u_emb", ",", "i_emb", ",", "i_bias", "=", "train_mfips", "(", "\n", "sess", ",", "model", "=", "model", ",", "data", "=", "self", ".", "data", ",", "train", "=", "train", ",", "val", "=", "val", ",", "test", "=", "test", ",", "\n", "max_iters", "=", "self", ".", "max_iters", ",", "batch_size", "=", "self", ".", "batch_size", ",", "\n", "model_name", "=", "self", ".", "model_name", ",", "seed", "=", "seed", ")", "\n", "", "else", ":", "\n", "                ", "model", "=", "MFIPS", "(", "num_users", "=", "num_users", ",", "num_items", "=", "num_items", ",", "\n", "dim", "=", "self", ".", "dim", ",", "lam", "=", "self", ".", "lam", ",", "eta", "=", "self", ".", "eta", ",", "num", "=", "0", ")", "\n", "model1", "=", "MFIPS", "(", "num_users", "=", "num_users", ",", "num_items", "=", "num_items", ",", "\n", "dim", "=", "self", ".", "dim", ",", "lam", "=", "self", ".", "lam", ",", "eta", "=", "self", ".", "eta", ",", "num", "=", "1", ")", "\n", "model2", "=", "MFIPS", "(", "num_users", "=", "num_users", ",", "num_items", "=", "num_items", ",", "\n", "dim", "=", "self", ".", "dim", ",", "lam", "=", "self", ".", "lam", ",", "eta", "=", "self", ".", "eta", ",", "num", "=", "2", ")", "\n", "_", ",", "mse", ",", "mae", ",", "u_emb", ",", "i_emb", ",", "i_bias", "=", "train_mfips_with_at", "(", "\n", "sess", ",", "model", "=", "model", ",", "mfips1", "=", "model1", ",", "mfips2", "=", "model2", ",", "data", "=", "self", ".", "data", ",", "\n", "train", "=", "train", ",", "val", "=", "val", ",", "test", "=", "test", ",", "epsilon", "=", "self", ".", "epsilon", ",", "\n", "pre_iters", "=", "self", ".", "pre_iters", ",", "post_iters", "=", "self", ".", "post_iters", ",", "post_steps", "=", "self", ".", "post_steps", ",", "\n", "batch_size", "=", "self", ".", "batch_size", ",", "model_name", "=", "self", ".", "model_name", ",", "seed", "=", "seed", ")", "\n", "", "results_mae", ".", "append", "(", "mae", ")", "\n", "results_mse", ".", "append", "(", "mse", ")", "\n", "ndcg", "=", "aoa_evaluator", "(", "user_embed", "=", "u_emb", ",", "item_embed", "=", "i_emb", ",", "item_bias", "=", "i_bias", ",", "test", "=", "test", ")", "\n", "results_ndcg", ".", "append", "(", "ndcg", ")", "\n", "print", "(", "f'#{seed+1} {self.model_name}: {np.round((time.time() - start) / 60, 2)} min'", ")", "\n", "# aggregate and save the final results", "\n", "", "result_path", "=", "Path", "(", "f'../logs/{self.data}/{self.model_name}'", ")", "\n", "result_path", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "pd", ".", "concat", "(", "[", "pd", ".", "DataFrame", "(", "results_mae", ",", "columns", "=", "[", "'MAE'", "]", ")", ",", "\n", "pd", ".", "DataFrame", "(", "results_mse", ",", "columns", "=", "[", "'MSE'", "]", ")", ",", "\n", "pd", ".", "DataFrame", "(", "results_ndcg", ",", "columns", "=", "[", "'nDCG@3'", "]", ")", "]", ",", "1", ")", ".", "to_csv", "(", "str", "(", "result_path", "/", "'results.csv'", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.estimate_pscore": [[25, 68], ["numpy.expand_dims", "numpy.expand_dims", "numpy.unique", "pscore.max", "numpy.unique", "pscore.max", "numpy.unique", "user_pscore.max", "numpy.unique", "item_pscore.max", "pscore.max", "numpy.ones", "numpy.ones", "numpy.unique", "numpy.unique", "numpy.unique", "pscore.max"], "function", ["None"], ["def", "estimate_pscore", "(", "train", ":", "np", ".", "ndarray", ",", "train_mcar", ":", "np", ".", "ndarray", ",", "\n", "val", ":", "np", ".", "ndarray", ",", "model_name", ":", "str", ")", "->", "Tuple", ":", "\n", "    ", "\"\"\"Estimate pscore.\"\"\"", "\n", "if", "'item'", "in", "model_name", ":", "\n", "        ", "pscore", "=", "np", ".", "unique", "(", "train", "[", ":", ",", "1", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", "\n", "pscore", "=", "pscore", "/", "pscore", ".", "max", "(", ")", "\n", "pscore_train", "=", "pscore", "[", "train", "[", ":", ",", "1", "]", "]", "\n", "pscore_val", "=", "pscore", "[", "val", "[", ":", ",", "1", "]", "]", "\n", "\n", "", "elif", "'user'", "in", "model_name", ":", "\n", "        ", "pscore", "=", "np", ".", "unique", "(", "train", "[", ":", ",", "0", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", "\n", "pscore", "=", "pscore", "/", "pscore", ".", "max", "(", ")", "\n", "pscore_train", "=", "pscore", "[", "train", "[", ":", ",", "0", "]", "]", "\n", "pscore_val", "=", "pscore", "[", "val", "[", ":", ",", "0", "]", "]", "\n", "\n", "", "elif", "'both'", "in", "model_name", ":", "\n", "        ", "user_pscore", "=", "np", ".", "unique", "(", "train", "[", ":", ",", "0", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", "\n", "user_pscore", "=", "user_pscore", "/", "user_pscore", ".", "max", "(", ")", "\n", "item_pscore", "=", "np", ".", "unique", "(", "train", "[", ":", ",", "1", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", "\n", "item_pscore", "=", "item_pscore", "/", "item_pscore", ".", "max", "(", ")", "\n", "pscore_train", "=", "user_pscore", "[", "train", "[", ":", ",", "0", "]", "]", "*", "item_pscore", "[", "train", "[", ":", ",", "1", "]", "]", "\n", "pscore_val", "=", "user_pscore", "[", "val", "[", ":", ",", "0", "]", "]", "*", "item_pscore", "[", "val", "[", ":", ",", "1", "]", "]", "\n", "\n", "", "elif", "'true'", "in", "model_name", ":", "\n", "        ", "pscore", "=", "np", ".", "unique", "(", "train", "[", ":", ",", "2", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", "/", "np", ".", "unique", "(", "train_mcar", "[", ":", ",", "2", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", "\n", "pscore", "=", "pscore", "/", "pscore", ".", "max", "(", ")", "\n", "pscore_train", "=", "pscore", "[", "train", "[", ":", ",", "2", "]", "-", "1", "]", "\n", "pscore_val", "=", "pscore", "[", "val", "[", ":", ",", "2", "]", "-", "1", "]", "\n", "\n", "", "elif", "'nb'", "in", "model_name", ":", "\n", "        ", "pscore", "=", "np", ".", "unique", "(", "train", "[", ":", ",", "2", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", "\n", "pscore", "=", "pscore", "/", "pscore", ".", "max", "(", ")", "\n", "pscore_train", "=", "pscore", "[", "train", "[", ":", ",", "2", "]", "-", "1", "]", "\n", "pscore_val", "=", "pscore", "[", "val", "[", ":", ",", "2", "]", "-", "1", "]", "\n", "\n", "", "else", ":", "# uniform propensity", "\n", "        ", "pscore_train", "=", "np", ".", "ones", "(", "train", ".", "shape", "[", "0", "]", ")", "\n", "pscore_val", "=", "np", ".", "ones", "(", "val", ".", "shape", "[", "0", "]", ")", "\n", "\n", "", "pscore_train", "=", "np", ".", "expand_dims", "(", "pscore_train", ",", "1", ")", "\n", "pscore_val", "=", "np", ".", "expand_dims", "(", "pscore_val", ",", "1", ")", "\n", "return", "pscore_train", ",", "pscore_val", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.train_mfips": [[70, 125], ["tensorflow.global_variables_initializer", "sess.run", "sklearn.model_selection.train_test_split", "trainer.estimate_pscore", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.random.seed", "numpy.arange", "sess.run", "sess.close", "numpy.random.choice", "sess.run", "train_loss_list.append", "sess.run", "val_loss_list.append", "sess.run", "test_mse_list.append", "test_mae_list.append", "numpy.min", "numpy.arange", "numpy.argmin", "numpy.argmin"], "function", ["home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.estimate_pscore"], ["", "def", "train_mfips", "(", "sess", ":", "tf", ".", "Session", ",", "model", ":", "MFIPS", ",", "data", ":", "str", ",", "\n", "train", ":", "np", ".", "ndarray", ",", "val", ":", "np", ".", "ndarray", ",", "test", ":", "np", ".", "ndarray", ",", "\n", "max_iters", ":", "int", "=", "500", ",", "batch_size", ":", "int", "=", "2", "**", "9", ",", "\n", "model_name", ":", "str", "=", "'mf'", ",", "seed", ":", "int", "=", "0", ")", "->", "Tuple", ":", "\n", "    ", "\"\"\"Train and evaluate the MF-IPS model.\"\"\"", "\n", "train_loss_list", "=", "[", "]", "\n", "val_loss_list", "=", "[", "]", "\n", "test_mse_list", "=", "[", "]", "\n", "test_mae_list", "=", "[", "]", "\n", "\n", "# initialise all the TF variables", "\n", "init_op", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", ".", "run", "(", "init_op", ")", "\n", "\n", "# count the num of training data and estimate the propensity scores.", "\n", "num_train", "=", "train", ".", "shape", "[", "0", "]", "\n", "train_mcar", ",", "test", "=", "train_test_split", "(", "test", ",", "test_size", "=", "0.95", ",", "random_state", "=", "12345", ")", "\n", "pscore_train", ",", "pscore_val", "=", "estimate_pscore", "(", "train", "=", "train", ",", "train_mcar", "=", "train_mcar", ",", "\n", "val", "=", "val", ",", "model_name", "=", "model_name", ")", "\n", "labels_train", "=", "np", ".", "expand_dims", "(", "train", "[", ":", ",", "2", "]", ",", "1", ")", "\n", "labels_val", "=", "np", ".", "expand_dims", "(", "val", "[", ":", ",", "2", "]", ",", "1", ")", "\n", "labels_test", "=", "np", ".", "expand_dims", "(", "test", "[", ":", ",", "2", "]", ",", "1", ")", "\n", "\n", "# start running training a recommender", "\n", "np", ".", "random", ".", "seed", "(", "12345", ")", "\n", "for", "iter_", "in", "np", ".", "arange", "(", "max_iters", ")", ":", "\n", "# mini-batch sampling", "\n", "        ", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "num_train", ")", ",", "size", "=", "batch_size", ")", "\n", "train_batch", ",", "pscore_batch", ",", "labels_batch", "=", "train", "[", "idx", "]", ",", "pscore_train", "[", "idx", "]", ",", "labels_train", "[", "idx", "]", "\n", "# update user-item latent factors", "\n", "_", ",", "loss", "=", "sess", ".", "run", "(", "[", "model", ".", "apply_grads", ",", "model", ".", "loss", "]", ",", "\n", "feed_dict", "=", "{", "model", ".", "users", ":", "train_batch", "[", ":", ",", "0", "]", ",", "model", ".", "items", ":", "train_batch", "[", ":", ",", "1", "]", ",", "\n", "model", ".", "labels", ":", "labels_batch", ",", "model", ".", "scores", ":", "pscore_batch", "}", ")", "\n", "train_loss_list", ".", "append", "(", "loss", ")", "\n", "# calculate validation loss", "\n", "val_loss", "=", "sess", ".", "run", "(", "model", ".", "weighted_mse", ",", "\n", "feed_dict", "=", "{", "model", ".", "users", ":", "val", "[", ":", ",", "0", "]", ",", "model", ".", "items", ":", "val", "[", ":", ",", "1", "]", ",", "\n", "model", ".", "labels", ":", "labels_val", ",", "model", ".", "scores", ":", "pscore_val", "}", ")", "\n", "val_loss_list", ".", "append", "(", "val_loss", ")", "\n", "# calculate test loss", "\n", "mse_score", ",", "mae_score", "=", "sess", ".", "run", "(", "[", "model", ".", "mse", ",", "model", ".", "mae", "]", ",", "\n", "feed_dict", "=", "{", "model", ".", "users", ":", "test", "[", ":", ",", "0", "]", ",", "\n", "model", ".", "items", ":", "test", "[", ":", ",", "1", "]", ",", "\n", "model", ".", "labels", ":", "labels_test", "}", ")", "\n", "test_mse_list", ".", "append", "(", "mse_score", ")", "\n", "test_mae_list", ".", "append", "(", "mae_score", ")", "\n", "\n", "", "u_emb", ",", "i_emb", ",", "i_bias", "=", "sess", ".", "run", "(", "[", "model", ".", "user_embeddings", ",", "model", ".", "item_embeddings", ",", "model", ".", "item_bias", "]", ")", "\n", "\n", "sess", ".", "close", "(", ")", "\n", "\n", "return", "(", "np", ".", "min", "(", "val_loss_list", ")", ",", "\n", "test_mse_list", "[", "np", ".", "argmin", "(", "val_loss_list", ")", "]", ",", "\n", "test_mae_list", "[", "np", ".", "argmin", "(", "val_loss_list", ")", "]", ",", "\n", "u_emb", ",", "i_emb", ",", "i_bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.train_mfips_with_at": [[127, 236], ["tensorflow.global_variables_initializer", "sess.run", "sklearn.model_selection.train_test_split", "trainer.estimate_pscore", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.ones", "numpy.random.seed", "numpy.arange", "pandas.DataFrame", "numpy.arange", "sess.run", "sess.close", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice", "sess.run", "sess.run", "sess.run", "numpy.zeros", "numpy.arange", "numpy.min", "numpy.arange", "numpy.arange", "numpy.arange", "pd.DataFrame.stack().reset_index", "numpy.random.choice", "sess.run", "numpy.array().flatten", "numpy.random.choice", "numpy.random.choice", "numpy.random.choice", "sess.run", "sess.run", "sess.run", "train_loss_list.append", "val_loss_list.append", "test_mse_list.append", "test_mae_list.append", "sess.run", "sess.run", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.arange", "numpy.argmin", "numpy.argmin", "train[].max", "train[].max", "pd.DataFrame.stack", "numpy.array", "numpy.expand_dims", "numpy.ones", "numpy.expand_dims", "numpy.ones", "numpy.expand_dims", "numpy.ones", "numpy.abs", "numpy.int"], "function", ["home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.src.trainer.estimate_pscore"], ["", "def", "train_mfips_with_at", "(", "sess", ":", "tf", ".", "Session", ",", "model", ":", "MFIPS", ",", "mfips1", ":", "MFIPS", ",", "mfips2", ":", "MFIPS", ",", "data", ":", "str", ",", "\n", "train", ":", "np", ".", "ndarray", ",", "val", ":", "np", ".", "ndarray", ",", "test", ":", "np", ".", "ndarray", ",", "\n", "epsilon", ":", "float", ",", "pre_iters", ":", "int", "=", "500", ",", "post_iters", ":", "int", "=", "50", ",", "post_steps", ":", "int", "=", "5", ",", "\n", "batch_size", ":", "int", "=", "2", "**", "9", ",", "model_name", ":", "str", "=", "'naive-at'", ",", "seed", ":", "int", "=", "0", ")", "->", "Tuple", ":", "\n", "    ", "\"\"\"Train and evaluate the MF-IPS model with asymmetric tri-training.\"\"\"", "\n", "train_loss_list", "=", "[", "]", "\n", "val_loss_list", "=", "[", "]", "\n", "test_mse_list", "=", "[", "]", "\n", "test_mae_list", "=", "[", "]", "\n", "\n", "# initialise all the TF variables", "\n", "init_op", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", ".", "run", "(", "init_op", ")", "\n", "\n", "# count the num of training data and estimate the propensity scores.", "\n", "num_train", "=", "train", ".", "shape", "[", "0", "]", "\n", "train_mcar", ",", "test", "=", "train_test_split", "(", "test", ",", "test_size", "=", "0.95", ",", "random_state", "=", "12345", ")", "\n", "pscore_train", ",", "pscore_val", "=", "estimate_pscore", "(", "train", "=", "train", ",", "train_mcar", "=", "train_mcar", ",", "\n", "val", "=", "val", ",", "model_name", "=", "model_name", ")", "\n", "labels_train", "=", "np", ".", "expand_dims", "(", "train", "[", ":", ",", "2", "]", ",", "1", ")", "\n", "labels_val", "=", "np", ".", "expand_dims", "(", "val", "[", ":", ",", "2", "]", ",", "1", ")", "\n", "labels_test", "=", "np", ".", "expand_dims", "(", "test", "[", ":", ",", "2", "]", ",", "1", ")", "\n", "pscore_model", "=", "np", ".", "ones", "(", "(", "batch_size", ",", "1", ")", ")", "\n", "\n", "# start training a recommender", "\n", "np", ".", "random", ".", "seed", "(", "12345", ")", "\n", "# start pre-training step", "\n", "for", "i", "in", "np", ".", "arange", "(", "pre_iters", ")", ":", "\n", "# mini-batch sampling", "\n", "        ", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "num_train", ")", ",", "size", "=", "batch_size", ")", "\n", "idx1", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "num_train", ")", ",", "size", "=", "batch_size", ")", "\n", "idx2", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "num_train", ")", ",", "size", "=", "batch_size", ")", "\n", "train_batch", ",", "train_batch1", ",", "train_batch2", "=", "train", "[", "idx", "]", ",", "train", "[", "idx1", "]", ",", "train", "[", "idx2", "]", "\n", "labels_batch", ",", "labels_batch1", ",", "labels_batch2", "=", "labels_train", "[", "idx", "]", ",", "labels_train", "[", "idx1", "]", ",", "labels_train", "[", "idx2", "]", "\n", "pscore_batch1", ",", "pscore_batch2", "=", "pscore_train", "[", "idx1", "]", ",", "pscore_train", "[", "idx2", "]", "\n", "# update user-item latent factors", "\n", "_", ",", "train_loss", "=", "sess", ".", "run", "(", "[", "model", ".", "apply_grads", ",", "model", ".", "loss", "]", ",", "\n", "feed_dict", "=", "{", "model", ".", "users", ":", "train_batch", "[", ":", ",", "0", "]", ",", "model", ".", "items", ":", "train_batch", "[", ":", ",", "1", "]", ",", "\n", "model", ".", "labels", ":", "labels_batch", ",", "model", ".", "scores", ":", "pscore_model", "}", ")", "\n", "_", "=", "sess", ".", "run", "(", "mfips1", ".", "apply_grads", ",", "\n", "feed_dict", "=", "{", "mfips1", ".", "users", ":", "train_batch1", "[", ":", ",", "0", "]", ",", "mfips1", ".", "items", ":", "train_batch1", "[", ":", ",", "1", "]", ",", "\n", "mfips1", ".", "labels", ":", "labels_batch1", ",", "mfips1", ".", "scores", ":", "pscore_batch1", "}", ")", "\n", "_", "=", "sess", ".", "run", "(", "mfips2", ".", "apply_grads", ",", "\n", "feed_dict", "=", "{", "mfips2", ".", "users", ":", "train_batch2", "[", ":", ",", "0", "]", ",", "mfips2", ".", "items", ":", "train_batch2", "[", ":", ",", "1", "]", ",", "\n", "mfips2", ".", "labels", ":", "labels_batch2", ",", "mfips2", ".", "scores", ":", "pscore_batch2", "}", ")", "\n", "# start psuedo-labeling and final prediction steps", "\n", "", "all_data", "=", "pd", ".", "DataFrame", "(", "np", ".", "zeros", "(", "(", "train", "[", ":", ",", "0", "]", ".", "max", "(", ")", "+", "1", ",", "train", "[", ":", ",", "1", "]", ".", "max", "(", ")", "+", "1", ")", ")", ")", "\n", "all_data", "=", "all_data", ".", "stack", "(", ")", ".", "reset_index", "(", ")", ".", "values", "[", ":", ",", ":", "2", "]", "\n", "for", "k", "in", "np", ".", "arange", "(", "post_iters", ")", ":", "\n", "        ", "for", "j", "in", "np", ".", "arange", "(", "post_steps", ")", ":", "\n", "            ", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "all_data", ".", "shape", "[", "0", "]", ")", ",", "size", "=", "num_train", "*", "5", ")", "\n", "batch_data", "=", "all_data", "[", "idx", "]", "\n", "# create psuedo-labeled dataset (i.e., \\tilde{\\mathcal{D}})", "\n", "preds1", ",", "preds2", "=", "sess", ".", "run", "(", "[", "mfips1", ".", "preds", ",", "mfips2", ".", "preds", "]", ",", "\n", "feed_dict", "=", "{", "mfips1", ".", "users", ":", "batch_data", "[", ":", ",", "0", "]", ",", "\n", "mfips1", ".", "items", ":", "batch_data", "[", ":", ",", "1", "]", ",", "\n", "mfips2", ".", "users", ":", "batch_data", "[", ":", ",", "0", "]", ",", "\n", "mfips2", ".", "items", ":", "batch_data", "[", ":", ",", "1", "]", "}", ")", "\n", "idx", "=", "np", ".", "array", "(", "np", ".", "abs", "(", "preds1", "-", "preds2", ")", "<=", "epsilon", ")", ".", "flatten", "(", ")", "\n", "target_users", ",", "target_items", ",", "pseudo_labels", "=", "batch_data", "[", "idx", ",", "0", "]", ",", "batch_data", "[", "idx", ",", "1", "]", ",", "preds1", "[", "idx", "]", "\n", "target_data", "=", "np", ".", "c_", "[", "target_users", ",", "target_items", ",", "pseudo_labels", "]", "\n", "# store information during the pseudo-labeleing step", "\n", "num_target", "=", "target_data", ".", "shape", "[", "0", "]", "\n", "# mini-batch sampling for the pseudo-labeleing step", "\n", "idx", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "num_target", ")", ",", "size", "=", "batch_size", ")", "\n", "idx1", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "num_target", ")", ",", "size", "=", "batch_size", ")", "\n", "idx2", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "num_target", ")", ",", "size", "=", "batch_size", ")", "\n", "train_batch", ",", "train_batch1", ",", "train_batch2", "=", "target_data", "[", "idx", "]", ",", "target_data", "[", "idx1", "]", ",", "target_data", "[", "idx2", "]", "\n", "# update user-item latent factors of the final prediction model", "\n", "_", ",", "train_loss", "=", "sess", ".", "run", "(", "[", "model", ".", "apply_grads", ",", "model", ".", "mse", "]", ",", "\n", "feed_dict", "=", "{", "model", ".", "users", ":", "train_batch", "[", ":", ",", "0", "]", ",", "\n", "model", ".", "items", ":", "train_batch", "[", ":", ",", "1", "]", ",", "\n", "model", ".", "labels", ":", "np", ".", "expand_dims", "(", "train_batch", "[", ":", ",", "2", "]", ",", "1", ")", ",", "\n", "model", ".", "scores", ":", "np", ".", "ones", "(", "(", "np", ".", "int", "(", "batch_size", ")", ",", "1", ")", ")", "}", ")", "\n", "# calculate validation loss during the psuedo-labeleing step", "\n", "val_loss", "=", "sess", ".", "run", "(", "model", ".", "weighted_mse", ",", "\n", "feed_dict", "=", "{", "model", ".", "users", ":", "val", "[", ":", ",", "0", "]", ",", "\n", "model", ".", "items", ":", "val", "[", ":", ",", "1", "]", ",", "\n", "model", ".", "scores", ":", "pscore_val", ",", "\n", "model", ".", "labels", ":", "labels_val", "}", ")", "\n", "# calculate test losses during the psuedo-labeleing step", "\n", "mse_score", ",", "mae_score", "=", "sess", ".", "run", "(", "[", "model", ".", "mse", ",", "model", ".", "mae", "]", ",", "\n", "feed_dict", "=", "{", "model", ".", "users", ":", "test", "[", ":", ",", "0", "]", ",", "model", ".", "items", ":", "test", "[", ":", ",", "1", "]", ",", "\n", "model", ".", "labels", ":", "labels_test", "}", ")", "\n", "train_loss_list", ".", "append", "(", "train_loss", ")", "\n", "val_loss_list", ".", "append", "(", "val_loss", ")", "\n", "test_mse_list", ".", "append", "(", "mse_score", ")", "\n", "test_mae_list", ".", "append", "(", "mae_score", ")", "\n", "# re-update the model parameters of pre-trained models using pseudo-labeled data", "\n", "_", "=", "sess", ".", "run", "(", "mfips1", ".", "apply_grads", ",", "\n", "feed_dict", "=", "{", "mfips1", ".", "users", ":", "train_batch1", "[", ":", ",", "0", "]", ",", "\n", "mfips1", ".", "items", ":", "train_batch1", "[", ":", ",", "1", "]", ",", "\n", "mfips1", ".", "labels", ":", "np", ".", "expand_dims", "(", "train_batch1", "[", ":", ",", "2", "]", ",", "1", ")", ",", "\n", "mfips1", ".", "scores", ":", "np", ".", "ones", "(", "(", "batch_size", ",", "1", ")", ")", "}", ")", "\n", "_", "=", "sess", ".", "run", "(", "mfips2", ".", "apply_grads", ",", "\n", "feed_dict", "=", "{", "mfips2", ".", "users", ":", "train_batch2", "[", ":", ",", "0", "]", ",", "\n", "mfips2", ".", "items", ":", "train_batch2", "[", ":", ",", "1", "]", ",", "\n", "mfips2", ".", "labels", ":", "np", ".", "expand_dims", "(", "train_batch2", "[", ":", ",", "2", "]", ",", "1", ")", ",", "\n", "mfips2", ".", "scores", ":", "np", ".", "ones", "(", "(", "batch_size", ",", "1", ")", ")", "}", ")", "\n", "\n", "# obtain user-item embeddings", "\n", "", "", "u_emb", ",", "i_emb", ",", "i_bias", "=", "sess", ".", "run", "(", "[", "model", ".", "user_embeddings", ",", "model", ".", "item_embeddings", ",", "model", ".", "item_bias", "]", ")", "\n", "\n", "sess", ".", "close", "(", ")", "\n", "\n", "return", "(", "np", ".", "min", "(", "val_loss_list", ")", ",", "\n", "test_mse_list", "[", "np", ".", "argmin", "(", "val_loss_list", ")", "]", ",", "\n", "test_mae_list", "[", "np", ".", "argmin", "(", "val_loss_list", ")", "]", ",", "\n", "u_emb", ",", "i_emb", ",", "i_bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.utils.result_tools.calc_kl_div": [[19, 26], ["numpy.round", "[].sum", "[].sum", "numpy.sum", "numpy.unique", "numpy.unique", "numpy.where", "numpy.unique", "numpy.unique", "numpy.log"], "function", ["None"], ["def", "calc_kl_div", "(", "train", ":", "np", ".", "ndarray", ",", "test", ":", "np", ".", "ndarray", ")", "->", "float", ":", "\n", "    ", "\"\"\"Estimate KL divergence of rating distributions between training and test sets.\"\"\"", "\n", "p", "=", "np", ".", "unique", "(", "train", "[", ":", ",", "2", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", "/", "np", ".", "unique", "(", "train", "[", ":", ",", "2", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", ".", "sum", "(", ")", "\n", "q", "=", "np", ".", "unique", "(", "test", "[", ":", ",", "2", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", "/", "np", ".", "unique", "(", "test", "[", ":", ",", "2", "]", ",", "return_counts", "=", "True", ")", "[", "1", "]", ".", "sum", "(", ")", "\n", "return", "np", ".", "round", "(", "np", ".", "sum", "(", "np", ".", "where", "(", "p", "!=", "0", ",", "p", "*", "np", ".", "log", "(", "p", "/", "q", ")", ",", "0", ")", ")", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.utils.result_tools.summarize_data_statistics": [[28, 42], ["pathlib.Path().mkdir", "pandas.concat().to_csv", "utils.preprocessor.preprocess_datasets", "result_tools.calc_kl_div", "stat_data_list.append", "pathlib.Path", "train[].mean().round", "test[].mean().round", "pandas.DataFrame", "pandas.concat", "train[].mean", "test[].mean"], "function", ["home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.utils.preprocessor.preprocess_datasets", "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.utils.result_tools.calc_kl_div"], ["", "def", "summarize_data_statistics", "(", ")", "->", "None", ":", "\n", "    ", "\"\"\"Save dataset statistics with Tex Table Format.\"\"\"", "\n", "stat_data_list", "=", "[", "]", "\n", "Path", "(", "'../paper_results'", ")", ".", "mkdir", "(", "exist_ok", "=", "True", ")", "\n", "for", "data", "in", "datasets", ":", "\n", "        ", "train", ",", "_", ",", "test", ",", "num_users", ",", "num_items", "=", "preprocess_datasets", "(", "data", "=", "data", ")", "\n", "num_data", "=", "train", ".", "shape", "[", "0", "]", "\n", "spasity", "=", "f'{100 * (num_data / (num_users * num_items)).round(4)}%'", "\n", "avg_train", ",", "avg_test", "=", "train", "[", ":", ",", "2", "]", ".", "mean", "(", ")", ".", "round", "(", "3", ")", ",", "test", "[", ":", ",", "2", "]", ".", "mean", "(", ")", ".", "round", "(", "3", ")", "\n", "kl", "=", "calc_kl_div", "(", "train", ",", "test", ")", "\n", "stat_data", "=", "DataFrame", "(", "data", "=", "[", "num_users", ",", "num_items", ",", "num_data", ",", "spasity", ",", "avg_train", ",", "avg_test", ",", "kl", "]", ",", "\n", "index", "=", "stats_idx", ",", "columns", "=", "[", "data", "]", ")", ".", "T", "\n", "stat_data_list", ".", "append", "(", "stat_data", ")", "\n", "", "pd", ".", "concat", "(", "stat_data_list", ")", ".", "to_csv", "(", "'../paper_results/data_stat.csv'", ",", "sep", "=", "'&'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.utils.result_tools.summarize_experimental_results": [[48, 81], ["pathlib.Path", "pathlib.Path", "pathlib.Path.mkdir", "zip", "pandas.DataFrame().to_csv", "pandas.read_csv", "pandas.DataFrame().describe().round", "pandas.DataFrame().describe().round", "pandas.DataFrame().describe().round", "pandas.DataFrame().describe().round", "pandas.DataFrame().describe().round", "pandas.DataFrame().describe().round", "str", "str", "pandas.DataFrame", "pandas.DataFrame().describe", "pandas.DataFrame().describe", "pandas.DataFrame().describe", "pandas.DataFrame().describe", "pandas.DataFrame().describe", "pandas.DataFrame().describe", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame", "pandas.DataFrame"], "function", ["None"], ["def", "summarize_experimental_results", "(", "data", ":", "str", ")", "->", "None", ":", "\n", "    ", "\"\"\"Summarize results with Tex Table format.\"\"\"", "\n", "raw_results_path", "=", "Path", "(", "f'../logs/{data}'", ")", "\n", "paper_results_path", "=", "Path", "(", "f'../paper_results/{data}'", ")", "\n", "paper_results_path", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "results_mse_dict", "=", "{", "}", "\n", "results_mae_dict", "=", "{", "}", "\n", "results_ndcg_dict", "=", "{", "}", "\n", "results_mse_dict_at", "=", "{", "}", "\n", "results_mae_dict_at", "=", "{", "}", "\n", "results_ndcg_dict_at", "=", "{", "}", "\n", "\n", "for", "model_name", "in", "model_names", ":", "\n", "        ", "results_", "=", "pd", ".", "read_csv", "(", "str", "(", "raw_results_path", "/", "f'{model_name}/results.csv'", ")", ",", "index_col", "=", "0", ")", "\n", "if", "'-at'", "in", "model_name", ":", "\n", "            ", "results_mse_dict_at", "[", "model_name", "[", ":", "-", "3", "]", "]", "=", "results_", "[", "'MSE'", "]", "\n", "results_mae_dict_at", "[", "model_name", "[", ":", "-", "3", "]", "]", "=", "results_", "[", "'MAE'", "]", "\n", "results_ndcg_dict_at", "[", "model_name", "[", ":", "-", "3", "]", "]", "=", "results_", "[", "'nDCG@3'", "]", "\n", "", "else", ":", "\n", "            ", "results_mse_dict", "[", "model_name", "]", "=", "results_", "[", "'MSE'", "]", "\n", "results_mae_dict", "[", "model_name", "]", "=", "results_", "[", "'MAE'", "]", "\n", "results_ndcg_dict", "[", "model_name", "]", "=", "results_", "[", "'nDCG@3'", "]", "\n", "", "", "results_mae", "=", "DataFrame", "(", "results_mae_dict", ")", ".", "describe", "(", ")", ".", "round", "(", "5", ")", ".", "T", "\n", "results_mse", "=", "DataFrame", "(", "results_mse_dict", ")", ".", "describe", "(", ")", ".", "round", "(", "5", ")", ".", "T", "\n", "results_ndcg", "=", "DataFrame", "(", "results_ndcg_dict", ")", ".", "describe", "(", ")", ".", "round", "(", "5", ")", ".", "T", "\n", "results_mae_at", "=", "DataFrame", "(", "results_mae_dict_at", ")", ".", "describe", "(", ")", ".", "round", "(", "5", ")", ".", "T", "\n", "results_mse_at", "=", "DataFrame", "(", "results_mse_dict_at", ")", ".", "describe", "(", ")", ".", "round", "(", "5", ")", ".", "T", "\n", "results_ndcg_at", "=", "DataFrame", "(", "results_ndcg_dict_at", ")", ".", "describe", "(", ")", ".", "round", "(", "5", ")", ".", "T", "\n", "results_list", "=", "[", "results_mae", ",", "results_mae_at", ",", "results_mse", ",", "results_mse_at", ",", "results_ndcg", ",", "results_ndcg_at", "]", "\n", "results_dict", "=", "{", "}", "\n", "for", "results", ",", "metric", "in", "zip", "(", "results_list", ",", "metrics", ")", ":", "\n", "        ", "results_dict", "[", "metric", "]", "=", "results", "[", "'mean'", "]", "\n", "", "DataFrame", "(", "results_dict", ")", ".", "to_csv", "(", "str", "(", "paper_results_path", "/", "'overall_results.csv'", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.utils.preprocessor.preprocess_datasets": [[13, 40], ["sklearn.model_selection.train_test_split", "codecs.open", "pandas.read_csv", "data_train[].reset_index.rename", "codecs.open", "pandas.read_csv", "data_test[].reset_index.rename", "train[].max", "train[].max", "codecs.open", "pandas.read_csv", "data_train[].reset_index.stack().reset_index().rename", "data_train[].reset_index", "codecs.open", "pandas.read_csv", "data_test[].reset_index.stack().reset_index().rename", "data_test[].reset_index", "data_train[].reset_index.stack().reset_index", "data_test[].reset_index.stack().reset_index", "data_train[].reset_index.stack", "data_test[].reset_index.stack"], "function", ["None"], ["def", "preprocess_datasets", "(", "data", ":", "str", ",", "seed", ":", "int", "=", "0", ")", "->", "Tuple", ":", "\n", "    ", "\"\"\"Load and preprocess raw datasets (Yahoo! R3 or Coat).\"\"\"", "\n", "if", "data", "==", "'yahoo'", ":", "\n", "        ", "with", "codecs", ".", "open", "(", "f'../data/{data}/train.txt'", ",", "'r'", ",", "'utf-8'", ",", "errors", "=", "'ignore'", ")", "as", "f", ":", "\n", "            ", "data_train", "=", "pd", ".", "read_csv", "(", "f", ",", "delimiter", "=", "'\\t'", ",", "header", "=", "None", ")", "\n", "data_train", ".", "rename", "(", "columns", "=", "{", "0", ":", "'user'", ",", "1", ":", "'item'", ",", "2", ":", "'rate'", "}", ",", "inplace", "=", "True", ")", "\n", "", "with", "codecs", ".", "open", "(", "f'../data/{data}/test.txt'", ",", "'r'", ",", "'utf-8'", ",", "errors", "=", "'ignore'", ")", "as", "f", ":", "\n", "            ", "data_test", "=", "pd", ".", "read_csv", "(", "f", ",", "delimiter", "=", "'\\t'", ",", "header", "=", "None", ")", "\n", "data_test", ".", "rename", "(", "columns", "=", "{", "0", ":", "'user'", ",", "1", ":", "'item'", ",", "2", ":", "'rate'", "}", ",", "inplace", "=", "True", ")", "\n", "", "for", "_data", "in", "[", "data_train", ",", "data_test", "]", ":", "\n", "            ", "_data", ".", "user", ",", "_data", ".", "item", "=", "_data", ".", "user", "-", "1", ",", "_data", ".", "item", "-", "1", "\n", "", "", "elif", "data", "==", "'coat'", ":", "\n", "        ", "col", "=", "{", "'level_0'", ":", "'user'", ",", "'level_1'", ":", "'item'", ",", "2", ":", "'rate'", ",", "0", ":", "'rate'", "}", "\n", "with", "codecs", ".", "open", "(", "f'../data/{data}/train.ascii'", ",", "'r'", ",", "'utf-8'", ",", "errors", "=", "'ignore'", ")", "as", "f", ":", "\n", "            ", "data_train", "=", "pd", ".", "read_csv", "(", "f", ",", "delimiter", "=", "' '", ",", "header", "=", "None", ")", "\n", "data_train", "=", "data_train", ".", "stack", "(", ")", ".", "reset_index", "(", ")", ".", "rename", "(", "columns", "=", "col", ")", "\n", "data_train", "=", "data_train", "[", "data_train", ".", "rate", ".", "values", "!=", "0", "]", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "", "with", "codecs", ".", "open", "(", "f'../data/{data}/test.ascii'", ",", "'r'", ",", "'utf-8'", ",", "errors", "=", "'ignore'", ")", "as", "f", ":", "\n", "            ", "data_test", "=", "pd", ".", "read_csv", "(", "f", ",", "delimiter", "=", "' '", ",", "header", "=", "None", ")", "\n", "data_test", "=", "data_test", ".", "stack", "(", ")", ".", "reset_index", "(", ")", ".", "rename", "(", "columns", "=", "col", ")", "\n", "data_test", "=", "data_test", "[", "data_test", ".", "rate", ".", "values", "!=", "0", "]", ".", "reset_index", "(", "drop", "=", "True", ")", "\n", "\n", "", "", "test", "=", "data_test", ".", "values", "\n", "train", ",", "val", "=", "train_test_split", "(", "data_train", ".", "values", ",", "test_size", "=", "0.1", ",", "random_state", "=", "seed", ")", "\n", "num_users", ",", "num_items", "=", "train", "[", ":", ",", "0", "]", ".", "max", "(", ")", "+", "1", ",", "train", "[", ":", ",", "1", "]", ".", "max", "(", ")", "+", "1", "\n", "\n", "return", "train", ",", "val", ",", "test", ",", "num_users", ",", "num_items", "\n", "", ""]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.evaluate.evaluator.PredictRankings.__init__": [[29, 34], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "user_embed", ":", "np", ".", "ndarray", ",", "item_embed", ":", "np", ".", "ndarray", ",", "item_bias", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n", "        ", "\"\"\"Initialize Class.\"\"\"", "\n", "self", ".", "user_embed", "=", "user_embed", "\n", "self", ".", "item_embed", "=", "item_embed", "\n", "self", ".", "item_bias", "=", "item_bias", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.evaluate.evaluator.PredictRankings.predict": [[35, 42], ["evaluator.PredictRankings.user_embed[].reshape"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "users", ":", "np", ".", "array", ",", "items", ":", "np", ".", "array", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Predict scores for each user-item pairs.\"\"\"", "\n", "# predict ranking score for each user", "\n", "user_emb", "=", "self", ".", "user_embed", "[", "users", "]", ".", "reshape", "(", "1", ",", "self", ".", "user_embed", ".", "shape", "[", "1", "]", ")", "\n", "item_emb", "=", "self", ".", "item_embed", "[", "items", "]", "\n", "scores", "=", "(", "user_emb", "@", "item_emb", ".", "T", ")", ".", "flatten", "(", ")", "+", "self", ".", "item_bias", "[", "items", "]", "\n", "return", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.evaluate.evaluator.calc_ndcg_at_k": [[7, 24], ["numpy.arange", "numpy.arange", "numpy.log2", "numpy.log2", "y_true.argsort", "y_score.argsort"], "function", ["None"], ["def", "calc_ndcg_at_k", "(", "y_true", ":", "np", ".", "ndarray", ",", "y_score", ":", "np", ".", "ndarray", ",", "k", ":", "int", ")", "->", "float", ":", "\n", "    ", "\"\"\"Calculate a nDCG score for a given user.\"\"\"", "\n", "y_max_sorted", "=", "y_true", "[", "y_true", ".", "argsort", "(", ")", "[", ":", ":", "-", "1", "]", "]", "\n", "y_true_sorted", "=", "y_true", "[", "y_score", ".", "argsort", "(", ")", "[", ":", ":", "-", "1", "]", "]", "\n", "\n", "num_items", "=", "y_true", ".", "shape", "[", "0", "]", "\n", "k", "=", "num_items", "if", "num_items", "<", "k", "else", "k", "\n", "\n", "dcg_score", "=", "y_true_sorted", "[", "0", "]", "-", "1", "\n", "for", "i", "in", "np", ".", "arange", "(", "1", ",", "k", ")", ":", "\n", "        ", "dcg_score", "+=", "y_true_sorted", "[", "i", "]", "/", "np", ".", "log2", "(", "i", "+", "1", ")", "\n", "\n", "", "max_score", "=", "2", "**", "(", "y_max_sorted", "[", "0", "]", ")", "-", "1", "\n", "for", "i", "in", "np", ".", "arange", "(", "1", ",", "k", ")", ":", "\n", "        ", "max_score", "+=", "y_max_sorted", "[", "i", "]", "/", "np", ".", "log2", "(", "i", "+", "1", ")", "\n", "\n", "", "return", "dcg_score", "/", "max_score", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.evaluate.evaluator.aoa_evaluator": [[44, 66], ["evaluator.PredictRankings", "numpy.random.seed", "set", "numpy.mean", "evaluator.PredictRankings.predict", "results.append", "evaluator.calc_ndcg_at_k"], "function", ["home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.evaluate.evaluator.PredictRankings.predict", "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.evaluate.evaluator.calc_ndcg_at_k"], ["", "", "def", "aoa_evaluator", "(", "user_embed", ":", "np", ".", "ndarray", ",", "item_embed", ":", "np", ".", "ndarray", ",", "item_bias", ":", "np", ".", "ndarray", ",", "\n", "test", ":", "np", ".", "ndarray", ",", "at_k", ":", "int", "=", "3", ")", "->", "float", ":", "\n", "    ", "\"\"\"Calculate ranking metrics with average-over-all evaluator.\"\"\"", "\n", "users", "=", "test", "[", ":", ",", "0", "]", "\n", "items", "=", "test", "[", ":", ",", "1", "]", "\n", "ratings", "=", "test", "[", ":", ",", "2", "]", "\n", "\n", "# define model", "\n", "model", "=", "PredictRankings", "(", "user_embed", "=", "user_embed", ",", "item_embed", "=", "item_embed", ",", "item_bias", "=", "item_bias", ")", "\n", "\n", "# calculate ranking metrics", "\n", "results", "=", "[", "]", "\n", "np", ".", "random", ".", "seed", "(", "12345", ")", "\n", "for", "user", "in", "set", "(", "users", ")", ":", "\n", "        ", "indices", "=", "users", "==", "user", "\n", "items_for_user", "=", "items", "[", "indices", "]", "\n", "ratings_for_user", "=", "ratings", "[", "indices", "]", "\n", "\n", "scores", "=", "model", ".", "predict", "(", "users", "=", "user", ",", "items", "=", "items_for_user", ")", "\n", "results", ".", "append", "(", "calc_ndcg_at_k", "(", "ratings_for_user", ",", "scores", ",", "at_k", ")", ")", "\n", "\n", "", "return", "np", ".", "mean", "(", "results", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.AbstractRecommender.create_placeholders": [[16, 20], ["NotImplementedError"], "methods", ["None"], ["@", "abstractmethod", "\n", "def", "create_placeholders", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create the placeholders to be used.\"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.AbstractRecommender.build_graph": [[21, 25], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "build_graph", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Build the main tensorflow graph with embedding layers.\"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.AbstractRecommender.create_losses": [[26, 30], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "create_losses", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create the losses.\"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.AbstractRecommender.add_optimizer": [[31, 35], ["NotImplementedError"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "add_optimizer", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Add the required optimiser to the graph.\"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.MFIPS.__init__": [[40, 55], ["models.MFIPS.create_placeholders", "models.MFIPS.build_graph", "models.MFIPS.create_losses", "models.MFIPS.add_optimizer"], "methods", ["home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.MFIPS.create_placeholders", "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.MFIPS.build_graph", "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.MFIPS.create_losses", "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.MFIPS.add_optimizer"], ["def", "__init__", "(", "self", ",", "num_users", ":", "np", ".", "array", ",", "num_items", ":", "np", ".", "array", ",", "\n", "dim", ":", "int", ",", "lam", ":", "float", ",", "eta", ":", "float", ",", "num", ":", "int", "=", "1", ")", "->", "None", ":", "\n", "        ", "\"\"\"Initialize Class.\"\"\"", "\n", "self", ".", "num_users", "=", "num_users", "\n", "self", ".", "num_items", "=", "num_items", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "lam", "=", "lam", "\n", "self", ".", "eta", "=", "eta", "\n", "self", ".", "num", "=", "num", "\n", "\n", "# Build the graphs", "\n", "self", ".", "create_placeholders", "(", ")", "\n", "self", ".", "build_graph", "(", ")", "\n", "self", ".", "create_losses", "(", ")", "\n", "self", ".", "add_optimizer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.MFIPS.create_placeholders": [[56, 62], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder"], "methods", ["None"], ["", "def", "create_placeholders", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create the placeholders to be used.\"\"\"", "\n", "self", ".", "users", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "name", "=", "'user_ph'", ")", "\n", "self", ".", "items", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "name", "=", "'item_ph'", ")", "\n", "self", ".", "scores", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "1", "]", ",", "name", "=", "'score_ph'", ")", "\n", "self", ".", "labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "1", "]", ",", "name", "=", "'label_ph'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.MFIPS.build_graph": [[63, 88], ["tensorflow.name_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.get_variable", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.variable_scope", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.expand_dims", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.multiply", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.constant_initializer"], "methods", ["None"], ["", "def", "build_graph", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Build the main tensorflow graph with embedding layers.\"\"\"", "\n", "with", "tf", ".", "name_scope", "(", "'embedding_layer'", ")", ":", "\n", "            ", "self", ".", "user_embeddings", "=", "tf", ".", "get_variable", "(", "f'user_embeddings{self.num}'", ",", "shape", "=", "[", "self", ".", "num_users", ",", "self", ".", "dim", "]", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", "\n", "self", ".", "item_embeddings", "=", "tf", ".", "get_variable", "(", "f'item_embeddings{self.num}'", ",", "shape", "=", "[", "self", ".", "num_items", ",", "self", ".", "dim", "]", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", "\n", "self", ".", "user_bias", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "shape", "=", "[", "self", ".", "num_users", "]", ",", "stddev", "=", "0.01", ")", ",", "\n", "name", "=", "f'user_bias{self.num}'", ")", "\n", "self", ".", "item_bias", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "shape", "=", "[", "self", ".", "num_items", "]", ",", "stddev", "=", "0.01", ")", ",", "\n", "name", "=", "f'item_bias{self.num}'", ")", "\n", "self", ".", "global_bias", "=", "tf", ".", "get_variable", "(", "f'global_bias{self.num}'", ",", "[", "1", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "1e-3", ",", "dtype", "=", "tf", ".", "float32", ")", ")", "\n", "\n", "self", ".", "u_embed", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "user_embeddings", ",", "self", ".", "users", ")", "\n", "self", ".", "i_embed", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "item_embeddings", ",", "self", ".", "items", ")", "\n", "self", ".", "u_bias", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "user_bias", ",", "self", ".", "users", ")", "\n", "self", ".", "i_bias", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "item_bias", ",", "self", ".", "items", ")", "\n", "\n", "", "with", "tf", ".", "variable_scope", "(", "'prediction'", ")", ":", "\n", "            ", "self", ".", "preds", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "self", ".", "u_embed", ",", "self", ".", "i_embed", ")", ",", "1", ")", "\n", "self", ".", "preds", "=", "tf", ".", "add", "(", "self", ".", "preds", ",", "self", ".", "u_bias", ")", "\n", "self", ".", "preds", "=", "tf", ".", "add", "(", "self", ".", "preds", ",", "self", ".", "i_bias", ")", "\n", "self", ".", "preds", "=", "tf", ".", "add", "(", "self", ".", "preds", ",", "self", ".", "global_bias", ")", "\n", "self", ".", "preds", "=", "tf", ".", "expand_dims", "(", "self", ".", "preds", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.MFIPS.create_losses": [[89, 100], ["tensorflow.name_scope", "tensorflow.square", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.abs", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss"], "methods", ["None"], ["", "", "def", "create_losses", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create the losses.\"\"\"", "\n", "with", "tf", ".", "name_scope", "(", "'losses'", ")", ":", "\n", "            ", "local_losses", "=", "tf", ".", "square", "(", "self", ".", "labels", "-", "self", ".", "preds", ")", "\n", "self", ".", "weighted_mse", "=", "tf", ".", "reduce_sum", "(", "local_losses", "/", "self", ".", "scores", ")", "/", "tf", ".", "reduce_sum", "(", "1.", "/", "self", ".", "scores", ")", "\n", "self", ".", "mse", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "self", ".", "labels", "-", "self", ".", "preds", ")", ")", "\n", "self", ".", "mae", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "self", ".", "labels", "-", "self", ".", "preds", ")", ")", "\n", "\n", "reg_embeds", "=", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "user_embeddings", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "item_embeddings", ")", "\n", "reg_biases", "=", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "user_bias", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "item_bias", ")", "\n", "self", ".", "loss", "=", "self", ".", "weighted_mse", "+", "self", ".", "lam", "*", "(", "reg_embeds", "+", "reg_biases", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.usaito_asymmetric-tri-rec-real.models.models.MFIPS.add_optimizer": [[101, 105], ["tensorflow.name_scope", "tensorflow.train.AdamOptimizer().minimize", "tensorflow.train.AdamOptimizer"], "methods", ["None"], ["", "", "def", "add_optimizer", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Add the required optimiser to the graph.\"\"\"", "\n", "with", "tf", ".", "name_scope", "(", "'optimizer'", ")", ":", "\n", "            ", "self", ".", "apply_grads", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "self", ".", "eta", ")", ".", "minimize", "(", "self", ".", "loss", ")", "\n", "", "", "", ""]]}