{"home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.calculate_roc": [[35, 105], ["min", "len", "sklearn.model_selection.KFold", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.arange", "enumerate", "numpy.mean", "numpy.mean", "len", "numpy.subtract", "numpy.sum", "sklearn.model_selection.KFold.split", "numpy.zeros", "enumerate", "numpy.argmax", "enumerate", "verifacation.calculate_accuracy", "len", "range", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "numpy.square", "print", "numpy.concatenate", "sklearn.decomposition.PCA", "sklearn.decomposition.PCA.fit", "sklearn.decomposition.PCA.transform", "sklearn.decomposition.PCA.transform", "sklearn.preprocessing.normalize", "sklearn.preprocessing.normalize", "numpy.subtract", "numpy.sum", "verifacation.calculate_accuracy", "verifacation.calculate_accuracy", "numpy.square", "dis_same.append", "dis_not_same.append", "numpy.arccos", "numpy.arccos"], "function", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.calculate_accuracy", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.calculate_accuracy", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.calculate_accuracy"], ["def", "calculate_roc", "(", "thresholds", ",", "embeddings1", ",", "embeddings2", ",", "actual_issame", ",", "nrof_folds", "=", "10", ",", "pca", "=", "0", ",", "show_angle", "=", "False", ")", ":", "\n", "    ", "assert", "(", "embeddings1", ".", "shape", "[", "0", "]", "==", "embeddings2", ".", "shape", "[", "0", "]", ")", "\n", "assert", "(", "embeddings1", ".", "shape", "[", "1", "]", "==", "embeddings2", ".", "shape", "[", "1", "]", ")", "\n", "nrof_pairs", "=", "min", "(", "len", "(", "actual_issame", ")", ",", "embeddings1", ".", "shape", "[", "0", "]", ")", "\n", "nrof_thresholds", "=", "len", "(", "thresholds", ")", "\n", "k_fold", "=", "KFold", "(", "n_splits", "=", "nrof_folds", ",", "shuffle", "=", "False", ")", "\n", "\n", "tprs", "=", "np", ".", "zeros", "(", "(", "nrof_folds", ",", "nrof_thresholds", ")", ")", "\n", "fprs", "=", "np", ".", "zeros", "(", "(", "nrof_folds", ",", "nrof_thresholds", ")", ")", "\n", "accuracy", "=", "np", ".", "zeros", "(", "(", "nrof_folds", ")", ")", "\n", "best_thresholds", "=", "np", ".", "zeros", "(", "(", "nrof_folds", ")", ")", "\n", "indices", "=", "np", ".", "arange", "(", "nrof_pairs", ")", "\n", "\n", "if", "pca", "==", "0", ":", "\n", "        ", "diff", "=", "np", ".", "subtract", "(", "embeddings1", ",", "embeddings2", ")", "\n", "dist", "=", "np", ".", "sum", "(", "np", ".", "square", "(", "diff", ")", ",", "1", ")", "\n", "\n", "", "for", "fold_idx", ",", "(", "train_set", ",", "test_set", ")", "in", "enumerate", "(", "k_fold", ".", "split", "(", "indices", ")", ")", ":", "\n", "\n", "        ", "if", "pca", ">", "0", ":", "\n", "            ", "print", "(", "'doing pca on'", ",", "fold_idx", ")", "\n", "embed1_train", "=", "embeddings1", "[", "train_set", "]", "\n", "embed2_train", "=", "embeddings2", "[", "train_set", "]", "\n", "_embed_train", "=", "np", ".", "concatenate", "(", "(", "embed1_train", ",", "embed2_train", ")", ",", "axis", "=", "0", ")", "\n", "# print(_embed_train.shape)", "\n", "pca_model", "=", "PCA", "(", "n_components", "=", "pca", ")", "\n", "pca_model", ".", "fit", "(", "_embed_train", ")", "\n", "embed1", "=", "pca_model", ".", "transform", "(", "embeddings1", ")", "\n", "embed2", "=", "pca_model", ".", "transform", "(", "embeddings2", ")", "\n", "embed1", "=", "sklearn", ".", "preprocessing", ".", "normalize", "(", "embed1", ")", "\n", "embed2", "=", "sklearn", ".", "preprocessing", ".", "normalize", "(", "embed2", ")", "\n", "# print(embed1.shape, embed2.shape)", "\n", "diff", "=", "np", ".", "subtract", "(", "embed1", ",", "embed2", ")", "\n", "dist", "=", "np", ".", "sum", "(", "np", ".", "square", "(", "diff", ")", ",", "1", ")", "\n", "\n", "# Find the best threshold for the fold", "\n", "", "acc_train", "=", "np", ".", "zeros", "(", "(", "nrof_thresholds", ")", ")", "\n", "\n", "for", "threshold_idx", ",", "threshold", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "            ", "_", ",", "_", ",", "acc_train", "[", "threshold_idx", "]", "=", "calculate_accuracy", "(", "threshold", ",", "dist", "[", "train_set", "]", ",", "actual_issame", "[", "train_set", "]", ")", "\n", "", "best_threshold_index", "=", "np", ".", "argmax", "(", "acc_train", ")", "\n", "#         print('best_threshold_index', best_threshold_index, acc_train[best_threshold_index])", "\n", "best_thresholds", "[", "fold_idx", "]", "=", "thresholds", "[", "best_threshold_index", "]", "\n", "for", "threshold_idx", ",", "threshold", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "            ", "tprs", "[", "fold_idx", ",", "threshold_idx", "]", ",", "fprs", "[", "fold_idx", ",", "threshold_idx", "]", ",", "_", "=", "calculate_accuracy", "(", "threshold", ",", "\n", "dist", "[", "test_set", "]", ",", "\n", "actual_issame", "[", "\n", "test_set", "]", ")", "\n", "", "_", ",", "_", ",", "accuracy", "[", "fold_idx", "]", "=", "calculate_accuracy", "(", "thresholds", "[", "best_threshold_index", "]", ",", "dist", "[", "test_set", "]", ",", "\n", "actual_issame", "[", "test_set", "]", ")", "\n", "# calculate the angle information of pairs.  Return the mean and std statistics of same and not same pairs", "\n", "", "angle_info", "=", "{", "}", "\n", "if", "show_angle", ":", "\n", "        ", "l", "=", "len", "(", "dist", ")", "\n", "dis_same", "=", "[", "]", "\n", "dis_not_same", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "l", ")", ":", "\n", "            ", "if", "actual_issame", "[", "i", "]", "==", "1", ":", "\n", "                ", "dis_same", ".", "append", "(", "np", ".", "arccos", "(", "(", "2", "-", "dist", "[", "i", "]", ")", "*", "0.5", ")", "/", "np", ".", "pi", "*", "180", ")", "\n", "", "else", ":", "\n", "                ", "dis_not_same", ".", "append", "(", "np", ".", "arccos", "(", "(", "2", "-", "dist", "[", "i", "]", ")", "*", "0.5", ")", "/", "np", ".", "pi", "*", "180", ")", "\n", "\n", "", "", "angle_info", "[", "'same_pair_angle_mean'", "]", "=", "np", ".", "mean", "(", "dis_same", ")", "\n", "angle_info", "[", "'same_pair_angle_var'", "]", "=", "np", ".", "std", "(", "dis_same", ")", "\n", "angle_info", "[", "'diff_pair_angle_mean'", "]", "=", "np", ".", "mean", "(", "dis_not_same", ")", "\n", "angle_info", "[", "'diff_pair_angle_var'", "]", "=", "np", ".", "std", "(", "dis_not_same", ")", "\n", "\n", "", "tpr", "=", "np", ".", "mean", "(", "tprs", ",", "0", ")", "\n", "fpr", "=", "np", ".", "mean", "(", "fprs", ",", "0", ")", "\n", "return", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", ",", "angle_info", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.calculate_accuracy": [[107, 118], ["numpy.less", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "float", "numpy.logical_not", "numpy.logical_not", "numpy.logical_not", "numpy.logical_not", "float", "float", "float", "float"], "function", ["None"], ["", "def", "calculate_accuracy", "(", "threshold", ",", "dist", ",", "actual_issame", ")", ":", "\n", "    ", "predict_issame", "=", "np", ".", "less", "(", "dist", ",", "threshold", ")", "\n", "tp", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "predict_issame", ",", "actual_issame", ")", ")", "\n", "fp", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "predict_issame", ",", "np", ".", "logical_not", "(", "actual_issame", ")", ")", ")", "\n", "tn", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "np", ".", "logical_not", "(", "predict_issame", ")", ",", "np", ".", "logical_not", "(", "actual_issame", ")", ")", ")", "\n", "fn", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "np", ".", "logical_not", "(", "predict_issame", ")", ",", "actual_issame", ")", ")", "\n", "\n", "tpr", "=", "0", "if", "(", "tp", "+", "fn", "==", "0", ")", "else", "float", "(", "tp", ")", "/", "float", "(", "tp", "+", "fn", ")", "\n", "fpr", "=", "0", "if", "(", "fp", "+", "tn", "==", "0", ")", "else", "float", "(", "fp", ")", "/", "float", "(", "fp", "+", "tn", ")", "\n", "acc", "=", "float", "(", "tp", "+", "tn", ")", "/", "dist", ".", "size", "\n", "return", "tpr", ",", "fpr", ",", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.calculate_val": [[120, 162], ["min", "len", "sklearn.model_selection.KFold", "numpy.zeros", "numpy.zeros", "numpy.subtract", "numpy.sum", "numpy.arange", "enumerate", "numpy.mean", "numpy.mean", "numpy.std", "len", "numpy.square", "sklearn.model_selection.KFold.split", "numpy.zeros", "enumerate", "verifacation.calculate_val_far", "verifacation.calculate_val_far", "numpy.max", "scipy.interpolate.interp1d", "interpolate.interp1d."], "function", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.calculate_val_far", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.calculate_val_far"], ["", "def", "calculate_val", "(", "thresholds", ",", "embeddings1", ",", "embeddings2", ",", "actual_issame", ",", "far_target", ",", "nrof_folds", "=", "10", ")", ":", "\n", "    ", "'''\n    Copy from [insightface](https://github.com/deepinsight/insightface)\n    :param thresholds:\n    :param embeddings1:\n    :param embeddings2:\n    :param actual_issame:\n    :param far_target:\n    :param nrof_folds:\n    :return:\n    '''", "\n", "assert", "(", "embeddings1", ".", "shape", "[", "0", "]", "==", "embeddings2", ".", "shape", "[", "0", "]", ")", "\n", "assert", "(", "embeddings1", ".", "shape", "[", "1", "]", "==", "embeddings2", ".", "shape", "[", "1", "]", ")", "\n", "nrof_pairs", "=", "min", "(", "len", "(", "actual_issame", ")", ",", "embeddings1", ".", "shape", "[", "0", "]", ")", "\n", "nrof_thresholds", "=", "len", "(", "thresholds", ")", "\n", "k_fold", "=", "KFold", "(", "n_splits", "=", "nrof_folds", ",", "shuffle", "=", "False", ")", "\n", "\n", "val", "=", "np", ".", "zeros", "(", "nrof_folds", ")", "\n", "far", "=", "np", ".", "zeros", "(", "nrof_folds", ")", "\n", "\n", "diff", "=", "np", ".", "subtract", "(", "embeddings1", ",", "embeddings2", ")", "\n", "dist", "=", "np", ".", "sum", "(", "np", ".", "square", "(", "diff", ")", ",", "1", ")", "\n", "indices", "=", "np", ".", "arange", "(", "nrof_pairs", ")", "\n", "\n", "for", "fold_idx", ",", "(", "train_set", ",", "test_set", ")", "in", "enumerate", "(", "k_fold", ".", "split", "(", "indices", ")", ")", ":", "\n", "\n", "# Find the threshold that gives FAR = far_target", "\n", "        ", "far_train", "=", "np", ".", "zeros", "(", "nrof_thresholds", ")", "\n", "for", "threshold_idx", ",", "threshold", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "            ", "_", ",", "far_train", "[", "threshold_idx", "]", "=", "calculate_val_far", "(", "threshold", ",", "dist", "[", "train_set", "]", ",", "actual_issame", "[", "train_set", "]", ")", "\n", "", "if", "np", ".", "max", "(", "far_train", ")", ">=", "far_target", ":", "\n", "            ", "f", "=", "interpolate", ".", "interp1d", "(", "far_train", ",", "thresholds", ",", "kind", "=", "'slinear'", ")", "\n", "threshold", "=", "f", "(", "far_target", ")", "\n", "", "else", ":", "\n", "            ", "threshold", "=", "0.0", "\n", "\n", "", "val", "[", "fold_idx", "]", ",", "far", "[", "fold_idx", "]", "=", "calculate_val_far", "(", "threshold", ",", "dist", "[", "test_set", "]", ",", "actual_issame", "[", "test_set", "]", ")", "\n", "\n", "", "val_mean", "=", "np", ".", "mean", "(", "val", ")", "\n", "far_mean", "=", "np", ".", "mean", "(", "far", ")", "\n", "val_std", "=", "np", ".", "std", "(", "val", ")", "\n", "return", "val_mean", ",", "val_std", ",", "far_mean", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.calculate_val_far": [[164, 173], ["numpy.less", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.logical_and", "numpy.logical_and", "numpy.logical_not", "float", "float", "float", "float", "numpy.logical_not"], "function", ["None"], ["", "def", "calculate_val_far", "(", "threshold", ",", "dist", ",", "actual_issame", ")", ":", "\n", "    ", "predict_issame", "=", "np", ".", "less", "(", "dist", ",", "threshold", ")", "\n", "true_accept", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "predict_issame", ",", "actual_issame", ")", ")", "\n", "false_accept", "=", "np", ".", "sum", "(", "np", ".", "logical_and", "(", "predict_issame", ",", "np", ".", "logical_not", "(", "actual_issame", ")", ")", ")", "\n", "n_same", "=", "np", ".", "sum", "(", "actual_issame", ")", "\n", "n_diff", "=", "np", ".", "sum", "(", "np", ".", "logical_not", "(", "actual_issame", ")", ")", "\n", "val", "=", "float", "(", "true_accept", ")", "/", "float", "(", "n_same", ")", "\n", "far", "=", "float", "(", "false_accept", ")", "/", "float", "(", "n_diff", ")", "\n", "return", "val", ",", "far", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.evaluate": [[175, 185], ["numpy.arange", "verifacation.calculate_roc", "numpy.asarray"], "function", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.verifacation.calculate_roc"], ["", "def", "evaluate", "(", "embeddings", ",", "actual_issame", ",", "nrof_folds", "=", "10", ",", "pca", "=", "0", ")", ":", "\n", "# Calculate evaluation metrics", "\n", "    ", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "4", ",", "0.01", ")", "\n", "embeddings1", "=", "embeddings", "[", "0", ":", ":", "2", "]", "\n", "embeddings2", "=", "embeddings", "[", "1", ":", ":", "2", "]", "\n", "\n", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", ",", "angle_info", "=", "calculate_roc", "(", "thresholds", ",", "embeddings1", ",", "embeddings2", ",", "\n", "np", ".", "asarray", "(", "actual_issame", ")", ",", "nrof_folds", "=", "nrof_folds", ",", "pca", "=", "pca", ",", "show_angle", "=", "True", ")", "\n", "\n", "return", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", ",", "angle_info", "", "", ""]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.config.get_config": [[7, 62], ["easydict.EasyDict", "pathlib.Path", "pathlib.Path", "torch.device", "torchvision.transforms.Compose", "torch.nn.CrossEntropyLoss", "torch.cuda.is_available", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["def", "get_config", "(", "training", "=", "True", ")", ":", "\n", "    ", "conf", "=", "edict", "(", ")", "\n", "conf", ".", "multi_sphere", "=", "False", "\n", "conf", ".", "data_path", "=", "Path", "(", "'data/'", ")", "\n", "\n", "conf", ".", "work_path", "=", "Path", "(", "'work_path/'", ")", "\n", "conf", ".", "model_path", "=", "conf", ".", "work_path", "/", "'models'", "\n", "conf", ".", "log_path", "=", "conf", ".", "work_path", "/", "'log'", "\n", "conf", ".", "save_path", "=", "conf", ".", "work_path", "/", "'save'", "\n", "conf", ".", "input_size", "=", "[", "112", ",", "112", "]", "\n", "conf", ".", "embedding_size", "=", "512", "\n", "conf", ".", "use_mobilfacenet", "=", "False", "\n", "conf", ".", "net_depth", "=", "50", "\n", "conf", ".", "drop_ratio", "=", "0.6", "\n", "conf", ".", "num_sphere", "=", "4", "\n", "conf", ".", "fixed_str", "=", "''", "\n", "conf", ".", "pretrained_model_path", "=", "''", "\n", "conf", ".", "m", "=", "0.5", "\n", "conf", ".", "arcface_loss", "=", "False", "\n", "conf", ".", "pretrain", "=", "False", "\n", "conf", ".", "am_softmax", "=", "False", "\n", "conf", ".", "net_mode", "=", "'ir_se'", "# or 'ir'", "\n", "conf", ".", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "conf", ".", "test_transform", "=", "trans", ".", "Compose", "(", "[", "\n", "trans", ".", "ToTensor", "(", ")", ",", "\n", "trans", ".", "Normalize", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "\n", "]", ")", "\n", "\n", "conf", ".", "data_mode", "=", "'emore'", "\n", "conf", ".", "emore_folder", "=", "conf", ".", "data_path", "/", "'faces_emore'", "\n", "conf", ".", "batch_size", "=", "180", "# irse net depth 50", "\n", "conf", ".", "threshold", "=", "0.3", "\n", "#   conf.batch_size = 200 # mobilefacenet", "\n", "#--------------------Training Config ------------------------    ", "\n", "if", "training", ":", "\n", "        ", "conf", ".", "log_path", "=", "conf", ".", "work_path", "/", "'log'", "\n", "conf", ".", "save_path", "=", "conf", ".", "work_path", "/", "'save'", "\n", "#     conf.weight_decay = 5e-4", "\n", "conf", ".", "lr", "=", "1e-3", "\n", "conf", ".", "milestones", "=", "[", "12", ",", "15", ",", "18", "]", "\n", "\n", "conf", ".", "momentum", "=", "0.9", "\n", "conf", ".", "pin_memory", "=", "True", "\n", "#         conf.num_workers = 4 # when batchsize is 200", "\n", "conf", ".", "num_workers", "=", "3", "\n", "conf", ".", "ce_loss", "=", "CrossEntropyLoss", "(", ")", "\n", "#--------------------Inference Config ------------------------", "\n", "", "else", ":", "\n", "        ", "conf", ".", "facebank_path", "=", "conf", ".", "data_path", "/", "'facebank'", "\n", "conf", ".", "threshold", "=", "1.5", "\n", "conf", ".", "face_limit", "=", "10", "\n", "#when inference, at maximum detect 10 faces in one image, my laptop is slow", "\n", "conf", ".", "min_face_size", "=", "30", "\n", "# the larger this value, the faster deduction, comes with tradeoff in small faces", "\n", "", "return", "conf", "", "", ""]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Flatten.forward": [[11, 13], ["input.view", "input.size"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "view", "(", "input", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.SEModule.__init__": [[20, 30], ["torch.nn.Module.__init__", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sigmoid", "torch.nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "reduction", ")", ":", "\n", "        ", "super", "(", "SEModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.avg_pool = AvgPool2d(feature_shape)", "\n", "self", ".", "avg_pool", "=", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc1", "=", "Conv2d", "(", "\n", "channels", ",", "channels", "//", "reduction", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu", "=", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "fc2", "=", "Conv2d", "(", "\n", "channels", "//", "reduction", ",", "channels", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "sigmoid", "=", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.SEModule.forward": [[31, 39], ["model.SEModule.avg_pool", "model.SEModule.fc1", "model.SEModule.relu", "model.SEModule.fc2", "model.SEModule.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "module_input", "=", "x", "\n", "x", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "sigmoid", "(", "x", ")", "\n", "return", "module_input", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.bottleneck_IR.__init__": [[41, 52], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "MaxPool2d", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "Sequential", "(", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias", "=", "False", ")", ",", "BatchNorm2d", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "Sequential", "(", "\n", "BatchNorm2d", "(", "in_channel", ")", ",", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias", "=", "False", ")", ",", "PReLU", "(", "depth", ")", ",", "\n", "Conv2d", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "BatchNorm2d", "(", "depth", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.bottleneck_IR.forward": [[53, 57], ["model.bottleneck_IR.shortcut_layer", "model.bottleneck_IR.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.bottleneck_IR_SE.__init__": [[59, 74], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "model.SEModule", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR_SE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "MaxPool2d", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "Sequential", "(", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "Sequential", "(", "\n", "BatchNorm2d", "(", "in_channel", ")", ",", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "PReLU", "(", "depth", ")", ",", "\n", "Conv2d", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "depth", ")", ",", "\n", "SEModule", "(", "depth", ",", "16", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.bottleneck_IR_SE.forward": [[75, 79], ["model.bottleneck_IR_SE.shortcut_layer", "model.bottleneck_IR_SE.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.bottleneck_IR_SE_NEW.__init__": [[81, 96], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "model.SEModule", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "depth", ",", "stride", ",", "feature_shape", ")", ":", "\n", "        ", "super", "(", "bottleneck_IR_SE_NEW", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "in_channel", "==", "depth", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "MaxPool2d", "(", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "shortcut_layer", "=", "Sequential", "(", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "1", ",", "1", ")", ",", "stride", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "depth", ")", ")", "\n", "", "self", ".", "res_layer", "=", "Sequential", "(", "\n", "BatchNorm2d", "(", "in_channel", ")", ",", "\n", "Conv2d", "(", "in_channel", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "ReLU", "(", "depth", ")", ",", "\n", "Conv2d", "(", "depth", ",", "depth", ",", "(", "3", ",", "3", ")", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "depth", ")", ",", "\n", "SEModule", "(", "depth", ",", "4", ",", "feature_shape", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.bottleneck_IR_SE_NEW.forward": [[98, 103], ["model.bottleneck_IR_SE_NEW.shortcut_layer", "model.bottleneck_IR_SE_NEW.res_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shortcut", "=", "self", ".", "shortcut_layer", "(", "x", ")", "\n", "res", "=", "self", ".", "res_layer", "(", "x", ")", "\n", "\n", "return", "res", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Backbone.__init__": [[161, 190], ["torch.nn.Module.__init__", "model.get_blocks", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "print", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.PReLU", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Dropout", "torch.nn.Dropout", "model.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "modules.append", "unit_module"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_blocks"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "drop_ratio", ",", "mode", "=", "'ir_se'", ")", ":", "\n", "        ", "super", "(", "Backbone", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "num_layers", "in", "[", "34", ",", "50", ",", "100", ",", "152", "]", ",", "'num_layers should be 50,100, or 152'", "\n", "assert", "mode", "in", "[", "'ir'", ",", "'ir_se'", ",", "'ir_se_new'", "]", ",", "'mode should be ir or ir_se'", "\n", "blocks", "=", "get_blocks", "(", "num_layers", ")", "\n", "if", "mode", "==", "'ir'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR", "\n", "", "elif", "mode", "==", "'ir_se'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR_SE", "\n", "", "elif", "mode", "==", "'ir_se_work'", ":", "\n", "            ", "unit_module", "=", "bottleneck_IR_SE_NEW", "\n", "\n", "", "self", ".", "input_layer", "=", "Sequential", "(", "Conv2d", "(", "3", ",", "64", ",", "(", "3", ",", "3", ")", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "64", ")", ",", "\n", "PReLU", "(", "64", ")", ")", "\n", "self", ".", "output_layer", "=", "Sequential", "(", "BatchNorm2d", "(", "512", ")", ",", "\n", "Dropout", "(", "drop_ratio", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "Linear", "(", "512", "*", "7", "*", "7", ",", "512", ")", ",", "\n", "BatchNorm1d", "(", "512", ")", ")", "\n", "modules", "=", "[", "]", "\n", "for", "block", "in", "blocks", ":", "\n", "            ", "for", "bottleneck", "in", "block", ":", "\n", "                ", "modules", ".", "append", "(", "\n", "unit_module", "(", "bottleneck", ".", "in_channel", ",", "\n", "bottleneck", ".", "depth", ",", "\n", "bottleneck", ".", "stride", ")", ")", "\n", "", "", "self", ".", "body", "=", "Sequential", "(", "*", "modules", ")", "\n", "print", "(", "'model is:'", ",", "mode", ",", "'depth is:'", ",", "num_layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Backbone.forward": [[191, 196], ["model.Backbone.input_layer", "model.Backbone.body", "model.Backbone.output_layer", "model.l2_norm"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "input_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "x", "=", "self", ".", "output_layer", "(", "x", ")", "\n", "return", "l2_norm", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Backbone_work.__init__": [[200, 228], ["torch.nn.Module.__init__", "model.get_blocks", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.AvgPool2d", "torch.nn.AvgPool2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "modules.append", "unit_module"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_blocks"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "drop_ratio", ",", "mode", "=", "'ir_se'", ")", ":", "\n", "        ", "super", "(", "Backbone_work", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "num_layers", "in", "[", "18", ",", "50", ",", "100", ",", "152", "]", ",", "'num_layers should be 50,100, or 152'", "\n", "blocks", "=", "get_blocks", "(", "num_layers", ")", "\n", "unit_module", "=", "bottleneck_IR_SE_NEW", "\n", "self", ".", "input_layer", "=", "Sequential", "(", "Conv2d", "(", "3", ",", "64", ",", "(", "3", ",", "3", ")", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "64", ")", ",", "\n", "ReLU", "(", "64", ")", ")", "\n", "# self.output_layer1 = Sequential(BatchNorm2d(128),", "\n", "#                                 Conv2d(128, 128, (7, 7), 1, 0, bias=False),", "\n", "#                                 ReLU(128))", "\n", "#                                 #Dropout(drop_ratio))   # 128 * 1 * 1", "\n", "\n", "self", ".", "output_layer2", "=", "Sequential", "(", "AvgPool2d", "(", "7", ",", "1", ")", ",", "\n", "BatchNorm2d", "(", "128", ")", ",", "\n", "#Flatten(),", "\n", "#Linear(128, 512),", "\n", "Conv2d", "(", "128", ",", "512", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm2d", "(", "512", ")", ")", "\n", "modules", "=", "[", "]", "\n", "for", "block", "in", "blocks", ":", "\n", "            ", "for", "bottleneck", "in", "block", ":", "\n", "                ", "modules", ".", "append", "(", "\n", "unit_module", "(", "bottleneck", ".", "in_channel", ",", "\n", "bottleneck", ".", "depth", ",", "\n", "bottleneck", ".", "stride", ",", "\n", "bottleneck", ".", "feature_shape", ")", ")", "\n", "", "", "self", ".", "body", "=", "Sequential", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Backbone_work.forward": [[229, 236], ["model.Backbone_work.input_layer", "model.Backbone_work.body", "model.Backbone_work.output_layer2", "x.view.view.view", "model.l2_norm"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "input_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "body", "(", "x", ")", "\n", "# x = self.output_layer1(x)", "\n", "x", "=", "self", ".", "output_layer2", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ")", "\n", "return", "l2_norm", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Conv_block.__init__": [[239, 244], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.PReLU", "torch.nn.PReLU"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Conv_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv2d", "(", "in_c", ",", "out_channels", "=", "out_c", ",", "kernel_size", "=", "kernel", ",", "groups", "=", "groups", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "BatchNorm2d", "(", "out_c", ")", "\n", "self", ".", "prelu", "=", "PReLU", "(", "out_c", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Conv_block.forward": [[244, 249], ["model.Conv_block.conv", "model.Conv_block.bn", "model.Conv_block.prelu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "prelu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Linear_block.__init__": [[252, 256], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Linear_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv2d", "(", "in_c", ",", "out_channels", "=", "out_c", ",", "kernel_size", "=", "kernel", ",", "groups", "=", "groups", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "BatchNorm2d", "(", "out_c", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Linear_block.forward": [[256, 260], ["model.Linear_block.conv", "model.Linear_block.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Depth_Wise.__init__": [[263, 269], ["torch.nn.Module.__init__", "model.Conv_block", "model.Conv_block", "model.Linear_block"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["     ", "def", "__init__", "(", "self", ",", "in_c", ",", "out_c", ",", "residual", "=", "False", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "1", ")", ":", "\n", "        ", "super", "(", "Depth_Wise", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "Conv_block", "(", "in_c", ",", "out_c", "=", "groups", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_dw", "=", "Conv_block", "(", "groups", ",", "groups", ",", "groups", "=", "groups", ",", "kernel", "=", "kernel", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ")", "\n", "self", ".", "project", "=", "Linear_block", "(", "groups", ",", "out_c", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "residual", "=", "residual", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Depth_Wise.forward": [[269, 280], ["model.Depth_Wise.conv", "model.Depth_Wise.conv_dw", "model.Depth_Wise.project"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "residual", ":", "\n", "            ", "short_cut", "=", "x", "\n", "", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_dw", "(", "x", ")", "\n", "x", "=", "self", ".", "project", "(", "x", ")", "\n", "if", "self", ".", "residual", ":", "\n", "            ", "output", "=", "short_cut", "+", "x", "\n", "", "else", ":", "\n", "            ", "output", "=", "x", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Residual.__init__": [[283, 289], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "torch.nn.Sequential", "modules.append", "model.Depth_Wise"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ",", "num_block", ",", "groups", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "        ", "super", "(", "Residual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_block", ")", ":", "\n", "            ", "modules", ".", "append", "(", "Depth_Wise", "(", "c", ",", "c", ",", "residual", "=", "True", ",", "kernel", "=", "kernel", ",", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "groups", "=", "groups", ")", ")", "\n", "", "self", ".", "model", "=", "Sequential", "(", "*", "modules", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Residual.forward": [[289, 291], ["model.Residual.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.MobileFaceNet.__init__": [[294, 310], ["torch.nn.Module.__init__", "model.Conv_block", "model.Conv_block", "model.Depth_Wise", "model.Residual", "model.Depth_Wise", "model.Residual", "model.Depth_Wise", "model.Residual", "model.Conv_block", "model.Linear_block", "model.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "print"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", ")", ":", "\n", "        ", "super", "(", "MobileFaceNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "Conv_block", "(", "3", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv2_dw", "=", "Conv_block", "(", "64", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "64", ")", "\n", "self", ".", "conv_23", "=", "Depth_Wise", "(", "64", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "128", ")", "\n", "self", ".", "conv_3", "=", "Residual", "(", "64", ",", "num_block", "=", "4", ",", "groups", "=", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_34", "=", "Depth_Wise", "(", "64", ",", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "256", ")", "\n", "self", ".", "conv_4", "=", "Residual", "(", "128", ",", "num_block", "=", "6", ",", "groups", "=", "256", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_45", "=", "Depth_Wise", "(", "128", ",", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "512", ")", "\n", "self", ".", "conv_5", "=", "Residual", "(", "128", ",", "num_block", "=", "2", ",", "groups", "=", "256", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_6_sep", "=", "Conv_block", "(", "128", ",", "512", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ")", "\n", "self", ".", "conv_6_dw", "=", "Linear_block", "(", "512", ",", "512", ",", "groups", "=", "512", ",", "kernel", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ")", "\n", "self", ".", "conv_6_flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "linear", "=", "Linear", "(", "512", ",", "embedding_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "BatchNorm1d", "(", "embedding_size", ")", "\n", "print", "(", "'MobileFaceNet model'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.MobileFaceNet.forward": [[311, 338], ["model.MobileFaceNet.conv1", "model.MobileFaceNet.conv2_dw", "model.MobileFaceNet.conv_23", "model.MobileFaceNet.conv_3", "model.MobileFaceNet.conv_34", "model.MobileFaceNet.conv_4", "model.MobileFaceNet.conv_45", "model.MobileFaceNet.conv_5", "model.MobileFaceNet.conv_6_sep", "model.MobileFaceNet.conv_6_dw", "model.MobileFaceNet.conv_6_flatten", "model.MobileFaceNet.linear", "model.MobileFaceNet.bn", "model.l2_norm"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "\n", "out", "=", "self", ".", "conv2_dw", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_23", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_3", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_34", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_4", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_45", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_5", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_6_sep", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_6_dw", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_6_flatten", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "l2_norm", "(", "out", ")", "\n", "# return out", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.MobileFaceNetSoftmax.__init__": [[342, 358], ["torch.nn.Module.__init__", "model.Conv_block", "model.Conv_block", "model.Depth_Wise", "model.Residual", "model.Depth_Wise", "model.Residual", "model.Depth_Wise", "model.Residual", "model.Conv_block", "model.Linear_block", "model.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "print"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", ")", ":", "\n", "        ", "super", "(", "MobileFaceNetSoftmax", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "Conv_block", "(", "3", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv2_dw", "=", "Conv_block", "(", "64", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "64", ")", "\n", "self", ".", "conv_23", "=", "Depth_Wise", "(", "64", ",", "64", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "128", ")", "\n", "self", ".", "conv_3", "=", "Residual", "(", "64", ",", "num_block", "=", "4", ",", "groups", "=", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_34", "=", "Depth_Wise", "(", "64", ",", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "256", ")", "\n", "self", ".", "conv_4", "=", "Residual", "(", "128", ",", "num_block", "=", "6", ",", "groups", "=", "256", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_45", "=", "Depth_Wise", "(", "128", ",", "128", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ",", "groups", "=", "512", ")", "\n", "self", ".", "conv_5", "=", "Residual", "(", "128", ",", "num_block", "=", "2", ",", "groups", "=", "256", ",", "kernel", "=", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "conv_6_sep", "=", "Conv_block", "(", "128", ",", "512", ",", "kernel", "=", "(", "1", ",", "1", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ")", "\n", "self", ".", "conv_6_dw", "=", "Linear_block", "(", "512", ",", "512", ",", "groups", "=", "512", ",", "kernel", "=", "(", "7", ",", "7", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "(", "0", ",", "0", ")", ")", "\n", "self", ".", "conv_6_flatten", "=", "Flatten", "(", ")", "\n", "self", ".", "linear", "=", "Linear", "(", "512", ",", "embedding_size", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "BatchNorm1d", "(", "embedding_size", ")", "\n", "print", "(", "'MobileFaceNet Softmax model, embedding size is:'", ",", "embedding_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.MobileFaceNetSoftmax.forward": [[359, 387], ["model.MobileFaceNetSoftmax.conv1", "model.MobileFaceNetSoftmax.conv2_dw", "model.MobileFaceNetSoftmax.conv_23", "model.MobileFaceNetSoftmax.conv_3", "model.MobileFaceNetSoftmax.conv_34", "model.MobileFaceNetSoftmax.conv_4", "model.MobileFaceNetSoftmax.conv_45", "model.MobileFaceNetSoftmax.conv_5", "model.MobileFaceNetSoftmax.conv_6_sep", "model.MobileFaceNetSoftmax.conv_6_dw", "model.MobileFaceNetSoftmax.conv_6_flatten", "model.MobileFaceNetSoftmax.linear", "model.MobileFaceNetSoftmax.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "\n", "out", "=", "self", ".", "conv2_dw", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_23", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_3", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_34", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_4", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_45", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_5", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_6_sep", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_6_dw", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv_6_flatten", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "# return l2_norm(out)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Arcface.__init__": [[394, 407], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "model.Arcface.kernel.data.uniform_().renorm_().mul_", "math.cos", "math.sin", "math.cos", "print", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "model.Arcface.kernel.data.uniform_().renorm_", "model.Arcface.kernel.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", "=", "512", ",", "classnum", "=", "51332", ",", "s", "=", "64.", ",", "m", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "Arcface", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classnum", "=", "classnum", "\n", "self", ".", "kernel", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "embedding_size", ",", "classnum", ")", ")", "\n", "# initial kernel", "\n", "self", ".", "kernel", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "self", ".", "m", "=", "m", "# the margin value, default is 0.5", "\n", "self", ".", "s", "=", "s", "# scalar value default is 64, see normface https://arxiv.org/abs/1704.06369", "\n", "self", ".", "cos_m", "=", "math", ".", "cos", "(", "m", ")", "\n", "self", ".", "sin_m", "=", "math", ".", "sin", "(", "m", ")", "\n", "self", ".", "mm", "=", "self", ".", "sin_m", "*", "m", "# issue 1", "\n", "self", ".", "threshold", "=", "math", ".", "cos", "(", "math", ".", "pi", "-", "m", ")", "\n", "print", "(", "'Arcface head'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Arcface.forward": [[408, 432], ["len", "model.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "cos_theta.clamp.clamp.clamp", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "# weights norm", "\n", "        ", "nB", "=", "len", "(", "embbedings", ")", "\n", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel", ",", "axis", "=", "0", ")", "\n", "# cos(theta+m)", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", ",", "kernel_norm", ")", "\n", "#         output = torch.mm(embbedings,kernel_norm)", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "# for numerical stability", "\n", "cos_theta_2", "=", "torch", ".", "pow", "(", "cos_theta", ",", "2", ")", "\n", "sin_theta_2", "=", "1", "-", "cos_theta_2", "\n", "sin_theta", "=", "torch", ".", "sqrt", "(", "sin_theta_2", ")", "\n", "cos_theta_m", "=", "(", "cos_theta", "*", "self", ".", "cos_m", "-", "sin_theta", "*", "self", ".", "sin_m", ")", "\n", "# this condition controls the theta+m should in range [0, pi]", "\n", "#      0<=theta+m<=pi", "\n", "#     -m<=theta<=pi-m", "\n", "cond_v", "=", "cos_theta", "-", "self", ".", "threshold", "\n", "cond_mask", "=", "cond_v", "<=", "0", "\n", "keep_val", "=", "(", "cos_theta", "-", "self", ".", "mm", ")", "# when theta not in [0,pi], use cosface instead", "\n", "cos_theta_m", "[", "cond_mask", "]", "=", "keep_val", "[", "cond_mask", "]", "\n", "output", "=", "cos_theta", "*", "1.0", "# a little bit hacky way to prevent in_place operation on cos_theta", "\n", "idx_", "=", "torch", ".", "arange", "(", "0", ",", "nB", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "output", "[", "idx_", ",", "label", "]", "=", "cos_theta_m", "[", "idx_", ",", "label", "]", "\n", "output", "*=", "self", ".", "s", "# scale up in order to make softmax work, first introduced in normface", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.ArcfaceMultiSphere.__init__": [[438, 457], ["torch.nn.Module.__init__", "range", "math.cos", "math.sin", "math.cos", "print", "torch.nn.Parameter", "torch.nn.Parameter", "setattr", "model.ArcfaceMultiSphere.kernel_list.append", "model.ArcfaceMultiSphere.kernel_list[].data.uniform_().renorm_().mul_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "model.ArcfaceMultiSphere.kernel_list[].data.uniform_().renorm_", "model.ArcfaceMultiSphere.kernel_list[].data.uniform_"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", "=", "512", ",", "classnum", "=", "51332", ",", "num_shpere", "=", "4", ",", "s", "=", "64.", ",", "m", "=", "1", "/", "5.0", ")", ":", "\n", "        ", "super", "(", "ArcfaceMultiSphere", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classnum", "=", "classnum", "\n", "self", ".", "num_sphere", "=", "num_shpere", "\n", "self", ".", "kernel_list", "=", "[", "]", "\n", "self", ".", "each_embeding_size", "=", "embedding_size", "//", "num_shpere", "\n", "for", "i", "in", "range", "(", "num_shpere", ")", ":", "\n", "            ", "para", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "each_embeding_size", ",", "classnum", ")", ")", "\n", "setattr", "(", "self", ",", "'para%i'", "%", "i", ",", "para", ")", "\n", "self", ".", "kernel_list", ".", "append", "(", "para", ")", "\n", "self", ".", "kernel_list", "[", "i", "]", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "# initial kernel", "\n", "", "self", ".", "m", "=", "m", "# the margin value, default is 0.5", "\n", "self", ".", "s", "=", "s", "# scalar value default is 64, see normface https://arxiv.org/abs/1704.06369", "\n", "self", ".", "cos_m", "=", "math", ".", "cos", "(", "m", ")", "\n", "self", ".", "sin_m", "=", "math", ".", "sin", "(", "m", ")", "\n", "self", ".", "mm", "=", "self", ".", "sin_m", "*", "m", "# issue 1", "\n", "self", ".", "threshold", "=", "math", ".", "cos", "(", "math", ".", "pi", "-", "m", ")", "\n", "print", "(", "'ArcfaceMultiSphere head'", ",", "'num_sphere is:'", ",", "num_shpere", ",", "'the margin is:'", ",", "m", ")", "\n", "", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.ArcfaceMultiSphere.forward": [[457, 482], ["len", "range", "model.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "cos_theta.clamp.clamp.clamp", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "output_list.append"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "# weights norm", "\n", "        ", "nB", "=", "len", "(", "embbedings", ")", "\n", "output_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "num_sphere", ")", ":", "\n", "            ", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel_list", "[", "i", "]", ",", "axis", "=", "0", ")", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", "[", ":", ",", "i", "*", "self", ".", "each_embeding_size", ":", "(", "i", "+", "1", ")", "*", "self", ".", "each_embeding_size", "]", ",", "kernel_norm", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "\n", "cos_theta_2", "=", "torch", ".", "pow", "(", "cos_theta", ",", "2", ")", "\n", "sin_theta_2", "=", "1", "-", "cos_theta_2", "\n", "sin_theta", "=", "torch", ".", "sqrt", "(", "sin_theta_2", ")", "\n", "cos_theta_m", "=", "(", "cos_theta", "*", "self", ".", "cos_m", "-", "sin_theta", "*", "self", ".", "sin_m", ")", "\n", "\n", "cond_v", "=", "cos_theta", "-", "self", ".", "threshold", "\n", "cond_mask", "=", "cond_v", "<=", "0", "\n", "keep_val", "=", "(", "cos_theta", "-", "self", ".", "mm", ")", "# when theta not in [0,pi], use cosface instead", "\n", "cos_theta_m", "[", "cond_mask", "]", "=", "keep_val", "[", "cond_mask", "]", "\n", "output", "=", "cos_theta", "*", "1.0", "# a little bit hacky way to prevent in_place operation on cos_theta", "\n", "idx_", "=", "torch", ".", "arange", "(", "0", ",", "nB", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "output", "[", "idx_", ",", "label", "]", "=", "cos_theta_m", "[", "idx_", ",", "label", "]", "\n", "output", "*=", "self", ".", "s", "\n", "output_list", ".", "append", "(", "output", ")", "\n", "\n", "", "return", "output_list", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Softmax.__init__": [[490, 498], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "model.Softmax.kernel.data.uniform_().renorm_().mul_", "print", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "model.Softmax.kernel.data.uniform_().renorm_", "model.Softmax.kernel.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", "=", "512", ",", "classnum", "=", "51332", ",", "s", "=", "64.", ")", ":", "\n", "        ", "super", "(", "Softmax", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embedding_size", "=", "embedding_size", "\n", "self", ".", "classnum", "=", "classnum", "\n", "self", ".", "s", "=", "s", "\n", "self", ".", "kernel", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "embedding_size", ",", "classnum", ")", ")", "\n", "self", ".", "kernel", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "print", "(", "'Softmax head'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Softmax.forward": [[500, 505], ["model.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "        ", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel", ",", "axis", "=", "0", ")", "\n", "out", "=", "torch", ".", "mm", "(", "embbedings", ",", "kernel_norm", ")", "\n", "out", "*=", "self", ".", "s", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.MultiSphereSoftmax.__init__": [[510, 523], ["torch.nn.Module.__init__", "range", "print", "torch.nn.Parameter", "torch.nn.Parameter", "setattr", "model.MultiSphereSoftmax.kernel_list.append", "model.MultiSphereSoftmax.kernel_list[].data.uniform_().renorm_().mul_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "model.MultiSphereSoftmax.kernel_list[].data.uniform_().renorm_", "model.MultiSphereSoftmax.kernel_list[].data.uniform_"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", "=", "512", ",", "classnum", "=", "51332", ",", "num_sphere", "=", "4", ",", "s", "=", "64.", ")", ":", "\n", "        ", "super", "(", "MultiSphereSoftmax", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classnum", "=", "classnum", "\n", "self", ".", "num_sphere", "=", "num_sphere", "\n", "self", ".", "s", "=", "s", "\n", "self", ".", "kernel_list", "=", "[", "]", "\n", "self", ".", "each_embeding_size", "=", "embedding_size", "//", "num_sphere", "\n", "for", "i", "in", "range", "(", "num_sphere", ")", ":", "\n", "            ", "para", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "each_embeding_size", ",", "classnum", ")", ")", "\n", "setattr", "(", "self", ",", "'para%i'", "%", "i", ",", "para", ")", "\n", "self", ".", "kernel_list", ".", "append", "(", "para", ")", "\n", "self", ".", "kernel_list", "[", "i", "]", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "", "print", "(", "'MultiSphereSoftmax head'", ",", "'num_sphere is:'", ",", "num_sphere", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.MultiSphereSoftmax.forward": [[524, 532], ["range", "model.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "output_list.append"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "        ", "output_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_sphere", ")", ":", "\n", "            ", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel_list", "[", "i", "]", ",", "axis", "=", "0", ")", "\n", "output", "=", "torch", ".", "mm", "(", "embbedings", "[", ":", ",", "i", "*", "self", ".", "each_embeding_size", ":", "(", "i", "+", "1", ")", "*", "self", ".", "each_embeding_size", "]", ",", "kernel_norm", ")", "\n", "output", "*=", "self", ".", "s", "\n", "output_list", ".", "append", "(", "output", ")", "\n", "", "return", "output_list", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Am_softmax.__init__": [[538, 547], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "model.Am_softmax.kernel.data.uniform_().renorm_().mul_", "print", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "model.Am_softmax.kernel.data.uniform_().renorm_", "model.Am_softmax.kernel.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", "=", "512", ",", "classnum", "=", "51332", ")", ":", "\n", "        ", "super", "(", "Am_softmax", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classnum", "=", "classnum", "\n", "self", ".", "kernel", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "embedding_size", ",", "classnum", ")", ")", "\n", "# initial kernel", "\n", "self", ".", "kernel", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "self", ".", "m", "=", "0.35", "# additive margin recommended by the paper", "\n", "self", ".", "s", "=", "64.", "# see normface https://arxiv.org/abs/1704.06369", "\n", "print", "(", "'Am_softmax head'", ",", "'margin is:'", ",", "self", ".", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.Am_softmax.forward": [[548, 561], ["model.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "cos_theta.clamp.clamp.clamp", "label.view.view.view", "index.byte.byte.scatter_", "index.byte.byte.byte", "label.view.view.data.view"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "        ", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel", ",", "axis", "=", "0", ")", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", ",", "kernel_norm", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "# for numerical stability", "\n", "phi", "=", "cos_theta", "-", "self", ".", "m", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ",", "1", ")", "#size=(B,1)", "\n", "index", "=", "cos_theta", ".", "data", "*", "0.0", "#size=(B,Classnum)", "\n", "index", ".", "scatter_", "(", "1", ",", "label", ".", "data", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "index", "=", "index", ".", "byte", "(", ")", "\n", "output", "=", "cos_theta", "*", "1.0", "\n", "output", "[", "index", "]", "=", "phi", "[", "index", "]", "#only change the correct predicted output", "\n", "output", "*=", "self", ".", "s", "# scale up in order to make softmax work, first introduced in normface", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.MultiAm_softmax.__init__": [[565, 579], ["torch.nn.Module.__init__", "range", "print", "torch.nn.Parameter", "torch.nn.Parameter", "setattr", "model.MultiAm_softmax.kernel_list.append", "model.MultiAm_softmax.kernel_list[].data.uniform_().renorm_().mul_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "model.MultiAm_softmax.kernel_list[].data.uniform_().renorm_", "model.MultiAm_softmax.kernel_list[].data.uniform_"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embedding_size", "=", "512", ",", "classnum", "=", "51332", ",", "num_sphere", "=", "4", ",", "m", "=", "0.35", ")", ":", "\n", "        ", "super", "(", "MultiAm_softmax", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classnum", "=", "classnum", "\n", "self", ".", "num_sphere", "=", "num_sphere", "\n", "self", ".", "kernel_list", "=", "[", "]", "\n", "self", ".", "each_embeding_size", "=", "embedding_size", "//", "num_sphere", "\n", "for", "i", "in", "range", "(", "num_sphere", ")", ":", "\n", "            ", "para", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "each_embeding_size", ",", "classnum", ")", ")", "\n", "setattr", "(", "self", ",", "'para%i'", "%", "i", ",", "para", ")", "\n", "self", ".", "kernel_list", ".", "append", "(", "para", ")", "\n", "self", ".", "kernel_list", "[", "i", "]", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", ".", "renorm_", "(", "2", ",", "1", ",", "1e-5", ")", ".", "mul_", "(", "1e5", ")", "\n", "", "print", "(", "'MultiAm_softmax head'", ",", "'num_sphere is:'", ",", "num_sphere", ",", "'margin is:'", ",", "m", ")", "\n", "self", ".", "m", "=", "m", "# additive margin recommended by the paper", "\n", "self", ".", "s", "=", "64.", "# see normface https://arxiv.org/abs/1704.06369", "\n", "", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.MultiAm_softmax.forward": [[579, 596], ["range", "model.l2_norm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "cos_theta.clamp.clamp.clamp", "label.view.view.view", "index.byte.byte.scatter_", "index.byte.byte.byte", "output_list.append", "label.view.view.data.view"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "forward", "(", "self", ",", "embbedings", ",", "label", ")", ":", "\n", "        ", "output_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_sphere", ")", ":", "\n", "            ", "kernel_norm", "=", "l2_norm", "(", "self", ".", "kernel_list", "[", "i", "]", ",", "axis", "=", "0", ")", "\n", "cos_theta", "=", "torch", ".", "mm", "(", "embbedings", "[", ":", ",", "i", "*", "self", ".", "each_embeding_size", ":", "(", "i", "+", "1", ")", "*", "self", ".", "each_embeding_size", "]", ",", "\n", "kernel_norm", ")", "\n", "cos_theta", "=", "cos_theta", ".", "clamp", "(", "-", "1", ",", "1", ")", "# for numerical stability", "\n", "phi", "=", "cos_theta", "-", "self", ".", "m", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ",", "1", ")", "#size=(B,1)", "\n", "index", "=", "cos_theta", ".", "data", "*", "0.0", "#size=(B,Classnum)", "\n", "index", ".", "scatter_", "(", "1", ",", "label", ".", "data", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "index", "=", "index", ".", "byte", "(", ")", "\n", "output", "=", "cos_theta", "*", "1.0", "\n", "output", "[", "index", "]", "=", "phi", "[", "index", "]", "#only change the correct predicted output", "\n", "output", "*=", "self", ".", "s", "# scale up in order to make softmax work, first introduced in normface", "\n", "output_list", ".", "append", "(", "output", ")", "\n", "", "return", "output_list", "\n", "", "", ""]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm": [[14, 18], ["torch.norm", "torch.norm", "torch.div", "torch.div"], "function", ["None"], ["", "", "def", "l2_norm", "(", "input", ",", "axis", "=", "1", ")", ":", "\n", "    ", "norm", "=", "torch", ".", "norm", "(", "input", ",", "2", ",", "axis", ",", "True", ")", "\n", "output", "=", "torch", ".", "div", "(", "input", ",", "norm", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block": [[110, 112], ["model.Bottleneck", "model.Bottleneck", "range"], "function", ["None"], ["", "def", "get_block", "(", "in_channel", ",", "depth", ",", "num_units", ",", "feature_shape", ",", "stride", "=", "2", ")", ":", "\n", "  ", "return", "[", "Bottleneck", "(", "in_channel", ",", "depth", ",", "stride", ",", "2", "*", "feature_shape", ")", "]", "+", "[", "Bottleneck", "(", "depth", ",", "depth", ",", "1", ",", "feature_shape", ")", "for", "i", "in", "range", "(", "num_units", "-", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_blocks": [[113, 159], ["model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block", "model.get_block"], "function", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.get_block"], ["", "def", "get_blocks", "(", "num_layers", ")", ":", "\n", "    ", "if", "num_layers", "==", "18", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "feature_shape", "=", "56", ",", "num_units", "=", "2", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "96", ",", "feature_shape", "=", "28", ",", "num_units", "=", "2", ")", ",", "\n", "get_block", "(", "in_channel", "=", "96", ",", "depth", "=", "128", ",", "feature_shape", "=", "14", ",", "num_units", "=", "2", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "128", ",", "feature_shape", "=", "7", ",", "num_units", "=", "2", ")", "\n", "]", "\n", "\n", "\n", "# 3M :", "\n", "# blocks = [", "\n", "#     get_block(in_channel=64, depth=64, feature_shape=56, num_units=2),", "\n", "#     get_block(in_channel=64, depth=96, feature_shape=28, num_units=2),", "\n", "#     get_block(in_channel=96, depth=128, feature_shape=14, num_units=2),", "\n", "#     get_block(in_channel=128, depth=256, feature_shape=7, num_units=2)", "\n", "# ]  \u4e0b\u9762\u5168\u8fde\u63a5\u5c42\u4e5f\u662f256", "\n", "", "if", "num_layers", "==", "34", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "4", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "6", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "if", "num_layers", "==", "50", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "feature_shape", "=", "56", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "feature_shape", "=", "28", ",", "num_units", "=", "4", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "feature_shape", "=", "14", ",", "num_units", "=", "14", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "feature_shape", "=", "7", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "100", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "feature_shape", "=", "56", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "feature_shape", "=", "28", ",", "num_units", "=", "13", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "feature_shape", "=", "14", ",", "num_units", "=", "30", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "feature_shape", "=", "7", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "elif", "num_layers", "==", "152", ":", "\n", "        ", "blocks", "=", "[", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "64", ",", "num_units", "=", "3", ")", ",", "\n", "get_block", "(", "in_channel", "=", "64", ",", "depth", "=", "128", ",", "num_units", "=", "8", ")", ",", "\n", "get_block", "(", "in_channel", "=", "128", ",", "depth", "=", "256", ",", "num_units", "=", "36", ")", ",", "\n", "get_block", "(", "in_channel", "=", "256", ",", "depth", "=", "512", ",", "num_units", "=", "3", ")", "\n", "]", "\n", "", "return", "blocks", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.__init__": [[39, 122], ["print", "Learner.parameter_num_cal", "data.data_pipe.get_train_loader", "data.data_pipe.get_val_data", "tensorboardX.SummaryWriter", "model.MobileFaceNet().cuda", "model.Backbone().cuda", "print", "data.data_pipe.get_train_loader", "tensorboardX.SummaryWriter", "utils.separate_bn_paras", "print", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "print", "data.data_pipe.get_val_data", "len", "len", "len", "model.MobileFaceNet", "model.Backbone", "model.ArcfaceMultiSphere().to", "model.Arcface().to", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "model.MultiAm_softmax().to", "model.MultiSphereSoftmax().to", "model.Am_softmax().to", "model.Softmax().to", "model.ArcfaceMultiSphere", "model.Arcface", "model.MultiAm_softmax", "model.MultiSphereSoftmax", "model.Am_softmax", "model.Softmax"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.parameter_num_cal", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_train_loader", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_val_data", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_train_loader", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.separate_bn_paras", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_val_data"], ["    ", "def", "__init__", "(", "self", ",", "conf", ",", "inference", "=", "False", ",", "embedding_size", "=", "512", ")", ":", "\n", "        ", "conf", ".", "embedding_size", "=", "embedding_size", "\n", "print", "(", "conf", ")", "\n", "\n", "\n", "if", "conf", ".", "use_mobilfacenet", ":", "\n", "            ", "self", ".", "model", "=", "MobileFaceNet", "(", "conf", ".", "embedding_size", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "model", "=", "Backbone", "(", "conf", ".", "net_depth", ",", "conf", ".", "drop_ratio", ",", "conf", ".", "net_mode", ")", ".", "cuda", "(", ")", "\n", "print", "(", "'{}_{} model generated'", ".", "format", "(", "conf", ".", "net_mode", ",", "conf", ".", "net_depth", ")", ")", "\n", "\n", "", "parameter_num_cal", "(", "self", ".", "model", ")", "\n", "\n", "\n", "self", ".", "milestones", "=", "conf", ".", "milestones", "\n", "self", ".", "loader", ",", "self", ".", "class_num", "=", "get_train_loader", "(", "conf", ")", "\n", "self", ".", "step", "=", "0", "\n", "self", ".", "agedb_30", ",", "self", ".", "cfp_fp", ",", "self", ".", "lfw", ",", "self", ".", "calfw", ",", "self", ".", "cplfw", ",", "self", ".", "vgg2_fp", ",", "self", ".", "agedb_30_issame", ",", "self", ".", "cfp_fp_issame", ",", "self", ".", "lfw_issame", ",", "self", ".", "calfw_issame", ",", "self", ".", "cplfw_issame", ",", "self", ".", "vgg2_fp_issame", "=", "get_val_data", "(", "self", ".", "loader", ".", "dataset", ".", "root", ".", "parent", ")", "\n", "self", ".", "writer", "=", "SummaryWriter", "(", "conf", ".", "log_path", ")", "\n", "\n", "if", "not", "inference", ":", "\n", "            ", "self", ".", "milestones", "=", "conf", ".", "milestones", "\n", "self", ".", "loader", ",", "self", ".", "class_num", "=", "get_train_loader", "(", "conf", ")", "\n", "\n", "self", ".", "writer", "=", "SummaryWriter", "(", "conf", ".", "log_path", ")", "\n", "self", ".", "step", "=", "0", "\n", "\n", "if", "conf", ".", "multi_sphere", ":", "\n", "                ", "if", "conf", ".", "arcface_loss", ":", "\n", "                    ", "self", ".", "head", "=", "ArcfaceMultiSphere", "(", "embedding_size", "=", "conf", ".", "embedding_size", ",", "classnum", "=", "self", ".", "class_num", ",", "num_shpere", "=", "conf", ".", "num_sphere", ",", "m", "=", "conf", ".", "m", ")", ".", "to", "(", "conf", ".", "device", ")", "\n", "", "elif", "conf", ".", "am_softmax", ":", "\n", "                    ", "self", ".", "head", "=", "MultiAm_softmax", "(", "embedding_size", "=", "conf", ".", "embedding_size", ",", "classnum", "=", "self", ".", "class_num", ",", "num_sphere", "=", "conf", ".", "num_sphere", ",", "m", "=", "conf", ".", "m", ")", ".", "to", "(", "conf", ".", "device", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "head", "=", "MultiSphereSoftmax", "(", "embedding_size", "=", "conf", ".", "embedding_size", ",", "classnum", "=", "self", ".", "class_num", ",", "num_sphere", "=", "conf", ".", "num_sphere", ")", ".", "to", "(", "conf", ".", "device", ")", "\n", "\n", "", "", "else", ":", "\n", "                    ", "if", "conf", ".", "arcface_loss", ":", "\n", "                        ", "self", ".", "head", "=", "Arcface", "(", "embedding_size", "=", "conf", ".", "embedding_size", ",", "classnum", "=", "self", ".", "class_num", ")", ".", "to", "(", "conf", ".", "device", ")", "\n", "", "elif", "conf", ".", "am_softmax", ":", "\n", "                        ", "self", ".", "head", "=", "Am_softmax", "(", "embedding_size", "=", "conf", ".", "embedding_size", ",", "classnum", "=", "self", ".", "class_num", ")", ".", "to", "(", "conf", ".", "device", ")", "\n", "", "else", ":", "\n", "                        ", "self", ".", "head", "=", "Softmax", "(", "embedding_size", "=", "conf", ".", "embedding_size", ",", "classnum", "=", "self", ".", "class_num", ")", ".", "to", "(", "conf", ".", "device", ")", "\n", "\n", "\n", "", "", "paras_only_bn", ",", "paras_wo_bn", "=", "separate_bn_paras", "(", "self", ".", "model", ")", "\n", "\n", "if", "conf", ".", "use_mobilfacenet", ":", "\n", "                ", "if", "conf", ".", "multi_sphere", ":", "\n", "                    ", "self", ".", "optimizer", "=", "optim", ".", "SGD", "(", "[", "\n", "{", "'params'", ":", "paras_wo_bn", "[", ":", "-", "1", "]", ",", "'weight_decay'", ":", "4e-5", "}", ",", "\n", "{", "'params'", ":", "[", "paras_wo_bn", "[", "-", "1", "]", "]", "+", "self", ".", "head", ".", "kernel_list", ",", "'weight_decay'", ":", "4e-4", "}", ",", "\n", "{", "'params'", ":", "paras_only_bn", "}", "\n", "]", ",", "lr", "=", "conf", ".", "lr", ",", "momentum", "=", "conf", ".", "momentum", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "optimizer", "=", "optim", ".", "SGD", "(", "[", "\n", "{", "'params'", ":", "paras_wo_bn", "[", ":", "-", "1", "]", ",", "'weight_decay'", ":", "4e-5", "}", ",", "\n", "{", "'params'", ":", "[", "paras_wo_bn", "[", "-", "1", "]", "]", "+", "[", "self", ".", "head", ".", "kernel", "]", ",", "'weight_decay'", ":", "4e-4", "}", ",", "\n", "{", "'params'", ":", "paras_only_bn", "}", "\n", "]", ",", "lr", "=", "conf", ".", "lr", ",", "momentum", "=", "conf", ".", "momentum", ")", "\n", "", "", "else", ":", "\n", "                ", "if", "conf", ".", "multi_sphere", ":", "\n", "                    ", "self", ".", "optimizer", "=", "optim", ".", "SGD", "(", "[", "\n", "{", "'params'", ":", "paras_wo_bn", "+", "self", ".", "head", ".", "kernel_list", ",", "'weight_decay'", ":", "5e-4", "}", ",", "\n", "{", "'params'", ":", "paras_only_bn", "}", "\n", "]", ",", "lr", "=", "conf", ".", "lr", ",", "momentum", "=", "conf", ".", "momentum", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "optimizer", "=", "optim", ".", "SGD", "(", "[", "\n", "{", "'params'", ":", "paras_wo_bn", "+", "[", "self", ".", "head", ".", "kernel", "]", ",", "'weight_decay'", ":", "5e-4", "}", ",", "\n", "{", "'params'", ":", "paras_only_bn", "}", "\n", "]", ",", "lr", "=", "conf", ".", "lr", ",", "momentum", "=", "conf", ".", "momentum", ")", "\n", "\n", "\n", "", "", "print", "(", "self", ".", "optimizer", ")", "\n", "\n", "self", ".", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "self", ".", "optimizer", ",", "patience", "=", "40", ",", "verbose", "=", "True", ")", "\n", "\n", "print", "(", "'optimizers generated'", ")", "\n", "self", ".", "board_loss_every", "=", "len", "(", "self", ".", "loader", ")", "//", "100", "\n", "self", ".", "evaluate_every", "=", "len", "(", "self", ".", "loader", ")", "//", "10", "\n", "self", ".", "save_every", "=", "len", "(", "self", ".", "loader", ")", "//", "5", "\n", "self", ".", "agedb_30", ",", "self", ".", "cfp_fp", ",", "self", ".", "lfw", ",", "self", ".", "calfw", ",", "self", ".", "cplfw", ",", "self", ".", "vgg2_fp", ",", "self", ".", "agedb_30_issame", ",", "self", ".", "cfp_fp_issame", ",", "self", ".", "lfw_issame", ",", "self", ".", "calfw_issame", ",", "self", ".", "cplfw_issame", ",", "self", ".", "vgg2_fp_issame", "=", "get_val_data", "(", "self", ".", "loader", ".", "dataset", ".", "root", ".", "parent", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "threshold", "=", "conf", ".", "threshold", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.save_state": [[123, 138], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "Learner.face_learner.model.state_dict", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "Learner.face_learner.head.state_dict", "Learner.face_learner.optimizer.state_dict", "utils.get_time", "utils.get_time", "utils.get_time"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.get_time", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.get_time", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.get_time"], ["", "", "def", "save_state", "(", "self", ",", "conf", ",", "accuracy", ",", "to_save_folder", "=", "False", ",", "extra", "=", "None", ",", "model_only", "=", "False", ")", ":", "\n", "        ", "if", "to_save_folder", ":", "\n", "            ", "save_path", "=", "conf", ".", "save_path", "\n", "", "else", ":", "\n", "            ", "save_path", "=", "conf", ".", "model_path", "\n", "", "torch", ".", "save", "(", "\n", "self", ".", "model", ".", "state_dict", "(", ")", ",", "save_path", "/", "\n", "(", "'model_{}_accuracy:{}_step:{}_{}.pth'", ".", "format", "(", "get_time", "(", ")", ",", "accuracy", ",", "self", ".", "step", ",", "extra", ")", ")", ")", "\n", "if", "not", "model_only", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "self", ".", "head", ".", "state_dict", "(", ")", ",", "save_path", "/", "\n", "(", "'head_{}_accuracy:{}_step:{}_{}.pth'", ".", "format", "(", "get_time", "(", ")", ",", "accuracy", ",", "self", ".", "step", ",", "extra", ")", ")", ")", "\n", "torch", ".", "save", "(", "\n", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "save_path", "/", "\n", "(", "'optimizer_{}_accuracy:{}_step:{}_{}.pth'", ".", "format", "(", "get_time", "(", ")", ",", "accuracy", ",", "self", ".", "step", ",", "extra", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.get_new_state": [[139, 151], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "OrderedDict", "torch.load.items", "torch.load.items", "torch.load.items", "k.replace.replace.replace"], "methods", ["None"], ["", "", "def", "get_new_state", "(", "self", ",", "path", ")", ":", "\n", "        ", "state_dict", "=", "torch", ".", "load", "(", "path", ")", "\n", "\n", "from", "collections", "import", "OrderedDict", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "'module'", "not", "in", "k", ":", "\n", "                ", "k", "=", "'module.'", "+", "k", "\n", "", "else", ":", "\n", "                ", "k", "=", "k", ".", "replace", "(", "'features.module.'", ",", "'module.features.'", ")", "\n", "", "new_state_dict", "[", "k", "]", "=", "v", "\n", "", "return", "new_state_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.load_state": [[152, 159], ["Learner.face_learner.model.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "Learner.face_learner.head.load_state_dict", "Learner.face_learner.optimizer.load_state_dict", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "load_state", "(", "self", ",", "save_path", ",", "fixed_str", ",", "model_only", "=", "False", ")", ":", "\n", "        ", "self", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "save_path", "/", "'model_{}'", ".", "format", "(", "fixed_str", ")", ")", ")", "\n", "\n", "if", "not", "model_only", ":", "\n", "            ", "self", ".", "head", ".", "load_state_dict", "(", "torch", ".", "load", "(", "save_path", "/", "'head_{}'", ".", "format", "(", "fixed_str", ")", ")", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "torch", ".", "load", "(", "save_path", "/", "'optimizer_{}'", ".", "format", "(", "fixed_str", ")", ")", ")", "\n", "print", "(", "self", ".", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.board_val": [[160, 168], ["Learner.face_learner.writer.add_scalar", "Learner.face_learner.writer.add_scalar", "Learner.face_learner.writer.add_image", "Learner.face_learner.writer.add_scalar", "Learner.face_learner.writer.add_scalar", "Learner.face_learner.writer.add_scalar", "Learner.face_learner.writer.add_scalar"], "methods", ["None"], ["", "", "def", "board_val", "(", "self", ",", "db_name", ",", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", ")", ":", "\n", "        ", "self", ".", "writer", ".", "add_scalar", "(", "'{}_accuracy'", ".", "format", "(", "db_name", ")", ",", "accuracy", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'{}_best_threshold'", ".", "format", "(", "db_name", ")", ",", "best_threshold", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_image", "(", "'{}_roc_curve'", ".", "format", "(", "db_name", ")", ",", "roc_curve_tensor", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'{}_same_pair_angle_mean'", ".", "format", "(", "db_name", ")", ",", "angle_info", "[", "'same_pair_angle_mean'", "]", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'{}_same_pair_angle_var'", ".", "format", "(", "db_name", ")", ",", "angle_info", "[", "'same_pair_angle_var'", "]", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'{}_diff_pair_angle_mean'", ".", "format", "(", "db_name", ")", ",", "angle_info", "[", "'diff_pair_angle_mean'", "]", ",", "self", ".", "step", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'{}_diff_pair_angle_var'", ".", "format", "(", "db_name", ")", ",", "angle_info", "[", "'diff_pair_angle_var'", "]", ",", "self", ".", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate": [[169, 197], ["Learner.face_learner.model.eval", "numpy.zeros", "verifacation.evaluate", "utils.gen_plot", "PIL.Image.open", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torchvision.transforms.ToTensor", "accuracy.mean", "best_thresholds.mean", "len", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "utils.hflip_batch", "utils.hflip_batch", "Learner.face_learner.model", "Learner.face_learner.model", "model.l2_norm().cpu", "Learner.face_learner.model().cpu", "Learner.face_learner.model", "Learner.face_learner.model", "model.l2_norm().cpu", "Learner.face_learner.model().cpu", "torch.tensor.to", "torch.tensor.to", "torch.tensor.to", "utils.hflip_batch.to", "torch.tensor.to", "torch.tensor.to", "torch.tensor.to", "utils.hflip_batch.to", "model.l2_norm", "Learner.face_learner.model", "model.l2_norm", "Learner.face_learner.model", "torch.tensor.to", "torch.tensor.to", "torch.tensor.to", "torch.tensor.to", "torch.tensor.to", "torch.tensor.to"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.gen_plot", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.hflip_batch", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.hflip_batch", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "evaluate", "(", "self", ",", "conf", ",", "carray", ",", "issame", ",", "nrof_folds", "=", "10", ",", "tta", "=", "False", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "idx", "=", "0", "\n", "embeddings", "=", "np", ".", "zeros", "(", "[", "len", "(", "carray", ")", ",", "conf", ".", "embedding_size", "//", "n", "]", ")", "\n", "i", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "while", "idx", "+", "conf", ".", "batch_size", "<=", "len", "(", "carray", ")", ":", "\n", "                ", "batch", "=", "torch", ".", "tensor", "(", "carray", "[", "idx", ":", "idx", "+", "conf", ".", "batch_size", "]", ")", "\n", "if", "tta", ":", "\n", "                    ", "fliped", "=", "hflip_batch", "(", "batch", ")", "\n", "emb_batch", "=", "self", ".", "model", "(", "batch", ".", "to", "(", "conf", ".", "device", ")", ")", "+", "self", ".", "model", "(", "fliped", ".", "to", "(", "conf", ".", "device", ")", ")", "\n", "embeddings", "[", "idx", ":", "idx", "+", "conf", ".", "batch_size", "]", "=", "l2_norm", "(", "emb_batch", ")", ".", "cpu", "(", ")", "[", ":", ",", "i", "*", "conf", ".", "embedding_size", "//", "n", ":", "(", "i", "+", "1", ")", "*", "conf", ".", "embedding_size", "//", "n", "]", "\n", "", "else", ":", "\n", "                    ", "embeddings", "[", "idx", ":", "idx", "+", "conf", ".", "batch_size", "]", "=", "self", ".", "model", "(", "batch", ".", "to", "(", "conf", ".", "device", ")", ")", ".", "cpu", "(", ")", "[", ":", ",", "i", "*", "conf", ".", "embedding_size", "//", "n", ":", "(", "i", "+", "1", ")", "*", "conf", ".", "embedding_size", "//", "n", "]", "\n", "", "idx", "+=", "conf", ".", "batch_size", "\n", "", "if", "idx", "<", "len", "(", "carray", ")", ":", "\n", "                ", "batch", "=", "torch", ".", "tensor", "(", "carray", "[", "idx", ":", "]", ")", "\n", "if", "tta", ":", "\n", "                    ", "fliped", "=", "hflip_batch", "(", "batch", ")", "\n", "emb_batch", "=", "self", ".", "model", "(", "batch", ".", "to", "(", "conf", ".", "device", ")", ")", "+", "self", ".", "model", "(", "fliped", ".", "to", "(", "conf", ".", "device", ")", ")", "\n", "embeddings", "[", "idx", ":", "]", "=", "l2_norm", "(", "emb_batch", ")", ".", "cpu", "(", ")", "[", ":", ",", "i", "*", "conf", ".", "embedding_size", "//", "n", ":", "(", "i", "+", "1", ")", "*", "conf", ".", "embedding_size", "//", "n", "]", "\n", "", "else", ":", "\n", "                    ", "embeddings", "[", "idx", ":", "]", "=", "self", ".", "model", "(", "batch", ".", "to", "(", "conf", ".", "device", ")", ")", ".", "cpu", "(", ")", "[", ":", ",", "i", "*", "conf", ".", "embedding_size", "//", "n", ":", "(", "i", "+", "1", ")", "*", "conf", ".", "embedding_size", "//", "n", "]", "\n", "", "", "", "tpr", ",", "fpr", ",", "accuracy", ",", "best_thresholds", ",", "angle_info", "=", "evaluate", "(", "embeddings", ",", "issame", ",", "nrof_folds", ")", "\n", "buf", "=", "gen_plot", "(", "fpr", ",", "tpr", ")", "\n", "roc_curve", "=", "Image", ".", "open", "(", "buf", ")", "\n", "roc_curve_tensor", "=", "trans", ".", "ToTensor", "(", ")", "(", "roc_curve", ")", "\n", "return", "accuracy", ".", "mean", "(", ")", ",", "best_thresholds", ".", "mean", "(", ")", ",", "roc_curve_tensor", ",", "angle_info", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.find_lr": [[198, 262], ["Learner.face_learner.model.train", "tqdm.tqdm.tqdm", "len", "enumerate", "imgs.to.to.to", "labels.to.to.to", "Learner.face_learner.optimizer.zero_grad", "Learner.face_learner.model", "Learner.face_learner.head", "Learner.face_learner.writer.add_scalar", "Learner.face_learner.writer.add_scalar", "losses.append", "log_lrs.append", "Learner.face_learner.writer.add_scalar", "conf.ce_loss.backward", "Learner.face_learner.optimizer.step", "conf.ce_loss", "conf.ce_loss", "print", "matplotlib.pyplot.plot", "math.log10", "math.log10", "matplotlib.pyplot.plot", "conf.ce_loss.item", "conf.ce_loss"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.train"], ["", "def", "find_lr", "(", "self", ",", "\n", "conf", ",", "\n", "init_value", "=", "1e-8", ",", "\n", "final_value", "=", "10.", ",", "\n", "beta", "=", "0.98", ",", "\n", "bloding_scale", "=", "3.", ",", "\n", "num", "=", "None", ")", ":", "\n", "        ", "if", "not", "num", ":", "\n", "            ", "num", "=", "len", "(", "self", ".", "loader", ")", "\n", "", "mult", "=", "(", "final_value", "/", "init_value", ")", "**", "(", "1", "/", "num", ")", "\n", "lr", "=", "init_value", "\n", "for", "params", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "            ", "params", "[", "'lr'", "]", "=", "lr", "\n", "", "self", ".", "model", ".", "train", "(", ")", "\n", "avg_loss", "=", "0.", "\n", "best_loss", "=", "0.", "\n", "batch_num", "=", "0", "\n", "losses", "=", "[", "]", "\n", "log_lrs", "=", "[", "]", "\n", "for", "i", ",", "(", "imgs", ",", "labels", ")", "in", "tqdm", "(", "enumerate", "(", "self", ".", "loader", ")", ",", "total", "=", "num", ")", ":", "\n", "\n", "            ", "imgs", "=", "imgs", ".", "to", "(", "conf", ".", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "conf", ".", "device", ")", "\n", "batch_num", "+=", "1", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "embeddings", "=", "self", ".", "model", "(", "imgs", ")", "\n", "thetas", "=", "self", ".", "head", "(", "embeddings", ",", "labels", ")", "\n", "if", "conf", ".", "multi_sphere", ":", "\n", "                ", "loss", "=", "conf", ".", "ce_loss", "(", "thetas", "[", "0", "]", ",", "labels", ")", "\n", "for", "theta", "in", "thetas", "[", "1", ":", "]", ":", "\n", "                    ", "loss", "=", "loss", "+", "conf", ".", "ce_loss", "(", "theta", ",", "labels", ")", "\n", "", "", "else", ":", "\n", "                ", "loss", "=", "conf", ".", "ce_loss", "(", "thetas", ",", "labels", ")", "\n", "\n", "#Compute the smoothed loss", "\n", "", "avg_loss", "=", "beta", "*", "avg_loss", "+", "(", "1", "-", "beta", ")", "*", "loss", ".", "item", "(", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'avg_loss'", ",", "avg_loss", ",", "batch_num", ")", "\n", "smoothed_loss", "=", "avg_loss", "/", "(", "1", "-", "beta", "**", "batch_num", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'smoothed_loss'", ",", "smoothed_loss", ",", "batch_num", ")", "\n", "#Stop if the loss is exploding", "\n", "if", "batch_num", ">", "1", "and", "smoothed_loss", ">", "bloding_scale", "*", "best_loss", ":", "\n", "                ", "print", "(", "'exited with best_loss at {}'", ".", "format", "(", "best_loss", ")", ")", "\n", "plt", ".", "plot", "(", "log_lrs", "[", "10", ":", "-", "5", "]", ",", "losses", "[", "10", ":", "-", "5", "]", ")", "\n", "return", "log_lrs", ",", "losses", "\n", "#Record the best loss", "\n", "", "if", "smoothed_loss", "<", "best_loss", "or", "batch_num", "==", "1", ":", "\n", "                ", "best_loss", "=", "smoothed_loss", "\n", "#Store the values", "\n", "", "losses", ".", "append", "(", "smoothed_loss", ")", "\n", "log_lrs", ".", "append", "(", "math", ".", "log10", "(", "lr", ")", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'log_lr'", ",", "math", ".", "log10", "(", "lr", ")", ",", "batch_num", ")", "\n", "#Do the SGD step", "\n", "#Update the lr for the next step", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "lr", "*=", "mult", "\n", "for", "params", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "                ", "params", "[", "'lr'", "]", "=", "lr", "\n", "", "if", "batch_num", ">", "num", ":", "\n", "                ", "plt", ".", "plot", "(", "log_lrs", "[", "10", ":", "-", "5", "]", ",", "losses", "[", "10", ":", "-", "5", "]", ")", "\n", "return", "log_lrs", ",", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.model_evaluation": [[263, 285], ["Learner.face_learner.model.load_state_dict", "Learner.face_learner.evaluate", "print", "Learner.face_learner.evaluate", "print", "Learner.face_learner.evaluate", "print", "Learner.face_learner.evaluate", "print", "Learner.face_learner.evaluate", "print", "Learner.face_learner.evaluate", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate"], ["", "", "", "def", "model_evaluation", "(", "self", ",", "conf", ")", ":", "\n", "        ", "self", ".", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "conf", ".", "pretrained_model_path", ")", ")", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "agedb_30", ",", "\n", "self", ".", "agedb_30_issame", ",", "tta", "=", "True", ")", "\n", "print", "(", "'age_db_acc:'", ",", "accuracy", ")", "\n", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "lfw", ",", "self", ".", "lfw_issame", ",", "tta", "=", "True", ")", "\n", "print", "(", "'lfw_acc:'", ",", "accuracy", ")", "\n", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "cfp_fp", ",", "\n", "self", ".", "cfp_fp_issame", ",", "tta", "=", "True", ")", "\n", "print", "(", "'cfp_acc:'", ",", "accuracy", ")", "\n", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "calfw", ",", "self", ".", "calfw_issame", ",", "tta", "=", "True", ")", "\n", "print", "(", "'calfw_acc:'", ",", "accuracy", ")", "\n", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "cplfw", ",", "self", ".", "cplfw_issame", ",", "tta", "=", "True", ")", "\n", "print", "(", "'cplfw_acc:'", ",", "accuracy", ")", "\n", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "vgg2_fp", ",", "\n", "self", ".", "vgg2_fp_issame", ",", "tta", "=", "True", ")", "\n", "print", "(", "'vgg2_acc:'", ",", "accuracy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.train": [[286, 373], ["Learner.face_learner.model.train", "logging.basicConfig", "logging.info", "range", "Learner.face_learner.model_evaluation", "sys.exit", "print", "tqdm.tqdm.tqdm", "Learner.face_learner.schedule_lr", "Learner.face_learner.schedule_lr", "Learner.face_learner.schedule_lr", "iter", "Learner.face_learner.model.train", "imgs.to.to.to", "labels.to.to.to", "Learner.face_learner.model", "Learner.face_learner.head", "conf.ce_loss.item", "Learner.face_learner.optimizer.zero_grad", "conf.ce_loss.backward", "Learner.face_learner.optimizer.step", "conf.ce_loss", "conf.ce_loss", "Learner.face_learner.writer.add_scalar", "Learner.face_learner.evaluate", "print", "Learner.face_learner.board_val", "logging.info", "Learner.face_learner.evaluate", "print", "Learner.face_learner.board_val", "logging.info", "Learner.face_learner.evaluate", "print", "Learner.face_learner.board_val", "logging.info", "Learner.face_learner.evaluate", "print", "Learner.face_learner.board_val", "logging.info", "Learner.face_learner.evaluate", "print", "Learner.face_learner.board_val", "logging.info", "Learner.face_learner.evaluate", "print", "Learner.face_learner.board_val", "logging.info", "Learner.face_learner.model.train", "conf.ce_loss"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.train", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.model_evaluation", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.schedule_lr", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.schedule_lr", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.schedule_lr", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.train", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.board_val", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.board_val", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.board_val", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.board_val", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.board_val", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.evaluate", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.board_val", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.train"], ["", "def", "train", "(", "self", ",", "conf", ",", "epochs", ")", ":", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "running_loss", "=", "0.", "\n", "\n", "if", "conf", ".", "pretrain", ":", "\n", "            ", "self", ".", "model_evaluation", "(", "conf", ")", "\n", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "", "logging", ".", "basicConfig", "(", "filename", "=", "conf", ".", "log_path", "/", "'log.txt'", ",", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "format", "=", "\"%(asctime)s %(name)s %(levelname)s %(message)s\"", ",", "\n", "datefmt", "=", "'%Y-%m-%d  %H:%M:%S %a'", ")", "\n", "logging", ".", "info", "(", "'\\n******\\nnum of sphere is: {},\\nnet is: {},\\ndepth is: {},\\nlr is: {},\\nbatch size is: {}\\n******'", "\n", ".", "format", "(", "conf", ".", "num_sphere", ",", "conf", ".", "net_mode", ",", "conf", ".", "net_depth", ",", "conf", ".", "lr", ",", "conf", ".", "batch_size", ")", ")", "\n", "for", "e", "in", "range", "(", "epochs", ")", ":", "\n", "            ", "print", "(", "'epoch {} started,all is {}'", ".", "format", "(", "e", ",", "epochs", ")", ")", "\n", "if", "e", "==", "self", ".", "milestones", "[", "0", "]", ":", "\n", "                ", "self", ".", "schedule_lr", "(", ")", "\n", "", "if", "e", "==", "self", ".", "milestones", "[", "1", "]", ":", "\n", "                ", "self", ".", "schedule_lr", "(", ")", "\n", "", "if", "e", "==", "self", ".", "milestones", "[", "2", "]", ":", "\n", "                ", "self", ".", "schedule_lr", "(", ")", "\n", "\n", "\n", "", "for", "imgs", ",", "labels", "in", "tqdm", "(", "iter", "(", "self", ".", "loader", ")", ")", ":", "\n", "                ", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "imgs", "=", "imgs", ".", "to", "(", "conf", ".", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "conf", ".", "device", ")", "\n", "embeddings", "=", "self", ".", "model", "(", "imgs", ")", "\n", "thetas", "=", "self", ".", "head", "(", "embeddings", ",", "labels", ")", "\n", "\n", "if", "conf", ".", "multi_sphere", ":", "\n", "                    ", "loss", "=", "conf", ".", "ce_loss", "(", "thetas", "[", "0", "]", ",", "labels", ")", "\n", "for", "theta", "in", "thetas", "[", "1", ":", "]", ":", "\n", "                        ", "loss", "=", "loss", "+", "conf", ".", "ce_loss", "(", "theta", ",", "labels", ")", "\n", "", "", "else", ":", "\n", "                    ", "loss", "=", "conf", ".", "ce_loss", "(", "thetas", ",", "labels", ")", "\n", "\n", "", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "self", ".", "step", "%", "self", ".", "board_loss_every", "==", "0", "and", "self", ".", "step", "!=", "0", ":", "\n", "                    ", "loss_board", "=", "running_loss", "/", "self", ".", "board_loss_every", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train_loss'", ",", "loss_board", ",", "self", ".", "step", ")", "\n", "running_loss", "=", "0.", "\n", "\n", "", "if", "self", ".", "step", "%", "self", ".", "evaluate_every", "==", "0", "and", "self", ".", "step", "!=", "0", ":", "\n", "                    ", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "agedb_30", ",", "self", ".", "agedb_30_issame", ")", "\n", "print", "(", "'age_db_acc:'", ",", "accuracy", ")", "\n", "self", ".", "board_val", "(", "'agedb_30'", ",", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", ")", "\n", "logging", ".", "info", "(", "'agedb_30 acc: {}'", ".", "format", "(", "accuracy", ")", ")", "\n", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "lfw", ",", "self", ".", "lfw_issame", ")", "\n", "print", "(", "'lfw_acc:'", ",", "accuracy", ")", "\n", "self", ".", "board_val", "(", "'lfw'", ",", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", ")", "\n", "logging", ".", "info", "(", "'lfw acc: {}'", ".", "format", "(", "accuracy", ")", ")", "\n", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "cfp_fp", ",", "self", ".", "cfp_fp_issame", ")", "\n", "print", "(", "'cfp_acc:'", ",", "accuracy", ")", "\n", "self", ".", "board_val", "(", "'cfp'", ",", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", ")", "\n", "logging", ".", "info", "(", "'cfp acc: {}'", ".", "format", "(", "accuracy", ")", ")", "\n", "\n", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "calfw", ",", "self", ".", "calfw_issame", ")", "\n", "print", "(", "'calfw_acc:'", ",", "accuracy", ")", "\n", "self", ".", "board_val", "(", "'calfw'", ",", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", ")", "\n", "logging", ".", "info", "(", "'calfw acc: {}'", ".", "format", "(", "accuracy", ")", ")", "\n", "\n", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "cplfw", ",", "self", ".", "cplfw_issame", ")", "\n", "print", "(", "'cplfw_acc:'", ",", "accuracy", ")", "\n", "self", ".", "board_val", "(", "'cplfw'", ",", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", ")", "\n", "logging", ".", "info", "(", "'cplfw acc: {}'", ".", "format", "(", "accuracy", ")", ")", "\n", "\n", "\n", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", "=", "self", ".", "evaluate", "(", "conf", ",", "self", ".", "vgg2_fp", ",", "\n", "self", ".", "vgg2_fp_issame", ")", "\n", "print", "(", "'vgg2_acc:'", ",", "accuracy", ")", "\n", "self", ".", "board_val", "(", "'vgg2'", ",", "accuracy", ",", "best_threshold", ",", "roc_curve_tensor", ",", "angle_info", ")", "\n", "logging", ".", "info", "(", "'vgg2_fp acc: {}'", ".", "format", "(", "accuracy", ")", ")", "\n", "\n", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "", "self", ".", "step", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.schedule_lr": [[375, 381], ["print"], "methods", ["None"], ["", "", "", "def", "schedule_lr", "(", "self", ")", ":", "\n", "        ", "for", "params", "in", "self", ".", "optimizer_corr", ".", "param_groups", ":", "\n", "            ", "params", "[", "'lr'", "]", "/=", "10", "\n", "", "for", "params", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "            ", "params", "[", "'lr'", "]", "/=", "10", "\n", "", "print", "(", "self", ".", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.infer": [[382, 405], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "target_embs.transpose().unsqueeze", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torchvision.transforms.functional.hflip", "Learner.face_learner.model", "Learner.face_learner.model", "embs.append", "embs.append", "conf.test_transform().to().unsqueeze", "conf.test_transform().to().unsqueeze", "model.l2_norm", "Learner.face_learner.model", "target_embs.transpose", "conf.test_transform().to().unsqueeze", "conf.test_transform().to", "conf.test_transform().to", "conf.test_transform().to", "conf.test_transform", "conf.test_transform", "conf.test_transform"], "methods", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "infer", "(", "self", ",", "conf", ",", "faces", ",", "target_embs", ",", "tta", "=", "False", ")", ":", "\n", "        ", "'''\n        faces : list of PIL Image\n        target_embs : [n, 512] computed embeddings of faces in facebank\n        names : recorded names of faces in facebank\n        tta : test time augmentation (hfilp, that's all)\n        '''", "\n", "embs", "=", "[", "]", "\n", "for", "img", "in", "faces", ":", "\n", "            ", "if", "tta", ":", "\n", "                ", "mirror", "=", "trans", ".", "functional", ".", "hflip", "(", "img", ")", "\n", "emb", "=", "self", ".", "model", "(", "conf", ".", "test_transform", "(", "img", ")", ".", "to", "(", "conf", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ")", "\n", "emb_mirror", "=", "self", ".", "model", "(", "conf", ".", "test_transform", "(", "mirror", ")", ".", "to", "(", "conf", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ")", "\n", "embs", ".", "append", "(", "l2_norm", "(", "emb", "+", "emb_mirror", ")", ")", "\n", "", "else", ":", "\n", "                ", "embs", ".", "append", "(", "self", ".", "model", "(", "conf", ".", "test_transform", "(", "img", ")", ".", "to", "(", "conf", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ")", ")", "\n", "", "", "source_embs", "=", "torch", ".", "cat", "(", "embs", ")", "\n", "\n", "diff", "=", "source_embs", ".", "unsqueeze", "(", "-", "1", ")", "-", "target_embs", ".", "transpose", "(", "1", ",", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "dist", "=", "torch", ".", "sum", "(", "torch", ".", "pow", "(", "diff", ",", "2", ")", ",", "dim", "=", "1", ")", "\n", "minimum", ",", "min_idx", "=", "torch", ".", "min", "(", "dist", ",", "dim", "=", "1", ")", "\n", "min_idx", "[", "minimum", ">", "self", ".", "threshold", "]", "=", "-", "1", "# if no match, set idx to -1", "\n", "return", "min_idx", ",", "minimum", "", "", "", ""]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.parameter_num_cal": [[27, 36], ["list", "print", "net.parameters", "i.size", "str"], "function", ["None"], ["def", "parameter_num_cal", "(", "net", ")", ":", "\n", "    ", "params", "=", "list", "(", "net", ".", "parameters", "(", ")", ")", "\n", "k", "=", "0", "\n", "for", "i", "in", "params", ":", "\n", "        ", "l", "=", "1", "\n", "for", "j", "in", "i", ".", "size", "(", ")", ":", "\n", "            ", "l", "*=", "j", "\n", "", "k", "=", "k", "+", "l", "\n", "", "print", "(", "\"Paras:\"", "+", "str", "(", "k", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.separate_bn_paras": [[14, 30], ["isinstance", "str", "str", "modules.modules", "str", "paras_only_bn.extend", "paras_wo_bn.extend", "layer.parameters", "layer.parameters"], "function", ["None"], ["def", "separate_bn_paras", "(", "modules", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "modules", ",", "list", ")", ":", "\n", "        ", "modules", "=", "[", "*", "modules", ".", "modules", "(", ")", "]", "\n", "", "paras_only_bn", "=", "[", "]", "\n", "paras_wo_bn", "=", "[", "]", "\n", "for", "layer", "in", "modules", ":", "\n", "        ", "if", "'model'", "in", "str", "(", "layer", ".", "__class__", ")", ":", "\n", "            ", "continue", "\n", "", "if", "'container'", "in", "str", "(", "layer", ".", "__class__", ")", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "if", "'batchnorm'", "in", "str", "(", "layer", ".", "__class__", ")", ":", "\n", "                ", "paras_only_bn", ".", "extend", "(", "[", "*", "layer", ".", "parameters", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "                ", "paras_wo_bn", ".", "extend", "(", "[", "*", "layer", ".", "parameters", "(", ")", "]", ")", "\n", "", "", "", "return", "paras_only_bn", ",", "paras_wo_bn", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.prepare_facebank": [[31, 68], ["model.eval", "conf.facebank_path.iterdir", "torch.cat", "numpy.array", "torch.save", "numpy.save", "path.is_file", "torch.cat().mean", "torch.cat.append", "np.array.append", "path.iterdir", "len", "torch.cat", "file.is_file", "PIL.Image.open", "mtcnn.align", "torch.no_grad", "torchvision.transforms.functional.hflip", "model", "model", "embs.append", "embs.append", "conf.test_transform().to().unsqueeze", "conf.test_transform().to().unsqueeze", "model.l2_norm", "model", "conf.test_transform().to().unsqueeze", "conf.test_transform().to", "conf.test_transform().to", "conf.test_transform().to", "conf.test_transform", "conf.test_transform", "conf.test_transform"], "function", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.model.l2_norm"], ["", "def", "prepare_facebank", "(", "conf", ",", "model", ",", "mtcnn", ",", "tta", "=", "True", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "embeddings", "=", "[", "]", "\n", "names", "=", "[", "'Unknown'", "]", "\n", "for", "path", "in", "conf", ".", "facebank_path", ".", "iterdir", "(", ")", ":", "\n", "        ", "if", "path", ".", "is_file", "(", ")", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "embs", "=", "[", "]", "\n", "for", "file", "in", "path", ".", "iterdir", "(", ")", ":", "\n", "                ", "if", "not", "file", ".", "is_file", "(", ")", ":", "\n", "                    ", "continue", "\n", "", "else", ":", "\n", "                    ", "try", ":", "\n", "                        ", "img", "=", "Image", ".", "open", "(", "file", ")", "\n", "", "except", ":", "\n", "                        ", "continue", "\n", "", "if", "img", ".", "size", "!=", "(", "112", ",", "112", ")", ":", "\n", "                        ", "img", "=", "mtcnn", ".", "align", "(", "img", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                        ", "if", "tta", ":", "\n", "                            ", "mirror", "=", "trans", ".", "functional", ".", "hflip", "(", "img", ")", "\n", "emb", "=", "model", "(", "conf", ".", "test_transform", "(", "img", ")", ".", "to", "(", "conf", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ")", "\n", "emb_mirror", "=", "model", "(", "conf", ".", "test_transform", "(", "mirror", ")", ".", "to", "(", "conf", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ")", "\n", "embs", ".", "append", "(", "l2_norm", "(", "emb", "+", "emb_mirror", ")", ")", "\n", "", "else", ":", "\n", "                            ", "embs", ".", "append", "(", "model", "(", "conf", ".", "test_transform", "(", "img", ")", ".", "to", "(", "conf", ".", "device", ")", ".", "unsqueeze", "(", "0", ")", ")", ")", "\n", "", "", "", "", "", "if", "len", "(", "embs", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "embedding", "=", "torch", ".", "cat", "(", "embs", ")", ".", "mean", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "embeddings", ".", "append", "(", "embedding", ")", "\n", "names", ".", "append", "(", "path", ".", "name", ")", "\n", "", "embeddings", "=", "torch", ".", "cat", "(", "embeddings", ")", "\n", "names", "=", "np", ".", "array", "(", "names", ")", "\n", "torch", ".", "save", "(", "embeddings", ",", "conf", ".", "facebank_path", "/", "'facebank.pth'", ")", "\n", "np", ".", "save", "(", "conf", ".", "facebank_path", "/", "'names'", ",", "names", ")", "\n", "return", "embeddings", ",", "names", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.load_facebank": [[69, 73], ["torch.load", "numpy.load"], "function", ["None"], ["", "def", "load_facebank", "(", "conf", ")", ":", "\n", "    ", "embeddings", "=", "torch", ".", "load", "(", "conf", ".", "facebank_path", "/", "'facebank.pth'", ")", "\n", "names", "=", "np", ".", "load", "(", "conf", ".", "facebank_path", "/", "'names.npy'", ")", "\n", "return", "embeddings", ",", "names", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.face_reader": [[74, 112], ["learner.infer", "print", "print", "conn.recv", "mtcnn.align_multi", "len", "print", "bboxes.reshape.astype", "bboxes.reshape.reshape", "range", "range", "range", "range", "len", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.Learner.face_learner.infer"], ["", "def", "face_reader", "(", "conf", ",", "conn", ",", "flag", ",", "boxes_arr", ",", "result_arr", ",", "learner", ",", "mtcnn", ",", "targets", ",", "tta", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "try", ":", "\n", "            ", "image", "=", "conn", ".", "recv", "(", ")", "\n", "", "except", ":", "\n", "            ", "continue", "\n", "", "try", ":", "\n", "            ", "bboxes", ",", "faces", "=", "mtcnn", ".", "align_multi", "(", "image", ",", "limit", "=", "conf", ".", "face_limit", ")", "\n", "", "except", ":", "\n", "            ", "bboxes", "=", "[", "]", "\n", "\n", "", "results", "=", "learner", ".", "infer", "(", "conf", ",", "faces", ",", "targets", ",", "tta", ")", "\n", "\n", "if", "len", "(", "bboxes", ")", ">", "0", ":", "\n", "            ", "print", "(", "'bboxes in reader : {}'", ".", "format", "(", "bboxes", ")", ")", "\n", "bboxes", "=", "bboxes", "[", ":", ",", ":", "-", "1", "]", "#shape:[10,4],only keep 10 highest possibiity faces", "\n", "bboxes", "=", "bboxes", ".", "astype", "(", "int", ")", "\n", "bboxes", "=", "bboxes", "+", "[", "-", "1", ",", "-", "1", ",", "1", ",", "1", "]", "# personal choice            ", "\n", "assert", "bboxes", ".", "shape", "[", "0", "]", "==", "results", ".", "shape", "[", "0", "]", ",", "'bbox and faces number not same'", "\n", "bboxes", "=", "bboxes", ".", "reshape", "(", "[", "-", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "boxes_arr", ")", ")", ":", "\n", "                ", "if", "i", "<", "len", "(", "bboxes", ")", ":", "\n", "                    ", "boxes_arr", "[", "i", "]", "=", "bboxes", "[", "i", "]", "\n", "", "else", ":", "\n", "                    ", "boxes_arr", "[", "i", "]", "=", "0", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "result_arr", ")", ")", ":", "\n", "                ", "if", "i", "<", "len", "(", "results", ")", ":", "\n", "                    ", "result_arr", "[", "i", "]", "=", "results", "[", "i", "]", "\n", "", "else", ":", "\n", "                    ", "result_arr", "[", "i", "]", "=", "-", "1", "\n", "", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "boxes_arr", ")", ")", ":", "\n", "                ", "boxes_arr", "[", "i", "]", "=", "0", "# by default,it's all 0", "\n", "", "for", "i", "in", "range", "(", "len", "(", "result_arr", ")", ")", ":", "\n", "                ", "result_arr", "[", "i", "]", "=", "-", "1", "# by default,it's all -1", "\n", "", "", "print", "(", "'boxes_arr \uff1a {}'", ".", "format", "(", "boxes_arr", "[", ":", "4", "]", ")", ")", "\n", "print", "(", "'result_arr \uff1a {}'", ".", "format", "(", "result_arr", "[", ":", "4", "]", ")", ")", "\n", "flag", ".", "value", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.hflip_batch": [[121, 126], ["torch.empty_like", "enumerate", "hflip"], "function", ["None"], ["def", "hflip_batch", "(", "imgs_tensor", ")", ":", "\n", "    ", "hfliped_imgs", "=", "torch", ".", "empty_like", "(", "imgs_tensor", ")", "\n", "for", "i", ",", "img_ten", "in", "enumerate", "(", "imgs_tensor", ")", ":", "\n", "        ", "hfliped_imgs", "[", "i", "]", "=", "hflip", "(", "img_ten", ")", "\n", "", "return", "hfliped_imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.get_time": [[127, 129], ["[].replace().replace", "[].replace", "str", "datetime.datetime.now"], "function", ["None"], ["", "def", "get_time", "(", ")", ":", "\n", "    ", "return", "(", "str", "(", "datetime", ".", "now", "(", ")", ")", "[", ":", "-", "10", "]", ")", ".", "replace", "(", "' '", ",", "'-'", ")", ".", "replace", "(", "':'", ",", "'-'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.gen_plot": [[130, 142], ["matplotlib.figure", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.plot", "io.BytesIO", "matplotlib.savefig", "io.BytesIO.seek", "matplotlib.close"], "function", ["None"], ["", "def", "gen_plot", "(", "fpr", ",", "tpr", ")", ":", "\n", "    ", "\"\"\"Create a pyplot plot and save to buffer.\"\"\"", "\n", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "xlabel", "(", "\"FPR\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "ylabel", "(", "\"TPR\"", ",", "fontsize", "=", "14", ")", "\n", "plt", ".", "title", "(", "\"ROC Curve\"", ",", "fontsize", "=", "14", ")", "\n", "plot", "=", "plt", ".", "plot", "(", "fpr", ",", "tpr", ",", "linewidth", "=", "2", ")", "\n", "buf", "=", "io", ".", "BytesIO", "(", ")", "\n", "plt", ".", "savefig", "(", "buf", ",", "format", "=", "'jpeg'", ")", "\n", "buf", ".", "seek", "(", "0", ")", "\n", "plt", ".", "close", "(", ")", "\n", "return", "buf", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.None.utils.draw_box_name": [[143, 154], ["cv2.rectangle", "cv2.putText"], "function", ["None"], ["", "def", "draw_box_name", "(", "bbox", ",", "name", ",", "frame", ")", ":", "\n", "    ", "frame", "=", "cv2", ".", "rectangle", "(", "frame", ",", "(", "bbox", "[", "0", "]", ",", "bbox", "[", "1", "]", ")", ",", "(", "bbox", "[", "2", "]", ",", "bbox", "[", "3", "]", ")", ",", "(", "0", ",", "0", ",", "255", ")", ",", "6", ")", "\n", "frame", "=", "cv2", ".", "putText", "(", "frame", ",", "\n", "name", ",", "\n", "(", "bbox", "[", "0", "]", ",", "bbox", "[", "1", "]", ")", ",", "\n", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "\n", "2", ",", "\n", "(", "0", ",", "255", ",", "0", ")", ",", "\n", "3", ",", "\n", "cv2", ".", "LINE_AA", ")", "\n", "return", "frame", "", "", ""]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__init__": [[18, 20], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "length", ")", ":", "\n", "        ", "self", ".", "length", "=", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.Cutout.__call__": [[21, 37], ["numpy.ones", "numpy.random.randint", "numpy.random.randint", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "mask.expand_as.expand_as.expand_as", "img.size", "img.size"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "h", ",", "w", "=", "img", ".", "size", "(", "1", ")", ",", "img", ".", "size", "(", "2", ")", "\n", "mask", "=", "np", ".", "ones", "(", "(", "h", ",", "w", ")", ",", "np", ".", "float32", ")", "\n", "y", "=", "np", ".", "random", ".", "randint", "(", "h", ")", "\n", "x", "=", "np", ".", "random", ".", "randint", "(", "w", ")", "\n", "\n", "y1", "=", "np", ".", "clip", "(", "y", "-", "self", ".", "length", "//", "2", ",", "0", ",", "h", ")", "\n", "y2", "=", "np", ".", "clip", "(", "y", "+", "self", ".", "length", "//", "2", ",", "0", ",", "h", ")", "\n", "x1", "=", "np", ".", "clip", "(", "x", "-", "self", ".", "length", "//", "2", ",", "0", ",", "w", ")", "\n", "x2", "=", "np", ".", "clip", "(", "x", "+", "self", ".", "length", "//", "2", ",", "0", ",", "w", ")", "\n", "\n", "mask", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "0.", "\n", "mask", "=", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "mask", "=", "mask", ".", "expand_as", "(", "img", ")", "\n", "img", "*=", "mask", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.de_preprocess": [[39, 41], ["None"], "function", ["None"], ["", "", "def", "de_preprocess", "(", "tensor", ")", ":", "\n", "    ", "return", "tensor", "*", "0.5", "+", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_train_dataset": [[42, 53], ["torchvision.transforms.Compose", "torchvision.datasets.ImageFolder", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["", "def", "get_train_dataset", "(", "imgs_folder", ")", ":", "\n", "    ", "train_transform", "=", "trans", ".", "Compose", "(", "[", "\n", "# trans.RandomCrop(112, padding=4),", "\n", "trans", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "trans", ".", "ToTensor", "(", ")", ",", "\n", "trans", ".", "Normalize", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", ",", "\n", "]", ")", "\n", "# train_transform.transforms.append(Cutout(16))", "\n", "ds", "=", "ImageFolder", "(", "imgs_folder", ",", "train_transform", ")", "\n", "class_num", "=", "ds", "[", "-", "1", "]", "[", "1", "]", "+", "1", "\n", "return", "ds", ",", "class_num", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_train_loader": [[54, 79], ["torch.utils.data.DataLoader", "data_pipe.get_train_dataset", "print", "data_pipe.get_train_dataset", "print", "data_pipe.get_train_dataset", "enumerate", "torch.utils.data.ConcatDataset", "data_pipe.get_train_dataset"], "function", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_train_dataset", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_train_dataset", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_train_dataset", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_train_dataset"], ["", "def", "get_train_loader", "(", "conf", ")", ":", "\n", "    ", "if", "conf", ".", "data_mode", "in", "[", "'ms1m'", ",", "'concat'", "]", ":", "\n", "        ", "ms1m_ds", ",", "ms1m_class_num", "=", "get_train_dataset", "(", "conf", ".", "ms1m_folder", "/", "'imgs'", ")", "\n", "print", "(", "'ms1m loader generated'", ")", "\n", "", "if", "conf", ".", "data_mode", "in", "[", "'vgg'", ",", "'concat'", "]", ":", "\n", "        ", "vgg_ds", ",", "vgg_class_num", "=", "get_train_dataset", "(", "conf", ".", "vgg_folder", "/", "'imgs'", ")", "\n", "print", "(", "'vgg loader generated'", ")", "\n", "", "if", "conf", ".", "data_mode", "==", "'vgg'", ":", "\n", "        ", "ds", "=", "vgg_ds", "\n", "class_num", "=", "vgg_class_num", "\n", "", "if", "conf", ".", "data_mode", "==", "'webface'", ":", "\n", "        ", "ds", ",", "class_num", "=", "get_train_dataset", "(", "conf", ".", "webface_folder", "/", "'imgs'", ")", "\n", "", "elif", "conf", ".", "data_mode", "==", "'ms1m'", ":", "\n", "        ", "ds", "=", "ms1m_ds", "\n", "class_num", "=", "ms1m_class_num", "\n", "", "elif", "conf", ".", "data_mode", "==", "'concat'", ":", "\n", "        ", "for", "i", ",", "(", "url", ",", "label", ")", "in", "enumerate", "(", "vgg_ds", ".", "imgs", ")", ":", "\n", "            ", "vgg_ds", ".", "imgs", "[", "i", "]", "=", "(", "url", ",", "label", "+", "ms1m_class_num", ")", "\n", "", "ds", "=", "ConcatDataset", "(", "[", "ms1m_ds", ",", "vgg_ds", "]", ")", "\n", "class_num", "=", "vgg_class_num", "+", "ms1m_class_num", "\n", "", "elif", "conf", ".", "data_mode", "==", "'emore'", ":", "\n", "        ", "ds", ",", "class_num", "=", "get_train_dataset", "(", "conf", ".", "emore_folder", "/", "'imgs'", ")", "\n", "# sampler = torch.utils.data.DistributedSampler(ds, dist.get_world_size(), dist.get_rank(), shuffle=True)", "\n", "", "loader", "=", "DataLoader", "(", "ds", ",", "batch_size", "=", "conf", ".", "batch_size", ",", "shuffle", "=", "True", ",", "pin_memory", "=", "conf", ".", "pin_memory", ",", "num_workers", "=", "conf", ".", "num_workers", ")", "\n", "return", "loader", ",", "class_num", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.load_bin": [[80, 97], ["pickle.load", "bcolz.fill", "range", "print", "numpy.save", "rootdir.exists", "rootdir.mkdir", "open", "len", "mxnet.image.imdecode().asnumpy", "cv2.cvtColor", "PIL.Image.fromarray", "transform", "numpy.array", "len", "Image.fromarray.astype", "print", "str", "mxnet.image.imdecode"], "function", ["None"], ["", "def", "load_bin", "(", "path", ",", "rootdir", ",", "transform", ",", "image_size", "=", "[", "112", ",", "112", "]", ")", ":", "\n", "    ", "if", "not", "rootdir", ".", "exists", "(", ")", ":", "\n", "        ", "rootdir", ".", "mkdir", "(", ")", "\n", "", "bins", ",", "issame_list", "=", "pickle", ".", "load", "(", "open", "(", "path", ",", "'rb'", ")", ",", "encoding", "=", "'bytes'", ")", "\n", "data", "=", "bcolz", ".", "fill", "(", "[", "len", "(", "bins", ")", ",", "3", ",", "image_size", "[", "0", "]", ",", "image_size", "[", "1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ",", "rootdir", "=", "rootdir", ",", "mode", "=", "'w'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "bins", ")", ")", ":", "\n", "        ", "_bin", "=", "bins", "[", "i", "]", "\n", "img", "=", "mx", ".", "image", ".", "imdecode", "(", "_bin", ")", ".", "asnumpy", "(", ")", "\n", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_RGB2BGR", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "data", "[", "i", ",", "...", "]", "=", "transform", "(", "img", ")", "\n", "i", "+=", "1", "\n", "if", "i", "%", "1000", "==", "0", ":", "\n", "            ", "print", "(", "'loading bin'", ",", "i", ")", "\n", "", "", "print", "(", "data", ".", "shape", ")", "\n", "np", ".", "save", "(", "str", "(", "rootdir", ")", "+", "'_list'", ",", "np", ".", "array", "(", "issame_list", ")", ")", "\n", "return", "data", ",", "issame_list", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_val_pair": [[98, 102], ["bcolz.carray", "numpy.load"], "function", ["None"], ["", "def", "get_val_pair", "(", "path", ",", "name", ")", ":", "\n", "    ", "carray", "=", "bcolz", ".", "carray", "(", "rootdir", "=", "path", "/", "name", ",", "mode", "=", "'r'", ")", "\n", "issame", "=", "np", ".", "load", "(", "path", "/", "'{}_list.npy'", ".", "format", "(", "name", ")", ")", "\n", "return", "carray", ",", "issame", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_val_data": [[103, 111], ["data_pipe.get_val_pair", "data_pipe.get_val_pair", "data_pipe.get_val_pair", "data_pipe.get_val_pair", "data_pipe.get_val_pair", "data_pipe.get_val_pair"], "function", ["home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_val_pair", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_val_pair", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_val_pair", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_val_pair", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_val_pair", "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.get_val_pair"], ["", "def", "get_val_data", "(", "data_path", ")", ":", "\n", "    ", "agedb_30", ",", "agedb_30_issame", "=", "get_val_pair", "(", "data_path", ",", "'agedb_30'", ")", "\n", "cfp_fp", ",", "cfp_fp_issame", "=", "get_val_pair", "(", "data_path", ",", "'cfp_fp'", ")", "\n", "lfw", ",", "lfw_issame", "=", "get_val_pair", "(", "data_path", ",", "'lfw'", ")", "\n", "calfw", ",", "calfw_issame", "=", "get_val_pair", "(", "data_path", ",", "'calfw'", ")", "\n", "cplfw", ",", "cplfw_issame", "=", "get_val_pair", "(", "data_path", ",", "'cplfw'", ")", "\n", "vgg2_fp", ",", "vgg2_fp_issame", "=", "get_val_pair", "(", "data_path", ",", "'vgg2_fp'", ")", "\n", "return", "agedb_30", ",", "cfp_fp", ",", "lfw", ",", "calfw", ",", "cplfw", ",", "vgg2_fp", ",", "agedb_30_issame", ",", "cfp_fp_issame", ",", "lfw_issame", ",", "calfw_issame", ",", "cplfw_issame", ",", "vgg2_fp_issame", "\n", "\n"]], "home.repos.pwc.inspect_result.KikimorMay_MultiFace.data.data_pipe.load_mx_rec": [[112, 129], ["mxnet.recordio.MXIndexedRecordIO", "mx.recordio.MXIndexedRecordIO.read_idx", "mxnet.recordio.unpack", "int", "tqdm.tqdm", "os.path.exists", "save_path.mkdir", "str", "str", "range", "mx.recordio.MXIndexedRecordIO.read_idx", "mxnet.recordio.unpack_img", "int", "PIL.Image.fromarray", "Image.fromarray.save", "str", "os.path.exists", "label_path.mkdir"], "function", ["None"], ["", "def", "load_mx_rec", "(", "rec_path", ")", ":", "\n", "    ", "save_path", "=", "rec_path", "/", "'imgs'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_path", ")", ":", "\n", "        ", "save_path", ".", "mkdir", "(", ")", "\n", "", "imgrec", "=", "mx", ".", "recordio", ".", "MXIndexedRecordIO", "(", "str", "(", "rec_path", "/", "'train.idx'", ")", ",", "str", "(", "rec_path", "/", "'train.rec'", ")", ",", "'r'", ")", "\n", "img_info", "=", "imgrec", ".", "read_idx", "(", "0", ")", "\n", "header", ",", "_", "=", "mx", ".", "recordio", ".", "unpack", "(", "img_info", ")", "\n", "max_idx", "=", "int", "(", "header", ".", "label", "[", "0", "]", ")", "\n", "for", "idx", "in", "tqdm", "(", "range", "(", "1", ",", "max_idx", ")", ")", ":", "\n", "        ", "img_info", "=", "imgrec", ".", "read_idx", "(", "idx", ")", "\n", "header", ",", "img", "=", "mx", ".", "recordio", ".", "unpack_img", "(", "img_info", ")", "\n", "label", "=", "int", "(", "header", ".", "label", "[", "0", "]", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "label_path", "=", "save_path", "/", "str", "(", "label", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "label_path", ")", ":", "\n", "            ", "label_path", ".", "mkdir", "(", ")", "\n", "", "img", ".", "save", "(", "label_path", "/", "'{}.jpg'", ".", "format", "(", "idx", ")", ",", "quality", "=", "95", ")", "\n", "\n"]]}