{"home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.turns_and_steps_to_positions": [[7, 45], ["get_shape", "zip", "module.stack", "get_shape", "get_shape", "len", "module.zeros", "module.zeros", "module.split", "module.split", "angles.append", "module.stack.append", "tuple", "tuple", "len", "x.shape.as_list", "module.stack", "module.cos", "module.sin"], "function", ["None"], ["def", "turns_and_steps_to_positions", "(", "turns", ",", "steps", ",", "is_tf", "=", "False", ")", ":", "\n", "    ", "if", "is_tf", ":", "\n", "        ", "get_shape", "=", "lambda", "x", ":", "tuple", "(", "x", ".", "shape", ".", "as_list", "(", ")", ")", "\n", "module", "=", "tf", "\n", "", "else", ":", "\n", "        ", "get_shape", "=", "lambda", "x", ":", "tuple", "(", "x", ".", "shape", ")", "\n", "module", "=", "np", "\n", "\n", "", "assert", "get_shape", "(", "turns", ")", "==", "get_shape", "(", "steps", ")", "\n", "\n", "if", "len", "(", "turns", ".", "shape", ")", "==", "1", ":", "\n", "        ", "is_batch", "=", "False", "\n", "turns", "=", "turns", "[", "module", ".", "newaxis", "]", "\n", "steps", "=", "steps", "[", "module", ".", "newaxis", "]", "\n", "", "elif", "len", "(", "turns", ".", "shape", ")", "==", "2", ":", "\n", "        ", "is_batch", "=", "True", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "\n", "", "batch_size", ",", "horizon", "=", "get_shape", "(", "turns", ")", "\n", "angles", "=", "[", "module", ".", "zeros", "(", "batch_size", ")", "]", "\n", "positions", "=", "[", "module", ".", "zeros", "(", "(", "batch_size", ",", "2", ")", ")", "]", "\n", "for", "turn", ",", "step", "in", "zip", "(", "module", ".", "split", "(", "turns", ",", "horizon", ",", "axis", "=", "1", ")", ",", "module", ".", "split", "(", "steps", ",", "horizon", ",", "axis", "=", "1", ")", ")", ":", "\n", "        ", "turn", "=", "turn", "[", ":", ",", "0", "]", "\n", "step", "=", "step", "[", ":", ",", "0", "]", "\n", "\n", "angle", "=", "angles", "[", "-", "1", "]", "+", "turn", "\n", "position", "=", "positions", "[", "-", "1", "]", "+", "step", "[", ":", ",", "module", ".", "newaxis", "]", "*", "module", ".", "stack", "(", "[", "module", ".", "cos", "(", "angle", ")", ",", "module", ".", "sin", "(", "angle", ")", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "angles", ".", "append", "(", "angle", ")", "\n", "positions", ".", "append", "(", "position", ")", "\n", "", "positions", "=", "module", ".", "stack", "(", "positions", ",", "axis", "=", "1", ")", "\n", "\n", "if", "not", "is_batch", ":", "\n", "        ", "positions", "=", "positions", "[", "0", "]", "\n", "\n", "", "return", "positions", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.positions_to_turns_and_steps": [[47, 65], ["numpy.array", "numpy.arctan2", "numpy.linalg.norm", "turns.append", "steps.append", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "positions_to_turns_and_steps", "(", "positions", ")", ":", "\n", "    ", "turns", ",", "steps", "=", "[", "]", ",", "[", "]", "\n", "prev_angle", "=", "0.", "\n", "prev_pos", "=", "np", ".", "array", "(", "[", "0.", ",", "0.", "]", ")", "\n", "for", "pos", "in", "positions", ":", "\n", "        ", "delta_pos", "=", "pos", "-", "prev_pos", "\n", "angle", "=", "np", ".", "arctan2", "(", "delta_pos", "[", "1", "]", ",", "delta_pos", "[", "0", "]", ")", "\n", "\n", "turn", "=", "angle", "-", "prev_angle", "\n", "step", "=", "np", ".", "linalg", ".", "norm", "(", "delta_pos", ")", "\n", "\n", "turns", ".", "append", "(", "turn", ")", "\n", "steps", ".", "append", "(", "step", ")", "\n", "\n", "prev_angle", "=", "angle", "\n", "prev_pos", "=", "pos", "\n", "\n", "", "return", "np", ".", "array", "(", "turns", ")", ",", "np", ".", "array", "(", "steps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.rectify_and_resize": [[67, 85], ["sidewalk.utils.np_utils.imresize", "numpy.array", "sidewalk.utils.np_utils.imrectify_fisheye", "numpy.array", "len", "numpy.array", "jackal_utils.rectify_and_resize"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.imresize", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.imrectify_fisheye", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.rectify_and_resize"], ["", "def", "rectify_and_resize", "(", "image", ",", "shape", ",", "rectify", "=", "True", ")", ":", "\n", "    ", "if", "rectify", ":", "\n", "### jackal camera intrinsics", "\n", "        ", "fx", ",", "fy", ",", "cx", ",", "cy", "=", "272.547000", ",", "266.358000", ",", "320.000000", ",", "240.000000", "\n", "K", "=", "np", ".", "array", "(", "[", "[", "fx", ",", "0.", ",", "cx", "]", ",", "\n", "[", "0.", ",", "fy", ",", "cy", "]", ",", "\n", "[", "0.", ",", "0.", ",", "1.", "]", "]", ")", "\n", "D", "=", "np", ".", "array", "(", "[", "[", "-", "0.038483", ",", "-", "0.010456", ",", "0.003930", ",", "-", "0.001007", "]", "]", ")", ".", "T", "\n", "balance", "=", "0.5", "\n", "\n", "if", "len", "(", "image", ".", "shape", ")", "==", "4", ":", "\n", "            ", "return", "np", ".", "array", "(", "[", "rectify_and_resize", "(", "im_i", ",", "shape", ")", "for", "im_i", "in", "image", "]", ")", "\n", "\n", "", "image", "=", "np_utils", ".", "imrectify_fisheye", "(", "image", ",", "K", ",", "D", ",", "balance", "=", "balance", ")", "\n", "\n", "", "image", "=", "np_utils", ".", "imresize", "(", "image", ",", "shape", ")", "\n", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.process_image": [[87, 109], ["numpy.array", "jackal_utils.rectify_and_resize", "int", "len", "float", "tuple"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.rectify_and_resize"], ["", "def", "process_image", "(", "original_image", ",", "desired_shape", ",", "image_rectify", ")", ":", "\n", "    ", "is_batch", "=", "len", "(", "original_image", ".", "shape", ")", "==", "4", "\n", "if", "not", "is_batch", ":", "\n", "        ", "original_image", "=", "original_image", "[", "None", "]", "\n", "\n", "# get shapes and ratios", "\n", "", "original_shape", "=", "original_image", ".", "shape", "[", "-", "3", ":", "]", "\n", "original_ratio", "=", "original_shape", "[", "1", "]", "/", "float", "(", "original_shape", "[", "0", "]", ")", "\n", "\n", "# resize", "\n", "resize_shape", "=", "np", ".", "array", "(", "[", "desired_shape", "[", "1", "]", "/", "original_ratio", ",", "desired_shape", "[", "1", "]", ",", "3", "]", ",", "dtype", "=", "int", ")", "\n", "original_image", "=", "rectify_and_resize", "(", "original_image", ",", "resize_shape", ",", "rectify", "=", "image_rectify", ")", "\n", "\n", "# crop", "\n", "crop", "=", "int", "(", "0.5", "*", "(", "resize_shape", "[", "0", "]", "-", "desired_shape", "[", "0", "]", ")", ")", "\n", "desired_image", "=", "original_image", "[", ":", ",", "crop", ":", "-", "crop", "]", "\n", "assert", "tuple", "(", "desired_image", ".", "shape", "[", "-", "3", ":", "]", ")", "==", "desired_shape", "\n", "\n", "if", "not", "is_batch", ":", "\n", "        ", "desired_image", "=", "desired_image", "[", "0", "]", "\n", "\n", "", "return", "desired_image", "\n", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.bytes_feature": [[5, 7], ["tensorflow.train.Feature", "tensorflow.train.BytesList"], "function", ["None"], ["def", "bytes_feature", "(", "value", ")", ":", "\n", "    ", "return", "tf", ".", "train", ".", "Feature", "(", "bytes_list", "=", "tf", ".", "train", ".", "BytesList", "(", "value", "=", "[", "value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.config_gpu": [[9, 14], ["str", "tensorflow.ConfigProto"], "function", ["None"], ["", "def", "config_gpu", "(", "gpu", "=", "0", ",", "gpu_frac", "=", "0.3", ")", ":", "\n", "    ", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "str", "(", "gpu", ")", "\n", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "per_process_gpu_memory_fraction", "=", "gpu_frac", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.enable_eager_execution": [[16, 19], ["tensorflow.enable_eager_execution", "tf_utils.config_gpu"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.enable_eager_execution", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.config_gpu"], ["", "def", "enable_eager_execution", "(", "gpu", "=", "0", ",", "gpu_frac", "=", "0.3", ")", ":", "\n", "    ", "tf", ".", "enable_eager_execution", "(", "\n", "config", "=", "config_gpu", "(", "gpu", "=", "gpu", ",", "gpu_frac", "=", "gpu_frac", ")", ",", "\n", "# device_policy=tf.contrib.eager.DEVICE_PLACEMENT_EXPLICIT", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.enable_static_execution": [[23, 27], ["tensorflow.Graph", "tensorflow.Session", "tf.Session.__enter__", "tf_utils.config_gpu"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.__enter__", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.config_gpu"], ["", "def", "enable_static_execution", "(", "gpu", "=", "0", ",", "gpu_frac", "=", "0.3", ")", ":", "\n", "    ", "graph", "=", "tf", ".", "Graph", "(", ")", "\n", "session", "=", "tf", ".", "Session", "(", "graph", "=", "graph", ",", "config", "=", "config_gpu", "(", "gpu", "=", "gpu", ",", "gpu_frac", "=", "gpu_frac", ")", ")", "\n", "session", ".", "__enter__", "(", ")", "# so get default session works", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.get_kernels": [[29, 37], ["hasattr", "tf_utils.get_kernels", "hasattr", "kernels.append"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.get_kernels"], ["", "def", "get_kernels", "(", "layers", ")", ":", "\n", "    ", "kernels", "=", "[", "]", "\n", "for", "layer", "in", "layers", ":", "\n", "        ", "if", "hasattr", "(", "layer", ",", "'layers'", ")", ":", "\n", "            ", "kernels", "+=", "get_kernels", "(", "layer", ".", "layers", ")", "\n", "", "elif", "hasattr", "(", "layer", ",", "'kernel'", ")", ":", "\n", "            ", "kernels", ".", "append", "(", "layer", ".", "kernel", ")", "\n", "", "", "return", "kernels", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.repeat": [[39, 54], ["tensorflow.expand_dims", "tensorflow.tile", "tensorflow.reshape", "tensorflow.shape"], "function", ["None"], ["", "def", "repeat", "(", "tensor", ",", "repeats", ")", ":", "\n", "    ", "\"\"\"\n    https://github.com/tensorflow/tensorflow/issues/8246\n    Args:\n        input: A Tensor. 1-D or higher.\n        repeats: A list. Number of repeat for each dimension, length must be the same as the number of dimensions in input\n    Returns:\n        A Tensor. Has the same type as input. Has the shape of tensor.shape * repeats\n    \"\"\"", "\n", "expanded_tensor", "=", "tf", ".", "expand_dims", "(", "tensor", ",", "-", "1", ")", "\n", "multiples", "=", "[", "1", "]", "+", "repeats", "\n", "tiled_tensor", "=", "tf", ".", "tile", "(", "expanded_tensor", ",", "multiples", "=", "multiples", ")", "\n", "repeated_tesnor", "=", "tf", ".", "reshape", "(", "tiled_tensor", ",", "tf", ".", "shape", "(", "tensor", ")", "*", "repeats", ")", "\n", "\n", "return", "repeated_tesnor", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.yaw_rotmat": [[56, 64], ["tensorflow.reshape", "tensorflow.shape", "yaw.shape.as_list", "tensorflow.stack", "tensorflow.cos", "tensorflow.sin", "tensorflow.cos", "tensorflow.sin"], "function", ["None"], ["", "def", "yaw_rotmat", "(", "yaw", ")", ":", "\n", "    ", "batch_size", "=", "tf", ".", "shape", "(", "yaw", ")", "[", "0", "]", "\n", "nonbatch_dims", "=", "yaw", ".", "shape", ".", "as_list", "(", ")", "[", "1", ":", "]", "\n", "return", "tf", ".", "reshape", "(", "\n", "tf", ".", "stack", "(", "[", "tf", ".", "cos", "(", "yaw", ")", ",", "-", "tf", ".", "sin", "(", "yaw", ")", ",", "\n", "tf", ".", "sin", "(", "yaw", ")", ",", "tf", ".", "cos", "(", "yaw", ")", "]", ",", "\n", "axis", "=", "-", "1", ")", ",", "\n", "[", "batch_size", "]", "+", "nonbatch_dims", "+", "[", "2", ",", "2", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.__init__": [[8, 20], ["data_utils.DataTraverser._load_data", "os.path.exists"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser._load_data"], ["    ", "def", "__init__", "(", "self", ",", "data_fnames", ")", ":", "\n", "        ", "for", "fname", "in", "data_fnames", ":", "\n", "            ", "assert", "os", ".", "path", ".", "exists", "(", "fname", ")", "\n", "\n", "", "self", ".", "_data_fnames", "=", "data_fnames", "\n", "\n", "self", ".", "_curr_data_idx", "=", "0", "\n", "self", ".", "_prev_data_idx", "=", "-", "1", "\n", "self", ".", "_curr_data_timestep", "=", "0", "\n", "self", ".", "_curr_data", "=", "None", "\n", "self", ".", "_curr_data_len", "=", "None", "\n", "self", ".", "_load_data", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.curr_data_len": [[21, 24], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "curr_data_len", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_curr_data_len", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.get": [[25, 28], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "get", "(", "self", ",", "key", ",", "start", "=", "None", ",", "horizon", "=", "None", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser._load_data": [[29, 34], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_load_data", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "self", ".", "_curr_data", "=", "None", "\n", "self", ".", "_curr_data_len", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.no_more_timesteps": [[35, 38], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "no_more_timesteps", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_curr_data_timestep", ">=", "self", ".", "_curr_data_len", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.no_more_files": [[39, 42], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "no_more_files", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_curr_data_idx", "==", "len", "(", "self", ".", "_data_fnames", ")", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_timestep": [[43, 53], ["data_utils.DataTraverser._load_data"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser._load_data"], ["", "def", "next_timestep", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "no_more_timesteps", "and", "self", ".", "no_more_files", ":", "\n", "            ", "return", "# at the end, do nothing", "\n", "\n", "", "if", "self", ".", "no_more_timesteps", ":", "\n", "            ", "self", ".", "_curr_data_idx", "+=", "1", "\n", "self", ".", "_load_data", "(", ")", "\n", "self", ".", "_curr_data_timestep", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "_curr_data_timestep", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.prev_timestep": [[54, 63], ["data_utils.DataTraverser._load_data"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser._load_data"], ["", "", "def", "prev_timestep", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "_curr_data_timestep", "==", "0", ")", "and", "(", "self", ".", "_curr_data_idx", "==", "0", ")", ":", "\n", "            ", "return", "# at the beginning, do nothing", "\n", "\n", "", "self", ".", "_curr_data_timestep", "-=", "1", "\n", "if", "self", ".", "_curr_data_timestep", "<", "0", ":", "\n", "            ", "self", ".", "_curr_data_idx", "-=", "1", "\n", "self", ".", "_load_data", "(", ")", "\n", "self", ".", "_curr_data_timestep", "=", "self", ".", "_curr_data_len", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_data": [[64, 71], ["data_utils.DataTraverser._load_data"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser._load_data"], ["", "", "def", "next_data", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "no_more_files", ":", "\n", "            ", "return", "# at the end, do nothing", "\n", "\n", "", "self", ".", "_curr_data_idx", "+=", "1", "\n", "self", ".", "_load_data", "(", ")", "\n", "self", ".", "_curr_data_timestep", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.prev_data": [[72, 79], ["data_utils.DataTraverser._load_data"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser._load_data"], ["", "def", "prev_data", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_curr_data_idx", "==", "0", ":", "\n", "            ", "return", "# at the beginning, do nothing", "\n", "\n", "", "self", ".", "_curr_data_idx", "-=", "1", "\n", "self", ".", "_load_data", "(", ")", "\n", "self", ".", "_curr_data_timestep", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_data_end": [[80, 88], ["data_utils.DataTraverser._load_data"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser._load_data"], ["", "def", "next_data_end", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "no_more_files", ":", "\n", "            ", "pass", "# at the end, do nothing", "\n", "", "else", ":", "\n", "            ", "self", ".", "_curr_data_idx", "+=", "1", "\n", "\n", "", "self", ".", "_load_data", "(", ")", "\n", "self", ".", "_curr_data_timestep", "=", "self", ".", "_curr_data_len", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.prev_data_end": [[89, 97], ["data_utils.DataTraverser._load_data"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser._load_data"], ["", "def", "prev_data_end", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_curr_data_idx", "==", "0", ":", "\n", "            ", "pass", "# at the end, do nothing", "\n", "", "else", ":", "\n", "            ", "self", ".", "_curr_data_idx", "-=", "1", "\n", "\n", "", "self", ".", "_load_data", "(", ")", "\n", "self", ".", "_curr_data_timestep", "=", "self", ".", "_curr_data_len", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.__str__": [[98, 102], ["len", "os.path.basename"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "'{0}/{1}, {2}/{3} -- {4}'", ".", "format", "(", "self", ".", "_curr_data_timestep", "+", "1", ",", "self", ".", "_curr_data_len", ",", "\n", "self", ".", "_curr_data_idx", "+", "1", ",", "len", "(", "self", ".", "_data_fnames", ")", ",", "\n", "os", ".", "path", ".", "basename", "(", "self", ".", "_data_fnames", "[", "self", ".", "_curr_data_idx", "]", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.__getitem__": [[14, 22], ["isinstance", "item.split", "dotmap.DotMap.__getitem__"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.__getitem__"], ["    ", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "isinstance", "(", "item", ",", "str", ")", "and", "'/'", "in", "item", ":", "\n", "            ", "item_split", "=", "item", ".", "split", "(", "'/'", ")", "\n", "curr_item", "=", "item_split", "[", "0", "]", "\n", "next_item", "=", "'/'", ".", "join", "(", "item_split", "[", "1", ":", "]", ")", "\n", "return", "self", "[", "curr_item", "]", "[", "next_item", "]", "\n", "", "else", ":", "\n", "            ", "return", "super", "(", "AttrDict", ",", "self", ")", ".", "__getitem__", "(", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.__setitem__": [[23, 31], ["isinstance", "key.split", "super().__setitem__"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.__setitem__"], ["", "", "def", "__setitem__", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "        ", "if", "isinstance", "(", "key", ",", "str", ")", "and", "'/'", "in", "key", ":", "\n", "            ", "key_split", "=", "key", ".", "split", "(", "'/'", ")", "\n", "curr_key", "=", "key_split", "[", "0", "]", "\n", "next_key", "=", "'/'", ".", "join", "(", "key_split", "[", "1", ":", "]", ")", "\n", "self", "[", "curr_key", "]", "[", "next_key", "]", "=", "value", "\n", "", "else", ":", "\n", "            ", "super", "(", "AttrDict", ",", "self", ")", ".", "__setitem__", "(", "key", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.pprint": [[32, 35], ["python_utils.AttrDict.leaf_apply", "super().pprint", "str"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.pprint"], ["", "", "def", "pprint", "(", "self", ",", "str_max_len", "=", "5", ")", ":", "\n", "        ", "str_self", "=", "self", ".", "leaf_apply", "(", "lambda", "x", ":", "str", "(", "x", ")", "[", ":", "str_max_len", "]", "+", "'...'", ")", "\n", "return", "super", "(", "AttrDict", ",", "str_self", ")", ".", "pprint", "(", "pformat", "=", "'json'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_keys": [[36, 46], ["d.items", "python_utils.AttrDict.leaf_keys._get_leaf_keys"], "methods", ["None"], ["", "def", "leaf_keys", "(", "self", ")", ":", "\n", "        ", "def", "_get_leaf_keys", "(", "d", ",", "prefix", "=", "''", ")", ":", "\n", "            ", "for", "key", ",", "value", "in", "d", ".", "items", "(", ")", ":", "\n", "                ", "new_prefix", "=", "prefix", "+", "'/'", "+", "key", "if", "len", "(", "prefix", ")", ">", "0", "else", "key", "\n", "if", "isinstance", "(", "value", ",", "AttrDict", ")", ":", "\n", "                    ", "yield", "from", "_get_leaf_keys", "(", "value", ",", "prefix", "=", "new_prefix", ")", "\n", "", "else", ":", "\n", "                    ", "yield", "new_prefix", "\n", "\n", "", "", "", "yield", "from", "_get_leaf_keys", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_values": [[47, 50], ["python_utils.AttrDict.leaf_keys"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_keys"], ["", "def", "leaf_values", "(", "self", ")", ":", "\n", "        ", "for", "key", "in", "self", ".", "leaf_keys", "(", ")", ":", "\n", "            ", "yield", "self", "[", "key", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_items": [[51, 54], ["python_utils.AttrDict.leaf_keys"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_keys"], ["", "", "def", "leaf_items", "(", "self", ")", ":", "\n", "        ", "for", "key", "in", "self", ".", "leaf_keys", "(", ")", ":", "\n", "            ", "yield", "key", ",", "self", "[", "key", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_filter": [[55, 61], ["python_utils.AttrDict", "python_utils.AttrDict.leaf_items", "func"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_items"], ["", "", "def", "leaf_filter", "(", "self", ",", "func", ")", ":", "\n", "        ", "d", "=", "AttrDict", "(", ")", "\n", "for", "key", ",", "value", "in", "self", ".", "leaf_items", "(", ")", ":", "\n", "            ", "if", "func", "(", "key", ",", "value", ")", ":", "\n", "                ", "d", "[", "key", "]", "=", "value", "\n", "", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_assert": [[62, 69], ["python_utils.AttrDict.leaf_values", "func"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_values"], ["", "def", "leaf_assert", "(", "self", ",", "func", ")", ":", "\n", "        ", "\"\"\"\n        Recursively asserts func on each value\n        :param func (lambda): takes in one argument, outputs True/False\n        \"\"\"", "\n", "for", "value", "in", "self", ".", "leaf_values", "(", ")", ":", "\n", "            ", "assert", "func", "(", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_modify": [[70, 77], ["python_utils.AttrDict.leaf_items", "func"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_items"], ["", "", "def", "leaf_modify", "(", "self", ",", "func", ")", ":", "\n", "        ", "\"\"\"\n        Applies func to each value (recursively), modifying in-place\n        :param func (lambda): takes in one argument and returns one object\n        \"\"\"", "\n", "for", "key", ",", "value", "in", "self", ".", "leaf_items", "(", ")", ":", "\n", "            ", "self", "[", "key", "]", "=", "func", "(", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply": [[78, 87], ["python_utils.AttrDict.copy", "python_utils.AttrDict.leaf_modify"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_modify"], ["", "", "def", "leaf_apply", "(", "self", ",", "func", ")", ":", "\n", "        ", "\"\"\"\n        Applies func to each value (recursively) and returns a new AttrDict\n        :param func (lambda): takes in one argument and returns one object\n        :return AttrDict\n        \"\"\"", "\n", "d_copy", "=", "self", ".", "copy", "(", ")", "\n", "d_copy", ".", "leaf_modify", "(", "func", ")", "\n", "return", "d_copy", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.combine": [[88, 92], ["d_other.leaf_items"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_items"], ["", "def", "combine", "(", "self", ",", "d_other", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "d_other", ".", "leaf_items", "(", ")", ":", "\n", "            ", "self", "[", "k", "]", "=", "v", "\n", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.freeze": [[93, 97], ["python_utils.AttrDict", "python_utils.AttrDict.__dict__.update"], "methods", ["None"], ["", "def", "freeze", "(", "self", ")", ":", "\n", "        ", "frozen", "=", "AttrDict", "(", "self", ",", "_dynamic", "=", "False", ")", "\n", "self", ".", "__dict__", ".", "update", "(", "frozen", ".", "__dict__", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.batch": [[102, 104], ["python_utils.AttrDict.leaf_apply"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply"], ["", "def", "batch", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "leaf_apply", "(", "lambda", "v", ":", "v", "[", "None", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.unbatch": [[105, 107], ["python_utils.AttrDict.leaf_apply"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply"], ["", "def", "unbatch", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "leaf_apply", "(", "lambda", "v", ":", "v", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.tf": [[108, 110], ["python_utils.AttrDict.leaf_apply", "tensorflow.convert_to_tensor"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply"], ["", "def", "tf", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "leaf_apply", "(", "lambda", "v", ":", "tf", ".", "convert_to_tensor", "(", "v", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.numpy": [[111, 113], ["python_utils.AttrDict.leaf_apply", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply"], ["", "def", "numpy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "leaf_apply", "(", "lambda", "v", ":", "np", ".", "array", "(", "v", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_combine_and_apply": [[118, 130], ["tuple", "python_utils.AttrDict", "sorted", "func", "ds[].leaf_keys", "tuple", "sorted", "d.leaf_keys"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_keys", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_keys"], ["", "@", "staticmethod", "\n", "def", "leaf_combine_and_apply", "(", "ds", ",", "func", ")", ":", "\n", "        ", "leaf_keys", "=", "tuple", "(", "sorted", "(", "ds", "[", "0", "]", ".", "leaf_keys", "(", ")", ")", ")", "\n", "for", "d", "in", "ds", "[", "1", ":", "]", ":", "\n", "            ", "assert", "leaf_keys", "==", "tuple", "(", "sorted", "(", "d", ".", "leaf_keys", "(", ")", ")", ")", "\n", "\n", "", "d_combined", "=", "AttrDict", "(", ")", "\n", "for", "k", "in", "leaf_keys", ":", "\n", "            ", "values", "=", "[", "d", "[", "k", "]", "for", "d", "in", "ds", "]", "\n", "d_combined", "[", "k", "]", "=", "func", "(", "values", ")", "\n", "\n", "", "return", "d_combined", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.from_dict": [[131, 137], ["python_utils.AttrDict", "d.items"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "from_dict", "(", "d", ")", ":", "\n", "        ", "d_attr", "=", "AttrDict", "(", ")", "\n", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "            ", "d_attr", "[", "k", "]", "=", "v", "\n", "", "return", "d_attr", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.__init__": [[140, 146], ["dict", "collections.defaultdict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "prefix", "=", "''", ")", ":", "\n", "        ", "self", ".", "prefix", "=", "prefix", "\n", "self", ".", "start_times", "=", "dict", "(", ")", "\n", "self", ".", "elapsed_times", "=", "defaultdict", "(", "int", ")", "\n", "\n", "self", ".", "_with_name_stack", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.__call__": [[147, 150], ["python_utils.TimeIt._with_name_stack.append"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "_with_name_stack", ".", "append", "(", "name", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.__enter__": [[151, 154], ["python_utils.TimeIt.start"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.start"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "start", "(", "self", ".", "_with_name_stack", "[", "-", "1", "]", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.__exit__": [[155, 157], ["timeit.stop", "python_utils.TimeIt._with_name_stack.pop"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.stop"], ["", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_val", ",", "exc_tb", ")", ":", "\n", "        ", "timeit", ".", "stop", "(", "self", ".", "_with_name_stack", ".", "pop", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.start": [[158, 161], ["time.time"], "methods", ["None"], ["", "def", "start", "(", "self", ",", "name", ")", ":", "\n", "        ", "assert", "(", "name", "not", "in", "self", ".", "start_times", ")", "\n", "self", ".", "start_times", "[", "name", "]", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.stop": [[162, 166], ["python_utils.TimeIt.start_times.pop", "time.time"], "methods", ["None"], ["", "def", "stop", "(", "self", ",", "name", ")", ":", "\n", "        ", "assert", "(", "name", "in", "self", ".", "start_times", ")", "\n", "self", ".", "elapsed_times", "[", "name", "]", "+=", "time", ".", "time", "(", ")", "-", "self", ".", "start_times", "[", "name", "]", "\n", "self", ".", "start_times", ".", "pop", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.elapsed": [[167, 169], ["None"], "methods", ["None"], ["", "def", "elapsed", "(", "self", ",", "name", ")", ":", "\n", "        ", "return", "self", ".", "elapsed_times", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.reset": [[170, 173], ["dict", "collections.defaultdict"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "start_times", "=", "dict", "(", ")", "\n", "self", ".", "elapsed_times", "=", "defaultdict", "(", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.__str__": [[174, 191], ["sorted", "python_utils.TimeIt.elapsed_times.items", "sum", "max", "python_utils.TimeIt.elapsed_times.values", "python_utils.TimeIt.elapsed_times.items"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "s", "=", "''", "\n", "names_elapsed", "=", "sorted", "(", "self", ".", "elapsed_times", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "for", "name", ",", "elapsed", "in", "names_elapsed", ":", "\n", "            ", "if", "'total'", "not", "in", "self", ".", "elapsed_times", ":", "\n", "                ", "s", "+=", "'{0}: {1: <10} {2:.1f}\\n'", ".", "format", "(", "self", ".", "prefix", ",", "name", ",", "elapsed", ")", "\n", "", "else", ":", "\n", "                ", "assert", "(", "self", ".", "elapsed_times", "[", "'total'", "]", ">=", "max", "(", "self", ".", "elapsed_times", ".", "values", "(", ")", ")", ")", "\n", "pct", "=", "100.", "*", "elapsed", "/", "self", ".", "elapsed_times", "[", "'total'", "]", "\n", "s", "+=", "'{0}: {1: <10} {2:.1f} ({3:.1f}%)\\n'", ".", "format", "(", "self", ".", "prefix", ",", "name", ",", "elapsed", ",", "pct", ")", "\n", "", "", "if", "'total'", "in", "self", ".", "elapsed_times", ":", "\n", "            ", "times_summed", "=", "sum", "(", "[", "t", "for", "k", ",", "t", "in", "self", ".", "elapsed_times", ".", "items", "(", ")", "if", "k", "!=", "'total'", "]", ")", "\n", "other_time", "=", "self", ".", "elapsed_times", "[", "'total'", "]", "-", "times_summed", "\n", "assert", "(", "other_time", ">=", "0", ")", "\n", "pct", "=", "100.", "*", "other_time", "/", "self", ".", "elapsed_times", "[", "'total'", "]", "\n", "s", "+=", "'{0}: {1: <10} {2:.1f} ({3:.1f}%)\\n'", ".", "format", "(", "self", ".", "prefix", ",", "'other'", ",", "other_time", ",", "pct", ")", "\n", "", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.Getch.getch": [[203, 213], ["sys.stdin.fileno", "termios.tcgetattr", "tty.setraw", "sys.stdin.read", "termios.tcsetattr", "sys.stdin.fileno"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "getch", "(", "block", "=", "True", ")", ":", "\n", "        ", "fd", "=", "sys", ".", "stdin", ".", "fileno", "(", ")", "\n", "old_settings", "=", "termios", ".", "tcgetattr", "(", "fd", ")", "\n", "try", ":", "\n", "            ", "tty", ".", "setraw", "(", "sys", ".", "stdin", ".", "fileno", "(", ")", ")", "\n", "ch", "=", "sys", ".", "stdin", ".", "read", "(", "1", ")", "\n", "", "finally", ":", "\n", "            ", "termios", ".", "tcsetattr", "(", "fd", ",", "termios", ".", "TCSADRAIN", ",", "old_settings", ")", "\n", "", "return", "ch", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.exit_on_ctrl_c": [[195, 200], ["signal.signal", "sys.exit"], "function", ["None"], ["def", "exit_on_ctrl_c", "(", ")", ":", "\n", "    ", "def", "signal_handler", "(", "signal", ",", "frame", ")", ":", "\n", "        ", "sys", ".", "exit", "(", "0", ")", "\n", "\n", "", "signal", ".", "signal", "(", "signal", ".", "SIGINT", ",", "signal_handler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.imrectify_fisheye": [[15, 22], ["cv2.fisheye.estimateNewCameraMatrixForUndistortRectify", "cv2.fisheye.initUndistortRectifyMap", "cv2.remap", "numpy.eye", "numpy.eye"], "function", ["None"], ["def", "imrectify_fisheye", "(", "img", ",", "K", ",", "D", ",", "balance", "=", "0.0", ")", ":", "\n", "# https://medium.com/@kennethjiang/calibrate-fisheye-lens-using-opencv-part-2-13990f1b157f", "\n", "    ", "dim", "=", "img", ".", "shape", "[", ":", "2", "]", "[", ":", ":", "-", "1", "]", "\n", "new_K", "=", "cv2", ".", "fisheye", ".", "estimateNewCameraMatrixForUndistortRectify", "(", "K", ",", "D", ",", "dim", ",", "np", ".", "eye", "(", "3", ")", ",", "balance", "=", "balance", ")", "\n", "map1", ",", "map2", "=", "cv2", ".", "fisheye", ".", "initUndistortRectifyMap", "(", "K", ",", "D", ",", "np", ".", "eye", "(", "3", ")", ",", "new_K", ",", "dim", ",", "cv2", ".", "CV_16SC2", ")", "\n", "undistorted_img", "=", "cv2", ".", "remap", "(", "img", ",", "map1", ",", "map2", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ")", "\n", "return", "undistorted_img", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.imresize": [[24, 46], ["PIL.Image.fromarray", "PIL.Image.fromarray", "np.expand_dims.resize", "numpy.array", "len", "numpy.stack", "len", "len", "numpy.expand_dims", "tuple", "len", "np_utils.imresize"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.imresize"], ["", "def", "imresize", "(", "image", ",", "shape", ",", "resize_method", "=", "PIL", ".", "Image", ".", "LANCZOS", ")", ":", "\n", "    ", "if", "len", "(", "image", ".", "shape", ")", "==", "4", ":", "\n", "        ", "return", "np", ".", "stack", "(", "[", "imresize", "(", "image_i", ",", "shape", ",", "resize_method", "=", "resize_method", ")", "for", "image_i", "in", "image", "]", ")", "\n", "\n", "", "assert", "(", "len", "(", "shape", ")", "==", "3", ")", "\n", "assert", "(", "shape", "[", "-", "1", "]", "==", "1", "or", "shape", "[", "-", "1", "]", "==", "3", ")", "\n", "assert", "(", "image", ".", "shape", "[", "0", "]", "/", "image", ".", "shape", "[", "1", "]", "==", "shape", "[", "0", "]", "/", "shape", "[", "1", "]", ")", "# maintain aspect ratio", "\n", "height", ",", "width", ",", "channels", "=", "shape", "\n", "\n", "if", "len", "(", "image", ".", "shape", ")", ">", "2", "and", "image", ".", "shape", "[", "2", "]", "==", "1", ":", "\n", "        ", "image", "=", "image", "[", ":", ",", ":", ",", "0", "]", "\n", "\n", "", "im", "=", "PIL", ".", "Image", ".", "fromarray", "(", "image", ")", "\n", "im", "=", "im", ".", "resize", "(", "(", "width", ",", "height", ")", ",", "resize_method", ")", "\n", "im", "=", "np", ".", "array", "(", "im", ")", "\n", "\n", "if", "len", "(", "im", ".", "shape", ")", "==", "2", ":", "\n", "        ", "im", "=", "np", ".", "expand_dims", "(", "im", ",", "2", ")", "\n", "\n", "", "assert", "(", "im", ".", "shape", "==", "tuple", "(", "shape", ")", ")", "\n", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.im2bytes": [[48, 60], ["len", "numpy.array", "len", "PIL.Image.fromarray", "PIL.Image.fromarray", "np_utils.im2bytes", "arrs.astype", "io.BytesIO", "PIL.Image.fromarray.save", "output.getvalue"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.im2bytes"], ["", "def", "im2bytes", "(", "arrs", ",", "format", "=", "'jpg'", ",", "quality", "=", "75", ")", ":", "\n", "    ", "if", "len", "(", "arrs", ".", "shape", ")", "==", "4", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "im2bytes", "(", "arr_i", ",", "format", "=", "format", ",", "quality", "=", "quality", ")", "for", "arr_i", "in", "arrs", "]", ")", "\n", "", "elif", "len", "(", "arrs", ".", "shape", ")", "==", "3", ":", "\n", "        ", "if", "arrs", ".", "shape", "[", "-", "1", "]", "==", "1", ":", "\n", "            ", "arrs", "=", "arrs", "[", "...", ",", "0", "]", "\n", "", "im", "=", "PIL", ".", "Image", ".", "fromarray", "(", "arrs", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "with", "io", ".", "BytesIO", "(", ")", "as", "output", ":", "\n", "            ", "im", ".", "save", "(", "output", ",", "format", "=", "\"jpeg\"", ",", "quality", "=", "quality", ")", "\n", "return", "output", ".", "getvalue", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.bytes2im": [[62, 69], ["len", "numpy.array", "len", "numpy.array", "np_utils.bytes2im", "PIL.Image.open", "PIL.Image.open", "io.BytesIO"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.bytes2im"], ["", "", "def", "bytes2im", "(", "arrs", ")", ":", "\n", "    ", "if", "len", "(", "arrs", ".", "shape", ")", "==", "1", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "bytes2im", "(", "arr_i", ")", "for", "arr_i", "in", "arrs", "]", ")", "\n", "", "elif", "len", "(", "arrs", ".", "shape", ")", "==", "0", ":", "\n", "        ", "return", "np", ".", "array", "(", "PIL", ".", "Image", ".", "open", "(", "io", ".", "BytesIO", "(", "arrs", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.compress_video": [[71, 83], ["tempfile.mkstemp", "skvideo.io.FFmpegWriter", "skvideo.io.FFmpegWriter.close", "os.remove", "numpy.frombuffer", "skvideo.io.FFmpegWriter.writeFrame", "open", "f.read", "str"], "function", ["None"], ["", "", "def", "compress_video", "(", "images", ",", "crf", "=", "30", ")", ":", "\n", "    ", "_", ",", "fname", "=", "tempfile", ".", "mkstemp", "(", "suffix", "=", "'.mp4'", ")", "\n", "writer", "=", "skvideo", ".", "io", ".", "FFmpegWriter", "(", "fname", ",", "outputdict", "=", "{", "'-vcodec'", ":", "'libx264'", ",", "'-crf'", ":", "str", "(", "crf", ")", "}", ")", "\n", "for", "im", "in", "images", ":", "\n", "        ", "writer", ".", "writeFrame", "(", "im", ")", "\n", "", "writer", ".", "close", "(", ")", "\n", "\n", "with", "open", "(", "fname", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "bytes", "=", "f", ".", "read", "(", ")", "\n", "\n", "", "os", ".", "remove", "(", "fname", ")", "\n", "return", "np", ".", "frombuffer", "(", "bytes", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.uncompress_video": [[85, 94], ["tempfile.mkstemp", "skvideo.io.vreader", "os.remove", "open", "f.write"], "function", ["None"], ["", "def", "uncompress_video", "(", "buffer", ")", ":", "\n", "    ", "_", ",", "fname", "=", "tempfile", ".", "mkstemp", "(", "suffix", "=", "'.mp4'", ")", "\n", "with", "open", "(", "fname", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "buffer", ")", "\n", "\n", "", "for", "frame", "in", "skvideo", ".", "io", ".", "vreader", "(", "fname", ")", ":", "\n", "        ", "yield", "frame", "\n", "\n", "", "os", ".", "remove", "(", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.butter_lowpass": [[96, 101], ["butter"], "function", ["None"], ["", "def", "butter_lowpass", "(", "cutoff", ",", "fs", ",", "order", "=", "5", ")", ":", "\n", "    ", "nyq", "=", "0.5", "*", "fs", "\n", "normal_cutoff", "=", "cutoff", "/", "nyq", "\n", "b", ",", "a", "=", "butter", "(", "order", ",", "normal_cutoff", ",", "btype", "=", "'low'", ",", "analog", "=", "False", ")", "\n", "return", "b", ",", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.butter_lowpass_filter": [[103, 107], ["np_utils.butter_lowpass", "lfilter"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.butter_lowpass"], ["", "def", "butter_lowpass_filter", "(", "data", ",", "cutoff", ",", "fs", ",", "order", "=", "5", ")", ":", "\n", "    ", "b", ",", "a", "=", "butter_lowpass", "(", "cutoff", ",", "fs", ",", "order", "=", "order", ")", "\n", "y", "=", "lfilter", "(", "b", ",", "a", ",", "data", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.savitzky_golay": [[109, 131], ["range", "numpy.mat", "numpy.concatenate", "numpy.convolve", "numpy.abs", "numpy.abs", "TypeError", "TypeError", "math.factorial", "numpy.abs", "numpy.abs", "numpy.int", "numpy.int", "ValueError", "range", "numpy.linalg.pinv"], "function", ["None"], ["", "def", "savitzky_golay", "(", "y", ",", "window_size", ",", "order", ",", "deriv", "=", "0", ",", "rate", "=", "1", ")", ":", "\n", "#https://scipy-cookbook.readthedocs.io/items/SavitzkyGolay.html", "\n", "    ", "try", ":", "\n", "        ", "window_size", "=", "np", ".", "abs", "(", "np", ".", "int", "(", "window_size", ")", ")", "\n", "order", "=", "np", ".", "abs", "(", "np", ".", "int", "(", "order", ")", ")", "\n", "", "except", "ValueError", ":", "\n", "        ", "raise", "ValueError", "(", "\"window_size and order have to be of type int\"", ")", "\n", "", "if", "window_size", "%", "2", "!=", "1", "or", "window_size", "<", "1", ":", "\n", "        ", "raise", "TypeError", "(", "\"window_size size must be a positive odd number\"", ")", "\n", "", "if", "window_size", "<", "order", "+", "2", ":", "\n", "        ", "raise", "TypeError", "(", "\"window_size is too small for the polynomials order\"", ")", "\n", "", "order_range", "=", "range", "(", "order", "+", "1", ")", "\n", "half_window", "=", "(", "window_size", "-", "1", ")", "//", "2", "\n", "# precompute coefficients", "\n", "b", "=", "np", ".", "mat", "(", "[", "[", "k", "**", "i", "for", "i", "in", "order_range", "]", "for", "k", "in", "range", "(", "-", "half_window", ",", "half_window", "+", "1", ")", "]", ")", "\n", "m", "=", "np", ".", "linalg", ".", "pinv", "(", "b", ")", ".", "A", "[", "deriv", "]", "*", "rate", "**", "deriv", "*", "factorial", "(", "deriv", ")", "\n", "# pad the signal at the extremes with", "\n", "# values taken from the signal itself", "\n", "firstvals", "=", "y", "[", "0", "]", "-", "np", ".", "abs", "(", "y", "[", "1", ":", "half_window", "+", "1", "]", "[", ":", ":", "-", "1", "]", "-", "y", "[", "0", "]", ")", "\n", "lastvals", "=", "y", "[", "-", "1", "]", "+", "np", ".", "abs", "(", "y", "[", "-", "half_window", "-", "1", ":", "-", "1", "]", "[", ":", ":", "-", "1", "]", "-", "y", "[", "-", "1", "]", ")", "\n", "y", "=", "np", ".", "concatenate", "(", "(", "firstvals", ",", "y", ",", "lastvals", ")", ")", "\n", "return", "np", ".", "convolve", "(", "m", "[", ":", ":", "-", "1", "]", ",", "y", ",", "mode", "=", "'valid'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.yaw_rotmat": [[133, 140], ["list", "numpy.reshape", "numpy.stack", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "yaw_rotmat", "(", "yaw", ")", ":", "\n", "    ", "dims", "=", "list", "(", "yaw", ".", "shape", ")", "\n", "return", "np", ".", "reshape", "(", "\n", "np", ".", "stack", "(", "[", "np", ".", "cos", "(", "yaw", ")", ",", "-", "np", ".", "sin", "(", "yaw", ")", ",", "\n", "np", ".", "sin", "(", "yaw", ")", ",", "np", ".", "cos", "(", "yaw", ")", "]", ",", "\n", "axis", "=", "-", "1", ")", ",", "\n", "dims", "+", "[", "2", ",", "2", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.get_files_ending_with": [[9, 22], ["isinstance", "os.path.exists", "os.listdir", "sorted", "hasattr", "sorted", "fname.endswith", "list", "fnames.append", "itertools.chain", "os.path.join", "file_utils.get_files_ending_with"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.get_files_ending_with"], ["def", "get_files_ending_with", "(", "folder_or_folders", ",", "ext", ")", ":", "\n", "    ", "if", "isinstance", "(", "folder_or_folders", ",", "str", ")", ":", "\n", "        ", "folder", "=", "folder_or_folders", "\n", "assert", "os", ".", "path", ".", "exists", "(", "folder", ")", "\n", "\n", "fnames", "=", "[", "]", "\n", "for", "fname", "in", "os", ".", "listdir", "(", "folder", ")", ":", "\n", "            ", "if", "fname", ".", "endswith", "(", "ext", ")", ":", "\n", "                ", "fnames", ".", "append", "(", "os", ".", "path", ".", "join", "(", "folder", ",", "fname", ")", ")", "\n", "", "", "return", "sorted", "(", "fnames", ")", "\n", "", "else", ":", "\n", "        ", "assert", "hasattr", "(", "folder_or_folders", ",", "'__iter__'", ")", "\n", "return", "sorted", "(", "list", "(", "itertools", ".", "chain", "(", "*", "[", "get_files_ending_with", "(", "folder", ",", "ext", ")", "for", "folder", "in", "folder_or_folders", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.recursive_get_files_ending_with": [[24, 31], ["isinstance", "sorted", "hasattr", "sorted", "list", "str", "itertools.chain", "pathlib.Path().rglob", "pathlib.Path", "file_utils.recursive_get_files_ending_with"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.recursive_get_files_ending_with"], ["", "", "def", "recursive_get_files_ending_with", "(", "folder_or_folders", ",", "ext", ")", ":", "\n", "    ", "if", "isinstance", "(", "folder_or_folders", ",", "str", ")", ":", "\n", "        ", "return", "sorted", "(", "[", "str", "(", "path", ")", "for", "path", "in", "Path", "(", "folder_or_folders", ")", ".", "rglob", "(", "'*{0}'", ".", "format", "(", "ext", ")", ")", "]", ")", "\n", "", "else", ":", "\n", "        ", "assert", "hasattr", "(", "folder_or_folders", ",", "'__iter__'", ")", "\n", "return", "sorted", "(", "list", "(", "itertools", ".", "chain", "(", "*", "[", "recursive_get_files_ending_with", "(", "folder", ",", "ext", ")", "\n", "for", "folder", "in", "folder_or_folders", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.get_hdf5_leaf_names": [[33, 45], ["isinstance", "os.path.exists", "isinstance", "h5py.File", "file_utils.get_hdf5_leaf_names", "node.items", "file_utils.get_hdf5_leaf_names"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.get_hdf5_leaf_names", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.get_hdf5_leaf_names"], ["", "", "def", "get_hdf5_leaf_names", "(", "node", ",", "name", "=", "''", ")", ":", "\n", "    ", "if", "isinstance", "(", "node", ",", "str", ")", ":", "\n", "        ", "assert", "os", ".", "path", ".", "exists", "(", "node", ")", "\n", "with", "h5py", ".", "File", "(", "node", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "return", "get_hdf5_leaf_names", "(", "f", ")", "\n", "", "", "elif", "isinstance", "(", "node", ",", "h5py", ".", "Dataset", ")", ":", "\n", "        ", "return", "[", "name", "]", "\n", "", "else", ":", "\n", "        ", "names", "=", "[", "]", "\n", "for", "child_name", ",", "child", "in", "node", ".", "items", "(", ")", ":", "\n", "            ", "names", "+=", "get_hdf5_leaf_names", "(", "child", ",", "name", "=", "name", "+", "'/'", "+", "child_name", ")", "\n", "", "return", "names", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.import_config": [[47, 53], ["config_fname.endswith", "importlib.util.spec_from_file_location", "importlib.util.module_from_spec", "importlib.util.spec_from_file_location.loader.exec_module"], "function", ["None"], ["", "", "def", "import_config", "(", "config_fname", ")", ":", "\n", "    ", "assert", "config_fname", ".", "endswith", "(", "'.py'", ")", "\n", "spec", "=", "importlib", ".", "util", ".", "spec_from_file_location", "(", "'config'", ",", "config_fname", ")", "\n", "config", "=", "importlib", ".", "util", ".", "module_from_spec", "(", "spec", ")", "\n", "spec", ".", "loader", ".", "exec_module", "(", "config", ")", "\n", "return", "config", ".", "params", "\n", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Axis.__init__": [[9, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ",", "pyblits", ")", ":", "\n", "        ", "self", ".", "ax", "=", "ax", "\n", "self", ".", "_pyblits", "=", "pyblits", "\n", "self", ".", "_is_first_draw", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Axis.draw": [[14, 22], ["pyblit.Axis.ax.draw_artist", "pyblit.Axis.ax.figure.canvas.blit", "pyblit.Axis.ax.draw_artist"], "methods", ["None"], ["", "def", "draw", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "_is_first_draw", ":", "\n", "            ", "self", ".", "ax", ".", "draw_artist", "(", "self", ".", "ax", ".", "patch", ")", "\n", "for", "pyblit", "in", "self", ".", "_pyblits", ":", "\n", "                ", "for", "artist", "in", "pyblit", ".", "artists", ":", "\n", "                    ", "self", ".", "ax", ".", "draw_artist", "(", "artist", ")", "\n", "", "", "self", ".", "ax", ".", "figure", ".", "canvas", ".", "blit", "(", "self", ".", "ax", ".", "bbox", ")", "\n", "", "self", ".", "_is_first_draw", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Arrow.__init__": [[26, 29], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_arrow", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Arrow.artists": [[30, 33], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "_arrow", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Arrow.draw": [[34, 39], ["pyblit.Arrow._ax.arrow", "pyblit.Arrow._arrow.remove"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "x", ",", "y", ",", "dx", ",", "dy", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_arrow", "is", "not", "None", ":", "\n", "            ", "self", ".", "_arrow", ".", "remove", "(", ")", "\n", "\n", "", "self", ".", "_arrow", "=", "self", ".", "_ax", ".", "arrow", "(", "x", ",", "y", ",", "dx", ",", "dy", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Bar.__init__": [[43, 46], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_rects", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Bar.artists": [[47, 50], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_rects", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Bar.draw": [[51, 57], ["pyblit.Bar._ax.bar().get_children", "zip", "rect_i.set_height", "pyblit.Bar._ax.bar"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "x", ",", "y", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_rects", "is", "None", ":", "\n", "            ", "self", ".", "_rects", "=", "self", ".", "_ax", ".", "bar", "(", "x", ",", "y", ",", "**", "kwargs", ")", ".", "get_children", "(", ")", "\n", "", "else", ":", "\n", "            ", "for", "y_i", ",", "rect_i", "in", "zip", "(", "y", ",", "self", ".", "_rects", ")", ":", "\n", "                ", "rect_i", ".", "set_height", "(", "y_i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Barh.__init__": [[61, 64], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_rects", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Barh.artists": [[65, 68], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_rects", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Barh.draw": [[69, 79], ["pyblit.Barh._ax.barh().get_children", "zip", "rect_i.set_width", "zip", "pyblit.Barh._ax.barh", "rect_i.set_color"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "y", ",", "width", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_rects", "is", "None", ":", "\n", "            ", "self", ".", "_rects", "=", "self", ".", "_ax", ".", "barh", "(", "y", ",", "width", ",", "**", "kwargs", ")", ".", "get_children", "(", ")", "\n", "", "else", ":", "\n", "            ", "for", "width_i", ",", "rect_i", "in", "zip", "(", "width", ",", "self", ".", "_rects", ")", ":", "\n", "                ", "rect_i", ".", "set_width", "(", "width_i", ")", "\n", "", "if", "'color'", "in", "kwargs", ":", "\n", "                ", "color", "=", "kwargs", "[", "'color'", "]", "\n", "for", "rect_i", ",", "color_i", "in", "zip", "(", "self", ".", "_rects", ",", "color", ")", ":", "\n", "                    ", "rect_i", ".", "set_color", "(", "color_i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Imshow.__init__": [[82, 85], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_imshow", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Imshow.artists": [[86, 89], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "_imshow", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Imshow.draw": [[90, 97], ["pyblit.Imshow._ax.imshow", "pyblit.Imshow._ax.get_xaxis().set_visible", "pyblit.Imshow._ax.get_yaxis().set_visible", "pyblit.Imshow._imshow.set_data", "pyblit.Imshow._ax.get_xaxis", "pyblit.Imshow._ax.get_yaxis"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "im", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_imshow", "is", "None", ":", "\n", "            ", "self", ".", "_imshow", "=", "self", ".", "_ax", ".", "imshow", "(", "im", ",", "**", "kwargs", ")", "\n", "self", ".", "_ax", ".", "get_xaxis", "(", ")", ".", "set_visible", "(", "False", ")", "\n", "self", ".", "_ax", ".", "get_yaxis", "(", ")", ".", "set_visible", "(", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_imshow", ".", "set_data", "(", "im", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Legend.__init__": [[101, 104], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_legend", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Legend.artists": [[105, 108], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "_legend", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Legend.draw": [[109, 114], ["pyblit.Legend._ax.legend"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_legend", "is", "None", ":", "\n", "            ", "self", ".", "_legend", "=", "self", ".", "_ax", ".", "legend", "(", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Line.__init__": [[118, 121], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_line", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Line.artists": [[122, 125], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "_line", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Line.draw": [[126, 134], ["pyblit.Line._line.set_xdata", "pyblit.Line._line.set_ydata", "pyblit.Line._ax.plot", "pyblit.Line._line.set_color"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "x", ",", "y", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_line", "is", "None", ":", "\n", "            ", "self", ".", "_line", "=", "self", ".", "_ax", ".", "plot", "(", "x", ",", "y", ",", "**", "kwargs", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "_line", ".", "set_xdata", "(", "x", ")", "\n", "self", ".", "_line", ".", "set_ydata", "(", "y", ")", "\n", "if", "'color'", "in", "kwargs", ":", "\n", "                ", "self", ".", "_line", ".", "set_color", "(", "kwargs", "[", "'color'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.LineCollection.__init__": [[138, 141], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_lc", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.LineCollection.artists": [[142, 145], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "_lc", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.LineCollection.draw": [[146, 158], ["numpy.stack", "xy.reshape.reshape.reshape", "numpy.hstack", "matplotlib.collections.LineCollection", "pyblit.LineCollection._ax.add_collection", "pyblit.LineCollection._lc.set_segments", "pyblit.LineCollection._lc.set_color"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "x", ",", "y", ",", "**", "kwargs", ")", ":", "\n", "        ", "xy", "=", "np", ".", "stack", "(", "[", "x", ",", "y", "]", ",", "axis", "=", "1", ")", "\n", "xy", "=", "xy", ".", "reshape", "(", "-", "1", ",", "1", ",", "2", ")", "\n", "segments", "=", "np", ".", "hstack", "(", "[", "xy", "[", ":", "-", "1", "]", ",", "xy", "[", "1", ":", "]", "]", ")", "\n", "\n", "if", "self", ".", "_lc", "is", "None", ":", "\n", "            ", "self", ".", "_lc", "=", "PltLineCollection", "(", "segments", ")", "\n", "self", ".", "_ax", ".", "add_collection", "(", "self", ".", "_lc", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_lc", ".", "set_segments", "(", "segments", ")", "\n", "", "if", "'color'", "in", "kwargs", ":", "\n", "            ", "self", ".", "_lc", ".", "set_color", "(", "kwargs", "[", "'color'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.BatchLineCollection.__init__": [[162, 165], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_lc", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.BatchLineCollection.artists": [[166, 169], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "_lc", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.BatchLineCollection.draw": [[170, 190], ["zip", "numpy.concatenate", "pyblit.BatchLineCollection._lc.set_joinstyle", "pyblit.BatchLineCollection._lc.set_capstyle", "numpy.stack", "xy_i.reshape.reshape.reshape", "numpy.hstack", "numpy.concatenate.append", "matplotlib.collections.LineCollection", "pyblit.BatchLineCollection._ax.add_collection", "pyblit.BatchLineCollection._lc.set_segments", "pyblit.BatchLineCollection._lc.set_color", "pyblit.BatchLineCollection._lc.set_linewidth", "numpy.reshape", "len"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "x", ",", "y", ",", "**", "kwargs", ")", ":", "\n", "        ", "segments", "=", "[", "]", "\n", "for", "x_i", ",", "y_i", "in", "zip", "(", "x", ",", "y", ")", ":", "\n", "            ", "xy_i", "=", "np", ".", "stack", "(", "[", "x_i", ",", "y_i", "]", ",", "axis", "=", "1", ")", "\n", "xy_i", "=", "xy_i", ".", "reshape", "(", "-", "1", ",", "1", ",", "2", ")", "\n", "segments_i", "=", "np", ".", "hstack", "(", "[", "xy_i", "[", ":", "-", "1", "]", ",", "xy_i", "[", "1", ":", "]", "]", ")", "\n", "segments", ".", "append", "(", "segments_i", ")", "\n", "", "segments", "=", "np", ".", "concatenate", "(", "segments", ",", "axis", "=", "0", ")", "\n", "\n", "if", "self", ".", "_lc", "is", "None", ":", "\n", "            ", "self", ".", "_lc", "=", "PltLineCollection", "(", "segments", ")", "\n", "self", ".", "_ax", ".", "add_collection", "(", "self", ".", "_lc", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_lc", ".", "set_segments", "(", "segments", ")", "\n", "", "if", "'color'", "in", "kwargs", ":", "\n", "            ", "self", ".", "_lc", ".", "set_color", "(", "np", ".", "reshape", "(", "kwargs", "[", "'color'", "]", ",", "[", "len", "(", "segments", ")", ",", "-", "1", "]", ")", ")", "\n", "", "if", "'linewidth'", "in", "kwargs", ":", "\n", "            ", "self", ".", "_lc", ".", "set_linewidth", "(", "kwargs", "[", "'linewidth'", "]", ")", "\n", "", "self", ".", "_lc", ".", "set_joinstyle", "(", "'round'", ")", "\n", "self", ".", "_lc", ".", "set_capstyle", "(", "'round'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Polygon.__init__": [[194, 197], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_patch", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Polygon.artists": [[198, 201], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "_patch", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Polygon.draw": [[202, 209], ["matplotlib.patches.Polygon", "matplotlib.collections.PatchCollection", "pyblit.Polygon._ax.add_collection", "pyblit.Polygon._patch.remove"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "points", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_patch", "is", "not", "None", ":", "\n", "            ", "self", ".", "_patch", ".", "remove", "(", ")", "\n", "self", ".", "_patch", "=", "None", "\n", "", "polygon", "=", "PltPolygon", "(", "points", ",", "True", ")", "\n", "self", ".", "_patch", "=", "PatchCollection", "(", "[", "polygon", "]", ",", "**", "kwargs", ")", "\n", "self", ".", "_ax", ".", "add_collection", "(", "self", ".", "_patch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Scatter.__init__": [[213, 216], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_path_collection", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Scatter.artists": [[217, 220], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "_path_collection", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Scatter.draw": [[221, 227], ["pyblit.Scatter._ax.scatter", "pyblit.Scatter._path_collection.set_offsets", "pyblit.Scatter._path_collection.set_facecolors", "numpy.vstack"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "x", ",", "y", ",", "c", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_path_collection", "is", "None", ":", "\n", "            ", "self", ".", "_path_collection", "=", "self", ".", "_ax", ".", "scatter", "(", "x", ",", "y", ",", "c", "=", "c", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_path_collection", ".", "set_offsets", "(", "np", ".", "vstack", "(", "(", "x", ",", "y", ")", ")", ".", "T", ")", "\n", "self", ".", "_path_collection", ".", "set_facecolors", "(", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.__init__": [[231, 234], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ax", ")", ":", "\n", "        ", "self", ".", "_ax", "=", "ax", "\n", "self", ".", "_text", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.artists": [[235, 238], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "artists", "(", "self", ")", ":", "\n", "        ", "return", "[", "self", ".", "_text", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw": [[239, 244], ["pyblit.Text._ax.text", "pyblit.Text._text.set_text"], "methods", ["None"], ["", "def", "draw", "(", "self", ",", "x", ",", "y", ",", "text", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_text", "is", "None", ":", "\n", "            ", "self", ".", "_text", "=", "self", ".", "_ax", ".", "text", "(", "x", ",", "y", ",", "text", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_text", ".", "set_text", "(", "text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.jackal_hdf5_dataset.JackalHdf5Dataset._init_params_to_attrs": [[11, 18], ["super()._init_params_to_attrs", "params.get", "params.get"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_params_to_attrs", "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get", "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", ")", ".", "_init_params_to_attrs", "(", "params", ")", "\n", "\n", "self", ".", "_rebalance", "=", "params", ".", "get", "(", "'rebalance'", ",", "True", ")", "\n", "\n", "self", ".", "_truncate_each_rollout_by", "=", "params", ".", "get", "(", "'truncate_each_rollout_by'", ",", "None", ")", "\n", "", "@", "abstract", ".", "overrides", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.jackal_hdf5_dataset.JackalHdf5Dataset._init_setup": [[18, 34], ["super()._init_setup", "jackal_hdf5_dataset.JackalHdf5Dataset._datadict.collision.ravel().copy", "numpy.logical_not", "numpy.convolve", "numpy.logical_and", "numpy.logical_and", "numpy.where", "numpy.where", "jackal_hdf5_dataset.JackalHdf5Dataset._datadict.collision.ravel", "numpy.logical_not", "numpy.logical_not"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "_init_setup", "(", ")", "\n", "\n", "### collision / no collision indices", "\n", "\n", "collision", "=", "self", ".", "_datadict", ".", "collision", ".", "ravel", "(", ")", ".", "copy", "(", ")", "\n", "collision_horizon", "=", "np", ".", "convolve", "(", "collision", ",", "[", "1.", "]", "*", "self", ".", "_horizon", "+", "[", "0.", "]", "*", "(", "self", ".", "_horizon", "-", "1", ")", ",", "mode", "=", "'same'", ")", ">", "0", "\n", "nocollision_horizon", "=", "np", ".", "logical_not", "(", "collision_horizon", ")", "\n", "\n", "done", "=", "self", ".", "_datadict", ".", "done", "\n", "collision_horizon", "=", "np", ".", "logical_and", "(", "collision_horizon", ",", "np", ".", "logical_not", "(", "done", ")", ")", "[", ":", "-", "self", ".", "_horizon", "]", "\n", "nocollision_horizon", "=", "np", ".", "logical_and", "(", "nocollision_horizon", ",", "np", ".", "logical_not", "(", "done", ")", ")", "[", ":", "-", "self", ".", "_horizon", "]", "\n", "\n", "self", ".", "_collision_indices", "=", "np", ".", "where", "(", "collision_horizon", ")", "[", "0", "]", "\n", "self", ".", "_nocollision_indices", "=", "np", ".", "where", "(", "nocollision_horizon", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.jackal_hdf5_dataset.JackalHdf5Dataset._parse_hdf5": [[35, 42], ["super()._parse_hdf5", "sidewalk.robots.jackal.utils.jackal_utils.process_image"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset._parse_hdf5", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.process_image"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_parse_hdf5", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "        ", "new_value", "=", "super", "(", ")", ".", "_parse_hdf5", "(", "key", ",", "value", ")", "\n", "if", "key", "==", "'images/front'", ":", "\n", "            ", "desired_shape", "=", "self", ".", "_env_spec", ".", "names_to_shapes", ".", "images", ".", "front", "\n", "new_value", "=", "process_image", "(", "new_value", ",", "desired_shape", ",", "image_rectify", "=", "True", ")", "\n", "", "return", "new_value", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.jackal_hdf5_dataset.JackalHdf5Dataset._load_hdf5s": [[43, 67], ["super()._load_hdf5s", "numpy.logical_not", "datadict.leaf_modify", "numpy.convolve", "numpy.where", "numpy.convolve", "numpy.logical_not"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset._load_hdf5s", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_modify"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_load_hdf5s", "(", "self", ")", ":", "\n", "        ", "datadict", ",", "valid_start_indices", "=", "super", "(", ")", ".", "_load_hdf5s", "(", ")", "\n", "\n", "if", "self", ".", "_truncate_each_rollout_by", "is", "not", "None", ":", "\n", "            ", "done", "=", "datadict", ".", "done", "\n", "done_padded", "=", "np", ".", "convolve", "(", "\n", "done", ",", "\n", "[", "1", "]", "*", "self", ".", "_truncate_each_rollout_by", "+", "[", "0", "]", "*", "(", "self", ".", "_truncate_each_rollout_by", "-", "1", ")", ",", "\n", "mode", "=", "'same'", "\n", ")", ">", "0", "\n", "keep", "=", "np", ".", "logical_not", "(", "\n", "np", ".", "convolve", "(", "\n", "done", ",", "\n", "[", "1", "]", "*", "(", "self", ".", "_truncate_each_rollout_by", "-", "1", ")", "+", "[", "0", "]", "*", "(", "self", ".", "_truncate_each_rollout_by", "-", "2", ")", ",", "\n", "mode", "=", "'same'", "\n", ")", ">", "0", "\n", ")", "\n", "\n", "datadict", ".", "done", "=", "done_padded", "\n", "datadict", ".", "leaf_modify", "(", "lambda", "x", ":", "x", "[", "keep", "]", ")", "\n", "valid_start_indices", "=", "np", ".", "where", "(", "np", ".", "logical_not", "(", "datadict", ".", "done", ")", ")", "[", "0", "]", "\n", "\n", "", "return", "datadict", ",", "valid_start_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.jackal_hdf5_dataset.JackalHdf5Dataset.get_batch": [[68, 95], ["super().get_batch", "len", "tensorflow.concat", "tensorflow.cast", "numpy.random.choice().reshape", "numpy.random.choice", "numpy.random.choice", "numpy.concatenate", "numpy.random.choice", "tensorflow.zeros", "numpy.random.choice", "len", "len", "int", "numpy.prod"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset.get_batch"], ["", "@", "abstract", ".", "overrides", "\n", "def", "get_batch", "(", "self", ",", "indices", "=", "None", ",", "is_tf", "=", "True", ")", ":", "\n", "        ", "if", "indices", "is", "None", ":", "\n", "            ", "if", "self", ".", "_rebalance", ":", "\n", "                ", "assert", "len", "(", "self", ".", "_collision_indices", ")", ">", "0", "\n", "assert", "len", "(", "self", ".", "_nocollision_indices", ")", ">", "0", "\n", "\n", "collision_indices", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "_collision_indices", ",", "size", "=", "self", ".", "_batch_size", "//", "2", ")", "\n", "nocollision_indices", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "_nocollision_indices", ",", "size", "=", "self", ".", "_batch_size", "-", "self", ".", "_batch_size", "//", "2", ")", "\n", "\n", "indices", "=", "np", ".", "concatenate", "(", "[", "collision_indices", ",", "nocollision_indices", "]", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "indices", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "_valid_start_indices", "[", ":", "-", "self", ".", "_horizon", "]", ",", "size", "=", "self", ".", "_batch_size", ")", "\n", "\n", "", "", "inputs", ",", "outputs", "=", "super", "(", ")", ".", "get_batch", "(", "indices", "=", "indices", ",", "is_tf", "=", "is_tf", ")", "\n", "\n", "### replace actions after done with random samples from the training distribution", "\n", "assert", "is_tf", "\n", "batch_size", "=", "len", "(", "indices", ")", "\n", "done", "=", "tf", ".", "concat", "(", "[", "tf", ".", "zeros", "(", "[", "batch_size", ",", "1", "]", ",", "dtype", "=", "tf", ".", "bool", ")", ",", "outputs", ".", "done", "[", ":", ",", ":", "-", "1", "]", "]", ",", "axis", "=", "1", ")", "\n", "done_float", "=", "tf", ".", "cast", "(", "done", ",", "tf", ".", "float32", ")", "\n", "turn", "=", "inputs", ".", "commands", ".", "turn", "[", "...", ",", "0", "]", "\n", "random_turn", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "_datadict", ".", "commands", ".", "turn", "[", "...", ",", "0", "]", ",", "size", "=", "int", "(", "np", ".", "prod", "(", "turn", ".", "shape", ")", ")", ")", ".", "reshape", "(", "turn", ".", "shape", ")", "\n", "turn", "=", "(", "1", "-", "done_float", ")", "*", "turn", "+", "done_float", "*", "random_turn", "\n", "inputs", ".", "commands", ".", "turn", "=", "turn", "[", "...", ",", "tf", ".", "newaxis", "]", "\n", "\n", "return", "inputs", ",", "outputs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.dataset.Dataset.__init__": [[8, 15], ["isinstance", "isinstance", "dataset.Dataset._init_params_to_attrs", "dataset.Dataset._init_setup"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_params_to_attrs", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "env_spec", ")", ":", "\n", "        ", "assert", "isinstance", "(", "params", ",", "AttrDict", ")", "\n", "assert", "isinstance", "(", "env_spec", ",", "EnvSpec", ")", "\n", "\n", "self", ".", "_env_spec", "=", "env_spec", "\n", "self", ".", "_init_params_to_attrs", "(", "params", ")", "\n", "self", ".", "_init_setup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.dataset.Dataset._init_params_to_attrs": [[16, 19], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.dataset.Dataset._init_setup": [[20, 23], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.dataset.Dataset.get_batch": [[24, 35], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "get_batch", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns:\n            inputs (AttrDict)\n            outputs (AttrDict)\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "inputs", "=", "AttrDict", "(", ")", "\n", "outputs", "=", "AttrDict", "(", ")", "\n", "return", "inputs", ",", "outputs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset._init_params_to_attrs": [[14, 22], ["os.path.exists"], "methods", ["None"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "_hdf5_folders", "=", "params", ".", "hdf5_folders", "\n", "self", ".", "_batch_size", "=", "params", ".", "batch_size", "\n", "self", ".", "_horizon", "=", "params", ".", "horizon", "\n", "\n", "for", "folder", "in", "self", ".", "_hdf5_folders", ":", "\n", "            ", "assert", "os", ".", "path", ".", "exists", "(", "folder", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset._init_setup": [[23, 26], ["hdf5_dataset.Hdf5Dataset._load_hdf5s"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset._load_hdf5s"], ["", "", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "self", ".", "_datadict", ",", "self", ".", "_valid_start_indices", "=", "self", ".", "_load_hdf5s", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset._parse_hdf5": [[27, 38], ["numpy.array", "new_value.astype.astype.astype", "type", "sidewalk.utils.np_utils.bytes2im", "new_value.astype.astype.astype", "len"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.bytes2im"], ["", "def", "_parse_hdf5", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "        ", "new_value", "=", "np", ".", "array", "(", "value", ")", "\n", "if", "type", "(", "new_value", "[", "0", "]", ")", "==", "np", ".", "bytes_", ":", "\n", "            ", "new_value", "=", "np_utils", ".", "bytes2im", "(", "new_value", ")", "\n", "", "if", "new_value", ".", "dtype", "==", "np", ".", "float64", ":", "\n", "            ", "new_value", "=", "new_value", ".", "astype", "(", "np", ".", "float32", ")", "\n", "", "if", "len", "(", "new_value", ".", "shape", ")", "==", "1", ":", "\n", "            ", "new_value", "=", "new_value", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "", "dtype", "=", "self", ".", "_env_spec", ".", "names_to_dtypes", "[", "key", "]", "\n", "return", "new_value", ".", "astype", "(", "dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset._load_hdf5s": [[39, 84], ["sidewalk.utils.file_utils.get_files_ending_with", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict.leaf_modify", "len", "sidewalk.utils.python_utils.AttrDict.leaf_assert", "sidewalk.experiments.logger.debug", "sidewalk.experiments.logger.debug", "numpy.where", "h5py.File", "sidewalk.utils.file_utils.get_hdf5_leaf_names", "numpy.array", "sidewalk.utils.python_utils.AttrDict.done.append", "sidewalk.utils.python_utils.AttrDict.hdf5_fname.append", "sidewalk.utils.python_utils.AttrDict.rollout_timestep.append", "numpy.concatenate", "numpy.logical_not", "len", "sidewalk.experiments.logger.warning", "numpy.all", "sidewalk.experiments.logger.warning", "sidewalk.experiments.logger.warning", "hdf5_dataset.Hdf5Dataset._parse_hdf5", "datadict[].append", "numpy.arange", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.get_files_ending_with", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_modify", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_assert", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.debug", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.debug", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.get_hdf5_leaf_names", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.warning", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.warning", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.warning", "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset._parse_hdf5"], ["", "def", "_load_hdf5s", "(", "self", ")", ":", "\n", "        ", "hdf5_fnames", "=", "file_utils", ".", "get_files_ending_with", "(", "self", ".", "_hdf5_folders", ",", "'.hdf5'", ")", "\n", "\n", "# initialize to empty lists", "\n", "datadict", "=", "AttrDict", "(", ")", "\n", "for", "key", "in", "self", ".", "_env_spec", ".", "names", ":", "\n", "            ", "datadict", "[", "key", "]", "=", "[", "]", "\n", "", "datadict", ".", "done", "=", "[", "]", "\n", "datadict", ".", "hdf5_fname", "=", "[", "]", "\n", "datadict", ".", "rollout_timestep", "=", "[", "]", "\n", "\n", "# concatenate each hdf5", "\n", "for", "hdf5_fname", "in", "hdf5_fnames", ":", "\n", "            ", "logger", ".", "debug", "(", "'Loading '", "+", "hdf5_fname", ")", "\n", "with", "h5py", ".", "File", "(", "hdf5_fname", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "hdf5_names", "=", "file_utils", ".", "get_hdf5_leaf_names", "(", "f", ")", "\n", "hdf5_lens", "=", "np", ".", "array", "(", "[", "len", "(", "f", "[", "name", "]", ")", "for", "name", "in", "hdf5_names", "]", ")", "\n", "if", "len", "(", "hdf5_names", ")", "==", "0", ":", "\n", "                    ", "logger", ".", "warning", "(", "'Empty hdf5, skipping!'", ")", "\n", "continue", "\n", "", "if", "not", "np", ".", "all", "(", "hdf5_lens", "==", "hdf5_lens", "[", "0", "]", ")", ":", "\n", "                    ", "logger", ".", "warning", "(", "'data lengths not all the same, skipping!'", ")", "\n", "continue", "\n", "", "if", "hdf5_lens", "[", "0", "]", "==", "0", ":", "\n", "                    ", "logger", ".", "warning", "(", "'data lengths are 0, skipping!'", ")", "\n", "continue", "\n", "\n", "", "for", "key", "in", "self", ".", "_env_spec", ".", "names", ":", "\n", "                    ", "assert", "key", "in", "f", ",", "'\"{0}\" not in env space names'", ".", "format", "(", "key", ")", "\n", "value", "=", "self", ".", "_parse_hdf5", "(", "key", ",", "f", "[", "key", "]", ")", "\n", "datadict", "[", "key", "]", ".", "append", "(", "value", ")", "\n", "", "datadict", ".", "done", ".", "append", "(", "[", "False", "]", "*", "(", "len", "(", "value", ")", "-", "1", ")", "+", "[", "True", "]", ")", "\n", "datadict", ".", "hdf5_fname", ".", "append", "(", "[", "hdf5_fname", "]", "*", "len", "(", "value", ")", ")", "\n", "datadict", ".", "rollout_timestep", ".", "append", "(", "np", ".", "arange", "(", "len", "(", "value", ")", ")", ")", "\n", "\n", "# turn every value into a single numpy array", "\n", "", "", "datadict", ".", "leaf_modify", "(", "lambda", "arr_list", ":", "np", ".", "concatenate", "(", "arr_list", ",", "axis", "=", "0", ")", ")", "\n", "datadict_len", "=", "len", "(", "datadict", ".", "done", ")", "\n", "datadict", ".", "leaf_assert", "(", "lambda", "arr", ":", "len", "(", "arr", ")", "==", "datadict_len", ")", "\n", "logger", ".", "debug", "(", "'Dataset length: {}'", ".", "format", "(", "datadict_len", ")", ")", "\n", "\n", "# everywhere not done", "\n", "valid_start_indices", "=", "np", ".", "where", "(", "np", ".", "logical_not", "(", "datadict", ".", "done", ")", ")", "[", "0", "]", "\n", "\n", "return", "datadict", ",", "valid_start_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset.get_batch": [[85, 114], ["hdf5_dataset.Hdf5Dataset._datadict.leaf_apply", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "hdf5_dataset.Hdf5Dataset.done[].cumsum().astype", "numpy.random.choice", "numpy.stack", "hdf5_dataset.Hdf5Dataset.done[].cumsum", "d.leaf_modify", "tensorflow.convert_to_tensor"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_modify"], ["", "@", "abstract", ".", "overrides", "\n", "def", "get_batch", "(", "self", ",", "indices", "=", "None", ",", "is_tf", "=", "True", ")", ":", "\n", "        ", "if", "indices", "is", "None", ":", "\n", "            ", "indices", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "_valid_start_indices", "[", ":", "-", "self", ".", "_horizon", "]", ",", "\n", "size", "=", "self", ".", "_batch_size", ")", "\n", "\n", "", "sampled_datadict", "=", "self", ".", "_datadict", ".", "leaf_apply", "(", "\n", "lambda", "arr", ":", "np", ".", "stack", "(", "[", "arr", "[", "idx", ":", "idx", "+", "self", ".", "_horizon", "+", "1", "]", "for", "idx", "in", "indices", "]", ",", "axis", "=", "0", ")", ")", "\n", "\n", "inputs", "=", "AttrDict", "(", ")", "\n", "outputs", "=", "AttrDict", "(", ")", "\n", "for", "key", "in", "self", ".", "_env_spec", ".", "names", ":", "\n", "            ", "value", "=", "sampled_datadict", "[", "key", "]", "\n", "\n", "if", "key", "in", "self", ".", "_env_spec", ".", "observation_names", ":", "\n", "                ", "inputs", "[", "key", "]", "=", "value", "[", ":", ",", "0", "]", "\n", "", "elif", "key", "in", "self", ".", "_env_spec", ".", "action_names", ":", "\n", "                ", "inputs", "[", "key", "]", "=", "value", "[", ":", ",", ":", "-", "1", "]", "\n", "\n", "", "if", "key", "in", "self", ".", "_env_spec", ".", "output_observation_names", ":", "\n", "                ", "outputs", "[", "key", "]", "=", "value", "[", ":", ",", "1", ":", "]", "\n", "\n", "", "", "outputs", ".", "done", "=", "sampled_datadict", ".", "done", "[", ":", ",", "1", ":", "]", ".", "cumsum", "(", "axis", "=", "1", ")", ".", "astype", "(", "bool", ")", "\n", "\n", "if", "is_tf", ":", "\n", "            ", "for", "d", "in", "(", "inputs", ",", "outputs", ")", ":", "\n", "                ", "d", ".", "leaf_modify", "(", "lambda", "x", ":", "tf", ".", "convert_to_tensor", "(", "x", ")", ")", "\n", "\n", "", "", "return", "inputs", ",", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset.__len__": [[115, 117], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_datadict", ".", "done", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.jackal_env_spec.JackalEnvSpec.__init__": [[9, 22], ["sidewalk.envs.env_spec.EnvSpec.__init__", "params.get"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer.__init__", "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "params", ",", "\n", "names_shapes_limits_dtypes", "=", "(", "\n", "(", "'images/front'", ",", "(", "96", ",", "192", ",", "3", ")", ",", "(", "0", ",", "255", ")", ",", "np", ".", "uint8", ")", ",", "\n", "(", "'collision'", ",", "(", "1", ",", ")", ",", "(", "0", ",", "1", ")", ",", "np", ".", "float32", ")", ",", "\n", "\n", "(", "'commands/turn'", ",", "(", "1", ",", ")", ",", "(", "-", "0.5", ",", "0.5", ")", ",", "np", ".", "float32", ")", ",", "\n", "(", "'commands/dt'", ",", "(", "1", ",", ")", ",", "(", "0.", ",", "1.0", ")", ",", "np", ".", "float32", ")", "\n", ")", "\n", ")", "\n", "\n", "self", ".", "_observation_names", "=", "params", ".", "get", "(", "'observation_names'", ",", "(", "'images/front'", ",", "'collision'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.jackal_env_spec.JackalEnvSpec.observation_names": [[23, 27], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "abstract", ".", "overrides", "\n", "def", "observation_names", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_observation_names", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.jackal_env_spec.JackalEnvSpec.output_observation_names": [[28, 32], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "abstract", ".", "overrides", "\n", "def", "output_observation_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "'collision'", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.jackal_env_spec.JackalEnvSpec.action_names": [[33, 37], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "abstract", ".", "overrides", "\n", "def", "action_names", "(", "self", ")", ":", "\n", "        ", "return", "(", "'commands/turn'", ",", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.jackal_hdf5_env.JackalHdf5Env._init_params_to_attrs": [[14, 19], ["params.get", "params.get"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get", "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "_hdf5_folders", "=", "params", ".", "hdf5_folders", "\n", "self", ".", "_start_timestep", "=", "params", ".", "get", "(", "'start_timestep'", ",", "0", ")", "\n", "self", ".", "_shift_angle", "=", "params", ".", "get", "(", "'shift_angle'", ",", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.jackal_hdf5_env.JackalHdf5Env._init_setup": [[20, 26], ["sidewalk.utils.file_utils.get_files_ending_with", "sidewalk.robots.jackal.data.hdf5_io.Hdf5Traverser", "range", "jackal_hdf5_env.JackalHdf5Env._data_traverser.next_timestep"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.file_utils.get_files_ending_with", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_timestep"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "hdf5_fnames", "=", "file_utils", ".", "get_files_ending_with", "(", "self", ".", "_hdf5_folders", ",", "'.hdf5'", ")", "\n", "self", ".", "_data_traverser", "=", "Hdf5Traverser", "(", "hdf5_fnames", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "_start_timestep", ")", ":", "\n", "            ", "self", ".", "_data_traverser", ".", "next_timestep", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.jackal_hdf5_env.JackalHdf5Env._get_obs": [[27, 40], ["sidewalk.utils.python_utils.AttrDict", "set", "sidewalk.robots.jackal.utils.jackal_utils.process_image", "jackal_hdf5_env.JackalHdf5Env._data_traverser.get"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.process_image", "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get"], ["", "", "@", "abstract", ".", "overrides", "\n", "def", "_get_obs", "(", "self", ")", ":", "\n", "        ", "obs", "=", "AttrDict", "(", ")", "\n", "\n", "for", "name", "in", "set", "(", "self", ".", "_env_spec", ".", "observation_names", ")", ":", "\n", "            ", "obs", "[", "name", "]", "=", "self", ".", "_data_traverser", ".", "get", "(", "name", ",", "horizon", "=", "1", ")", "[", "0", "]", "\n", "\n", "", "original_image", "=", "obs", ".", "images", ".", "front", "\n", "desired_shape", "=", "self", ".", "_env_spec", ".", "names_to_shapes", ".", "images", ".", "front", "\n", "image", "=", "process_image", "(", "original_image", ",", "desired_shape", ",", "image_rectify", "=", "True", ")", "\n", "obs", ".", "images", ".", "front", "=", "image", "\n", "\n", "return", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.jackal_hdf5_env.JackalHdf5Env._get_goal": [[41, 49], ["sidewalk.utils.python_utils.AttrDict", "numpy.ravel().astype", "numpy.ravel().astype", "numpy.ravel", "numpy.ravel"], "methods", ["None"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_get_goal", "(", "self", ")", ":", "\n", "        ", "goal", "=", "AttrDict", "(", ")", "\n", "\n", "goal", ".", "is_turn", "=", "np", ".", "ravel", "(", "False", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "goal", ".", "turn_goal", "=", "np", ".", "ravel", "(", "0.", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "return", "goal", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.jackal_hdf5_env.JackalHdf5Env._get_done": [[50, 53], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_get_done", "(", "self", ")", ":", "\n", "        ", "return", "False", "", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv._init_setup": [[10, 13], ["None"], "methods", ["None"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "self", ".", "_data_traverser", "=", "None", "\n", "# self._data_traverser = data_utils.DataTraverser(data_fnames)", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv._get_obs": [[15, 20], ["sidewalk.utils.python_utils.AttrDict", "data_env.DataEnv._data_traverser.get"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get"], ["", "def", "_get_obs", "(", "self", ")", ":", "\n", "        ", "obs", "=", "AttrDict", "(", ")", "\n", "for", "name", "in", "self", ".", "_env_spec", ".", "observation_names", ":", "\n", "            ", "obs", "[", "name", "]", "=", "self", ".", "_data_traverser", ".", "get", "(", "name", ",", "horizon", "=", "1", ")", "\n", "", "return", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv._get_goal": [[21, 26], ["sidewalk.utils.python_utils.AttrDict", "data_env.DataEnv._data_traverser.get"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get"], ["", "def", "_get_goal", "(", "self", ")", ":", "\n", "        ", "goal", "=", "AttrDict", "(", ")", "\n", "for", "name", "in", "self", ".", "_env_spec", ".", "goal_names", ":", "\n", "            ", "goal", "[", "name", "]", "=", "self", ".", "_data_traverser", ".", "get", "(", "name", ",", "horizon", "=", "1", ")", "\n", "", "return", "goal", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv._get_done": [[27, 30], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_get_done", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv.step": [[31, 60], ["print", "sidewalk.utils.python_utils.Getch.getch", "data_env.DataEnv._get_obs", "data_env.DataEnv._get_goal", "data_env.DataEnv._get_done", "str", "sys.exit", "data_env.DataEnv._data_traverser.next_timestep", "data_env.DataEnv._data_traverser.prev_timestep", "data_env.DataEnv._data_traverser.next_data", "data_env.DataEnv._data_traverser.prev_data", "range", "int", "data_env.DataEnv._data_traverser.next_timestep", "data_env.DataEnv._data_traverser.next_data_end", "data_env.DataEnv._data_traverser.prev_data_end"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.Getch.getch", "home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv._get_obs", "home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv._get_goal", "home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv._get_done", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_timestep", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.prev_timestep", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_data", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.prev_data", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_timestep", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_data_end", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.prev_data_end"], ["", "@", "abstract", ".", "overrides", "\n", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "print", "(", "str", "(", "self", ".", "_data_traverser", ")", ")", "\n", "char", "=", "Getch", ".", "getch", "(", ")", "\n", "\n", "if", "char", "==", "'q'", ":", "\n", "            ", "sys", ".", "exit", "(", "0", ")", "\n", "", "elif", "char", "==", "'e'", ":", "\n", "            ", "self", ".", "_data_traverser", ".", "next_timestep", "(", ")", "\n", "", "elif", "char", "==", "'w'", ":", "\n", "            ", "self", ".", "_data_traverser", ".", "prev_timestep", "(", ")", "\n", "", "elif", "char", "==", "'d'", ":", "\n", "            ", "self", ".", "_data_traverser", ".", "next_data", "(", ")", "\n", "", "elif", "char", "==", "'s'", ":", "\n", "            ", "self", ".", "_data_traverser", ".", "prev_data", "(", ")", "\n", "", "elif", "char", ">=", "'1'", "and", "char", "<=", "'9'", ":", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "char", ")", ")", ":", "\n", "                ", "self", ".", "_data_traverser", ".", "next_timestep", "(", ")", "\n", "", "", "elif", "char", "==", "'c'", ":", "\n", "            ", "self", ".", "_data_traverser", ".", "next_data_end", "(", ")", "\n", "", "elif", "char", "==", "'x'", ":", "\n", "            ", "self", ".", "_data_traverser", ".", "prev_data_end", "(", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "obs", "=", "self", ".", "_get_obs", "(", ")", "\n", "goal", "=", "self", ".", "_get_goal", "(", ")", "\n", "done", "=", "self", ".", "_get_done", "(", ")", "\n", "return", "obs", ",", "goal", ",", "done", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv.reset": [[61, 67], ["data_env.DataEnv._get_obs", "data_env.DataEnv._get_goal", "data_env.DataEnv._data_traverser.next_timestep"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv._get_obs", "home.repos.pwc.inspect_result.gkahn13_LaND.envs.data_env.DataEnv._get_goal", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_timestep"], ["", "@", "abstract", ".", "overrides", "\n", "def", "reset", "(", "self", ")", ":", "\n", "        ", "obs", "=", "self", ".", "_get_obs", "(", ")", "\n", "goal", "=", "self", ".", "_get_goal", "(", ")", "\n", "self", ".", "_data_traverser", ".", "next_timestep", "(", ")", "\n", "return", "obs", ",", "goal", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.__init__": [[9, 20], ["list", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "names_shapes_limits_dtypes", "=", "[", "]", ")", ":", "\n", "        ", "names_shapes_limits_dtypes", "=", "list", "(", "names_shapes_limits_dtypes", ")", "\n", "names_shapes_limits_dtypes", "+=", "[", "(", "'done'", ",", "(", "1", ",", ")", ",", "(", "0", ",", "1", ")", ",", "np", ".", "bool", ")", "]", "\n", "\n", "self", ".", "_names_to_shapes", "=", "AttrDict", "(", ")", "\n", "self", ".", "_names_to_limits", "=", "AttrDict", "(", ")", "\n", "self", ".", "_names_to_dtypes", "=", "AttrDict", "(", ")", "\n", "for", "name", ",", "shape", ",", "limit", ",", "dtype", "in", "names_shapes_limits_dtypes", ":", "\n", "            ", "self", ".", "_names_to_shapes", "[", "name", "]", "=", "shape", "\n", "self", ".", "_names_to_limits", "[", "name", "]", "=", "limit", "\n", "self", ".", "_names_to_dtypes", "[", "name", "]", "=", "dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.observation_names": [[21, 29], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "@", "abstract", ".", "abstractmethod", "\n", "def", "observation_names", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns:\n            list(str)\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.output_observation_names": [[30, 33], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "output_observation_names", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "observation_names", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.goal_names": [[34, 43], ["tuple"], "methods", ["None"], ["", "@", "property", "\n", "def", "goal_names", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        The only difference between a goal and an observation is that goals are user-specified\n\n        Returns:\n            list(str)\n        \"\"\"", "\n", "return", "tuple", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.action_names": [[44, 52], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "abstract", ".", "abstractmethod", "\n", "def", "action_names", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns:\n            list(str)\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.names": [[53, 60], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "names", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns:\n            list(str)\n        \"\"\"", "\n", "return", "self", ".", "observation_names", "+", "self", ".", "goal_names", "+", "self", ".", "action_names", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.names_to_shapes": [[61, 70], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "names_to_shapes", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Knowing the dimensions is useful for building neural networks\n\n        Returns:\n            AttrDict\n        \"\"\"", "\n", "return", "self", ".", "_names_to_shapes", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.names_to_limits": [[71, 80], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "names_to_limits", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Knowing the limits is useful for normalizing data\n\n        Returns:\n            AttrDict\n        \"\"\"", "\n", "return", "self", ".", "_names_to_limits", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.names_to_dtypes": [[81, 90], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "names_to_dtypes", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Knowing the data type is useful for building neural networks and datasets\n\n        Returns:\n            AttrDict\n        \"\"\"", "\n", "return", "self", ".", "_names_to_dtypes", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.limits": [[91, 100], ["numpy.array", "numpy.array", "len"], "methods", ["None"], ["", "def", "limits", "(", "self", ",", "names", ")", ":", "\n", "        ", "lower", ",", "upper", "=", "[", "]", ",", "[", "]", "\n", "for", "name", "in", "names", ":", "\n", "            ", "shape", "=", "self", ".", "names_to_shapes", "[", "name", "]", "\n", "assert", "len", "(", "shape", ")", "==", "1", "\n", "l", ",", "u", "=", "self", ".", "names_to_limits", "[", "name", "]", "\n", "lower", "+=", "[", "l", "]", "*", "shape", "[", "0", "]", "\n", "upper", "+=", "[", "u", "]", "*", "shape", "[", "0", "]", "\n", "", "return", "np", ".", "array", "(", "lower", ")", ",", "np", ".", "array", "(", "upper", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.dims": [[101, 103], ["numpy.array", "numpy.sum"], "methods", ["None"], ["", "def", "dims", "(", "self", ",", "names", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "np", ".", "sum", "(", "self", ".", "names_to_shapes", "[", "name", "]", ")", "for", "name", "in", "names", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.dim": [[104, 106], ["numpy.sum", "env_spec.EnvSpec.dims"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.dims"], ["", "def", "dim", "(", "self", ",", "names", ")", ":", "\n", "        ", "return", "np", ".", "sum", "(", "self", ".", "dims", "(", "names", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env.Env.__init__": [[6, 10], ["env.Env._init_params_to_attrs", "env.Env._init_setup"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_params_to_attrs", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "env_spec", ")", ":", "\n", "        ", "self", ".", "_env_spec", "=", "env_spec", "\n", "self", ".", "_init_params_to_attrs", "(", "params", ")", "\n", "self", ".", "_init_setup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env.Env._init_params_to_attrs": [[11, 14], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env.Env._init_setup": [[15, 18], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env.Env.step": [[19, 23], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "step", "(", "self", ",", "action", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "return", "obs", ",", "goal", ",", "done", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env.Env.reset": [[24, 28], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "reset", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "return", "obs", ",", "goal", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_disengagement_visualizer.JackalDisengagementVisualizer._init_setup_model": [[12, 18], ["sidewalk.utils.pyblit.BatchLineCollection", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.pyblit.Axis"], "methods", ["None"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup_model", "(", "self", ",", "ax", ")", ":", "\n", "        ", "batch_line", "=", "pyblit", ".", "BatchLineCollection", "(", "ax", ")", "\n", "return", "AttrDict", "(", "\n", "batch_line", "=", "batch_line", ",", "\n", "ax", "=", "pyblit", ".", "Axis", "(", "ax", ",", "[", "batch_line", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_disengagement_visualizer.JackalDisengagementVisualizer._step_model": [[20, 46], ["numpy.argsort", "sidewalk.robots.jackal.utils.jackal_utils.turns_and_steps_to_positions", "numpy.array", "matplotlib.cm.autumn_r", "jackal_disengagement_visualizer.JackalDisengagementVisualizer._pyblit.model.ax.ax.set_title", "jackal_disengagement_visualizer.JackalDisengagementVisualizer._pyblit.model.batch_line.draw", "jackal_disengagement_visualizer.JackalDisengagementVisualizer._setup_batchline_axis", "jackal_disengagement_visualizer.JackalDisengagementVisualizer._pyblit.model.ax.draw", "numpy.ones", "numpy.ones", "numpy.linspace().astype", "numpy.shape", "jackal_disengagement_visualizer.JackalDisengagementVisualizer._plot_positions", "len", "numpy.linspace", "len"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.turns_and_steps_to_positions", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._setup_batchline_axis", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_positions"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_step_model", "(", "self", ",", "get_action", ")", ":", "\n", "        ", "probcolls", "=", "get_action", ".", "all_model_outputs", ".", "probcoll", "[", "...", ",", "0", "]", "\n", "idxs", "=", "np", ".", "argsort", "(", "get_action", ".", "all_costs", ")", "\n", "\n", "# subsample", "\n", "subsample", "=", "10", "\n", "idxs", "=", "idxs", "[", "np", ".", "linspace", "(", "0", ",", "len", "(", "idxs", ")", "-", "1", ",", "subsample", ")", ".", "astype", "(", "int", ")", "]", "\n", "probcolls", "=", "probcolls", "[", "idxs", "]", "\n", "turns", "=", "-", "get_action", ".", "all_actions", ".", "commands", ".", "turn", "[", "idxs", ",", "...", ",", "0", "]", "\n", "\n", "# positions", "\n", "steps", "=", "constants", ".", "METERS_PER_TIMESTEP", "*", "np", ".", "ones", "(", "np", ".", "shape", "(", "turns", ")", ")", "\n", "positions", "=", "jackal_utils", ".", "turns_and_steps_to_positions", "(", "turns", ",", "steps", ")", "\n", "plot_positions", "=", "np", ".", "array", "(", "[", "self", ".", "_plot_positions", "(", "p", ")", "for", "p", "in", "positions", "]", ")", "\n", "\n", "# plot", "\n", "xs", "=", "plot_positions", "[", "...", ",", "0", "]", "\n", "ys", "=", "plot_positions", "[", "...", ",", "1", "]", "\n", "colors", "=", "plt", ".", "cm", ".", "autumn_r", "(", "probcolls", ")", "\n", "linewidths", "=", "1.5", "*", "np", ".", "ones", "(", "len", "(", "xs", ")", ")", "\n", "\n", "self", ".", "_pyblit", ".", "model", ".", "ax", ".", "ax", ".", "set_title", "(", "'Planner'", ")", "\n", "self", ".", "_pyblit", ".", "model", ".", "batch_line", ".", "draw", "(", "xs", ",", "ys", ",", "color", "=", "colors", ",", "linewidth", "=", "linewidths", ")", "\n", "self", ".", "_setup_batchline_axis", "(", "self", ".", "_pyblit", ".", "model", ".", "ax", ".", "ax", ",", "horizon", "=", "turns", ".", "shape", "[", "1", "]", ")", "\n", "self", ".", "_pyblit", ".", "model", ".", "ax", ".", "draw", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._init_setup": [[14, 27], ["matplotlib.subplots", "axes.ravel", "sidewalk.utils.python_utils.AttrDict", "jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_observation", "jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_policy", "jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_turn", "jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_model"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_observation", "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_policy", "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_turn", "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_model"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "self", ".", "_fig", ",", "axes", "=", "plt", ".", "subplots", "(", "4", ",", "1", ",", "figsize", "=", "(", "8", ",", "20", ")", ")", "\n", "ax_observation", ",", "ax_policy", ",", "ax_turn", ",", "ax_model", "=", "axes", ".", "ravel", "(", ")", "\n", "\n", "self", ".", "_pyblit", "=", "AttrDict", "(", "\n", "observation", "=", "self", ".", "_init_setup_observation", "(", "ax_observation", ")", ",", "\n", "policy", "=", "self", ".", "_init_setup_policy", "(", "ax_policy", ")", ",", "\n", "turn", "=", "self", ".", "_init_setup_turn", "(", "ax_turn", ")", ",", "\n", "model", "=", "self", ".", "_init_setup_model", "(", "ax_model", ")", "\n", ")", "\n", "\n", "self", ".", "_fig_shown", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_observation": [[28, 33], ["sidewalk.utils.pyblit.Imshow", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.pyblit.Axis"], "methods", ["None"], ["", "def", "_init_setup_observation", "(", "self", ",", "ax", ")", ":", "\n", "        ", "imshow", "=", "pyblit", ".", "Imshow", "(", "ax", ")", "\n", "return", "AttrDict", "(", "\n", "imshow", "=", "imshow", ",", "\n", "ax", "=", "pyblit", ".", "Axis", "(", "ax", ",", "[", "imshow", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_policy": [[35, 40], ["sidewalk.utils.pyblit.BatchLineCollection", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.pyblit.Axis"], "methods", ["None"], ["", "def", "_init_setup_policy", "(", "self", ",", "ax", ")", ":", "\n", "        ", "batch_line", "=", "pyblit", ".", "BatchLineCollection", "(", "ax", ")", "\n", "return", "AttrDict", "(", "\n", "batch_line", "=", "batch_line", ",", "\n", "ax", "=", "pyblit", ".", "Axis", "(", "ax", ",", "[", "batch_line", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_turn": [[42, 47], ["sidewalk.utils.pyblit.Barh", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.pyblit.Axis"], "methods", ["None"], ["", "def", "_init_setup_turn", "(", "self", ",", "ax", ")", ":", "\n", "        ", "bar", "=", "pyblit", ".", "Barh", "(", "ax", ")", "\n", "return", "AttrDict", "(", "\n", "bar", "=", "bar", ",", "\n", "ax", "=", "pyblit", ".", "Axis", "(", "ax", ",", "[", "bar", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._init_setup_model": [[49, 54], ["sidewalk.utils.pyblit.Imshow", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.pyblit.Axis"], "methods", ["None"], ["", "def", "_init_setup_model", "(", "self", ",", "ax", ")", ":", "\n", "        ", "imshow", "=", "pyblit", ".", "Imshow", "(", "ax", ")", "\n", "return", "AttrDict", "(", "\n", "imshow", "=", "imshow", ",", "\n", "ax", "=", "pyblit", ".", "Axis", "(", "ax", ",", "[", "imshow", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer.step": [[56, 68], ["jackal_imitation_visualizer.JackalImitationVisualizer._step_observation", "jackal_imitation_visualizer.JackalImitationVisualizer._step_policy", "jackal_imitation_visualizer.JackalImitationVisualizer._step_turn", "jackal_imitation_visualizer.JackalImitationVisualizer._step_model", "jackal_imitation_visualizer.JackalImitationVisualizer._fig.tight_layout", "matplotlib.show", "matplotlib.pause"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._step_observation", "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._step_policy", "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._step_turn", "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._step_model"], ["", "@", "abstract", ".", "overrides", "\n", "def", "step", "(", "self", ",", "model", ",", "observation", ",", "goal", ",", "done", ",", "get_action", ")", ":", "\n", "        ", "self", ".", "_step_observation", "(", "observation", ")", "\n", "self", ".", "_step_policy", "(", "get_action", ")", "\n", "self", ".", "_step_turn", "(", "get_action", ")", "\n", "self", ".", "_step_model", "(", "get_action", ")", "\n", "\n", "if", "not", "self", ".", "_fig_shown", ":", "\n", "            ", "self", ".", "_fig", ".", "tight_layout", "(", "pad", "=", "3.0", ")", "\n", "plt", ".", "show", "(", "block", "=", "False", ")", "\n", "plt", ".", "pause", "(", "0.1", ")", "\n", "", "self", ".", "_fig_shown", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._plot_positions": [[69, 72], ["numpy.array", "numpy.array.dot"], "methods", ["None"], ["", "def", "_plot_positions", "(", "self", ",", "positions", ")", ":", "\n", "        ", "forward_is_up", "=", "np", ".", "array", "(", "[", "[", "0.", ",", "-", "1.", "]", ",", "[", "1.", ",", "0.", "]", "]", ")", "\n", "return", "forward_is_up", ".", "dot", "(", "positions", ".", "T", ")", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._setup_batchline_axis": [[73, 82], ["ax.set_xlim", "ax.set_ylim", "ax.set_aspect", "ax.set_xlabel", "ax.set_ylabel", "numpy.array"], "methods", ["None"], ["", "def", "_setup_batchline_axis", "(", "self", ",", "ax", ",", "horizon", ")", ":", "\n", "        ", "max_step", "=", "constants", ".", "METERS_PER_STEP", "\n", "xlim", "=", "horizon", "*", "max_step", "*", "np", ".", "array", "(", "[", "-", "1.0", ",", "1.0", "]", ")", "\n", "ylim", "=", "(", "-", "0.1", "*", "max_step", ",", "horizon", "*", "max_step", ")", "\n", "ax", ".", "set_xlim", "(", "xlim", ")", "\n", "ax", ".", "set_ylim", "(", "ylim", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "ax", ".", "set_xlabel", "(", "'meters'", ")", "\n", "ax", ".", "set_ylabel", "(", "'meters'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._step_observation": [[83, 87], ["jackal_imitation_visualizer.JackalImitationVisualizer._pyblit.observation.imshow.draw", "jackal_imitation_visualizer.JackalImitationVisualizer._pyblit.observation.ax.draw"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw"], ["", "def", "_step_observation", "(", "self", ",", "observation", ")", ":", "\n", "        ", "image", "=", "observation", ".", "images", ".", "front", "\n", "self", ".", "_pyblit", ".", "observation", ".", "imshow", ".", "draw", "(", "image", ")", "\n", "self", ".", "_pyblit", ".", "observation", ".", "ax", ".", "draw", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._step_policy": [[88, 104], ["sidewalk.robots.jackal.utils.jackal_utils.turns_and_steps_to_positions", "jackal_imitation_visualizer.JackalImitationVisualizer._plot_positions", "jackal_imitation_visualizer.JackalImitationVisualizer._pyblit.policy.batch_line.draw", "jackal_imitation_visualizer.JackalImitationVisualizer._pyblit.policy.ax.ax.set_title", "jackal_imitation_visualizer.JackalImitationVisualizer._setup_batchline_axis", "jackal_imitation_visualizer.JackalImitationVisualizer._pyblit.policy.ax.draw", "get_action.action_sequence.commands.turn.ravel", "numpy.ones", "numpy.shape", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.turns_and_steps_to_positions", "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_positions", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._setup_batchline_axis", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw"], ["", "def", "_step_policy", "(", "self", ",", "get_action", ")", ":", "\n", "        ", "turns", "=", "-", "get_action", ".", "action_sequence", ".", "commands", ".", "turn", ".", "ravel", "(", ")", "\n", "steps", "=", "constants", ".", "METERS_PER_TIMESTEP", "*", "np", ".", "ones", "(", "np", ".", "shape", "(", "turns", ")", ")", "\n", "positions", "=", "jackal_utils", ".", "turns_and_steps_to_positions", "(", "turns", ",", "steps", ")", "\n", "plot_positions", "=", "self", ".", "_plot_positions", "(", "positions", ")", "\n", "\n", "xs", "=", "[", "plot_positions", "[", ":", ",", "0", "]", "]", "\n", "ys", "=", "[", "plot_positions", "[", ":", ",", "1", "]", "]", "\n", "colors", "=", "[", "(", "0", ",", "0", ",", "0", ",", "1", ")", "]", "*", "(", "len", "(", "plot_positions", ")", "-", "1", ")", "\n", "linewidths", "=", "[", "5.0", "]", "*", "(", "len", "(", "plot_positions", ")", "-", "1", ")", "\n", "\n", "self", ".", "_pyblit", ".", "policy", ".", "batch_line", ".", "draw", "(", "xs", ",", "ys", ",", "color", "=", "colors", ",", "linewidth", "=", "linewidths", ")", "\n", "\n", "self", ".", "_pyblit", ".", "policy", ".", "ax", ".", "ax", ".", "set_title", "(", "'Optimal action sequence'", ")", "\n", "self", ".", "_setup_batchline_axis", "(", "self", ".", "_pyblit", ".", "policy", ".", "ax", ".", "ax", ",", "horizon", "=", "len", "(", "turns", ")", ")", "\n", "self", ".", "_pyblit", ".", "policy", ".", "ax", ".", "draw", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._step_turn": [[105, 130], ["len", "numpy.arange", "get_action.action_sequence.commands.turn.ravel", "jackal_imitation_visualizer.JackalImitationVisualizer._pyblit.turn.bar.draw", "ax.set_xlim", "ax.set_xlabel", "ax.set_ylabel", "ax.set_yticks", "ax.set_title", "jackal_imitation_visualizer.JackalImitationVisualizer._pyblit.turn.ax.draw", "get_action.keys", "numpy.sqrt", "numpy.concatenate", "numpy.concatenate", "numpy.arange", "list", "get_action.action_sequence_var.commands.turn.ravel", "numpy.array", "get_action.action_sequence.leaf_values", "numpy.sign"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_values"], ["", "def", "_step_turn", "(", "self", ",", "get_action", ")", ":", "\n", "        ", "horizon", "=", "len", "(", "list", "(", "get_action", ".", "action_sequence", ".", "leaf_values", "(", ")", ")", "[", "0", "]", ")", "\n", "\n", "ys", "=", "np", ".", "arange", "(", "horizon", ")", "\n", "widths", "=", "get_action", ".", "action_sequence", ".", "commands", ".", "turn", ".", "ravel", "(", ")", "\n", "colors", "=", "[", "'k'", "]", "*", "horizon", "\n", "heights", "=", "[", "0.4", "]", "*", "horizon", "\n", "\n", "if", "'action_sequence_var'", "in", "get_action", ".", "keys", "(", ")", ":", "\n", "# prepend so it's underneath the mean", "\n", "            ", "std", "=", "np", ".", "sqrt", "(", "get_action", ".", "action_sequence_var", ".", "commands", ".", "turn", ".", "ravel", "(", ")", ")", "\n", "ys", "=", "np", ".", "concatenate", "(", "[", "ys", "+", "0.02", ",", "ys", "]", ")", "\n", "widths", "=", "np", ".", "concatenate", "(", "[", "widths", "+", "np", ".", "sign", "(", "widths", ")", "*", "0.5", "*", "std", ",", "widths", "]", ")", "\n", "colors", "=", "[", "(", "0.", ",", "0.", ",", "0.", ",", "0.5", ")", "]", "*", "horizon", "+", "colors", "\n", "heights", "=", "[", "0.15", "]", "*", "horizon", "+", "heights", "\n", "\n", "", "self", ".", "_pyblit", ".", "turn", ".", "bar", ".", "draw", "(", "ys", ",", "widths", ",", "color", "=", "colors", ",", "height", "=", "heights", ")", "\n", "\n", "ax", "=", "self", ".", "_pyblit", ".", "turn", ".", "ax", ".", "ax", "\n", "ax", ".", "set_xlim", "(", "2.0", "*", "np", ".", "array", "(", "self", ".", "_env_spec", ".", "names_to_limits", ".", "commands", ".", "turn", ")", ")", "\n", "ax", ".", "set_xlabel", "(", "'rad / time step'", ")", "\n", "ax", ".", "set_ylabel", "(", "'planning timestep'", ")", "\n", "ax", ".", "set_yticks", "(", "np", ".", "arange", "(", "horizon", ")", ")", "\n", "ax", ".", "set_title", "(", "'Optimized actions'", ")", "\n", "self", ".", "_pyblit", ".", "turn", ".", "ax", ".", "draw", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.jackal_imitation_visualizer.JackalImitationVisualizer._step_model": [[131, 138], ["scipy.special.softmax", "jackal_imitation_visualizer.JackalImitationVisualizer._pyblit.model.ax.ax.set_title", "jackal_imitation_visualizer.JackalImitationVisualizer._pyblit.model.imshow.draw", "jackal_imitation_visualizer.JackalImitationVisualizer._pyblit.model.ax.draw", "scipy.special.softmax.min", "scipy.special.softmax.max", "scipy.special.softmax.min"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw"], ["", "def", "_step_model", "(", "self", ",", "get_action", ")", ":", "\n", "        ", "logits", "=", "get_action", ".", "all_model_outputs", ".", "logits", "[", "0", "]", "\n", "probs", "=", "softmax", "(", "logits", ")", "\n", "probs_rescaled", "=", "(", "probs", "-", "probs", ".", "min", "(", ")", ")", "/", "(", "probs", ".", "max", "(", ")", "-", "probs", ".", "min", "(", ")", ")", "\n", "self", ".", "_pyblit", ".", "model", ".", "ax", ".", "ax", ".", "set_title", "(", "'Action distribution'", ")", "\n", "self", ".", "_pyblit", ".", "model", ".", "imshow", ".", "draw", "(", "probs_rescaled", "[", "np", ".", "newaxis", "]", ",", "cmap", "=", "plt", ".", "cm", ".", "magma", ",", "vmin", "=", "0.", ",", "vmax", "=", "1.", ")", "\n", "self", ".", "_pyblit", ".", "model", ".", "ax", ".", "draw", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.visualizer.Visualizer.__init__": [[3, 7], ["visualizer.Visualizer._init_params_to_attrs", "visualizer.Visualizer._init_setup"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_params_to_attrs", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "env_spec", ")", ":", "\n", "        ", "self", ".", "_env_spec", "=", "env_spec", "\n", "self", ".", "_init_params_to_attrs", "(", "params", ")", "\n", "self", ".", "_init_setup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.visualizer.Visualizer._init_params_to_attrs": [[8, 10], ["None"], "methods", ["None"], ["", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.visualizer.Visualizer._init_setup": [[11, 13], ["None"], "methods", ["None"], ["", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.visualizers.visualizer.Visualizer.step": [[14, 16], ["None"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "model", ",", "observation", ",", "goal", ",", "done", ",", "get_action", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.jackal_disengagement_model.JackalDisengagementModel._init_params_to_attrs": [[16, 23], ["super()._init_params_to_attrs"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_params_to_attrs"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", ")", ".", "_init_params_to_attrs", "(", "params", ")", "\n", "\n", "self", ".", "_finetune_cnn", "=", "params", ".", "finetune_cnn", "\n", "self", ".", "_init_with_imagenet_weights", "=", "params", ".", "init_with_imagenet_weights", "\n", "self", ".", "_num_collision_bins", "=", "params", ".", "num_collision_bins", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.jackal_disengagement_model.JackalDisengagementModel._init_cnn": [[24, 51], ["tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.applications.MobileNetV2", "tensorflow.keras.layers.Flatten", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense"], "methods", ["None"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_init_cnn", "(", "self", ")", ":", "\n", "        ", "assert", "self", ".", "_has_observation_im_inputs", "\n", "self", ".", "_obs_im_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "applications", ".", "MobileNetV2", "(", "input_shape", "=", "self", ".", "_env_spec", ".", "names_to_shapes", ".", "images", ".", "front", ",", "\n", "weights", "=", "'imagenet'", "if", "self", ".", "_init_with_imagenet_weights", "else", "None", ",", "\n", "include_top", "=", "False", ")", ",", "# 2M", "\n", "tf", ".", "keras", ".", "layers", ".", "Flatten", "(", ")", ",", "\n", "]", ")", "\n", "self", ".", "_obs_im_model", ".", "trainable", "=", "self", ".", "_finetune_cnn", "\n", "\n", "if", "self", ".", "_has_observation_vec_inputs", ":", "\n", "            ", "self", ".", "_obs_vec_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "32", ",", "activation", "=", "'relu'", ",", "name", "=", "'obs_vec/dense0'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "32", ",", "activation", "=", "None", ",", "name", "=", "'obs_vec/dense1'", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_obs_vec_model", "=", "None", "\n", "\n", "", "if", "self", ".", "_has_observation_im_inputs", "or", "self", ".", "_has_observation_vec_inputs", ":", "\n", "            ", "self", ".", "_obs_lowd_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "256", ",", "activation", "=", "'relu'", ",", "name", "=", "'obs_lowd/dense0'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "128", ",", "activation", "=", "'relu'", ",", "name", "=", "'obs_lowd/dense1'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "self", ".", "_obs_lowd_dim", ",", "activation", "=", "None", ",", "name", "=", "'obs_lowd/dense2'", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_obs_lowd_model", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.jackal_disengagement_model.JackalDisengagementModel._rnn_output_dim": [[56, 60], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "@", "abstract", ".", "overrides", "\n", "def", "_rnn_output_dim", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_num_collision_bins", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.jackal_disengagement_model.JackalDisengagementModel._is_rnn_input_actions": [[61, 65], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "abstract", ".", "overrides", "\n", "def", "_is_rnn_input_actions", "(", "self", ")", ":", "\n", "        ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.jackal_disengagement_model.JackalDisengagementModel._get_outputs": [[70, 97], ["numpy.linspace().astype", "tensorflow.cast", "tensorflow.one_hot", "tensorflow.nn.softmax", "tensorflow.reduce_sum", "tensorflow.nn.sigmoid", "sidewalk.utils.python_utils.AttrDict", "tensorflow_probability.stats.find_bins", "numpy.linspace"], "methods", ["None"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_get_outputs", "(", "self", ",", "inputs", ",", "rnn_outputs", ",", "training", "=", "False", ")", ":", "\n", "# bin the actions", "\n", "        ", "actions", "=", "inputs", ".", "commands", ".", "turn", "[", "...", ",", "0", "]", "\n", "lower", ",", "upper", "=", "-", "1.", ",", "1.", "\n", "edges", "=", "np", ".", "linspace", "(", "lower", ",", "upper", ",", "self", ".", "_num_collision_bins", "+", "1", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "bins", "=", "tf", ".", "cast", "(", "tfp", ".", "stats", ".", "find_bins", "(", "actions", ",", "edges", ",", "extend_lower_interval", "=", "True", ",", "extend_upper_interval", "=", "True", ")", ",", "tf", ".", "int32", ")", "\n", "\n", "turn_one_hot", "=", "tf", ".", "one_hot", "(", "bins", ",", "depth", "=", "self", ".", "_num_collision_bins", ",", "axis", "=", "2", ")", "\n", "\n", "# for training", "\n", "all_pre_logits", "=", "rnn_outputs", "\n", "all_unscaled_logits", "=", "tf", ".", "nn", ".", "softmax", "(", "all_pre_logits", ",", "axis", "=", "-", "1", ")", "\n", "all_logits", "=", "-", "5", "+", "10", "*", "all_unscaled_logits", "# from -5 to 5", "\n", "logits", "=", "tf", ".", "reduce_sum", "(", "all_logits", "*", "turn_one_hot", ",", "axis", "=", "-", "1", ")", "\n", "logits", "=", "logits", "[", "...", ",", "tf", ".", "newaxis", "]", "# for compatibility", "\n", "\n", "# for planning", "\n", "probs", "=", "tf", ".", "nn", ".", "sigmoid", "(", "logits", ")", "\n", "\n", "return", "AttrDict", "(", "\n", "turn_one_hot", "=", "turn_one_hot", ",", "\n", "logits", "=", "logits", ",", "\n", "probcoll", "=", "probs", ",", "\n", "\n", "# debuggin", "\n", "all_logits", "=", "all_logits", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.jackal_imitation_model.JackalImitationModel._init_params_to_attrs": [[16, 27], ["numpy.array().astype", "sorted", "sorted", "len", "tuple", "tuple", "numpy.array"], "methods", ["None"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "_finetune_cnn", "=", "params", ".", "finetune_cnn", "\n", "self", ".", "_init_with_imagenet_weights", "=", "params", ".", "init_with_imagenet_weights", "\n", "\n", "assert", "self", ".", "_env_spec", ".", "action_names", "==", "(", "'commands/turn'", ",", ")", "\n", "self", ".", "_bin_edges", "=", "np", ".", "array", "(", "params", ".", "bin_edges", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "self", ".", "_observation_im_names", "=", "sorted", "(", "tuple", "(", "params", ".", "observation_im_names", ")", ")", "\n", "self", ".", "_observation_vec_names", "=", "sorted", "(", "tuple", "(", "params", ".", "observation_vec_names", ")", ")", "\n", "self", ".", "_obs_lowd_dim", "=", "len", "(", "self", ".", "_bin_edges", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.jackal_imitation_model.JackalImitationModel._init_cnn": [[28, 58], ["tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.applications.MobileNetV2", "tensorflow.keras.layers.Flatten", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense"], "methods", ["None"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_init_cnn", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_has_observation_im_inputs", ":", "\n", "\n", "            ", "self", ".", "_obs_im_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "applications", ".", "MobileNetV2", "(", "input_shape", "=", "self", ".", "_env_spec", ".", "names_to_shapes", ".", "images", ".", "front", ",", "\n", "weights", "=", "'imagenet'", "if", "self", ".", "_init_with_imagenet_weights", "else", "None", ",", "\n", "include_top", "=", "False", ")", ",", "# 2M", "\n", "tf", ".", "keras", ".", "layers", ".", "Flatten", "(", ")", ",", "\n", "]", ")", "\n", "self", ".", "_obs_im_model", ".", "trainable", "=", "self", ".", "_finetune_cnn", "\n", "", "else", ":", "\n", "            ", "self", ".", "_obs_im_model", "=", "None", "\n", "\n", "", "if", "self", ".", "_has_observation_vec_inputs", ":", "\n", "            ", "self", ".", "_obs_vec_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "32", ",", "activation", "=", "'relu'", ",", "name", "=", "'obs_vec/dense0'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "32", ",", "activation", "=", "None", ",", "name", "=", "'obs_vec/dense1'", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_obs_vec_model", "=", "None", "\n", "\n", "", "if", "self", ".", "_has_observation_im_inputs", "or", "self", ".", "_has_observation_vec_inputs", ":", "\n", "            ", "self", ".", "_obs_lowd_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "256", ",", "activation", "=", "'relu'", ",", "name", "=", "'obs_lowd/dense0'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "128", ",", "activation", "=", "'relu'", ",", "name", "=", "'obs_lowd/dense1'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "self", ".", "_obs_lowd_dim", ",", "activation", "=", "None", ",", "name", "=", "'obs_lowd/dense2'", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_obs_lowd_model", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.jackal_imitation_model.JackalImitationModel._get_outputs": [[63, 82], ["tensorflow.reshape", "tensorflow_probability.stats.find_bins", "tensorflow.distributions.Categorical", "tensorflow.distributions.Categorical.log_prob", "tensorflow.cast", "sidewalk.utils.python_utils.AttrDict", "tensorflow.equal", "tensorflow.argmax", "tensorflow.cast", "tensorflow.convert_to_tensor"], "methods", ["None"], ["", "", "def", "_get_outputs", "(", "self", ",", "inputs", ",", "obs_lowd", ",", "training", "=", "False", ")", ":", "\n", "# labels", "\n", "        ", "horizon", "=", "1", "\n", "turn", "=", "tf", ".", "reshape", "(", "inputs", ".", "commands", ".", "turn", "[", "...", ",", ":", "horizon", ",", "0", "]", ",", "(", "-", "1", ",", ")", ")", "\n", "bins", "=", "tfp", ".", "stats", ".", "find_bins", "(", "turn", ",", "self", ".", "_bin_edges", ",", "extend_lower_interval", "=", "True", ",", "extend_upper_interval", "=", "True", ")", "\n", "\n", "# prediction", "\n", "logits", "=", "obs_lowd", "\n", "dist", "=", "tf", ".", "distributions", ".", "Categorical", "(", "logits", ")", "\n", "log_probs", "=", "dist", ".", "log_prob", "(", "bins", ")", "\n", "\n", "# accuracy", "\n", "accs", "=", "tf", ".", "cast", "(", "tf", ".", "equal", "(", "tf", ".", "argmax", "(", "logits", ",", "axis", "=", "-", "1", ")", ",", "tf", ".", "cast", "(", "bins", ",", "tf", ".", "int64", ")", ")", ",", "tf", ".", "float32", ")", "\n", "\n", "return", "AttrDict", "(", "\n", "logits", "=", "logits", ",", "\n", "log_prob", "=", "log_probs", ",", "\n", "acc", "=", "accs", ",", "\n", "bin_edges", "=", "tf", ".", "convert_to_tensor", "(", "self", ".", "_bin_edges", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.jackal_imitation_model.JackalImitationModel.call": [[84, 92], ["jackal_imitation_model.JackalImitationModel._get_outputs", "jackal_imitation_model.JackalImitationModel.freeze", "jackal_imitation_model.JackalImitationModel.get_obs_lowd", "sidewalk.utils.tf_utils.get_kernels"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._get_outputs", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.freeze", "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.get_obs_lowd", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.get_kernels"], ["", "@", "abstract", ".", "overrides", "\n", "def", "call", "(", "self", ",", "inputs", ",", "obs_lowd", "=", "None", ",", "training", "=", "False", ")", ":", "\n", "        ", "obs_lowd", "=", "obs_lowd", "if", "obs_lowd", "is", "not", "None", "else", "self", ".", "get_obs_lowd", "(", "inputs", ",", "training", "=", "training", ")", "\n", "outputs", "=", "self", ".", "_get_outputs", "(", "inputs", ",", "obs_lowd", ",", "training", "=", "training", ")", "\n", "if", "training", ":", "\n", "            ", "outputs", ".", "kernels", "=", "tf_utils", ".", "get_kernels", "(", "self", ".", "layers", ")", "\n", "\n", "", "return", "outputs", ".", "freeze", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel._init_params_to_attrs": [[15, 20], ["sorted", "sorted", "tuple", "tuple"], "methods", ["None"], ["@", "abstract", ".", "overrides", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "_observation_im_names", "=", "sorted", "(", "tuple", "(", "params", ".", "observation_im_names", ")", ")", "\n", "self", ".", "_observation_vec_names", "=", "sorted", "(", "tuple", "(", "params", ".", "observation_vec_names", ")", ")", "\n", "self", ".", "_obs_lowd_dim", "=", "params", ".", "obs_lowd_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel._init_setup": [[21, 24], ["cnn_model.CnnModel._init_cnn"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel._init_cnn"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "self", ".", "_init_cnn", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel._init_cnn": [[25, 56], ["tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Flatten", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense"], "methods", ["None"], ["", "def", "_init_cnn", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_has_observation_im_inputs", ":", "\n", "            ", "self", ".", "_obs_im_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "filters", "=", "32", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "activation", "=", "'relu'", ",", "\n", "name", "=", "'obs_im/conv0'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "filters", "=", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "activation", "=", "'relu'", ",", "\n", "name", "=", "'obs_im/conv1'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Conv2D", "(", "filters", "=", "64", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "strides", "=", "(", "2", ",", "2", ")", ",", "activation", "=", "'relu'", ",", "\n", "name", "=", "'obs_im/conv2'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Flatten", "(", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "256", ",", "activation", "=", "'relu'", ",", "name", "=", "'obs_im/dense0'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "128", ",", "activation", "=", "None", ",", "name", "=", "'obs_im/dense1'", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_obs_im_model", "=", "None", "\n", "\n", "", "if", "self", ".", "_has_observation_vec_inputs", ":", "\n", "            ", "self", ".", "_obs_vec_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "32", ",", "activation", "=", "'relu'", ",", "name", "=", "'obs_vec/dense0'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "32", ",", "activation", "=", "None", ",", "name", "=", "'obs_vec/dense1'", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_obs_vec_model", "=", "None", "\n", "\n", "", "if", "self", ".", "_has_observation_im_inputs", "or", "self", ".", "_has_observation_vec_inputs", ":", "\n", "            ", "self", ".", "_obs_lowd_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "128", ",", "activation", "=", "'relu'", ",", "name", "=", "'obs_lowd/dense0'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "self", ".", "_obs_lowd_dim", ",", "activation", "=", "None", ",", "name", "=", "'obs_lowd/dense1'", ")", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_obs_lowd_model", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel._has_observation_im_inputs": [[61, 64], ["len"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "_has_observation_im_inputs", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_observation_im_names", ")", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel._has_observation_vec_inputs": [[65, 68], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "_has_observation_vec_inputs", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_observation_vec_names", ")", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel._concat_and_whiten": [[73, 81], ["tensorflow.concat", "cnn_model.CnnModel._env_spec.limits"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.limits"], ["", "def", "_concat_and_whiten", "(", "self", ",", "inputs", ",", "names", ")", ":", "\n", "        ", "inputs_concat", "=", "tf", ".", "concat", "(", "[", "inputs", "[", "name", "]", "for", "name", "in", "names", "]", ",", "axis", "=", "-", "1", ")", "\n", "lower", ",", "upper", "=", "self", ".", "_env_spec", ".", "limits", "(", "names", ")", "\n", "mean", "=", "0.5", "*", "(", "lower", "+", "upper", ")", "\n", "var", "=", "0.5", "*", "(", "upper", "-", "lower", ")", "\n", "inputs_concat_whitened", "=", "(", "inputs_concat", "-", "mean", ")", "/", "var", "\n", "\n", "return", "inputs_concat_whitened", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel._unwhiten_and_split": [[82, 91], ["cnn_model.CnnModel._env_spec.limits", "sidewalk.utils.python_utils.AttrDict.from_dict", "zip", "tensorflow.split", "cnn_model.CnnModel._env_spec.dims"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.limits", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.from_dict", "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.dims"], ["", "def", "_unwhiten_and_split", "(", "self", ",", "tensor_whitened", ",", "names", ")", ":", "\n", "        ", "lower", ",", "upper", "=", "self", ".", "_env_spec", ".", "limits", "(", "names", ")", "\n", "mean", "=", "0.5", "*", "(", "lower", "+", "upper", ")", "\n", "var", "=", "0.5", "*", "(", "upper", "-", "lower", ")", "\n", "tensor", "=", "tensor_whitened", "*", "var", "+", "mean", "\n", "\n", "return", "AttrDict", ".", "from_dict", "(", "{", "k", ":", "v", "for", "k", ",", "v", "in", "\n", "zip", "(", "names", ",", "\n", "tf", ".", "split", "(", "tensor", ",", "self", ".", "_env_spec", ".", "dims", "(", "names", ")", ",", "axis", "=", "2", ")", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel.get_obs_lowd": [[96, 127], ["inputs.leaf_modify", "inputs.leaf_modify", "tensorflow.concat", "cnn_model.CnnModel._obs_im_model", "obs_lowd_list.append", "cnn_model.CnnModel._concat_and_whiten", "cnn_model.CnnModel._obs_vec_model", "obs_lowd_list.append", "len", "cnn_model.CnnModel._obs_lowd_model", "tensorflow.zeros", "tensorflow.cast", "len", "tensorflow.concat", "[].shape.as_list", "len", "list", "inputs.leaf_values"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_modify", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_modify", "home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel._concat_and_whiten", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_values"], ["", "@", "abstract", ".", "overrides", "\n", "def", "get_obs_lowd", "(", "self", ",", "inputs", ",", "training", "=", "False", ")", ":", "\n", "# setup inputs", "\n", "        ", "inputs", ".", "leaf_modify", "(", "lambda", "x", ":", "x", "[", "...", ",", "tf", ".", "newaxis", "]", "if", "len", "(", "x", ".", "shape", ")", "==", "1", "else", "x", ")", "\n", "inputs", ".", "leaf_modify", "(", "lambda", "x", ":", "tf", ".", "cast", "(", "x", ",", "tf", ".", "float32", ")", ")", "\n", "for", "name", "in", "self", ".", "_env_spec", ".", "action_names", ":", "\n", "            ", "value", "=", "inputs", "[", "name", "]", "\n", "if", "len", "(", "value", ".", "shape", ")", "==", "2", ":", "\n", "                ", "inputs", "[", "name", "]", "=", "value", "[", "...", ",", "tf", ".", "newaxis", "]", "\n", "\n", "### observations", "\n", "", "", "obs_lowd_list", "=", "[", "]", "\n", "\n", "if", "self", ".", "_has_observation_im_inputs", ":", "\n", "            ", "obs_ims", "=", "tf", ".", "concat", "(", "[", "inputs", "[", "name", "]", "for", "name", "in", "self", ".", "_observation_im_names", "]", ",", "axis", "=", "-", "1", ")", "\n", "obs_ims", "=", "(", "obs_ims", "/", "255.", ")", "-", "0.5", "\n", "obs_im_lowd", "=", "self", ".", "_obs_im_model", "(", "obs_ims", ",", "training", "=", "training", ")", "\n", "obs_lowd_list", ".", "append", "(", "obs_im_lowd", ")", "\n", "\n", "", "if", "self", ".", "_has_observation_vec_inputs", ":", "\n", "            ", "obs_vecs_whitened", "=", "self", ".", "_concat_and_whiten", "(", "inputs", ",", "self", ".", "_observation_vec_names", ")", "\n", "obs_vec_lowd", "=", "self", ".", "_obs_vec_model", "(", "obs_vecs_whitened", ",", "training", "=", "training", ")", "\n", "obs_lowd_list", ".", "append", "(", "obs_vec_lowd", ")", "\n", "\n", "", "if", "len", "(", "obs_lowd_list", ")", ">", "0", ":", "\n", "            ", "obs_lowd", "=", "self", ".", "_obs_lowd_model", "(", "tf", ".", "concat", "(", "obs_lowd_list", ",", "axis", "=", "1", ")", ",", "training", "=", "training", ")", "\n", "", "else", ":", "\n", "            ", "batch_size", "=", "list", "(", "inputs", ".", "leaf_values", "(", ")", ")", "[", "0", "]", ".", "shape", ".", "as_list", "(", ")", "[", "0", "]", "\n", "obs_lowd", "=", "tf", ".", "zeros", "(", "[", "batch_size", ",", "self", ".", "_obs_lowd_dim", "]", ")", "\n", "\n", "", "return", "obs_lowd", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel.call": [[128, 136], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict.freeze", "cnn_model.CnnModel.get_obs_lowd", "sidewalk.utils.tf_utils.get_kernels"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.freeze", "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.get_obs_lowd", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.get_kernels"], ["", "@", "abstract", ".", "overrides", "\n", "def", "call", "(", "self", ",", "inputs", ",", "obs_lowd", "=", "None", ",", "training", "=", "False", ")", ":", "\n", "        ", "obs_lowd", "=", "obs_lowd", "if", "obs_lowd", "is", "not", "None", "else", "self", ".", "get_obs_lowd", "(", "inputs", ",", "training", "=", "training", ")", "\n", "outputs", "=", "AttrDict", "(", "obs_lowd", "=", "obs_lowd", ")", "\n", "if", "training", ":", "\n", "            ", "outputs", ".", "kernels", "=", "tf_utils", ".", "get_kernels", "(", "self", ".", "layers", ")", "\n", "\n", "", "return", "outputs", ".", "freeze", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.__init__": [[10, 16], ["super().__init__", "model.Model._init_params_to_attrs", "model.Model._init_setup"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer.__init__", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_params_to_attrs", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup"], ["def", "__init__", "(", "self", ",", "params", ",", "env_spec", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_env_spec", "=", "env_spec", "\n", "self", ".", "_init_params_to_attrs", "(", "params", ")", "\n", "self", ".", "_init_setup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model._init_params_to_attrs": [[17, 20], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model._init_setup": [[21, 24], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.get_obs_lowd": [[25, 33], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "get_obs_lowd", "(", "self", ",", "inputs", ",", "training", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        :param inputs (AttrDict):\n        :param training (bool):\n        :return: Tensor or list\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.call": [[34, 43], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "call", "(", "self", ",", "inputs", ",", "obs_lowd", "=", "None", ",", "training", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        :param inputs (AttrDict):\n        :param obs_lowd\n        :param training (bool):\n        :return: AttrDict\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.restore": [[44, 51], ["sidewalk.experiments.logger.debug", "tensorflow.train.checkpoint_exists", "tensorflow.train.Checkpoint", "tensorflow.train.Checkpoint.restore", "tensorflow.executing_eagerly", "tf.train.Checkpoint.restore.initialize_or_restore", "tensorflow.get_default_session"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.debug", "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.restore"], ["", "def", "restore", "(", "self", ",", "fname", ")", ":", "\n", "        ", "logger", ".", "debug", "(", "'Restoring model {0}'", ".", "format", "(", "fname", ")", ")", "\n", "assert", "tf", ".", "train", ".", "checkpoint_exists", "(", "fname", ")", "\n", "checkpointer", "=", "tf", ".", "train", ".", "Checkpoint", "(", "model", "=", "self", ")", "\n", "status", "=", "checkpointer", ".", "restore", "(", "fname", ")", "\n", "if", "not", "tf", ".", "executing_eagerly", "(", ")", ":", "\n", "            ", "status", ".", "initialize_or_restore", "(", "tf", ".", "get_default_session", "(", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._init_params_to_attrs": [[16, 21], ["super()._init_params_to_attrs"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_params_to_attrs"], ["@", "abstract", ".", "overrides", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", ")", ".", "_init_params_to_attrs", "(", "params", ")", "\n", "\n", "self", ".", "_horizon", "=", "params", ".", "horizon", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._init_setup": [[22, 26], ["super()._init_setup", "rnn_model.RnnModel._init_rnn"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup", "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._init_rnn"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "_init_setup", "(", ")", "\n", "self", ".", "_init_rnn", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._init_rnn": [[27, 47], ["rnn_model.RnnModel._env_spec.dim", "tensorflow.contrib.cudnn_rnn.CudnnLSTM", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.dim"], ["", "def", "_init_rnn", "(", "self", ")", ":", "\n", "        ", "assert", "self", ".", "_obs_lowd_dim", "%", "2", "==", "0", "\n", "self", ".", "_rnn_dim", "=", "self", ".", "_obs_lowd_dim", "//", "2", "\n", "\n", "self", ".", "_action_dim", "=", "self", ".", "_env_spec", ".", "dim", "(", "self", ".", "_env_spec", ".", "action_names", ")", "\n", "for", "name", "in", "self", ".", "_observation_im_names", "+", "self", ".", "_observation_vec_names", ":", "\n", "            ", "assert", "name", "in", "self", ".", "_env_spec", ".", "observation_names", "\n", "\n", "", "if", "self", ".", "_is_rnn_input_actions", ":", "\n", "            ", "self", ".", "_rnn_input_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "16", ",", "activation", "=", "'relu'", ",", "name", "=", "'action/dense0'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "16", ",", "activation", "=", "'relu'", ",", "name", "=", "'action/dense1'", ")", ",", "\n", "]", ")", "\n", "\n", "", "self", ".", "_rnn_cell", "=", "tf", ".", "contrib", ".", "cudnn_rnn", ".", "CudnnLSTM", "(", "self", ".", "_horizon", ",", "self", ".", "_rnn_dim", ")", "\n", "\n", "self", ".", "_rnn_output_model", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "32", ",", "activation", "=", "'relu'", ",", "name", "=", "'output/dense0'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "self", ".", "_rnn_output_dim", ",", "\n", "activation", "=", "None", ",", "name", "=", "'output/dense1'", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._rnn_output_dim": [[53, 57], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "abstract", ".", "abstractmethod", "\n", "def", "_rnn_output_dim", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._is_rnn_input_actions": [[58, 62], ["None"], "methods", ["None"], ["", "@", "property", "\n", "@", "abstract", ".", "abstractmethod", "\n", "def", "_is_rnn_input_actions", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._get_rnn_outputs": [[67, 82], ["tensorflow.split", "tensorflow.nn.rnn_cell.LSTMStateTuple", "tensorflow.transpose", "rnn_model.RnnModel._rnn_cell", "tensorflow.transpose", "rnn_model.RnnModel._rnn_output_model", "rnn_model.RnnModel._concat_and_whiten", "rnn_model.RnnModel._rnn_input_model", "tensorflow.tile"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.models.cnn_model.CnnModel._concat_and_whiten"], ["", "def", "_get_rnn_outputs", "(", "self", ",", "obs_lowd", ",", "actions", ",", "training", "=", "False", ")", ":", "\n", "        ", "if", "self", ".", "_is_rnn_input_actions", ":", "\n", "            ", "actions_whitened", "=", "self", ".", "_concat_and_whiten", "(", "actions", ",", "self", ".", "_env_spec", ".", "action_names", ")", "\n", "rnn_inputs", "=", "self", ".", "_rnn_input_model", "(", "actions_whitened", ",", "training", "=", "training", ")", "\n", "", "else", ":", "\n", "            ", "rnn_inputs", "=", "tf", ".", "tile", "(", "obs_lowd", "[", ":", ",", "tf", ".", "newaxis", "]", ",", "(", "1", ",", "self", ".", "_horizon", ",", "1", ")", ")", "\n", "\n", "", "initial_state_c", ",", "initial_state_h", "=", "tf", ".", "split", "(", "obs_lowd", ",", "2", ",", "axis", "=", "1", ")", "\n", "initial_state", "=", "tf", ".", "nn", ".", "rnn_cell", ".", "LSTMStateTuple", "(", "initial_state_c", "[", "tf", ".", "newaxis", "]", ",", "initial_state_h", "[", "tf", ".", "newaxis", "]", ")", "\n", "rnn_inputs_time_major", "=", "tf", ".", "transpose", "(", "rnn_inputs", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "rnn_outputs_time_major", ",", "_", "=", "self", ".", "_rnn_cell", "(", "rnn_inputs_time_major", ",", "initial_state", "=", "initial_state", ")", "\n", "rnn_outputs_batch_major", "=", "tf", ".", "transpose", "(", "rnn_outputs_time_major", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "rnn_outputs", "=", "self", ".", "_rnn_output_model", "(", "rnn_outputs_batch_major", ",", "training", "=", "training", ")", "\n", "\n", "return", "rnn_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._get_outputs": [[83, 86], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_get_outputs", "(", "self", ",", "inputs", ",", "rnn_outputs", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel.call": [[87, 97], ["inputs.leaf_filter", "rnn_model.RnnModel._get_rnn_outputs", "rnn_model.RnnModel._get_outputs", "rnn_model.RnnModel.freeze", "rnn_model.RnnModel.get_obs_lowd", "sidewalk.utils.tf_utils.get_kernels"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_filter", "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._get_rnn_outputs", "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel._get_outputs", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.freeze", "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.get_obs_lowd", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.tf_utils.get_kernels"], ["", "@", "abstract", ".", "overrides", "\n", "def", "call", "(", "self", ",", "inputs", ",", "obs_lowd", "=", "None", ",", "training", "=", "False", ")", ":", "\n", "        ", "obs_lowd", "=", "obs_lowd", "if", "obs_lowd", "is", "not", "None", "else", "self", ".", "get_obs_lowd", "(", "inputs", ",", "training", "=", "training", ")", "\n", "actions", "=", "inputs", ".", "leaf_filter", "(", "lambda", "k", ",", "v", ":", "k", "in", "self", ".", "_env_spec", ".", "action_names", ")", "\n", "rnn_outputs", "=", "self", ".", "_get_rnn_outputs", "(", "obs_lowd", ",", "actions", ",", "training", "=", "training", ")", "\n", "outputs", "=", "self", ".", "_get_outputs", "(", "inputs", ",", "rnn_outputs", ",", "training", "=", "training", ")", "\n", "if", "training", ":", "\n", "            ", "outputs", ".", "kernels", "=", "tf_utils", ".", "get_kernels", "(", "self", ".", "layers", ")", "\n", "\n", "", "return", "outputs", ".", "freeze", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer.__init__": [[12, 17], ["sidewalk.robots.jackal.data.hdf5_io.Hdf5Traverser.__init__", "jackal_hdf5_visualizer.JackalHDF5Visualizer._setup_visualization"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer.__init__", "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._setup_visualization"], ["    ", "def", "__init__", "(", "self", ",", "hdf5_fnames", ",", "horizon", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "hdf5_fnames", ")", "\n", "\n", "self", ".", "_horizon", "=", "horizon", "\n", "self", ".", "_setup_visualization", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._setup_visualization": [[18, 31], ["matplotlib.subplots", "sidewalk.utils.pyblit.Imshow", "sidewalk.utils.pyblit.Axis", "sidewalk.utils.pyblit.Line", "sidewalk.utils.pyblit.Axis", "sidewalk.utils.pyblit.Barh", "sidewalk.utils.pyblit.Axis"], "methods", ["None"], ["", "def", "_setup_visualization", "(", "self", ")", ":", "\n", "        ", "self", ".", "_f", ",", "axes", "=", "plt", ".", "subplots", "(", "1", ",", "3", ",", "figsize", "=", "(", "20", ",", "5", ")", ")", "\n", "ax_im", ",", "ax_poses", ",", "ax_turn", "=", "axes", "\n", "self", ".", "_plot_is_showing", "=", "False", "\n", "\n", "self", ".", "_pyblit_im", "=", "pyblit", ".", "Imshow", "(", "ax_im", ")", "\n", "self", ".", "_pyblit_im_ax", "=", "pyblit", ".", "Axis", "(", "ax_im", ",", "[", "self", ".", "_pyblit_im", "]", ")", "\n", "\n", "self", ".", "_pyblit_poses", "=", "pyblit", ".", "Line", "(", "ax_poses", ")", "\n", "self", ".", "_pyblit_poses_ax", "=", "pyblit", ".", "Axis", "(", "ax_poses", ",", "[", "self", ".", "_pyblit_poses", "]", ")", "\n", "\n", "self", ".", "_pyblit_turn_bar", "=", "pyblit", ".", "Barh", "(", "ax_turn", ")", "\n", "self", ".", "_pyblit_turn_ax", "=", "pyblit", ".", "Axis", "(", "ax_turn", ",", "[", "self", ".", "_pyblit_turn_bar", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer.get": [[36, 39], ["super().get"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get"], ["", "@", "abstract", ".", "overrides", "\n", "def", "get", "(", "self", ",", "key", ",", "horizon", "=", "None", ")", ":", "\n", "        ", "return", "super", "(", ")", ".", "get", "(", "key", ",", "horizon", "=", "horizon", "or", "self", ".", "_horizon", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_im": [[44, 49], ["jackal_hdf5_visualizer.JackalHDF5Visualizer.get", "images[].reshape", "pyblit_im.draw", "pyblit_im_ax.draw", "list"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw"], ["", "def", "_plot_im", "(", "self", ",", "pyblit_im", ",", "pyblit_im_ax", ")", ":", "\n", "        ", "images", "=", "self", ".", "get", "(", "'images/front'", ",", "horizon", "=", "1", ")", "\n", "images", "=", "images", "[", ":", ":", "-", "1", "]", ".", "reshape", "(", "[", "-", "1", "]", "+", "list", "(", "images", ".", "shape", "[", "2", ":", "]", ")", ")", "\n", "pyblit_im", ".", "draw", "(", "images", ")", "\n", "pyblit_im_ax", ".", "draw", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_positions": [[50, 64], ["jackal_hdf5_visualizer.JackalHDF5Visualizer.get", "sidewalk.robots.jackal.utils.jackal_utils.turns_and_steps_to_positions", "jackal_hdf5_visualizer.JackalHDF5Visualizer._pyblit_poses.draw", "ax.set_xlim", "ax.set_ylim", "ax.set_aspect", "jackal_hdf5_visualizer.JackalHDF5Visualizer._pyblit_poses_ax.draw", "numpy.ones", "numpy.shape"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.jackal_utils.turns_and_steps_to_positions", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw"], ["", "def", "_plot_positions", "(", "self", ")", ":", "\n", "        ", "turns", "=", "self", ".", "get", "(", "'commands/turn'", ")", "\n", "steps", "=", "constants", ".", "METERS_PER_TIMESTEP", "*", "np", ".", "ones", "(", "np", ".", "shape", "(", "turns", ")", ")", "\n", "\n", "positions", "=", "jackal_utils", ".", "turns_and_steps_to_positions", "(", "turns", ",", "steps", ")", "\n", "self", ".", "_pyblit_poses", ".", "draw", "(", "positions", "[", ":", ",", "1", "]", ",", "positions", "[", ":", ",", "0", "]", ")", "\n", "\n", "ax", "=", "self", ".", "_pyblit_poses_ax", ".", "ax", "\n", "max_position", "=", "1.05", "*", "constants", ".", "METERS_PER_STEP", "*", "self", ".", "_horizon", "\n", "ax", ".", "set_xlim", "(", "(", "-", "max_position", ",", "max_position", ")", ")", "\n", "ax", ".", "set_ylim", "(", "(", "-", "0.1", ",", "max_position", ")", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "\n", "self", ".", "_pyblit_poses_ax", ".", "draw", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_turn": [[65, 81], ["jackal_hdf5_visualizer.JackalHDF5Visualizer.get", "jackal_hdf5_visualizer.JackalHDF5Visualizer.get", "numpy.pad", "numpy.pad", "jackal_hdf5_visualizer.JackalHDF5Visualizer._pyblit_turn_bar.draw", "ax.set_xlim", "ax.set_xlabel", "ax.set_ylabel", "ax.set_yticks", "jackal_hdf5_visualizer.JackalHDF5Visualizer._pyblit_turn_ax.draw", "numpy.arange", "numpy.arange", "max", "max", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get", "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw"], ["", "def", "_plot_turn", "(", "self", ")", ":", "\n", "        ", "turns", "=", "self", ".", "get", "(", "'commands/turn'", ")", "\n", "collisions", "=", "self", ".", "get", "(", "'collision'", ")", "\n", "\n", "turns", "=", "np", ".", "pad", "(", "turns", ",", "[", "0", ",", "max", "(", "self", ".", "_horizon", "-", "len", "(", "turns", ")", ",", "0", ")", "]", ")", "\n", "collisions", "=", "np", ".", "pad", "(", "collisions", ",", "[", "0", ",", "max", "(", "self", ".", "_horizon", "-", "len", "(", "collisions", ")", ",", "0", ")", "]", ",", "constant_values", "=", "collisions", "[", "-", "1", "]", ")", "\n", "\n", "color", "=", "[", "'r'", "if", "c", "else", "'#1f77b4'", "for", "c", "in", "collisions", "]", "\n", "\n", "self", ".", "_pyblit_turn_bar", ".", "draw", "(", "np", ".", "arange", "(", "len", "(", "turns", ")", ")", ",", "turns", ",", "color", "=", "color", ")", "\n", "ax", "=", "self", ".", "_pyblit_turn_ax", ".", "ax", "\n", "ax", ".", "set_xlim", "(", "(", "-", "0.5", ",", "0.5", ")", ")", "\n", "ax", ".", "set_xlabel", "(", "'turn'", ")", "\n", "ax", ".", "set_ylabel", "(", "'timestep'", ")", "\n", "ax", ".", "set_yticks", "(", "np", ".", "arange", "(", "len", "(", "turns", ")", ")", ")", "\n", "self", ".", "_pyblit_turn_ax", ".", "draw", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_step": [[82, 91], ["jackal_hdf5_visualizer.JackalHDF5Visualizer.get", "jackal_hdf5_visualizer.JackalHDF5Visualizer._pyblit_step_bar.draw", "ax.set_ylim", "ax.set_ylabel", "ax.set_xlabel", "ax.set_xticks", "jackal_hdf5_visualizer.JackalHDF5Visualizer._pyblit_step_ax.draw", "numpy.arange", "numpy.arange", "len", "len"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.pyblit.Text.draw"], ["", "def", "_plot_step", "(", "self", ")", ":", "\n", "        ", "steps", "=", "self", ".", "get", "(", "'commands/step'", ")", "\n", "self", ".", "_pyblit_step_bar", ".", "draw", "(", "np", ".", "arange", "(", "len", "(", "steps", ")", ")", ",", "steps", ")", "\n", "ax", "=", "self", ".", "_pyblit_step_ax", ".", "ax", "\n", "ax", ".", "set_ylim", "(", "(", "0.", ",", "1.5", ")", ")", "\n", "ax", ".", "set_ylabel", "(", "'step'", ")", "\n", "ax", ".", "set_xlabel", "(", "'timestep'", ")", "\n", "ax", ".", "set_xticks", "(", "np", ".", "arange", "(", "len", "(", "steps", ")", ")", ")", "\n", "self", ".", "_pyblit_step_ax", ".", "draw", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._update_visualization": [[92, 102], ["jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_im", "jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_positions", "jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_turn", "jackal_hdf5_visualizer.JackalHDF5Visualizer._f.canvas.flush_events", "matplotlib.show", "matplotlib.pause"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_im", "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_positions", "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._plot_turn"], ["", "def", "_update_visualization", "(", "self", ")", ":", "\n", "        ", "self", ".", "_plot_im", "(", "self", ".", "_pyblit_im", ",", "self", ".", "_pyblit_im_ax", ")", "\n", "self", ".", "_plot_positions", "(", ")", "\n", "self", ".", "_plot_turn", "(", ")", "\n", "\n", "if", "not", "self", ".", "_plot_is_showing", ":", "\n", "            ", "plt", ".", "show", "(", "block", "=", "False", ")", "\n", "self", ".", "_plot_is_showing", "=", "True", "\n", "plt", ".", "pause", "(", "0.01", ")", "\n", "", "self", ".", "_f", ".", "canvas", ".", "flush_events", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer.run": [[107, 136], ["jackal_hdf5_visualizer.JackalHDF5Visualizer._update_visualization", "print", "jackal_hdf5_visualizer.JackalHDF5Visualizer._update_visualization", "sidewalk.utils.python_utils.Getch.getch", "str", "jackal_hdf5_visualizer.JackalHDF5Visualizer.next_timestep", "jackal_hdf5_visualizer.JackalHDF5Visualizer.prev_timestep", "jackal_hdf5_visualizer.JackalHDF5Visualizer.next_data", "jackal_hdf5_visualizer.JackalHDF5Visualizer.prev_data", "range", "int", "jackal_hdf5_visualizer.JackalHDF5Visualizer.next_timestep", "jackal_hdf5_visualizer.JackalHDF5Visualizer.next_data_end", "jackal_hdf5_visualizer.JackalHDF5Visualizer.prev_data_end"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._update_visualization", "home.repos.pwc.inspect_result.gkahn13_LaND.data.jackal_hdf5_visualizer.JackalHDF5Visualizer._update_visualization", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.Getch.getch", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_timestep", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.prev_timestep", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_data", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.prev_data", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_timestep", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.next_data_end", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.data_utils.DataTraverser.prev_data_end"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "self", ".", "_update_visualization", "(", ")", "\n", "\n", "while", "True", ":", "\n", "            ", "print", "(", "str", "(", "self", ")", ")", "\n", "self", ".", "_update_visualization", "(", ")", "\n", "\n", "char", "=", "Getch", ".", "getch", "(", ")", "\n", "self", ".", "_prev_data_idx", "=", "self", ".", "_curr_data_idx", "\n", "\n", "if", "char", "==", "'q'", ":", "\n", "                ", "break", "\n", "", "elif", "char", "==", "'e'", ":", "\n", "                ", "self", ".", "next_timestep", "(", ")", "\n", "", "elif", "char", "==", "'w'", ":", "\n", "                ", "self", ".", "prev_timestep", "(", ")", "\n", "", "elif", "char", "==", "'d'", ":", "\n", "                ", "self", ".", "next_data", "(", ")", "\n", "", "elif", "char", "==", "'s'", ":", "\n", "                ", "self", ".", "prev_data", "(", ")", "\n", "", "elif", "char", ">=", "'1'", "and", "char", "<=", "'9'", ":", "\n", "                ", "for", "_", "in", "range", "(", "int", "(", "char", ")", ")", ":", "\n", "                    ", "self", ".", "next_timestep", "(", ")", "\n", "", "", "elif", "char", "==", "'c'", ":", "\n", "                ", "self", ".", "next_data_end", "(", ")", "\n", "", "elif", "char", "==", "'x'", ":", "\n", "                ", "self", ".", "prev_data_end", "(", ")", "\n", "", "else", ":", "\n", "                ", "continue", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Base.__init__": [[13, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "keys", "=", "None", ")", ":", "\n", "        ", "self", ".", "keys", "=", "keys", "or", "(", "\n", "'images/front'", ",", "\n", "'collision'", ",", "\n", "'commands/turn'", ",", "\n", "'commands/dt'", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Reader.__init__": [[24, 28], ["hdf5_io.Hdf5Base.__init__", "os.path.exists", "hdf5_io.Hdf5Reader._load_hdf5"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer.__init__", "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.AsyncHdf5Reader._load_hdf5"], ["    ", "def", "__init__", "(", "self", ",", "fname", ",", "keys", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "keys", "=", "keys", ")", "\n", "assert", "os", ".", "path", ".", "exists", "(", "fname", ")", "\n", "self", ".", "_load_hdf5", "(", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Reader._load_hdf5": [[29, 36], ["sidewalk.utils.python_utils.AttrDict", "h5py.File", "numpy.array", "numpy.array", "list", "sidewalk.utils.np_utils.uncompress_video"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.uncompress_video"], ["", "def", "_load_hdf5", "(", "self", ",", "fname", ")", ":", "\n", "        ", "self", ".", "_d", "=", "AttrDict", "(", ")", "\n", "with", "h5py", ".", "File", "(", "fname", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "key", "in", "self", ".", "keys", ":", "\n", "                ", "self", ".", "_d", "[", "key", "]", "=", "np", ".", "array", "(", "f", "[", "key", "]", ")", "\n", "if", "'image'", "in", "key", ":", "\n", "                    ", "self", ".", "_d", "[", "key", "]", "=", "np", ".", "array", "(", "list", "(", "np_utils", ".", "uncompress_video", "(", "self", ".", "_d", "[", "key", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Reader.get": [[37, 39], ["None"], "methods", ["None"], ["", "", "", "", "def", "get", "(", "self", ",", "key", ",", "start", "=", "None", ",", "stop", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "_d", "[", "key", "]", "[", "start", ":", "stop", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Reader.__len__": [[40, 42], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_d", "[", "'commands/turn'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.AsyncHdf5Reader._load_hdf5": [[46, 65], ["sidewalk.utils.python_utils.AttrDict", "threading.Thread", "threading.Thread.start", "h5py.File", "numpy.array", "list", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.TimeIt.start"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_load_hdf5", "(", "self", ",", "fname", ")", ":", "\n", "        ", "self", ".", "_d", "=", "AttrDict", "(", ")", "\n", "self", ".", "_image_buffer", "=", "None", "\n", "self", ".", "_image_key", "=", "None", "\n", "with", "h5py", ".", "File", "(", "fname", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "key", "in", "self", ".", "keys", ":", "\n", "                ", "if", "'image'", "in", "key", ":", "\n", "                    ", "assert", "self", ".", "_image_key", "is", "None", "\n", "self", ".", "_image_key", "=", "key", "\n", "self", ".", "_image_buffer", "=", "np", ".", "array", "(", "f", "[", "key", "]", ")", "\n", "self", ".", "_d", "[", "key", "]", "=", "list", "(", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_d", "[", "key", "]", "=", "np", ".", "array", "(", "f", "[", "key", "]", ")", "\n", "\n", "", "", "", "assert", "self", ".", "_image_buffer", "is", "not", "None", "\n", "thread", "=", "threading", ".", "Thread", "(", "target", "=", "self", ".", "_background_video_thread", ")", "\n", "thread", ".", "daemon", "=", "True", "\n", "thread", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.AsyncHdf5Reader._background_video_thread": [[66, 69], ["sidewalk.utils.np_utils.uncompress_video", "hdf5_io.AsyncHdf5Reader._d[].append"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.np_utils.uncompress_video"], ["", "def", "_background_video_thread", "(", "self", ")", ":", "\n", "        ", "for", "frame", "in", "np_utils", ".", "uncompress_video", "(", "self", ".", "_image_buffer", ")", ":", "\n", "            ", "self", ".", "_d", "[", "self", ".", "_image_key", "]", ".", "append", "(", "frame", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.AsyncHdf5Reader.get": [[70, 81], ["numpy.array", "len", "hdf5_io.Hdf5Reader.get", "sidewalk.experiments.logger.info", "time.sleep", "len", "len"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.info"], ["", "", "@", "abstract", ".", "overrides", "\n", "def", "get", "(", "self", ",", "key", ",", "start", "=", "None", ",", "stop", "=", "None", ")", ":", "\n", "        ", "start", "=", "start", "or", "0", "\n", "stop", "=", "stop", "or", "len", "(", "self", ")", "\n", "\n", "if", "key", "==", "self", ".", "_image_key", ":", "\n", "            ", "while", "start", ">=", "len", "(", "self", ".", "_d", "[", "self", ".", "_image_key", "]", ")", "or", "stop", ">", "len", "(", "self", ".", "_d", "[", "self", ".", "_image_key", "]", ")", ":", "\n", "                ", "logger", ".", "info", "(", "'Waiting for images to come in...'", ")", "\n", "time", ".", "sleep", "(", "1", ")", "\n", "\n", "", "", "return", "np", ".", "array", "(", "super", "(", ")", ".", "get", "(", "key", ",", "start", "=", "start", ",", "stop", "=", "stop", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.__init__": [[85, 88], ["sidewalk.utils.data_utils.DataTraverser.__init__"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_fnames", ",", "keys", "=", "None", ")", ":", "\n", "        ", "self", ".", "_keys", "=", "keys", "\n", "super", "(", ")", ".", "__init__", "(", "data_fnames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get": [[89, 94], ["min", "hdf5_io.Hdf5Traverser._curr_data.get"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser.get"], ["", "@", "abstract", ".", "overrides", "\n", "def", "get", "(", "self", ",", "key", ",", "horizon", "=", "None", ")", ":", "\n", "        ", "start", "=", "self", ".", "_curr_data_timestep", "\n", "end", "=", "min", "(", "start", "+", "horizon", ",", "self", ".", "_curr_data_len", ")", "\n", "return", "self", ".", "_curr_data", ".", "get", "(", "key", ",", "start", ",", "end", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.data.hdf5_io.Hdf5Traverser._load_data": [[95, 99], ["hdf5_io.AsyncHdf5Reader", "len"], "methods", ["None"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_load_data", "(", "self", ")", ":", "\n", "        ", "self", ".", "_curr_data", "=", "AsyncHdf5Reader", "(", "self", ".", "_data_fnames", "[", "self", ".", "_curr_data_idx", "]", ",", "keys", "=", "self", ".", "_keys", ")", "\n", "self", ".", "_curr_data_len", "=", "len", "(", "self", ".", "_curr_data", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_cem.StaticCEMPolicy._init_setup": [[12, 21], ["super()._init_setup"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "_init_setup", "(", ")", "\n", "\n", "# static graph", "\n", "self", ".", "_session", "=", "None", "\n", "self", ".", "_obs_placeholders", "=", "None", "\n", "self", ".", "_goal_placeholders", "=", "None", "\n", "self", ".", "_get_action_outputs", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_cem.StaticCEMPolicy.warm_start": [[22, 45], ["sidewalk.experiments.logger.debug", "tensorflow.get_default_session", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "goal.leaf_items", "static_cem.StaticCEMPolicy._cem", "sidewalk.experiments.logger.debug", "tensorflow.executing_eagerly", "list", "tensorflow.as_dtype", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.as_dtype"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.debug", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_items", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy._cem", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.debug"], ["", "@", "abstract", ".", "overrides", "\n", "def", "warm_start", "(", "self", ",", "model", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "assert", "not", "tf", ".", "executing_eagerly", "(", ")", "\n", "\n", "logger", ".", "debug", "(", "'Setting up CEM graph....'", ")", "\n", "self", ".", "_session", "=", "tf", ".", "get_default_session", "(", ")", "\n", "assert", "self", ".", "_session", "is", "not", "None", "\n", "\n", "### create placeholders", "\n", "self", ".", "_obs_placeholders", "=", "AttrDict", "(", ")", "\n", "for", "name", "in", "self", ".", "_env_spec", ".", "observation_names", ":", "\n", "            ", "shape", "=", "list", "(", "self", ".", "_env_spec", ".", "names_to_shapes", "[", "name", "]", ")", "\n", "dtype", "=", "tf", ".", "as_dtype", "(", "self", ".", "_env_spec", ".", "names_to_dtypes", "[", "name", "]", ")", "\n", "ph", "=", "tf", ".", "placeholder", "(", "dtype", ",", "shape", "=", "shape", ",", "name", "=", "name", ")", "\n", "self", ".", "_obs_placeholders", "[", "name", "]", "=", "ph", "\n", "\n", "", "self", ".", "_goal_placeholders", "=", "AttrDict", "(", ")", "\n", "for", "name", ",", "value", "in", "goal", ".", "leaf_items", "(", ")", ":", "\n", "            ", "self", ".", "_goal_placeholders", "[", "name", "]", "=", "tf", ".", "placeholder", "(", "tf", ".", "as_dtype", "(", "value", ".", "dtype", ")", ",", "shape", "=", "value", ".", "shape", ",", "name", "=", "name", ")", "\n", "\n", "", "self", ".", "_get_action_outputs", "=", "self", ".", "_cem", "(", "model", ",", "self", ".", "_obs_placeholders", ",", "self", ".", "_goal_placeholders", ")", "\n", "\n", "logger", ".", "debug", "(", "'CEM graph setup complete'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_cem.StaticCEMPolicy._get_action_feed_dict": [[46, 57], ["static_cem.StaticCEMPolicy._obs_placeholders.leaf_items", "static_cem.StaticCEMPolicy._goal_placeholders.leaf_items", "numpy.array", "numpy.array", "tuple"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_items", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_items"], ["", "def", "_get_action_feed_dict", "(", "self", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "feed_dict", "=", "{", "}", "\n", "for", "name", ",", "ph", "in", "self", ".", "_obs_placeholders", ".", "leaf_items", "(", ")", ":", "\n", "            ", "value", "=", "np", ".", "array", "(", "observation", "[", "name", "]", ")", "\n", "if", "value", ".", "shape", "==", "tuple", "(", ")", ":", "\n", "                ", "value", "=", "value", "[", "np", ".", "newaxis", "]", "\n", "", "feed_dict", "[", "ph", "]", "=", "value", "\n", "", "for", "name", ",", "ph", "in", "self", ".", "_goal_placeholders", ".", "leaf_items", "(", ")", ":", "\n", "            ", "feed_dict", "[", "ph", "]", "=", "np", ".", "array", "(", "goal", "[", "name", "]", ")", "\n", "\n", "", "return", "feed_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_cem.StaticCEMPolicy.get_action": [[58, 74], ["static_cem.StaticCEMPolicy._get_action_feed_dict", "static_cem.StaticCEMPolicy._get_action_outputs.leaf_items", "static_cem.StaticCEMPolicy._session.run", "sidewalk.utils.python_utils.AttrDict.from_dict"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._get_action_feed_dict", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_items", "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer.run", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.from_dict"], ["", "@", "abstract", ".", "overrides", "\n", "def", "get_action", "(", "self", ",", "model", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "assert", "self", ".", "_session", "is", "not", "None", "\n", "\n", "feed_dict", "=", "self", ".", "_get_action_feed_dict", "(", "observation", ",", "goal", ")", "\n", "\n", "get_action_tf", "=", "{", "}", "\n", "for", "name", ",", "tensor", "in", "self", ".", "_get_action_outputs", ".", "leaf_items", "(", ")", ":", "\n", "            ", "get_action_tf", "[", "name", "]", "=", "tensor", "\n", "\n", "", "get_action_tf_output", "=", "self", ".", "_session", ".", "run", "(", "get_action_tf", ",", "feed_dict", "=", "feed_dict", ")", "\n", "\n", "get_action", "=", "AttrDict", ".", "from_dict", "(", "get_action_tf_output", ")", "\n", "get_action", ".", "cost_fn", "=", "self", ".", "_cost_fn", "\n", "\n", "return", "get_action", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.policy.Policy.__init__": [[6, 10], ["policy.Policy._init_params_to_attrs", "policy.Policy._init_setup"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_params_to_attrs", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "env_spec", ")", ":", "\n", "        ", "self", ".", "_env_spec", "=", "env_spec", "\n", "self", ".", "_init_params_to_attrs", "(", "params", ")", "\n", "self", ".", "_init_setup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.policy.Policy._init_params_to_attrs": [[11, 14], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.policy.Policy._init_setup": [[15, 18], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.policy.Policy.warm_start": [[19, 22], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "warm_start", "(", "self", ",", "model", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.policy.Policy.get_action": [[23, 35], ["None"], "methods", ["None"], ["", "@", "abstract", ".", "abstractmethod", "\n", "def", "get_action", "(", "self", ",", "model", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            model (Model):\n            observation (AttrDict):\n            goal (AttrDict):\n\n        Returns:\n            AttrDict\n        \"\"\"", "\n", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy._init_params_to_attrs": [[11, 26], ["super()._init_params_to_attrs"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_params_to_attrs"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", ")", ".", "_init_params_to_attrs", "(", "params", ")", "\n", "\n", "### planning params", "\n", "self", ".", "_horizon", "=", "params", ".", "horizon", "\n", "self", ".", "_action_selection_limits", "=", "params", ".", "action_selection_limits", "\n", "self", ".", "_cost_fn", "=", "params", ".", "cost_fn", "\n", "\n", "# CEM specific params", "\n", "self", ".", "_M_init", "=", "params", ".", "M_init", "\n", "self", ".", "_M", "=", "params", ".", "M", "\n", "self", ".", "_K", "=", "params", ".", "K", "\n", "self", ".", "_itrs", "=", "params", ".", "itrs", "\n", "self", ".", "_eps", "=", "params", ".", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy._init_setup": [[27, 40], ["super()._init_setup", "numpy.ravel().astype", "numpy.ravel().astype", "eager_cem.EagerCEMPolicy._env_spec.dim", "lower.append", "upper.append", "numpy.ravel", "numpy.ravel", "numpy.ravel", "numpy.ravel", "list", "list", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup", "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.dim"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "_init_setup", "(", ")", "\n", "\n", "### action limits", "\n", "lower", ",", "upper", "=", "[", "]", ",", "[", "]", "\n", "for", "name", "in", "self", ".", "_env_spec", ".", "action_names", ":", "\n", "            ", "l", ",", "u", "=", "self", ".", "_action_selection_limits", "[", "name", "]", "\n", "lower", ".", "append", "(", "np", ".", "ravel", "(", "l", ")", ")", "\n", "upper", ".", "append", "(", "np", ".", "ravel", "(", "u", ")", ")", "\n", "", "self", ".", "_action_selection_lower_limits", "=", "np", ".", "ravel", "(", "list", "(", "zip", "(", "*", "lower", ")", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "_action_selection_upper_limits", "=", "np", ".", "ravel", "(", "list", "(", "zip", "(", "*", "upper", ")", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "_action_dim", "=", "self", ".", "_env_spec", ".", "dim", "(", "self", ".", "_env_spec", ".", "action_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy._split_action": [[41, 47], ["sidewalk.utils.python_utils.AttrDict", "zip", "tensorflow.split", "eager_cem.EagerCEMPolicy._env_spec.dims"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.envs.env_spec.EnvSpec.dims"], ["", "def", "_split_action", "(", "self", ",", "actions", ")", ":", "\n", "        ", "split_actions", "=", "AttrDict", "(", ")", "\n", "for", "name", ",", "tensor", "in", "zip", "(", "self", ".", "_env_spec", ".", "action_names", ",", "\n", "tf", ".", "split", "(", "actions", ",", "self", ".", "_env_spec", ".", "dims", "(", "self", ".", "_env_spec", ".", "action_names", ")", ",", "axis", "=", "-", "1", ")", ")", ":", "\n", "            ", "split_actions", "[", "name", "]", "=", "tensor", "\n", "", "return", "split_actions", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy._cem": [[48, 152], ["observation.leaf_modify", "goal.leaf_modify", "observation.leaf_apply", "model.get_obs_lowd", "inputs.leaf_filter.leaf_filter.leaf_filter", "numpy.tile", "numpy.tile", "tensorflow.contrib.distributions.Uniform", "zip", "tensorflow.concat", "sidewalk.utils.python_utils.AttrDict.leaf_combine_and_apply", "sidewalk.utils.python_utils.AttrDict.leaf_combine_and_apply", "sidewalk.utils.python_utils.AttrDict.leaf_combine_and_apply", "tensorflow.argmin", "sidewalk.utils.python_utils.AttrDict.leaf_combine_and_apply.leaf_apply", "sidewalk.utils.python_utils.AttrDict.leaf_combine_and_apply.leaf_apply", "AttrDict.leaf_combine_and_apply.leaf_apply.leaf_apply", "sidewalk.utils.python_utils.AttrDict", "tensorflow.reshape", "tensorflow.clip_by_value", "eager_cem.EagerCEMPolicy._split_action", "inputs.leaf_filter.leaf_filter.leaf_filter", "inputs_tiled.leaf_apply.leaf_apply.leaf_apply", "eager_cem.EagerCEMPolicy.leaf_items", "tensorflow.tile", "model.call", "model_outputs.leaf_filter.leaf_filter.leaf_filter", "eager_cem.EagerCEMPolicy._cost_fn", "tensorflow.reduce_mean", "tensorflow.concat.append", "sidewalk.utils.python_utils.AttrDict.leaf_combine_and_apply.append", "sidewalk.utils.python_utils.AttrDict.leaf_combine_and_apply.append", "sidewalk.utils.python_utils.AttrDict.leaf_combine_and_apply.append", "tensorflow.nn.top_k", "tensorflow.gather", "tensorflow.reduce_mean", "tensorflow.contrib.distributions.MultivariateNormalFullCovariance", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.contrib.distributions.MultivariateNormalFullCovariance.sample", "numpy.reshape", "numpy.reshape", "model_outputs.leaf_filter.leaf_filter.leaf_filter", "tensorflow.reshape", "tensorflow.matmul", "float", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "len", "tensorflow.tile", "tensorflow.transpose", "tensorflow.eye", "tensorflow.is_tensor", "len"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_modify", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_modify", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.get_obs_lowd", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_filter", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_combine_and_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_combine_and_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_combine_and_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy._split_action", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_filter", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_items", "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel.call", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_filter", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_filter"], ["", "def", "_cem", "(", "self", ",", "model", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "observation", ".", "leaf_modify", "(", "lambda", "v", ":", "tf", ".", "convert_to_tensor", "(", "v", ")", ")", "\n", "goal", ".", "leaf_modify", "(", "lambda", "v", ":", "tf", ".", "convert_to_tensor", "(", "v", ")", ")", "\n", "\n", "### get obs lowd", "\n", "inputs", "=", "observation", ".", "leaf_apply", "(", "lambda", "value", ":", "value", "[", "tf", ".", "newaxis", "]", ")", "\n", "obs_lowd", "=", "model", ".", "get_obs_lowd", "(", "inputs", ")", "\n", "\n", "### CEM setup", "\n", "inputs", "=", "inputs", ".", "leaf_filter", "(", "lambda", "key", ",", "value", ":", "len", "(", "value", ".", "shape", ")", "<", "4", ")", "\n", "action_selection_lower_limits", "=", "np", ".", "tile", "(", "self", ".", "_action_selection_lower_limits", ",", "(", "self", ".", "_horizon", ",", ")", ")", "\n", "action_selection_upper_limits", "=", "np", ".", "tile", "(", "self", ".", "_action_selection_upper_limits", ",", "(", "self", ".", "_horizon", ",", ")", ")", "\n", "action_distribution", "=", "tf", ".", "contrib", ".", "distributions", ".", "Uniform", "(", "\n", "action_selection_lower_limits", ",", "\n", "action_selection_upper_limits", "\n", ")", "\n", "# CEM params", "\n", "Ms", "=", "[", "self", ".", "_M_init", "]", "+", "[", "self", ".", "_M", "]", "*", "(", "self", ".", "_itrs", "-", "1", ")", "\n", "Ks", "=", "[", "self", ".", "_K", "]", "*", "(", "self", ".", "_itrs", "-", "1", ")", "+", "[", "1", "]", "\n", "\n", "### keep track of", "\n", "all_costs", "=", "[", "]", "\n", "all_costs_per_timestep", "=", "[", "]", "\n", "all_actions", "=", "[", "]", "\n", "all_model_outputs", "=", "[", "]", "\n", "\n", "### CEM loop", "\n", "for", "M", ",", "K", "in", "zip", "(", "Ms", ",", "Ks", ")", ":", "\n", "            ", "concat_actions", "=", "tf", ".", "reshape", "(", "\n", "action_distribution", ".", "sample", "(", "(", "M", ",", ")", ")", ",", "\n", "(", "M", ",", "self", ".", "_horizon", ",", "-", "1", ")", "\n", ")", "\n", "\n", "concat_actions", "=", "tf", ".", "clip_by_value", "(", "\n", "concat_actions", ",", "\n", "np", ".", "reshape", "(", "action_selection_lower_limits", ",", "(", "self", ".", "_horizon", ",", "self", ".", "_action_dim", ")", ")", ",", "\n", "np", ".", "reshape", "(", "action_selection_upper_limits", ",", "(", "self", ".", "_horizon", ",", "self", ".", "_action_dim", ")", ")", "\n", ")", "\n", "\n", "actions", "=", "self", ".", "_split_action", "(", "concat_actions", ")", "\n", "\n", "inputs_tiled", "=", "inputs", ".", "leaf_filter", "(", "lambda", "k", ",", "v", ":", "k", "in", "self", ".", "_env_spec", ".", "output_observation_names", ")", "\n", "inputs_tiled", "=", "inputs_tiled", ".", "leaf_apply", "(", "lambda", "v", ":", "tf", ".", "tile", "(", "v", ",", "[", "M", "]", "+", "[", "1", "]", "*", "(", "len", "(", "v", ".", "shape", ")", "-", "1", ")", ")", ")", "\n", "\n", "for", "k", ",", "v", "in", "actions", ".", "leaf_items", "(", ")", ":", "\n", "                ", "inputs_tiled", "[", "k", "]", "=", "v", "\n", "\n", "", "obs_lowd_tiled", "=", "tf", ".", "tile", "(", "obs_lowd", ",", "(", "M", ",", "1", ")", ")", "\n", "\n", "### call model and evaluate cost", "\n", "model_outputs", "=", "model", ".", "call", "(", "inputs_tiled", ",", "obs_lowd", "=", "obs_lowd_tiled", ")", "\n", "model_outputs", "=", "model_outputs", ".", "leaf_filter", "(", "lambda", "key", ",", "value", ":", "key", "[", "0", "]", "!=", "'_'", ")", "\n", "costs_per_timestep", "=", "self", ".", "_cost_fn", "(", "inputs_tiled", ",", "model_outputs", ",", "goal", ",", "actions", ")", "\n", "costs", "=", "tf", ".", "reduce_mean", "(", "costs_per_timestep", ".", "total", ",", "axis", "=", "1", ")", "\n", "\n", "### keep track", "\n", "all_costs", ".", "append", "(", "costs", ")", "\n", "all_costs_per_timestep", ".", "append", "(", "costs_per_timestep", ")", "\n", "all_actions", ".", "append", "(", "actions", ")", "\n", "all_model_outputs", ".", "append", "(", "model_outputs", ".", "leaf_filter", "(", "lambda", "k", ",", "v", ":", "tf", ".", "is_tensor", "(", "v", ")", ")", ")", "\n", "\n", "### get top K", "\n", "_", ",", "top_indices", "=", "tf", ".", "nn", ".", "top_k", "(", "-", "costs", ",", "k", "=", "K", ")", "\n", "top_actions", "=", "tf", ".", "gather", "(", "\n", "tf", ".", "reshape", "(", "concat_actions", ",", "[", "M", ",", "self", ".", "_horizon", "*", "self", ".", "_action_dim", "]", ")", ",", "\n", "indices", "=", "top_indices", "\n", ")", "\n", "\n", "### set new distribution based on top k", "\n", "mean", "=", "tf", ".", "reduce_mean", "(", "top_actions", ",", "axis", "=", "0", ")", "\n", "covar", "=", "tf", ".", "matmul", "(", "tf", ".", "transpose", "(", "top_actions", ")", ",", "top_actions", ")", "/", "float", "(", "K", ")", "\n", "sigma", "=", "covar", "+", "self", ".", "_eps", "*", "tf", ".", "eye", "(", "self", ".", "_horizon", "*", "self", ".", "_action_dim", ")", "\n", "\n", "action_distribution", "=", "tf", ".", "contrib", ".", "distributions", ".", "MultivariateNormalFullCovariance", "(", "\n", "loc", "=", "mean", ",", "\n", "covariance_matrix", "=", "sigma", "\n", ")", "\n", "\n", "", "all_costs", "=", "tf", ".", "concat", "(", "all_costs", ",", "axis", "=", "0", ")", "\n", "all_costs_per_timestep", "=", "AttrDict", ".", "leaf_combine_and_apply", "(", "all_costs_per_timestep", ",", "lambda", "arrs", ":", "tf", ".", "concat", "(", "arrs", ",", "axis", "=", "0", ")", ")", "\n", "all_actions", "=", "AttrDict", ".", "leaf_combine_and_apply", "(", "all_actions", ",", "lambda", "arrs", ":", "tf", ".", "concat", "(", "arrs", ",", "axis", "=", "0", ")", ")", "\n", "all_model_outputs", "=", "AttrDict", ".", "leaf_combine_and_apply", "(", "all_model_outputs", ",", "lambda", "arrs", ":", "tf", ".", "concat", "(", "arrs", ",", "axis", "=", "0", ")", ")", "\n", "\n", "best_idx", "=", "tf", ".", "argmin", "(", "all_costs", ")", "\n", "best_cost", "=", "all_costs", "[", "best_idx", "]", "\n", "best_cost_per_timestep", "=", "all_costs_per_timestep", ".", "leaf_apply", "(", "lambda", "v", ":", "v", "[", "best_idx", "]", ")", "\n", "best_action_sequence", "=", "all_actions", ".", "leaf_apply", "(", "lambda", "v", ":", "v", "[", "best_idx", "]", ")", "\n", "best_action", "=", "best_action_sequence", ".", "leaf_apply", "(", "lambda", "v", ":", "v", "[", "0", "]", ")", "\n", "# best_model_outputs = all_model_outputs.leaf_apply(lambda v: v[best_idx])", "\n", "\n", "get_action_outputs", "=", "AttrDict", "(", "\n", "cost", "=", "best_cost", ",", "\n", "cost_per_timestep", "=", "best_cost_per_timestep", ",", "\n", "action", "=", "best_action", ",", "\n", "action_sequence", "=", "best_action_sequence", ",", "\n", "# model_outputs=best_model_outputs,", "\n", "\n", "all_costs", "=", "all_costs", ",", "\n", "all_costs_per_timestep", "=", "all_costs_per_timestep", ",", "\n", "all_actions", "=", "all_actions", ",", "\n", "all_model_outputs", "=", "all_model_outputs", "\n", ")", "\n", "\n", "return", "get_action_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy.warm_start": [[153, 156], ["tensorflow.executing_eagerly"], "methods", ["None"], ["", "@", "abstract", ".", "overrides", "\n", "def", "warm_start", "(", "self", ",", "model", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "assert", "tf", ".", "executing_eagerly", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy.get_action": [[157, 164], ["eager_cem.EagerCEMPolicy._cem", "eager_cem.EagerCEMPolicy.leaf_modify", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy._cem", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_modify"], ["", "@", "abstract", ".", "overrides", "\n", "def", "get_action", "(", "self", ",", "model", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "get_action", "=", "self", ".", "_cem", "(", "model", ",", "observation", ",", "goal", ")", "\n", "get_action", ".", "leaf_modify", "(", "lambda", "v", ":", "np", ".", "array", "(", "v", ")", ")", "\n", "get_action", ".", "cost_fn", "=", "self", ".", "_cost_fn", "\n", "\n", "return", "get_action", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_params_to_attrs": [[12, 24], ["None"], "methods", ["None"], ["    ", "@", "abstract", ".", "overrides", "\n", "def", "_init_params_to_attrs", "(", "self", ",", "params", ")", ":", "\n", "### planning params", "\n", "        ", "self", ".", "_horizon", "=", "params", ".", "horizon", "\n", "self", ".", "_action_selection_limits", "=", "params", ".", "action_selection_limits", "\n", "self", ".", "_cost_fn", "=", "params", ".", "cost_fn", "\n", "\n", "### MPPI params", "\n", "self", ".", "_sigma", "=", "params", ".", "sigma", "\n", "self", ".", "_N", "=", "params", ".", "N", "\n", "self", ".", "_gamma", "=", "params", ".", "gamma", "\n", "self", ".", "_beta", "=", "params", ".", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup": [[25, 32], ["super()._init_setup"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._init_setup"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_init_setup", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "_init_setup", "(", ")", "\n", "\n", "# static graph", "\n", "self", ".", "_mppi_mean_placeholder", "=", "None", "\n", "self", ".", "_mppi_mean_np", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._setup_mppi_graph": [[33, 113], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "goals.leaf_items", "tensorflow.placeholder", "sidewalk.utils.python_utils.AttrDict.leaf_apply", "model.get_obs_lowd", "tensorflow.concat", "tensorflow.random_normal", "range", "tensorflow.stack", "tensorflow.clip_by_value", "static_mppi.StaticMPPIPolicy._split_action", "sidewalk.utils.python_utils.AttrDict.leaf_apply.leaf_filter().leaf_apply", "obs_placeholders.leaf_apply.leaf_filter().leaf_apply.combine", "obs_placeholders.leaf_apply.leaf_filter().leaf_apply.freeze", "tensorflow.tile", "model.call", "static_mppi.StaticMPPIPolicy._cost_fn", "tensorflow.reduce_mean", "tensorflow.exp", "tensorflow.reduce_sum", "tensorflow.argmin", "static_mppi.StaticMPPIPolicy._split_action", "sidewalk.utils.python_utils.AttrDict().freeze", "list", "tensorflow.as_dtype", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.clip_by_value.append", "tensorflow.reduce_sum", "tensorflow.as_dtype", "sidewalk.utils.python_utils.AttrDict.leaf_apply.leaf_filter", "tensorflow.tile", "sidewalk.utils.python_utils.AttrDict", "tensorflow.reduce_max", "static_mppi.StaticMPPIPolicy.leaf_apply", "static_mppi.StaticMPPIPolicy.leaf_apply", "model.call.leaf_filter", "len", "tensorflow.is_tensor"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_items", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.get_obs_lowd", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy._split_action", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.combine", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.freeze", "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel.call", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.eager_cem.EagerCEMPolicy._split_action", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.freeze", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_filter", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_apply", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.leaf_filter"], ["", "def", "_setup_mppi_graph", "(", "self", ",", "model", ",", "goals", ")", ":", "\n", "### create placeholders", "\n", "        ", "obs_placeholders", "=", "AttrDict", "(", ")", "\n", "for", "name", "in", "self", ".", "_env_spec", ".", "observation_names", ":", "\n", "            ", "shape", "=", "list", "(", "self", ".", "_env_spec", ".", "names_to_shapes", "[", "name", "]", ")", "\n", "dtype", "=", "tf", ".", "as_dtype", "(", "self", ".", "_env_spec", ".", "names_to_dtypes", "[", "name", "]", ")", "\n", "ph", "=", "tf", ".", "placeholder", "(", "dtype", ",", "shape", "=", "shape", ",", "name", "=", "name", ")", "\n", "obs_placeholders", "[", "name", "]", "=", "ph", "\n", "\n", "", "goal_placeholders", "=", "AttrDict", "(", ")", "\n", "for", "name", ",", "value", "in", "goals", ".", "leaf_items", "(", ")", ":", "\n", "            ", "goal_placeholders", "[", "name", "]", "=", "tf", ".", "placeholder", "(", "tf", ".", "as_dtype", "(", "value", ".", "dtype", ")", ",", "shape", "=", "value", ".", "shape", ",", "name", "=", "name", ")", "\n", "\n", "", "mppi_mean_placeholder", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "name", "=", "'mppi_mean'", ",", "shape", "=", "[", "self", ".", "_horizon", ",", "self", ".", "_action_dim", "]", ")", "\n", "\n", "### get obs lowd", "\n", "inputs", "=", "obs_placeholders", ".", "leaf_apply", "(", "lambda", "value", ":", "value", "[", "tf", ".", "newaxis", "]", ")", "\n", "obs_lowd", "=", "model", ".", "get_obs_lowd", "(", "inputs", ")", "\n", "\n", "past_mean", "=", "mppi_mean_placeholder", "[", "0", "]", "\n", "shifted_mean", "=", "tf", ".", "concat", "(", "[", "mppi_mean_placeholder", "[", "1", ":", "]", ",", "mppi_mean_placeholder", "[", "-", "1", ":", "]", "]", ",", "axis", "=", "0", ")", "\n", "\n", "# sample through time", "\n", "delta_limits", "=", "0.5", "*", "(", "self", ".", "_action_selection_upper_limits", "-", "self", ".", "_action_selection_lower_limits", ")", "\n", "eps", "=", "tf", ".", "random_normal", "(", "mean", "=", "0", ",", "stddev", "=", "self", ".", "_sigma", "*", "delta_limits", ",", "\n", "shape", "=", "(", "self", ".", "_N", ",", "self", ".", "_horizon", ",", "self", ".", "_action_dim", ")", ")", "\n", "actions", "=", "[", "]", "\n", "for", "h", "in", "range", "(", "self", ".", "_horizon", ")", ":", "\n", "            ", "if", "h", "==", "0", ":", "\n", "# action_h = self._beta * (shifted_mean[h, :] + eps[:, h, :]) + (1. - self._beta) * past_mean", "\n", "                ", "action_h", "=", "self", ".", "_beta", "*", "(", "past_mean", "+", "eps", "[", ":", ",", "h", ",", ":", "]", ")", "+", "(", "1.", "-", "self", ".", "_beta", ")", "*", "past_mean", "\n", "", "else", ":", "\n", "                ", "action_h", "=", "self", ".", "_beta", "*", "(", "shifted_mean", "[", "h", ",", ":", "]", "+", "eps", "[", ":", ",", "h", ",", ":", "]", ")", "+", "(", "1.", "-", "self", ".", "_beta", ")", "*", "actions", "[", "-", "1", "]", "\n", "", "actions", ".", "append", "(", "action_h", ")", "\n", "", "actions", "=", "tf", ".", "stack", "(", "actions", ",", "axis", "=", "1", ")", "\n", "actions", "=", "tf", ".", "clip_by_value", "(", "\n", "actions", ",", "\n", "self", ".", "_action_selection_lower_limits", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", ",", "\n", "self", ".", "_action_selection_upper_limits", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", ")", "\n", "\n", "# forward simulate", "\n", "actions_split", "=", "self", ".", "_split_action", "(", "actions", ")", "\n", "inputs_tiled", "=", "inputs", ".", "leaf_filter", "(", "lambda", "k", ",", "v", ":", "k", "in", "self", ".", "_env_spec", ".", "output_observation_names", ")", ".", "leaf_apply", "(", "\n", "lambda", "v", ":", "tf", ".", "tile", "(", "v", ",", "[", "self", ".", "_N", "]", "+", "[", "1", "]", "*", "(", "len", "(", "v", ".", "shape", ")", "-", "1", ")", ")", "\n", ")", "\n", "inputs_tiled", ".", "combine", "(", "actions_split", ")", "\n", "inputs_tiled", ".", "freeze", "(", ")", "\n", "obs_lowd_tiled", "=", "tf", ".", "tile", "(", "obs_lowd", ",", "(", "self", ".", "_N", ",", "1", ")", ")", "\n", "\n", "### call model and evaluate cost", "\n", "model_outputs", "=", "model", ".", "call", "(", "inputs_tiled", ",", "obs_lowd", "=", "obs_lowd_tiled", ")", "\n", "costs_per_timestep", "=", "self", ".", "_cost_fn", "(", "inputs_tiled", ",", "model_outputs", ",", "goal_placeholders", ",", "actions_split", ")", "\n", "costs", "=", "tf", ".", "reduce_mean", "(", "costs_per_timestep", ".", "total", ",", "axis", "=", "1", ")", "\n", "\n", "# MPPI update", "\n", "scores", "=", "-", "costs", "\n", "probs", "=", "tf", ".", "exp", "(", "self", ".", "_gamma", "*", "(", "scores", "-", "tf", ".", "reduce_max", "(", "scores", ")", ")", ")", "\n", "probs", "/=", "tf", ".", "reduce_sum", "(", "probs", ")", "+", "1e-10", "\n", "new_mppi_mean", "=", "tf", ".", "reduce_sum", "(", "actions", "*", "probs", "[", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", ",", "axis", "=", "0", ")", "\n", "\n", "best_idx", "=", "tf", ".", "argmin", "(", "costs", ")", "\n", "best_actions", "=", "self", ".", "_split_action", "(", "new_mppi_mean", ")", "\n", "\n", "get_action_outputs", "=", "AttrDict", "(", "\n", "cost", "=", "costs", "[", "best_idx", "]", ",", "\n", "cost_per_timestep", "=", "costs_per_timestep", ".", "leaf_apply", "(", "lambda", "v", ":", "v", "[", "best_idx", "]", ")", ",", "\n", "action", "=", "best_actions", ".", "leaf_apply", "(", "lambda", "v", ":", "v", "[", "0", "]", ")", ",", "\n", "action_sequence", "=", "best_actions", ",", "\n", "# model_outputs=model_outputs.leaf_filter(lambda k, v: tf.is_tensor(v)).leaf_apply(lambda v: v[best_idx]),", "\n", "\n", "all_costs", "=", "costs", ",", "\n", "all_costs_per_timestep", "=", "costs_per_timestep", ",", "\n", "all_actions", "=", "actions_split", ",", "\n", "all_model_outputs", "=", "model_outputs", ".", "leaf_filter", "(", "lambda", "k", ",", "v", ":", "tf", ".", "is_tensor", "(", "v", ")", ")", ",", "\n", "\n", "mppi_mean", "=", "new_mppi_mean", ",", "\n", ")", ".", "freeze", "(", ")", "\n", "\n", "return", "obs_placeholders", ",", "goal_placeholders", ",", "mppi_mean_placeholder", ",", "get_action_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy.warm_start": [[114, 127], ["sidewalk.experiments.logger.debug", "tensorflow.get_default_session", "static_mppi.StaticMPPIPolicy._setup_mppi_graph", "numpy.zeros", "sidewalk.experiments.logger.debug", "tensorflow.executing_eagerly"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.debug", "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._setup_mppi_graph", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.debug"], ["", "@", "abstract", ".", "overrides", "\n", "def", "warm_start", "(", "self", ",", "model", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "assert", "not", "tf", ".", "executing_eagerly", "(", ")", "\n", "\n", "logger", ".", "debug", "(", "'Setting up MPPI graph....'", ")", "\n", "self", ".", "_session", "=", "tf", ".", "get_default_session", "(", ")", "\n", "assert", "self", ".", "_session", "is", "not", "None", "\n", "\n", "self", ".", "_obs_placeholders", ",", "self", ".", "_goal_placeholders", ",", "self", ".", "_mppi_mean_placeholder", ",", "self", ".", "_get_action_outputs", "=", "self", ".", "_setup_mppi_graph", "(", "model", ",", "goal", ")", "\n", "self", ".", "_mppi_mean_np", "=", "np", ".", "zeros", "(", "[", "self", ".", "_horizon", ",", "self", ".", "_action_dim", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "logger", ".", "debug", "(", "'MPPI graph setup complete'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._get_action_feed_dict": [[128, 133], ["super()._get_action_feed_dict"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy._get_action_feed_dict"], ["", "@", "abstract", ".", "overrides", "\n", "def", "_get_action_feed_dict", "(", "self", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "feed_dict", "=", "super", "(", ")", ".", "_get_action_feed_dict", "(", "observation", ",", "goal", ")", "\n", "feed_dict", "[", "self", ".", "_mppi_mean_placeholder", "]", "=", "self", ".", "_mppi_mean_np", "\n", "return", "feed_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy.get_action": [[134, 140], ["super().get_action"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.policies.static_mppi.StaticMPPIPolicy.get_action"], ["", "@", "abstract", ".", "overrides", "\n", "def", "get_action", "(", "self", ",", "model", ",", "observation", ",", "goal", ")", ":", "\n", "        ", "get_action", "=", "super", "(", ")", ".", "get_action", "(", "model", ",", "observation", ",", "goal", ")", "\n", "self", ".", "_mppi_mean_np", "=", "get_action", ".", "mppi_mean", "\n", "\n", "return", "get_action", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.file_manager.FileManager.__init__": [[14, 33], ["os.path.join", "file_manager.FileManager._save_git", "os.path.exists", "shutil.copy", "sidewalk.experiments.logger.setup", "os.path.exists", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.experiments.file_manager.FileManager._save_git", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.setup"], ["def", "__init__", "(", "self", ",", "exp_name", ",", "is_continue", "=", "False", ",", "config_fname", "=", "None", ",", "log_fname", "=", "None", ")", ":", "\n", "        ", "self", ".", "_exp_name", "=", "exp_name", "\n", "self", ".", "_exp_dir", "=", "os", ".", "path", ".", "join", "(", "FileManager", ".", "experiments_dir", ",", "self", ".", "_exp_name", ")", "\n", "\n", "if", "is_continue", ":", "\n", "            ", "assert", "os", ".", "path", ".", "exists", "(", "self", ".", "_exp_dir", ")", ",", "'Experiment folder \"{0}\" does not exists, but continue = True'", ".", "format", "(", "self", ".", "_exp_name", ")", "\n", "", "else", ":", "\n", "            ", "assert", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "_exp_dir", ")", ",", "'Experiment folder \"{0}\" exists, but continue = False'", ".", "format", "(", "self", ".", "_exp_name", ")", "\n", "\n", "", "self", ".", "_save_git", "(", ")", "\n", "\n", "if", "config_fname", "is", "not", "None", ":", "\n", "            ", "shutil", ".", "copy", "(", "config_fname", ",", "os", ".", "path", ".", "join", "(", "self", ".", "exp_dir", ",", "'config.py'", ")", ")", "\n", "\n", "", "if", "log_fname", "is", "not", "None", ":", "\n", "            ", "logger", ".", "setup", "(", "log_fname", "=", "os", ".", "path", ".", "join", "(", "self", ".", "exp_dir", ",", "log_fname", ")", ",", "\n", "exp_name", "=", "self", ".", "_exp_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.file_manager.FileManager._save_git": [[34, 45], ["os.path.join", "os.makedirs", "os.path.join", "os.path.join", "os.path.exists", "subprocess.call", "os.path.exists", "subprocess.call"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel.call", "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel.call"], ["", "", "def", "_save_git", "(", "self", ")", ":", "\n", "        ", "git_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_exp_dir", ",", "'git'", ")", "\n", "os", ".", "makedirs", "(", "git_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "git_commit_fname", "=", "os", ".", "path", ".", "join", "(", "git_dir", ",", "'commit.txt'", ")", "\n", "git_diff_fname", "=", "os", ".", "path", ".", "join", "(", "git_dir", ",", "'diff.txt'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "git_commit_fname", ")", ":", "\n", "            ", "subprocess", ".", "call", "(", "'cd {0}; git log -1 > {1}'", ".", "format", "(", "FileManager", ".", "base_dir", ",", "git_commit_fname", ")", ",", "shell", "=", "True", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "git_diff_fname", ")", ":", "\n", "            ", "subprocess", ".", "call", "(", "'cd {0}; git diff > {1}'", ".", "format", "(", "FileManager", ".", "base_dir", ",", "git_diff_fname", ")", ",", "shell", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.file_manager.FileManager.exp_dir": [[50, 54], ["os.makedirs"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "exp_dir", "(", "self", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "self", ".", "_exp_dir", ",", "exist_ok", "=", "True", ")", "\n", "return", "self", ".", "_exp_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.file_manager.FileManager.ckpts_dir": [[59, 64], ["os.path.join", "os.makedirs"], "methods", ["None"], ["", "@", "property", "\n", "def", "ckpts_dir", "(", "self", ")", ":", "\n", "        ", "ckpts_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "exp_dir", ",", "'ckpts'", ")", "\n", "os", ".", "makedirs", "(", "ckpts_dir", ",", "exist_ok", "=", "True", ")", "\n", "return", "ckpts_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.file_manager.FileManager.ckpt_prefix": [[65, 68], ["os.path.join"], "methods", ["None"], ["", "@", "property", "\n", "def", "ckpt_prefix", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "ckpts_dir", ",", "'ckpt'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.setup": [[5, 27], ["loguru.logger.remove", "loguru.logger.add", "loguru.logger.add", "loguru.logger.add"], "function", ["None"], ["def", "setup", "(", "log_fname", "=", "None", ",", "exp_name", "=", "''", ")", ":", "\n", "    ", "logger", ".", "remove", "(", ")", "\n", "if", "log_fname", ":", "\n", "        ", "logger", ".", "add", "(", "log_fname", ",", "\n", "format", "=", "exp_name", "+", "\" {time} {level} {message}\"", ",", "\n", "level", "=", "\"DEBUG\"", ")", "\n", "", "logger", ".", "add", "(", "sys", ".", "stdout", ",", "\n", "colorize", "=", "True", ",", "\n", "format", "=", "\"<yellow>\"", "+", "exp_name", "+", "\"</yellow> | \"", "\n", "\"<green>{time:HH:mm:ss}</green> | \"", "\n", "\"<blue>{level: <8}</blue> | \"", "\n", "\"<magenta>{name}:{function}:{line: <5}</magenta> | \"", "\n", "\"<white>{message}</white>\"", ",", "\n", "level", "=", "\"DEBUG\"", ",", "\n", "filter", "=", "lambda", "record", ":", "record", "[", "\"level\"", "]", ".", "name", "==", "\"DEBUG\"", ")", "\n", "logger", ".", "add", "(", "sys", ".", "stdout", ",", "\n", "colorize", "=", "True", ",", "\n", "format", "=", "\"<yellow>\"", "+", "exp_name", "+", "\"</yellow> | \"", "\n", "\"<green>{time:HH:mm:ss}</green> | \"", "\n", "\"<blue>{level: <8}</blue> | \"", "\n", "\"<white>{message}</white>\"", ",", "\n", "level", "=", "\"INFO\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.debug": [[28, 30], ["loguru.logger.debug"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.debug"], ["", "def", "debug", "(", "s", ")", ":", "\n", "    ", "logger", ".", "debug", "(", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.info": [[31, 33], ["loguru.logger.info"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.info"], ["", "def", "info", "(", "s", ")", ":", "\n", "    ", "logger", ".", "info", "(", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.warning": [[34, 36], ["loguru.logger.warning"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.warning"], ["", "def", "warning", "(", "s", ")", ":", "\n", "    ", "logger", ".", "warning", "(", "s", ")", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer.__init__": [[11, 44], ["int", "int", "int", "int", "optimizer_cls", "tensorflow.train.get_or_create_global_step", "tensorflow.train.Checkpoint", "tensorflow.contrib.summary.create_file_writer", "trainer.Trainer._tb_writer.set_as_default", "collections.defaultdict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "env_spec", ",", "file_manager", ",", "model", ",", "dataset_train", ",", "dataset_holdout", ")", ":", "\n", "        ", "self", ".", "_env_spec", "=", "env_spec", "\n", "self", ".", "_file_manager", "=", "file_manager", "\n", "self", ".", "_model", "=", "model", "\n", "self", ".", "_dataset_train", "=", "dataset_train", "\n", "self", ".", "_dataset_holdout", "=", "dataset_holdout", "\n", "\n", "# steps", "\n", "self", ".", "_max_steps", "=", "int", "(", "params", ".", "max_steps", ")", "\n", "self", ".", "_holdout_every_n_steps", "=", "int", "(", "params", ".", "holdout_every_n_steps", ")", "\n", "self", ".", "_log_every_n_steps", "=", "int", "(", "params", ".", "log_every_n_steps", ")", "\n", "self", ".", "_save_every_n_steps", "=", "int", "(", "params", ".", "save_every_n_steps", ")", "\n", "\n", "# cost", "\n", "self", ".", "_cost_fn", "=", "params", ".", "cost_fn", "\n", "\n", "# optimizer", "\n", "optimizer_cls", "=", "params", ".", "optimizer_cls", "\n", "learning_rate", "=", "params", ".", "learning_rate", "\n", "\n", "# create optimizer and checkpoint", "\n", "self", ".", "_optimizer", "=", "optimizer_cls", "(", "learning_rate", ")", "\n", "self", ".", "_global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "self", ".", "_checkpointer", "=", "tf", ".", "train", ".", "Checkpoint", "(", "optimizer", "=", "self", ".", "_optimizer", ",", "\n", "model", "=", "model", ",", "\n", "optimizer_step", "=", "self", ".", "_global_step", ")", "\n", "\n", "# tensorboard logging", "\n", "self", ".", "_tb_writer", "=", "tf", ".", "contrib", ".", "summary", ".", "create_file_writer", "(", "file_manager", ".", "exp_dir", ",", "\n", "max_queue", "=", "100", ",", "\n", "flush_millis", "=", "5000", ")", "\n", "self", ".", "_tb_writer", ".", "set_as_default", "(", ")", "\n", "self", ".", "_tb_logger", "=", "defaultdict", "(", "list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer.run": [[45, 62], ["trainer.Trainer._restore_latest_checkpoint", "range", "trainer.Trainer._get_current_step", "sidewalk.utils.python_utils.timeit", "trainer.Trainer._train_step", "trainer.Trainer._log", "sidewalk.utils.python_utils.timeit", "trainer.Trainer._holdout_step", "sidewalk.utils.python_utils.timeit", "trainer.Trainer._save"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._restore_latest_checkpoint", "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._get_current_step", "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._train_step", "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._log", "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._holdout_step", "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._save"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "self", ".", "_restore_latest_checkpoint", "(", ")", "\n", "\n", "for", "step", "in", "range", "(", "self", ".", "_get_current_step", "(", ")", ",", "self", ".", "_max_steps", "+", "1", ")", ":", "\n", "            ", "with", "timeit", "(", "'total'", ")", ":", "\n", "                ", "self", ".", "_train_step", "(", ")", "\n", "\n", "if", "step", ">", "0", "and", "step", "%", "self", ".", "_holdout_every_n_steps", "==", "0", ":", "\n", "                    ", "with", "timeit", "(", "'holdout'", ")", ":", "\n", "                        ", "self", ".", "_holdout_step", "(", ")", "\n", "\n", "", "", "if", "step", ">", "0", "and", "step", "%", "self", ".", "_save_every_n_steps", "==", "0", ":", "\n", "                    ", "with", "timeit", "(", "'save'", ")", ":", "\n", "                        ", "self", ".", "_save", "(", ")", "\n", "\n", "", "", "", "if", "step", ">", "0", "and", "step", "%", "self", ".", "_log_every_n_steps", "==", "0", ":", "\n", "                ", "self", ".", "_log", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._restore_latest_checkpoint": [[63, 70], ["tensorflow.train.latest_checkpoint", "sidewalk.experiments.logger.info", "trainer.Trainer._checkpointer.restore", "sidewalk.experiments.logger.info", "trainer.Trainer._get_current_step"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.info", "home.repos.pwc.inspect_result.gkahn13_LaND.models.model.Model.restore", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.info", "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._get_current_step"], ["", "", "", "def", "_restore_latest_checkpoint", "(", "self", ")", ":", "\n", "# restore checkpoint", "\n", "        ", "latest_ckpt_fname", "=", "tf", ".", "train", ".", "latest_checkpoint", "(", "self", ".", "_file_manager", ".", "ckpts_dir", ")", "\n", "if", "latest_ckpt_fname", ":", "\n", "            ", "logger", ".", "info", "(", "'Restoring ckpt {0}'", ".", "format", "(", "latest_ckpt_fname", ")", ")", "\n", "self", ".", "_checkpointer", ".", "restore", "(", "latest_ckpt_fname", ")", "\n", "logger", ".", "info", "(", "'Starting training from step = {0}'", ".", "format", "(", "self", ".", "_get_current_step", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._get_current_step": [[71, 73], ["trainer.Trainer._global_step.numpy"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.numpy"], ["", "", "def", "_get_current_step", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_global_step", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._train_step": [[74, 88], ["sidewalk.utils.python_utils.timeit", "trainer.Trainer._dataset_train.get_batch", "sidewalk.utils.python_utils.timeit", "trainer.Trainer._optimizer.apply_gradients", "trainer.Trainer.items", "tensorflow.GradientTape", "trainer.Trainer._model.call", "trainer.Trainer._cost_fn", "tape.gradient", "zip", "tensor.numpy().tolist", "tensorflow.reduce_mean", "tensor.numpy"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset.get_batch", "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel.call", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.numpy"], ["", "def", "_train_step", "(", "self", ")", ":", "\n", "        ", "with", "timeit", "(", "'train_batch'", ")", ":", "\n", "            ", "inputs", ",", "outputs", "=", "self", ".", "_dataset_train", ".", "get_batch", "(", ")", "\n", "\n", "", "with", "timeit", "(", "'train_update'", ")", ":", "\n", "            ", "with", "tf", ".", "GradientTape", "(", ")", "as", "tape", ":", "\n", "                ", "model_outputs", "=", "self", ".", "_model", ".", "call", "(", "inputs", ",", "training", "=", "True", ")", "\n", "cost", "=", "self", ".", "_cost_fn", "(", "inputs", ",", "outputs", ",", "model_outputs", ",", "self", ".", "_env_spec", ")", "\n", "grads", "=", "tape", ".", "gradient", "(", "tf", ".", "reduce_mean", "(", "cost", ".", "total", ")", ",", "self", ".", "_model", ".", "trainable_variables", ")", "\n", "\n", "", "self", ".", "_optimizer", ".", "apply_gradients", "(", "zip", "(", "grads", ",", "self", ".", "_model", ".", "trainable_variables", ")", ",", "self", ".", "_global_step", ")", "\n", "\n", "for", "name", ",", "tensor", "in", "cost", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "_tb_logger", "[", "'train_cost_'", "+", "name", "]", "+=", "tensor", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._holdout_step": [[89, 96], ["trainer.Trainer._dataset_holdout.get_batch", "trainer.Trainer._model.call", "trainer.Trainer._cost_fn", "trainer.Trainer.items", "tensor.numpy().tolist", "tensor.numpy"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.datasets.hdf5_dataset.Hdf5Dataset.get_batch", "home.repos.pwc.inspect_result.gkahn13_LaND.models.rnn_model.RnnModel.call", "home.repos.pwc.inspect_result.gkahn13_LaND.utils.python_utils.AttrDict.numpy"], ["", "", "", "def", "_holdout_step", "(", "self", ")", ":", "\n", "        ", "inputs", ",", "outputs", "=", "self", ".", "_dataset_holdout", ".", "get_batch", "(", ")", "\n", "model_outputs", "=", "self", ".", "_model", ".", "call", "(", "inputs", ",", "training", "=", "True", ")", "\n", "cost", "=", "self", ".", "_cost_fn", "(", "inputs", ",", "outputs", ",", "model_outputs", ",", "self", ".", "_env_spec", ")", "\n", "\n", "for", "name", ",", "tensor", "in", "cost", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "_tb_logger", "[", "'holdout_cost_'", "+", "name", "]", "+=", "tensor", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._save": [[97, 100], ["sidewalk.experiments.logger.info", "trainer.Trainer._checkpointer.save"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.info"], ["", "", "def", "_save", "(", "self", ")", ":", "\n", "        ", "logger", ".", "info", "(", "'Saving model...'", ")", "\n", "self", ".", "_checkpointer", ".", "save", "(", "self", ".", "_file_manager", ".", "ckpt_prefix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._log": [[101, 113], ["sidewalk.experiments.logger.info", "sidewalk.experiments.logger.info", "str().split", "sidewalk.utils.python_utils.timeit.reset", "tensorflow.contrib.summary.always_record_summaries", "sorted", "trainer.Trainer._tb_logger.clear", "sidewalk.experiments.logger.debug", "trainer.Trainer._tb_logger.items", "sidewalk.experiments.logger.info", "tensorflow.contrib.summary.scalar", "str", "trainer.Trainer._get_current_step", "numpy.mean", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.info", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.info", "home.repos.pwc.inspect_result.gkahn13_LaND.envs.env.Env.reset", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.debug", "home.repos.pwc.inspect_result.gkahn13_LaND.experiments.logger.info", "home.repos.pwc.inspect_result.gkahn13_LaND.trainers.trainer.Trainer._get_current_step"], ["", "def", "_log", "(", "self", ")", ":", "\n", "        ", "logger", ".", "info", "(", "''", ")", "\n", "logger", ".", "info", "(", "'Step {0}'", ".", "format", "(", "self", ".", "_get_current_step", "(", ")", "-", "1", ")", ")", "\n", "with", "tf", ".", "contrib", ".", "summary", ".", "always_record_summaries", "(", ")", ":", "\n", "            ", "for", "key", ",", "value", "in", "sorted", "(", "self", ".", "_tb_logger", ".", "items", "(", ")", ",", "key", "=", "lambda", "kv", ":", "kv", "[", "0", "]", ")", ":", "\n", "                ", "logger", ".", "info", "(", "'{0} {1:.6f}'", ".", "format", "(", "key", ",", "np", ".", "mean", "(", "value", ")", ")", ")", "\n", "tf", ".", "contrib", ".", "summary", ".", "scalar", "(", "key", ",", "np", ".", "mean", "(", "value", ")", ")", "\n", "", "self", ".", "_tb_logger", ".", "clear", "(", ")", "\n", "\n", "", "for", "line", "in", "str", "(", "timeit", ")", ".", "split", "(", "'\\n'", ")", ":", "\n", "            ", "logger", ".", "debug", "(", "line", ")", "\n", "", "timeit", ".", "reset", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.bc.get_env_spec_params": [[16, 20], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "function", ["None"], ["def", "get_env_spec_params", "(", ")", ":", "\n", "    ", "return", "d", "(", "\n", "cls", "=", "JackalEnvSpec", ",", "\n", "params", "=", "d", "(", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.bc.get_env_params": [[23, 28], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "os.path.join"], "function", ["None"], ["", "def", "get_env_params", "(", ")", ":", "\n", "    ", "return", "d", "(", "\n", "cls", "=", "JackalHdf5Env", ",", "\n", "params", "=", "d", "(", "\n", "hdf5_folders", "=", "[", "os", ".", "path", ".", "join", "(", "FileManager", ".", "experiments_dir", ",", "'hdf5s/train'", ")", "]", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.bc.get_dataset_params": [[31, 42], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "function", ["None"], ["", "def", "get_dataset_params", "(", "horizon", ",", "folders", ")", ":", "\n", "    ", "return", "d", "(", "\n", "cls", "=", "JackalHdf5Dataset", ",", "\n", "params", "=", "d", "(", "\n", "batch_size", "=", "32", ",", "\n", "horizon", "=", "horizon", ",", "\n", "\n", "hdf5_folders", "=", "folders", ",", "\n", "\n", "rebalance", "=", "False", ",", "\n", "truncate_each_rollout_by", "=", "4", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.bc.get_model_params": [[45, 59], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "numpy.deg2rad"], "function", ["None"], ["", "def", "get_model_params", "(", "horizon", ")", ":", "\n", "    ", "return", "d", "(", "\n", "cls", "=", "JackalImitationModel", ",", "\n", "params", "=", "d", "(", "\n", "observation_im_names", "=", "[", "\n", "'images/front'", ",", "\n", "]", ",", "\n", "observation_vec_names", "=", "[", "\n", "]", ",", "\n", "\n", "finetune_cnn", "=", "True", ",", "\n", "init_with_imagenet_weights", "=", "True", ",", "\n", "\n", "bin_edges", "=", "np", ".", "deg2rad", "(", "np", ".", "r_", "[", "-", "60.", ":", "61.", ":", "5.", "]", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.bc.get_trainer_params": [[62, 99], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "outputs.done.shape.as_list", "tensorflow.ones", "sidewalk.utils.python_utils.AttrDict", "tensorflow.reduce_mean", "int", "int", "int", "tensorflow.reduce_mean"], "function", ["None"], ["", "def", "get_trainer_params", "(", ")", ":", "\n", "\n", "    ", "def", "cost_fn", "(", "inputs", ",", "outputs", ",", "model_outputs", ",", "env_spec", ")", ":", "\n", "        ", "batch_size", "=", "outputs", ".", "done", ".", "shape", ".", "as_list", "(", ")", "[", "0", "]", "\n", "\n", "# turn", "\n", "cost_turn", "=", "-", "model_outputs", ".", "log_prob", "\n", "accuracy_turn", "=", "model_outputs", ".", "acc", "\n", "\n", "# regularization", "\n", "cost_l2_reg", "=", "1e-2", "*", "tf", ".", "reduce_mean", "(", "[", "0.5", "*", "tf", ".", "reduce_mean", "(", "kernel", "*", "kernel", ")", "for", "kernel", "in", "model_outputs", ".", "kernels", "]", ")", "*", "tf", ".", "ones", "(", "batch_size", ")", "\n", "\n", "cost", "=", "cost_turn", "+", "cost_l2_reg", "\n", "\n", "d_cost", "=", "d", "(", "\n", "total", "=", "cost", ",", "\n", "turn", "=", "cost_turn", ",", "\n", "turn_accuracy", "=", "accuracy_turn", ",", "\n", "l2_reg", "=", "cost_l2_reg", "\n", ")", "\n", "\n", "return", "d_cost", "\n", "\n", "", "return", "d", "(", "\n", "cls", "=", "Trainer", ",", "\n", "params", "=", "d", "(", "\n", "max_steps", "=", "int", "(", "1e5", ")", ",", "\n", "holdout_every_n_steps", "=", "50", ",", "\n", "log_every_n_steps", "=", "int", "(", "1e2", ")", ",", "\n", "save_every_n_steps", "=", "int", "(", "1e4", ")", ",", "\n", "\n", "cost_fn", "=", "cost_fn", ",", "\n", "\n", "optimizer_cls", "=", "tf", ".", "train", ".", "AdamOptimizer", ",", "\n", "learning_rate", "=", "1e-4", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.bc.get_policy_params": [[102, 136], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "tensorflow.exp", "tensorflow.square", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "function", ["None"], ["", "def", "get_policy_params", "(", "horizon", ")", ":", "\n", "    ", "def", "cost_fn", "(", "inputs", ",", "model_outputs", ",", "goals", ",", "actions", ")", ":", "\n", "### probability", "\n", "        ", "prob_cost", "=", "1.", "-", "tf", ".", "exp", "(", "model_outputs", ".", "log_prob", "[", "...", ",", "tf", ".", "newaxis", "]", ")", "\n", "\n", "### action", "\n", "turn", "=", "actions", ".", "commands", ".", "turn", "[", "...", ",", "0", "]", "\n", "turn_cost", "=", "0.5", "*", "tf", ".", "square", "(", "turn", ")", "\n", "\n", "### total", "\n", "total", "=", "prob_cost", "+", "0.1", "*", "turn_cost", "\n", "\n", "return", "d", "(", "\n", "total", "=", "total", ",", "\n", "prob_cost", "=", "prob_cost", "\n", ")", "# [batch, horizon]", "\n", "\n", "", "return", "d", "(", "\n", "cls", "=", "StaticCEMPolicy", ",", "\n", "params", "=", "d", "(", "\n", "horizon", "=", "horizon", ",", "\n", "action_selection_limits", "=", "d", "(", "\n", "commands", "=", "d", "(", "\n", "turn", "=", "(", "-", "0.5", ",", "0.5", ")", ",", "\n", ")", "\n", ")", ",", "\n", "cost_fn", "=", "cost_fn", ",", "\n", "\n", "# CEM params", "\n", "M_init", "=", "8192", ",", "\n", "M", "=", "4096", ",", "\n", "K", "=", "512", ",", "\n", "itrs", "=", "3", ",", "\n", "eps", "=", "1e-3", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.bc.get_visualizer_params": [[139, 143], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "function", ["None"], ["", "def", "get_visualizer_params", "(", ")", ":", "\n", "    ", "return", "d", "(", "\n", "cls", "=", "JackalImitationVisualizer", ",", "\n", "params", "=", "d", "(", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.bc.get_params": [[147, 165], ["sidewalk.utils.python_utils.AttrDict", "os.path.join", "os.path.join", "bc.get_env_spec_params", "bc.get_env_params", "bc.get_dataset_params", "bc.get_dataset_params", "bc.get_model_params", "bc.get_trainer_params", "bc.get_policy_params", "bc.get_visualizer_params"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_env_spec_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_env_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_dataset_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_dataset_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_model_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_trainer_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_policy_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_visualizer_params"], ["", "def", "get_params", "(", ")", ":", "\n", "    ", "horizon", "=", "1", "\n", "\n", "train_folders", "=", "[", "os", ".", "path", ".", "join", "(", "FileManager", ".", "experiments_dir", ",", "'hdf5s/train'", ")", "]", "\n", "holdout_folders", "=", "[", "os", ".", "path", ".", "join", "(", "FileManager", ".", "experiments_dir", ",", "'hdf5s/holdout'", ")", "]", "\n", "\n", "return", "d", "(", "\n", "exp_name", "=", "'bc'", ",", "\n", "\n", "# NOTE: this is where all the params get created", "\n", "env_spec", "=", "get_env_spec_params", "(", ")", ",", "\n", "env", "=", "get_env_params", "(", ")", ",", "\n", "dataset_train", "=", "get_dataset_params", "(", "horizon", ",", "train_folders", ")", ",", "\n", "dataset_holdout", "=", "get_dataset_params", "(", "horizon", ",", "holdout_folders", ")", ",", "\n", "model", "=", "get_model_params", "(", "horizon", ")", ",", "\n", "trainer", "=", "get_trainer_params", "(", ")", ",", "\n", "policy", "=", "get_policy_params", "(", "horizon", ")", ",", "\n", "visualizer", "=", "get_visualizer_params", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_env_spec_params": [[16, 20], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "function", ["None"], ["def", "get_env_spec_params", "(", ")", ":", "\n", "    ", "return", "d", "(", "\n", "cls", "=", "JackalEnvSpec", ",", "\n", "params", "=", "d", "(", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_env_params": [[23, 28], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "os.path.join"], "function", ["None"], ["", "def", "get_env_params", "(", ")", ":", "\n", "    ", "return", "d", "(", "\n", "cls", "=", "JackalHdf5Env", ",", "\n", "params", "=", "d", "(", "\n", "hdf5_folders", "=", "[", "os", ".", "path", ".", "join", "(", "FileManager", ".", "experiments_dir", ",", "'hdf5s/train'", ")", "]", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_dataset_params": [[31, 39], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "function", ["None"], ["", "def", "get_dataset_params", "(", "horizon", ",", "hdf5_folders", ")", ":", "\n", "    ", "return", "d", "(", "\n", "cls", "=", "JackalHdf5Dataset", ",", "\n", "params", "=", "d", "(", "\n", "batch_size", "=", "32", ",", "\n", "horizon", "=", "horizon", ",", "\n", "\n", "hdf5_folders", "=", "hdf5_folders", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_model_params": [[42, 58], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "function", ["None"], ["", "def", "get_model_params", "(", "horizon", ")", ":", "\n", "    ", "return", "d", "(", "\n", "cls", "=", "JackalDisengagementModel", ",", "\n", "params", "=", "d", "(", "\n", "observation_im_names", "=", "[", "\n", "'images/front'", ",", "\n", "]", ",", "\n", "observation_vec_names", "=", "[", "\n", "]", ",", "\n", "horizon", "=", "horizon", ",", "\n", "obs_lowd_dim", "=", "128", ",", "\n", "\n", "finetune_cnn", "=", "True", ",", "\n", "init_with_imagenet_weights", "=", "True", ",", "\n", "\n", "num_collision_bins", "=", "2", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_trainer_params": [[61, 125], ["sidewalk.utils.python_utils.AttrDict", "tensorflow.concat", "tensorflow.logical_and", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.is_finite", "tensorflow.boolean_mask", "tensorflow.boolean_mask", "sidewalk.utils.python_utils.AttrDict", "outputs.done.shape.as_list", "tensorflow.cast", "tensorflow.logical_not", "tensorflow.cumsum", "tensorflow.logical_or", "float", "tensorflow.reduce_sum", "tensorflow.cast", "tensorflow.ones", "sidewalk.utils.python_utils.AttrDict", "tensorflow.zeros", "tensorflow.cast", "tensorflow.logical_not", "tensorflow.reduce_sum", "tensorflow.equal", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.nn.sigmoid_cross_entropy_with_logits", "tensorflow.cast", "int", "int", "int", "tensorflow.cast", "tensorflow.reduce_mean"], "function", ["None"], ["", "def", "get_trainer_params", "(", ")", ":", "\n", "\n", "    ", "def", "cost_fn", "(", "inputs", ",", "outputs", ",", "model_outputs", ",", "env_spec", ")", ":", "\n", "        ", "batch_size", "=", "outputs", ".", "done", ".", "shape", ".", "as_list", "(", ")", "[", "0", "]", "\n", "done", "=", "tf", ".", "concat", "(", "[", "tf", ".", "zeros", "(", "[", "batch_size", ",", "1", "]", ",", "dtype", "=", "tf", ".", "bool", ")", ",", "outputs", ".", "done", "[", ":", ",", ":", "-", "1", "]", "]", ",", "axis", "=", "1", ")", "\n", "\n", "### collision", "\n", "model_output_collision", "=", "model_outputs", ".", "logits", "[", "...", ",", "0", "]", "\n", "\n", "collision", "=", "tf", ".", "cast", "(", "outputs", ".", "collision", ",", "tf", ".", "bool", ")", "[", "...", ",", "0", "]", "\n", "collision", "=", "tf", ".", "logical_and", "(", "collision", ",", "tf", ".", "logical_not", "(", "done", ")", ")", "# don't count collisions after done!", "\n", "collision", "=", "tf", ".", "cumsum", "(", "tf", ".", "cast", "(", "collision", ",", "tf", ".", "float32", ")", ",", "axis", "=", "-", "1", ")", ">", "0.5", "\n", "\n", "# collision mask should be same as normal mask, but turned on for dones with collision = true", "\n", "mask_collision", "=", "tf", ".", "cast", "(", "tf", ".", "logical_or", "(", "tf", ".", "logical_not", "(", "done", ")", ",", "collision", ")", ",", "tf", ".", "float32", ")", "\n", "mask_collision", "=", "float", "(", "batch_size", ")", "*", "(", "mask_collision", "/", "tf", ".", "reduce_sum", "(", "mask_collision", ")", ")", "\n", "\n", "cost_collision", "=", "2.0", "*", "tf", ".", "reduce_sum", "(", "\n", "mask_collision", "*", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "tf", ".", "cast", "(", "collision", ",", "tf", ".", "float32", ")", ",", "\n", "logits", "=", "model_output_collision", ")", ",", "\n", "axis", "=", "1", "\n", ")", "\n", "collision_accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "tf", ".", "equal", "(", "model_output_collision", ">", "0", ",", "\n", "tf", ".", "cast", "(", "collision", ",", "tf", ".", "bool", ")", ")", ",", "\n", "tf", ".", "float32", ")", ",", "\n", "axis", "=", "1", ")", "\n", "collision_accuracy_random", "=", "tf", ".", "reduce_mean", "(", "1.", "-", "tf", ".", "cast", "(", "collision", ",", "tf", ".", "float32", ")", ",", "axis", "=", "1", ")", "\n", "\n", "### regularization", "\n", "\n", "cost_l2_reg", "=", "1e-2", "*", "tf", ".", "reduce_mean", "(", "[", "0.5", "*", "tf", ".", "reduce_mean", "(", "kernel", "*", "kernel", ")", "for", "kernel", "in", "model_outputs", ".", "kernels", "]", ")", "*", "tf", ".", "ones", "(", "batch_size", ")", "\n", "\n", "### filter out nans", "\n", "\n", "costs_is_finite", "=", "tf", ".", "is_finite", "(", "cost_collision", ")", "\n", "cost_collision", "=", "tf", ".", "boolean_mask", "(", "cost_collision", ",", "costs_is_finite", ")", "\n", "cost_l2_reg", "=", "tf", ".", "boolean_mask", "(", "cost_l2_reg", ",", "costs_is_finite", ")", "\n", "\n", "### total", "\n", "\n", "cost", "=", "cost_collision", "+", "cost_l2_reg", "\n", "\n", "return", "d", "(", "\n", "total", "=", "cost", ",", "\n", "collision", "=", "cost_collision", ",", "\n", "collision_accuracy", "=", "collision_accuracy", ",", "\n", "collision_accuracy_random", "=", "collision_accuracy_random", ",", "\n", "l2_reg", "=", "cost_l2_reg", "\n", ")", "\n", "\n", "", "return", "d", "(", "\n", "cls", "=", "Trainer", ",", "\n", "params", "=", "d", "(", "\n", "max_steps", "=", "int", "(", "1e5", ")", ",", "\n", "holdout_every_n_steps", "=", "50", ",", "\n", "log_every_n_steps", "=", "int", "(", "1e2", ")", ",", "\n", "save_every_n_steps", "=", "int", "(", "1e4", ")", ",", "\n", "\n", "cost_fn", "=", "cost_fn", ",", "\n", "\n", "optimizer_cls", "=", "tf", ".", "train", ".", "AdamOptimizer", ",", "\n", "learning_rate", "=", "1e-4", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_policy_params": [[128, 167], ["sidewalk.utils.python_utils.AttrDict", "numpy.power", "sidewalk.utils.python_utils.AttrDict", "numpy.arange", "np.power.sum", "tensorflow.square", "tensorflow.square", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "function", ["None"], ["", "def", "get_policy_params", "(", "horizon", ")", ":", "\n", "    ", "def", "cost_fn", "(", "inputs", ",", "model_outputs", ",", "goals", ",", "actions", ")", ":", "\n", "### discriminative", "\n", "        ", "discriminative_cost", "=", "model_outputs", ".", "probcoll", "[", "...", ",", "0", "]", "\n", "gamma", "=", "0.5", "\n", "weighting", "=", "np", ".", "power", "(", "gamma", ",", "np", ".", "arange", "(", "horizon", ")", ")", "\n", "weighting", "*=", "horizon", "/", "weighting", ".", "sum", "(", ")", "\n", "\n", "### action", "\n", "turn", "=", "actions", ".", "commands", ".", "turn", "[", "...", ",", "0", "]", "\n", "turn_cost", "=", "0.5", "*", "tf", ".", "square", "(", "turn", ")", "\n", "\n", "### goal", "\n", "goal_turn_cost", "=", "goals", ".", "is_turn", "*", "tf", ".", "square", "(", "turn", "-", "goals", ".", "turn_goal", ")", "\n", "\n", "### total", "\n", "total", "=", "1.", "*", "discriminative_cost", "*", "weighting", "+", "0.1", "*", "turn_cost", "+", "1.", "*", "goal_turn_cost", "\n", "\n", "return", "d", "(", "\n", "total", "=", "total", ",", "\n", "discriminative_cost", "=", "discriminative_cost", "\n", ")", "# [batch, horizon]", "\n", "\n", "", "return", "d", "(", "\n", "cls", "=", "StaticMPPIPolicy", ",", "\n", "params", "=", "d", "(", "\n", "horizon", "=", "horizon", ",", "\n", "action_selection_limits", "=", "d", "(", "\n", "commands", "=", "d", "(", "\n", "turn", "=", "(", "-", "0.5", ",", "0.5", ")", ",", "\n", ")", "\n", ")", ",", "\n", "cost_fn", "=", "cost_fn", ",", "\n", "\n", "# MPPI params", "\n", "sigma", "=", "1.0", ",", "\n", "N", "=", "8192", ",", "\n", "gamma", "=", "50.0", ",", "\n", "beta", "=", "0.5", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_visualizer_params": [[170, 174], ["sidewalk.utils.python_utils.AttrDict", "sidewalk.utils.python_utils.AttrDict"], "function", ["None"], ["", "def", "get_visualizer_params", "(", ")", ":", "\n", "    ", "return", "d", "(", "\n", "cls", "=", "JackalDisengagementVisualizer", ",", "\n", "params", "=", "d", "(", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_params": [[178, 196], ["sidewalk.utils.python_utils.AttrDict", "os.path.join", "os.path.join", "ours.get_env_spec_params", "ours.get_env_params", "ours.get_dataset_params", "ours.get_dataset_params", "ours.get_model_params", "ours.get_trainer_params", "ours.get_policy_params", "ours.get_visualizer_params"], "function", ["home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_env_spec_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_env_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_dataset_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_dataset_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_model_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_trainer_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_policy_params", "home.repos.pwc.inspect_result.gkahn13_LaND.configs.ours.get_visualizer_params"], ["", "def", "get_params", "(", ")", ":", "\n", "    ", "horizon", "=", "4", "\n", "\n", "train_folders", "=", "[", "os", ".", "path", ".", "join", "(", "FileManager", ".", "experiments_dir", ",", "'hdf5s/train'", ")", "]", "\n", "holdout_folders", "=", "[", "os", ".", "path", ".", "join", "(", "FileManager", ".", "experiments_dir", ",", "'hdf5s/holdout'", ")", "]", "\n", "\n", "return", "d", "(", "\n", "exp_name", "=", "'ours'", ",", "\n", "\n", "# NOTE: this is where all the params get created", "\n", "env_spec", "=", "get_env_spec_params", "(", ")", ",", "\n", "env", "=", "get_env_params", "(", ")", ",", "\n", "dataset_train", "=", "get_dataset_params", "(", "horizon", ",", "train_folders", ")", ",", "\n", "dataset_holdout", "=", "get_dataset_params", "(", "horizon", ",", "holdout_folders", ")", ",", "\n", "model", "=", "get_model_params", "(", "horizon", ")", ",", "\n", "trainer", "=", "get_trainer_params", "(", ")", ",", "\n", "policy", "=", "get_policy_params", "(", "horizon", ")", ",", "\n", "visualizer", "=", "get_visualizer_params", "(", ")", "\n", ")", "\n"]]}