{"home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.NDCG_at_k": [[17, 25], ["numpy.sum", "numpy.sum", "len", "math.log", "enumerate", "math.log", "enumerate", "range", "len"], "function", ["None"], ["def", "NDCG_at_k", "(", "predicted_list", ",", "ground_truth", ",", "k", ")", ":", "\n", "    ", "dcg_value", "=", "[", "(", "v", "/", "log", "(", "i", "+", "1", "+", "1", ",", "2", ")", ")", "for", "i", ",", "v", "in", "enumerate", "(", "predicted_list", "[", ":", "k", "]", ")", "]", "\n", "dcg", "=", "np", ".", "sum", "(", "dcg_value", ")", "\n", "if", "len", "(", "ground_truth", ")", "<", "k", ":", "\n", "        ", "ground_truth", "+=", "[", "0", "for", "i", "in", "range", "(", "k", "-", "len", "(", "ground_truth", ")", ")", "]", "\n", "", "idcg_value", "=", "[", "(", "v", "/", "log", "(", "i", "+", "1", "+", "1", ",", "2", ")", ")", "for", "i", ",", "v", "in", "enumerate", "(", "ground_truth", "[", ":", "k", "]", ")", "]", "\n", "idcg", "=", "np", ".", "sum", "(", "idcg_value", ")", "\n", "return", "dcg", "/", "idcg", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.user_precision_recall_ndcg": [[28, 72], ["range", "evaluate.NDCG_at_k", "evaluate.NDCG_at_k", "evaluate.NDCG_at_k", "evaluate.NDCG_at_k", "len", "numpy.array", "numpy.array", "numpy.array", "dcg_list.append", "dcg_list.append", "range", "len"], "function", ["home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.NDCG_at_k", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.NDCG_at_k", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.NDCG_at_k", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.NDCG_at_k"], ["", "def", "user_precision_recall_ndcg", "(", "new_user_prediction", ",", "test", ")", ":", "\n", "    ", "dcg_list", "=", "[", "]", "\n", "\n", "# compute the number of true positive items at top k", "\n", "count_1", ",", "count_5", ",", "count_10", ",", "count_15", "=", "0", ",", "0", ",", "0", ",", "0", "\n", "for", "i", "in", "range", "(", "15", ")", ":", "\n", "        ", "if", "i", "==", "0", "and", "new_user_prediction", "[", "i", "]", "[", "0", "]", "in", "test", ":", "\n", "            ", "count_1", "=", "1.0", "\n", "", "if", "i", "<", "5", "and", "new_user_prediction", "[", "i", "]", "[", "0", "]", "in", "test", ":", "\n", "            ", "count_5", "+=", "1.0", "\n", "", "if", "i", "<", "10", "and", "new_user_prediction", "[", "i", "]", "[", "0", "]", "in", "test", ":", "\n", "            ", "count_10", "+=", "1.0", "\n", "", "if", "new_user_prediction", "[", "i", "]", "[", "0", "]", "in", "test", ":", "\n", "            ", "count_15", "+=", "1.0", "\n", "dcg_list", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "dcg_list", ".", "append", "(", "0", ")", "\n", "\n", "# calculate NDCG@k", "\n", "", "", "idcg_list", "=", "[", "1", "for", "i", "in", "range", "(", "len", "(", "test", ")", ")", "]", "\n", "ndcg_tmp_1", "=", "NDCG_at_k", "(", "dcg_list", ",", "idcg_list", ",", "1", ")", "\n", "ndcg_tmp_5", "=", "NDCG_at_k", "(", "dcg_list", ",", "idcg_list", ",", "5", ")", "\n", "ndcg_tmp_10", "=", "NDCG_at_k", "(", "dcg_list", ",", "idcg_list", ",", "10", ")", "\n", "ndcg_tmp_15", "=", "NDCG_at_k", "(", "dcg_list", ",", "idcg_list", ",", "15", ")", "\n", "\n", "# precision@k", "\n", "precision_1", "=", "count_1", "\n", "precision_5", "=", "count_5", "/", "5.0", "\n", "precision_10", "=", "count_10", "/", "10.0", "\n", "precision_15", "=", "count_15", "/", "15.0", "\n", "\n", "l", "=", "len", "(", "test", ")", "\n", "if", "l", "==", "0", ":", "\n", "        ", "l", "=", "1", "\n", "# recall@k", "\n", "", "recall_1", "=", "count_1", "/", "l", "\n", "recall_5", "=", "count_5", "/", "l", "\n", "recall_10", "=", "count_10", "/", "l", "\n", "recall_15", "=", "count_15", "/", "l", "\n", "\n", "# return precision, recall, ndcg_tmp", "\n", "return", "np", ".", "array", "(", "[", "precision_1", ",", "precision_5", ",", "precision_10", ",", "precision_15", "]", ")", ",", "np", ".", "array", "(", "[", "recall_1", ",", "recall_5", ",", "recall_10", ",", "recall_15", "]", ")", ",", "np", ".", "array", "(", "[", "ndcg_tmp_1", ",", "ndcg_tmp_5", ",", "ndcg_tmp_10", ",", "ndcg_tmp_15", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.test_model_all": [[75, 132], ["numpy.array", "numpy.array", "numpy.array", "range", "print", "print", "print", "print", "sorted", "numpy.where", "numpy.argpartition", "numpy.array", "evaluate.user_precision_recall_ndcg", "operator.itemgetter", "len"], "function", ["home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.user_precision_recall_ndcg"], ["", "def", "test_model_all", "(", "prediction", ",", "test_mask", ",", "train_mask", ")", ":", "\n", "    ", "precision_1", ",", "precision_5", ",", "precision_10", ",", "precision_15", "=", "0.0000", ",", "0.0000", ",", "0.0000", ",", "0.0000", "\n", "recall_1", ",", "recall_5", ",", "recall_10", ",", "recall_15", "=", "0.0000", ",", "0.0000", ",", "0.0000", ",", "0.0000", "\n", "ndcg_1", ",", "ndcg_5", ",", "ndcg_10", ",", "ndcg_15", "=", "0.0000", ",", "0.0000", ",", "0.0000", ",", "0.0000", "\n", "precision", "=", "np", ".", "array", "(", "[", "precision_1", ",", "precision_5", ",", "precision_10", ",", "precision_15", "]", ")", "\n", "recall", "=", "np", ".", "array", "(", "[", "recall_1", ",", "recall_5", ",", "recall_10", ",", "recall_15", "]", ")", "\n", "ndcg", "=", "np", ".", "array", "(", "[", "ndcg_1", ",", "ndcg_5", ",", "ndcg_10", ",", "ndcg_15", "]", ")", "\n", "\n", "prediction", "=", "prediction", "+", "train_mask", "*", "-", "100000.0", "\n", "\n", "user_num", "=", "prediction", ".", "shape", "[", "0", "]", "\n", "for", "u", "in", "range", "(", "user_num", ")", ":", "# iterate each user", "\n", "        ", "u_test", "=", "test_mask", "[", "u", ",", ":", "]", "\n", "u_test", "=", "np", ".", "where", "(", "u_test", "==", "1", ")", "[", "0", "]", "# the indices of the true positive items in the test set", "\n", "u_pred", "=", "prediction", "[", "u", ",", ":", "]", "\n", "\n", "top15_item_idx_no_train", "=", "np", ".", "argpartition", "(", "u_pred", ",", "-", "15", ")", "[", "-", "15", ":", "]", "\n", "top15", "=", "(", "np", ".", "array", "(", "[", "top15_item_idx_no_train", ",", "u_pred", "[", "top15_item_idx_no_train", "]", "]", ")", ")", ".", "T", "\n", "top15", "=", "sorted", "(", "top15", ",", "key", "=", "itemgetter", "(", "1", ")", ",", "reverse", "=", "True", ")", "\n", "\n", "# calculate the metrics", "\n", "if", "not", "len", "(", "u_test", ")", "==", "0", ":", "\n", "            ", "precision_u", ",", "recall_u", ",", "ndcg_u", "=", "user_precision_recall_ndcg", "(", "top15", ",", "u_test", ")", "\n", "precision", "+=", "precision_u", "\n", "recall", "+=", "recall_u", "\n", "ndcg", "+=", "ndcg_u", "\n", "", "else", ":", "\n", "            ", "user_num", "-=", "1", "\n", "\n", "# compute the average over all users", "\n", "", "", "precision", "/=", "user_num", "\n", "recall", "/=", "user_num", "\n", "ndcg", "/=", "user_num", "\n", "print", "(", "'precision_1\\t[%.7f],\\t||\\t precision_5\\t[%.7f],\\t||\\t precision_10\\t[%.7f],\\t||\\t precision_15\\t[%.7f]'", "%", "(", "precision", "[", "0", "]", ",", "\n", "precision", "[", "1", "]", ",", "\n", "precision", "[", "2", "]", ",", "\n", "precision", "[", "3", "]", ")", ")", "\n", "print", "(", "'recall_1   \\t[%.7f],\\t||\\t recall_5   \\t[%.7f],\\t||\\t recall_10   \\t[%.7f],\\t||\\t recall_15   \\t[%.7f]'", "%", "(", "recall", "[", "0", "]", ",", "recall", "[", "1", "]", ",", "\n", "recall", "[", "2", "]", ",", "recall", "[", "3", "]", ")", ")", "\n", "f_measure_1", "=", "2", "*", "(", "precision", "[", "0", "]", "*", "recall", "[", "0", "]", ")", "/", "(", "precision", "[", "0", "]", "+", "recall", "[", "0", "]", ")", "if", "not", "precision", "[", "0", "]", "+", "recall", "[", "0", "]", "==", "0", "else", "0", "\n", "f_measure_5", "=", "2", "*", "(", "precision", "[", "1", "]", "*", "recall", "[", "1", "]", ")", "/", "(", "precision", "[", "1", "]", "+", "recall", "[", "1", "]", ")", "if", "not", "precision", "[", "1", "]", "+", "recall", "[", "1", "]", "==", "0", "else", "0", "\n", "f_measure_10", "=", "2", "*", "(", "precision", "[", "2", "]", "*", "recall", "[", "2", "]", ")", "/", "(", "precision", "[", "2", "]", "+", "recall", "[", "2", "]", ")", "if", "not", "precision", "[", "2", "]", "+", "recall", "[", "2", "]", "==", "0", "else", "0", "\n", "f_measure_15", "=", "2", "*", "(", "precision", "[", "3", "]", "*", "recall", "[", "3", "]", ")", "/", "(", "precision", "[", "3", "]", "+", "recall", "[", "3", "]", ")", "if", "not", "precision", "[", "3", "]", "+", "recall", "[", "3", "]", "==", "0", "else", "0", "\n", "print", "(", "'f_measure_1\\t[%.7f],\\t||\\t f_measure_5\\t[%.7f],\\t||\\t f_measure_10\\t[%.7f],\\t||\\t f_measure_15\\t[%.7f]'", "%", "(", "f_measure_1", ",", "\n", "f_measure_5", ",", "\n", "f_measure_10", ",", "\n", "f_measure_15", ")", ")", "\n", "f_score", "=", "[", "f_measure_1", ",", "f_measure_5", ",", "f_measure_10", ",", "f_measure_15", "]", "\n", "print", "(", "'ndcg_1     \\t[%.7f],\\t||\\t ndcg_5     \\t[%.7f],\\t||\\t ndcg_10     \\t[%.7f],\\t||\\t ndcg_15     \\t[%.7f]'", "%", "(", "ndcg", "[", "0", "]", ",", "\n", "ndcg", "[", "1", "]", ",", "\n", "ndcg", "[", "2", "]", ",", "\n", "ndcg", "[", "3", "]", ")", ")", "\n", "return", "precision", ",", "recall", ",", "f_score", ",", "ndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.metric_record": [[134, 145], ["open", "f.write", "f.write", "f.write", "f.write", "f.write", "f.write", "f.close", "str", "str", "str", "str", "str"], "function", ["None"], ["", "def", "metric_record", "(", "precision", ",", "recall", ",", "f_score", ",", "NDCG", ",", "args", ",", "metric_path", ")", ":", "# record all the results' details into files", "\n", "    ", "path", "=", "metric_path", "+", "'.txt'", "\n", "\n", "with", "open", "(", "path", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "str", "(", "args", ")", "+", "'\\n'", ")", "\n", "f", ".", "write", "(", "'precision:'", "+", "str", "(", "precision", ")", "+", "'\\n'", ")", "\n", "f", ".", "write", "(", "'recall:'", "+", "str", "(", "recall", ")", "+", "'\\n'", ")", "\n", "f", ".", "write", "(", "'f score:'", "+", "str", "(", "f_score", ")", "+", "'\\n'", ")", "\n", "f", ".", "write", "(", "'NDCG:'", "+", "str", "(", "NDCG", ")", "+", "'\\n'", ")", "\n", "f", ".", "write", "(", "'\\n'", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.get_train_instances": [[147, 167], ["evaluate.neg_sampling", "numpy.array", "range", "range", "numpy.where", "user_input.append", "item_input.append", "labels.append"], "function", ["home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.neg_sampling"], ["", "", "def", "get_train_instances", "(", "train_R", ",", "neg_sample_rate", ")", ":", "\n", "    ", "\"\"\"\n    genderate training dataset for NCF models in each iteration\n    :param train_R:\n    :param neg_sample_rate:\n    :return:\n    \"\"\"", "\n", "# randomly sample negative samples", "\n", "mask", "=", "neg_sampling", "(", "train_R", ",", "range", "(", "train_R", ".", "shape", "[", "0", "]", ")", ",", "neg_sample_rate", ")", "\n", "\n", "user_input", ",", "item_input", ",", "labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "idx", "=", "np", ".", "array", "(", "np", ".", "where", "(", "mask", "==", "1", ")", ")", "\n", "for", "i", "in", "range", "(", "idx", ".", "shape", "[", "1", "]", ")", ":", "\n", "# positive instance", "\n", "        ", "u_i", "=", "idx", "[", "0", ",", "i", "]", "\n", "i_i", "=", "idx", "[", "1", ",", "i", "]", "\n", "user_input", ".", "append", "(", "u_i", ")", "\n", "item_input", ".", "append", "(", "i_i", ")", "\n", "labels", ".", "append", "(", "train_R", "[", "u_i", ",", "i_i", "]", ")", "\n", "", "return", "user_input", ",", "item_input", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.neg_sampling": [[169, 197], ["copy.copy", "numpy.where", "int", "numpy.random.choice", "len", "len", "len"], "function", ["None"], ["", "def", "neg_sampling", "(", "train_R", ",", "idx", ",", "neg_sample_rate", ")", ":", "\n", "    ", "\"\"\"\n    randomly negative smaples\n    :param train_R:\n    :param idx:\n    :param neg_sample_rate:\n    :return:\n    \"\"\"", "\n", "num_cols", "=", "train_R", ".", "shape", "[", "1", "]", "\n", "num_rows", "=", "train_R", ".", "shape", "[", "0", "]", "\n", "# randomly sample negative samples", "\n", "mask", "=", "copy", ".", "copy", "(", "train_R", ")", "\n", "if", "neg_sample_rate", "==", "0", ":", "\n", "        ", "return", "mask", "\n", "", "for", "b_idx", "in", "idx", ":", "\n", "        ", "mask_list", "=", "mask", "[", "b_idx", ",", ":", "]", "\n", "unobsv_list", "=", "np", ".", "where", "(", "mask_list", "==", "0", ")", "\n", "unobsv_list", "=", "unobsv_list", "[", "0", "]", "# unobserved indices", "\n", "obsv_num", "=", "num_cols", "-", "len", "(", "unobsv_list", ")", "\n", "neg_num", "=", "int", "(", "obsv_num", "*", "neg_sample_rate", ")", "\n", "if", "neg_num", ">", "len", "(", "unobsv_list", ")", ":", "# if the observed positive ratings are more than the half", "\n", "            ", "neg_num", "=", "len", "(", "unobsv_list", ")", "\n", "", "if", "neg_num", "==", "0", ":", "\n", "            ", "neg_num", "=", "1", "\n", "", "neg_samp_list", "=", "np", ".", "random", ".", "choice", "(", "unobsv_list", ",", "size", "=", "neg_num", ",", "replace", "=", "False", ")", "\n", "mask_list", "[", "neg_samp_list", "]", "=", "1", "\n", "mask", "[", "b_idx", ",", ":", "]", "=", "mask_list", "\n", "", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.pairwise_neg_sampling": [[199, 222], ["numpy.where", "range", "range", "numpy.where", "unobsv_mat.append", "len", "numpy.random.choice", "numpy.array", "numpy.array", "p_input.append", "n_input.append"], "function", ["None"], ["", "def", "pairwise_neg_sampling", "(", "train_R", ",", "r_idx", ",", "c_idx", ",", "neg_sample_rate", ")", ":", "\n", "    ", "R", "=", "train_R", "[", "r_idx", ",", ":", "]", "\n", "R", "=", "R", "[", ":", ",", "c_idx", "]", "\n", "p_input", ",", "n_input", "=", "[", "]", ",", "[", "]", "\n", "obsv_list", "=", "np", ".", "where", "(", "R", "==", "1", ")", "\n", "\n", "unobsv_mat", "=", "[", "]", "\n", "for", "r", "in", "range", "(", "R", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "unobsv_list", "=", "np", ".", "where", "(", "R", "[", "r", ",", ":", "]", "==", "0", ")", "\n", "unobsv_list", "=", "unobsv_list", "[", "0", "]", "\n", "unobsv_mat", ".", "append", "(", "unobsv_list", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "obsv_list", "[", "1", "]", ")", ")", ":", "\n", "# positive instance", "\n", "        ", "u", "=", "obsv_list", "[", "0", "]", "[", "i", "]", "\n", "# negative instances", "\n", "unobsv_list", "=", "unobsv_mat", "[", "u", "]", "\n", "neg_samp_list", "=", "np", ".", "random", ".", "choice", "(", "unobsv_list", ",", "size", "=", "neg_sample_rate", ",", "replace", "=", "False", ")", "\n", "for", "ns", "in", "neg_samp_list", ":", "\n", "            ", "p_input", ".", "append", "(", "[", "u", ",", "obsv_list", "[", "1", "]", "[", "i", "]", "]", ")", "\n", "n_input", ".", "append", "(", "[", "u", ",", "ns", "]", ")", "\n", "# print('dataset size = ' + str(len(p_input)))", "\n", "", "", "return", "np", ".", "array", "(", "p_input", ")", ",", "np", ".", "array", "(", "n_input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.test_model_batch": [[225, 255], ["numpy.array", "numpy.array", "numpy.array", "range", "sorted", "numpy.where", "numpy.argpartition", "numpy.array", "evaluate.user_precision_recall_ndcg", "operator.itemgetter", "len"], "function", ["home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.user_precision_recall_ndcg"], ["", "def", "test_model_batch", "(", "prediction", ",", "test_mask", ",", "train_mask", ")", ":", "\n", "    ", "precision_1", ",", "precision_5", ",", "precision_10", ",", "precision_15", "=", "0.0000", ",", "0.0000", ",", "0.0000", ",", "0.0000", "\n", "recall_1", ",", "recall_5", ",", "recall_10", ",", "recall_15", "=", "0.0000", ",", "0.0000", ",", "0.0000", ",", "0.0000", "\n", "ndcg_1", ",", "ndcg_5", ",", "ndcg_10", ",", "ndcg_15", "=", "0.0000", ",", "0.0000", ",", "0.0000", ",", "0.0000", "\n", "precision", "=", "np", ".", "array", "(", "[", "precision_1", ",", "precision_5", ",", "precision_10", ",", "precision_15", "]", ")", "\n", "recall", "=", "np", ".", "array", "(", "[", "recall_1", ",", "recall_5", ",", "recall_10", ",", "recall_15", "]", ")", "\n", "ndcg", "=", "np", ".", "array", "(", "[", "ndcg_1", ",", "ndcg_5", ",", "ndcg_10", ",", "ndcg_15", "]", ")", "\n", "\n", "prediction", "=", "prediction", "+", "train_mask", "*", "-", "100000.0", "\n", "\n", "user_num", "=", "prediction", ".", "shape", "[", "0", "]", "\n", "for", "u", "in", "range", "(", "user_num", ")", ":", "# iterate each user", "\n", "        ", "u_test", "=", "test_mask", "[", "u", ",", ":", "]", "\n", "u_test", "=", "np", ".", "where", "(", "u_test", "==", "1", ")", "[", "0", "]", "# the indices of the true positive items in the test set", "\n", "u_pred", "=", "prediction", "[", "u", ",", ":", "]", "\n", "\n", "top15_item_idx_no_train", "=", "np", ".", "argpartition", "(", "u_pred", ",", "-", "15", ")", "[", "-", "15", ":", "]", "\n", "top15", "=", "(", "np", ".", "array", "(", "[", "top15_item_idx_no_train", ",", "u_pred", "[", "top15_item_idx_no_train", "]", "]", ")", ")", ".", "T", "\n", "top15", "=", "sorted", "(", "top15", ",", "key", "=", "itemgetter", "(", "1", ")", ",", "reverse", "=", "True", ")", "\n", "\n", "# calculate the metrics", "\n", "if", "not", "len", "(", "u_test", ")", "==", "0", ":", "\n", "            ", "precision_u", ",", "recall_u", ",", "ndcg_u", "=", "user_precision_recall_ndcg", "(", "top15", ",", "u_test", ")", "\n", "precision", "+=", "precision_u", "\n", "recall", "+=", "recall_u", "\n", "ndcg", "+=", "ndcg_u", "\n", "", "else", ":", "\n", "            ", "user_num", "-=", "1", "\n", "\n", "", "", "return", "precision", ",", "recall", ",", "ndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.test_model_factor": [[257, 280], ["numpy.zeros", "numpy.zeros", "range", "numpy.sum", "pandas.DataFrame", "pd.DataFrame.to_csv", "pandas.DataFrame", "pd.DataFrame.to_csv", "len", "range", "numpy.where", "numpy.argpartition", "len", "time.strftime", "time.strftime", "time.localtime", "time.localtime"], "function", ["None"], ["", "def", "test_model_factor", "(", "prediction", ",", "test_mask", ",", "train_mask", ")", ":", "\n", "    ", "item_list", "=", "np", ".", "zeros", "(", "train_mask", ".", "shape", "[", "1", "]", ")", "\n", "item_list_rank", "=", "np", ".", "zeros", "(", "train_mask", ".", "shape", "[", "1", "]", ")", "\n", "\n", "prediction", "=", "prediction", "+", "train_mask", "*", "-", "100000.0", "\n", "\n", "user_num", "=", "prediction", ".", "shape", "[", "0", "]", "\n", "for", "u", "in", "range", "(", "user_num", ")", ":", "# iterate each user", "\n", "        ", "u_test", "=", "test_mask", "[", "u", ",", ":", "]", "\n", "u_test", "=", "np", ".", "where", "(", "u_test", "==", "1", ")", "[", "0", "]", "# the indices of the true positive items in the test set", "\n", "len_u_test", "=", "len", "(", "u_test", ")", "\n", "u_pred", "=", "prediction", "[", "u", ",", ":", "]", "\n", "\n", "top10_item_idx_no_train", "=", "np", ".", "argpartition", "(", "u_pred", ",", "-", "10", ")", "[", "-", "10", ":", "]", "\n", "item_list", "[", "top10_item_idx_no_train", "]", "+=", "1", "\n", "for", "i", "in", "range", "(", "len", "(", "top10_item_idx_no_train", ")", ")", ":", "\n", "            ", "item_list_rank", "[", "top10_item_idx_no_train", "[", "i", "]", "]", "+=", "(", "10", "-", "i", ")", "\n", "\n", "", "", "item_count", "=", "np", ".", "sum", "(", "train_mask", ",", "axis", "=", "0", ")", "\n", "df", "=", "pd", ".", "DataFrame", "(", "{", "'item_pred_freq'", ":", "item_list", ",", "'item_count'", ":", "item_count", "}", ")", "\n", "df", ".", "to_csv", "(", "'data/no-factor'", "+", "time", ".", "strftime", "(", "'%y-%m-%d-%H-%M-%S'", ",", "time", ".", "localtime", "(", ")", ")", "+", "'.csv'", ")", "\n", "df", "=", "pd", ".", "DataFrame", "(", "{", "'item_pred_rank'", ":", "item_list_rank", ",", "'item_count'", ":", "item_count", "}", ")", "\n", "df", ".", "to_csv", "(", "'data/rank-no-factor'", "+", "time", ".", "strftime", "(", "'%y-%m-%d-%H-%M-%S'", ",", "time", ".", "localtime", "(", ")", ")", "+", "'.csv'", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.preprocessor.ml1m.__init__": [[11, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.preprocessor.ml1m.train": [[14, 36], ["pandas.read_csv", "pandas.read_csv", "numpy.max", "numpy.max", "numpy.zeros", "numpy.zeros", "range", "range", "len", "len", "int", "int", "int", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "train", "(", "n", ")", ":", "\n", "        ", "train_df", "=", "pd", ".", "read_csv", "(", "'./data/ml-1m/train_%d.csv'", "%", "n", ")", "\n", "vali_df", "=", "pd", ".", "read_csv", "(", "'./data/ml-1m/vali_%d.csv'", "%", "n", ")", "\n", "num_users", "=", "np", ".", "max", "(", "train_df", "[", "'userId'", "]", ")", "\n", "num_items", "=", "np", ".", "max", "(", "train_df", "[", "'movieId'", "]", ")", "\n", "\n", "train_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# training rating matrix", "\n", "vali_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# validation rating matrix", "\n", "\n", "train_mat", "=", "train_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "train_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "train_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "train_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "train_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "\n", "", "vali_mat", "=", "vali_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "vali_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "vali_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "vali_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "vali_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "", "return", "train_R", ",", "vali_R", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.preprocessor.ml1m.test": [[37, 65], ["pandas.read_csv", "numpy.max", "numpy.max", "numpy.zeros", "range", "pandas.read_csv", "numpy.max", "numpy.max", "numpy.zeros", "range", "len", "len", "int", "int", "int", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "test", "(", ")", ":", "\n", "        ", "test_df", "=", "pd", ".", "read_csv", "(", "'./data/ml-1m/test.csv'", ")", "\n", "num_users", "=", "np", ".", "max", "(", "test_df", "[", "'userId'", "]", ")", "\n", "num_items", "=", "np", ".", "max", "(", "test_df", "[", "'movieId'", "]", ")", "\n", "\n", "test_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# testing rating matrix", "\n", "\n", "test_mat", "=", "test_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "test_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "test_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "test_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "test_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "\n", "", "train_df", "=", "pd", ".", "read_csv", "(", "'./data/ml-1m/train.csv'", ")", "\n", "num_users", "=", "np", ".", "max", "(", "train_df", "[", "'userId'", "]", ")", "\n", "num_items", "=", "np", ".", "max", "(", "train_df", "[", "'movieId'", "]", ")", "\n", "\n", "train_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# testing rating matrix", "\n", "\n", "train_mat", "=", "train_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "train_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "train_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "train_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "train_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "train_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "\n", "", "return", "train_R", ",", "test_R", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.preprocessor.Pinterest.__init__": [[67, 69], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.preprocessor.Pinterest.train": [[70, 92], ["pandas.read_csv", "pandas.read_csv", "numpy.max", "numpy.max", "numpy.zeros", "numpy.zeros", "range", "range", "len", "len", "int", "int", "int", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "train", "(", "n", ")", ":", "\n", "        ", "train_df", "=", "pd", ".", "read_csv", "(", "'./data/p/train_%d.csv'", "%", "n", ")", "\n", "vali_df", "=", "pd", ".", "read_csv", "(", "'./data/p/vali_%d.csv'", "%", "n", ")", "\n", "num_users", "=", "np", ".", "max", "(", "train_df", "[", "'userId'", "]", ")", "\n", "num_items", "=", "np", ".", "max", "(", "train_df", "[", "'movieId'", "]", ")", "\n", "\n", "train_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# training rating matrix", "\n", "vali_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# validation rating matrix", "\n", "\n", "train_mat", "=", "train_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "train_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "train_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "train_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "train_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "\n", "", "vali_mat", "=", "vali_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "vali_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "vali_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "vali_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "vali_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "", "return", "train_R", ",", "vali_R", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.preprocessor.Pinterest.test": [[93, 121], ["pandas.read_csv", "numpy.max", "numpy.max", "numpy.zeros", "range", "pandas.read_csv", "numpy.max", "numpy.max", "numpy.zeros", "range", "len", "len", "int", "int", "int", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "test", "(", ")", ":", "\n", "        ", "test_df", "=", "pd", ".", "read_csv", "(", "'./data/p/test.csv'", ")", "\n", "num_users", "=", "np", ".", "max", "(", "test_df", "[", "'userId'", "]", ")", "\n", "num_items", "=", "np", ".", "max", "(", "test_df", "[", "'movieId'", "]", ")", "\n", "\n", "test_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# testing rating matrix", "\n", "\n", "test_mat", "=", "test_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "test_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "test_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "test_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "test_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "\n", "", "train_df", "=", "pd", ".", "read_csv", "(", "'./data/p/train.csv'", ")", "\n", "num_users", "=", "np", ".", "max", "(", "train_df", "[", "'userId'", "]", ")", "\n", "num_items", "=", "np", ".", "max", "(", "train_df", "[", "'movieId'", "]", ")", "\n", "\n", "train_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# testing rating matrix", "\n", "\n", "train_mat", "=", "train_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "train_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "train_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "train_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "train_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "train_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "\n", "", "return", "train_R", ",", "test_R", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.preprocessor.yelp.__init__": [[126, 128], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.preprocessor.yelp.train": [[129, 151], ["pandas.read_csv", "pandas.read_csv", "numpy.max", "numpy.max", "numpy.zeros", "numpy.zeros", "range", "range", "len", "len", "int", "int", "int", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "train", "(", "n", ")", ":", "\n", "        ", "train_df", "=", "pd", ".", "read_csv", "(", "'./data/yelp/train_%d.csv'", "%", "n", ")", "\n", "vali_df", "=", "pd", ".", "read_csv", "(", "'./data/yelp/vali_%d.csv'", "%", "n", ")", "\n", "num_users", "=", "np", ".", "max", "(", "train_df", "[", "'userId'", "]", ")", "\n", "num_items", "=", "np", ".", "max", "(", "train_df", "[", "'itemId'", "]", ")", "\n", "\n", "train_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# training rating matrix", "\n", "vali_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# validation rating matrix", "\n", "\n", "train_mat", "=", "train_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "train_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "train_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "train_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "train_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "\n", "", "vali_mat", "=", "vali_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "vali_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "vali_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "vali_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "vali_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "", "return", "train_R", ",", "vali_R", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.preprocessor.yelp.test": [[152, 180], ["pandas.read_csv", "numpy.max", "numpy.max", "numpy.zeros", "range", "pandas.read_csv", "numpy.max", "numpy.max", "numpy.zeros", "range", "len", "len", "int", "int", "int", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "test", "(", ")", ":", "\n", "        ", "test_df", "=", "pd", ".", "read_csv", "(", "'./data/yelp/test.csv'", ")", "\n", "num_users", "=", "np", ".", "max", "(", "test_df", "[", "'userId'", "]", ")", "\n", "num_items", "=", "np", ".", "max", "(", "test_df", "[", "'itemId'", "]", ")", "\n", "\n", "test_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# testing rating matrix", "\n", "\n", "test_mat", "=", "test_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "test_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "test_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "test_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "test_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "\n", "", "train_df", "=", "pd", ".", "read_csv", "(", "'./data/yelp/train.csv'", ")", "\n", "num_users", "=", "np", ".", "max", "(", "train_df", "[", "'userId'", "]", ")", "\n", "num_items", "=", "np", ".", "max", "(", "train_df", "[", "'itemId'", "]", ")", "\n", "\n", "train_R", "=", "np", ".", "zeros", "(", "(", "num_users", ",", "num_items", ")", ")", "# testing rating matrix", "\n", "\n", "train_mat", "=", "train_df", ".", "values", "\n", "for", "i", "in", "range", "(", "len", "(", "train_df", ")", ")", ":", "\n", "            ", "user_idx", "=", "int", "(", "train_mat", "[", "i", ",", "0", "]", ")", "-", "1", "\n", "item_idx", "=", "int", "(", "train_mat", "[", "i", ",", "1", "]", ")", "-", "1", "\n", "train_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "train_R", "[", "user_idx", ",", "item_idx", "]", "=", "1", "\n", "\n", "", "return", "train_R", ",", "test_R", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.JoVA.JoVA.__init__": [[14, 42], ["int", "tensorflow.Variable", "tensorflow.train.exponential_decay", "math.ceil", "int", "int", "float", "float", "float"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "args", ",", "\n", "num_users", ",", "num_items", ",", "\n", "train_R", ",", "test_R", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "num_users", "=", "num_users", "\n", "self", ".", "num_items", "=", "num_items", "\n", "self", ".", "train_R", "=", "train_R", "\n", "self", ".", "test_R", "=", "test_R", "\n", "self", ".", "train_epoch", "=", "args", ".", "train_epoch", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "self", ".", "num_batch", "=", "int", "(", "math", ".", "ceil", "(", "self", ".", "num_users", "/", "float", "(", "self", ".", "batch_size", ")", ")", ")", "\n", "self", ".", "num_batch_U", "=", "int", "(", "self", ".", "num_users", "/", "float", "(", "self", ".", "batch_size", ")", ")", "+", "1", "\n", "self", ".", "num_batch_I", "=", "int", "(", "self", ".", "num_items", "/", "float", "(", "self", ".", "batch_size", ")", ")", "+", "1", "\n", "\n", "self", ".", "base_lr", "=", "args", ".", "base_lr", "\n", "self", ".", "using_hinge", "=", "args", ".", "using_hinge", "\n", "\n", "self", ".", "global_step", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "decay_epoch_step", "=", "args", ".", "decay_epoch_step", "\n", "self", ".", "decay_step", "=", "self", ".", "decay_epoch_step", "*", "self", ".", "num_batch", "\n", "self", ".", "lr", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "base_lr", ",", "self", ".", "global_step", ",", "\n", "self", ".", "decay_step", ",", "0.96", ",", "staircase", "=", "True", ")", "\n", "self", ".", "beta_value", "=", "args", ".", "beta_value", "\n", "self", ".", "train_cost_list", "=", "[", "]", "\n", "self", ".", "test_cost_list", "=", "[", "]", "\n", "self", ".", "test_rmse_list", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.JoVA.JoVA.sampling": [[43, 52], ["keras.backend.random_normal", "keras.backend.shape", "keras.backend.int_shape", "keras.backend.exp"], "methods", ["None"], ["", "def", "sampling", "(", "self", ",", "args", ")", ":", "\n", "\n", "\n", "        ", "z_mean", ",", "z_log_var", "=", "args", "\n", "batch", "=", "K", ".", "shape", "(", "z_mean", ")", "[", "0", "]", "\n", "dim", "=", "K", ".", "int_shape", "(", "z_mean", ")", "[", "1", "]", "\n", "# by default, random_normal has mean = 0 and std = 1.0", "\n", "epsilon", "=", "K", ".", "random_normal", "(", "shape", "=", "(", "batch", ",", "dim", ")", ")", "\n", "return", "z_mean", "+", "K", ".", "exp", "(", "0.5", "*", "z_log_var", ")", "*", "epsilon", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.JoVA.JoVA.run": [[53, 60], ["JoVA.JoVA.prepare_model", "tensorflow.global_variables_initializer", "JoVA.JoVA.sess.run", "range", "JoVA.JoVA.train_model", "JoVA.JoVA.test_model"], "methods", ["home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.prepare_model", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.run", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.train_model", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.test_model"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "self", ".", "prepare_model", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "sess", ".", "run", "(", "init", ")", "\n", "for", "epoch_itr", "in", "range", "(", "self", ".", "train_epoch", ")", ":", "\n", "            ", "self", ".", "train_model", "(", "epoch_itr", ")", "\n", "self", ".", "test_model", "(", "epoch_itr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.JoVA.JoVA.prepare_model": [[62, 172], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "keras.models.Model", "keras.layers.Input", "keras.models.Model", "keras.models.Model.", "keras.losses.binary_crossentropy", "keras.backend.sum", "keras.backend.mean", "keras.layers.Input", "keras.models.Model", "keras.layers.Input", "keras.models.Model", "keras.models.Model.", "tensorflow.gather_nd", "tensorflow.gather_nd", "tensorflow.maximum", "tensorflow.reduce_sum", "keras.losses.binary_crossentropy", "keras.backend.sum", "keras.backend.mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "keras.layers.Dense", "keras.layers.Input", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Lambda", "keras.layers.Input", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Input", "keras.backend.exp", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Lambda", "keras.layers.Dense", "keras.layers.Dense", "tensorflow.zeros", "keras.layers.Input", "keras.backend.exp", "keras.models.Model.", "keras.backend.square", "tensorflow.transpose", "keras.models.Model.", "tensorflow.transpose", "tensorflow.gather_nd", "keras.backend.square", "keras.layers.Input", "tensorflow.gather_nd", "tensorflow.transpose", "tensorflow.shape", "tensorflow.transpose"], "methods", ["None"], ["", "", "def", "prepare_model", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "input_R_U", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "self", ".", "num_items", "]", ",", "name", "=", "\"input_R_U\"", ")", "\n", "self", ".", "input_R_I", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "self", ".", "num_users", ",", "None", "]", ",", "name", "=", "\"input_R_I\"", ")", "\n", "\n", "\n", "self", ".", "input_P_cor", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "2", "]", ",", "name", "=", "\"input_P_cor\"", ")", "\n", "self", ".", "input_N_cor", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "2", "]", ",", "name", "=", "\"input_N_cor\"", ")", "\n", "self", ".", "row_idx", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "1", "]", ",", "name", "=", "\"row_idx\"", ")", "\n", "self", ".", "col_idx", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "1", "]", ",", "name", "=", "\"col_idx\"", ")", "\n", "\n", "intermediate_dim", "=", "320", "\n", "latent_dim", "=", "80", "\n", "\n", "#encoder", "\n", "x1_user", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'tanh'", ")", "(", "Input", "(", "tensor", "=", "self", ".", "input_R_U", ")", ")", "\n", "\n", "x_user", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'sigmoid'", ")", "(", "x1_user", ")", "\n", "z_mean", "=", "Dense", "(", "latent_dim", ",", "name", "=", "'z_mean'", ")", "(", "x_user", ")", "\n", "z_log_var", "=", "Dense", "(", "latent_dim", ",", "name", "=", "'z_log_var'", ")", "(", "x_user", ")", "\n", "\n", "# use reparameterization trick to push the sampling out as input", "\n", "\n", "z", "=", "Lambda", "(", "self", ".", "sampling", ",", "output_shape", "=", "(", "latent_dim", ",", ")", ",", "name", "=", "'z'", ")", "(", "[", "z_mean", ",", "z_log_var", "]", ")", "\n", "\n", "# instantiate encoder_user model", "\n", "encoder_user", "=", "Model", "(", "Input", "(", "tensor", "=", "self", ".", "input_R_U", ")", ",", "[", "z_mean", ",", "z_log_var", ",", "z", "]", ",", "name", "=", "'encoder_user'", ")", "\n", "\n", "# build decoder model", "\n", "latent_inputs", "=", "Input", "(", "shape", "=", "(", "latent_dim", ",", ")", ",", "name", "=", "'z_sampling'", ")", "\n", "x_user_decoder", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'tanh'", ")", "(", "latent_inputs", ")", "\n", "\n", "outputs_user", "=", "Dense", "(", "self", ".", "num_items", ",", "activation", "=", "'sigmoid'", ")", "(", "x_user_decoder", ")", "\n", "\n", "# instantiate decoder model", "\n", "decoder_user", "=", "Model", "(", "latent_inputs", ",", "outputs_user", ",", "name", "=", "'decoder_user'", ")", "\n", "# instantiate VAE model", "\n", "outputs_user", "=", "decoder_user", "(", "encoder_user", "(", "Input", "(", "tensor", "=", "self", ".", "input_R_U", ")", ")", "[", "2", "]", ")", "\n", "\n", "self", ".", "U_Decoder", "=", "outputs_user", "\n", "\n", "reconstruction_loss_u", "=", "binary_crossentropy", "(", "Input", "(", "tensor", "=", "self", ".", "input_R_U", ")", ",", "\n", "outputs_user", ")", "\n", "\n", "reconstruction_loss_u", "*=", "self", ".", "num_items", "\n", "kl_loss_u", "=", "1", "+", "z_log_var", "-", "K", ".", "square", "(", "z_mean", ")", "-", "K", ".", "exp", "(", "z_log_var", ")", "\n", "kl_loss_u", "=", "K", ".", "sum", "(", "kl_loss_u", ",", "axis", "=", "-", "1", ")", "\n", "kl_loss_u", "*=", "-", "0.01", "\n", "vae_loss_u", "=", "K", ".", "mean", "(", "reconstruction_loss_u", "+", "kl_loss_u", ")", "\n", "#######################################################", "\n", "inp_tmp", "=", "Input", "(", "tensor", "=", "tf", ".", "transpose", "(", "self", ".", "input_R_I", ")", ")", "\n", "\n", "intermediate_dim", "=", "320", "\n", "latent_dim", "=", "80", "\n", "\n", "x1Item", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'tanh'", ")", "(", "inp_tmp", ")", "\n", "\n", "xItem", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'sigmoid'", ")", "(", "x1Item", ")", "\n", "z_meanItem", "=", "Dense", "(", "latent_dim", ",", "name", "=", "'z_mean'", ")", "(", "xItem", ")", "\n", "z_log_varItem", "=", "Dense", "(", "latent_dim", ",", "name", "=", "'z_log_var'", ")", "(", "xItem", ")", "\n", "\n", "\n", "# use reparameterization trick to push the sampling out as input", "\n", "\n", "zItem", "=", "Lambda", "(", "self", ".", "sampling", ",", "output_shape", "=", "(", "latent_dim", ",", ")", ",", "name", "=", "'z'", ")", "(", "[", "z_meanItem", ",", "z_log_varItem", "]", ")", "\n", "\n", "# instantiate encoder_user model", "\n", "encoderItem", "=", "Model", "(", "inp_tmp", ",", "[", "z_meanItem", ",", "z_log_varItem", ",", "zItem", "]", ",", "name", "=", "'encoder_user'", ")", "\n", "\n", "# build decoder model", "\n", "latent_inputsItem", "=", "Input", "(", "shape", "=", "(", "latent_dim", ",", ")", ",", "name", "=", "'z_sampling'", ")", "\n", "xItem", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'tanh'", ")", "(", "latent_inputsItem", ")", "\n", "\n", "outputs_item", "=", "Dense", "(", "self", ".", "num_users", ",", "activation", "=", "'sigmoid'", ")", "(", "xItem", ")", "\n", "\n", "# instantiate decoder model", "\n", "decoderItem", "=", "Model", "(", "latent_inputsItem", ",", "outputs_item", ",", "name", "=", "'decoder'", ")", "\n", "\n", "# instantiate VAE model", "\n", "outputs_item", "=", "decoderItem", "(", "encoderItem", "(", "inp_tmp", ")", "[", "2", "]", ")", "\n", "\n", "self", ".", "I_Decoder", "=", "outputs_item", "\n", "\n", "self", ".", "Decoder", "=", "(", "(", "tf", ".", "transpose", "(", "tf", ".", "gather_nd", "(", "tf", ".", "transpose", "(", "self", ".", "U_Decoder", ")", ",", "self", ".", "col_idx", ")", ")", ")", "\n", "+", "tf", ".", "gather_nd", "(", "tf", ".", "transpose", "(", "self", ".", "I_Decoder", ")", ",", "self", ".", "row_idx", ")", ")", "/", "2.0", "\n", "\n", "\n", "\n", "pos_data", "=", "tf", ".", "gather_nd", "(", "self", ".", "Decoder", ",", "self", ".", "input_P_cor", ")", "\n", "neg_data", "=", "tf", ".", "gather_nd", "(", "self", ".", "Decoder", ",", "self", ".", "input_N_cor", ")", "\n", "\n", "pre_cost1", "=", "tf", ".", "maximum", "(", "neg_data", "-", "pos_data", "+", "0.15", ",", "\n", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "neg_data", ")", "[", "0", "]", ")", ")", "\n", "cost_hinge", "=", "tf", ".", "reduce_sum", "(", "pre_cost1", ")", "# prediction squared error", "\n", "reconstruction_loss", "=", "binary_crossentropy", "(", "Input", "(", "tensor", "=", "inp_tmp", ")", ",", "\n", "outputs_item", ")", "\n", "\n", "reconstruction_loss", "*=", "self", ".", "num_users", "\n", "kl_loss", "=", "1", "+", "z_log_varItem", "-", "K", ".", "square", "(", "z_meanItem", ")", "-", "K", ".", "exp", "(", "z_log_varItem", ")", "\n", "kl_loss", "=", "K", ".", "sum", "(", "kl_loss", ",", "axis", "=", "-", "1", ")", "\n", "kl_loss", "*=", "-", "0.01", "\n", "vae_loss_i", "=", "K", ".", "mean", "(", "reconstruction_loss", "+", "kl_loss", ")", "\n", "\n", "if", "self", ".", "using_hinge", "==", "0", ":", "\n", "                ", "self", ".", "cost", "=", "vae_loss_i", "+", "vae_loss_u", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "cost", "=", "vae_loss_i", "+", "vae_loss_u", "+", "self", ".", "beta_value", "*", "cost_hinge", "\n", "", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr", ")", "\n", "self", ".", "optimizer", "=", "optimizer", ".", "minimize", "(", "self", ".", "cost", ",", "global_step", "=", "self", ".", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.JoVA.JoVA.train_model": [[175, 209], ["time.time", "numpy.random.permutation", "numpy.random.permutation", "range", "print", "range", "evaluate.pairwise_neg_sampling", "JoVA.JoVA.sess.run", "time.time", "numpy.reshape", "numpy.reshape", "len", "len"], "methods", ["home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.pairwise_neg_sampling", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.run"], ["", "def", "train_model", "(", "self", ",", "itr", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "random_row_idx", "=", "np", ".", "random", ".", "permutation", "(", "self", ".", "num_users", ")", "# randomly permute the rows", "\n", "random_col_idx", "=", "np", ".", "random", ".", "permutation", "(", "self", ".", "num_items", ")", "# randomly permute the cols", "\n", "batch_cost", "=", "0", "\n", "ts", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "num_batch_U", ")", ":", "# iterate each batch", "\n", "            ", "if", "i", "==", "self", ".", "num_batch_U", "-", "1", ":", "\n", "                ", "row_idx", "=", "random_row_idx", "[", "i", "*", "self", ".", "batch_size", ":", "]", "\n", "", "else", ":", "\n", "                ", "row_idx", "=", "random_row_idx", "[", "(", "i", "*", "self", ".", "batch_size", ")", ":", "(", "(", "i", "+", "1", ")", "*", "self", ".", "batch_size", ")", "]", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_batch_I", ")", ":", "\n", "# get the indices of the current batch", "\n", "                ", "if", "j", "==", "self", ".", "num_batch_I", "-", "1", ":", "\n", "                    ", "col_idx", "=", "random_col_idx", "[", "j", "*", "self", ".", "batch_size", ":", "]", "\n", "", "else", ":", "\n", "                    ", "col_idx", "=", "random_col_idx", "[", "(", "j", "*", "self", ".", "batch_size", ")", ":", "(", "(", "j", "+", "1", ")", "*", "self", ".", "batch_size", ")", "]", "\n", "\n", "p_input", ",", "n_input", "=", "evaluate", ".", "pairwise_neg_sampling", "(", "self", ".", "train_R", ",", "row_idx", ",", "col_idx", ",", "1", ")", "\n", "\n", "input_R_U", "=", "self", ".", "train_R", "[", "row_idx", ",", ":", "]", "\n", "input_R_I", "=", "self", ".", "train_R", "[", ":", ",", "col_idx", "]", "\n", "\n", "_", ",", "Cost", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "optimizer", ",", "self", ".", "cost", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "input_R_U", ":", "input_R_U", ",", "self", ".", "input_R_I", ":", "input_R_I", ",", "self", ".", "input_P_cor", ":", "p_input", ",", "\n", "self", ".", "input_N_cor", ":", "n_input", ",", "self", ".", "row_idx", ":", "np", ".", "reshape", "(", "row_idx", ",", "(", "len", "(", "row_idx", ")", ",", "1", ")", ")", ",", "\n", "self", ".", "col_idx", ":", "np", ".", "reshape", "(", "col_idx", ",", "(", "len", "(", "col_idx", ")", ",", "1", ")", ")", "}", ")", "\n", "\n", "\n", "\n", "\n", "", "", "", "print", "(", "\"Training //\"", ",", "\"Epoch %d //\"", "%", "(", "itr", ")", ",", "\" Total cost = {:.2f}\"", ".", "format", "(", "batch_cost", ")", ",", "\n", "\"Elapsed time : %d sec\"", "%", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.JoVA.JoVA.test_model": [[210, 225], ["time.time", "JoVA.JoVA.sess.run", "JoVA.JoVA.test_cost_list.append", "evaluate.test_model_all", "print", "print", "numpy.reshape", "numpy.reshape", "time.time", "range", "range"], "methods", ["home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.run", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.test_model_all"], ["", "def", "test_model", "(", "self", ",", "itr", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "Cost", ",", "Decoder", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "cost", ",", "self", ".", "Decoder", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "input_R_U", ":", "self", ".", "train_R", ",", "self", ".", "input_R_I", ":", "self", ".", "train_R", ",", "self", ".", "input_P_cor", ":", "[", "[", "0", ",", "0", "]", "]", ",", "\n", "self", ".", "input_N_cor", ":", "[", "[", "0", ",", "0", "]", "]", ",", "self", ".", "row_idx", ":", "np", ".", "reshape", "(", "range", "(", "self", ".", "num_users", ")", ",", "(", "self", ".", "num_users", ",", "1", ")", ")", ",", "\n", "self", ".", "col_idx", ":", "np", ".", "reshape", "(", "range", "(", "self", ".", "num_items", ")", ",", "(", "self", ".", "num_items", ",", "1", ")", ")", "}", ")", "\n", "\n", "self", ".", "test_cost_list", ".", "append", "(", "Cost", ")", "\n", "\n", "evaluate", ".", "test_model_all", "(", "Decoder", ",", "self", ".", "test_R", ",", "self", ".", "train_R", ")", "\n", "\n", "print", "(", "\"Testing //\"", ",", "\"Epoch %d //\"", "%", "(", "itr", ")", ",", "\" Total cost = {:.2f}\"", ".", "format", "(", "Cost", ")", ",", "\n", "\"Elapsed time : %d sec\"", "%", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "print", "(", "\"=\"", "*", "100", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.__init__": [[14, 42], ["int", "tensorflow.Variable", "tensorflow.train.exponential_decay", "math.ceil", "int", "int", "float", "float", "float"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "args", ",", "\n", "num_users", ",", "num_items", ",", "\n", "train_R", ",", "test_R", ")", ":", "\n", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "num_users", "=", "num_users", "\n", "self", ".", "num_items", "=", "num_items", "\n", "self", ".", "train_R", "=", "train_R", "\n", "self", ".", "test_R", "=", "test_R", "\n", "self", ".", "train_epoch", "=", "args", ".", "train_epoch", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "self", ".", "num_batch", "=", "int", "(", "math", ".", "ceil", "(", "self", ".", "num_users", "/", "float", "(", "self", ".", "batch_size", ")", ")", ")", "\n", "self", ".", "num_batch_U", "=", "int", "(", "self", ".", "num_users", "/", "float", "(", "self", ".", "batch_size", ")", ")", "+", "1", "\n", "self", ".", "num_batch_I", "=", "int", "(", "self", ".", "num_items", "/", "float", "(", "self", ".", "batch_size", ")", ")", "+", "1", "\n", "\n", "self", ".", "base_lr", "=", "args", ".", "base_lr", "\n", "self", ".", "using_hinge", "=", "args", ".", "using_hinge", "\n", "\n", "self", ".", "global_step", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "decay_epoch_step", "=", "args", ".", "decay_epoch_step", "\n", "self", ".", "decay_step", "=", "self", ".", "decay_epoch_step", "*", "self", ".", "num_batch", "\n", "self", ".", "lr", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "base_lr", ",", "self", ".", "global_step", ",", "\n", "self", ".", "decay_step", ",", "0.96", ",", "staircase", "=", "True", ")", "\n", "self", ".", "beta_value", "=", "args", ".", "beta_value", "\n", "self", ".", "train_cost_list", "=", "[", "]", "\n", "self", ".", "test_cost_list", "=", "[", "]", "\n", "self", ".", "test_rmse_list", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.sampling": [[43, 52], ["keras.backend.random_normal", "keras.backend.shape", "keras.backend.int_shape", "keras.backend.exp"], "methods", ["None"], ["", "def", "sampling", "(", "self", ",", "args", ")", ":", "\n", "\n", "\n", "        ", "z_mean", ",", "z_log_var", "=", "args", "\n", "batch", "=", "K", ".", "shape", "(", "z_mean", ")", "[", "0", "]", "\n", "dim", "=", "K", ".", "int_shape", "(", "z_mean", ")", "[", "1", "]", "\n", "# by default, random_normal has mean = 0 and std = 1.0", "\n", "epsilon", "=", "K", ".", "random_normal", "(", "shape", "=", "(", "batch", ",", "dim", ")", ")", "\n", "return", "z_mean", "+", "K", ".", "exp", "(", "0.5", "*", "z_log_var", ")", "*", "epsilon", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.run": [[53, 60], ["JoVA.JoVA.prepare_model", "tensorflow.global_variables_initializer", "JoVA.JoVA.sess.run", "range", "JoVA.JoVA.train_model", "JoVA.JoVA.test_model"], "methods", ["home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.prepare_model", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.run", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.train_model", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.test_model"], ["", "def", "run", "(", "self", ")", ":", "\n", "        ", "self", ".", "prepare_model", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "sess", ".", "run", "(", "init", ")", "\n", "for", "epoch_itr", "in", "range", "(", "self", ".", "train_epoch", ")", ":", "\n", "            ", "self", ".", "train_model", "(", "epoch_itr", ")", "\n", "self", ".", "test_model", "(", "epoch_itr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.prepare_model": [[62, 172], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "keras.models.Model", "keras.layers.Input", "keras.models.Model", "keras.models.Model.", "keras.losses.binary_crossentropy", "keras.backend.sum", "keras.backend.mean", "keras.layers.Input", "keras.models.Model", "keras.layers.Input", "keras.models.Model", "keras.models.Model.", "tensorflow.gather_nd", "tensorflow.gather_nd", "tensorflow.maximum", "tensorflow.reduce_sum", "keras.losses.binary_crossentropy", "keras.backend.sum", "keras.backend.mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "keras.layers.Dense", "keras.layers.Input", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Lambda", "keras.layers.Input", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Input", "keras.backend.exp", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Lambda", "keras.layers.Dense", "keras.layers.Dense", "tensorflow.zeros", "keras.layers.Input", "keras.backend.exp", "keras.models.Model.", "keras.backend.square", "tensorflow.transpose", "keras.models.Model.", "tensorflow.transpose", "tensorflow.gather_nd", "keras.backend.square", "keras.layers.Input", "tensorflow.gather_nd", "tensorflow.transpose", "tensorflow.shape", "tensorflow.transpose"], "methods", ["None"], ["", "", "def", "prepare_model", "(", "self", ")", ":", "\n", "\n", "        ", "self", ".", "input_R_U", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "self", ".", "num_items", "]", ",", "name", "=", "\"input_R_U\"", ")", "\n", "self", ".", "input_R_I", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "[", "self", ".", "num_users", ",", "None", "]", ",", "name", "=", "\"input_R_I\"", ")", "\n", "\n", "\n", "self", ".", "input_P_cor", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "2", "]", ",", "name", "=", "\"input_P_cor\"", ")", "\n", "self", ".", "input_N_cor", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "2", "]", ",", "name", "=", "\"input_N_cor\"", ")", "\n", "self", ".", "row_idx", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "1", "]", ",", "name", "=", "\"row_idx\"", ")", "\n", "self", ".", "col_idx", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "1", "]", ",", "name", "=", "\"col_idx\"", ")", "\n", "\n", "intermediate_dim", "=", "320", "\n", "latent_dim", "=", "80", "\n", "\n", "#encoder", "\n", "x1_user", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'tanh'", ")", "(", "Input", "(", "tensor", "=", "self", ".", "input_R_U", ")", ")", "\n", "\n", "x_user", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'sigmoid'", ")", "(", "x1_user", ")", "\n", "z_mean", "=", "Dense", "(", "latent_dim", ",", "name", "=", "'z_mean'", ")", "(", "x_user", ")", "\n", "z_log_var", "=", "Dense", "(", "latent_dim", ",", "name", "=", "'z_log_var'", ")", "(", "x_user", ")", "\n", "\n", "# use reparameterization trick to push the sampling out as input", "\n", "\n", "z", "=", "Lambda", "(", "self", ".", "sampling", ",", "output_shape", "=", "(", "latent_dim", ",", ")", ",", "name", "=", "'z'", ")", "(", "[", "z_mean", ",", "z_log_var", "]", ")", "\n", "\n", "# instantiate encoder_user model", "\n", "encoder_user", "=", "Model", "(", "Input", "(", "tensor", "=", "self", ".", "input_R_U", ")", ",", "[", "z_mean", ",", "z_log_var", ",", "z", "]", ",", "name", "=", "'encoder_user'", ")", "\n", "\n", "# build decoder model", "\n", "latent_inputs", "=", "Input", "(", "shape", "=", "(", "latent_dim", ",", ")", ",", "name", "=", "'z_sampling'", ")", "\n", "x_user_decoder", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'tanh'", ")", "(", "latent_inputs", ")", "\n", "\n", "outputs_user", "=", "Dense", "(", "self", ".", "num_items", ",", "activation", "=", "'sigmoid'", ")", "(", "x_user_decoder", ")", "\n", "\n", "# instantiate decoder model", "\n", "decoder_user", "=", "Model", "(", "latent_inputs", ",", "outputs_user", ",", "name", "=", "'decoder_user'", ")", "\n", "# instantiate VAE model", "\n", "outputs_user", "=", "decoder_user", "(", "encoder_user", "(", "Input", "(", "tensor", "=", "self", ".", "input_R_U", ")", ")", "[", "2", "]", ")", "\n", "\n", "self", ".", "U_Decoder", "=", "outputs_user", "\n", "\n", "reconstruction_loss_u", "=", "binary_crossentropy", "(", "Input", "(", "tensor", "=", "self", ".", "input_R_U", ")", ",", "\n", "outputs_user", ")", "\n", "\n", "reconstruction_loss_u", "*=", "self", ".", "num_items", "\n", "kl_loss_u", "=", "1", "+", "z_log_var", "-", "K", ".", "square", "(", "z_mean", ")", "-", "K", ".", "exp", "(", "z_log_var", ")", "\n", "kl_loss_u", "=", "K", ".", "sum", "(", "kl_loss_u", ",", "axis", "=", "-", "1", ")", "\n", "kl_loss_u", "*=", "-", "0.01", "\n", "vae_loss_u", "=", "K", ".", "mean", "(", "reconstruction_loss_u", "+", "kl_loss_u", ")", "\n", "#######################################################", "\n", "inp_tmp", "=", "Input", "(", "tensor", "=", "tf", ".", "transpose", "(", "self", ".", "input_R_I", ")", ")", "\n", "\n", "intermediate_dim", "=", "320", "\n", "latent_dim", "=", "80", "\n", "\n", "x1Item", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'tanh'", ")", "(", "inp_tmp", ")", "\n", "\n", "xItem", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'sigmoid'", ")", "(", "x1Item", ")", "\n", "z_meanItem", "=", "Dense", "(", "latent_dim", ",", "name", "=", "'z_mean'", ")", "(", "xItem", ")", "\n", "z_log_varItem", "=", "Dense", "(", "latent_dim", ",", "name", "=", "'z_log_var'", ")", "(", "xItem", ")", "\n", "\n", "\n", "# use reparameterization trick to push the sampling out as input", "\n", "\n", "zItem", "=", "Lambda", "(", "self", ".", "sampling", ",", "output_shape", "=", "(", "latent_dim", ",", ")", ",", "name", "=", "'z'", ")", "(", "[", "z_meanItem", ",", "z_log_varItem", "]", ")", "\n", "\n", "# instantiate encoder_user model", "\n", "encoderItem", "=", "Model", "(", "inp_tmp", ",", "[", "z_meanItem", ",", "z_log_varItem", ",", "zItem", "]", ",", "name", "=", "'encoder_user'", ")", "\n", "\n", "# build decoder model", "\n", "latent_inputsItem", "=", "Input", "(", "shape", "=", "(", "latent_dim", ",", ")", ",", "name", "=", "'z_sampling'", ")", "\n", "xItem", "=", "Dense", "(", "intermediate_dim", ",", "activation", "=", "'tanh'", ")", "(", "latent_inputsItem", ")", "\n", "\n", "outputs_item", "=", "Dense", "(", "self", ".", "num_users", ",", "activation", "=", "'sigmoid'", ")", "(", "xItem", ")", "\n", "\n", "# instantiate decoder model", "\n", "decoderItem", "=", "Model", "(", "latent_inputsItem", ",", "outputs_item", ",", "name", "=", "'decoder'", ")", "\n", "\n", "# instantiate VAE model", "\n", "outputs_item", "=", "decoderItem", "(", "encoderItem", "(", "inp_tmp", ")", "[", "2", "]", ")", "\n", "\n", "self", ".", "I_Decoder", "=", "outputs_item", "\n", "\n", "self", ".", "Decoder", "=", "(", "(", "tf", ".", "transpose", "(", "tf", ".", "gather_nd", "(", "tf", ".", "transpose", "(", "self", ".", "U_Decoder", ")", ",", "self", ".", "col_idx", ")", ")", ")", "\n", "+", "tf", ".", "gather_nd", "(", "tf", ".", "transpose", "(", "self", ".", "I_Decoder", ")", ",", "self", ".", "row_idx", ")", ")", "/", "2.0", "\n", "\n", "\n", "\n", "pos_data", "=", "tf", ".", "gather_nd", "(", "self", ".", "Decoder", ",", "self", ".", "input_P_cor", ")", "\n", "neg_data", "=", "tf", ".", "gather_nd", "(", "self", ".", "Decoder", ",", "self", ".", "input_N_cor", ")", "\n", "\n", "pre_cost1", "=", "tf", ".", "maximum", "(", "neg_data", "-", "pos_data", "+", "0.15", ",", "\n", "tf", ".", "zeros", "(", "tf", ".", "shape", "(", "neg_data", ")", "[", "0", "]", ")", ")", "\n", "cost_hinge", "=", "tf", ".", "reduce_sum", "(", "pre_cost1", ")", "# prediction squared error", "\n", "reconstruction_loss", "=", "binary_crossentropy", "(", "Input", "(", "tensor", "=", "inp_tmp", ")", ",", "\n", "outputs_item", ")", "\n", "\n", "reconstruction_loss", "*=", "self", ".", "num_users", "\n", "kl_loss", "=", "1", "+", "z_log_varItem", "-", "K", ".", "square", "(", "z_meanItem", ")", "-", "K", ".", "exp", "(", "z_log_varItem", ")", "\n", "kl_loss", "=", "K", ".", "sum", "(", "kl_loss", ",", "axis", "=", "-", "1", ")", "\n", "kl_loss", "*=", "-", "0.01", "\n", "vae_loss_i", "=", "K", ".", "mean", "(", "reconstruction_loss", "+", "kl_loss", ")", "\n", "\n", "if", "self", ".", "using_hinge", "==", "0", ":", "\n", "                ", "self", ".", "cost", "=", "vae_loss_i", "+", "vae_loss_u", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "cost", "=", "vae_loss_i", "+", "vae_loss_u", "+", "self", ".", "beta_value", "*", "cost_hinge", "\n", "", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr", ")", "\n", "self", ".", "optimizer", "=", "optimizer", ".", "minimize", "(", "self", ".", "cost", ",", "global_step", "=", "self", ".", "global_step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.train_model": [[175, 209], ["time.time", "numpy.random.permutation", "numpy.random.permutation", "range", "print", "range", "evaluate.pairwise_neg_sampling", "JoVA.JoVA.sess.run", "time.time", "numpy.reshape", "numpy.reshape", "len", "len"], "methods", ["home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.pairwise_neg_sampling", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.run"], ["", "def", "train_model", "(", "self", ",", "itr", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "random_row_idx", "=", "np", ".", "random", ".", "permutation", "(", "self", ".", "num_users", ")", "# randomly permute the rows", "\n", "random_col_idx", "=", "np", ".", "random", ".", "permutation", "(", "self", ".", "num_items", ")", "# randomly permute the cols", "\n", "batch_cost", "=", "0", "\n", "ts", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "num_batch_U", ")", ":", "# iterate each batch", "\n", "            ", "if", "i", "==", "self", ".", "num_batch_U", "-", "1", ":", "\n", "                ", "row_idx", "=", "random_row_idx", "[", "i", "*", "self", ".", "batch_size", ":", "]", "\n", "", "else", ":", "\n", "                ", "row_idx", "=", "random_row_idx", "[", "(", "i", "*", "self", ".", "batch_size", ")", ":", "(", "(", "i", "+", "1", ")", "*", "self", ".", "batch_size", ")", "]", "\n", "", "for", "j", "in", "range", "(", "self", ".", "num_batch_I", ")", ":", "\n", "# get the indices of the current batch", "\n", "                ", "if", "j", "==", "self", ".", "num_batch_I", "-", "1", ":", "\n", "                    ", "col_idx", "=", "random_col_idx", "[", "j", "*", "self", ".", "batch_size", ":", "]", "\n", "", "else", ":", "\n", "                    ", "col_idx", "=", "random_col_idx", "[", "(", "j", "*", "self", ".", "batch_size", ")", ":", "(", "(", "j", "+", "1", ")", "*", "self", ".", "batch_size", ")", "]", "\n", "\n", "p_input", ",", "n_input", "=", "evaluate", ".", "pairwise_neg_sampling", "(", "self", ".", "train_R", ",", "row_idx", ",", "col_idx", ",", "1", ")", "\n", "\n", "input_R_U", "=", "self", ".", "train_R", "[", "row_idx", ",", ":", "]", "\n", "input_R_I", "=", "self", ".", "train_R", "[", ":", ",", "col_idx", "]", "\n", "\n", "_", ",", "Cost", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "optimizer", ",", "self", ".", "cost", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "input_R_U", ":", "input_R_U", ",", "self", ".", "input_R_I", ":", "input_R_I", ",", "self", ".", "input_P_cor", ":", "p_input", ",", "\n", "self", ".", "input_N_cor", ":", "n_input", ",", "self", ".", "row_idx", ":", "np", ".", "reshape", "(", "row_idx", ",", "(", "len", "(", "row_idx", ")", ",", "1", ")", ")", ",", "\n", "self", ".", "col_idx", ":", "np", ".", "reshape", "(", "col_idx", ",", "(", "len", "(", "col_idx", ")", ",", "1", ")", ")", "}", ")", "\n", "\n", "\n", "\n", "\n", "", "", "", "print", "(", "\"Training //\"", ",", "\"Epoch %d //\"", "%", "(", "itr", ")", ",", "\" Total cost = {:.2f}\"", ".", "format", "(", "batch_cost", ")", ",", "\n", "\"Elapsed time : %d sec\"", "%", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.test_model": [[210, 225], ["time.time", "JoVA.JoVA.sess.run", "JoVA.JoVA.test_cost_list.append", "evaluate.test_model_all", "print", "print", "numpy.reshape", "numpy.reshape", "time.time", "range", "range"], "methods", ["home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.model.JoVA.JoVA.run", "home.repos.pwc.inspect_result.bahareAskari_JoVA-Hinge.None.evaluate.test_model_all"], ["", "def", "test_model", "(", "self", ",", "itr", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "Cost", ",", "Decoder", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "self", ".", "cost", ",", "self", ".", "Decoder", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "input_R_U", ":", "self", ".", "train_R", ",", "self", ".", "input_R_I", ":", "self", ".", "train_R", ",", "self", ".", "input_P_cor", ":", "[", "[", "0", ",", "0", "]", "]", ",", "\n", "self", ".", "input_N_cor", ":", "[", "[", "0", ",", "0", "]", "]", ",", "self", ".", "row_idx", ":", "np", ".", "reshape", "(", "range", "(", "self", ".", "num_users", ")", ",", "(", "self", ".", "num_users", ",", "1", ")", ")", ",", "\n", "self", ".", "col_idx", ":", "np", ".", "reshape", "(", "range", "(", "self", ".", "num_items", ")", ",", "(", "self", ".", "num_items", ",", "1", ")", ")", "}", ")", "\n", "\n", "self", ".", "test_cost_list", ".", "append", "(", "Cost", ")", "\n", "\n", "evaluate", ".", "test_model_all", "(", "Decoder", ",", "self", ".", "test_R", ",", "self", ".", "train_R", ")", "\n", "\n", "print", "(", "\"Testing //\"", ",", "\"Epoch %d //\"", "%", "(", "itr", ")", ",", "\" Total cost = {:.2f}\"", ".", "format", "(", "Cost", ")", ",", "\n", "\"Elapsed time : %d sec\"", "%", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", ")", "\n", "print", "(", "\"=\"", "*", "100", ")", "\n", "", "", ""]]}