{"home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.train_val.create_plot_window": [[21, 31], ["vis.line", "isinstance", "vis.line", "numpy.array", "numpy.array", "dict", "numpy.array", "numpy.array"], "function", ["None"], ["def", "create_plot_window", "(", "vis", ",", "xlabel", ",", "ylabel", ",", "title", ",", "win", ",", "env", ",", "trace_name", ")", ":", "\n", "  ", "if", "not", "isinstance", "(", "trace_name", ",", "list", ")", ":", "\n", "    ", "trace_name", "=", "[", "trace_name", "]", "\n", "\n", "", "vis", ".", "line", "(", "X", "=", "np", ".", "array", "(", "[", "1", "]", ")", ",", "Y", "=", "np", ".", "array", "(", "[", "np", ".", "nan", "]", ")", ",", "win", "=", "win", ",", "env", "=", "env", ",", "\n", "name", "=", "trace_name", "[", "0", "]", ",", "\n", "opts", "=", "dict", "(", "xlabel", "=", "xlabel", ",", "ylabel", "=", "ylabel", ",", "title", "=", "title", ")", ")", "\n", "for", "name", "in", "trace_name", "[", "1", ":", "]", ":", "\n", "    ", "vis", ".", "line", "(", "X", "=", "np", ".", "array", "(", "[", "1", "]", ")", ",", "Y", "=", "np", ".", "array", "(", "[", "np", ".", "nan", "]", ")", ",", "win", "=", "win", ",", "env", "=", "env", ",", "\n", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.train_val.train": [[33, 249], ["configparser.ConfigParser", "configparser.ConfigParser.read", "section.getint", "section.getint", "section.getint", "section.getfloat", "section.getfloat", "section.getfloat", "section.getint", "section.getboolean", "section.getint", "section.getint", "section.getfloat", "section.getfloat", "section.getfloat", "section.getint", "section.getfloat", "dict", "osp.join", "dict", "osp.join", "logging.basicConfig", "logging.getLogger", "logging.getLogger.info", "models.pointnet.DiversePointNet.to", "models.losses.DiverseLoss", "models.losses.DiverseLoss.to", "torch.optim.SGD", "torch.optim.lr_scheduler.StepLR", "torch.utils.data.DataLoader", "ignite.engine.Engine", "ignite.handlers.ModelCheckpoint", "ignite.engine.Engine.add_event_handler", "visdom.Visdom", "train_val.create_plot_window", "ignite.engine.Engine.on", "ignite.engine.Engine.add_event_handler", "ignite.engine.Engine.run", "str", "[].split", "models.voxnet.DiverseVoxNet", "config[].getint", "config[].getfloat", "voxel_dataset.VoxelDataset", "voxel_dataset.VoxelDataset", "osp.isdir", "os.mkdir", "open", "torch.load", "models.pointnet.DiversePointNet.load_state_dict", "logging.getLogger.info", "models.losses.DiverseLoss", "models.losses.DiverseLoss.to", "models.pointnet.DiversePointNet.parameters", "torch.utils.data.DataLoader", "geom.to.to", "tex_targs.to.to", "models.pointnet.DiversePointNet.train", "toptim.SGD.zero_grad", "models.pointnet.DiversePointNet", "models.losses.DiverseLoss.", "loss.backward", "toptim.SGD.step", "loss.item", "loss.item", "ignite.engine.Engine", "ignite.handlers.ModelCheckpoint", "ignite.engine.Engine.add_event_handler", "ignite.engine.Engine.on", "ignite.engine.Engine.on", "ignite.engine.Engine.on", "ignite.engine.Engine.on", "ignite.engine.Engine.add_event_handler", "devices.split", "models.pointnet.DiversePointNet", "section.getint", "config[].getfloat", "config[].getfloat", "pointcloud_dataset.PointCloudDataset", "pointcloud_dataset.PointCloudDataset", "logging.getLogger.info", "osp.expanduser", "geom.to.to", "tex_targs.to.to", "models.losses.DiverseLoss.", "loss.item", "loss.item", "len", "logging.getLogger.info", "visdom.Visdom.line", "visdom.Visdom.line", "visdom.Visdom.save", "ignite.engine.Engine.run", "toptim.lr_scheduler.StepLR.step", "logging.FileHandler", "logging.StreamHandler", "line.strip", "torch.load.items", "models.pointnet.DiversePointNet.eval", "torch.no_grad", "models.pointnet.DiversePointNet", "len", "logging.getLogger.info", "config_file.split", "len", "float", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "toptim.lr_scheduler.StepLR.get_lr", "len", "len"], "function", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.train_val.create_plot_window", "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.train_val.train", "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.eval.eval"], ["", "", "def", "train", "(", "data_dir", ",", "instruction", ",", "config_file", ",", "experiment_suffix", "=", "None", ",", "\n", "checkpoint_dir", "=", "'.'", ",", "device_id", "=", "0", ",", "weights_filename", "=", "None", ",", "\n", "include_sessions", "=", "None", ",", "exclude_sessions", "=", "None", ")", ":", "\n", "# config", "\n", "  ", "config", "=", "configparser", ".", "ConfigParser", "(", ")", "\n", "config", ".", "read", "(", "config_file", ")", "\n", "\n", "section", "=", "config", "[", "'optim'", "]", "\n", "batch_size", "=", "section", ".", "getint", "(", "'batch_size'", ")", "\n", "max_epochs", "=", "section", ".", "getint", "(", "'max_epochs'", ")", "\n", "val_interval", "=", "section", ".", "getint", "(", "'val_interval'", ")", "\n", "do_val", "=", "val_interval", ">", "0", "\n", "base_lr", "=", "section", ".", "getfloat", "(", "'base_lr'", ")", "\n", "momentum", "=", "section", ".", "getfloat", "(", "'momentum'", ")", "\n", "weight_decay", "=", "section", ".", "getfloat", "(", "'weight_decay'", ")", "\n", "\n", "section", "=", "config", "[", "'misc'", "]", "\n", "log_interval", "=", "section", ".", "getint", "(", "'log_interval'", ")", "\n", "shuffle", "=", "section", ".", "getboolean", "(", "'shuffle'", ")", "\n", "num_workers", "=", "section", ".", "getint", "(", "'num_workers'", ")", "\n", "\n", "section", "=", "config", "[", "'hyperparams'", "]", "\n", "n_ensemble", "=", "section", ".", "getint", "(", "'n_ensemble'", ")", "\n", "diverse_beta", "=", "section", ".", "getfloat", "(", "'diverse_beta'", ")", "\n", "pos_weight", "=", "section", ".", "getfloat", "(", "'pos_weight'", ")", "\n", "droprate", "=", "section", ".", "getfloat", "(", "'droprate'", ")", "\n", "lr_step_size", "=", "section", ".", "getint", "(", "'lr_step_size'", ",", "10000", ")", "\n", "lr_gamma", "=", "section", ".", "getfloat", "(", "'lr_gamma'", ",", "1.0", ")", "\n", "\n", "# cuda", "\n", "if", "'CUDA_VISIBLE_DEVICES'", "not", "in", "os", ".", "environ", ":", "\n", "    ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "str", "(", "device_id", ")", "\n", "", "else", ":", "\n", "    ", "devices", "=", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "\n", "devices", "=", "devices", ".", "split", "(", "','", ")", "[", "device_id", "]", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "devices", "\n", "", "device", "=", "'cuda:0'", "\n", "\n", "# create dataset and model", "\n", "model_name", "=", "config_file", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "kwargs", "=", "dict", "(", "data_dir", "=", "data_dir", ",", "instruction", "=", "instruction", ",", "\n", "include_sessions", "=", "include_sessions", ",", "exclude_sessions", "=", "exclude_sessions", ",", "\n", "n_ensemble", "=", "n_ensemble", ")", "\n", "if", "'voxnet'", "in", "model_name", ":", "\n", "    ", "model", "=", "VoxNet", "(", "n_ensemble", "=", "n_ensemble", ",", "droprate", "=", "droprate", ")", "\n", "grid_size", "=", "config", "[", "'hyperparams'", "]", ".", "getint", "(", "'grid_size'", ")", "\n", "random_rotation", "=", "config", "[", "'hyperparams'", "]", ".", "getfloat", "(", "'random_rotation'", ")", "\n", "train_dset", "=", "VoxelDataset", "(", "grid_size", "=", "grid_size", ",", "\n", "random_rotation", "=", "random_rotation", ",", "train", "=", "True", ",", "**", "kwargs", ")", "\n", "val_dset", "=", "VoxelDataset", "(", "grid_size", "=", "grid_size", ",", "random_rotation", "=", "0", ",", "\n", "train", "=", "False", ",", "**", "kwargs", ")", "\n", "", "elif", "'pointnet'", "in", "model_name", ":", "\n", "    ", "model", "=", "PointNet", "(", "n_ensemble", "=", "n_ensemble", ",", "droprate", "=", "droprate", ")", "\n", "n_points", "=", "section", ".", "getint", "(", "'n_points'", ")", "\n", "random_rotation", "=", "config", "[", "'hyperparams'", "]", ".", "getfloat", "(", "'random_rotation'", ")", "\n", "random_scale", "=", "config", "[", "'hyperparams'", "]", ".", "getfloat", "(", "'random_scale'", ")", "\n", "train_dset", "=", "PointCloudDataset", "(", "n_points", "=", "n_points", ",", "train", "=", "True", ",", "\n", "random_rotation", "=", "random_rotation", ",", "random_scale", "=", "random_scale", ",", "**", "kwargs", ")", "\n", "val_dset", "=", "PointCloudDataset", "(", "n_points", "=", "n_points", ",", "train", "=", "False", ",", "\n", "random_rotation", "=", "0", ",", "random_scale", "=", "0", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "    ", "raise", "NotImplementedError", "\n", "\n", "# checkpointing", "\n", "", "exp_name", "=", "'{:s}_{:s}_diversenet'", ".", "format", "(", "instruction", ",", "model_name", ")", "\n", "if", "experiment_suffix", ":", "\n", "    ", "exp_name", "+=", "'_{:s}'", ".", "format", "(", "experiment_suffix", ")", "\n", "\n", "", "def", "checkpoint_fn", "(", "engine", ":", "Engine", ")", ":", "\n", "    ", "return", "-", "engine", ".", "state", ".", "avg_loss", "\n", "\n", "", "checkpoint_dir", "=", "osp", ".", "join", "(", "checkpoint_dir", ",", "exp_name", ")", "\n", "checkpoint_kwargs", "=", "dict", "(", "dirname", "=", "checkpoint_dir", ",", "filename_prefix", "=", "'checkpoint'", ",", "\n", "score_function", "=", "checkpoint_fn", ",", "create_dir", "=", "True", ",", "require_empty", "=", "False", ",", "\n", "save_as_state_dict", "=", "False", ")", "\n", "checkpoint_dict", "=", "{", "'model'", ":", "model", "}", "\n", "\n", "# logging", "\n", "if", "not", "osp", ".", "isdir", "(", "checkpoint_dir", ")", ":", "\n", "    ", "os", ".", "mkdir", "(", "checkpoint_dir", ")", "\n", "", "log_filename", "=", "osp", ".", "join", "(", "checkpoint_dir", ",", "'training_log.txt'", ")", "\n", "logging", ".", "basicConfig", "(", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "logging", ".", "FileHandler", "(", "log_filename", ",", "mode", "=", "'w'", ")", ",", "logging", ".", "StreamHandler", "(", ")", "]", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "logger", ".", "info", "(", "'Config from {:s}:'", ".", "format", "(", "config_file", ")", ")", "\n", "with", "open", "(", "config_file", ",", "'r'", ")", "as", "f", ":", "\n", "    ", "for", "line", "in", "f", ":", "\n", "      ", "logger", ".", "info", "(", "line", ".", "strip", "(", ")", ")", "\n", "\n", "# load weights", "\n", "", "", "if", "weights_filename", "is", "not", "None", ":", "\n", "    ", "checkpoint", "=", "torch", ".", "load", "(", "osp", ".", "expanduser", "(", "weights_filename", ")", ")", "\n", "checkpoint", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "checkpoint", ".", "items", "(", ")", "if", "'conv4'", "not", "in", "k", "}", "\n", "model", ".", "load_state_dict", "(", "checkpoint", ",", "strict", "=", "False", ")", "\n", "logger", ".", "info", "(", "'Loaded weights from {:s}'", ".", "format", "(", "weights_filename", ")", ")", "\n", "", "model", ".", "to", "(", "device", "=", "device", ")", "\n", "\n", "# loss function", "\n", "loss_fn", "=", "DiverseLoss", "(", "beta", "=", "diverse_beta", ",", "pos_weight", "=", "pos_weight", ")", "\n", "loss_fn", ".", "to", "(", "device", "=", "device", ")", "\n", "if", "do_val", ":", "\n", "    ", "val_loss_fn", "=", "DiverseLoss", "(", "beta", "=", "diverse_beta", ",", "train", "=", "False", ",", "\n", "pos_weight", "=", "pos_weight", ")", "\n", "val_loss_fn", ".", "to", "(", "device", "=", "device", ")", "\n", "\n", "# optimizer", "\n", "", "optim", "=", "toptim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "base_lr", ",", "weight_decay", "=", "weight_decay", ",", "\n", "momentum", "=", "momentum", ")", "\n", "lr_scheduler", "=", "toptim", ".", "lr_scheduler", ".", "StepLR", "(", "optim", ",", "step_size", "=", "lr_step_size", ",", "\n", "gamma", "=", "lr_gamma", ")", "\n", "\n", "# dataloader", "\n", "train_dloader", "=", "DataLoader", "(", "train_dset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "\n", "pin_memory", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "if", "do_val", ":", "\n", "    ", "val_dloader", "=", "DataLoader", "(", "val_dset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "\n", "pin_memory", "=", "True", ",", "num_workers", "=", "num_workers", ")", "\n", "\n", "# train and val loops", "\n", "", "def", "train_loop", "(", "engine", ":", "Engine", ",", "batch", ")", ":", "\n", "    ", "geom", ",", "tex_targs", "=", "batch", "\n", "geom", "=", "geom", ".", "to", "(", "device", "=", "device", ",", "non_blocking", "=", "True", ")", "# Nx3xP", "\n", "tex_targs", "=", "tex_targs", ".", "to", "(", "device", "=", "device", ",", "non_blocking", "=", "True", ")", "# NxExP", "\n", "model", ".", "train", "(", ")", "\n", "optim", ".", "zero_grad", "(", ")", "\n", "tex_preds", "=", "model", "(", "geom", ")", "# NxExP", "\n", "loss", ",", "_", "=", "loss_fn", "(", "tex_preds", ",", "tex_targs", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optim", ".", "step", "(", ")", "\n", "engine", ".", "state", ".", "train_loss", "=", "loss", ".", "item", "(", ")", "\n", "return", "loss", ".", "item", "(", ")", "\n", "", "trainer", "=", "Engine", "(", "train_loop", ")", "\n", "train_checkpoint_handler", "=", "ModelCheckpoint", "(", "score_name", "=", "'train_loss'", ",", "\n", "**", "checkpoint_kwargs", ")", "\n", "trainer", ".", "add_event_handler", "(", "Events", ".", "EPOCH_COMPLETED", ",", "train_checkpoint_handler", ",", "\n", "checkpoint_dict", ")", "\n", "\n", "if", "do_val", ":", "\n", "    ", "def", "val_loop", "(", "engine", ":", "Engine", ",", "batch", ")", ":", "\n", "      ", "geom", ",", "tex_targs", "=", "batch", "\n", "geom", "=", "geom", ".", "to", "(", "device", "=", "device", ",", "non_blocking", "=", "True", ")", "\n", "tex_targs", "=", "tex_targs", ".", "to", "(", "device", "=", "device", ",", "non_blocking", "=", "True", ")", "\n", "if", "'pointnet'", "not", "in", "model_name", ":", "\n", "# loss explodes for pointnet if model is in eval mode", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "tex_preds", "=", "model", "(", "geom", ")", "\n", "", "loss", ",", "_", "=", "val_loss_fn", "(", "tex_preds", ",", "tex_targs", ")", "\n", "engine", ".", "state", ".", "val_loss", "=", "loss", ".", "item", "(", ")", "\n", "return", "loss", ".", "item", "(", ")", "\n", "", "valer", "=", "Engine", "(", "val_loop", ")", "\n", "val_checkpoint_handler", "=", "ModelCheckpoint", "(", "score_name", "=", "'val_loss'", ",", "\n", "**", "checkpoint_kwargs", ")", "\n", "valer", ".", "add_event_handler", "(", "Events", ".", "EPOCH_COMPLETED", ",", "val_checkpoint_handler", ",", "\n", "checkpoint_dict", ")", "\n", "\n", "# callbacks", "\n", "", "vis", "=", "visdom", ".", "Visdom", "(", ")", "\n", "loss_win", "=", "'loss'", "\n", "create_plot_window", "(", "vis", ",", "'#Epochs'", ",", "'Loss'", ",", "'Training and Validation Loss'", ",", "\n", "win", "=", "loss_win", ",", "env", "=", "exp_name", ",", "trace_name", "=", "[", "'train_loss'", ",", "'val_loss'", "]", ")", "\n", "\n", "@", "trainer", ".", "on", "(", "Events", ".", "ITERATION_COMPLETED", ")", "\n", "def", "log_training_loss", "(", "engine", ")", ":", "\n", "    ", "it", "=", "(", "engine", ".", "state", ".", "iteration", "-", "1", ")", "%", "len", "(", "train_dloader", ")", "\n", "engine", ".", "state", ".", "avg_loss", "=", "(", "engine", ".", "state", ".", "avg_loss", "*", "it", "+", "engine", ".", "state", ".", "output", ")", "/", "(", "it", "+", "1", ")", "\n", "\n", "if", "it", "%", "log_interval", "==", "0", ":", "\n", "      ", "logger", ".", "info", "(", "\"{:s} train Epoch[{:03d}/{:03d}] Iteration[{:04d}/{:04d}] \"", "\n", "\"Loss: {:02.4f} lr: {:.4f}\"", ".", "\n", "format", "(", "exp_name", ",", "engine", ".", "state", ".", "epoch", ",", "max_epochs", ",", "it", "+", "1", ",", "len", "(", "train_dloader", ")", ",", "\n", "engine", ".", "state", ".", "output", ",", "lr_scheduler", ".", "get_lr", "(", ")", "[", "0", "]", ")", ")", "\n", "epoch", "=", "engine", ".", "state", ".", "epoch", "-", "1", "+", "float", "(", "it", ")", "/", "(", "len", "(", "train_dloader", ")", "-", "1", ")", "\n", "\n", "vis", ".", "line", "(", "X", "=", "np", ".", "array", "(", "[", "epoch", "]", ")", ",", "Y", "=", "np", ".", "array", "(", "[", "engine", ".", "state", ".", "output", "]", ")", ",", "\n", "update", "=", "'append'", ",", "win", "=", "loss_win", ",", "env", "=", "exp_name", ",", "name", "=", "'train_loss'", ")", "\n", "\n", "", "", "if", "do_val", ":", "\n", "    ", "@", "valer", ".", "on", "(", "Events", ".", "ITERATION_COMPLETED", ")", "\n", "def", "avg_loss_callback", "(", "engine", ":", "Engine", ")", ":", "\n", "      ", "it", "=", "(", "engine", ".", "state", ".", "iteration", "-", "1", ")", "%", "len", "(", "train_dloader", ")", "\n", "engine", ".", "state", ".", "avg_loss", "=", "(", "engine", ".", "state", ".", "avg_loss", "*", "it", "+", "engine", ".", "state", ".", "output", ")", "/", "(", "it", "+", "1", ")", "\n", "if", "it", "%", "log_interval", "==", "0", ":", "\n", "        ", "logger", ".", "info", "(", "\"{:s} val Iteration[{:04d}/{:04d}] Loss: {:02.4f}\"", "\n", ".", "format", "(", "exp_name", ",", "it", "+", "1", ",", "len", "(", "val_dloader", ")", ",", "engine", ".", "state", ".", "output", ")", ")", "\n", "\n", "", "", "@", "valer", ".", "on", "(", "Events", ".", "EPOCH_COMPLETED", ")", "\n", "def", "log_val_loss", "(", "engine", ":", "Engine", ")", ":", "\n", "      ", "vis", ".", "line", "(", "X", "=", "np", ".", "array", "(", "[", "trainer", ".", "state", ".", "epoch", "]", ")", ",", "\n", "Y", "=", "np", ".", "array", "(", "[", "engine", ".", "state", ".", "avg_loss", "]", ")", ",", "update", "=", "'append'", ",", "win", "=", "loss_win", ",", "\n", "env", "=", "exp_name", ",", "name", "=", "'val_loss'", ")", "\n", "\n", "", "@", "trainer", ".", "on", "(", "Events", ".", "EPOCH_COMPLETED", ")", "\n", "def", "run_val", "(", "engine", ":", "Engine", ")", ":", "\n", "      ", "vis", ".", "save", "(", "[", "exp_name", "]", ")", "\n", "if", "val_interval", "<", "0", ":", "# don't do validation", "\n", "        ", "return", "\n", "", "if", "engine", ".", "state", ".", "epoch", "%", "val_interval", "!=", "0", ":", "\n", "        ", "return", "\n", "", "valer", ".", "run", "(", "val_dloader", ")", "\n", "\n", "", "@", "trainer", ".", "on", "(", "Events", ".", "EPOCH_STARTED", ")", "\n", "def", "step_lr_scheduler", "(", "engine", ":", "Engine", ")", ":", "\n", "      ", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "", "", "def", "reset_avg_loss", "(", "engine", ":", "Engine", ")", ":", "\n", "    ", "engine", ".", "state", ".", "avg_loss", "=", "0", "\n", "", "trainer", ".", "add_event_handler", "(", "Events", ".", "EPOCH_STARTED", ",", "reset_avg_loss", ")", "\n", "if", "do_val", ":", "\n", "    ", "valer", ".", "add_event_handler", "(", "Events", ".", "EPOCH_STARTED", ",", "reset_avg_loss", ")", "\n", "\n", "# Ignite the torch!", "\n", "", "trainer", ".", "run", "(", "train_dloader", ",", "max_epochs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.voxel_dataset.VoxelDataset.__init__": [[12, 55], ["torch.Dataset.__init__", "osp.expanduser", "collections.OrderedDict", "next", "osp.join", "os.walk", "osp.join.split", "voxel_dataset.VoxelDataset.filenames[].append", "[].split", "osp.join.split"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["  ", "def", "__init__", "(", "self", ",", "data_dir", ",", "instruction", ",", "train", ",", "\n", "grid_size", "=", "64", ",", "include_sessions", "=", "None", ",", "exclude_sessions", "=", "None", ",", "\n", "random_rotation", "=", "180", ",", "n_ensemble", "=", "20", ",", "color_thresh", "=", "0.4", ",", "test_only", "=", "False", ")", ":", "\n", "    ", "super", "(", "VoxelDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "data_dir", "=", "osp", ".", "expanduser", "(", "data_dir", ")", "\n", "self", ".", "grid_size", "=", "grid_size", "\n", "self", ".", "random_rotation", "=", "random_rotation", "\n", "self", ".", "n_ensemble", "=", "n_ensemble", "\n", "self", ".", "color_thresh", "=", "color_thresh", "\n", "\n", "# list the voxel grids", "\n", "self", ".", "filenames", "=", "OrderedDict", "(", ")", "\n", "for", "filename", "in", "next", "(", "os", ".", "walk", "(", "data_dir", ")", ")", "[", "-", "1", "]", ":", "\n", "      ", "if", "'_solid.npy'", "not", "in", "filename", ":", "\n", "        ", "continue", "\n", "", "if", "test_only", ":", "\n", "        ", "if", "'testonly'", "not", "in", "filename", ":", "\n", "          ", "continue", "\n", "", "", "else", ":", "\n", "        ", "if", "'_{:s}_'", ".", "format", "(", "instruction", ")", "not", "in", "filename", ":", "\n", "          ", "continue", "\n", "", "", "session_name", "=", "filename", ".", "split", "(", "'_'", ")", "[", "0", "]", "\n", "if", "include_sessions", "is", "not", "None", ":", "\n", "        ", "if", "session_name", "not", "in", "include_sessions", ":", "\n", "          ", "continue", "\n", "", "", "if", "exclude_sessions", "is", "not", "None", ":", "\n", "        ", "if", "session_name", "in", "exclude_sessions", ":", "\n", "          ", "continue", "\n", "", "", "offset", "=", "1", "if", "test_only", "else", "2", "\n", "object_name", "=", "'_'", ".", "join", "(", "filename", ".", "split", "(", "'.'", ")", "[", "0", "]", ".", "split", "(", "'_'", ")", "[", "offset", ":", "-", "1", "]", ")", "\n", "if", "not", "test_only", ":", "\n", "        ", "if", "train", ":", "\n", "          ", "if", "object_name", "in", "utils", ".", "test_objects", ":", "\n", "            ", "continue", "\n", "", "", "else", ":", "\n", "          ", "if", "object_name", "not", "in", "utils", ".", "test_objects", ":", "\n", "            ", "continue", "\n", "", "", "", "filename", "=", "osp", ".", "join", "(", "data_dir", ",", "filename", ")", "\n", "if", "object_name", "not", "in", "self", ".", "filenames", ":", "\n", "        ", "self", ".", "filenames", "[", "object_name", "]", "=", "[", "filename", "]", "\n", "", "else", ":", "\n", "        ", "self", ".", "filenames", "[", "object_name", "]", ".", "append", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.voxel_dataset.VoxelDataset.__len__": [[56, 58], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.voxel_dataset.VoxelDataset.__getitem__": [[59, 115], ["numpy.load", "numpy.vstack", "numpy.vstack", "numpy.zeros", "len", "numpy.arange", "numpy.stack", "list", "x.astype", "y.astype", "z.astype", "max", "abs", "numpy.random.uniform", "transforms3d.euler2mat", "max", "numpy.random.choice", "numpy.load", "utils.discretize_texture", "numpy.stack.append", "numpy.zeros.astype", "numpy.stack.astype", "voxel_dataset.VoxelDataset.filenames.keys", "numpy.vstack.max", "numpy.vstack.min", "numpy.ones", "numpy.vstack", "numpy.ones", "numpy.vstack.max", "numpy.vstack.min", "numpy.ones", "x.max", "y.max", "z.max", "p.max", "p.min", "p.max", "p.min"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.utils.discretize_texture"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# load geometry", "\n", "    ", "object_name", "=", "list", "(", "self", ".", "filenames", ".", "keys", "(", ")", ")", "[", "index", "]", "\n", "x", ",", "y", ",", "z", ",", "c", ",", "xx", ",", "yy", ",", "zz", "=", "np", ".", "load", "(", "self", ".", "filenames", "[", "object_name", "]", "[", "0", "]", ")", "\n", "x", ",", "y", ",", "z", "=", "x", ".", "astype", "(", "int", ")", ",", "y", ".", "astype", "(", "int", ")", ",", "z", ".", "astype", "(", "int", ")", "\n", "pts", "=", "np", ".", "vstack", "(", "(", "xx", ",", "yy", ",", "zz", ")", ")", "\n", "offset", "=", "(", "pts", ".", "max", "(", "1", ",", "keepdims", "=", "True", ")", "+", "pts", ".", "min", "(", "1", ",", "keepdims", "=", "True", ")", ")", "/", "2", "\n", "pts", "-=", "offset", "\n", "scale", "=", "max", "(", "pts", ".", "max", "(", "1", ")", "-", "pts", ".", "min", "(", "1", ")", ")", "/", "2", "\n", "pts", "/=", "scale", "\n", "pts", "=", "np", ".", "vstack", "(", "(", "np", ".", "ones", "(", "pts", ".", "shape", "[", "1", "]", ")", ",", "pts", ",", "scale", "*", "np", ".", "ones", "(", "pts", ".", "shape", "[", "1", "]", ")", ")", ")", "\n", "\n", "# center the object", "\n", "offset_x", "=", "(", "self", ".", "grid_size", "-", "x", ".", "max", "(", ")", "-", "1", ")", "//", "2", "\n", "offset_y", "=", "(", "self", ".", "grid_size", "-", "y", ".", "max", "(", ")", "-", "1", ")", "//", "2", "\n", "offset_z", "=", "(", "self", ".", "grid_size", "-", "z", ".", "max", "(", ")", "-", "1", ")", "//", "2", "\n", "x", "+=", "offset_x", "\n", "y", "+=", "offset_y", "\n", "z", "+=", "offset_z", "\n", "\n", "# random rotation", "\n", "if", "abs", "(", "self", ".", "random_rotation", ")", ">", "0", ":", "\n", "      ", "theta", "=", "np", ".", "random", ".", "uniform", "(", "-", "np", ".", "pi", "*", "self", ".", "random_rotation", "/", "180", ",", "\n", "np", ".", "pi", "*", "self", ".", "random_rotation", "/", "180", ")", "\n", "R", "=", "txe", ".", "euler2mat", "(", "0", ",", "0", ",", "theta", ")", "\n", "p", "=", "np", ".", "vstack", "(", "(", "x", ",", "y", ",", "z", ")", ")", "+", "0.5", "\n", "p", "=", "p", "-", "self", ".", "grid_size", "/", "2.0", "\n", "p", "=", "R", "@", "p", "\n", "s", "=", "max", "(", "p", ".", "max", "(", "1", ")", "-", "p", ".", "min", "(", "1", ")", ")", "\n", "p", "=", "p", "*", "(", "self", ".", "grid_size", "-", "1", ")", "/", "s", "\n", "s", "=", "(", "p", ".", "max", "(", "1", ",", "keepdims", "=", "True", ")", "+", "p", ".", "min", "(", "1", ",", "keepdims", "=", "True", ")", ")", "/", "2.0", "\n", "p", "=", "p", "+", "self", ".", "grid_size", "/", "2.0", "-", "s", "\n", "x", ",", "y", ",", "z", "=", "(", "p", "-", "0.5", ")", ".", "astype", "(", "int", ")", "\n", "\n", "# create occupancy grid", "\n", "", "geom", "=", "np", ".", "zeros", "(", "(", "5", ",", "self", ".", "grid_size", ",", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "geom", "[", ":", ",", "z", ",", "y", ",", "x", "]", "=", "pts", "\n", "\n", "# load textures", "\n", "N", "=", "len", "(", "self", ".", "filenames", "[", "object_name", "]", ")", "\n", "choice", "=", "np", ".", "arange", "(", "N", ")", "\n", "if", "self", ".", "n_ensemble", ">", "0", "and", "self", ".", "n_ensemble", "<", "N", ":", "\n", "      ", "choice", "=", "np", ".", "random", ".", "choice", "(", "N", ",", "size", "=", "self", ".", "n_ensemble", ",", "replace", "=", "False", ")", "\n", "", "texs", "=", "[", "]", "\n", "filenames", "=", "[", "self", ".", "filenames", "[", "object_name", "]", "[", "c", "]", "for", "c", "in", "choice", "]", "\n", "for", "filename", "in", "filenames", ":", "\n", "      ", "_", ",", "_", ",", "_", ",", "c", ",", "_", ",", "_", ",", "_", "=", "np", ".", "load", "(", "filename", ")", "\n", "c", "=", "utils", ".", "discretize_texture", "(", "c", ",", "thresh", "=", "self", ".", "color_thresh", ")", "\n", "tex", "=", "2", "*", "np", ".", "ones", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "tex", "[", "z", ",", "y", ",", "x", "]", "=", "c", "\n", "texs", ".", "append", "(", "tex", ")", "\n", "", "texs", "=", "np", ".", "stack", "(", "texs", ")", "\n", "\n", "return", "geom", ".", "astype", "(", "np", ".", "float32", ")", ",", "texs", ".", "astype", "(", "np", ".", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.eval.show_pointcloud_texture": [[18, 29], ["numpy.asarray", "open3d.PointCloud", "open3d.Vector3dVector", "numpy.argmax", "open3d.Vector3dVector", "open3d.draw_geometries", "numpy.vstack"], "function", ["None"], ["def", "show_pointcloud_texture", "(", "geom", ",", "tex_preds", ")", ":", "\n", "  ", "cmap", "=", "np", ".", "asarray", "(", "[", "[", "0", ",", "0", ",", "1", "]", ",", "[", "1", ",", "0", ",", "0", "]", "]", ")", "\n", "x", ",", "y", ",", "z", ",", "scale", "=", "geom", "\n", "pts", "=", "np", ".", "vstack", "(", "(", "x", ",", "y", ",", "z", ")", ")", ".", "T", "*", "scale", "[", "0", "]", "\n", "for", "tex_pred", "in", "tex_preds", ":", "\n", "    ", "pc", "=", "open3d", ".", "PointCloud", "(", ")", "\n", "pc", ".", "points", "=", "open3d", ".", "Vector3dVector", "(", "pts", ")", "\n", "tex_pred", "=", "np", ".", "argmax", "(", "tex_pred", ",", "axis", "=", "0", ")", "\n", "tex_pred", "=", "cmap", "[", "tex_pred", "]", "\n", "pc", ".", "colors", "=", "open3d", ".", "Vector3dVector", "(", "tex_pred", ")", "\n", "open3d", ".", "draw_geometries", "(", "[", "pc", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.eval.show_voxel_texture": [[31, 43], ["numpy.asarray", "numpy.nonzero", "numpy.vstack", "numpy.argmax", "open3d.PointCloud", "open3d.Vector3dVector", "open3d.Vector3dVector", "open3d.draw_geometries"], "function", ["None"], ["", "", "def", "show_voxel_texture", "(", "geom", ",", "tex_preds", ")", ":", "\n", "  ", "cmap", "=", "np", ".", "asarray", "(", "[", "[", "0", ",", "0", ",", "1", "]", ",", "[", "1", ",", "0", ",", "0", "]", "]", ")", "\n", "z", ",", "y", ",", "x", "=", "np", ".", "nonzero", "(", "geom", "[", "0", "]", ")", "\n", "pts", "=", "np", ".", "vstack", "(", "(", "x", ",", "y", ",", "z", ")", ")", ".", "T", "\n", "for", "tex_pred", "in", "tex_preds", ":", "\n", "    ", "tex_pred", "=", "np", ".", "argmax", "(", "tex_pred", ",", "axis", "=", "0", ")", "\n", "tex_pred", "=", "tex_pred", "[", "z", ",", "y", ",", "x", "]", "\n", "tex_pred", "=", "cmap", "[", "tex_pred", "]", "\n", "pc", "=", "open3d", ".", "PointCloud", "(", ")", "\n", "pc", ".", "points", "=", "open3d", ".", "Vector3dVector", "(", "pts", ")", "\n", "pc", ".", "colors", "=", "open3d", ".", "Vector3dVector", "(", "tex_pred", ")", "\n", "open3d", ".", "draw_geometries", "(", "[", "pc", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.eval.eval": [[45, 128], ["configparser.ConfigParser", "configparser.ConfigParser.read", "config[].getfloat", "torch.load", "dict", "models.pointnet.DiversePointNet.to", "models.losses.DiverseLoss", "torch.utils.data.DataLoader", "enumerate", "str", "[].split", "models.voxnet.DiverseVoxNet", "models.pointnet.DiversePointNet.voxnet.load_state_dict", "config[].getint", "voxel_dataset.VoxelDataset", "models.pointnet.DiversePointNet.eval", "geom.cpu().numpy().squeeze.to", "tex_targs.cpu().numpy().squeeze.to", "models.losses.DiverseLoss.", "print", "geom.cpu().numpy().squeeze.cpu().numpy().squeeze", "model.cpu().numpy().squeeze", "match_indices.cpu().numpy().squeeze.cpu().numpy().squeeze", "tex_targs.cpu().numpy().squeeze.cpu().numpy().squeeze", "devices.split", "torch.load.voxnet.state_dict", "models.pointnet.DiversePointNet", "models.pointnet.DiversePointNet.pointnet.load_state_dict", "config[].getint", "pointcloud_dataset.PointCloudDataset", "list", "torch.no_grad", "models.pointnet.DiversePointNet", "print", "torch.load.pointnet.state_dict", "pointcloud_dataset.PointCloudDataset.filenames.keys", "loss.item", "geom.cpu().numpy().squeeze.cpu().numpy", "model.cpu().numpy", "match_indices.cpu().numpy().squeeze.cpu().numpy", "tex_targs.cpu().numpy().squeeze.cpu().numpy", "open", "pickle.dump", "eval.show_pointcloud_texture", "osp.split", "eval.show_voxel_texture", "geom.cpu().numpy().squeeze.cpu", "model.cpu", "match_indices.cpu().numpy().squeeze.cpu", "tex_targs.cpu().numpy().squeeze.cpu"], "function", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.eval.eval", "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.eval.show_pointcloud_texture", "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.eval.show_voxel_texture"], ["", "", "def", "eval", "(", "data_dir", ",", "instruction", ",", "checkpoint_filename", ",", "config_filename", ",", "device_id", ",", "\n", "test_only", "=", "False", ",", "show_object", "=", "None", ",", "save_preds", "=", "False", ")", ":", "\n", "# config", "\n", "  ", "config", "=", "configparser", ".", "ConfigParser", "(", ")", "\n", "config", ".", "read", "(", "config_filename", ")", "\n", "droprate", "=", "config", "[", "'hyperparams'", "]", ".", "getfloat", "(", "'droprate'", ")", "\n", "\n", "# cuda", "\n", "if", "'CUDA_VISIBLE_DEVICES'", "not", "in", "os", ".", "environ", ":", "\n", "    ", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "str", "(", "device_id", ")", "\n", "", "else", ":", "\n", "    ", "devices", "=", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "\n", "devices", "=", "devices", ".", "split", "(", "','", ")", "[", "device_id", "]", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "devices", "\n", "", "device", "=", "'cuda:0'", "\n", "\n", "# load checkpoint", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_filename", ")", "\n", "\n", "# create model", "\n", "model_name", "=", "osp", ".", "split", "(", "config_filename", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "kwargs", "=", "dict", "(", "data_dir", "=", "data_dir", ",", "instruction", "=", "instruction", ",", "train", "=", "False", ",", "\n", "random_rotation", "=", "0", ",", "n_ensemble", "=", "-", "1", ",", "test_only", "=", "test_only", ")", "\n", "if", "'voxnet'", "in", "model_name", ":", "\n", "    ", "model", "=", "VoxNet", "(", "n_ensemble", "=", "checkpoint", ".", "n_ensemble", ",", "droprate", "=", "droprate", ")", "\n", "model", ".", "voxnet", ".", "load_state_dict", "(", "checkpoint", ".", "voxnet", ".", "state_dict", "(", ")", ")", "\n", "grid_size", "=", "config", "[", "'hyperparams'", "]", ".", "getint", "(", "'grid_size'", ")", "\n", "dset", "=", "VoxelDataset", "(", "grid_size", "=", "grid_size", ",", "**", "kwargs", ")", "\n", "", "elif", "'pointnet'", "in", "model_name", ":", "\n", "    ", "model", "=", "PointNet", "(", "n_ensemble", "=", "checkpoint", ".", "n_ensemble", ",", "droprate", "=", "droprate", ")", "\n", "model", ".", "pointnet", ".", "load_state_dict", "(", "checkpoint", ".", "pointnet", ".", "state_dict", "(", ")", ")", "\n", "n_points", "=", "config", "[", "'hyperparams'", "]", ".", "getint", "(", "'n_points'", ")", "\n", "dset", "=", "PointCloudDataset", "(", "n_points", "=", "n_points", ",", "random_scale", "=", "0", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "    ", "raise", "NotImplementedError", "\n", "", "if", "'pointnet'", "not", "in", "model_name", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "", "model", ".", "to", "(", "device", "=", "device", ")", "\n", "\n", "loss_fn", "=", "DiverseLoss", "(", "train", "=", "False", ",", "eval_mode", "=", "True", ")", "\n", "\n", "# eval loop!", "\n", "dloader", "=", "DataLoader", "(", "dset", ")", "\n", "for", "batch_idx", ",", "batch", "in", "enumerate", "(", "dloader", ")", ":", "\n", "    ", "object_name", "=", "list", "(", "dset", ".", "filenames", ".", "keys", "(", ")", ")", "[", "batch_idx", "]", "\n", "if", "show_object", "is", "not", "None", ":", "\n", "      ", "if", "object_name", "!=", "show_object", ":", "\n", "        ", "continue", "\n", "", "", "geom", ",", "tex_targs", "=", "batch", "\n", "geom", "=", "geom", ".", "to", "(", "device", "=", "device", ")", "\n", "tex_targs", "=", "tex_targs", ".", "to", "(", "device", "=", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "tex_preds", "=", "model", "(", "geom", ")", "\n", "\n", "", "loss", ",", "match_indices", "=", "loss_fn", "(", "tex_preds", ",", "tex_targs", ")", "\n", "print", "(", "'{:s} error = {:.4f}'", ".", "format", "(", "object_name", ",", "loss", ".", "item", "(", ")", ")", ")", "\n", "\n", "geom", "=", "geom", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "tex_preds", "=", "tex_preds", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "match_indices", "=", "match_indices", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "tex_targs", "=", "tex_targs", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "squeeze", "(", ")", "\n", "\n", "if", "(", "save_preds", ")", ":", "\n", "      ", "output_data", "=", "{", "\n", "'checkpoint_filename'", ":", "checkpoint_filename", ",", "\n", "'geom'", ":", "geom", ",", "\n", "'tex_preds'", ":", "tex_preds", ",", "\n", "'match_indices'", ":", "match_indices", ",", "\n", "'tex_targs'", ":", "tex_targs", "}", "\n", "output_filename", "=", "'{:s}_{:s}_{:s}_diversenet_preds.pkl'", ".", "format", "(", "object_name", ",", "\n", "instruction", ",", "model_name", ")", "\n", "with", "open", "(", "output_filename", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "output_data", ",", "f", ")", "\n", "", "print", "(", "'{:s} saved'", ".", "format", "(", "output_filename", ")", ")", "\n", "\n", "", "if", "show_object", "is", "not", "None", ":", "\n", "      ", "if", "'pointnet'", "in", "model_name", ":", "\n", "        ", "show_pointcloud_texture", "(", "geom", ",", "tex_preds", ")", "\n", "", "elif", "'voxnet'", "in", "model_name", ":", "\n", "        ", "show_voxel_texture", "(", "geom", ",", "tex_preds", ")", "\n", "break", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.create_animation.animate": [[19, 53], ["numpy.eye", "transforms3d.euler2mat", "geom.transform", "open3d.draw_geometries_with_animation_callback", "numpy.deg2rad", "numpy.deg2rad", "numpy.deg2rad", "vis.get_view_control", "vis.get_render_option", "vis.capture_screen_float_buffer", "osp.join", "matplotlib.imsave", "vis.get_view_control.rotate", "vis.get_view_control.scale", "numpy.asarray", "numpy.rad2deg", "vis.register_animation_callback", "str"], "function", ["None"], ["def", "animate", "(", "geomi", ",", "suffix", "=", "None", ")", ":", "\n", "# adjust this transform as needed", "\n", "  ", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "txe", ".", "euler2mat", "(", "np", ".", "deg2rad", "(", "-", "90", ")", ",", "np", ".", "deg2rad", "(", "0", ")", ",", "np", ".", "deg2rad", "(", "0", ")", ")", "\n", "geom", ".", "transform", "(", "T", ")", "\n", "\n", "animate", ".", "count", "=", "-", "1", "\n", "animate", ".", "step", "=", "50.0", "# simulates mouse cursor movement by 50 pixels", "\n", "animate", ".", "radian_per_pixel", "=", "0.003", "\n", "\n", "def", "move_forward", "(", "vis", ")", ":", "\n", "    ", "glb", "=", "animate", "\n", "ctr", "=", "vis", ".", "get_view_control", "(", ")", "\n", "ro", "=", "vis", ".", "get_render_option", "(", ")", "\n", "ro", ".", "point_size", "=", "25.0", "\n", "if", "glb", ".", "count", ">=", "0", ":", "\n", "      ", "image", "=", "vis", ".", "capture_screen_float_buffer", "(", "False", ")", "\n", "im_filename", "=", "osp", ".", "join", "(", "'animation_images'", ",", "\n", "'image_{:03d}'", ".", "format", "(", "glb", ".", "count", ")", ")", "\n", "if", "suffix", "is", "not", "None", ":", "\n", "        ", "im_filename", "=", "'{:s}_{:s}'", ".", "format", "(", "im_filename", ",", "str", "(", "suffix", ")", ")", "\n", "", "im_filename", "+=", "'.png'", "\n", "plt", ".", "imsave", "(", "im_filename", ",", "np", ".", "asarray", "(", "image", ")", ")", "\n", "\n", "if", "np", ".", "rad2deg", "(", "glb", ".", "radian_per_pixel", "*", "glb", ".", "step", "*", "glb", ".", "count", ")", ">=", "360.0", ":", "\n", "        ", "vis", ".", "register_animation_callback", "(", "None", ")", "\n", "\n", "", "ctr", ".", "rotate", "(", "glb", ".", "step", ",", "0", ")", "\n", "", "else", ":", "\n", "# no effect, adjust as needed. Higher values cause the view to zoom out", "\n", "      ", "ctr", ".", "scale", "(", "1", ")", "\n", "", "glb", ".", "count", "+=", "1", "\n", "\n", "", "open3d", ".", "draw_geometries_with_animation_callback", "(", "[", "geom", "]", ",", "move_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.pointcloud_dataset.PointCloudDataset.__init__": [[12, 56], ["torch.Dataset.__init__", "osp.expanduser", "collections.OrderedDict", "next", "osp.join", "os.walk", "osp.join.split", "pointcloud_dataset.PointCloudDataset.filenames[].append", "[].split", "osp.join.split"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["  ", "def", "__init__", "(", "self", ",", "data_dir", ",", "instruction", ",", "train", ",", "n_points", "=", "2500", ",", "\n", "include_sessions", "=", "None", ",", "exclude_sessions", "=", "None", ",", "\n", "random_rotation", "=", "180", ",", "random_scale", "=", "0.1", ",", "\n", "n_ensemble", "=", "20", ",", "color_thresh", "=", "0.4", ",", "test_only", "=", "False", ")", ":", "\n", "    ", "super", "(", "PointCloudDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "data_dir", "=", "osp", ".", "expanduser", "(", "data_dir", ")", "\n", "self", ".", "n_points", "=", "n_points", "\n", "self", ".", "random_rotation", "=", "random_rotation", "\n", "self", ".", "random_scale", "=", "random_scale", "\n", "self", ".", "n_ensemble", "=", "n_ensemble", "\n", "self", ".", "color_thresh", "=", "color_thresh", "\n", "\n", "# list the voxel grids", "\n", "self", ".", "filenames", "=", "OrderedDict", "(", ")", "\n", "for", "filename", "in", "next", "(", "os", ".", "walk", "(", "data_dir", ")", ")", "[", "-", "1", "]", ":", "\n", "      ", "if", "'_hollow.npy'", "not", "in", "filename", ":", "\n", "        ", "continue", "\n", "", "if", "test_only", ":", "\n", "        ", "if", "'testonly'", "not", "in", "filename", ":", "\n", "          ", "continue", "\n", "", "", "else", ":", "\n", "        ", "if", "'_{:s}_'", ".", "format", "(", "instruction", ")", "not", "in", "filename", ":", "\n", "          ", "continue", "\n", "", "", "session_name", "=", "filename", ".", "split", "(", "'_'", ")", "[", "0", "]", "\n", "if", "include_sessions", "is", "not", "None", ":", "\n", "        ", "if", "session_name", "not", "in", "include_sessions", ":", "\n", "          ", "continue", "\n", "", "", "if", "exclude_sessions", "is", "not", "None", ":", "\n", "        ", "if", "session_name", "in", "exclude_sessions", ":", "\n", "          ", "continue", "\n", "", "", "offset", "=", "1", "if", "test_only", "else", "2", "\n", "object_name", "=", "'_'", ".", "join", "(", "filename", ".", "split", "(", "'.'", ")", "[", "0", "]", ".", "split", "(", "'_'", ")", "[", "offset", ":", "-", "1", "]", ")", "\n", "if", "not", "test_only", ":", "\n", "        ", "if", "train", ":", "\n", "          ", "if", "object_name", "in", "utils", ".", "test_objects", ":", "\n", "            ", "continue", "\n", "", "", "else", ":", "\n", "          ", "if", "object_name", "not", "in", "utils", ".", "test_objects", ":", "\n", "            ", "continue", "\n", "", "", "", "filename", "=", "osp", ".", "join", "(", "data_dir", ",", "filename", ")", "\n", "if", "object_name", "not", "in", "self", ".", "filenames", ":", "\n", "        ", "self", ".", "filenames", "[", "object_name", "]", "=", "[", "filename", "]", "\n", "", "else", ":", "\n", "        ", "self", ".", "filenames", "[", "object_name", "]", ".", "append", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.pointcloud_dataset.PointCloudDataset.__len__": [[57, 59], ["len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "filenames", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.pointcloud_dataset.PointCloudDataset.__getitem__": [[60, 104], ["numpy.load", "numpy.vstack", "numpy.vstack", "numpy.random.choice", "len", "numpy.arange", "numpy.vstack", "list", "max", "abs", "numpy.random.uniform", "transforms3d.euler2mat", "abs", "numpy.random.choice", "numpy.eye", "numpy.random.uniform", "numpy.random.choice", "numpy.load", "utils.discretize_texture", "numpy.vstack.append", "numpy.vstack.astype", "numpy.vstack.astype", "pointcloud_dataset.PointCloudDataset.filenames.keys", "numpy.vstack.max", "numpy.vstack.min", "numpy.vstack.max", "numpy.vstack.min", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.utils.discretize_texture"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# load geometry", "\n", "    ", "object_name", "=", "list", "(", "self", ".", "filenames", ".", "keys", "(", ")", ")", "[", "index", "]", "\n", "_", ",", "_", ",", "_", ",", "_", ",", "xx", ",", "yy", ",", "zz", "=", "np", ".", "load", "(", "self", ".", "filenames", "[", "object_name", "]", "[", "0", "]", ")", "\n", "pts", "=", "np", ".", "vstack", "(", "(", "xx", ",", "yy", ",", "zz", ")", ")", "\n", "offset", "=", "(", "pts", ".", "max", "(", "1", ",", "keepdims", "=", "True", ")", "+", "pts", ".", "min", "(", "1", ",", "keepdims", "=", "True", ")", ")", "/", "2", "\n", "pts", "-=", "offset", "\n", "scale", "=", "max", "(", "pts", ".", "max", "(", "1", ")", "-", "pts", ".", "min", "(", "1", ")", ")", "/", "2", "\n", "pts", "/=", "scale", "\n", "pts", "=", "np", ".", "vstack", "(", "(", "pts", ",", "scale", "*", "np", ".", "ones", "(", "pts", ".", "shape", "[", "1", "]", ")", ")", ")", "\n", "\n", "# resample", "\n", "pts_choice", "=", "np", ".", "random", ".", "choice", "(", "pts", ".", "shape", "[", "1", "]", ",", "size", "=", "self", ".", "n_points", ",", "replace", "=", "True", ")", "\n", "pts", "=", "pts", "[", ":", ",", "pts_choice", "]", "\n", "\n", "# random perturbations", "\n", "# rotation", "\n", "if", "abs", "(", "self", ".", "random_rotation", ")", ">", "0", ":", "\n", "      ", "theta", "=", "np", ".", "random", ".", "uniform", "(", "-", "np", ".", "pi", "*", "self", ".", "random_rotation", "/", "180", ",", "\n", "np", ".", "pi", "*", "self", ".", "random_rotation", "/", "180", ")", "\n", "R", "=", "txe", ".", "euler2mat", "(", "0", ",", "0", ",", "theta", ")", "\n", "pts", "[", ":", "3", "]", "=", "R", "@", "pts", "[", ":", "3", "]", "\n", "# scale", "\n", "", "if", "abs", "(", "self", ".", "random_scale", ")", ">", "0", ":", "\n", "      ", "axis", "=", "np", ".", "random", ".", "choice", "(", "2", ")", "\n", "T", "=", "np", ".", "eye", "(", "3", ")", "\n", "T", "[", "axis", ",", "axis", "]", "=", "np", ".", "random", ".", "uniform", "(", "1", "-", "self", ".", "random_scale", ",", "1", "+", "self", ".", "random_scale", ")", "\n", "pts", "[", ":", "3", "]", "=", "T", "@", "pts", "[", ":", "3", "]", "\n", "\n", "# load textures", "\n", "", "N", "=", "len", "(", "self", ".", "filenames", "[", "object_name", "]", ")", "\n", "filename_choice", "=", "np", ".", "arange", "(", "N", ")", "\n", "if", "self", ".", "n_ensemble", ">", "0", "and", "self", ".", "n_ensemble", "<", "N", ":", "\n", "      ", "filename_choice", "=", "np", ".", "random", ".", "choice", "(", "N", ",", "size", "=", "self", ".", "n_ensemble", ",", "replace", "=", "False", ")", "\n", "", "cs", "=", "[", "]", "\n", "filenames", "=", "[", "self", ".", "filenames", "[", "object_name", "]", "[", "c", "]", "for", "c", "in", "filename_choice", "]", "\n", "for", "filename", "in", "filenames", ":", "\n", "      ", "_", ",", "_", ",", "_", ",", "c", ",", "_", ",", "_", ",", "_", "=", "np", ".", "load", "(", "filename", ")", "\n", "c", "=", "utils", ".", "discretize_texture", "(", "c", ",", "thresh", "=", "self", ".", "color_thresh", ")", "\n", "c", "=", "c", "[", "pts_choice", "]", "\n", "cs", ".", "append", "(", "c", ")", "\n", "", "cs", "=", "np", ".", "vstack", "(", "cs", ")", "\n", "\n", "return", "pts", ".", "astype", "(", "np", ".", "float32", ")", ",", "cs", ".", "astype", "(", "np", ".", "int64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.utils.texture_proc": [[22, 40], ["min", "max", "numpy.log", "numpy.log", "len", "numpy.exp", "numpy.exp"], "function", ["None"], ["def", "texture_proc", "(", "colors", ",", "a", "=", "0.05", ",", "invert", "=", "False", ")", ":", "\n", "  ", "idx", "=", "colors", ">", "0", "\n", "ci", "=", "colors", "[", "idx", "]", "\n", "if", "len", "(", "ci", ")", "==", "0", ":", "\n", "    ", "return", "colors", "\n", "", "if", "invert", ":", "\n", "    ", "ci", "=", "1", "-", "ci", "\n", "# fit a sigmoid", "\n", "", "x1", "=", "min", "(", "ci", ")", ";", "y1", "=", "a", "\n", "x2", "=", "max", "(", "ci", ")", ";", "y2", "=", "1", "-", "a", "\n", "lna", "=", "np", ".", "log", "(", "(", "1", "-", "y1", ")", "/", "y1", ")", "\n", "lnb", "=", "np", ".", "log", "(", "(", "1", "-", "y2", ")", "/", "y2", ")", "\n", "k", "=", "(", "lnb", "-", "lna", ")", "/", "(", "x1", "-", "x2", ")", "\n", "mu", "=", "(", "x2", "*", "lna", "-", "x1", "*", "lnb", ")", "/", "(", "lna", "-", "lnb", ")", "\n", "# apply the sigmoid", "\n", "ci", "=", "np", ".", "exp", "(", "k", "*", "(", "ci", "-", "mu", ")", ")", "/", "(", "1", "+", "np", ".", "exp", "(", "k", "*", "(", "ci", "-", "mu", ")", ")", ")", "\n", "colors", "[", "idx", "]", "=", "ci", "\n", "return", "colors", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.utils.discretize_texture": [[42, 51], ["sum"], "function", ["None"], ["", "def", "discretize_texture", "(", "c", ",", "thresh", "=", "0.4", ",", "have_dontcare", "=", "True", ")", ":", "\n", "  ", "idx", "=", "c", ">", "0", "\n", "if", "sum", "(", "idx", ")", "==", "0", ":", "\n", "    ", "return", "c", "\n", "", "ci", "=", "c", "[", "idx", "]", "\n", "c", "[", ":", "]", "=", "2", "if", "have_dontcare", "else", "0", "\n", "ci", "=", "ci", ">", "thresh", "\n", "c", "[", "idx", "]", "=", "ci", "\n", "return", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.None.utils.show_pointcloud": [[53, 66], ["numpy.asarray", "numpy.asarray", "open3d.PointCloud", "open3d.Vector3dVector", "open3d.Vector3dVector", "open3d.draw_geometries", "numpy.asarray", "numpy.tile"], "function", ["None"], ["", "def", "show_pointcloud", "(", "pts", ",", "colors", ",", "\n", "cmap", "=", "np", ".", "asarray", "(", "[", "[", "0", ",", "0", ",", "1", "]", ",", "[", "1", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ")", ")", ":", "\n", "  ", "colors", "=", "np", ".", "asarray", "(", "colors", ")", "\n", "if", "(", "colors", ".", "dtype", "==", "int", ")", "and", "(", "colors", ".", "ndim", "==", "1", ")", "and", "(", "cmap", "is", "not", "None", ")", ":", "\n", "    ", "colors", "=", "cmap", "[", "colors", "]", "\n", "", "if", "colors", ".", "ndim", "==", "1", ":", "\n", "    ", "colors", "=", "np", ".", "tile", "(", "colors", ",", "(", "3", ",", "1", ")", ")", ".", "T", "\n", "\n", "", "pc", "=", "open3d", ".", "PointCloud", "(", ")", "\n", "pc", ".", "points", "=", "open3d", ".", "Vector3dVector", "(", "np", ".", "asarray", "(", "pts", ")", ")", "\n", "pc", ".", "colors", "=", "open3d", ".", "Vector3dVector", "(", "colors", ")", "\n", "\n", "open3d", ".", "draw_geometries", "(", "[", "pc", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.voxnet.VoxNet.__init__": [[7, 49], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "voxnet.VoxNet.modules", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_ensemble", ",", "inplanes", "=", "5", ",", "outplanes", "=", "2", ",", "droprate", "=", "0", ")", ":", "\n", "    ", "super", "(", "VoxNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "droprate", "=", "droprate", "\n", "self", ".", "drop", "=", "tnn", ".", "Dropout", "(", "p", "=", "droprate", ")", "\n", "\n", "nc", "=", "inplanes", "\n", "nc", "*=", "4", "\n", "self", ".", "conv1", "=", "tnn", ".", "Conv3d", "(", "inplanes", ",", "nc", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "tnn", ".", "BatchNorm3d", "(", "nc", ")", "\n", "self", ".", "pool1", "=", "tnn", ".", "MaxPool3d", "(", "2", ")", "\n", "\n", "nc", "*=", "4", "\n", "self", ".", "conv2", "=", "tnn", ".", "Conv3d", "(", "self", ".", "conv1", ".", "out_channels", "+", "n_ensemble", ",", "nc", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "tnn", ".", "BatchNorm3d", "(", "nc", ")", "\n", "self", ".", "pool2", "=", "tnn", ".", "MaxPool3d", "(", "2", ")", "\n", "\n", "nc", "*=", "4", "\n", "self", ".", "conv3", "=", "tnn", ".", "Conv3d", "(", "self", ".", "conv2", ".", "out_channels", ",", "nc", ",", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "tnn", ".", "BatchNorm3d", "(", "nc", ")", "\n", "self", ".", "pool3", "=", "tnn", ".", "MaxPool3d", "(", "4", ")", "\n", "\n", "inplanes", "=", "nc", "\n", "nc", "=", "nc", "//", "4", "\n", "self", ".", "upconv1", "=", "tnn", ".", "Conv3d", "(", "inplanes", ",", "nc", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "upbn1", "=", "tnn", ".", "BatchNorm3d", "(", "nc", ")", "\n", "nc", "=", "nc", "//", "4", "\n", "self", ".", "upconv2", "=", "tnn", ".", "Conv3d", "(", "self", ".", "upconv1", ".", "out_channels", ",", "nc", ",", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "upbn2", "=", "tnn", ".", "BatchNorm3d", "(", "nc", ")", "\n", "nc", "=", "nc", "//", "4", "\n", "self", ".", "upconv3", "=", "tnn", ".", "Conv3d", "(", "self", ".", "upconv2", ".", "out_channels", "+", "n_ensemble", ",", "nc", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "upbn3", "=", "tnn", ".", "BatchNorm3d", "(", "nc", ")", "\n", "self", ".", "upconv4", "=", "tnn", ".", "Conv3d", "(", "self", ".", "upconv3", ".", "out_channels", ",", "outplanes", ",", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "      ", "if", "isinstance", "(", "m", ",", "tnn", ".", "BatchNorm3d", ")", ":", "\n", "        ", "tnn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "tnn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.voxnet.VoxNet.forward": [[50, 66], ["voxnet.VoxNet.pool1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "voxnet.VoxNet.pool2", "voxnet.VoxNet.pool3", "voxnet.VoxNet.upbn1", "torch.interpolate", "torch.interpolate", "torch.interpolate", "voxnet.VoxNet.upbn2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "voxnet.VoxNet.upbn3", "torch.interpolate", "torch.interpolate", "torch.interpolate", "voxnet.VoxNet.upconv4", "voxnet.VoxNet.drop", "voxnet.VoxNet.bn1", "voxnet.VoxNet.bn2", "voxnet.VoxNet.bn3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "voxnet.VoxNet.upconv1", "voxnet.VoxNet.upconv2", "voxnet.VoxNet.upconv3", "voxnet.VoxNet.conv1", "voxnet.VoxNet.conv2", "voxnet.VoxNet.conv3", "voxnet.VoxNet.view"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "    ", "if", "self", ".", "droprate", ">", "0", ":", "\n", "      ", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "", "x", "=", "self", ".", "pool1", "(", "self", ".", "bn1", "(", "tnnF", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "c", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "pool2", "(", "self", ".", "bn2", "(", "tnnF", ".", "relu", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "self", ".", "pool3", "(", "self", ".", "bn3", "(", "tnnF", ".", "relu", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "self", ".", "upbn1", "(", "tnnF", ".", "relu", "(", "self", ".", "upconv1", "(", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "4", ",", "4", ",", "4", ")", ")", ")", ")", "\n", "x", "=", "tnnF", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "4", ")", "\n", "x", "=", "self", ".", "upbn2", "(", "tnnF", ".", "relu", "(", "self", ".", "upconv2", "(", "x", ")", ")", ")", "\n", "x", "=", "tnnF", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "c", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "upbn3", "(", "tnnF", ".", "relu", "(", "self", ".", "upconv3", "(", "x", ")", ")", ")", "\n", "x", "=", "tnnF", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ")", "\n", "x", "=", "self", ".", "upconv4", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.voxnet.DiverseVoxNet.__init__": [[69, 74], ["torch.Module.__init__", "voxnet.VoxNet"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_ensemble", ",", "inplanes", "=", "5", ",", "droprate", "=", "0", ")", ":", "\n", "    ", "super", "(", "DiverseVoxNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_ensemble", "=", "n_ensemble", "\n", "self", ".", "voxnet", "=", "VoxNet", "(", "n_ensemble", "=", "n_ensemble", ",", "inplanes", "=", "inplanes", ",", "\n", "droprate", "=", "droprate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.voxnet.DiverseVoxNet.forward": [[75, 90], ["torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "x.view().expand.view().expand.view().expand", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "c.view().expand.view().expand.view().expand", "voxnet.DiverseVoxNet.voxnet", "torch.stack.append", "torch.stack.append", "torch.stack.append", "x.view().expand.view().expand.view", "c.view().expand.view().expand.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xs", ")", ":", "\n", "    ", "\"\"\"\n    :param xs: N x 5 x DHW\n    :return: N x E x DHW\n    \"\"\"", "\n", "N", ",", "_", ",", "D", ",", "H", ",", "W", "=", "xs", ".", "shape", "\n", "preds", "=", "[", "]", "\n", "for", "x", "in", "xs", ":", "\n", "      ", "x", "=", "x", ".", "view", "(", "1", ",", "*", "x", ".", "shape", ")", ".", "expand", "(", "self", ".", "n_ensemble", ",", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "\n", "c", "=", "torch", ".", "eye", "(", "self", ".", "n_ensemble", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "c", "=", "c", ".", "view", "(", "*", "c", ".", "shape", ",", "1", ",", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "D", "//", "2", ",", "H", "//", "2", ",", "W", "//", "2", ")", "\n", "pred", "=", "self", ".", "voxnet", "(", "x", ",", "c", ")", "\n", "preds", ".", "append", "(", "pred", ")", "# texture is 1-dimensional", "\n", "", "preds", "=", "torch", ".", "stack", "(", "preds", ")", "\n", "return", "preds", "\n", "", "", ""]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.pointnet.STN3d.__init__": [[12, 33], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "pointnet.STN3d.modules", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n", "=", "4", ")", ":", "\n", "        ", "super", "(", "STN3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "n", ",", "64", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "64", ",", "128", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "1024", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "1024", ",", "512", ",", "bias", "=", "False", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "256", ",", "bias", "=", "False", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "256", ",", "n", "*", "n", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.pointnet.STN3d.forward": [[34, 52], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "x.view.view.view", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "pointnet.STN3d.fc3", "numpy.eye().ravel().astype", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "torch.from_numpy().view().repeat", "iden.to.to.to", "x.view.view.view", "x.view.view.size", "pointnet.STN3d.bn1", "pointnet.STN3d.bn2", "pointnet.STN3d.bn3", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "pointnet.STN3d.bn4", "pointnet.STN3d.bn5", "pointnet.STN3d.conv1", "pointnet.STN3d.conv2", "pointnet.STN3d.conv3", "pointnet.STN3d.fc1", "pointnet.STN3d.fc2", "numpy.eye().ravel", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy().view", "numpy.eye", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batchsize", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "max", "(", "x", ",", "2", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1024", ")", "\n", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "fc1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn5", "(", "self", ".", "fc2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "fc3", "(", "x", ")", "\n", "\n", "iden", "=", "np", ".", "eye", "(", "self", ".", "n", ")", ".", "ravel", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "iden", "=", "torch", ".", "from_numpy", "(", "iden", ")", ".", "view", "(", "1", ",", "self", ".", "n", "*", "self", ".", "n", ")", ".", "repeat", "(", "batchsize", ",", "1", ")", "\n", "iden", "=", "iden", ".", "to", "(", "device", "=", "x", ".", "device", ")", "\n", "x", "=", "x", "+", "iden", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "self", ".", "n", ",", "self", ".", "n", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.pointnet.PointNetfeat.__init__": [[55, 72], ["torch.Module.__init__", "pointnet.STN3d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "pointnet.PointNetfeat.modules", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "global_feat", "=", "True", ",", "n", "=", "4", ",", "n_ensemble", "=", "20", ")", ":", "\n", "        ", "super", "(", "PointNetfeat", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "n_ensemble", "=", "n_ensemble", "\n", "self", ".", "global_feat", "=", "global_feat", "\n", "self", ".", "stn", "=", "STN3d", "(", "n", "=", "n", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "n", "+", "self", ".", "n_ensemble", ",", "64", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "64", ",", "128", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "1024", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "1024", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.pointnet.PointNetfeat.forward": [[73, 92], ["pointnet.PointNetfeat.stn", "x.view().repeat.view().repeat.transpose", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "x.view().repeat.view().repeat.transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "pointnet.PointNetfeat.bn3", "x.view().repeat.view().repeat.view", "x.view().repeat.view().repeat.size", "x.view().repeat.view().repeat.size", "pointnet.PointNetfeat.bn1", "pointnet.PointNetfeat.bn2", "pointnet.PointNetfeat.conv3", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "x.view().repeat.view().repeat.view().repeat", "pointnet.PointNetfeat.conv1", "pointnet.PointNetfeat.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view().repeat.view().repeat.view"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "batchsize", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "n_pts", "=", "x", ".", "size", "(", ")", "[", "2", "]", "\n", "trans", "=", "self", ".", "stn", "(", "x", ")", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", "\n", "x", "=", "torch", ".", "bmm", "(", "x", ",", "trans", ")", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "c", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "pointfeat", "=", "x", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "torch", ".", "max", "(", "x", ",", "2", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1024", ")", "\n", "if", "self", ".", "global_feat", ":", "\n", "            ", "return", "x", ",", "trans", "\n", "", "else", ":", "\n", "            ", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1024", ",", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "n_pts", ")", "\n", "return", "torch", ".", "cat", "(", "[", "x", ",", "pointfeat", "]", ",", "1", ")", ",", "trans", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.pointnet.PointNetCls.__init__": [[94, 103], ["torch.Module.__init__", "pointnet.PointNetfeat", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", "=", "2", ")", ":", "\n", "        ", "super", "(", "PointNetCls", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feat", "=", "PointNetfeat", "(", "global_feat", "=", "True", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "1024", ",", "512", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "256", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "256", ",", "k", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.pointnet.PointNetCls.forward": [[103, 109], ["pointnet.PointNetCls.feat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "pointnet.PointNetCls.fc3", "pointnet.PointNetCls.bn1", "pointnet.PointNetCls.bn2", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "pointnet.PointNetCls.fc1", "pointnet.PointNetCls.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", ",", "trans", "=", "self", ".", "feat", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "fc1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "fc2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "fc3", "(", "x", ")", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "0", ")", ",", "trans", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.pointnet.PointNetDenseCls.__init__": [[111, 131], ["torch.Module.__init__", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "pointnet.PointNetfeat", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "pointnet.PointNetDenseCls.modules", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", "=", "2", ",", "n", "=", "4", ",", "n_ensemble", "=", "20", ",", "droprate", "=", "0", ")", ":", "\n", "        ", "super", "(", "PointNetDenseCls", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "n", "=", "n", "\n", "self", ".", "n_ensemble", "=", "n_ensemble", "\n", "self", ".", "droprate", "=", "droprate", "\n", "self", ".", "drop", "=", "torch", ".", "nn", ".", "Dropout", "(", "p", "=", "droprate", ")", "\n", "self", ".", "feat", "=", "PointNetfeat", "(", "global_feat", "=", "False", ",", "n", "=", "n", ",", "n_ensemble", "=", "n_ensemble", ")", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "1088", ",", "512", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "512", ",", "256", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "256", "+", "self", ".", "n_ensemble", ",", "128", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "self", ".", "k", ",", "1", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.pointnet.PointNetDenseCls.forward": [[132, 144], ["pointnet.PointNetDenseCls.feat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "pointnet.PointNetDenseCls.conv4", "pointnet.PointNetDenseCls.size", "pointnet.PointNetDenseCls.size", "pointnet.PointNetDenseCls.drop", "pointnet.PointNetDenseCls.bn1", "pointnet.PointNetDenseCls.bn2", "pointnet.PointNetDenseCls.bn3", "pointnet.PointNetDenseCls.conv1", "pointnet.PointNetDenseCls.conv2", "pointnet.PointNetDenseCls.conv3"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ",", "c", ")", ":", "\n", "        ", "batchsize", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "n_pts", "=", "x", ".", "size", "(", ")", "[", "2", "]", "\n", "if", "self", ".", "droprate", ">", "0", ":", "\n", "          ", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "", "x", ",", "_", "=", "self", ".", "feat", "(", "x", ",", "c", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "c", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.pointnet.DiversePointNet.__init__": [[147, 152], ["torch.Module.__init__", "pointnet.PointNetDenseCls"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["  ", "def", "__init__", "(", "self", ",", "n_ensemble", ",", "n", "=", "4", ",", "droprate", "=", "0", ")", ":", "\n", "    ", "super", "(", "DiversePointNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_ensemble", "=", "n_ensemble", "\n", "self", ".", "pointnet", "=", "PointNetDenseCls", "(", "n_ensemble", "=", "n_ensemble", ",", "n", "=", "n", ",", "\n", "droprate", "=", "droprate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.pointnet.DiversePointNet.forward": [[153, 168], ["torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "x.view().expand.view().expand.view().expand", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "c.view().expand.view().expand.view().expand", "pointnet.DiversePointNet.pointnet", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.stack.append", "x.view().expand.view().expand.view", "c.view().expand.view().expand.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xs", ")", ":", "\n", "    ", "\"\"\"\n    :param xs: N x 3 x P\n    :return: N x E x P\n    \"\"\"", "\n", "N", ",", "_", ",", "P", "=", "xs", ".", "shape", "\n", "preds", "=", "[", "]", "\n", "for", "x", "in", "xs", ":", "\n", "      ", "x", "=", "x", ".", "view", "(", "1", ",", "*", "x", ".", "shape", ")", ".", "expand", "(", "self", ".", "n_ensemble", ",", "-", "1", ",", "-", "1", ")", "\n", "c", "=", "torch", ".", "eye", "(", "self", ".", "n_ensemble", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "c", "=", "c", ".", "view", "(", "self", ".", "n_ensemble", ",", "self", ".", "n_ensemble", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "P", ")", "\n", "pred", "=", "self", ".", "pointnet", "(", "x", ",", "c", ")", "\n", "preds", ".", "append", "(", "pred", ")", "\n", "", "preds", "=", "torch", ".", "stack", "(", "preds", ")", "\n", "return", "preds", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.TextureLoss.__init__": [[8, 12], ["torch.Module.__init__", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["  ", "def", "__init__", "(", "self", ",", "pos_weight", "=", "10", ")", ":", "\n", "    ", "super", "(", "TextureLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss", "=", "tnn", ".", "CrossEntropyLoss", "(", "weight", "=", "torch", ".", "Tensor", "(", "[", "1", ",", "pos_weight", "]", ")", ",", "\n", "ignore_index", "=", "2", ",", "reduction", "=", "'none'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.TextureLoss.forward": [[13, 17], ["losses.TextureLoss.loss", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "preds", ",", "targs", ")", ":", "\n", "    ", "loss", "=", "self", ".", "loss", "(", "preds", ",", "targs", ")", "\n", "loss", "=", "torch", ".", "mean", "(", "loss", ",", "1", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__": [[37, 48], ["torch.Module.__init__", "losses.TextureLoss"], "methods", ["home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.__init__"], ["  ", "def", "__init__", "(", "self", ",", "pos_weight", "=", "10", ",", "beta", "=", "1", ",", "train", "=", "True", ",", "eval_mode", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    :param eval_mode: returns match indices, and computes loss as L2 loss\n    \"\"\"", "\n", "super", "(", "DiverseLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss", "=", "classification_error", "if", "eval_mode", "else", "TextureLoss", "(", "pos_weight", "=", "pos_weight", ")", "\n", "self", ".", "beta", "=", "beta", "\n", "self", ".", "train", "=", "train", "\n", "if", "eval_mode", ":", "\n", "      ", "self", ".", "train", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.DiverseLoss.forward": [[49, 77], ["preds.view.view.view", "targs.view.view.view", "zip", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack().mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "pred.repeat.repeat.repeat", "targ.repeat().view.repeat().view.repeat().view", "losses.DiverseLoss.loss().view", "losses.DiverseLoss.min", "loss.mean.mean.mean", "losses.append", "torch.stack.append", "torch.stack.append", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "targ.repeat().view.repeat().view.repeat", "losses.DiverseLoss.loss", "[].max", "losses.DiverseLoss.min"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "preds", ",", "targs", ")", ":", "\n", "    ", "\"\"\"\n    :param preds: N x Ep x 2 x P\n    :param targs: N x Et x P\n    :return:\n    \"\"\"", "\n", "preds", "=", "preds", ".", "view", "(", "*", "preds", ".", "shape", "[", ":", "3", "]", ",", "-", "1", ")", "\n", "targs", "=", "targs", ".", "view", "(", "*", "targs", ".", "shape", "[", ":", "2", "]", ",", "-", "1", ")", "\n", "N", ",", "Ep", ",", "_", ",", "P", "=", "preds", ".", "shape", "\n", "_", ",", "Et", ",", "_", "=", "targs", ".", "shape", "\n", "\n", "losses", "=", "[", "]", "\n", "match_indices", "=", "[", "]", "\n", "for", "pred", ",", "targ", "in", "zip", "(", "preds", ",", "targs", ")", ":", "\n", "      ", "pred", "=", "pred", ".", "repeat", "(", "Et", ",", "1", ",", "1", ")", "\n", "targ", "=", "targ", ".", "repeat", "(", "1", ",", "Ep", ")", ".", "view", "(", "-", "1", ",", "P", ")", "\n", "loss_matrix", "=", "self", ".", "loss", "(", "pred", ",", "targ", ")", ".", "view", "(", "Et", ",", "Ep", ")", "\n", "loss", ",", "match_idx", "=", "loss_matrix", ".", "min", "(", "1", ")", "\n", "loss", "=", "loss", ".", "mean", "(", ")", "\n", "if", "self", ".", "train", ":", "\n", "        ", "l_catchup", "=", "loss_matrix", ".", "min", "(", "0", ")", "[", "0", "]", ".", "max", "(", ")", "/", "Ep", "\n", "loss", "=", "loss", "+", "self", ".", "beta", "*", "l_catchup", "\n", "", "losses", ".", "append", "(", "loss", ")", "\n", "match_indices", ".", "append", "(", "match_idx", ")", "\n", "", "loss", "=", "torch", ".", "stack", "(", "losses", ")", ".", "mean", "(", ")", "\n", "match_indices", "=", "torch", ".", "stack", "(", "match_indices", ")", "\n", "\n", "return", "loss", ",", "match_indices", "\n", "", "", ""]], "home.repos.pwc.inspect_result.samarth-robo_contactdb_prediction.models.losses.classification_error": [[19, 34], ["torch.max", "torch.max", "zip", "torch.stack", "torch.stack", "pred.masked_select", "targ.masked_select", "torch.stack.append", "torch.sum", "torch.sum", "torch.tensor().to", "torch.tensor().to", "torch.mean", "torch.mean", "torch.mean.to", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "", "def", "classification_error", "(", "preds", ",", "targs", ")", ":", "\n", "  ", "_", ",", "pred_class", "=", "torch", ".", "max", "(", "preds", ",", "dim", "=", "1", ")", "\n", "errors", "=", "[", "]", "\n", "for", "pred", ",", "targ", "in", "zip", "(", "pred_class", ",", "targs", ")", ":", "\n", "    ", "mask", "=", "targ", "!=", "2", "\n", "masked_pred", "=", "pred", ".", "masked_select", "(", "mask", ")", "\n", "masked_targ", "=", "targ", ".", "masked_select", "(", "mask", ")", "\n", "if", "torch", ".", "sum", "(", "masked_pred", ")", "==", "0", ":", "# ignore degenerate masks", "\n", "      ", "error", "=", "torch", ".", "tensor", "(", "1000", ")", ".", "to", "(", "device", "=", "preds", ".", "device", ",", "dtype", "=", "preds", ".", "dtype", ")", "\n", "", "else", ":", "\n", "      ", "error", "=", "masked_pred", "!=", "masked_targ", "\n", "error", "=", "torch", ".", "mean", "(", "error", ".", "to", "(", "dtype", "=", "preds", ".", "dtype", ")", ")", "\n", "", "errors", ".", "append", "(", "error", ")", "\n", "", "errors", "=", "torch", ".", "stack", "(", "errors", ")", "\n", "return", "errors", "\n", "\n"]]}