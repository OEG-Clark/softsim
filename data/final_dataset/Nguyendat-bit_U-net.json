{"home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_mobilenetv2_unet.decoder_block": [[8, 19], ["UpSampling2D", "Concatenate", "Conv2D", "BatchNormalization", "LeakyReLU", "Conv2D", "BatchNormalization", "LeakyReLU"], "function", ["None"], ["def", "decoder_block", "(", "x", ",", "y", ",", "filters", ")", ":", "\n", "    ", "x", "=", "UpSampling2D", "(", ")", "(", "x", ")", "\n", "x", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "x", ",", "y", "]", ")", "\n", "x", "=", "Conv2D", "(", "filters", ",", "3", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "filters", ",", "3", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", ")", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_mobilenetv2_unet.mobilenetv2_unet": [[20, 46], ["Input", "tensorflow.keras.applications.MobileNetV2", "model_mobilenetv2_unet.decoder_block", "model_mobilenetv2_unet.decoder_block", "model_mobilenetv2_unet.decoder_block", "model_mobilenetv2_unet.decoder_block", "tensorflow.keras.models.Model", "tensorflow.keras.applications.MobileNetV2.get_layer", "tensorflow.keras.applications.MobileNetV2.get_layer", "tensorflow.keras.applications.MobileNetV2.get_layer", "tensorflow.keras.applications.MobileNetV2.get_layer", "tensorflow.keras.applications.MobileNetV2.get_layer", "Dropout", "Conv2D"], "function", ["home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_resetnet50_unet.decoder_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_resetnet50_unet.decoder_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_resetnet50_unet.decoder_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_resetnet50_unet.decoder_block"], ["", "def", "mobilenetv2_unet", "(", "input_shape", ",", "*", ",", "classes", ",", "dropout", ")", ":", "## (512, 512, 3)", "\n", "    ", "inputs", "=", "Input", "(", "shape", "=", "input_shape", ")", "\n", "\"\"\" Pre-trained MobileNetV2 \"\"\"", "\n", "encoder", "=", "MobileNetV2", "(", "include_top", "=", "False", ",", "weights", "=", "\"imagenet\"", ",", "\n", "input_tensor", "=", "inputs", ",", "alpha", "=", "1.0", ")", "\n", "\n", "\"\"\" Encoder \"\"\"", "\n", "s1", "=", "encoder", ".", "get_layer", "(", "\"input_1\"", ")", ".", "output", "\n", "s2", "=", "encoder", ".", "get_layer", "(", "\"block_1_expand_relu\"", ")", ".", "output", "\n", "s3", "=", "encoder", ".", "get_layer", "(", "\"block_3_expand_relu\"", ")", ".", "output", "\n", "s4", "=", "encoder", ".", "get_layer", "(", "\"block_6_expand_relu\"", ")", ".", "output", "\n", "\n", "\n", "x", "=", "encoder", ".", "get_layer", "(", "\"block_13_expand_relu\"", ")", ".", "output", "\n", "\n", "\"\"\" Decoder \"\"\"", "\n", "x", "=", "decoder_block", "(", "x", ",", "s4", ",", "512", ")", "\n", "x", "=", "decoder_block", "(", "x", ",", "s3", ",", "256", ")", "\n", "x", "=", "decoder_block", "(", "x", ",", "s2", ",", "128", ")", "\n", "x", "=", "decoder_block", "(", "x", ",", "s1", ",", "64", ")", "\n", "\n", "x", "=", "Dropout", "(", "dropout", ")", "(", "x", ")", "\n", "outputs", "=", "Conv2D", "(", "classes", ",", "1", ",", "activation", "=", "\"softmax\"", ")", "(", "x", ")", "\n", "\n", "model", "=", "Model", "(", "inputs", ",", "outputs", ",", "name", "=", "\"MobileNetV2_U-Net\"", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.display.show_history": [[7, 58], ["matplotlib.subplots", "axes.plot", "axes.plot", "axes.set_xlabel", "axes.set_ylabel", "axes.legend", "matplotlib.savefig", "matplotlib.show", "matplotlib.subplots", "axes.plot", "axes.plot", "axes.set_xlabel", "axes.set_ylabel", "axes.legend", "matplotlib.savefig", "matplotlib.show", "matplotlib.subplots", "axes.plot", "axes.plot", "axes.set_xlabel", "axes.set_ylabel", "axes.legend", "matplotlib.savefig", "matplotlib.show", "matplotlib.subplots", "axes[].plot", "axes[].set_title", "axes[].set_xlabel", "axes[].set_ylabel", "axes[].plot", "axes[].set_title", "axes[].set_xlabel", "axes[].set_ylabel", "axes[].plot", "axes[].set_title", "axes[].set_xlabel", "axes[].set_ylabel", "matplotlib.savefig", "matplotlib.show"], "function", ["None"], ["def", "show_history", "(", "history", ",", "validation", ":", "bool", "=", "False", ")", ":", "\n", "    ", "if", "validation", ":", "\n", "# Loss", "\n", "        ", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "20", ",", "5", ")", ")", "\n", "# Train", "\n", "axes", ".", "plot", "(", "history", ".", "epoch", ",", "history", ".", "history", "[", "'loss'", "]", ",", "color", "=", "'r'", ",", "label", "=", "'Train'", ")", "\n", "axes", ".", "plot", "(", "history", ".", "epoch", ",", "history", ".", "history", "[", "'val_loss'", "]", ",", "color", "=", "'b'", ",", "label", "=", "'Val'", ")", "\n", "axes", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axes", ".", "set_ylabel", "(", "'Loss'", ")", "\n", "axes", ".", "legend", "(", ")", "\n", "plt", ".", "savefig", "(", "'loss.jpg'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "# Acc", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "20", ",", "5", ")", ")", "\n", "# Train", "\n", "axes", ".", "plot", "(", "history", ".", "epoch", ",", "history", ".", "history", "[", "'acc'", "]", ",", "color", "=", "'r'", ",", "label", "=", "'Train'", ")", "\n", "axes", ".", "plot", "(", "history", ".", "epoch", ",", "history", ".", "history", "[", "'val_acc'", "]", ",", "color", "=", "'b'", ",", "label", "=", "'Val'", ")", "\n", "axes", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axes", ".", "set_ylabel", "(", "'Acc'", ")", "\n", "axes", ".", "legend", "(", ")", "\n", "plt", ".", "savefig", "(", "'acc.jpg'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "# Mean Iou", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "20", ",", "5", ")", ")", "\n", "# Train", "\n", "axes", ".", "plot", "(", "history", ".", "epoch", ",", "history", ".", "history", "[", "'mean_iou'", "]", ",", "color", "=", "'r'", ",", "label", "=", "'Train'", ")", "\n", "axes", ".", "plot", "(", "history", ".", "epoch", ",", "history", ".", "history", "[", "'val_mean_iou'", "]", ",", "color", "=", "'b'", ",", "label", "=", "'Val'", ")", "\n", "axes", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axes", ".", "set_ylabel", "(", "'MeanIoU'", ")", "\n", "axes", ".", "legend", "(", ")", "\n", "plt", ".", "savefig", "(", "'mean_iou.jpg'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "        ", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "1", ",", "3", ",", "figsize", "=", "(", "20", ",", "5", ")", ")", "\n", "# loss", "\n", "axes", "[", "0", "]", ".", "plot", "(", "history", ".", "epoch", ",", "history", ".", "history", "[", "'loss'", "]", ")", "\n", "axes", "[", "0", "]", ".", "set_title", "(", "'Train'", ")", "\n", "axes", "[", "0", "]", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axes", "[", "0", "]", ".", "set_ylabel", "(", "'Loss'", ")", "\n", "# Acc", "\n", "axes", "[", "1", "]", ".", "plot", "(", "history", ".", "epoch", ",", "history", ".", "history", "[", "'acc'", "]", ")", "\n", "axes", "[", "1", "]", ".", "set_title", "(", "'Train'", ")", "\n", "axes", "[", "1", "]", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axes", "[", "1", "]", ".", "set_ylabel", "(", "'Acc'", ")", "\n", "# Mean Iou", "\n", "axes", "[", "2", "]", ".", "plot", "(", "history", ".", "epoch", ",", "history", ".", "history", "[", "'mean_iou'", "]", ")", "\n", "axes", "[", "2", "]", ".", "set_title", "(", "'Train'", ")", "\n", "axes", "[", "2", "]", ".", "set_xlabel", "(", "'Epoch'", ")", "\n", "axes", "[", "2", "]", ".", "set_ylabel", "(", "'MeanIoU'", ")", "\n", "plt", ".", "savefig", "(", "'.jpg'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.display.show_example": [[59, 90], ["cv2.cvtColor", "tensorflow.image.resize", "predict_func.predict", "matplotlib.savefig", "matplotlib.show", "cv2.imread", "cv2.cvtColor", "tensorflow.image.resize", "metrics.miou_class", "data.decode_label", "numpy.floor().astype", "matplotlib.subplots", "axes[].imshow", "axes[].set_title", "axes[].set_title", "axes[].imshow", "axes[].set_title", "axes[].imshow", "matplotlib.subplots", "axes[].imshow", "axes[].set_title", "axes[].set_title", "axes[].imshow", "cv2.imread", "tensorflow.convert_to_tensor", "kmean.predict().reshape", "train_data.processing", "function", "tf.convert_to_tensor.numpy", "numpy.floor", "tf.convert_to_tensor.numpy", "kmean.predict", "tf.convert_to_tensor.numpy().reshape", "tf.image.resize.numpy", "tf.convert_to_tensor.numpy"], "function", ["home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.predict_func.predict", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.metrics.m_iou.miou_class", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.data.decode_label", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.GeneratorCustom.DataGenerator.processing", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.predict_func.predict"], ["", "", "def", "show_example", "(", "image", ",", "mask", ",", "model", ",", "label", ",", "inp_size", ",", "color_mode", ",", "metrics", ",", "train_data", ",", "function", "=", "None", ",", "kmean", "=", "None", ")", ":", "\n", "    ", "img", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "image", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "img", "=", "tf", ".", "image", ".", "resize", "(", "img", ",", "inp_size", ",", "method", "=", "'nearest'", ")", "\n", "pred", ",", "_pred", "=", "predict_func", ".", "predict", "(", "model", ",", "image", ",", "label", ",", "color_mode", ",", "inp_size", ")", "\n", "if", "mask", "!=", "None", ":", "\n", "        ", "msk", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "mask", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "msk", "=", "tf", ".", "image", ".", "resize", "(", "msk", ",", "inp_size", ",", "method", "=", "'nearest'", ")", "\n", "if", "function", ":", "\n", "            ", "msk", "=", "tf", ".", "convert_to_tensor", "(", "function", "(", "msk", ".", "numpy", "(", ")", ")", ")", "\n", "", "if", "kmean", ":", "\n", "            ", "y_true", "=", "kmean", ".", "predict", "(", "msk", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", ")", ".", "reshape", "(", "*", "inp_size", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "y_true", "=", "train_data", ".", "processing", "(", "msk", ".", "numpy", "(", ")", ")", "\n", "", "metrics", ".", "miou_class", "(", "y_true", ",", "_pred", ")", "\n", "y_true", "=", "decode_label", "(", "y_true", ",", "label", ")", "\n", "ground_truth", "=", "np", ".", "floor", "(", "img", ".", "numpy", "(", ")", "*", "0.7", "+", "y_true", "*", "0.3", ")", ".", "astype", "(", "'int'", ")", "\n", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "1", ",", "3", ",", "figsize", "=", "(", "12", ",", "3", ")", ")", "\n", "axes", "[", "0", "]", ".", "imshow", "(", "img", ")", "\n", "axes", "[", "0", "]", ".", "set_title", "(", "'Original Image'", ")", "\n", "axes", "[", "1", "]", ".", "set_title", "(", "'Ground truth'", ")", "\n", "axes", "[", "1", "]", ".", "imshow", "(", "ground_truth", ")", "\n", "axes", "[", "2", "]", ".", "set_title", "(", "'Prediction'", ")", "\n", "axes", "[", "2", "]", ".", "imshow", "(", "pred", ")", "\n", "", "else", ":", "\n", "        ", "fig", ",", "axes", "=", "plt", ".", "subplots", "(", "1", ",", "2", ",", "figsize", "=", "(", "12", ",", "3", ")", ")", "\n", "axes", "[", "0", "]", ".", "imshow", "(", "img", ")", "\n", "axes", "[", "0", "]", ".", "set_title", "(", "'Original Image'", ")", "\n", "axes", "[", "1", "]", ".", "set_title", "(", "'Prediction'", ")", "\n", "axes", "[", "1", "]", ".", "imshow", "(", "pred", ")", "\n", "", "plt", ".", "savefig", "(", "'predict.jpg'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.GeneratorCustom.DataGenerator.__init__": [[6, 20], ["tensorflow.keras.utils.Sequence.__init__", "numpy.random.seed", "GeneratorCustom.DataGenerator.on_epoch_end"], "methods", ["home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.metrics.m_iou.__init__", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.GeneratorCustom.DataGenerator.on_epoch_end"], ["    ", "def", "__init__", "(", "self", ",", "all_filenames", ",", "input_size", "=", "(", "256", ",", "256", ")", ",", "batch_size", "=", "32", ",", "shuffle", "=", "True", ",", "seed", "=", "123", ",", "encode", ":", "dict", "=", "None", ",", "encode_with_kmean", "=", "None", ",", "color_mode", "=", "'hsv'", ",", "function", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", "DataGenerator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "(", "encode", "!=", "None", "and", "encode_with_kmean", "==", "None", ")", "or", "(", "encode", "==", "None", "and", "encode_with_kmean", "!=", "None", ")", ",", "'Not empty !'", "\n", "assert", "color_mode", "==", "'hsv'", "or", "color_mode", "==", "'rgb'", "or", "color_mode", "==", "'gray'", "\n", "self", ".", "all_filenames", "=", "all_filenames", "\n", "self", ".", "input_size", "=", "input_size", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "self", ".", "color_mode", "=", "color_mode", "\n", "self", ".", "encode", "=", "encode", "\n", "self", ".", "function", "=", "function", "\n", "self", ".", "kmean", "=", "encode_with_kmean", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "self", ".", "on_epoch_end", "(", ")", "\n", "", "def", "processing", "(", "self", ",", "mask", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.GeneratorCustom.DataGenerator.processing": [[20, 23], ["list", "numpy.array().reshape", "map", "mask.reshape", "numpy.array", "tuple"], "methods", ["None"], ["", "def", "processing", "(", "self", ",", "mask", ")", ":", "\n", "        ", "d", "=", "list", "(", "map", "(", "lambda", "x", ":", "self", ".", "encode", "[", "tuple", "(", "x", ")", "]", ",", "mask", ".", "reshape", "(", "-", "1", ",", "3", ")", ")", ")", "\n", "return", "np", ".", "array", "(", "d", ")", ".", "reshape", "(", "*", "self", ".", "input_size", ",", "1", ")", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.GeneratorCustom.DataGenerator.__len__": [[23, 25], ["int", "numpy.floor", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "int", "(", "np", ".", "floor", "(", "len", "(", "self", ".", "all_filenames", ")", "/", "self", ".", "batch_size", ")", ")", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.GeneratorCustom.DataGenerator.__getitem__": [[25, 30], ["GeneratorCustom.DataGenerator.__data_generation"], "methods", ["home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.GeneratorCustom.DataGenerator.__data_generation"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "indexes", "=", "self", ".", "indexes", "[", "index", "*", "self", ".", "batch_size", ":", "(", "index", "+", "1", ")", "*", "self", ".", "batch_size", "]", "\n", "all_filenames_temp", "=", "[", "self", ".", "all_filenames", "[", "k", "]", "for", "k", "in", "indexes", "]", "\n", "X", ",", "Y", "=", "self", ".", "__data_generation", "(", "all_filenames_temp", ")", "\n", "return", "X", ",", "Y", "\n", "", "def", "on_epoch_end", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.GeneratorCustom.DataGenerator.on_epoch_end": [[30, 34], ["numpy.arange", "len", "numpy.random.shuffle"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ")", ":", "\n", "        ", "self", ".", "indexes", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "all_filenames", ")", ")", "\n", "if", "self", ".", "shuffle", "==", "True", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "self", ".", "indexes", ")", "\n", "", "", "def", "__data_generation", "(", "self", ",", "all_filenames_temp", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.GeneratorCustom.DataGenerator.__data_generation": [[34, 70], ["len", "numpy.empty", "enumerate", "numpy.empty", "numpy.empty", "cv2.imread", "tensorflow.image.resize", "tensorflow.cast", "cv2.imread", "cv2.cvtColor", "tensorflow.image.resize", "numpy.array", "tensorflow.cast", "cv2.cvtColor", "GeneratorCustom.DataGenerator.function", "GeneratorCustom.DataGenerator.processing", "GeneratorCustom.DataGenerator.kmean.predict().reshape", "cv2.cvtColor", "cv2.cvtColor", "tensorflow.expand_dims", "GeneratorCustom.DataGenerator.kmean.predict", "GeneratorCustom.DataGenerator.reshape"], "methods", ["home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.GeneratorCustom.DataGenerator.processing", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.predict_func.predict"], ["", "", "def", "__data_generation", "(", "self", ",", "all_filenames_temp", ")", ":", "\n", "        ", "batch", "=", "len", "(", "all_filenames_temp", ")", "\n", "if", "self", ".", "color_mode", "==", "'gray'", ":", "\n", "            ", "X", "=", "np", ".", "empty", "(", "shape", "=", "(", "batch", ",", "*", "self", ".", "input_size", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "X", "=", "np", ".", "empty", "(", "shape", "=", "(", "batch", ",", "*", "self", ".", "input_size", ",", "3", ")", ")", "\n", "", "Y", "=", "np", ".", "empty", "(", "shape", "=", "(", "batch", ",", "*", "self", ".", "input_size", ",", "1", ")", ")", "\n", "for", "i", ",", "(", "fn", ",", "label_fn", ")", "in", "enumerate", "(", "all_filenames_temp", ")", ":", "\n", "# img", "\n", "            ", "img", "=", "cv2", ".", "imread", "(", "fn", ")", "\n", "if", "self", ".", "color_mode", "==", "'hsv'", ":", "\n", "                ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2HSV", ")", "\n", "", "elif", "self", ".", "color_mode", "==", "'rgb'", ":", "\n", "                ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "", "elif", "self", ".", "color_mode", "==", "'gray'", ":", "\n", "                ", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "img", "=", "tf", ".", "expand_dims", "(", "img", ",", "axis", "=", "2", ")", "\n", "", "img", "=", "tf", ".", "image", ".", "resize", "(", "img", ",", "self", ".", "input_size", ",", "method", "=", "'nearest'", ")", "\n", "img", "=", "tf", ".", "cast", "(", "img", ",", "tf", ".", "float32", ")", "\n", "img", "/=", "255.", "\n", "\n", "#mask", "\n", "mask", "=", "cv2", ".", "imread", "(", "label_fn", ",", "0", ")", "\n", "mask", "=", "cv2", ".", "cvtColor", "(", "mask", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "mask", "=", "tf", ".", "image", ".", "resize", "(", "mask", ",", "self", ".", "input_size", ",", "method", "=", "'nearest'", ")", "\n", "mask", "=", "np", ".", "array", "(", "mask", ")", "\n", "if", "self", ".", "function", ":", "\n", "                ", "mask", "=", "self", ".", "function", "(", "mask", ")", "\n", "", "if", "self", ".", "encode", ":", "\n", "                ", "mask", "=", "self", ".", "processing", "(", "mask", ")", "\n", "", "if", "self", ".", "kmean", ":", "\n", "                ", "mask", "=", "self", ".", "kmean", ".", "predict", "(", "mask", ".", "reshape", "(", "-", "1", ",", "3", ")", ")", ".", "reshape", "(", "*", "self", ".", "input_size", ",", "1", ")", "\n", "", "mask", "=", "tf", ".", "cast", "(", "mask", ",", "tf", ".", "float32", ")", "\n", "X", "[", "i", ",", "]", "=", "img", "\n", "Y", "[", "i", ",", "]", "=", "mask", "\n", "", "return", "X", ",", "Y", "", "", "", ""]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.metrics.m_iou.__init__": [[4, 6], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "classes", ":", "int", ")", "->", "None", ":", "\n", "        ", "self", ".", "classes", "=", "classes", "\n", "", "def", "mean_iou", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.metrics.m_iou.mean_iou": [[6, 11], ["numpy.argmax", "tensorflow.keras.metrics.MeanIoU", "tensorflow.keras.metrics.MeanIoU.update_state", "tensorflow.keras.metrics.MeanIoU.result().numpy", "tensorflow.keras.metrics.MeanIoU.result"], "methods", ["None"], ["", "def", "mean_iou", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "y_pred", "=", "np", ".", "argmax", "(", "y_pred", ",", "axis", "=", "3", ")", "\n", "miou_keras", "=", "MeanIoU", "(", "num_classes", "=", "self", ".", "classes", ")", "\n", "miou_keras", ".", "update_state", "(", "y_true", ",", "y_pred", ")", "\n", "return", "miou_keras", ".", "result", "(", ")", ".", "numpy", "(", ")", "\n", "", "def", "miou_class", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.metrics.m_iou.miou_class": [[11, 19], ["numpy.argmax", "tensorflow.keras.metrics.MeanIoU", "tensorflow.keras.metrics.MeanIoU.update_state", "numpy.array().reshape", "range", "print", "numpy.array", "tensorflow.keras.metrics.MeanIoU.get_weights", "sum", "sum", "str"], "methods", ["None"], ["", "def", "miou_class", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "y_pred", "=", "np", ".", "argmax", "(", "y_pred", ",", "axis", "=", "3", ")", "\n", "miou_keras", "=", "MeanIoU", "(", "num_classes", "=", "self", ".", "classes", ")", "\n", "miou_keras", ".", "update_state", "(", "y_true", ",", "y_pred", ")", "\n", "values", "=", "np", ".", "array", "(", "miou_keras", ".", "get_weights", "(", ")", ")", ".", "reshape", "(", "self", ".", "classes", ",", "self", ".", "classes", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "classes", ")", ":", "\n", "            ", "class_iou", "=", "values", "[", "i", ",", "i", "]", "/", "(", "sum", "(", "values", "[", "i", ",", ":", "]", ")", "+", "sum", "(", "values", "[", ":", ",", "i", "]", ")", "-", "values", "[", "i", ",", "i", "]", ")", "\n", "print", "(", "f'IoU for class{str(i + 1)} is: {class_iou}'", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.data.encode_label": [[10, 18], ["numpy.unique", "dict", "dict", "mask.reshape", "open", "pickle.dump", "tuple", "enumerate", "list", "dict.items"], "function", ["None"], ["def", "encode_label", "(", "mask", ")", ":", "\n", "# input (batch, rows, cols, channels)", "\n", "    ", "colors", "=", "np", ".", "unique", "(", "mask", ".", "reshape", "(", "-", "1", ",", "3", ")", ",", "axis", "=", "0", ")", "\n", "encoder", "=", "dict", "(", "(", "tuple", "(", "j", ")", ",", "i", ")", "for", "i", ",", "j", "in", "enumerate", "(", "colors", ")", ")", "# key is tuple ", "\n", "_label", "=", "dict", "(", "(", "j", ",", "list", "(", "i", ")", ")", "for", "i", ",", "j", "in", "encoder", ".", "items", "(", ")", ")", "\n", "with", "open", "(", "'label.pickle'", ",", "'wb'", ")", "as", "handel", ":", "\n", "        ", "pickle", ".", "dump", "(", "_label", ",", "handel", ",", "protocol", "=", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "", "return", "encoder", "\n", "", "def", "encode_label_with_Kmeans", "(", "mask", ",", "classes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.data.encode_label_with_Kmeans": [[18, 30], ["sklearn.cluster.KMeans", "sklearn.cluster.KMeans.fit", "sklearn.cluster.KMeans.predict", "len", "print", "dict", "set", "open", "pickle.dump", "open", "pickle.dump", "i.tolist", "list", "zip"], "function", ["home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.predict_func.predict"], ["", "def", "encode_label_with_Kmeans", "(", "mask", ",", "classes", ")", ":", "\n", "    ", "kmean", "=", "KMeans", "(", "classes", ",", "max_iter", "=", "400", ")", "\n", "kmean", ".", "fit", "(", "mask", ")", "\n", "pred", "=", "kmean", ".", "predict", "(", "mask", ")", "\n", "classes_real", "=", "len", "(", "set", "(", "pred", ")", ")", "\n", "print", "(", "f'classes: {classes_real}'", ")", "\n", "label", "=", "dict", "(", "(", "j", ",", "i", ".", "tolist", "(", ")", ")", "for", "i", ",", "j", "in", "list", "(", "zip", "(", "mask", ",", "pred", ")", ")", ")", "# key is tuple ", "\n", "with", "open", "(", "'label.pickle'", ",", "'wb'", ")", "as", "handel", ":", "\n", "        ", "pickle", ".", "dump", "(", "label", ",", "handel", ",", "protocol", "=", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "", "with", "open", "(", "'kmean.pickle'", ",", "'wb'", ")", "as", "handle", ":", "\n", "        ", "pickle", ".", "dump", "(", "kmean", ",", "handle", ",", "protocol", "=", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "", "return", "kmean", "\n", "", "def", "decode_label", "(", "predict", ",", "label", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.data.decode_label": [[30, 34], ["list", "numpy.array().reshape", "map", "predict.reshape", "numpy.array", "int"], "function", ["None"], ["", "def", "decode_label", "(", "predict", ",", "label", ")", ":", "\n", "    ", "d", "=", "list", "(", "map", "(", "lambda", "x", ":", "label", "[", "int", "(", "x", ")", "]", ",", "predict", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ")", "\n", "img", "=", "np", ".", "array", "(", "d", ")", ".", "reshape", "(", "predict", ".", "shape", "[", "0", "]", ",", "predict", ".", "shape", "[", "1", "]", ",", "3", ")", "\n", "return", "img", "\n", "", "def", "DataLoader", "(", "all_train_filename", ",", "all_mask", ",", "all_valid_filename", "=", "None", ",", "input_size", "=", "(", "256", ",", "256", ")", ",", "batch_size", "=", "4", ",", "shuffle", "=", "True", ",", "seed", "=", "123", ",", "color_mode", "=", "'hsv'", ",", "function", "=", "None", ",", "encode_with_kmeans", "=", "False", ",", "classes", "=", "0", ")", "->", "None", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.data.DataLoader": [[34, 52], ["numpy.array", "GeneratorCustom.DataGenerator", "sklearn.utils.shuffle", "tensorflow.image.resize", "function", "data.encode_label", "GeneratorCustom.DataGenerator", "cv2.cvtColor", "data.encode_label_with_Kmeans", "cv2.imread", "function.reshape"], "function", ["home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.data.encode_label", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.data.encode_label_with_Kmeans"], ["", "def", "DataLoader", "(", "all_train_filename", ",", "all_mask", ",", "all_valid_filename", "=", "None", ",", "input_size", "=", "(", "256", ",", "256", ")", ",", "batch_size", "=", "4", ",", "shuffle", "=", "True", ",", "seed", "=", "123", ",", "color_mode", "=", "'hsv'", ",", "function", "=", "None", ",", "encode_with_kmeans", "=", "False", ",", "classes", "=", "0", ")", "->", "None", ":", "\n", "    ", "mask_folder", "=", "sklearn", ".", "utils", ".", "shuffle", "(", "all_mask", ",", "random_state", "=", "47", ")", "[", ":", "16", "]", "\n", "mask", "=", "[", "tf", ".", "image", ".", "resize", "(", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "img", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", ",", "(", "128", ",", "128", ")", ",", "method", "=", "'nearest'", ")", "for", "img", "in", "mask_folder", "]", "\n", "mask", "=", "np", ".", "array", "(", "mask", ")", "\n", "kmean", "=", "None", "\n", "encode", "=", "None", "\n", "if", "function", "and", "encode_with_kmeans", "==", "False", ":", "\n", "        ", "mask", "=", "function", "(", "mask", ")", "\n", "", "if", "encode_with_kmeans", "==", "False", ":", "\n", "        ", "encode", "=", "encode_label", "(", "mask", ")", "\n", "", "elif", "encode_with_kmeans", "==", "True", ":", "\n", "        ", "kmean", "=", "encode_label_with_Kmeans", "(", "mask", ".", "reshape", "(", "-", "1", ",", "3", ")", ",", "classes", ")", "\n", "", "train", "=", "DataGenerator", "(", "all_train_filename", ",", "input_size", ",", "batch_size", ",", "shuffle", ",", "seed", ",", "encode", ",", "kmean", ",", "color_mode", ",", "function", ")", "\n", "if", "all_valid_filename", "==", "None", ":", "\n", "        ", "return", "train", ",", "None", "\n", "", "else", ":", "\n", "        ", "valid", "=", "DataGenerator", "(", "all_valid_filename", ",", "input_size", ",", "batch_size", ",", "shuffle", ",", "seed", ",", "encode", ",", "kmean", ",", "color_mode", ",", "function", ")", "\n", "return", "train", ",", "valid", "", "", "", ""]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.predict_func.predict": [[5, 23], ["cv2.imread", "tensorflow.image.resize", "tensorflow.cast", "tensorflow.expand_dims", "model", "numpy.argmax", "data.decode_label", "cv2.cvtColor", "tensorflow.squeeze", "numpy.floor().astype", "cv2.cvtColor", "tensorflow.cast", "cv2.cvtColor", "tensorflow.expand_dims", "tensorflow.image.resize", "numpy.floor", "cv2.cvtColor"], "function", ["home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.data.decode_label"], ["def", "predict", "(", "model", ",", "image_test", ",", "label", ",", "color_mode", ",", "size", ")", ":", "\n", "    ", "image", "=", "cv2", ".", "imread", "(", "image_test", ")", "\n", "if", "color_mode", "==", "'hsv'", ":", "\n", "        ", "image_cvt", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2HSV", ")", "\n", "", "elif", "color_mode", "==", "'rgb'", ":", "\n", "        ", "image_cvt", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "", "elif", "color_mode", "==", "'gray'", ":", "\n", "        ", "image_cvt", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "image_cvt", "=", "tf", ".", "expand_dims", "(", "image_cvt", ",", "axis", "=", "2", ")", "\n", "", "image_cvt", "=", "tf", ".", "image", ".", "resize", "(", "image_cvt", ",", "size", ",", "method", "=", "'nearest'", ")", "\n", "image_cvt", "=", "tf", ".", "cast", "(", "image_cvt", ",", "tf", ".", "float32", ")", "\n", "image_norm", "=", "image_cvt", "/", "255.", "\n", "image_norm", "=", "tf", ".", "expand_dims", "(", "image_norm", ",", "axis", "=", "0", ")", "\n", "new_image", "=", "model", "(", "image_norm", ")", "\n", "image_argmax", "=", "np", ".", "argmax", "(", "tf", ".", "squeeze", "(", "new_image", ",", "axis", "=", "0", ")", ",", "axis", "=", "2", ")", "\n", "image_decode", "=", "decode_label", "(", "image_argmax", ",", "label", ")", "\n", "predict_img", "=", "tf", ".", "cast", "(", "tf", ".", "image", ".", "resize", "(", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2RGB", ")", ",", "size", ",", "method", "=", "'nearest'", ")", ",", "tf", ".", "float32", ")", "*", "0.7", "+", "image_decode", "*", "0.3", "\n", "return", "np", ".", "floor", "(", "predict_img", ")", ".", "astype", "(", "'int'", ")", ",", "new_image", "", "", ""]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.down_block": [[7, 18], ["Conv2D", "BatchNormalization", "LeakyReLU", "Conv2D", "BatchNormalization", "LeakyReLU", "MaxPooling2D"], "function", ["None"], ["def", "down_block", "(", "x", ",", "filters", ",", "use_maxpool", "=", "True", ")", ":", "\n", "    ", "x", "=", "Conv2D", "(", "filters", ",", "3", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "filters", ",", "3", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", ")", "(", "x", ")", "\n", "if", "use_maxpool", "==", "True", ":", "\n", "        ", "return", "MaxPooling2D", "(", "strides", "=", "(", "2", ",", "2", ")", ")", "(", "x", ")", ",", "x", "\n", "", "else", ":", "\n", "        ", "return", "x", "\n", "", "", "def", "up_block", "(", "x", ",", "y", ",", "filters", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.up_block": [[18, 28], ["UpSampling2D", "Concatenate", "Conv2D", "BatchNormalization", "LeakyReLU", "Conv2D", "BatchNormalization", "LeakyReLU"], "function", ["None"], ["", "", "def", "up_block", "(", "x", ",", "y", ",", "filters", ")", ":", "\n", "    ", "x", "=", "UpSampling2D", "(", ")", "(", "x", ")", "\n", "x", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "x", ",", "y", "]", ")", "\n", "x", "=", "Conv2D", "(", "filters", ",", "3", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "filters", ",", "3", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", ")", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.Unet": [[29, 48], ["Input", "model.down_block", "model.down_block", "model.down_block", "model.down_block", "model.down_block", "model.up_block", "model.up_block", "model.up_block", "model.up_block", "tensorflow.keras.models.Model", "models.Model.summary", "Dropout", "Conv2D"], "function", ["home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.down_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.down_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.down_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.down_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.down_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.up_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.up_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.up_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model.up_block"], ["", "def", "Unet", "(", "input_size", "=", "(", "256", ",", "256", ",", "3", ")", ",", "*", ",", "classes", ",", "dropout", ")", ":", "\n", "    ", "filter", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "1024", "]", "\n", "# encode", "\n", "input", "=", "Input", "(", "shape", "=", "input_size", ")", "\n", "x", ",", "temp1", "=", "down_block", "(", "input", ",", "filter", "[", "0", "]", ")", "\n", "x", ",", "temp2", "=", "down_block", "(", "x", ",", "filter", "[", "1", "]", ")", "\n", "x", ",", "temp3", "=", "down_block", "(", "x", ",", "filter", "[", "2", "]", ")", "\n", "x", ",", "temp4", "=", "down_block", "(", "x", ",", "filter", "[", "3", "]", ")", "\n", "x", "=", "down_block", "(", "x", ",", "filter", "[", "4", "]", ",", "use_maxpool", "=", "False", ")", "\n", "# decode ", "\n", "x", "=", "up_block", "(", "x", ",", "temp4", ",", "filter", "[", "3", "]", ")", "\n", "x", "=", "up_block", "(", "x", ",", "temp3", ",", "filter", "[", "2", "]", ")", "\n", "x", "=", "up_block", "(", "x", ",", "temp2", ",", "filter", "[", "1", "]", ")", "\n", "x", "=", "up_block", "(", "x", ",", "temp1", ",", "filter", "[", "0", "]", ")", "\n", "x", "=", "Dropout", "(", "dropout", ")", "(", "x", ")", "\n", "output", "=", "Conv2D", "(", "classes", ",", "1", ",", "activation", "=", "'softmax'", ")", "(", "x", ")", "\n", "model", "=", "models", ".", "Model", "(", "input", ",", "output", ",", "name", "=", "'unet'", ")", "\n", "model", ".", "summary", "(", ")", "\n", "return", "model", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_resetnet50_unet.decoder_block": [[7, 18], ["UpSampling2D", "Concatenate", "Conv2D", "BatchNormalization", "LeakyReLU", "Conv2D", "BatchNormalization", "LeakyReLU"], "function", ["None"], ["def", "decoder_block", "(", "x", ",", "y", ",", "filters", ")", ":", "\n", "    ", "x", "=", "UpSampling2D", "(", ")", "(", "x", ")", "\n", "x", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "x", ",", "y", "]", ")", "\n", "x", "=", "Conv2D", "(", "filters", ",", "3", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "filters", ",", "3", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", ")", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_resetnet50_unet.resnet50_unet": [[19, 44], ["Input", "tensorflow.keras.applications.ResNet50", "model_resetnet50_unet.decoder_block", "model_resetnet50_unet.decoder_block", "model_resetnet50_unet.decoder_block", "model_resetnet50_unet.decoder_block", "tensorflow.keras.models.Model", "tensorflow.keras.applications.ResNet50.get_layer", "tensorflow.keras.applications.ResNet50.get_layer", "tensorflow.keras.applications.ResNet50.get_layer", "tensorflow.keras.applications.ResNet50.get_layer", "tensorflow.keras.applications.ResNet50.get_layer", "Dropout", "Conv2D"], "function", ["home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_resetnet50_unet.decoder_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_resetnet50_unet.decoder_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_resetnet50_unet.decoder_block", "home.repos.pwc.inspect_result.Nguyendat-bit_U-net.None.model_resetnet50_unet.decoder_block"], ["", "def", "resnet50_unet", "(", "input_shape", ",", "*", ",", "classes", ",", "dropout", ")", ":", "\n", "    ", "\"\"\" Input \"\"\"", "\n", "inputs", "=", "Input", "(", "input_shape", ")", "\n", "\n", "resnet50", "=", "ResNet50", "(", "include_top", "=", "False", ",", "weights", "=", "\"imagenet\"", ",", "input_tensor", "=", "inputs", ")", "\n", "\n", "\"\"\" Encoder \"\"\"", "\n", "s1", "=", "resnet50", ".", "get_layer", "(", "\"input_1\"", ")", ".", "output", "\n", "s2", "=", "resnet50", ".", "get_layer", "(", "\"conv1_relu\"", ")", ".", "output", "\n", "s3", "=", "resnet50", ".", "get_layer", "(", "\"conv2_block3_out\"", ")", ".", "output", "\n", "s4", "=", "resnet50", ".", "get_layer", "(", "\"conv3_block4_out\"", ")", ".", "output", "\n", "\n", "x", "=", "resnet50", ".", "get_layer", "(", "\"conv4_block6_out\"", ")", ".", "output", "\n", "\n", "\"\"\" Decoder \"\"\"", "\n", "x", "=", "decoder_block", "(", "x", ",", "s4", ",", "512", ")", "\n", "x", "=", "decoder_block", "(", "x", ",", "s3", ",", "256", ")", "\n", "x", "=", "decoder_block", "(", "x", ",", "s2", ",", "128", ")", "\n", "x", "=", "decoder_block", "(", "x", ",", "s1", ",", "64", ")", "\n", "\n", "x", "=", "Dropout", "(", "dropout", ")", "(", "x", ")", "\n", "outputs", "=", "Conv2D", "(", "classes", ",", "1", ",", "activation", "=", "\"softmax\"", ")", "(", "x", ")", "\n", "\n", "model", "=", "Model", "(", "inputs", ",", "outputs", ",", "name", "=", "\"ResNet50_U-Net\"", ")", "\n", "return", "model", "\n", "\n"]]}