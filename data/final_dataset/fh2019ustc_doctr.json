{"home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.Ffn.__init__": [[11, 19], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "act_layer", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "hidden_features", "=", "None", ",", "out_features", "=", "None", ",", "act_layer", "=", "nn", ".", "GELU", ",", "drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "out_features", "or", "in_features", "\n", "hidden_features", "=", "hidden_features", "or", "in_features", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", ",", "hidden_features", ")", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_features", ",", "out_features", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.Ffn.forward": [[20, 27], ["IllTr.Ffn.fc1", "IllTr.Ffn.act", "IllTr.Ffn.drop", "IllTr.Ffn.fc2", "IllTr.Ffn.drop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.Attention.__init__": [[30, 40], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", "=", "8", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "attn_drop", "=", "0.", ",", "proj_drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.Attention.forward": [[41, 64], ["IllTr.Attention.qkv().reshape().permute", "IllTr.Attention.softmax", "IllTr.Attention.attn_drop", "IllTr.Attention.proj", "IllTr.Attention.proj_drop", "task_embed.reshape.reshape.reshape", "IllTr.Attention.qkv().reshape", "k.transpose", "IllTr.Attention.qkv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "task_embed", "=", "None", ",", "level", "=", "0", ")", ":", "\n", "        ", "N", ",", "L", ",", "D", "=", "x", ".", "shape", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", ".", "reshape", "(", "N", ",", "L", ",", "3", ",", "self", ".", "num_heads", ",", "D", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "\n", "q", ",", "k", ",", "v", "=", "qkv", "[", "0", "]", ",", "qkv", "[", "1", "]", ",", "qkv", "[", "2", "]", "# make torchscript happy (cannot use tensor as tuple)", "\n", "\n", "# for decoder's task_embedding of different levels of attention layers", "\n", "if", "task_embed", "!=", "None", ":", "\n", "            ", "_N", ",", "_H", ",", "_L", ",", "_D", "=", "q", ".", "shape", "\n", "task_embed", "=", "task_embed", ".", "reshape", "(", "1", ",", "_H", ",", "_L", ",", "_D", ")", "\n", "if", "level", "==", "1", ":", "\n", "                ", "q", "+=", "task_embed", "\n", "k", "+=", "task_embed", "\n", "", "if", "level", "==", "2", ":", "\n", "                ", "q", "+=", "task_embed", "\n", "\n", "", "", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "*", "self", ".", "scale", "\n", "attn", "=", "attn", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "N", ",", "L", ",", "D", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.EncoderLayer.__init__": [[67, 76], ["torch.Module.__init__", "norm_layer", "IllTr.Attention", "norm_layer", "int", "IllTr.Ffn"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", ",", "ffn_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "ffn_hidden_dim", "=", "int", "(", "dim", "*", "ffn_ratio", ")", "\n", "self", ".", "ffn", "=", "Ffn", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "ffn_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.EncoderLayer.forward": [[77, 81], ["IllTr.EncoderLayer.attn", "IllTr.EncoderLayer.ffn", "IllTr.EncoderLayer.norm1", "IllTr.EncoderLayer.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "ffn", "(", "self", ".", "norm2", "(", "x", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.DecoderLayer.__init__": [[84, 96], ["torch.Module.__init__", "norm_layer", "IllTr.Attention", "norm_layer", "IllTr.Attention", "norm_layer", "int", "IllTr.Ffn"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_heads", ",", "ffn_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop", "=", "0.", ",", "attn_drop", "=", "0.", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn1", "=", "Attention", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn2", "=", "Attention", "(", "\n", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "attn_drop", "=", "attn_drop", ",", "proj_drop", "=", "drop", ")", "\n", "self", ".", "norm3", "=", "norm_layer", "(", "dim", ")", "\n", "ffn_hidden_dim", "=", "int", "(", "dim", "*", "ffn_ratio", ")", "\n", "self", ".", "ffn", "=", "Ffn", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "ffn_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.DecoderLayer.forward": [[97, 102], ["IllTr.DecoderLayer.attn1", "IllTr.DecoderLayer.attn2", "IllTr.DecoderLayer.ffn", "IllTr.DecoderLayer.norm1", "IllTr.DecoderLayer.norm2", "IllTr.DecoderLayer.norm3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "task_embed", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "attn1", "(", "self", ".", "norm1", "(", "x", ")", ",", "task_embed", "=", "task_embed", ",", "level", "=", "1", ")", "\n", "x", "=", "x", "+", "self", ".", "attn2", "(", "self", ".", "norm2", "(", "x", ")", ",", "task_embed", "=", "task_embed", ",", "level", "=", "2", ")", "\n", "x", "=", "x", "+", "self", ".", "ffn", "(", "self", ".", "norm3", "(", "x", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.ResBlock.__init__": [[105, 114], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "\n", "padding", "=", "2", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "InstanceNorm2d", "(", "channels", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "\n", "padding", "=", "2", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "InstanceNorm2d", "(", "channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.ResBlock.forward": [[115, 129], ["IllTr.ResBlock.conv1", "IllTr.ResBlock.bn1", "IllTr.ResBlock.relu", "IllTr.ResBlock.conv2", "IllTr.ResBlock.bn2", "IllTr.ResBlock.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.Head.__init__": [[132, 139], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.ReLU", "torch.ReLU", "IllTr.ResBlock"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "Head", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "InstanceNorm2d", "(", "out_channels", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "resblock", "=", "ResBlock", "(", "out_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.Head.forward": [[140, 148], ["IllTr.Head.conv1", "IllTr.Head.bn1", "IllTr.Head.relu", "IllTr.Head.resblock"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "resblock", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.PatchEmbed.__init__": [[155, 159], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["def", "__init__", "(", "self", ",", "patch_size", "=", "1", ",", "in_channels", "=", "64", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "dim", "=", "self", ".", "patch_size", "**", "2", "*", "in_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.PatchEmbed.forward": [[160, 174], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "x[].flatten", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "ori_shape", "=", "x", ".", "shape", "\n", "\n", "p", "=", "self", ".", "patch_size", "\n", "num_patches", "=", "(", "H", "//", "p", ")", "*", "(", "W", "//", "p", ")", "\n", "out", "=", "torch", ".", "zeros", "(", "(", "N", ",", "num_patches", ",", "self", ".", "dim", ")", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "i", ",", "j", "=", "0", ",", "0", "\n", "for", "k", "in", "range", "(", "num_patches", ")", ":", "\n", "            ", "if", "i", "+", "p", ">", "W", ":", "\n", "                ", "i", "=", "0", "\n", "j", "+=", "p", "\n", "", "out", "[", ":", ",", "k", ",", ":", "]", "=", "x", "[", ":", ",", ":", ",", "i", ":", "i", "+", "p", ",", "j", ":", "j", "+", "p", "]", ".", "flatten", "(", "1", ")", "\n", "i", "+=", "p", "\n", "", "return", "out", ",", "ori_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.DePatchEmbed.__init__": [[181, 186], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["def", "__init__", "(", "self", ",", "patch_size", "=", "1", ",", "in_channels", "=", "64", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "num_patches", "=", "None", "\n", "self", ".", "dim", "=", "self", ".", "patch_size", "**", "2", "*", "in_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.DePatchEmbed.forward": [[187, 200], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "x[].reshape", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to"], ["", "def", "forward", "(", "self", ",", "x", ",", "ori_shape", ")", ":", "\n", "        ", "N", ",", "num_patches", ",", "dim", "=", "x", ".", "shape", "\n", "_", ",", "C", ",", "H", ",", "W", "=", "ori_shape", "\n", "p", "=", "self", ".", "patch_size", "\n", "out", "=", "torch", ".", "zeros", "(", "ori_shape", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "i", ",", "j", "=", "0", ",", "0", "\n", "for", "k", "in", "range", "(", "num_patches", ")", ":", "\n", "            ", "if", "i", "+", "p", ">", "W", ":", "\n", "                ", "i", "=", "0", "\n", "j", "+=", "p", "\n", "", "out", "[", ":", ",", ":", ",", "i", ":", "i", "+", "p", ",", "j", ":", "j", "+", "p", "]", "=", "x", "[", ":", ",", "k", ",", ":", "]", ".", "reshape", "(", "N", ",", "C", ",", "p", ",", "p", ")", "\n", "i", "+=", "p", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.Tail.__init__": [[203, 206], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "Tail", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "output", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.Tail.forward": [[207, 210], ["IllTr.Tail.output"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "output", "(", "x", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.IllTr_Net.__init__": [[216, 251], ["torch.Module.__init__", "IllTr.Head", "IllTr.PatchEmbed", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "IllTr.DePatchEmbed", "IllTr.Tail", "torch.Hardtanh", "torch.Hardtanh", "timm.models.layers.trunc_normal_", "IllTr.IllTr_Net.apply", "RuntimeError", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "int", "IllTr.EncoderLayer", "IllTr.DecoderLayer", "range", "range"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["def", "__init__", "(", "self", ",", "patch_size", "=", "1", ",", "in_channels", "=", "3", ",", "mid_channels", "=", "16", ",", "num_classes", "=", "1000", ",", "depth", "=", "12", ",", "\n", "num_heads", "=", "8", ",", "ffn_ratio", "=", "4.", ",", "qkv_bias", "=", "False", ",", "qk_scale", "=", "None", ",", "drop_rate", "=", "0.", ",", "attn_drop_rate", "=", "0.", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", "IllTr_Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "embed_dim", "=", "patch_size", "*", "patch_size", "*", "mid_channels", "\n", "self", ".", "head", "=", "Head", "(", "in_channels", ",", "mid_channels", ")", "\n", "self", ".", "patch_embedding", "=", "PatchEmbed", "(", "patch_size", "=", "patch_size", ",", "in_channels", "=", "mid_channels", ")", "\n", "self", ".", "embed_dim", "=", "self", ".", "patch_embedding", ".", "dim", "\n", "if", "self", ".", "embed_dim", "%", "num_heads", "!=", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Embedding dim must be devided by numbers of heads\"", ")", "\n", "\n", "", "self", ".", "pos_embed", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "(", "128", "//", "patch_size", ")", "**", "2", ",", "self", ".", "embed_dim", ")", ")", "\n", "self", ".", "task_embed", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "6", ",", "1", ",", "(", "128", "//", "patch_size", ")", "**", "2", ",", "self", ".", "embed_dim", ")", ")", "\n", "\n", "self", ".", "encoder", "=", "nn", ".", "ModuleList", "(", "[", "\n", "EncoderLayer", "(", "\n", "dim", "=", "self", ".", "embed_dim", ",", "num_heads", "=", "num_heads", ",", "ffn_ratio", "=", "ffn_ratio", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "attn_drop", "=", "attn_drop_rate", ",", "norm_layer", "=", "norm_layer", ")", "\n", "for", "_", "in", "range", "(", "depth", ")", "]", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "ModuleList", "(", "[", "\n", "DecoderLayer", "(", "\n", "dim", "=", "self", ".", "embed_dim", ",", "num_heads", "=", "num_heads", ",", "ffn_ratio", "=", "ffn_ratio", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop", "=", "drop_rate", ",", "attn_drop", "=", "attn_drop_rate", ",", "norm_layer", "=", "norm_layer", ")", "\n", "for", "_", "in", "range", "(", "depth", ")", "]", ")", "\n", "\n", "self", ".", "de_patch_embedding", "=", "DePatchEmbed", "(", "patch_size", "=", "patch_size", ",", "in_channels", "=", "mid_channels", ")", "\n", "# tail", "\n", "self", ".", "tail", "=", "Tail", "(", "int", "(", "mid_channels", ")", ",", "in_channels", ")", "\n", "\n", "self", ".", "acf", "=", "nn", ".", "Hardtanh", "(", "0", ",", "1", ")", "\n", "\n", "trunc_normal_", "(", "self", ".", "pos_embed", ",", "std", "=", ".02", ")", "\n", "self", ".", "apply", "(", "self", ".", "_init_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.IllTr_Net._init_weights": [[252, 260], ["isinstance", "timm.models.layers.trunc_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "_init_weights", "(", "self", ",", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".02", ")", "\n", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.IllTr_Net.forward": [[261, 277], ["IllTr.IllTr_Net.head", "IllTr.IllTr_Net.patch_embedding", "IllTr.IllTr_Net.de_patch_embedding", "IllTr.IllTr_Net.tail", "IllTr.IllTr_Net.acf", "blk", "blk"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", ",", "ori_shape", "=", "self", ".", "patch_embedding", "(", "x", ")", "\n", "x", "=", "x", "+", "self", ".", "pos_embed", "[", ":", ",", ":", "x", ".", "shape", "[", "1", "]", "]", "\n", "\n", "for", "blk", "in", "self", ".", "encoder", ":", "\n", "            ", "x", "=", "blk", "(", "x", ")", "\n", "\n", "", "for", "blk", "in", "self", ".", "decoder", ":", "\n", "            ", "x", "=", "blk", "(", "x", ",", "self", ".", "task_embed", "[", "0", ",", ":", ",", ":", "x", ".", "shape", "[", "1", "]", "]", ")", "\n", "\n", "", "x", "=", "self", ".", "de_patch_embedding", "(", "x", ",", "ori_shape", ")", "\n", "x", "=", "self", ".", "tail", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "acf", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.IllTr": [[279, 285], ["IllTr.IllTr_Net", "functools.partial"], "function", ["None"], ["", "", "def", "IllTr", "(", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "IllTr_Net", "(", "\n", "patch_size", "=", "4", ",", "depth", "=", "6", ",", "num_heads", "=", "8", ",", "ffn_ratio", "=", "4", ",", "qkv_bias", "=", "True", ",", "norm_layer", "=", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", ",", "\n", "**", "kwargs", ")", "\n", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference.GeoTr_Seg.__init__": [[21, 25], ["torch.Module.__init__", "seg.U2NETP", "GeoTr.GeoTr.GeoTr"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "GeoTr_Seg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "msk", "=", "U2NETP", "(", "3", ",", "1", ")", "\n", "self", ".", "GeoTr", "=", "GeoTr", "(", "num_attn_layers", "=", "6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference.GeoTr_Seg.forward": [[26, 35], ["inference.GeoTr_Seg.msk", "inference.GeoTr_Seg.GeoTr"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "msk", ",", "_1", ",", "_2", ",", "_3", ",", "_4", ",", "_5", ",", "_6", "=", "self", ".", "msk", "(", "x", ")", "\n", "msk", "=", "(", "msk", ">", "0.5", ")", ".", "float", "(", ")", "\n", "x", "=", "msk", "*", "x", "\n", "\n", "bm", "=", "self", ".", "GeoTr", "(", "x", ")", "\n", "bm", "=", "(", "2", "*", "(", "bm", "/", "286.8", ")", "-", "1", ")", "*", "0.99", "\n", "\n", "return", "bm", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference.reload_model": [[37, 50], ["bool", "model.state_dict", "torch.load", "torch.load", "torch.load", "print", "print", "model.state_dict.update", "model.load_state_dict", "len", "len", "torch.load.keys", "torch.load.items", "torch.load.keys"], "function", ["None"], ["", "", "def", "reload_model", "(", "model", ",", "path", "=", "\"\"", ")", ":", "\n", "    ", "if", "not", "bool", "(", "path", ")", ":", "\n", "        ", "return", "model", "\n", "", "else", ":", "\n", "        ", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "path", ",", "map_location", "=", "'cuda:0'", ")", "\n", "print", "(", "len", "(", "pretrained_dict", ".", "keys", "(", ")", ")", ")", "\n", "pretrained_dict", "=", "{", "k", "[", "7", ":", "]", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "[", "7", ":", "]", "in", "model_dict", "}", "\n", "print", "(", "len", "(", "pretrained_dict", ".", "keys", "(", ")", ")", ")", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference.reload_segmodel": [[52, 65], ["bool", "model.state_dict", "torch.load", "torch.load", "torch.load", "print", "print", "model.state_dict.update", "model.load_state_dict", "len", "len", "torch.load.keys", "torch.load.items", "torch.load.keys"], "function", ["None"], ["", "", "def", "reload_segmodel", "(", "model", ",", "path", "=", "\"\"", ")", ":", "\n", "    ", "if", "not", "bool", "(", "path", ")", ":", "\n", "        ", "return", "model", "\n", "", "else", ":", "\n", "        ", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "path", ",", "map_location", "=", "'cuda:0'", ")", "\n", "print", "(", "len", "(", "pretrained_dict", ".", "keys", "(", ")", ")", ")", "\n", "pretrained_dict", "=", "{", "k", "[", "6", ":", "]", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "[", "6", ":", "]", "in", "model_dict", "}", "\n", "print", "(", "len", "(", "pretrained_dict", ".", "keys", "(", ")", ")", ")", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference.rec": [[67, 120], ["os.listdir", "GeoTr_Seg().cuda", "inference.reload_segmodel", "inference.reload_model", "IllTr.IllTr().cuda", "inference.reload_model", "GeoTr_Seg().cuda.eval", "IllTr().cuda.eval", "os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "cv2.resize", "torch.from_numpy().float().unsqueeze.transpose", "torch.from_numpy().float().unsqueeze", "torch.from_numpy().float().unsqueeze", "torch.from_numpy().float().unsqueeze", "print", "inference.GeoTr_Seg", "IllTr.IllTr", "img_path.split", "torch.no_grad", "torch.no_grad", "torch.no_grad", "GeoTr_Seg().cuda.", "bm.cpu.cpu", "cv2.resize", "cv2.resize", "cv2.blur", "cv2.blur", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.from_numpy().unsqueeze", "torch.grid_sample", "[].astype", "cv2.imwrite", "numpy.array", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float().unsqueeze.cuda", "bm[].numpy", "bm[].numpy", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "torch.from_numpy().permute().unsqueeze().float", "inference_ill.rec_ill", "PIL.Image.open", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.stack", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute().unsqueeze", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference.reload_segmodel", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference.reload_model", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference.reload_model", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.IllTr.IllTr", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference_ill.rec_ill"], ["", "", "def", "rec", "(", "opt", ")", ":", "\n", "# print(torch.__version__) # 1.5.1", "\n", "    ", "img_list", "=", "os", ".", "listdir", "(", "opt", ".", "distorrted_path", ")", "# distorted images list", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "gsave_path", ")", ":", "# create save path", "\n", "        ", "os", ".", "mkdir", "(", "opt", ".", "gsave_path", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "isave_path", ")", ":", "# create save path", "\n", "        ", "os", ".", "mkdir", "(", "opt", ".", "isave_path", ")", "\n", "\n", "", "GeoTr_Seg_model", "=", "GeoTr_Seg", "(", ")", ".", "cuda", "(", ")", "\n", "# reload segmentation model", "\n", "reload_segmodel", "(", "GeoTr_Seg_model", ".", "msk", ",", "opt", ".", "Seg_path", ")", "\n", "# reload geometric unwarping model", "\n", "reload_model", "(", "GeoTr_Seg_model", ".", "GeoTr", ",", "opt", ".", "GeoTr_path", ")", "\n", "\n", "IllTr_model", "=", "IllTr", "(", ")", ".", "cuda", "(", ")", "\n", "# reload illumination rectification model", "\n", "reload_model", "(", "IllTr_model", ",", "opt", ".", "IllTr_path", ")", "\n", "\n", "# To eval mode", "\n", "GeoTr_Seg_model", ".", "eval", "(", ")", "\n", "IllTr_model", ".", "eval", "(", ")", "\n", "\n", "for", "img_path", "in", "img_list", ":", "\n", "        ", "name", "=", "img_path", ".", "split", "(", "'.'", ")", "[", "-", "2", "]", "# image name", "\n", "\n", "img_path", "=", "opt", ".", "distorrted_path", "+", "img_path", "# read image and to tensor", "\n", "im_ori", "=", "np", ".", "array", "(", "Image", ".", "open", "(", "img_path", ")", ")", "[", ":", ",", ":", ",", ":", "3", "]", "/", "255.", "\n", "h", ",", "w", ",", "_", "=", "im_ori", ".", "shape", "\n", "im", "=", "cv2", ".", "resize", "(", "im_ori", ",", "(", "288", ",", "288", ")", ")", "\n", "im", "=", "im", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "im", "=", "torch", ".", "from_numpy", "(", "im", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "# geometric unwarping", "\n", "            ", "bm", "=", "GeoTr_Seg_model", "(", "im", ".", "cuda", "(", ")", ")", "\n", "bm", "=", "bm", ".", "cpu", "(", ")", "\n", "bm0", "=", "cv2", ".", "resize", "(", "bm", "[", "0", ",", "0", "]", ".", "numpy", "(", ")", ",", "(", "w", ",", "h", ")", ")", "# x flow", "\n", "bm1", "=", "cv2", ".", "resize", "(", "bm", "[", "0", ",", "1", "]", ".", "numpy", "(", ")", ",", "(", "w", ",", "h", ")", ")", "# y flow", "\n", "bm0", "=", "cv2", ".", "blur", "(", "bm0", ",", "(", "3", ",", "3", ")", ")", "\n", "bm1", "=", "cv2", ".", "blur", "(", "bm1", ",", "(", "3", ",", "3", ")", ")", "\n", "lbl", "=", "torch", ".", "from_numpy", "(", "np", ".", "stack", "(", "[", "bm0", ",", "bm1", "]", ",", "axis", "=", "2", ")", ")", ".", "unsqueeze", "(", "0", ")", "# h * w * 2", "\n", "\n", "out", "=", "F", ".", "grid_sample", "(", "torch", ".", "from_numpy", "(", "im_ori", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", ".", "float", "(", ")", ",", "lbl", ",", "align_corners", "=", "True", ")", "\n", "img_geo", "=", "(", "(", "out", "[", "0", "]", "*", "255", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "numpy", "(", ")", ")", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "cv2", ".", "imwrite", "(", "opt", ".", "gsave_path", "+", "name", "+", "'_geo'", "+", "'.png'", ",", "img_geo", ")", "# save", "\n", "\n", "# illumination rectification", "\n", "if", "opt", ".", "ill_rec", ":", "\n", "                ", "ill_savep", "=", "opt", ".", "isave_path", "+", "name", "+", "'_ill'", "+", "'.png'", "\n", "rec_ill", "(", "IllTr_model", ",", "img_geo", ",", "saveRecPath", "=", "ill_savep", ")", "\n", "\n", "", "", "print", "(", "'Done: '", ",", "img_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference.main": [[122, 135], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "inference.rec"], "function", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference.rec"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--distorrted_path'", ",", "default", "=", "'./distorted/'", ")", "\n", "parser", ".", "add_argument", "(", "'--gsave_path'", ",", "default", "=", "'./geo_rec/'", ")", "\n", "parser", ".", "add_argument", "(", "'--isave_path'", ",", "default", "=", "'./ill_rec/'", ")", "\n", "parser", ".", "add_argument", "(", "'--Seg_path'", ",", "default", "=", "'./model_pretrained/seg.pth'", ")", "\n", "parser", ".", "add_argument", "(", "'--GeoTr_path'", ",", "default", "=", "'./model_pretrained/geotr.pth'", ")", "\n", "parser", ".", "add_argument", "(", "'--IllTr_path'", ",", "default", "=", "'./model_pretrained/illtr.pth'", ")", "\n", "parser", ".", "add_argument", "(", "'--ill_rec'", ",", "default", "=", "False", ")", "\n", "\n", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "rec", "(", "opt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.extractor.ResidualBlock.__init__": [[7, 46], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "norm_fn", "=", "'group'", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "stride", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "num_groups", "=", "planes", "//", "8", "\n", "\n", "if", "norm_fn", "==", "'group'", ":", "\n", "            ", "self", ".", "norm1", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "num_groups", ",", "num_channels", "=", "planes", ")", "\n", "self", ".", "norm2", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "num_groups", ",", "num_channels", "=", "planes", ")", "\n", "if", "not", "stride", "==", "1", ":", "\n", "                ", "self", ".", "norm3", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "num_groups", ",", "num_channels", "=", "planes", ")", "\n", "\n", "", "", "elif", "norm_fn", "==", "'batch'", ":", "\n", "            ", "self", ".", "norm1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "norm2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "if", "not", "stride", "==", "1", ":", "\n", "                ", "self", ".", "norm3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "", "", "elif", "norm_fn", "==", "'instance'", ":", "\n", "            ", "self", ".", "norm1", "=", "nn", ".", "InstanceNorm2d", "(", "planes", ")", "\n", "self", ".", "norm2", "=", "nn", ".", "InstanceNorm2d", "(", "planes", ")", "\n", "if", "not", "stride", "==", "1", ":", "\n", "                ", "self", ".", "norm3", "=", "nn", ".", "InstanceNorm2d", "(", "planes", ")", "\n", "\n", "", "", "elif", "norm_fn", "==", "'none'", ":", "\n", "            ", "self", ".", "norm1", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "norm2", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "not", "stride", "==", "1", ":", "\n", "                ", "self", ".", "norm3", "=", "nn", ".", "Sequential", "(", ")", "\n", "\n", "", "", "if", "stride", "==", "1", ":", "\n", "            ", "self", ".", "downsample", "=", "None", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ")", ",", "self", ".", "norm3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.extractor.ResidualBlock.forward": [[48, 57], ["extractor.ResidualBlock.relu", "extractor.ResidualBlock.relu", "extractor.ResidualBlock.relu", "extractor.ResidualBlock.norm1", "extractor.ResidualBlock.norm2", "extractor.ResidualBlock.downsample", "extractor.ResidualBlock.conv1", "extractor.ResidualBlock.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "x", "\n", "y", "=", "self", ".", "relu", "(", "self", ".", "norm1", "(", "self", ".", "conv1", "(", "y", ")", ")", ")", "\n", "y", "=", "self", ".", "relu", "(", "self", ".", "norm2", "(", "self", ".", "conv2", "(", "y", ")", ")", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "return", "self", ".", "relu", "(", "x", "+", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.extractor.BasicEncoder.__init__": [[60, 95], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "extractor.BasicEncoder._make_layer", "extractor.BasicEncoder._make_layer", "extractor.BasicEncoder._make_layer", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "extractor.BasicEncoder.modules", "torch.GroupNorm", "torch.GroupNorm", "torch.GroupNorm", "isinstance", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.InstanceNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.extractor.BasicEncoder._make_layer", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.extractor.BasicEncoder._make_layer", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.extractor.BasicEncoder._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "output_dim", "=", "128", ",", "norm_fn", "=", "'batch'", ")", ":", "\n", "        ", "super", "(", "BasicEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm_fn", "=", "norm_fn", "\n", "\n", "if", "self", ".", "norm_fn", "==", "'group'", ":", "\n", "            ", "self", ".", "norm1", "=", "nn", ".", "GroupNorm", "(", "num_groups", "=", "8", ",", "num_channels", "=", "64", ")", "\n", "\n", "", "elif", "self", ".", "norm_fn", "==", "'batch'", ":", "\n", "            ", "self", ".", "norm1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "elif", "self", ".", "norm_fn", "==", "'instance'", ":", "\n", "            ", "self", ".", "norm1", "=", "nn", ".", "InstanceNorm2d", "(", "64", ")", "\n", "\n", "", "elif", "self", ".", "norm_fn", "==", "'none'", ":", "\n", "            ", "self", ".", "norm1", "=", "nn", ".", "Sequential", "(", ")", "\n", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "64", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "128", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "192", ",", "stride", "=", "2", ")", "\n", "\n", "# output convolution", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "192", ",", "output_dim", ",", "kernel_size", "=", "1", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "InstanceNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "if", "m", ".", "weight", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.extractor.BasicEncoder._make_layer": [[96, 103], ["extractor.ResidualBlock", "extractor.ResidualBlock", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["None"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "dim", ",", "stride", "=", "1", ")", ":", "\n", "        ", "layer1", "=", "ResidualBlock", "(", "self", ".", "in_planes", ",", "dim", ",", "self", ".", "norm_fn", ",", "stride", "=", "stride", ")", "\n", "layer2", "=", "ResidualBlock", "(", "dim", ",", "dim", ",", "self", ".", "norm_fn", ",", "stride", "=", "1", ")", "\n", "layers", "=", "(", "layer1", ",", "layer2", ")", "\n", "\n", "self", ".", "in_planes", "=", "dim", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.extractor.BasicEncoder.forward": [[104, 116], ["extractor.BasicEncoder.conv1", "extractor.BasicEncoder.norm1", "extractor.BasicEncoder.relu1", "extractor.BasicEncoder.layer1", "extractor.BasicEncoder.layer2", "extractor.BasicEncoder.layer3", "extractor.BasicEncoder.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "norm1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu1", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference_ill.padCropImg": [[10, 44], ["int", "cv2.copyMakeBorder", "numpy.zeros", "range", "int", "int", "range", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["None"], ["def", "padCropImg", "(", "img", ")", ":", "\n", "    ", "H", "=", "img", ".", "shape", "[", "0", "]", "\n", "W", "=", "img", ".", "shape", "[", "1", "]", "\n", "\n", "patchRes", "=", "128", "\n", "pH", "=", "patchRes", "\n", "pW", "=", "patchRes", "\n", "ovlp", "=", "int", "(", "patchRes", "*", "0.125", ")", "# 32", "\n", "\n", "padH", "=", "(", "int", "(", "(", "H", "-", "patchRes", ")", "/", "(", "patchRes", "-", "ovlp", ")", "+", "1", ")", "*", "(", "patchRes", "-", "ovlp", ")", "+", "patchRes", ")", "-", "H", "\n", "padW", "=", "(", "int", "(", "(", "W", "-", "patchRes", ")", "/", "(", "patchRes", "-", "ovlp", ")", "+", "1", ")", "*", "(", "patchRes", "-", "ovlp", ")", "+", "patchRes", ")", "-", "W", "\n", "\n", "padImg", "=", "cv2", ".", "copyMakeBorder", "(", "img", ",", "0", ",", "padH", ",", "0", ",", "padW", ",", "cv2", ".", "BORDER_REPLICATE", ")", "\n", "\n", "ynum", "=", "int", "(", "(", "padImg", ".", "shape", "[", "0", "]", "-", "pH", ")", "/", "(", "pH", "-", "ovlp", ")", ")", "+", "1", "\n", "xnum", "=", "int", "(", "(", "padImg", ".", "shape", "[", "1", "]", "-", "pW", ")", "/", "(", "pW", "-", "ovlp", ")", ")", "+", "1", "\n", "\n", "totalPatch", "=", "np", ".", "zeros", "(", "(", "ynum", ",", "xnum", ",", "patchRes", ",", "patchRes", ",", "3", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "\n", "for", "j", "in", "range", "(", "0", ",", "ynum", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "0", ",", "xnum", ")", ":", "\n", "            ", "x", "=", "int", "(", "i", "*", "(", "pW", "-", "ovlp", ")", ")", "\n", "y", "=", "int", "(", "j", "*", "(", "pH", "-", "ovlp", ")", ")", "\n", "\n", "if", "j", "==", "(", "ynum", "-", "1", ")", "and", "i", "==", "(", "xnum", "-", "1", ")", ":", "\n", "                ", "totalPatch", "[", "j", ",", "i", "]", "=", "img", "[", "-", "patchRes", ":", ",", "-", "patchRes", ":", "]", "\n", "", "elif", "j", "==", "(", "ynum", "-", "1", ")", ":", "\n", "                ", "totalPatch", "[", "j", ",", "i", "]", "=", "img", "[", "-", "patchRes", ":", ",", "x", ":", "int", "(", "x", "+", "patchRes", ")", "]", "\n", "", "elif", "i", "==", "(", "xnum", "-", "1", ")", ":", "\n", "                ", "totalPatch", "[", "j", ",", "i", "]", "=", "img", "[", "y", ":", "int", "(", "y", "+", "patchRes", ")", ",", "-", "patchRes", ":", "]", "\n", "", "else", ":", "\n", "                ", "totalPatch", "[", "j", ",", "i", "]", "=", "padImg", "[", "y", ":", "int", "(", "y", "+", "patchRes", ")", ",", "x", ":", "int", "(", "x", "+", "patchRes", ")", "]", "\n", "\n", "", "", "", "return", "totalPatch", ",", "padH", ",", "padW", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference_ill.illCorrection": [[46, 68], ["numpy.zeros", "range", "totalPatch.astype", "range", "torch.from_numpy().permute", "patchImg.cuda().view.cuda().view", "model", "output.astype.astype", "output.astype.permute().data.cpu().numpy", "torch.from_numpy", "patchImg.cuda().view.cuda", "output.astype.permute().data.cpu", "output.astype.permute"], "function", ["None"], ["", "def", "illCorrection", "(", "model", ",", "totalPatch", ")", ":", "\n", "    ", "totalPatch", "=", "totalPatch", ".", "astype", "(", "np", ".", "float32", ")", "/", "255.0", "\n", "\n", "ynum", "=", "totalPatch", ".", "shape", "[", "0", "]", "\n", "xnum", "=", "totalPatch", ".", "shape", "[", "1", "]", "\n", "\n", "totalResults", "=", "np", ".", "zeros", "(", "(", "ynum", ",", "xnum", ",", "128", ",", "128", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "for", "j", "in", "range", "(", "0", ",", "ynum", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "0", ",", "xnum", ")", ":", "\n", "            ", "patchImg", "=", "torch", ".", "from_numpy", "(", "totalPatch", "[", "j", ",", "i", "]", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "patchImg", "=", "patchImg", ".", "cuda", "(", ")", ".", "view", "(", "1", ",", "3", ",", "128", ",", "128", ")", "\n", "\n", "output", "=", "model", "(", "patchImg", ")", "\n", "output", "=", "output", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", "\n", "\n", "output", "=", "output", "*", "255.0", "\n", "output", "=", "output", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "totalResults", "[", "j", ",", "i", "]", "=", "output", "\n", "\n", "", "", "return", "totalResults", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference_ill.composePatch": [[70, 106], ["int", "numpy.zeros", "numpy.zeros_like().astype", "range", "range", "numpy.zeros_like", "int", "int"], "function", ["None"], ["", "def", "composePatch", "(", "totalResults", ",", "padH", ",", "padW", ",", "img", ")", ":", "\n", "    ", "ynum", "=", "totalResults", ".", "shape", "[", "0", "]", "\n", "xnum", "=", "totalResults", ".", "shape", "[", "1", "]", "\n", "patchRes", "=", "totalResults", ".", "shape", "[", "2", "]", "\n", "\n", "ovlp", "=", "int", "(", "patchRes", "*", "0.125", ")", "\n", "step", "=", "patchRes", "-", "ovlp", "\n", "\n", "resImg", "=", "np", ".", "zeros", "(", "(", "patchRes", "+", "(", "ynum", "-", "1", ")", "*", "step", ",", "patchRes", "+", "(", "xnum", "-", "1", ")", "*", "step", ",", "3", ")", ",", "np", ".", "uint8", ")", "\n", "resImg", "=", "np", ".", "zeros_like", "(", "img", ")", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "for", "j", "in", "range", "(", "0", ",", "ynum", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "0", ",", "xnum", ")", ":", "\n", "            ", "sy", "=", "int", "(", "j", "*", "step", ")", "\n", "sx", "=", "int", "(", "i", "*", "step", ")", "\n", "\n", "if", "j", "==", "0", "and", "i", "!=", "(", "xnum", "-", "1", ")", ":", "\n", "                ", "resImg", "[", "sy", ":", "(", "sy", "+", "patchRes", ")", ",", "sx", ":", "(", "sx", "+", "patchRes", ")", "]", "=", "totalResults", "[", "j", ",", "i", "]", "\n", "", "elif", "i", "==", "0", "and", "j", "!=", "(", "ynum", "-", "1", ")", ":", "\n", "                ", "resImg", "[", "sy", "+", "10", ":", "(", "sy", "+", "patchRes", ")", ",", "sx", ":", "(", "sx", "+", "patchRes", ")", "]", "=", "totalResults", "[", "j", ",", "i", ",", "10", ":", "]", "\n", "", "elif", "j", "==", "(", "ynum", "-", "1", ")", "and", "i", "==", "(", "xnum", "-", "1", ")", ":", "\n", "                ", "resImg", "[", "-", "patchRes", "+", "10", ":", ",", "-", "patchRes", "+", "10", ":", "]", "=", "totalResults", "[", "j", ",", "i", ",", "10", ":", ",", "10", ":", "]", "\n", "", "elif", "j", "==", "(", "ynum", "-", "1", ")", "and", "i", "==", "0", ":", "\n", "                ", "resImg", "[", "-", "patchRes", "+", "10", ":", ",", "sx", ":", "(", "sx", "+", "patchRes", ")", "]", "=", "totalResults", "[", "j", ",", "i", ",", "10", ":", "]", "\n", "", "elif", "j", "==", "(", "ynum", "-", "1", ")", "and", "i", "!=", "0", ":", "\n", "                ", "resImg", "[", "-", "patchRes", "+", "10", ":", ",", "sx", "+", "10", ":", "(", "sx", "+", "patchRes", ")", "]", "=", "totalResults", "[", "j", ",", "i", ",", "10", ":", ",", "10", ":", "]", "\n", "", "elif", "i", "==", "(", "xnum", "-", "1", ")", "and", "j", "==", "0", ":", "\n", "                ", "resImg", "[", "sy", ":", "(", "sy", "+", "patchRes", ")", ",", "-", "patchRes", "+", "10", ":", "]", "=", "totalResults", "[", "j", ",", "i", ",", ":", ",", "10", ":", "]", "\n", "", "elif", "i", "==", "(", "xnum", "-", "1", ")", "and", "j", "!=", "0", ":", "\n", "                ", "resImg", "[", "sy", "+", "10", ":", "(", "sy", "+", "patchRes", ")", ",", "-", "patchRes", "+", "10", ":", "]", "=", "totalResults", "[", "j", ",", "i", ",", "10", ":", ",", "10", ":", "]", "\n", "", "else", ":", "\n", "                ", "resImg", "[", "sy", "+", "10", ":", "(", "sy", "+", "patchRes", ")", ",", "sx", "+", "10", ":", "(", "sx", "+", "patchRes", ")", "]", "=", "totalResults", "[", "j", ",", "i", ",", "10", ":", ",", "10", ":", "]", "\n", "\n", "", "", "", "resImg", "[", "0", ",", ":", ",", ":", "]", "=", "255", "\n", "\n", "return", "resImg", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference_ill.preProcess": [[108, 114], ["skimage.filters.rank.mean_bilateral", "skimage.filters.rank.mean_bilateral", "skimage.filters.rank.mean_bilateral", "skimage.morphology.disk", "skimage.morphology.disk", "skimage.morphology.disk"], "function", ["None"], ["", "def", "preProcess", "(", "img", ")", ":", "\n", "    ", "img", "[", ":", ",", ":", ",", "0", "]", "=", "mean_bilateral", "(", "img", "[", ":", ",", ":", ",", "0", "]", ",", "morphology", ".", "disk", "(", "20", ")", ",", "s0", "=", "10", ",", "s1", "=", "10", ")", "\n", "img", "[", ":", ",", ":", ",", "1", "]", "=", "mean_bilateral", "(", "img", "[", ":", ",", ":", ",", "1", "]", ",", "morphology", ".", "disk", "(", "20", ")", ",", "s0", "=", "10", ",", "s1", "=", "10", ")", "\n", "img", "[", ":", ",", ":", ",", "2", "]", "=", "mean_bilateral", "(", "img", "[", ":", ",", ":", ",", "2", "]", ",", "morphology", ".", "disk", "(", "20", ")", ",", "s0", "=", "10", ",", "s1", "=", "10", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference_ill.postProcess": [[116, 123], ["PIL.Image.fromarray", "PIL.ImageEnhance.Contrast", "ImageEnhance.Contrast.enhance"], "function", ["None"], ["", "def", "postProcess", "(", "img", ")", ":", "\n", "    ", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "enhancer", "=", "ImageEnhance", ".", "Contrast", "(", "img", ")", "\n", "factor", "=", "2.0", "\n", "img", "=", "enhancer", ".", "enhance", "(", "factor", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference_ill.rec_ill": [[125, 135], ["inference_ill.padCropImg", "inference_ill.illCorrection", "inference_ill.composePatch", "PIL.Image.fromarray", "Image.fromarray.save"], "function", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference_ill.padCropImg", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference_ill.illCorrection", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.inference_ill.composePatch"], ["", "def", "rec_ill", "(", "net", ",", "img", ",", "saveRecPath", ")", ":", "\n", "\n", "    ", "totalPatch", ",", "padH", ",", "padW", "=", "padCropImg", "(", "img", ")", "\n", "\n", "totalResults", "=", "illCorrection", "(", "net", ",", "totalPatch", ")", "\n", "\n", "resImg", "=", "composePatch", "(", "totalResults", ",", "padH", ",", "padW", ",", "img", ")", "\n", "#resImg = postProcess(resImg)", "\n", "resImg", "=", "Image", ".", "fromarray", "(", "resImg", ")", "\n", "resImg", ".", "save", "(", "saveRecPath", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.OCR_eval.Levenshtein_Distance": [[1, 12], ["range", "range", "range", "len", "min", "len", "range", "len", "len", "len", "len"], "function", ["None"], ["def", "Levenshtein_Distance", "(", "str1", ",", "str2", ")", ":", "\n", "    ", "matrix", "=", "[", "[", "i", "+", "j", "for", "j", "in", "range", "(", "len", "(", "str2", ")", "+", "1", ")", "]", "for", "i", "in", "range", "(", "len", "(", "str1", ")", "+", "1", ")", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "str1", ")", "+", "1", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "1", ",", "len", "(", "str2", ")", "+", "1", ")", ":", "\n", "            ", "if", "(", "str1", "[", "i", "-", "1", "]", "==", "str2", "[", "j", "-", "1", "]", ")", ":", "\n", "                ", "d", "=", "0", "\n", "", "else", ":", "\n", "                ", "d", "=", "1", "\n", "", "matrix", "[", "i", "]", "[", "j", "]", "=", "min", "(", "matrix", "[", "i", "-", "1", "]", "[", "j", "]", "+", "1", ",", "matrix", "[", "i", "]", "[", "j", "-", "1", "]", "+", "1", ",", "matrix", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", "+", "d", ")", "\n", "\n", "", "", "return", "matrix", "[", "len", "(", "str1", ")", "]", "[", "len", "(", "str2", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.OCR_eval.cal_cer_ed": [[13, 41], ["range", "print", "print", "Image.open", "Image.open", "Image.open", "pytesseract.image_to_string", "pytesseract.image_to_string", "pytesseract.image_to_string", "OCR_eval.Levenshtein_Distance", "OCR_eval.Levenshtein_Distance", "ed1.append", "ed2.append", "cer1.append", "cer2.append", "range", "len", "len", "np.mean", "np.mean", "np.mean", "np.mean", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.OCR_eval.Levenshtein_Distance", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.OCR_eval.Levenshtein_Distance"], ["", "def", "cal_cer_ed", "(", "path_ours", ",", "tail", "=", "'_rec'", ")", ":", "\n", "    ", "path_gt", "=", "'./GT/'", "\n", "N", "=", "66", "\n", "cer1", "=", "[", "]", "\n", "cer2", "=", "[", "]", "\n", "ed1", "=", "[", "]", "\n", "ed2", "=", "[", "]", "\n", "check", "=", "[", "0", "for", "_", "in", "range", "(", "N", "+", "1", ")", "]", "\n", "lis", "=", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "9", ",", "10", ",", "21", ",", "22", ",", "23", ",", "24", ",", "27", ",", "30", ",", "31", ",", "32", ",", "36", ",", "38", ",", "40", ",", "41", ",", "44", ",", "45", ",", "46", ",", "47", ",", "48", ",", "50", ",", "51", ",", "52", ",", "53", "]", "# DocTr (Setting 1)", "\n", "# lis=[1,9,10,19,20,21,22,23,24,27,30,31,32,34,35,36,37,38,39,40,44,45,46,47,49]  # DewarpNet (Setting 2)", "\n", "for", "i", "in", "range", "(", "1", ",", "N", ")", ":", "\n", "        ", "if", "i", "not", "in", "lis", ":", "\n", "            ", "continue", "\n", "", "gt", "=", "Image", ".", "open", "(", "path_gt", "+", "str", "(", "i", ")", "+", "'.png'", ")", "\n", "img1", "=", "Image", ".", "open", "(", "path_ours", "+", "str", "(", "i", ")", "+", "'_1'", "+", "tail", ")", "\n", "img2", "=", "Image", ".", "open", "(", "path_ours", "+", "str", "(", "i", ")", "+", "'_2'", "+", "tail", ")", "\n", "content_gt", "=", "pytesseract", ".", "image_to_string", "(", "gt", ")", "\n", "content1", "=", "pytesseract", ".", "image_to_string", "(", "img1", ")", "\n", "content2", "=", "pytesseract", ".", "image_to_string", "(", "img2", ")", "\n", "l1", "=", "Levenshtein_Distance", "(", "content_gt", ",", "content1", ")", "\n", "l2", "=", "Levenshtein_Distance", "(", "content_gt", ",", "content2", ")", "\n", "ed1", ".", "append", "(", "l1", ")", "\n", "ed2", ".", "append", "(", "l2", ")", "\n", "cer1", ".", "append", "(", "l1", "/", "len", "(", "content_gt", ")", ")", "\n", "cer2", ".", "append", "(", "l2", "/", "len", "(", "content_gt", ")", ")", "\n", "check", "[", "i", "]", "=", "cer1", "[", "-", "1", "]", "\n", "", "print", "(", "'CER: '", ",", "(", "np", ".", "mean", "(", "cer1", ")", "+", "np", ".", "mean", "(", "cer2", ")", ")", "/", "2.", ")", "\n", "print", "(", "'ED:  '", ",", "(", "np", ".", "mean", "(", "ed1", ")", "+", "np", ".", "mean", "(", "ed2", ")", ")", "/", "2.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.OCR_eval.evalu": [[42, 44], ["OCR_eval.cal_cer_ed"], "function", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.OCR_eval.cal_cer_ed"], ["", "def", "evalu", "(", "path_ours", ",", "tail", ")", ":", "\n", "    ", "cal_cer_ed", "(", "path_ours", ",", "tail", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.__init__": [[14, 34], ["torch.nn.Module.__init__", "torch.nn.MultiheadAttention", "torch.nn.MultiheadAttention", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Dropout", "torch.nn.Dropout", "GeoTr._get_activation_fn", "copy.deepcopy", "copy.deepcopy", "copy.deepcopy", "torch.nn.MultiheadAttention", "torch.nn.MultiheadAttention", "range", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "range", "torch.nn.Dropout", "torch.nn.Dropout", "range"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr._get_activation_fn"], ["    ", "def", "__init__", "(", "self", ",", "d_model", ",", "nhead", "=", "8", ",", "dim_feedforward", "=", "2048", ",", "dropout", "=", "0.1", ",", "\n", "activation", "=", "\"relu\"", ",", "normalize_before", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "self_attn", "=", "nn", ".", "MultiheadAttention", "(", "d_model", ",", "nhead", ",", "dropout", "=", "dropout", ")", "\n", "self", ".", "multihead_attn_list", "=", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "nn", ".", "MultiheadAttention", "(", "d_model", ",", "nhead", ",", "dropout", "=", "dropout", ")", ")", "for", "i", "in", "range", "(", "2", ")", "]", ")", "\n", "# Implementation of Feedforward model", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "d_model", ",", "dim_feedforward", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "dim_feedforward", ",", "d_model", ")", "\n", "\n", "self", ".", "norm1", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "norm2_list", "=", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "nn", ".", "LayerNorm", "(", "d_model", ")", ")", "for", "i", "in", "range", "(", "2", ")", "]", ")", "\n", "\n", "self", ".", "norm3", "=", "nn", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "dropout1", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "dropout2_list", "=", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "nn", ".", "Dropout", "(", "dropout", ")", ")", "for", "i", "in", "range", "(", "2", ")", "]", ")", "\n", "self", ".", "dropout3", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n", "self", ".", "activation", "=", "_get_activation_fn", "(", "activation", ")", "\n", "self", ".", "normalize_before", "=", "normalize_before", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.with_pos_embed": [[35, 37], ["None"], "methods", ["None"], ["", "def", "with_pos_embed", "(", "self", ",", "tensor", ",", "pos", ":", "Optional", "[", "Tensor", "]", ")", ":", "\n", "        ", "return", "tensor", "if", "pos", "is", "None", "else", "tensor", "+", "pos", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.forward_post": [[38, 57], ["GeoTr.attnLayer.with_pos_embed", "GeoTr.attnLayer.norm1", "zip", "GeoTr.attnLayer.linear2", "GeoTr.attnLayer.norm3", "GeoTr.attnLayer.self_attn", "GeoTr.attnLayer.dropout1", "norm2", "GeoTr.attnLayer.dropout", "GeoTr.attnLayer.dropout3", "multihead_attn", "dropout2", "GeoTr.attnLayer.activation", "GeoTr.attnLayer.linear1", "GeoTr.attnLayer.with_pos_embed", "GeoTr.attnLayer.with_pos_embed"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.with_pos_embed", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.with_pos_embed", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.with_pos_embed"], ["", "def", "forward_post", "(", "self", ",", "tgt", ",", "memory_list", ",", "tgt_mask", "=", "None", ",", "memory_mask", "=", "None", ",", "\n", "tgt_key_padding_mask", "=", "None", ",", "memory_key_padding_mask", "=", "None", ",", "\n", "pos", "=", "None", ",", "memory_pos", "=", "None", ")", ":", "\n", "        ", "q", "=", "k", "=", "self", ".", "with_pos_embed", "(", "tgt", ",", "pos", ")", "\n", "tgt2", "=", "self", ".", "self_attn", "(", "q", ",", "k", ",", "value", "=", "tgt", ",", "attn_mask", "=", "tgt_mask", ",", "\n", "key_padding_mask", "=", "tgt_key_padding_mask", ")", "[", "0", "]", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout1", "(", "tgt2", ")", "\n", "tgt", "=", "self", ".", "norm1", "(", "tgt", ")", "\n", "for", "memory", ",", "multihead_attn", ",", "norm2", ",", "dropout2", ",", "m_pos", "in", "zip", "(", "memory_list", ",", "self", ".", "multihead_attn_list", ",", "self", ".", "norm2_list", ",", "self", ".", "dropout2_list", ",", "memory_pos", ")", ":", "\n", "            ", "tgt2", "=", "multihead_attn", "(", "query", "=", "self", ".", "with_pos_embed", "(", "tgt", ",", "pos", ")", ",", "\n", "key", "=", "self", ".", "with_pos_embed", "(", "memory", ",", "m_pos", ")", ",", "\n", "value", "=", "memory", ",", "attn_mask", "=", "memory_mask", ",", "\n", "key_padding_mask", "=", "memory_key_padding_mask", ")", "[", "0", "]", "\n", "tgt", "=", "tgt", "+", "dropout2", "(", "tgt2", ")", "\n", "tgt", "=", "norm2", "(", "tgt", ")", "\n", "", "tgt2", "=", "self", ".", "linear2", "(", "self", ".", "dropout", "(", "self", ".", "activation", "(", "self", ".", "linear1", "(", "tgt", ")", ")", ")", ")", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout3", "(", "tgt2", ")", "\n", "tgt", "=", "self", ".", "norm3", "(", "tgt", ")", "\n", "return", "tgt", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.forward_pre": [[58, 76], ["GeoTr.attnLayer.norm1", "GeoTr.attnLayer.with_pos_embed", "GeoTr.attnLayer.norm2", "GeoTr.attnLayer.norm3", "GeoTr.attnLayer.linear2", "GeoTr.attnLayer.self_attn", "GeoTr.attnLayer.dropout1", "GeoTr.attnLayer.multihead_attn", "GeoTr.attnLayer.dropout2", "GeoTr.attnLayer.dropout", "GeoTr.attnLayer.dropout3", "GeoTr.attnLayer.activation", "GeoTr.attnLayer.with_pos_embed", "GeoTr.attnLayer.with_pos_embed", "GeoTr.attnLayer.linear1"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.with_pos_embed", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.with_pos_embed", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.with_pos_embed"], ["", "def", "forward_pre", "(", "self", ",", "tgt", ",", "memory", ",", "tgt_mask", "=", "None", ",", "memory_mask", "=", "None", ",", "\n", "tgt_key_padding_mask", "=", "None", ",", "memory_key_padding_mask", "=", "None", ",", "\n", "pos", "=", "None", ",", "memory_pos", "=", "None", ")", ":", "\n", "        ", "tgt2", "=", "self", ".", "norm1", "(", "tgt", ")", "\n", "q", "=", "k", "=", "self", ".", "with_pos_embed", "(", "tgt2", ",", "pos", ")", "\n", "tgt2", "=", "self", ".", "self_attn", "(", "q", ",", "k", ",", "value", "=", "tgt2", ",", "attn_mask", "=", "tgt_mask", ",", "\n", "key_padding_mask", "=", "tgt_key_padding_mask", ")", "[", "0", "]", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout1", "(", "tgt2", ")", "\n", "tgt2", "=", "self", ".", "norm2", "(", "tgt", ")", "\n", "tgt2", "=", "self", ".", "multihead_attn", "(", "query", "=", "self", ".", "with_pos_embed", "(", "tgt2", ",", "pos", ")", ",", "\n", "key", "=", "self", ".", "with_pos_embed", "(", "memory", ",", "memory_pos", ")", ",", "\n", "value", "=", "memory", ",", "attn_mask", "=", "memory_mask", ",", "\n", "key_padding_mask", "=", "memory_key_padding_mask", ")", "[", "0", "]", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout2", "(", "tgt2", ")", "\n", "tgt2", "=", "self", ".", "norm3", "(", "tgt", ")", "\n", "tgt2", "=", "self", ".", "linear2", "(", "self", ".", "dropout", "(", "self", ".", "activation", "(", "self", ".", "linear1", "(", "tgt2", ")", ")", ")", ")", "\n", "tgt", "=", "tgt", "+", "self", ".", "dropout3", "(", "tgt2", ")", "\n", "return", "tgt", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.forward": [[77, 85], ["GeoTr.attnLayer.forward_post", "GeoTr.attnLayer.forward_pre"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.forward_post", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.attnLayer.forward_pre"], ["", "def", "forward", "(", "self", ",", "tgt", ",", "memory_list", ",", "tgt_mask", "=", "None", ",", "memory_mask", "=", "None", ",", "\n", "tgt_key_padding_mask", "=", "None", ",", "memory_key_padding_mask", "=", "None", ",", "\n", "pos", "=", "None", ",", "memory_pos", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "normalize_before", ":", "\n", "            ", "return", "self", ".", "forward_pre", "(", "tgt", ",", "memory_list", ",", "tgt_mask", ",", "memory_mask", ",", "\n", "tgt_key_padding_mask", ",", "memory_key_padding_mask", ",", "pos", ",", "memory_pos", ")", "\n", "", "return", "self", ".", "forward_post", "(", "tgt", ",", "memory_list", ",", "tgt_mask", ",", "memory_mask", ",", "\n", "tgt_key_padding_mask", ",", "memory_key_padding_mask", ",", "pos", ",", "memory_pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.TransDecoder.__init__": [[103, 108], ["torch.nn.Module.__init__", "GeoTr.attnLayer", "GeoTr._get_clones", "position_encoding.build_position_encoding"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr._get_clones", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.build_position_encoding"], ["    ", "def", "__init__", "(", "self", ",", "num_attn_layers", ",", "hidden_dim", "=", "128", ")", ":", "\n", "        ", "super", "(", "TransDecoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "attn_layer", "=", "attnLayer", "(", "hidden_dim", ")", "\n", "self", ".", "layers", "=", "_get_clones", "(", "attn_layer", ",", "num_attn_layers", ")", "\n", "self", ".", "position_embedding", "=", "build_position_encoding", "(", "hidden_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.TransDecoder.forward": [[109, 122], ["GeoTr.TransDecoder.position_embedding", "imgf.flatten().permute.flatten().permute.flatten().permute", "layer.unsqueeze().repeat", "pos.flatten().permute.flatten().permute.flatten().permute", "layer.permute().reshape", "torch.ones().bool().cuda", "torch.ones().bool().cuda", "torch.ones().bool().cuda", "torch.ones().bool().cuda", "layer", "imgf.flatten().permute.flatten().permute.flatten", "layer.unsqueeze", "pos.flatten().permute.flatten().permute.flatten", "layer.permute", "torch.ones().bool", "torch.ones().bool", "torch.ones().bool", "torch.ones().bool", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "imgf", ",", "query_embed", ")", ":", "\n", "        ", "pos", "=", "self", ".", "position_embedding", "(", "torch", ".", "ones", "(", "imgf", ".", "shape", "[", "0", "]", ",", "imgf", ".", "shape", "[", "2", "]", ",", "imgf", ".", "shape", "[", "3", "]", ")", ".", "bool", "(", ")", ".", "cuda", "(", ")", ")", "# torch.Size([1, 128, 36, 36])", "\n", "\n", "bs", ",", "c", ",", "h", ",", "w", "=", "imgf", ".", "shape", "\n", "imgf", "=", "imgf", ".", "flatten", "(", "2", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "query_embed", "=", "query_embed", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "bs", ",", "1", ")", "\n", "pos", "=", "pos", ".", "flatten", "(", "2", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "query_embed", "=", "layer", "(", "query_embed", ",", "[", "imgf", "]", ",", "pos", "=", "pos", ",", "memory_pos", "=", "[", "pos", ",", "pos", "]", ")", "\n", "", "query_embed", "=", "query_embed", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "reshape", "(", "bs", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "return", "query_embed", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.TransEncoder.__init__": [[125, 130], ["torch.nn.Module.__init__", "GeoTr.attnLayer", "GeoTr._get_clones", "position_encoding.build_position_encoding"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr._get_clones", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.build_position_encoding"], ["    ", "def", "__init__", "(", "self", ",", "num_attn_layers", ",", "hidden_dim", "=", "128", ")", ":", "\n", "        ", "super", "(", "TransEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "attn_layer", "=", "attnLayer", "(", "hidden_dim", ")", "\n", "self", ".", "layers", "=", "_get_clones", "(", "attn_layer", ",", "num_attn_layers", ")", "\n", "self", ".", "position_embedding", "=", "build_position_encoding", "(", "hidden_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.TransEncoder.forward": [[131, 142], ["GeoTr.TransEncoder.position_embedding", "layer.flatten().permute", "pos.flatten().permute.flatten().permute.flatten().permute", "layer.permute().reshape", "torch.ones().bool().cuda", "torch.ones().bool().cuda", "torch.ones().bool().cuda", "torch.ones().bool().cuda", "layer", "layer.flatten", "pos.flatten().permute.flatten().permute.flatten", "layer.permute", "torch.ones().bool", "torch.ones().bool", "torch.ones().bool", "torch.ones().bool", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "imgf", ")", ":", "\n", "        ", "pos", "=", "self", ".", "position_embedding", "(", "torch", ".", "ones", "(", "imgf", ".", "shape", "[", "0", "]", ",", "imgf", ".", "shape", "[", "2", "]", ",", "imgf", ".", "shape", "[", "3", "]", ")", ".", "bool", "(", ")", ".", "cuda", "(", ")", ")", "# torch.Size([1, 128, 36, 36])", "\n", "bs", ",", "c", ",", "h", ",", "w", "=", "imgf", ".", "shape", "\n", "imgf", "=", "imgf", ".", "flatten", "(", "2", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "pos", "=", "pos", ".", "flatten", "(", "2", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "imgf", "=", "layer", "(", "imgf", ",", "[", "imgf", "]", ",", "pos", "=", "pos", ",", "memory_pos", "=", "[", "pos", ",", "pos", "]", ")", "\n", "", "imgf", "=", "imgf", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "reshape", "(", "bs", ",", "c", ",", "h", ",", "w", ")", "\n", "\n", "return", "imgf", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.FlowHead.__init__": [[145, 150], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", "=", "128", ",", "hidden_dim", "=", "256", ")", ":", "\n", "        ", "super", "(", "FlowHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "input_dim", ",", "hidden_dim", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "2", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.FlowHead.forward": [[151, 153], ["GeoTr.FlowHead.conv2", "GeoTr.FlowHead.relu", "GeoTr.FlowHead.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv2", "(", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.UpdateBlock.__init__": [[156, 163], ["torch.nn.Module.__init__", "GeoTr.FlowHead", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_dim", "=", "128", ")", ":", "\n", "        ", "super", "(", "UpdateBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "flow_head", "=", "FlowHead", "(", "hidden_dim", ",", "hidden_dim", "=", "256", ")", "\n", "self", ".", "mask", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "64", "*", "9", ",", "1", ",", "padding", "=", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.UpdateBlock.forward": [[164, 170], ["GeoTr.UpdateBlock.flow_head", "GeoTr.UpdateBlock.mask"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "imgf", ",", "coords1", ")", ":", "\n", "        ", "mask", "=", ".25", "*", "self", ".", "mask", "(", "imgf", ")", "# scale mask to balence gradients", "\n", "dflow", "=", "self", ".", "flow_head", "(", "imgf", ")", "\n", "coords1", "=", "coords1", "+", "dflow", "\n", "\n", "return", "mask", ",", "coords1", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.GeoTr.__init__": [[184, 197], ["torch.nn.Module.__init__", "extractor.BasicEncoder", "GeoTr.TransEncoder", "GeoTr.TransDecoder", "torch.nn.Embedding", "torch.nn.Embedding", "GeoTr.UpdateBlock"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_attn_layers", ")", ":", "\n", "        ", "super", "(", "GeoTr", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_attn_layers", "=", "num_attn_layers", "\n", "\n", "self", ".", "hidden_dim", "=", "hdim", "=", "256", "\n", "\n", "self", ".", "fnet", "=", "BasicEncoder", "(", "output_dim", "=", "hdim", ",", "norm_fn", "=", "'instance'", ")", "\n", "\n", "self", ".", "TransEncoder", "=", "TransEncoder", "(", "self", ".", "num_attn_layers", ",", "hidden_dim", "=", "hdim", ")", "\n", "self", ".", "TransDecoder", "=", "TransDecoder", "(", "self", ".", "num_attn_layers", ",", "hidden_dim", "=", "hdim", ")", "\n", "self", ".", "query_embed", "=", "nn", ".", "Embedding", "(", "1296", ",", "self", ".", "hidden_dim", ")", "\n", "\n", "self", ".", "update_block", "=", "UpdateBlock", "(", "self", ".", "hidden_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.GeoTr.initialize_flow": [[198, 205], ["coords_grid().to", "coords_grid().to", "coords_grid().to", "GeoTr.coords_grid", "GeoTr.coords_grid", "GeoTr.coords_grid"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.coords_grid", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.coords_grid", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.coords_grid"], ["", "def", "initialize_flow", "(", "self", ",", "img", ")", ":", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "img", ".", "shape", "\n", "coodslar", "=", "coords_grid", "(", "N", ",", "H", ",", "W", ")", ".", "to", "(", "img", ".", "device", ")", "\n", "coords0", "=", "coords_grid", "(", "N", ",", "H", "//", "8", ",", "W", "//", "8", ")", ".", "to", "(", "img", ".", "device", ")", "\n", "coords1", "=", "coords_grid", "(", "N", ",", "H", "//", "8", ",", "W", "//", "8", ")", ".", "to", "(", "img", ".", "device", ")", "\n", "\n", "return", "coodslar", ",", "coords0", ",", "coords1", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.GeoTr.upsample_flow": [[206, 218], ["torch.softmax.view", "torch.softmax.view", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.unfold", "torch.unfold", "up_flow.permute.permute.view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "up_flow.permute.permute.permute", "up_flow.permute.permute.reshape"], "methods", ["None"], ["", "def", "upsample_flow", "(", "self", ",", "flow", ",", "mask", ")", ":", "\n", "        ", "N", ",", "_", ",", "H", ",", "W", "=", "flow", ".", "shape", "\n", "mask", "=", "mask", ".", "view", "(", "N", ",", "1", ",", "9", ",", "8", ",", "8", ",", "H", ",", "W", ")", "\n", "mask", "=", "torch", ".", "softmax", "(", "mask", ",", "dim", "=", "2", ")", "\n", "\n", "up_flow", "=", "F", ".", "unfold", "(", "8", "*", "flow", ",", "[", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", "up_flow", "=", "up_flow", ".", "view", "(", "N", ",", "2", ",", "9", ",", "1", ",", "1", ",", "H", ",", "W", ")", "\n", "\n", "up_flow", "=", "torch", ".", "sum", "(", "mask", "*", "up_flow", ",", "dim", "=", "2", ")", "\n", "up_flow", "=", "up_flow", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "5", ",", "3", ")", "\n", "\n", "return", "up_flow", ".", "reshape", "(", "N", ",", "2", ",", "8", "*", "H", ",", "8", "*", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.GeoTr.forward": [[219, 234], ["GeoTr.GeoTr.fnet", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "GeoTr.GeoTr.TransEncoder", "GeoTr.GeoTr.TransDecoder", "GeoTr.GeoTr.initialize_flow", "coords1.detach.detach.detach", "GeoTr.GeoTr.update_block", "GeoTr.GeoTr.upsample_flow"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.GeoTr.initialize_flow", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.GeoTr.upsample_flow"], ["", "def", "forward", "(", "self", ",", "image1", ")", ":", "\n", "        ", "fmap", "=", "self", ".", "fnet", "(", "image1", ")", "\n", "fmap", "=", "torch", ".", "relu", "(", "fmap", ")", "\n", "\n", "fmap", "=", "self", ".", "TransEncoder", "(", "fmap", ")", "\n", "fmap", "=", "self", ".", "TransDecoder", "(", "fmap", ",", "self", ".", "query_embed", ".", "weight", ")", "\n", "\n", "# convex upsample baesd on fmap", "\n", "coodslar", ",", "coords0", ",", "coords1", "=", "self", ".", "initialize_flow", "(", "image1", ")", "\n", "coords1", "=", "coords1", ".", "detach", "(", ")", "\n", "mask", ",", "coords1", "=", "self", ".", "update_block", "(", "fmap", ",", "coords1", ")", "\n", "flow_up", "=", "self", ".", "upsample_flow", "(", "coords1", "-", "coords0", ",", "mask", ")", "\n", "bm_up", "=", "coodslar", "+", "flow_up", "\n", "\n", "return", "bm_up", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr._get_clones": [[87, 89], ["torch.nn.ModuleList", "copy.deepcopy", "range"], "function", ["None"], ["", "", "def", "_get_clones", "(", "module", ",", "N", ")", ":", "\n", "    ", "return", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "module", ")", "for", "i", "in", "range", "(", "N", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr._get_activation_fn": [[91, 100], ["RuntimeError"], "function", ["None"], ["", "def", "_get_activation_fn", "(", "activation", ")", ":", "\n", "    ", "\"\"\"Return an activation function given a string\"\"\"", "\n", "if", "activation", "==", "\"relu\"", ":", "\n", "        ", "return", "F", ".", "relu", "\n", "", "if", "activation", "==", "\"gelu\"", ":", "\n", "        ", "return", "F", ".", "gelu", "\n", "", "if", "activation", "==", "\"glu\"", ":", "\n", "        ", "return", "F", ".", "glu", "\n", "", "raise", "RuntimeError", "(", "F\"activation should be relu/gelu, not {activation}.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.coords_grid": [[172, 176], ["torch.meshgrid", "torch.meshgrid", "torch.stack().float", "torch.stack().float", "coords[].repeat", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.stack", "torch.stack"], "function", ["None"], ["", "", "def", "coords_grid", "(", "batch", ",", "ht", ",", "wd", ")", ":", "\n", "    ", "coords", "=", "torch", ".", "meshgrid", "(", "torch", ".", "arange", "(", "ht", ")", ",", "torch", ".", "arange", "(", "wd", ")", ")", "\n", "coords", "=", "torch", ".", "stack", "(", "coords", "[", ":", ":", "-", "1", "]", ",", "dim", "=", "0", ")", ".", "float", "(", ")", "\n", "return", "coords", "[", "None", "]", ".", "repeat", "(", "batch", ",", "1", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.GeoTr.upflow8": [[178, 181], ["torch.interpolate"], "function", ["None"], ["", "def", "upflow8", "(", "flow", ",", "mode", "=", "'bilinear'", ")", ":", "\n", "    ", "new_size", "=", "(", "8", "*", "flow", ".", "shape", "[", "2", "]", ",", "8", "*", "flow", ".", "shape", "[", "3", "]", ")", "\n", "return", "8", "*", "F", ".", "interpolate", "(", "flow", ",", "size", "=", "new_size", ",", "mode", "=", "mode", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.sobel_net.__init__": [[9, 20], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "numpy.array().reshape", "numpy.array().reshape", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "seg.sobel_net.parameters", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_opx", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_opy", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "3", ",", "bias", "=", "False", ")", "\n", "sobel_kernelx", "=", "np", ".", "array", "(", "[", "[", "-", "1", ",", "0", ",", "1", "]", ",", "[", "-", "2", ",", "0", ",", "2", "]", ",", "[", "-", "1", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "'float32'", ")", ".", "reshape", "(", "(", "1", ",", "1", ",", "3", ",", "3", ")", ")", "\n", "sobel_kernely", "=", "np", ".", "array", "(", "[", "[", "-", "1", ",", "-", "2", ",", "-", "1", "]", ",", "[", "0", ",", "0", ",", "0", "]", ",", "[", "1", ",", "2", ",", "1", "]", "]", ",", "dtype", "=", "'float32'", ")", ".", "reshape", "(", "(", "1", ",", "1", ",", "3", ",", "3", ")", ")", "\n", "self", ".", "conv_opx", ".", "weight", ".", "data", "=", "torch", ".", "from_numpy", "(", "sobel_kernelx", ")", "\n", "self", ".", "conv_opy", ".", "weight", ".", "data", "=", "torch", ".", "from_numpy", "(", "sobel_kernely", ")", "\n", "\n", "for", "p", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "p", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.sobel_net.forward": [[21, 32], ["seg.sobel_net.conv_opx", "seg.sobel_net.conv_opy", "torch.pad", "torch.pad", "torch.pad", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.min", "torch.cat.min", "torch.cat.min", "torch.cat.max", "torch.cat.max", "torch.cat.max", "torch.cat.min", "torch.cat.min", "torch.cat.min"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "im", ")", ":", "# input rgb", "\n", "        ", "x", "=", "(", "0.299", "*", "im", "[", ":", ",", "0", ",", ":", ",", ":", "]", "+", "0.587", "*", "im", "[", ":", ",", "1", ",", ":", ",", ":", "]", "+", "0.114", "*", "im", "[", ":", ",", "2", ",", ":", ",", ":", "]", ")", ".", "unsqueeze", "(", "1", ")", "# rgb2gray", "\n", "gradx", "=", "self", ".", "conv_opx", "(", "x", ")", "\n", "grady", "=", "self", ".", "conv_opy", "(", "x", ")", "\n", "\n", "x", "=", "(", "gradx", "**", "2", "+", "grady", "**", "2", ")", "**", "0.5", "\n", "x", "=", "(", "x", "-", "x", ".", "min", "(", ")", ")", "/", "(", "x", ".", "max", "(", ")", "-", "x", ".", "min", "(", ")", ")", "\n", "x", "=", "F", ".", "pad", "(", "x", ",", "(", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "im", ",", "x", "]", ",", "dim", "=", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.REBNCONV.__init__": [[35, 41], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "out_ch", "=", "3", ",", "dirate", "=", "1", ")", ":", "\n", "        ", "super", "(", "REBNCONV", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv_s1", "=", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "3", ",", "padding", "=", "1", "*", "dirate", ",", "dilation", "=", "1", "*", "dirate", ")", "\n", "self", ".", "bn_s1", "=", "nn", ".", "BatchNorm2d", "(", "out_ch", ")", "\n", "self", ".", "relu_s1", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.REBNCONV.forward": [[42, 47], ["seg.REBNCONV.relu_s1", "seg.REBNCONV.bn_s1", "seg.REBNCONV.conv_s1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hx", "=", "x", "\n", "xout", "=", "self", ".", "relu_s1", "(", "self", ".", "bn_s1", "(", "self", ".", "conv_s1", "(", "hx", ")", ")", ")", "\n", "\n", "return", "xout", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.RSU7.__init__": [[59, 89], ["torch.Module.__init__", "seg.REBNCONV", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "mid_ch", "=", "12", ",", "out_ch", "=", "3", ")", ":", "\n", "        ", "super", "(", "RSU7", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rebnconvin", "=", "REBNCONV", "(", "in_ch", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv1", "=", "REBNCONV", "(", "out_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv2", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv3", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv4", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool4", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv5", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool5", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv6", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv7", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "\n", "self", ".", "rebnconv6d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv5d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv4d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv3d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv2d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv1d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.RSU7.forward": [[90, 131], ["seg.RSU7.rebnconvin", "seg.RSU7.rebnconv1", "seg.RSU7.pool1", "seg.RSU7.rebnconv2", "seg.RSU7.pool2", "seg.RSU7.rebnconv3", "seg.RSU7.pool3", "seg.RSU7.rebnconv4", "seg.RSU7.pool4", "seg.RSU7.rebnconv5", "seg.RSU7.pool5", "seg.RSU7.rebnconv6", "seg.RSU7.rebnconv7", "seg.RSU7.rebnconv6d", "seg._upsample_like", "seg.RSU7.rebnconv5d", "seg._upsample_like", "seg.RSU7.rebnconv4d", "seg._upsample_like", "seg.RSU7.rebnconv3d", "seg._upsample_like", "seg.RSU7.rebnconv2d", "seg._upsample_like", "seg.RSU7.rebnconv1d", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hx", "=", "x", "\n", "hxin", "=", "self", ".", "rebnconvin", "(", "hx", ")", "\n", "\n", "hx1", "=", "self", ".", "rebnconv1", "(", "hxin", ")", "\n", "hx", "=", "self", ".", "pool1", "(", "hx1", ")", "\n", "\n", "hx2", "=", "self", ".", "rebnconv2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool2", "(", "hx2", ")", "\n", "\n", "hx3", "=", "self", ".", "rebnconv3", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool3", "(", "hx3", ")", "\n", "\n", "hx4", "=", "self", ".", "rebnconv4", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool4", "(", "hx4", ")", "\n", "\n", "hx5", "=", "self", ".", "rebnconv5", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool5", "(", "hx5", ")", "\n", "\n", "hx6", "=", "self", ".", "rebnconv6", "(", "hx", ")", "\n", "\n", "hx7", "=", "self", ".", "rebnconv7", "(", "hx6", ")", "\n", "\n", "hx6d", "=", "self", ".", "rebnconv6d", "(", "torch", ".", "cat", "(", "(", "hx7", ",", "hx6", ")", ",", "1", ")", ")", "\n", "hx6dup", "=", "_upsample_like", "(", "hx6d", ",", "hx5", ")", "\n", "\n", "hx5d", "=", "self", ".", "rebnconv5d", "(", "torch", ".", "cat", "(", "(", "hx6dup", ",", "hx5", ")", ",", "1", ")", ")", "\n", "hx5dup", "=", "_upsample_like", "(", "hx5d", ",", "hx4", ")", "\n", "\n", "hx4d", "=", "self", ".", "rebnconv4d", "(", "torch", ".", "cat", "(", "(", "hx5dup", ",", "hx4", ")", ",", "1", ")", ")", "\n", "hx4dup", "=", "_upsample_like", "(", "hx4d", ",", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "rebnconv3d", "(", "torch", ".", "cat", "(", "(", "hx4dup", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "rebnconv2d", "(", "torch", ".", "cat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "rebnconv1d", "(", "torch", ".", "cat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "return", "hx1d", "+", "hxin", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.RSU6.__init__": [[136, 162], ["torch.Module.__init__", "seg.REBNCONV", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "mid_ch", "=", "12", ",", "out_ch", "=", "3", ")", ":", "\n", "        ", "super", "(", "RSU6", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rebnconvin", "=", "REBNCONV", "(", "in_ch", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv1", "=", "REBNCONV", "(", "out_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv2", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv3", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv4", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool4", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv5", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv6", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "\n", "self", ".", "rebnconv5d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv4d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv3d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv2d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv1d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.RSU6.forward": [[163, 199], ["seg.RSU6.rebnconvin", "seg.RSU6.rebnconv1", "seg.RSU6.pool1", "seg.RSU6.rebnconv2", "seg.RSU6.pool2", "seg.RSU6.rebnconv3", "seg.RSU6.pool3", "seg.RSU6.rebnconv4", "seg.RSU6.pool4", "seg.RSU6.rebnconv5", "seg.RSU6.rebnconv6", "seg.RSU6.rebnconv5d", "seg._upsample_like", "seg.RSU6.rebnconv4d", "seg._upsample_like", "seg.RSU6.rebnconv3d", "seg._upsample_like", "seg.RSU6.rebnconv2d", "seg._upsample_like", "seg.RSU6.rebnconv1d", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hx", "=", "x", "\n", "\n", "hxin", "=", "self", ".", "rebnconvin", "(", "hx", ")", "\n", "\n", "hx1", "=", "self", ".", "rebnconv1", "(", "hxin", ")", "\n", "hx", "=", "self", ".", "pool1", "(", "hx1", ")", "\n", "\n", "hx2", "=", "self", ".", "rebnconv2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool2", "(", "hx2", ")", "\n", "\n", "hx3", "=", "self", ".", "rebnconv3", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool3", "(", "hx3", ")", "\n", "\n", "hx4", "=", "self", ".", "rebnconv4", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool4", "(", "hx4", ")", "\n", "\n", "hx5", "=", "self", ".", "rebnconv5", "(", "hx", ")", "\n", "\n", "hx6", "=", "self", ".", "rebnconv6", "(", "hx5", ")", "\n", "\n", "hx5d", "=", "self", ".", "rebnconv5d", "(", "torch", ".", "cat", "(", "(", "hx6", ",", "hx5", ")", ",", "1", ")", ")", "\n", "hx5dup", "=", "_upsample_like", "(", "hx5d", ",", "hx4", ")", "\n", "\n", "hx4d", "=", "self", ".", "rebnconv4d", "(", "torch", ".", "cat", "(", "(", "hx5dup", ",", "hx4", ")", ",", "1", ")", ")", "\n", "hx4dup", "=", "_upsample_like", "(", "hx4d", ",", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "rebnconv3d", "(", "torch", ".", "cat", "(", "(", "hx4dup", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "rebnconv2d", "(", "torch", ".", "cat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "rebnconv1d", "(", "torch", ".", "cat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "return", "hx1d", "+", "hxin", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.RSU5.__init__": [[204, 226], ["torch.Module.__init__", "seg.REBNCONV", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "mid_ch", "=", "12", ",", "out_ch", "=", "3", ")", ":", "\n", "        ", "super", "(", "RSU5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rebnconvin", "=", "REBNCONV", "(", "in_ch", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv1", "=", "REBNCONV", "(", "out_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv2", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv3", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool3", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv4", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv5", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "\n", "self", ".", "rebnconv4d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv3d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv2d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv1d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.RSU5.forward": [[227, 257], ["seg.RSU5.rebnconvin", "seg.RSU5.rebnconv1", "seg.RSU5.pool1", "seg.RSU5.rebnconv2", "seg.RSU5.pool2", "seg.RSU5.rebnconv3", "seg.RSU5.pool3", "seg.RSU5.rebnconv4", "seg.RSU5.rebnconv5", "seg.RSU5.rebnconv4d", "seg._upsample_like", "seg.RSU5.rebnconv3d", "seg._upsample_like", "seg.RSU5.rebnconv2d", "seg._upsample_like", "seg.RSU5.rebnconv1d", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hx", "=", "x", "\n", "\n", "hxin", "=", "self", ".", "rebnconvin", "(", "hx", ")", "\n", "\n", "hx1", "=", "self", ".", "rebnconv1", "(", "hxin", ")", "\n", "hx", "=", "self", ".", "pool1", "(", "hx1", ")", "\n", "\n", "hx2", "=", "self", ".", "rebnconv2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool2", "(", "hx2", ")", "\n", "\n", "hx3", "=", "self", ".", "rebnconv3", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool3", "(", "hx3", ")", "\n", "\n", "hx4", "=", "self", ".", "rebnconv4", "(", "hx", ")", "\n", "\n", "hx5", "=", "self", ".", "rebnconv5", "(", "hx4", ")", "\n", "\n", "hx4d", "=", "self", ".", "rebnconv4d", "(", "torch", ".", "cat", "(", "(", "hx5", ",", "hx4", ")", ",", "1", ")", ")", "\n", "hx4dup", "=", "_upsample_like", "(", "hx4d", ",", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "rebnconv3d", "(", "torch", ".", "cat", "(", "(", "hx4dup", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "rebnconv2d", "(", "torch", ".", "cat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "rebnconv1d", "(", "torch", ".", "cat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "return", "hx1d", "+", "hxin", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.RSU4.__init__": [[262, 280], ["torch.Module.__init__", "seg.REBNCONV", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "mid_ch", "=", "12", ",", "out_ch", "=", "3", ")", ":", "\n", "        ", "super", "(", "RSU4", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rebnconvin", "=", "REBNCONV", "(", "in_ch", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv1", "=", "REBNCONV", "(", "out_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool1", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv2", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "pool2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "rebnconv3", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv4", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "\n", "self", ".", "rebnconv3d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv2d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv1d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.RSU4.forward": [[281, 305], ["seg.RSU4.rebnconvin", "seg.RSU4.rebnconv1", "seg.RSU4.pool1", "seg.RSU4.rebnconv2", "seg.RSU4.pool2", "seg.RSU4.rebnconv3", "seg.RSU4.rebnconv4", "seg.RSU4.rebnconv3d", "seg._upsample_like", "seg.RSU4.rebnconv2d", "seg._upsample_like", "seg.RSU4.rebnconv1d", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hx", "=", "x", "\n", "\n", "hxin", "=", "self", ".", "rebnconvin", "(", "hx", ")", "\n", "\n", "hx1", "=", "self", ".", "rebnconv1", "(", "hxin", ")", "\n", "hx", "=", "self", ".", "pool1", "(", "hx1", ")", "\n", "\n", "hx2", "=", "self", ".", "rebnconv2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool2", "(", "hx2", ")", "\n", "\n", "hx3", "=", "self", ".", "rebnconv3", "(", "hx", ")", "\n", "\n", "hx4", "=", "self", ".", "rebnconv4", "(", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "rebnconv3d", "(", "torch", ".", "cat", "(", "(", "hx4", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "rebnconv2d", "(", "torch", ".", "cat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "rebnconv1d", "(", "torch", ".", "cat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "return", "hx1d", "+", "hxin", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.RSU4F.__init__": [[310, 324], ["torch.Module.__init__", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV", "seg.REBNCONV"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "mid_ch", "=", "12", ",", "out_ch", "=", "3", ")", ":", "\n", "        ", "super", "(", "RSU4F", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "rebnconvin", "=", "REBNCONV", "(", "in_ch", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n", "self", ".", "rebnconv1", "=", "REBNCONV", "(", "out_ch", ",", "mid_ch", ",", "dirate", "=", "1", ")", "\n", "self", ".", "rebnconv2", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "self", ".", "rebnconv3", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "4", ")", "\n", "\n", "self", ".", "rebnconv4", "=", "REBNCONV", "(", "mid_ch", ",", "mid_ch", ",", "dirate", "=", "8", ")", "\n", "\n", "self", ".", "rebnconv3d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "4", ")", "\n", "self", ".", "rebnconv2d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "mid_ch", ",", "dirate", "=", "2", ")", "\n", "self", ".", "rebnconv1d", "=", "REBNCONV", "(", "mid_ch", "*", "2", ",", "out_ch", ",", "dirate", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.RSU4F.forward": [[325, 341], ["seg.RSU4F.rebnconvin", "seg.RSU4F.rebnconv1", "seg.RSU4F.rebnconv2", "seg.RSU4F.rebnconv3", "seg.RSU4F.rebnconv4", "seg.RSU4F.rebnconv3d", "seg.RSU4F.rebnconv2d", "seg.RSU4F.rebnconv1d", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hx", "=", "x", "\n", "\n", "hxin", "=", "self", ".", "rebnconvin", "(", "hx", ")", "\n", "\n", "hx1", "=", "self", ".", "rebnconv1", "(", "hxin", ")", "\n", "hx2", "=", "self", ".", "rebnconv2", "(", "hx1", ")", "\n", "hx3", "=", "self", ".", "rebnconv3", "(", "hx2", ")", "\n", "\n", "hx4", "=", "self", ".", "rebnconv4", "(", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "rebnconv3d", "(", "torch", ".", "cat", "(", "(", "hx4", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx2d", "=", "self", ".", "rebnconv2d", "(", "torch", ".", "cat", "(", "(", "hx3d", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx1d", "=", "self", ".", "rebnconv1d", "(", "torch", ".", "cat", "(", "(", "hx2d", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "return", "hx1d", "+", "hxin", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.U2NET.__init__": [[346, 382], ["torch.Module.__init__", "seg.sobel_net", "seg.RSU7", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.RSU6", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.RSU5", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.RSU4", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.RSU4F", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.RSU4F", "seg.RSU4F", "seg.RSU4", "seg.RSU5", "seg.RSU6", "seg.RSU7", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "out_ch", "=", "1", ")", ":", "\n", "        ", "super", "(", "U2NET", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "edge", "=", "sobel_net", "(", ")", "\n", "\n", "self", ".", "stage1", "=", "RSU7", "(", "in_ch", ",", "32", ",", "64", ")", "\n", "self", ".", "pool12", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage2", "=", "RSU6", "(", "64", ",", "32", ",", "128", ")", "\n", "self", ".", "pool23", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage3", "=", "RSU5", "(", "128", ",", "64", ",", "256", ")", "\n", "self", ".", "pool34", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage4", "=", "RSU4", "(", "256", ",", "128", ",", "512", ")", "\n", "self", ".", "pool45", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage5", "=", "RSU4F", "(", "512", ",", "256", ",", "512", ")", "\n", "self", ".", "pool56", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage6", "=", "RSU4F", "(", "512", ",", "256", ",", "512", ")", "\n", "\n", "# decoder", "\n", "self", ".", "stage5d", "=", "RSU4F", "(", "1024", ",", "256", ",", "512", ")", "\n", "self", ".", "stage4d", "=", "RSU4", "(", "1024", ",", "128", ",", "256", ")", "\n", "self", ".", "stage3d", "=", "RSU5", "(", "512", ",", "64", ",", "128", ")", "\n", "self", ".", "stage2d", "=", "RSU6", "(", "256", ",", "32", ",", "64", ")", "\n", "self", ".", "stage1d", "=", "RSU7", "(", "128", ",", "16", ",", "64", ")", "\n", "\n", "self", ".", "side1", "=", "nn", ".", "Conv2d", "(", "64", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side2", "=", "nn", ".", "Conv2d", "(", "64", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side3", "=", "nn", ".", "Conv2d", "(", "128", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side4", "=", "nn", ".", "Conv2d", "(", "256", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side5", "=", "nn", ".", "Conv2d", "(", "512", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side6", "=", "nn", ".", "Conv2d", "(", "512", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "outconv", "=", "nn", ".", "Conv2d", "(", "6", ",", "out_ch", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.U2NET.forward": [[383, 448], ["seg.U2NET.edge", "seg.U2NET.stage1", "seg.U2NET.pool12", "seg.U2NET.stage2", "seg.U2NET.pool23", "seg.U2NET.stage3", "seg.U2NET.pool34", "seg.U2NET.stage4", "seg.U2NET.pool45", "seg.U2NET.stage5", "seg.U2NET.pool56", "seg.U2NET.stage6", "seg._upsample_like", "seg.U2NET.stage5d", "seg._upsample_like", "seg.U2NET.stage4d", "seg._upsample_like", "seg.U2NET.stage3d", "seg._upsample_like", "seg.U2NET.stage2d", "seg._upsample_like", "seg.U2NET.stage1d", "seg.U2NET.side1", "seg.U2NET.side2", "seg._upsample_like", "seg.U2NET.side3", "seg._upsample_like", "seg.U2NET.side4", "seg._upsample_like", "seg.U2NET.side5", "seg._upsample_like", "seg.U2NET.side6", "seg._upsample_like", "seg.U2NET.outconv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "edge", "(", "x", ")", "\n", "hx", "=", "x", "\n", "\n", "# stage 1", "\n", "hx1", "=", "self", ".", "stage1", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool12", "(", "hx1", ")", "\n", "\n", "# stage 2", "\n", "hx2", "=", "self", ".", "stage2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool23", "(", "hx2", ")", "\n", "\n", "# stage 3", "\n", "hx3", "=", "self", ".", "stage3", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool34", "(", "hx3", ")", "\n", "\n", "# stage 4", "\n", "hx4", "=", "self", ".", "stage4", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool45", "(", "hx4", ")", "\n", "\n", "# stage 5", "\n", "hx5", "=", "self", ".", "stage5", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool56", "(", "hx5", ")", "\n", "\n", "# stage 6", "\n", "hx6", "=", "self", ".", "stage6", "(", "hx", ")", "\n", "hx6up", "=", "_upsample_like", "(", "hx6", ",", "hx5", ")", "\n", "\n", "# -------------------- decoder --------------------", "\n", "hx5d", "=", "self", ".", "stage5d", "(", "torch", ".", "cat", "(", "(", "hx6up", ",", "hx5", ")", ",", "1", ")", ")", "\n", "hx5dup", "=", "_upsample_like", "(", "hx5d", ",", "hx4", ")", "\n", "\n", "hx4d", "=", "self", ".", "stage4d", "(", "torch", ".", "cat", "(", "(", "hx5dup", ",", "hx4", ")", ",", "1", ")", ")", "\n", "hx4dup", "=", "_upsample_like", "(", "hx4d", ",", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "stage3d", "(", "torch", ".", "cat", "(", "(", "hx4dup", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "stage2d", "(", "torch", ".", "cat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "stage1d", "(", "torch", ".", "cat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "# side output", "\n", "d1", "=", "self", ".", "side1", "(", "hx1d", ")", "\n", "\n", "d2", "=", "self", ".", "side2", "(", "hx2d", ")", "\n", "d2", "=", "_upsample_like", "(", "d2", ",", "d1", ")", "\n", "\n", "d3", "=", "self", ".", "side3", "(", "hx3d", ")", "\n", "d3", "=", "_upsample_like", "(", "d3", ",", "d1", ")", "\n", "\n", "d4", "=", "self", ".", "side4", "(", "hx4d", ")", "\n", "d4", "=", "_upsample_like", "(", "d4", ",", "d1", ")", "\n", "\n", "d5", "=", "self", ".", "side5", "(", "hx5d", ")", "\n", "d5", "=", "_upsample_like", "(", "d5", ",", "d1", ")", "\n", "\n", "d6", "=", "self", ".", "side6", "(", "hx6", ")", "\n", "d6", "=", "_upsample_like", "(", "d6", ",", "d1", ")", "\n", "\n", "d0", "=", "self", ".", "outconv", "(", "torch", ".", "cat", "(", "(", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", ")", ",", "1", ")", ")", "\n", "\n", "return", "torch", ".", "sigmoid", "(", "d0", ")", ",", "torch", ".", "sigmoid", "(", "d1", ")", ",", "torch", ".", "sigmoid", "(", "d2", ")", ",", "torch", ".", "sigmoid", "(", "d3", ")", ",", "torch", ".", "sigmoid", "(", "\n", "d4", ")", ",", "torch", ".", "sigmoid", "(", "d5", ")", ",", "torch", ".", "sigmoid", "(", "d6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.U2NETP.__init__": [[453, 488], ["torch.Module.__init__", "seg.RSU7", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.RSU6", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.RSU5", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.RSU4", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.RSU4F", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "seg.RSU4F", "seg.RSU4F", "seg.RSU4", "seg.RSU5", "seg.RSU6", "seg.RSU7", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", "=", "3", ",", "out_ch", "=", "1", ")", ":", "\n", "        ", "super", "(", "U2NETP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "stage1", "=", "RSU7", "(", "in_ch", ",", "16", ",", "64", ")", "\n", "self", ".", "pool12", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage2", "=", "RSU6", "(", "64", ",", "16", ",", "64", ")", "\n", "self", ".", "pool23", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage3", "=", "RSU5", "(", "64", ",", "16", ",", "64", ")", "\n", "self", ".", "pool34", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage4", "=", "RSU4", "(", "64", ",", "16", ",", "64", ")", "\n", "self", ".", "pool45", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage5", "=", "RSU4F", "(", "64", ",", "16", ",", "64", ")", "\n", "self", ".", "pool56", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "\n", "\n", "self", ".", "stage6", "=", "RSU4F", "(", "64", ",", "16", ",", "64", ")", "\n", "\n", "# decoder", "\n", "self", ".", "stage5d", "=", "RSU4F", "(", "128", ",", "16", ",", "64", ")", "\n", "self", ".", "stage4d", "=", "RSU4", "(", "128", ",", "16", ",", "64", ")", "\n", "self", ".", "stage3d", "=", "RSU5", "(", "128", ",", "16", ",", "64", ")", "\n", "self", ".", "stage2d", "=", "RSU6", "(", "128", ",", "16", ",", "64", ")", "\n", "self", ".", "stage1d", "=", "RSU7", "(", "128", ",", "16", ",", "64", ")", "\n", "\n", "self", ".", "side1", "=", "nn", ".", "Conv2d", "(", "64", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side2", "=", "nn", ".", "Conv2d", "(", "64", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side3", "=", "nn", ".", "Conv2d", "(", "64", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side4", "=", "nn", ".", "Conv2d", "(", "64", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side5", "=", "nn", ".", "Conv2d", "(", "64", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "side6", "=", "nn", ".", "Conv2d", "(", "64", ",", "out_ch", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "outconv", "=", "nn", ".", "Conv2d", "(", "6", ",", "out_ch", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.U2NETP.forward": [[489, 553], ["seg.U2NETP.stage1", "seg.U2NETP.pool12", "seg.U2NETP.stage2", "seg.U2NETP.pool23", "seg.U2NETP.stage3", "seg.U2NETP.pool34", "seg.U2NETP.stage4", "seg.U2NETP.pool45", "seg.U2NETP.stage5", "seg.U2NETP.pool56", "seg.U2NETP.stage6", "seg._upsample_like", "seg.U2NETP.stage5d", "seg._upsample_like", "seg.U2NETP.stage4d", "seg._upsample_like", "seg.U2NETP.stage3d", "seg._upsample_like", "seg.U2NETP.stage2d", "seg._upsample_like", "seg.U2NETP.stage1d", "seg.U2NETP.side1", "seg.U2NETP.side2", "seg._upsample_like", "seg.U2NETP.side3", "seg._upsample_like", "seg.U2NETP.side4", "seg._upsample_like", "seg.U2NETP.side5", "seg._upsample_like", "seg.U2NETP.side6", "seg._upsample_like", "seg.U2NETP.outconv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "hx", "=", "x", "\n", "\n", "# stage 1", "\n", "hx1", "=", "self", ".", "stage1", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool12", "(", "hx1", ")", "\n", "\n", "# stage 2", "\n", "hx2", "=", "self", ".", "stage2", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool23", "(", "hx2", ")", "\n", "\n", "# stage 3", "\n", "hx3", "=", "self", ".", "stage3", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool34", "(", "hx3", ")", "\n", "\n", "# stage 4", "\n", "hx4", "=", "self", ".", "stage4", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool45", "(", "hx4", ")", "\n", "\n", "# stage 5", "\n", "hx5", "=", "self", ".", "stage5", "(", "hx", ")", "\n", "hx", "=", "self", ".", "pool56", "(", "hx5", ")", "\n", "\n", "# stage 6", "\n", "hx6", "=", "self", ".", "stage6", "(", "hx", ")", "\n", "hx6up", "=", "_upsample_like", "(", "hx6", ",", "hx5", ")", "\n", "\n", "# decoder", "\n", "hx5d", "=", "self", ".", "stage5d", "(", "torch", ".", "cat", "(", "(", "hx6up", ",", "hx5", ")", ",", "1", ")", ")", "\n", "hx5dup", "=", "_upsample_like", "(", "hx5d", ",", "hx4", ")", "\n", "\n", "hx4d", "=", "self", ".", "stage4d", "(", "torch", ".", "cat", "(", "(", "hx5dup", ",", "hx4", ")", ",", "1", ")", ")", "\n", "hx4dup", "=", "_upsample_like", "(", "hx4d", ",", "hx3", ")", "\n", "\n", "hx3d", "=", "self", ".", "stage3d", "(", "torch", ".", "cat", "(", "(", "hx4dup", ",", "hx3", ")", ",", "1", ")", ")", "\n", "hx3dup", "=", "_upsample_like", "(", "hx3d", ",", "hx2", ")", "\n", "\n", "hx2d", "=", "self", ".", "stage2d", "(", "torch", ".", "cat", "(", "(", "hx3dup", ",", "hx2", ")", ",", "1", ")", ")", "\n", "hx2dup", "=", "_upsample_like", "(", "hx2d", ",", "hx1", ")", "\n", "\n", "hx1d", "=", "self", ".", "stage1d", "(", "torch", ".", "cat", "(", "(", "hx2dup", ",", "hx1", ")", ",", "1", ")", ")", "\n", "\n", "# side output", "\n", "d1", "=", "self", ".", "side1", "(", "hx1d", ")", "\n", "\n", "d2", "=", "self", ".", "side2", "(", "hx2d", ")", "\n", "d2", "=", "_upsample_like", "(", "d2", ",", "d1", ")", "\n", "\n", "d3", "=", "self", ".", "side3", "(", "hx3d", ")", "\n", "d3", "=", "_upsample_like", "(", "d3", ",", "d1", ")", "\n", "\n", "d4", "=", "self", ".", "side4", "(", "hx4d", ")", "\n", "d4", "=", "_upsample_like", "(", "d4", ",", "d1", ")", "\n", "\n", "d5", "=", "self", ".", "side5", "(", "hx5d", ")", "\n", "d5", "=", "_upsample_like", "(", "d5", ",", "d1", ")", "\n", "\n", "d6", "=", "self", ".", "side6", "(", "hx6", ")", "\n", "d6", "=", "_upsample_like", "(", "d6", ",", "d1", ")", "\n", "\n", "d0", "=", "self", ".", "outconv", "(", "torch", ".", "cat", "(", "(", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", ")", ",", "1", ")", ")", "\n", "\n", "return", "torch", ".", "sigmoid", "(", "d0", ")", ",", "torch", ".", "sigmoid", "(", "d1", ")", ",", "torch", ".", "sigmoid", "(", "d2", ")", ",", "torch", ".", "sigmoid", "(", "d3", ")", ",", "torch", ".", "sigmoid", "(", "\n", "d4", ")", ",", "torch", ".", "sigmoid", "(", "d5", ")", ",", "torch", ".", "sigmoid", "(", "d6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg._upsample_like": [[50, 54], ["torch.interpolate"], "function", ["None"], ["", "", "def", "_upsample_like", "(", "src", ",", "tar", ")", ":", "\n", "    ", "src", "=", "F", ".", "interpolate", "(", "src", ",", "size", "=", "tar", ".", "shape", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "return", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.seg.get_parameter_number": [[555, 559], ["sum", "sum", "p.numel", "p.numel", "net.parameters", "net.parameters"], "function", ["None"], ["", "", "def", "get_parameter_number", "(", "net", ")", ":", "\n", "    ", "total_num", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "net", ".", "parameters", "(", ")", ")", "\n", "trainable_num", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "net", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "return", "{", "'Total'", ":", "total_num", ",", "'Trainable'", ":", "trainable_num", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.__init__": [[14, 17], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "tensors", ",", "mask", ":", "Optional", "[", "Tensor", "]", ")", ":", "\n", "        ", "self", ".", "tensors", "=", "tensors", "\n", "self", ".", "mask", "=", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to": [[18, 28], ["position_encoding.NestedTensor.tensors.to", "position_encoding.NestedTensor", "mask.to"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.to"], ["", "def", "to", "(", "self", ",", "device", ")", ":", "\n", "# type: (Device) -> NestedTensor # noqa", "\n", "        ", "cast_tensor", "=", "self", ".", "tensors", ".", "to", "(", "device", ")", "\n", "mask", "=", "self", ".", "mask", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "assert", "mask", "is", "not", "None", "\n", "cast_mask", "=", "mask", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "cast_mask", "=", "None", "\n", "", "return", "NestedTensor", "(", "cast_tensor", ",", "cast_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.decompose": [[29, 31], ["None"], "methods", ["None"], ["", "def", "decompose", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "tensors", ",", "self", ".", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.NestedTensor.__repr__": [[32, 34], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "tensors", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingSine.__init__": [[41, 51], ["torch.nn.Module.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__"], ["def", "__init__", "(", "self", ",", "num_pos_feats", "=", "64", ",", "temperature", "=", "10000", ",", "normalize", "=", "False", ",", "scale", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_pos_feats", "=", "num_pos_feats", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "normalize", "=", "normalize", "\n", "if", "scale", "is", "not", "None", "and", "normalize", "is", "False", ":", "\n", "            ", "raise", "ValueError", "(", "\"normalize should be True if scale is passed\"", ")", "\n", "", "if", "scale", "is", "None", ":", "\n", "            ", "scale", "=", "2", "*", "math", ".", "pi", "\n", "", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingSine.forward": [[52, 71], ["mask.cumsum", "mask.cumsum", "torch.arange().cuda", "torch.stack().flatten", "torch.stack().flatten", "torch.cat().permute", "torch.arange", "torch.stack", "torch.stack", "torch.cat", "pos_x[].sin", "pos_x[].cos", "pos_y[].sin", "pos_y[].cos"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "mask", ")", ":", "\n", "        ", "assert", "mask", "is", "not", "None", "\n", "y_embed", "=", "mask", ".", "cumsum", "(", "1", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "x_embed", "=", "mask", ".", "cumsum", "(", "2", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "eps", "=", "1e-6", "\n", "y_embed", "=", "y_embed", "/", "(", "y_embed", "[", ":", ",", "-", "1", ":", ",", ":", "]", "+", "eps", ")", "*", "self", ".", "scale", "\n", "x_embed", "=", "x_embed", "/", "(", "x_embed", "[", ":", ",", ":", ",", "-", "1", ":", "]", "+", "eps", ")", "*", "self", ".", "scale", "\n", "\n", "", "dim_t", "=", "torch", ".", "arange", "(", "self", ".", "num_pos_feats", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "cuda", "(", ")", "\n", "dim_t", "=", "self", ".", "temperature", "**", "(", "2", "*", "(", "dim_t", "//", "2", ")", "/", "self", ".", "num_pos_feats", ")", "\n", "\n", "pos_x", "=", "x_embed", "[", ":", ",", ":", ",", ":", ",", "None", "]", "/", "dim_t", "\n", "pos_y", "=", "y_embed", "[", ":", ",", ":", ",", ":", ",", "None", "]", "/", "dim_t", "\n", "pos_x", "=", "torch", ".", "stack", "(", "(", "pos_x", "[", ":", ",", ":", ",", ":", ",", "0", ":", ":", "2", "]", ".", "sin", "(", ")", ",", "pos_x", "[", ":", ",", ":", ",", ":", ",", "1", ":", ":", "2", "]", ".", "cos", "(", ")", ")", ",", "dim", "=", "4", ")", ".", "flatten", "(", "3", ")", "\n", "pos_y", "=", "torch", ".", "stack", "(", "(", "pos_y", "[", ":", ",", ":", ",", ":", ",", "0", ":", ":", "2", "]", ".", "sin", "(", ")", ",", "pos_y", "[", ":", ",", ":", ",", ":", ",", "1", ":", ":", "2", "]", ".", "cos", "(", ")", ")", ",", "dim", "=", "4", ")", ".", "flatten", "(", "3", ")", "\n", "pos", "=", "torch", ".", "cat", "(", "(", "pos_y", ",", "pos_x", ")", ",", "dim", "=", "3", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "# print(pos.shape)", "\n", "return", "pos", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__": [[77, 82], ["torch.nn.Module.__init__", "torch.nn.Embedding", "torch.nn.Embedding", "position_encoding.PositionEmbeddingLearned.reset_parameters"], "methods", ["home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.__init__", "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.reset_parameters"], ["def", "__init__", "(", "self", ",", "num_pos_feats", "=", "256", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "row_embed", "=", "nn", ".", "Embedding", "(", "50", ",", "num_pos_feats", ")", "\n", "self", ".", "col_embed", "=", "nn", ".", "Embedding", "(", "50", ",", "num_pos_feats", ")", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.reset_parameters": [[83, 86], ["torch.nn.init.uniform_", "torch.nn.init.uniform_"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "nn", ".", "init", ".", "uniform_", "(", "self", ".", "row_embed", ".", "weight", ")", "\n", "nn", ".", "init", ".", "uniform_", "(", "self", ".", "col_embed", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.PositionEmbeddingLearned.forward": [[87, 99], ["torch.arange", "torch.arange", "position_encoding.PositionEmbeddingLearned.col_embed", "position_encoding.PositionEmbeddingLearned.row_embed", "torch.cat().permute().unsqueeze().repeat", "torch.cat().permute().unsqueeze", "torch.cat().permute", "torch.cat", "position_encoding.PositionEmbeddingLearned.unsqueeze().repeat", "position_encoding.PositionEmbeddingLearned.unsqueeze().repeat", "position_encoding.PositionEmbeddingLearned.unsqueeze", "position_encoding.PositionEmbeddingLearned.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "tensor_list", ":", "NestedTensor", ")", ":", "\n", "        ", "x", "=", "tensor_list", ".", "tensors", "\n", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "i", "=", "torch", ".", "arange", "(", "w", ",", "device", "=", "x", ".", "device", ")", "\n", "j", "=", "torch", ".", "arange", "(", "h", ",", "device", "=", "x", ".", "device", ")", "\n", "x_emb", "=", "self", ".", "col_embed", "(", "i", ")", "\n", "y_emb", "=", "self", ".", "row_embed", "(", "j", ")", "\n", "pos", "=", "torch", ".", "cat", "(", "[", "\n", "x_emb", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "h", ",", "1", ",", "1", ")", ",", "\n", "y_emb", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "w", ",", "1", ")", ",", "\n", "]", ",", "dim", "=", "-", "1", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "x", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", "\n", "return", "pos", "\n", "\n"]], "home.repos.pwc.inspect_result.fh2019ustc_doctr.None.position_encoding.build_position_encoding": [[100, 110], ["position_encoding.PositionEmbeddingSine", "position_encoding.PositionEmbeddingLearned", "ValueError"], "function", ["None"], ["", "", "def", "build_position_encoding", "(", "hidden_dim", "=", "512", ",", "position_embedding", "=", "'sine'", ")", ":", "\n", "    ", "N_steps", "=", "hidden_dim", "//", "2", "\n", "if", "position_embedding", "in", "(", "'v2'", ",", "'sine'", ")", ":", "\n", "        ", "position_embedding", "=", "PositionEmbeddingSine", "(", "N_steps", ",", "normalize", "=", "True", ")", "\n", "", "elif", "position_embedding", "in", "(", "'v3'", ",", "'learned'", ")", ":", "\n", "        ", "position_embedding", "=", "PositionEmbeddingLearned", "(", "N_steps", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"not supported {position_embedding}\"", ")", "\n", "\n", "", "return", "position_embedding", "\n", "\n"]]}