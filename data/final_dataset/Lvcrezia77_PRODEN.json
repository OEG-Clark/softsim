{"home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.None.main.adjust_learning_rate": [[132, 135], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr_plan", "[", "epoch", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.None.main.evaluate": [[144, 158], ["model.eval", "images.to.to", "labels.to.to", "model", "torch.softmax", "torch.max", "torch.max", "images.to.size", "float", "float"], "function", ["None"], ["def", "evaluate", "(", "loader", ",", "model", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "for", "images", ",", "_", ",", "labels", ",", "_", "in", "loader", ":", "\n", "        ", "images", "=", "images", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ")", "\n", "output1", "=", "model", "(", "images", ")", "\n", "output", "=", "F", ".", "softmax", "(", "output1", ",", "dim", "=", "1", ")", "\n", "_", ",", "pred", "=", "torch", ".", "max", "(", "output", ".", "data", ",", "1", ")", "\n", "total", "+=", "images", ".", "size", "(", "0", ")", "\n", "correct", "+=", "(", "pred", "==", "labels", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "", "acc", "=", "100", "*", "float", "(", "correct", ")", "/", "float", "(", "total", ")", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.None.main.main": [[160, 213], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "cifar_models.resnet.to", "print", "torch.optim.SGD", "torch.optim.SGD", "range", "utils.models.linear", "cifar_models.resnet.parameters", "cifar_models.resnet.train", "main.adjust_learning_rate", "enumerate", "main.evaluate", "main.evaluate", "utils.models.mlp", "torch.autograd.Variable().to", "torch.autograd.Variable().to", "trues.to.to", "cifar_models.resnet.", "utils.utils_loss.partial_loss", "torch.optim.SGD.zero_grad", "loss.backward", "torch.optim.SGD.step", "enumerate", "open", "file.write", "cifar_models.convnet", "new_label[].detach", "cifar_models.resnet", "torch.autograd.Variable", "torch.autograd.Variable", "str", "round", "str", "str", "round", "int"], "function", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.None.main.adjust_learning_rate", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.None.main.evaluate", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.None.main.evaluate", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_loss.partial_loss", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.resnet"], ["", "def", "main", "(", ")", ":", "\n", "# print ('loading dataset...')", "\n", "    ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "train_dataset", ",", "\n", "batch_size", "=", "args", ".", "bs", ",", "\n", "num_workers", "=", "args", ".", "nw", ",", "\n", "drop_last", "=", "True", ",", "\n", "shuffle", "=", "True", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", "=", "test_dataset", ",", "\n", "batch_size", "=", "args", ".", "bs", ",", "\n", "num_workers", "=", "args", ".", "nw", ",", "\n", "drop_last", "=", "False", ",", "\n", "shuffle", "=", "False", ")", "\n", "\n", "# print ('building model...')", "\n", "if", "args", ".", "model", "==", "'linear'", ":", "\n", "        ", "net", "=", "linear", "(", "n_inputs", "=", "num_features", ",", "n_outputs", "=", "num_classes", ")", "\n", "", "elif", "args", ".", "model", "==", "'mlp'", ":", "\n", "        ", "net", "=", "mlp", "(", "n_inputs", "=", "num_features", ",", "n_outputs", "=", "num_classes", ")", "\n", "", "elif", "args", ".", "model", "==", "'convnet'", ":", "\n", "        ", "net", "=", "convnet", "(", "input_channels", "=", "input_channels", ",", "n_outputs", "=", "num_classes", ",", "dropout_rate", "=", "dropout_rate", ")", "\n", "", "elif", "args", ".", "model", "==", "'resnet'", ":", "\n", "        ", "net", "=", "resnet", "(", "depth", "=", "32", ",", "n_outputs", "=", "num_classes", ")", "\n", "", "net", ".", "to", "(", "device", ")", "\n", "print", "(", "net", ".", "parameters", ")", "\n", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "net", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "wd", ",", "momentum", "=", "0.9", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "0", ",", "args", ".", "ep", ")", ":", "\n", "# print ('training...')", "\n", "        ", "net", ".", "train", "(", ")", "\n", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", "\n", "\n", "for", "i", ",", "(", "images", ",", "labels", ",", "trues", ",", "indexes", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "images", "=", "Variable", "(", "images", ")", ".", "to", "(", "device", ")", "\n", "labels", "=", "Variable", "(", "labels", ")", ".", "to", "(", "device", ")", "\n", "trues", "=", "trues", ".", "to", "(", "device", ")", "\n", "output", "=", "net", "(", "images", ")", "\n", "\n", "loss", ",", "new_label", "=", "partial_loss", "(", "output", ",", "labels", ",", "trues", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# update weights", "\n", "for", "j", ",", "k", "in", "enumerate", "(", "indexes", ")", ":", "\n", "                ", "train_loader", ".", "dataset", ".", "train_final_labels", "[", "k", ",", ":", "]", "=", "new_label", "[", "j", ",", ":", "]", ".", "detach", "(", ")", "\n", "\n", "# print ('evaluating model...')       ", "\n", "", "", "train_acc", "=", "evaluate", "(", "train_loader", ",", "net", ")", "\n", "test_acc", "=", "evaluate", "(", "test_loader", ",", "net", ")", "\n", "\n", "with", "open", "(", "save_file", ",", "'a'", ")", "as", "file", ":", "\n", "            ", "file", ".", "write", "(", "str", "(", "int", "(", "epoch", ")", ")", "+", "': Training Acc.: '", "+", "str", "(", "round", "(", "train_acc", ",", "4", ")", ")", "+", "' , Test Acc.: '", "+", "str", "(", "round", "(", "test_acc", ",", "4", ")", ")", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.models.linear.__init__": [[8, 13], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_inputs", ",", "n_outputs", ")", ":", "\n", "        ", "super", "(", "linear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "L1", "=", "nn", ".", "Linear", "(", "n_inputs", ",", "n_outputs", ")", "\n", "init", ".", "xavier_uniform_", "(", "self", ".", "L1", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.models.linear.forward": [[14, 17], ["models.linear.L1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "L1", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.models.mlp.__init__": [[20, 46], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ones_", "torch.ones_", "torch.ones_", "torch.ones_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ones_", "torch.ones_", "torch.ones_", "torch.ones_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ones_", "torch.ones_", "torch.ones_", "torch.ones_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ones_", "torch.ones_", "torch.ones_", "torch.ones_", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.xavier_uniform_", "torch.zeros_", "torch.zeros_", "torch.zeros_", "torch.zeros_"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_inputs", ",", "n_outputs", ",", "parameter_momentum", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "mlp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "L1", "=", "nn", ".", "Linear", "(", "n_inputs", ",", "300", ",", "bias", "=", "False", ")", "\n", "init", ".", "xavier_uniform_", "(", "self", ".", "L1", ".", "weight", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "300", ",", "momentum", "=", "parameter_momentum", ")", "\n", "init", ".", "ones_", "(", "self", ".", "bn1", ".", "weight", ")", "\n", "\n", "self", ".", "L2", "=", "nn", ".", "Linear", "(", "300", ",", "301", ",", "bias", "=", "False", ")", "\n", "init", ".", "xavier_uniform_", "(", "self", ".", "L2", ".", "weight", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "301", ",", "momentum", "=", "parameter_momentum", ")", "\n", "init", ".", "ones_", "(", "self", ".", "bn2", ".", "weight", ")", "\n", "\n", "self", ".", "L3", "=", "nn", ".", "Linear", "(", "301", ",", "302", ",", "bias", "=", "False", ")", "\n", "init", ".", "xavier_uniform_", "(", "self", ".", "L3", ".", "weight", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "302", ",", "momentum", "=", "parameter_momentum", ")", "\n", "init", ".", "ones_", "(", "self", ".", "bn3", ".", "weight", ")", "\n", "\n", "self", ".", "L4", "=", "nn", ".", "Linear", "(", "302", ",", "303", ",", "bias", "=", "False", ")", "\n", "init", ".", "xavier_uniform_", "(", "self", ".", "L4", ".", "weight", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm1d", "(", "303", ",", "momentum", "=", "parameter_momentum", ")", "\n", "init", ".", "ones_", "(", "self", ".", "bn4", ".", "weight", ")", "\n", "\n", "self", ".", "L5", "=", "nn", ".", "Linear", "(", "303", ",", "n_outputs", ",", "bias", "=", "True", ")", "\n", "init", ".", "xavier_uniform_", "(", "self", ".", "L5", ".", "weight", ")", "\n", "init", ".", "zeros_", "(", "self", ".", "L5", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.models.mlp.forward": [[47, 66], ["models.mlp.L1", "models.mlp.bn1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "models.mlp.L2", "models.mlp.bn2", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "models.mlp.L3", "models.mlp.bn3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "models.mlp.L4", "models.mlp.bn4", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "models.mlp.L5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "L1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "L2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "L3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "L4", "(", "x", ")", "\n", "x", "=", "self", ".", "bn4", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "L5", "(", "x", ")", "\n", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.binarize_class": [[8, 15], ["y.reshape", "sklearn.preprocessing.OneHotEncoder", "sklearn.preprocessing.OneHotEncoder.fit", "sklearn.preprocessing.OneHotEncoder.transform().toarray().astype", "torch.from_numpy", "len", "sklearn.preprocessing.OneHotEncoder.transform().toarray", "sklearn.preprocessing.OneHotEncoder.transform"], "function", ["None"], ["def", "binarize_class", "(", "y", ")", ":", "\n", "    ", "label", "=", "y", ".", "reshape", "(", "len", "(", "y", ")", ",", "-", "1", ")", "\n", "enc", "=", "OneHotEncoder", "(", "categories", "=", "'auto'", ")", "\n", "enc", ".", "fit", "(", "label", ")", "\n", "label", "=", "enc", ".", "transform", "(", "label", ")", ".", "toarray", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "label", "=", "torch", ".", "from_numpy", "(", "label", ")", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.partialize": [[17, 45], ["y.clone", "range", "numpy.eye", "range", "range", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "numpy.where", "numpy.where", "numpy.random.randint", "numpy.random.binomial", "numpy.random.binomial"], "function", ["None"], ["", "def", "partialize", "(", "y", ",", "y0", ",", "t", ",", "p", ")", ":", "\n", "    ", "new_y", "=", "y", ".", "clone", "(", ")", "\n", "n", ",", "c", "=", "y", ".", "shape", "[", "0", "]", ",", "y", ".", "shape", "[", "1", "]", "\n", "avgC", "=", "0", "\n", "\n", "if", "t", "==", "'binomial'", ":", "\n", "        ", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "            ", "row", "=", "new_y", "[", "i", ",", ":", "]", "\n", "row", "[", "np", ".", "where", "(", "np", ".", "random", ".", "binomial", "(", "1", ",", "p", ",", "c", ")", "==", "1", ")", "]", "=", "1", "\n", "while", "torch", ".", "sum", "(", "row", ")", "==", "1", ":", "\n", "                ", "row", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "c", ")", "]", "=", "1", "\n", "", "avgC", "+=", "torch", ".", "sum", "(", "row", ")", "\n", "new_y", "[", "i", "]", "=", "row", "/", "torch", ".", "sum", "(", "row", ")", "\n", "\n", "", "", "if", "t", "==", "'pair'", ":", "\n", "        ", "P", "=", "np", ".", "eye", "(", "c", ")", "\n", "for", "idx", "in", "range", "(", "0", ",", "c", "-", "1", ")", ":", "\n", "            ", "P", "[", "idx", ",", "idx", "]", ",", "P", "[", "idx", ",", "idx", "+", "1", "]", "=", "1", ",", "p", "\n", "", "P", "[", "c", "-", "1", ",", "c", "-", "1", "]", ",", "P", "[", "c", "-", "1", ",", "0", "]", "=", "1", ",", "p", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "            ", "row", "=", "new_y", "[", "i", ",", ":", "]", "\n", "idx", "=", "y0", "[", "i", "]", "\n", "row", "[", "np", ".", "where", "(", "np", ".", "random", ".", "binomial", "(", "1", ",", "P", "[", "idx", ",", ":", "]", ",", "c", ")", "==", "1", ")", "]", "=", "1", "\n", "avgC", "+=", "torch", ".", "sum", "(", "row", ")", "\n", "new_y", "[", "i", "]", "=", "row", "/", "torch", ".", "sum", "(", "row", ")", "\n", "\n", "", "", "avgC", "=", "avgC", "/", "n", "\n", "return", "new_y", ",", "avgC", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.check_integrity": [[47, 58], ["hashlib.md5", "hashlib.md5.hexdigest", "os.path.isfile", "open", "iter", "hashlib.md5.update", "f.read"], "function", ["None"], ["", "def", "check_integrity", "(", "fpath", ",", "md5", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "isfile", "(", "fpath", ")", ":", "\n", "        ", "return", "False", "\n", "", "md5o", "=", "hashlib", ".", "md5", "(", ")", "\n", "with", "open", "(", "fpath", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "for", "chunk", "in", "iter", "(", "lambda", ":", "f", ".", "read", "(", "1024", "*", "1024", ")", ",", "b''", ")", ":", "\n", "            ", "md5o", ".", "update", "(", "chunk", ")", "\n", "", "", "md5c", "=", "md5o", ".", "hexdigest", "(", ")", "\n", "if", "md5c", "!=", "md5", ":", "\n", "        ", "return", "False", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.download_url": [[60, 79], ["os.path.expanduser", "os.path.join", "os.makedirs", "os.path.isfile", "utils_algo.check_integrity", "print", "print", "urllib.request.urlretrieve"], "function", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.check_integrity"], ["", "def", "download_url", "(", "url", ",", "root", ",", "filename", ",", "md5", ")", ":", "\n", "    ", "import", "urllib", ".", "request", "\n", "\n", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "fpath", "=", "os", ".", "path", ".", "join", "(", "root", ",", "filename", ")", "\n", "\n", "try", ":", "\n", "        ", "os", ".", "makedirs", "(", "root", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "        ", "if", "e", ".", "errno", "==", "errno", ".", "EEXIST", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "raise", "\n", "\n", "", "", "if", "os", ".", "path", ".", "isfile", "(", "fpath", ")", "and", "check_integrity", "(", "fpath", ",", "md5", ")", ":", "\n", "        ", "print", "(", "'Using downloaded and verified file: '", "+", "fpath", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Downloading '", "+", "url", "+", "' to '", "+", "fpath", ")", "\n", "urllib", ".", "request", ".", "urlretrieve", "(", "url", ",", "fpath", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_loss.partial_loss": [[5, 19], ["torch.softmax", "target.clone", "torch.log", "torch.log", "l.size", "target.clone.sum().repeat().transpose", "torch.sum", "torch.sum", "target.clone.sum().repeat", "target.clone.size", "target.clone.sum"], "function", ["None"], ["def", "partial_loss", "(", "output1", ",", "target", ",", "true", ")", ":", "\n", "    ", "output", "=", "F", ".", "softmax", "(", "output1", ",", "dim", "=", "1", ")", "\n", "l", "=", "target", "*", "torch", ".", "log", "(", "output", ")", "\n", "loss", "=", "(", "-", "torch", ".", "sum", "(", "l", ")", ")", "/", "l", ".", "size", "(", "0", ")", "\n", "\n", "revisedY", "=", "target", ".", "clone", "(", ")", "\n", "revisedY", "[", "revisedY", ">", "0", "]", "=", "1", "\n", "revisedY", "=", "revisedY", "*", "output", "\n", "revisedY", "=", "revisedY", "/", "revisedY", ".", "sum", "(", "dim", "=", "1", ")", ".", "repeat", "(", "revisedY", ".", "size", "(", "1", ")", ",", "1", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "new_target", "=", "revisedY", "\n", "\n", "\n", "return", "loss", ",", "new_target", "\n", "", ""]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.convnet.convnet.__init__": [[15, 38], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", "=", "3", ",", "n_outputs", "=", "10", ",", "dropout_rate", "=", "0.25", ")", ":", "\n", "        ", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "super", "(", "convnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "c1", "=", "nn", ".", "Conv2d", "(", "input_channels", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "c2", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "c3", "=", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "c4", "=", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "c5", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "c6", "=", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "c7", "=", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "c8", "=", "nn", ".", "Conv2d", "(", "512", ",", "256", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "c9", "=", "nn", ".", "Conv2d", "(", "256", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "l_c1", "=", "nn", ".", "Linear", "(", "128", ",", "n_outputs", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "256", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm2d", "(", "256", ")", "\n", "self", ".", "bn6", "=", "nn", ".", "BatchNorm2d", "(", "256", ")", "\n", "self", ".", "bn7", "=", "nn", ".", "BatchNorm2d", "(", "512", ")", "\n", "self", ".", "bn8", "=", "nn", ".", "BatchNorm2d", "(", "256", ")", "\n", "self", ".", "bn9", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.convnet.convnet.forward": [[40, 80], ["convnet.convnet.c1", "convnet.convnet.bn1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "convnet.convnet.c2", "convnet.convnet.bn2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "convnet.convnet.c3", "convnet.convnet.bn3", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.dropout2d", "torch.dropout2d", "torch.dropout2d", "torch.dropout2d", "convnet.convnet.c4", "convnet.convnet.bn4", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "convnet.convnet.c5", "convnet.convnet.bn5", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "convnet.convnet.c6", "convnet.convnet.bn6", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.dropout2d", "torch.dropout2d", "torch.dropout2d", "torch.dropout2d", "convnet.convnet.c7", "convnet.convnet.bn7", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "convnet.convnet.c8", "convnet.convnet.bn8", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "convnet.convnet.c9", "convnet.convnet.bn9", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "convnet.convnet.view", "convnet.convnet.l_c1", "convnet.convnet.size", "convnet.convnet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "c1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ",", "negative_slope", "=", "0.01", ")", "\n", "x", "=", "self", ".", "c2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ",", "negative_slope", "=", "0.01", ")", "\n", "x", "=", "self", ".", "c3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ",", "negative_slope", "=", "0.01", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "x", "=", "F", ".", "dropout2d", "(", "x", ",", "p", "=", "self", ".", "dropout_rate", ")", "\n", "\n", "x", "=", "self", ".", "c4", "(", "x", ")", "\n", "x", "=", "self", ".", "bn4", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ",", "negative_slope", "=", "0.01", ")", "\n", "x", "=", "self", ".", "c5", "(", "x", ")", "\n", "x", "=", "self", ".", "bn5", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ",", "negative_slope", "=", "0.01", ")", "\n", "x", "=", "self", ".", "c6", "(", "x", ")", "\n", "x", "=", "self", ".", "bn6", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ",", "negative_slope", "=", "0.01", ")", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "x", "=", "F", ".", "dropout2d", "(", "x", ",", "p", "=", "self", ".", "dropout_rate", ")", "\n", "\n", "x", "=", "self", ".", "c7", "(", "x", ")", "\n", "x", "=", "self", ".", "bn7", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ",", "negative_slope", "=", "0.01", ")", "\n", "x", "=", "self", ".", "c8", "(", "x", ")", "\n", "x", "=", "self", ".", "bn8", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ",", "negative_slope", "=", "0.01", ")", "\n", "x", "=", "self", ".", "c9", "(", "x", ")", "\n", "x", "=", "self", ".", "bn9", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", ",", "negative_slope", "=", "0.01", ")", "\n", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "x", ".", "data", ".", "shape", "[", "2", "]", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ")", "\n", "x", "=", "self", ".", "l_c1", "(", "x", ")", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.BasicBlock.__init__": [[23, 32], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.ReLU", "resnet.conv3x3", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__init__", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.conv3x3", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.BasicBlock.forward": [[33, 50], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.Bottleneck.__init__": [[55, 67], ["torch.Module.__init__", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.Bottleneck.forward": [[68, 89], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.ResNet.__init__": [[93, 119], ["torch.Module.__init__", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AvgPool2d", "torch.Linear", "resnet.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__init__", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "depth", ",", "n_outputs", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# Model type specifies number of layers for CIFAR-10 model", "\n", "assert", "(", "depth", "-", "2", ")", "%", "6", "==", "0", ",", "'depth should be 6n+2'", "\n", "n", "=", "(", "depth", "-", "2", ")", "//", "6", "\n", "\n", "block", "=", "Bottleneck", "if", "depth", ">=", "44", "else", "BasicBlock", "\n", "\n", "self", ".", "inplanes", "=", "16", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "16", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "16", ",", "n", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "32", ",", "n", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "n", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "64", "*", "block", ".", "expansion", ",", "n_outputs", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.ResNet._make_layer": [[120, 136], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.ResNet.forward": [[137, 151], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.avgpool", "resnet.ResNet.view", "resnet.ResNet.fc", "resnet.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "# 32x32", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "# 32x32", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "# 16x16", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "# 8x8", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.conv3x3": [[14, 18], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.cifar_models.resnet.resnet": [[153, 158], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "resnet", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    Constructs a ResNet model.\n    \"\"\"", "\n", "return", "ResNet", "(", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.kmnist.kmnist.__init__": [[41, 70], ["os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "kmnist.kmnist.download", "kmnist.kmnist._check_exists", "RuntimeError", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.utils_algo.binarize_class", "utils.utils_algo.partialize", "utils.utils_algo.binarize_class().float", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.utils_algo.binarize_class"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.download", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion._check_exists", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.binarize_class", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.partialize", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.binarize_class"], ["def", "__init__", "(", "self", ",", "root", ",", "train_or_not", "=", "True", ",", "download", "=", "False", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "partial_type", "=", "'binomial'", ",", "partial_rate", "=", "0.1", ",", "random_state", "=", "0", ")", ":", "\n", "        ", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "train", "=", "train_or_not", "\n", "self", ".", "dataset", "=", "'kmnist'", "\n", "\n", "if", "download", ":", "\n", "            ", "self", ".", "download", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "_check_exists", "(", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Dataset not found.'", "+", "\n", "' You can use download=True to download it'", ")", "\n", "\n", "", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "train_data", ",", "self", ".", "train_labels", "=", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ")", "\n", "\n", "if", "partial_rate", "!=", "0.0", ":", "\n", "                ", "y", "=", "binarize_class", "(", "self", ".", "train_labels", ")", "\n", "self", ".", "train_final_labels", ",", "self", ".", "average_class_label", "=", "partialize", "(", "y", ",", "self", ".", "train_labels", ",", "partial_type", ",", "partial_rate", ")", "\n", "\n", "", "else", ":", "\n", "                ", "self", ".", "train_final_labels", "=", "binarize_class", "(", "self", ".", "train_labels", ")", ".", "float", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "test_data", ",", "self", ".", "test_labels", "=", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "test_file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.kmnist.kmnist.__getitem__": [[72, 97], ["PIL.Image.fromarray", "kmnist.kmnist.reshape", "kmnist.kmnist.numpy", "kmnist.kmnist.transform", "kmnist.kmnist.target_transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            tuple: (image, target) where target is index of the target class.\n        \"\"\"", "\n", "\n", "if", "self", ".", "train", ":", "\n", "            ", "img", ",", "target", ",", "true", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_final_labels", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "img", ",", "target", ",", "true", "=", "self", ".", "test_data", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", "\n", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "numpy", "(", ")", ",", "mode", "=", "'L'", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "img", "=", "img", ".", "reshape", "(", "28", "*", "28", ")", "\n", "\n", "return", "img", ",", "target", ",", "true", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.kmnist.kmnist.__len__": [[99, 104], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "train_data", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "test_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.kmnist.kmnist._check_exists": [[106, 109], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "", "def", "_check_exists", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ")", "and", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "test_file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.kmnist.kmnist.download": [[111, 157], ["kmnist.kmnist._check_exists", "print", "print", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "print", "urllib.request.urlopen", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.unlink", "os.unlink", "os.unlink", "os.unlink", "kmnist.read_image_file", "kmnist.read_label_file", "kmnist.read_image_file", "kmnist.read_label_file", "open", "torch.save", "torch.save", "torch.save", "torch.save", "open", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "url.rpartition", "open", "f.write", "open", "gzip.GzipFile", "out_f.write", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "urllib.request.urlopen.read", "os.path.join.replace", "os.path.join.replace", "zip_f.read"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion._check_exists", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_image_file", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_label_file", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_image_file", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_label_file"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "\"\"\"Download the Kuzushiji-MNIST data if it doesn't exist in processed_folder already.\"\"\"", "\n", "import", "urllib", ".", "request", "\n", "import", "requests", "\n", "import", "gzip", "\n", "\n", "if", "self", ".", "_check_exists", "(", ")", ":", "\n", "            ", "return", "\n", "\n", "", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ")", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "==", "errno", ".", "EEXIST", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "\n", "\n", "", "", "for", "url", "in", "self", ".", "urls", ":", "\n", "            ", "print", "(", "'Downloading '", "+", "url", ")", "\n", "data", "=", "urllib", ".", "request", ".", "urlopen", "(", "url", ")", "\n", "filename", "=", "url", ".", "rpartition", "(", "'/'", ")", "[", "2", "]", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "filename", ")", "\n", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "data", ".", "read", "(", ")", ")", "\n", "", "with", "open", "(", "file_path", ".", "replace", "(", "'.gz'", ",", "''", ")", ",", "'wb'", ")", "as", "out_f", ",", "gzip", ".", "GzipFile", "(", "file_path", ")", "as", "zip_f", ":", "\n", "                ", "out_f", ".", "write", "(", "zip_f", ".", "read", "(", ")", ")", "\n", "", "os", ".", "unlink", "(", "file_path", ")", "\n", "\n", "", "print", "(", "'Processing...'", ")", "\n", "\n", "training_set", "=", "(", "\n", "read_image_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'train-images-idx3-ubyte'", ")", ")", ",", "\n", "read_label_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'train-labels-idx1-ubyte'", ")", ")", "\n", ")", "\n", "test_set", "=", "(", "\n", "read_image_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'t10k-images-idx3-ubyte'", ")", ")", ",", "\n", "read_label_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'t10k-labels-idx1-ubyte'", ")", ")", "\n", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "torch", ".", "save", "(", "training_set", ",", "f", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "test_file", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "torch", ".", "save", "(", "test_set", ",", "f", ")", "\n", "\n", "", "print", "(", "'Done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.kmnist.get_int": [[159, 161], ["int", "codecs.encode"], "function", ["None"], ["", "", "def", "get_int", "(", "b", ")", ":", "\n", "    ", "return", "int", "(", "codecs", ".", "encode", "(", "b", ",", "'hex'", ")", ",", "16", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.kmnist.read_label_file": [[163, 170], ["open", "f.read", "kmnist.get_int", "numpy.frombuffer", "torch.from_numpy().view().long", "torch.from_numpy().view().long", "kmnist.get_int", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int"], ["", "def", "read_label_file", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "data", "=", "f", ".", "read", "(", ")", "\n", "assert", "get_int", "(", "data", "[", ":", "4", "]", ")", "==", "2049", "\n", "length", "=", "get_int", "(", "data", "[", "4", ":", "8", "]", ")", "\n", "parsed", "=", "np", ".", "frombuffer", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ",", "offset", "=", "8", ")", "\n", "return", "torch", ".", "from_numpy", "(", "parsed", ")", ".", "view", "(", "length", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.kmnist.read_image_file": [[172, 182], ["open", "f.read", "kmnist.get_int", "kmnist.get_int", "kmnist.get_int", "numpy.frombuffer", "torch.from_numpy().view", "torch.from_numpy().view", "kmnist.get_int", "torch.from_numpy", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int"], ["", "", "def", "read_image_file", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "data", "=", "f", ".", "read", "(", ")", "\n", "assert", "get_int", "(", "data", "[", ":", "4", "]", ")", "==", "2051", "\n", "length", "=", "get_int", "(", "data", "[", "4", ":", "8", "]", ")", "\n", "num_rows", "=", "get_int", "(", "data", "[", "8", ":", "12", "]", ")", "\n", "num_cols", "=", "get_int", "(", "data", "[", "12", ":", "16", "]", ")", "\n", "images", "=", "[", "]", "\n", "parsed", "=", "np", ".", "frombuffer", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ",", "offset", "=", "16", ")", "\n", "return", "torch", ".", "from_numpy", "(", "parsed", ")", ".", "view", "(", "length", ",", "num_rows", ",", "num_cols", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.mnist.mnist.__init__": [[39, 68], ["os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "mnist.mnist.download", "mnist.mnist._check_exists", "RuntimeError", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.utils_algo.binarize_class", "utils.utils_algo.partialize", "utils.utils_algo.binarize_class().float", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.utils_algo.binarize_class"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.download", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion._check_exists", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.binarize_class", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.partialize", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.binarize_class"], ["def", "__init__", "(", "self", ",", "root", ",", "train_or_not", "=", "True", ",", "download", "=", "False", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "partial_type", "=", "'binomial'", ",", "partial_rate", "=", "0.1", ",", "random_state", "=", "0", ")", ":", "\n", "        ", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "train", "=", "train_or_not", "\n", "self", ".", "dataset", "=", "'mnist'", "\n", "\n", "if", "download", ":", "\n", "            ", "self", ".", "download", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "_check_exists", "(", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Dataset not found.'", "+", "\n", "' You can use download=True to download it'", ")", "\n", "\n", "", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "train_data", ",", "self", ".", "train_labels", "=", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ")", "\n", "\n", "if", "partial_rate", "!=", "0.0", ":", "\n", "                ", "y", "=", "binarize_class", "(", "self", ".", "train_labels", ")", "\n", "self", ".", "train_final_labels", ",", "self", ".", "average_class_label", "=", "partialize", "(", "y", ",", "self", ".", "train_labels", ",", "partial_type", ",", "partial_rate", ")", "\n", "\n", "", "else", ":", "\n", "                ", "self", ".", "train_final_labels", "=", "binarize_class", "(", "self", ".", "train_labels", ")", ".", "float", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "test_data", ",", "self", ".", "test_labels", "=", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "test_file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.mnist.mnist.__getitem__": [[70, 94], ["PIL.Image.fromarray", "mnist.mnist.reshape", "mnist.mnist.numpy", "mnist.mnist.transform", "mnist.mnist.target_transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            tuple: (image, target) where target is index of the target class.\n        \"\"\"", "\n", "if", "self", ".", "train", ":", "\n", "            ", "img", ",", "target", ",", "true", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_final_labels", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "img", ",", "target", ",", "true", "=", "self", ".", "test_data", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", "\n", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "numpy", "(", ")", ",", "mode", "=", "None", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "img", "=", "img", ".", "reshape", "(", "28", "*", "28", ")", "\n", "\n", "return", "img", ",", "target", ",", "true", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.mnist.mnist.__len__": [[96, 101], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "train_data", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "test_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.mnist.mnist._check_exists": [[103, 106], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "", "def", "_check_exists", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ")", "and", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "test_file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.mnist.mnist.download": [[108, 154], ["mnist.mnist._check_exists", "print", "print", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "print", "urllib.request.urlopen", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.unlink", "os.unlink", "os.unlink", "os.unlink", "mnist.read_image_file", "mnist.read_label_file", "mnist.read_image_file", "mnist.read_label_file", "open", "torch.save", "torch.save", "torch.save", "torch.save", "open", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "url.rpartition", "open", "f.write", "open", "gzip.GzipFile", "out_f.write", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "urllib.request.urlopen.read", "os.path.join.replace", "os.path.join.replace", "zip_f.read"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion._check_exists", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_image_file", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_label_file", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_image_file", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_label_file"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "\"\"\"Download the MNIST data if it doesn't exist in processed_folder already.\"\"\"", "\n", "import", "urllib", ".", "request", "\n", "import", "requests", "\n", "import", "gzip", "\n", "\n", "if", "self", ".", "_check_exists", "(", ")", ":", "\n", "            ", "return", "\n", "\n", "", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ")", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "==", "errno", ".", "EEXIST", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "\n", "\n", "", "", "for", "url", "in", "self", ".", "urls", ":", "\n", "            ", "print", "(", "'Downloading '", "+", "url", ")", "\n", "data", "=", "urllib", ".", "request", ".", "urlopen", "(", "url", ")", "\n", "filename", "=", "url", ".", "rpartition", "(", "'/'", ")", "[", "2", "]", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "filename", ")", "\n", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "data", ".", "read", "(", ")", ")", "\n", "", "with", "open", "(", "file_path", ".", "replace", "(", "'.gz'", ",", "''", ")", ",", "'wb'", ")", "as", "out_f", ",", "gzip", ".", "GzipFile", "(", "file_path", ")", "as", "zip_f", ":", "\n", "                ", "out_f", ".", "write", "(", "zip_f", ".", "read", "(", ")", ")", "\n", "", "os", ".", "unlink", "(", "file_path", ")", "\n", "\n", "", "print", "(", "'Processing...'", ")", "\n", "\n", "training_set", "=", "(", "\n", "read_image_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'train-images-idx3-ubyte'", ")", ")", ",", "\n", "read_label_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'train-labels-idx1-ubyte'", ")", ")", "\n", ")", "\n", "test_set", "=", "(", "\n", "read_image_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'t10k-images-idx3-ubyte'", ")", ")", ",", "\n", "read_label_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'t10k-labels-idx1-ubyte'", ")", ")", "\n", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "torch", ".", "save", "(", "training_set", ",", "f", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "test_file", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "torch", ".", "save", "(", "test_set", ",", "f", ")", "\n", "\n", "", "print", "(", "'Done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.mnist.get_int": [[156, 158], ["int", "codecs.encode"], "function", ["None"], ["", "", "def", "get_int", "(", "b", ")", ":", "\n", "    ", "return", "int", "(", "codecs", ".", "encode", "(", "b", ",", "'hex'", ")", ",", "16", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.mnist.read_label_file": [[160, 167], ["open", "f.read", "mnist.get_int", "numpy.frombuffer", "torch.from_numpy().view().long", "torch.from_numpy().view().long", "mnist.get_int", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int"], ["", "def", "read_label_file", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "data", "=", "f", ".", "read", "(", ")", "\n", "assert", "get_int", "(", "data", "[", ":", "4", "]", ")", "==", "2049", "\n", "length", "=", "get_int", "(", "data", "[", "4", ":", "8", "]", ")", "\n", "parsed", "=", "np", ".", "frombuffer", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ",", "offset", "=", "8", ")", "\n", "return", "torch", ".", "from_numpy", "(", "parsed", ")", ".", "view", "(", "length", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.mnist.read_image_file": [[169, 179], ["open", "f.read", "mnist.get_int", "mnist.get_int", "mnist.get_int", "numpy.frombuffer", "torch.from_numpy().view", "torch.from_numpy().view", "mnist.get_int", "torch.from_numpy", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int"], ["", "", "def", "read_image_file", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "data", "=", "f", ".", "read", "(", ")", "\n", "assert", "get_int", "(", "data", "[", ":", "4", "]", ")", "==", "2051", "\n", "length", "=", "get_int", "(", "data", "[", "4", ":", "8", "]", ")", "\n", "num_rows", "=", "get_int", "(", "data", "[", "8", ":", "12", "]", ")", "\n", "num_cols", "=", "get_int", "(", "data", "[", "12", ":", "16", "]", ")", "\n", "images", "=", "[", "]", "\n", "parsed", "=", "np", ".", "frombuffer", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ",", "offset", "=", "16", ")", "\n", "return", "torch", ".", "from_numpy", "(", "parsed", ")", ".", "view", "(", "length", ",", "num_rows", ",", "num_cols", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion.__init__": [[42, 71], ["os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "fashion.fashion.download", "fashion.fashion._check_exists", "RuntimeError", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.utils_algo.binarize_class", "utils.utils_algo.partialize", "utils.utils_algo.binarize_class().float", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.utils_algo.binarize_class"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.download", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion._check_exists", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.binarize_class", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.partialize", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.binarize_class"], ["def", "__init__", "(", "self", ",", "root", ",", "train_or_not", "=", "True", ",", "download", "=", "False", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "partial_type", "=", "'binomial'", ",", "partial_rate", "=", "0.1", ",", "random_state", "=", "0", ")", ":", "\n", "        ", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "train", "=", "train_or_not", "\n", "self", ".", "dataset", "=", "'fashion'", "\n", "\n", "if", "download", ":", "\n", "            ", "self", ".", "download", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "_check_exists", "(", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Dataset not found.'", "+", "\n", "' You can use download=True to download it'", ")", "\n", "\n", "", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "train_data", ",", "self", ".", "train_labels", "=", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ")", "\n", "\n", "if", "partial_rate", "!=", "0.0", "and", "noise_rate", "==", "0.0", ":", "\n", "                ", "y", "=", "binarize_class", "(", "self", ".", "train_labels", ")", "\n", "self", ".", "train_final_labels", ",", "self", ".", "average_class_label", "=", "partialize", "(", "y", ",", "self", ".", "train_labels", ",", "partial_type", ",", "partial_rate", ")", "\n", "\n", "", "else", ":", "\n", "                ", "self", ".", "train_final_labels", "=", "binarize_class", "(", "self", ".", "train_labels", ")", ".", "float", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "test_data", ",", "self", ".", "test_labels", "=", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "test_file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion.__getitem__": [[73, 98], ["PIL.Image.fromarray", "fashion.fashion.reshape", "fashion.fashion.numpy", "fashion.fashion.transform", "fashion.fashion.target_transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            tuple: (image, target) where target is index of the target class.\n        \"\"\"", "\n", "\n", "if", "self", ".", "train", ":", "\n", "            ", "img", ",", "target", ",", "true", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_final_labels", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "img", ",", "target", ",", "true", "=", "self", ".", "test_data", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", "\n", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "numpy", "(", ")", ",", "mode", "=", "'L'", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "img", "=", "img", ".", "reshape", "(", "28", "*", "28", ")", "\n", "\n", "return", "img", ",", "target", ",", "true", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion.__len__": [[100, 105], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "train_data", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "test_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion._check_exists": [[107, 110], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "", "def", "_check_exists", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ")", "and", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "test_file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion.download": [[112, 158], ["fashion.fashion._check_exists", "print", "print", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "print", "urllib.request.urlopen", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.unlink", "os.unlink", "os.unlink", "os.unlink", "fashion.read_image_file", "fashion.read_label_file", "fashion.read_image_file", "fashion.read_label_file", "open", "torch.save", "torch.save", "torch.save", "torch.save", "open", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "url.rpartition", "open", "f.write", "open", "gzip.GzipFile", "out_f.write", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "urllib.request.urlopen.read", "os.path.join.replace", "os.path.join.replace", "zip_f.read"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.fashion._check_exists", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_image_file", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_label_file", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_image_file", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_label_file"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "\"\"\"Download the Fashion-MNIST data if it doesn't exist in processed_folder already.\"\"\"", "\n", "import", "urllib", ".", "request", "\n", "import", "requests", "\n", "import", "gzip", "\n", "\n", "if", "self", ".", "_check_exists", "(", ")", ":", "\n", "            ", "return", "\n", "\n", "", "try", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ")", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "            ", "if", "e", ".", "errno", "==", "errno", ".", "EEXIST", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "\n", "\n", "", "", "for", "url", "in", "self", ".", "urls", ":", "\n", "            ", "print", "(", "'Downloading '", "+", "url", ")", "\n", "data", "=", "urllib", ".", "request", ".", "urlopen", "(", "url", ")", "\n", "filename", "=", "url", ".", "rpartition", "(", "'/'", ")", "[", "2", "]", "\n", "file_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "filename", ")", "\n", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "data", ".", "read", "(", ")", ")", "\n", "", "with", "open", "(", "file_path", ".", "replace", "(", "'.gz'", ",", "''", ")", ",", "'wb'", ")", "as", "out_f", ",", "gzip", ".", "GzipFile", "(", "file_path", ")", "as", "zip_f", ":", "\n", "                ", "out_f", ".", "write", "(", "zip_f", ".", "read", "(", ")", ")", "\n", "", "os", ".", "unlink", "(", "file_path", ")", "\n", "\n", "", "print", "(", "'Processing...'", ")", "\n", "\n", "training_set", "=", "(", "\n", "read_image_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'train-images-idx3-ubyte'", ")", ")", ",", "\n", "read_label_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'train-labels-idx1-ubyte'", ")", ")", "\n", ")", "\n", "test_set", "=", "(", "\n", "read_image_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'t10k-images-idx3-ubyte'", ")", ")", ",", "\n", "read_label_file", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "raw_folder", ",", "'t10k-labels-idx1-ubyte'", ")", ")", "\n", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "training_file", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "torch", ".", "save", "(", "training_set", ",", "f", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "processed_folder", ",", "self", ".", "test_file", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "torch", ".", "save", "(", "test_set", ",", "f", ")", "\n", "\n", "", "print", "(", "'Done!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int": [[160, 162], ["int", "codecs.encode"], "function", ["None"], ["", "", "def", "get_int", "(", "b", ")", ":", "\n", "    ", "return", "int", "(", "codecs", ".", "encode", "(", "b", ",", "'hex'", ")", ",", "16", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_label_file": [[164, 171], ["open", "f.read", "fashion.get_int", "numpy.frombuffer", "torch.from_numpy().view().long", "torch.from_numpy().view().long", "fashion.get_int", "torch.from_numpy().view", "torch.from_numpy().view", "torch.from_numpy", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int"], ["", "def", "read_label_file", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "data", "=", "f", ".", "read", "(", ")", "\n", "assert", "get_int", "(", "data", "[", ":", "4", "]", ")", "==", "2049", "\n", "length", "=", "get_int", "(", "data", "[", "4", ":", "8", "]", ")", "\n", "parsed", "=", "np", ".", "frombuffer", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ",", "offset", "=", "8", ")", "\n", "return", "torch", ".", "from_numpy", "(", "parsed", ")", ".", "view", "(", "length", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.read_image_file": [[173, 183], ["open", "f.read", "fashion.get_int", "fashion.get_int", "fashion.get_int", "numpy.frombuffer", "torch.from_numpy().view", "torch.from_numpy().view", "fashion.get_int", "torch.from_numpy", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.fashion.get_int"], ["", "", "def", "read_image_file", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "data", "=", "f", ".", "read", "(", ")", "\n", "assert", "get_int", "(", "data", "[", ":", "4", "]", ")", "==", "2051", "\n", "length", "=", "get_int", "(", "data", "[", "4", ":", "8", "]", ")", "\n", "num_rows", "=", "get_int", "(", "data", "[", "8", ":", "12", "]", ")", "\n", "num_cols", "=", "get_int", "(", "data", "[", "12", ":", "16", "]", ")", "\n", "images", "=", "[", "]", "\n", "parsed", "=", "np", ".", "frombuffer", "(", "data", ",", "dtype", "=", "np", ".", "uint8", ",", "offset", "=", "16", ")", "\n", "return", "torch", ".", "from_numpy", "(", "parsed", ")", ".", "view", "(", "length", ",", "num_rows", ",", "num_cols", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__init__": [[44, 101], ["os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "os.path.expanduser", "cifar10.cifar10.download", "cifar10.cifar10._check_integrity", "RuntimeError", "numpy.concatenate", "cifar10.cifar10.train_data.reshape", "cifar10.cifar10.train_data.transpose", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "open", "open.close", "cifar10.cifar10.test_data.reshape", "cifar10.cifar10.test_data.transpose", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "open", "pickle.load", "cifar10.cifar10.train_data.append", "open.close", "utils.utils_algo.binarize_class", "utils.utils_algo.partialize", "utils.utils_algo.binarize_class().float", "pickle.load", "pickle.load", "utils.utils_algo.binarize_class"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.download", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10._check_integrity", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.binarize_class", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.partialize", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.binarize_class"], ["def", "__init__", "(", "self", ",", "root", ",", "train_or_not", "=", "True", ",", "download", "=", "False", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "partial_type", "=", "'binomial'", ",", "partial_rate", "=", "0.1", ",", "random_state", "=", "0", ")", ":", "\n", "        ", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "train", "=", "train_or_not", "\n", "self", ".", "dataset", "=", "'cifar10'", "\n", "\n", "if", "download", ":", "\n", "            ", "self", ".", "download", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "_check_integrity", "(", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Dataset not found or corrupted.'", "+", "\n", "' You can use download=True to download it'", ")", "\n", "\n", "", "if", "self", ".", "train", ":", "\n", "            ", "self", ".", "train_data", "=", "[", "]", "\n", "self", ".", "train_labels", "=", "[", "]", "\n", "for", "fentry", "in", "self", ".", "train_list", ":", "\n", "                ", "f", "=", "fentry", "[", "0", "]", "\n", "file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "f", ")", "\n", "fo", "=", "open", "(", "file", ",", "'rb'", ")", "\n", "entry", "=", "pickle", ".", "load", "(", "fo", ",", "encoding", "=", "'latin1'", ")", "\n", "self", ".", "train_data", ".", "append", "(", "entry", "[", "'data'", "]", ")", "\n", "self", ".", "train_labels", "+=", "entry", "[", "'labels'", "]", "\n", "fo", ".", "close", "(", ")", "\n", "\n", "", "self", ".", "train_data", "=", "np", ".", "concatenate", "(", "self", ".", "train_data", ")", "\n", "self", ".", "train_data", "=", "self", ".", "train_data", ".", "reshape", "(", "(", "50000", ",", "3", ",", "32", ",", "32", ")", ")", "\n", "self", ".", "train_data", "=", "self", ".", "train_data", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "\n", "self", ".", "train_data", "=", "torch", ".", "from_numpy", "(", "self", ".", "train_data", ")", "\n", "self", ".", "train_labels", "=", "torch", ".", "tensor", "(", "self", ".", "train_labels", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "if", "partial_rate", "!=", "0.0", ":", "\n", "                ", "y", "=", "binarize_class", "(", "self", ".", "train_labels", ")", "\n", "self", ".", "train_final_labels", ",", "self", ".", "average_class_label", "=", "partialize", "(", "y", ",", "self", ".", "train_labels", ",", "partial_type", ",", "partial_rate", ")", "\n", "\n", "", "else", ":", "\n", "                ", "self", ".", "train_final_labels", "=", "binarize_class", "(", "self", ".", "train_labels", ")", ".", "float", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "            ", "f", "=", "self", ".", "test_list", "[", "0", "]", "[", "0", "]", "\n", "file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "base_folder", ",", "f", ")", "\n", "fo", "=", "open", "(", "file", ",", "'rb'", ")", "\n", "if", "sys", ".", "version_info", "[", "0", "]", "==", "2", ":", "\n", "                ", "entry", "=", "pickle", ".", "load", "(", "fo", ")", "\n", "", "else", ":", "\n", "                ", "entry", "=", "pickle", ".", "load", "(", "fo", ",", "encoding", "=", "'latin1'", ")", "\n", "", "self", ".", "test_data", "=", "entry", "[", "'data'", "]", "\n", "self", ".", "test_labels", "=", "entry", "[", "'labels'", "]", "\n", "fo", ".", "close", "(", ")", "\n", "self", ".", "test_data", "=", "self", ".", "test_data", ".", "reshape", "(", "(", "10000", ",", "3", ",", "32", ",", "32", ")", ")", "\n", "self", ".", "test_data", "=", "self", ".", "test_data", ".", "transpose", "(", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "\n", "self", ".", "test_data", "=", "torch", ".", "from_numpy", "(", "self", ".", "test_data", ")", "\n", "self", ".", "test_labels", "=", "torch", ".", "tensor", "(", "self", ".", "test_labels", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__getitem__": [[103, 125], ["PIL.Image.fromarray", "cifar10.cifar10.numpy", "cifar10.cifar10.transform", "cifar10.cifar10.target_transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            tuple: (image, target) where target is index of the target class.\n        \"\"\"", "\n", "if", "self", ".", "train", ":", "\n", "            ", "img", ",", "target", ",", "true", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_final_labels", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "img", ",", "target", ",", "true", "=", "self", ".", "test_data", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", "\n", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "numpy", "(", ")", ",", "mode", "=", "None", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", ",", "true", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__len__": [[127, 132], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "train_data", ")", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "test_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10._check_integrity": [[134, 142], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.utils_algo.check_integrity"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.check_integrity"], ["", "", "def", "_check_integrity", "(", "self", ")", ":", "\n", "        ", "root", "=", "self", ".", "root", "\n", "for", "fentry", "in", "(", "self", ".", "train_list", "+", "self", ".", "test_list", ")", ":", "\n", "            ", "filename", ",", "md5", "=", "fentry", "[", "0", "]", ",", "fentry", "[", "1", "]", "\n", "fpath", "=", "os", ".", "path", ".", "join", "(", "root", ",", "self", ".", "base_folder", ",", "filename", ")", "\n", "if", "not", "check_integrity", "(", "fpath", ",", "md5", ")", ":", "\n", "                ", "return", "False", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.download": [[144, 158], ["cifar10.cifar10._check_integrity", "utils.utils_algo.download_url", "os.getcwd", "os.getcwd", "os.getcwd", "os.getcwd", "tarfile.open", "os.chdir", "os.chdir", "os.chdir", "os.chdir", "tarfile.open.extractall", "tarfile.open.close", "os.chdir", "os.chdir", "os.chdir", "os.chdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10._check_integrity", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.utils.utils_algo.download_url"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "import", "tarfile", "\n", "\n", "if", "self", ".", "_check_integrity", "(", ")", ":", "\n", "            ", "return", "\n", "\n", "", "download_url", "(", "self", ".", "url", ",", "self", ".", "root", ",", "self", ".", "filename", ",", "self", ".", "tgz_md5", ")", "\n", "\n", "cwd", "=", "os", ".", "getcwd", "(", ")", "\n", "tar", "=", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "filename", ")", ",", "\"r:gz\"", ")", "\n", "os", ".", "chdir", "(", "self", ".", "root", ")", "\n", "tar", ".", "extractall", "(", ")", "\n", "tar", ".", "close", "(", ")", "\n", "os", ".", "chdir", "(", "cwd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__repr__": [[160, 171], ["cifar10.cifar10.__len__", "cifar10.cifar10.transform.__repr__().replace", "cifar10.cifar10.target_transform.__repr__().replace", "cifar10.cifar10.transform.__repr__", "cifar10.cifar10.target_transform.__repr__", "len", "len"], "methods", ["home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__len__", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__repr__", "home.repos.pwc.inspect_result.Lvcrezia77_PRODEN.datasets.cifar10.cifar10.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "fmt_str", "=", "'Dataset '", "+", "self", ".", "__class__", ".", "__name__", "+", "'\\n'", "\n", "fmt_str", "+=", "'    Number of datapoints: {}\\n'", ".", "format", "(", "self", ".", "__len__", "(", ")", ")", "\n", "tmp", "=", "'train'", "if", "self", ".", "train", "is", "True", "else", "'test'", "\n", "fmt_str", "+=", "'    Split: {}\\n'", ".", "format", "(", "tmp", ")", "\n", "fmt_str", "+=", "'    Root Location: {}\\n'", ".", "format", "(", "self", ".", "root", ")", "\n", "tmp", "=", "'    Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}\\n'", ".", "format", "(", "tmp", ",", "self", ".", "transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "tmp", "=", "'    Target Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}'", ".", "format", "(", "tmp", ",", "self", ".", "target_transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "return", "fmt_str", "\n", "", "", ""]]}