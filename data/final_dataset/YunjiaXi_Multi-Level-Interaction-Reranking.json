{"home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_mir.eval": [[20, 51], ["len", "print", "time.time", "range", "numpy.reshape().tolist", "numpy.reshape().tolist", "utils.evaluate_multi", "print", "utils.get_aggregated_batch", "model.eval", "preds.extend", "losses.append", "sum", "len", "numpy.reshape", "numpy.reshape", "time.time", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.evaluate_multi", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.get_aggregated_batch", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval"], ["def", "eval", "(", "model", ",", "sess", ",", "data", ",", "max_time_len", ",", "props", ",", "reg_lambda", ",", "batch_size", ",", "isrank", ",", "metric_scope", ")", ":", "\n", "    ", "preds", "=", "[", "]", "\n", "# labels = []", "\n", "losses", "=", "[", "]", "\n", "fi_mat", ",", "ii_mat", "=", "[", "]", ",", "[", "]", "\n", "\n", "data_size", "=", "len", "(", "data", "[", "0", "]", ")", "\n", "batch_num", "=", "data_size", "//", "batch_size", "\n", "print", "(", "'eval'", ",", "batch_size", ",", "batch_num", ")", "\n", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "batch_no", "in", "range", "(", "batch_num", ")", ":", "\n", "        ", "data_batch", "=", "get_aggregated_batch", "(", "data", ",", "batch_size", "=", "batch_size", ",", "batch_no", "=", "batch_no", ")", "\n", "pred", ",", "label", ",", "loss", "=", "model", ".", "eval", "(", "sess", ",", "data_batch", ",", "reg_lambda", ",", "no_print", "=", "batch_no", ")", "\n", "preds", ".", "extend", "(", "pred", ")", "\n", "# labels.extend(label)", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "\n", "", "loss", "=", "sum", "(", "losses", ")", "/", "len", "(", "losses", ")", "\n", "cates", "=", "np", ".", "reshape", "(", "np", ".", "array", "(", "data", "[", "1", "]", ")", "[", ":", ",", ":", ",", "1", "]", ",", "[", "-", "1", ",", "max_time_len", "]", ")", ".", "tolist", "(", ")", "\n", "hist_cates", "=", "np", ".", "reshape", "(", "np", ".", "array", "(", "data", "[", "3", "]", ")", "[", ":", ",", ":", ",", "1", "]", ",", "[", "-", "1", ",", "max_behavior_len", "]", ")", ".", "tolist", "(", ")", "\n", "labels", "=", "data", "[", "5", "]", "\n", "# labels = data[-1]", "\n", "poss", "=", "data", "[", "-", "2", "]", "\n", "# print(preds[0])", "\n", "\n", "res", "=", "evaluate_multi", "(", "labels", ",", "preds", ",", "metric_scope", ",", "props", ",", "cates", ",", "poss", ",", "isrank", ")", "\n", "\n", "print", "(", "\"EVAL TIME: %.4fs\"", "%", "(", "time", ".", "time", "(", ")", "-", "t", ")", ")", "\n", "# print('fi mat', len(fi_mat))", "\n", "return", "loss", ",", "res", ",", "[", "fi_mat", ",", "ii_mat", ",", "cates", ",", "hist_cates", ",", "labels", ",", "preds", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_mir.train": [[53, 154], ["tensorflow.reset_default_graph", "datetime.datetime.now().strftime", "tensorflow.GPUOptions", "model.MIR", "print", "exit", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "tensorflow.Session", "sess.run", "sess.run", "run_mir.eval", "training_monitor[].append", "training_monitor[].append", "training_monitor[].append", "print", "enumerate", "len", "print", "range", "datetime.datetime.now", "tensorflow.global_variables_initializer", "tensorflow.local_variables_initializer", "print", "range", "tensorflow.ConfigProto", "utils.get_aggregated_batch", "model.MIR.train", "train_losses_step.append", "training_monitor[].append", "run_mir.eval", "training_monitor[].append", "training_monitor[].append", "training_monitor[].append", "print", "enumerate", "sum", "len", "print", "max", "model.MIR.save", "pickle.dump", "print", "open", "len"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.get_aggregated_batch", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.train", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.save"], ["", "def", "train", "(", "train_file", ",", "test_file", ",", "props", ",", "model_type", ",", "batch_size", ",", "feature_size", ",", "eb_dim", ",", "hidden_size", ",", "max_time_len", ",", "\n", "max_seq_len", ",", "itm_spar_fnum", ",", "itm_dens_fnum", ",", "hist_spar_fnum", ",", "hist_dens_fnum", ",", "profile_num", ",", "max_norm", ",", "metric_scope", ",", "\n", "epoch_num", ",", "keep_prob", ",", "reg_lambda", ",", "lr", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "if", "model_type", "==", "'MIR'", ":", "\n", "        ", "model", "=", "MIR", "(", "feature_size", ",", "eb_dim", ",", "hidden_size", ",", "max_time_len", ",", "max_seq_len", ",", "itm_spar_fnum", ",", "itm_dens_fnum", ",", "\n", "hist_spar_fnum", ",", "hist_dens_fnum", ",", "profile_num", ",", "max_norm", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'No Such Model'", ")", "\n", "exit", "(", ")", "\n", "\n", "\n", "", "training_monitor", "=", "{", "\n", "'train_loss'", ":", "[", "]", ",", "\n", "'vali_loss'", ":", "[", "]", ",", "\n", "'utility_l'", ":", "[", "]", ",", "\n", "}", "\n", "date", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%Y%m%d%H%M\"", ")", "\n", "model_name", "=", "'{}_{}_{}_{}_{}_{}_{}_{}'", ".", "format", "(", "date", ",", "initial_ranker", ",", "model_type", ",", "batch_size", ",", "lr", ",", "\n", "reg_lambda", ",", "hidden_size", ",", "eb_dim", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'logs/{}/{}/{}'", ".", "format", "(", "data_set_name", ",", "max_time_len", ",", "max_seq_len", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'logs/{}/{}/{}'", ".", "format", "(", "data_set_name", ",", "max_time_len", ",", "max_seq_len", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'save_model/{}/{}/{}/'", ".", "format", "(", "data_set_name", ",", "max_time_len", ",", "model_name", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'save_model/{}/{}/{}/'", ".", "format", "(", "data_set_name", ",", "max_time_len", ",", "model_name", ")", ")", "\n", "", "save_path", "=", "'save_model/{}/{}/{}/ckpt'", ".", "format", "(", "data_set_name", ",", "max_time_len", ",", "model_name", ")", "\n", "log_save_path", "=", "'logs/{}/{}/{}/{}.metrics'", ".", "format", "(", "data_set_name", ",", "max_time_len", ",", "max_seq_len", ",", "model_name", ")", "\n", "\n", "# gpu settings", "\n", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "allow_growth", "=", "True", ")", "\n", "\n", "# training process", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ")", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "local_variables_initializer", "(", ")", ")", "\n", "\n", "train_losses_step", "=", "[", "]", "\n", "\n", "# before training process", "\n", "step", "=", "0", "\n", "vali_loss", ",", "res", ",", "inter_log", "=", "eval", "(", "model", ",", "sess", ",", "test_file", ",", "max_time_len", ",", "props", ",", "reg_lambda", ",", "batch_size", ",", "False", ",", "metric_scope", ")", "\n", "\n", "training_monitor", "[", "'train_loss'", "]", ".", "append", "(", "None", ")", "\n", "training_monitor", "[", "'vali_loss'", "]", ".", "append", "(", "None", ")", "\n", "training_monitor", "[", "'utility_l'", "]", ".", "append", "(", "res", "[", "4", "]", "[", "0", "]", ")", "\n", "\n", "print", "(", "\"STEP %d  INTIAL RANKER | LOSS VALI: NULL\"", "%", "step", ")", "\n", "for", "i", ",", "s", "in", "enumerate", "(", "metric_scope", ")", ":", "\n", "            ", "print", "(", "\"@%d  MAP: %.4f  NDCG: %.4f  debiasNDCG: %.4f  CLICKS: %.4f  UTILITY: %.8f\"", "%", "(", "\n", "s", ",", "res", "[", "0", "]", "[", "i", "]", ",", "res", "[", "1", "]", "[", "i", "]", ",", "res", "[", "2", "]", "[", "i", "]", ",", "res", "[", "3", "]", "[", "i", "]", ",", "res", "[", "4", "]", "[", "i", "]", ")", ")", "\n", "\n", "", "early_stop", "=", "False", "\n", "\n", "data", "=", "train_file", "\n", "data_size", "=", "len", "(", "data", "[", "0", "]", ")", "\n", "batch_num", "=", "data_size", "//", "batch_size", "\n", "eval_iter_num", "=", "(", "data_size", "//", "5", ")", "//", "batch_size", "\n", "# eval_iter_num = (data_size // 30) // batch_size", "\n", "print", "(", "'train'", ",", "data_size", ",", "batch_num", ")", "\n", "\n", "# begin training process", "\n", "\n", "for", "epoch", "in", "range", "(", "epoch_num", ")", ":", "\n", "# if early_stop:", "\n", "#     break", "\n", "            ", "for", "batch_no", "in", "range", "(", "batch_num", ")", ":", "\n", "                ", "data_batch", "=", "get_aggregated_batch", "(", "data", ",", "batch_size", "=", "batch_size", ",", "batch_no", "=", "batch_no", ")", "\n", "# if early_stop:", "\n", "#     break", "\n", "loss", "=", "model", ".", "train", "(", "sess", ",", "data_batch", ",", "lr", ",", "reg_lambda", ",", "keep_prob", ")", "\n", "step", "+=", "1", "\n", "train_losses_step", ".", "append", "(", "loss", ")", "\n", "\n", "if", "step", "%", "eval_iter_num", "==", "0", ":", "\n", "                    ", "train_loss", "=", "sum", "(", "train_losses_step", ")", "/", "len", "(", "train_losses_step", ")", "\n", "training_monitor", "[", "'train_loss'", "]", ".", "append", "(", "train_loss", ")", "\n", "train_losses_step", "=", "[", "]", "\n", "\n", "vali_loss", ",", "res", ",", "inter_log", "=", "eval", "(", "model", ",", "sess", ",", "test_file", ",", "max_time_len", ",", "props", ",", "reg_lambda", ",", "batch_size", ",", "True", ",", "metric_scope", ")", "\n", "training_monitor", "[", "'train_loss'", "]", ".", "append", "(", "train_loss", ")", "\n", "training_monitor", "[", "'vali_loss'", "]", ".", "append", "(", "vali_loss", ")", "\n", "training_monitor", "[", "'utility_l'", "]", ".", "append", "(", "res", "[", "4", "]", "[", "1", "]", ")", "\n", "\n", "print", "(", "\"EPOCH %d STEP %d  LOSS TRAIN: %.4f | LOSS VALI: %.4f\"", "%", "(", "epoch", ",", "step", ",", "train_loss", ",", "vali_loss", ")", ")", "\n", "for", "i", ",", "s", "in", "enumerate", "(", "metric_scope", ")", ":", "\n", "                        ", "print", "(", "\"@%d  MAP: %.4f  NDCG: %.4f  debiasNDCG: %.4f  CLICKS: %.4f  UTILITY: %.8f\"", "%", "(", "\n", "s", ",", "res", "[", "0", "]", "[", "i", "]", ",", "res", "[", "1", "]", "[", "i", "]", ",", "res", "[", "2", "]", "[", "i", "]", ",", "res", "[", "3", "]", "[", "i", "]", ",", "res", "[", "4", "]", "[", "i", "]", ")", ")", "\n", "\n", "", "if", "training_monitor", "[", "'utility_l'", "]", "[", "-", "1", "]", ">", "max", "(", "training_monitor", "[", "'utility_l'", "]", "[", ":", "-", "1", "]", ")", ":", "\n", "# save model", "\n", "                        ", "model", ".", "save", "(", "sess", ",", "save_path", ")", "\n", "pkl", ".", "dump", "(", "res", "[", "-", "1", "]", ",", "open", "(", "log_save_path", ",", "'wb'", ")", ")", "\n", "print", "(", "'model saved'", ")", "\n", "\n", "", "if", "len", "(", "training_monitor", "[", "'vali_loss'", "]", ")", ">", "2", "and", "epoch", ">", "0", ":", "\n", "                        ", "if", "(", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "1", "]", ">", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "2", "]", "and", "\n", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "2", "]", ">", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "3", "]", ")", ":", "\n", "                            ", "early_stop", "=", "True", "\n", "", "if", "(", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "2", "]", "-", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "1", "]", ")", "<=", "0.001", "and", "(", "\n", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "3", "]", "-", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "2", "]", ")", "<=", "0.001", ":", "\n", "                            ", "early_stop", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_mir.reranker_parse_args": [[156, 182], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args"], "function", ["None"], ["", "", "", "", "", "", "", "def", "reranker_parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--max_time_len'", ",", "default", "=", "10", ",", "type", "=", "int", ",", "help", "=", "'max time length'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_dir'", ",", "type", "=", "str", ",", "default", "=", "'./logs/'", ",", "help", "=", "'dir that saves logs and model'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_dir'", ",", "type", "=", "str", ",", "default", "=", "'./data/ad/processed/'", ",", "help", "=", "'data dir'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_set_name'", ",", "default", "=", "'ad'", ",", "type", "=", "str", ",", "help", "=", "'name of dataset, including ad and prm'", ")", "\n", "parser", ".", "add_argument", "(", "'--initial_ranker'", ",", "default", "=", "'DNN'", ",", "choices", "=", "[", "'DNN'", ",", "'mart'", "]", ",", "type", "=", "str", ",", "help", "=", "'name of dataset, including DNN, mart, svm'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_num'", ",", "default", "=", "30", ",", "type", "=", "int", ",", "help", "=", "'epochs of each iteration.'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_hist_len'", ",", "default", "=", "30", ",", "type", "=", "int", ",", "help", "=", "'the length of history'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "default", "=", "16", ",", "type", "=", "int", ",", "help", "=", "'batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "default", "=", "2e-5", ",", "type", "=", "float", ",", "help", "=", "'learning rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--l2_reg'", ",", "default", "=", "1e-5", ",", "type", "=", "float", ",", "help", "=", "'l2 loss scale'", ")", "\n", "parser", ".", "add_argument", "(", "'--keep_prob'", ",", "default", "=", "0.8", ",", "type", "=", "float", ",", "help", "=", "'keep probability'", ")", "\n", "parser", ".", "add_argument", "(", "'--eb_dim'", ",", "default", "=", "16", ",", "type", "=", "int", ",", "help", "=", "'size of embedding'", ")", "\n", "parser", ".", "add_argument", "(", "'--hidden_size'", ",", "default", "=", "64", ",", "type", "=", "int", ",", "help", "=", "'hidden size'", ")", "\n", "parser", ".", "add_argument", "(", "'--metric_scope'", ",", "default", "=", "[", "1", ",", "3", ",", "5", ",", "10", "]", ",", "type", "=", "list", ",", "help", "=", "'the scope of metrics'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_norm'", ",", "default", "=", "5", ",", "type", "=", "float", ",", "help", "=", "'max norm of gradient'", ")", "\n", "# parser.add_argument('--c_entropy', default=0.001, type=float, help='entropy coefficient in loss')", "\n", "# parser.add_argument('--decay_steps', default=3000, type=int, help='learning rate decay steps')", "\n", "# parser.add_argument('--decay_rate', default=1.0, type=float, help='learning rate decay rate')", "\n", "# parser.add_argument('--timestamp', type=str, default=datetime.datetime.now().strftime(\"%Y%m%d%H%M\"))", "\n", "# parser.add_argument('--evaluator_path', type=str, default='', help='evaluator ckpt dir')", "\n", "# parser.add_argument('--reload_path', type=str, default='', help='model ckpt dir')", "\n", "parser", ".", "add_argument", "(", "'--setting_path'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "help", "=", "'setting dir'", ")", "\n", "FLAGS", ",", "_", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "return", "FLAGS", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.eval": [[18, 41], ["len", "print", "time.time", "range", "sklearn.metrics.log_loss", "sklearn.metrics.roc_auc_score", "print", "utils.get_aggregated_batch", "model.eval", "preds.extend", "labels.extend", "losses.append", "sum", "len", "time.time"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.get_aggregated_batch", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval"], ["def", "eval", "(", "model", ",", "sess", ",", "data", ",", "reg_lambda", ",", "batch_size", ")", ":", "\n", "    ", "preds", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "\n", "data_size", "=", "len", "(", "data", "[", "0", "]", ")", "\n", "batch_num", "=", "data_size", "//", "batch_size", "\n", "print", "(", "'eval'", ",", "data_size", ",", "batch_size", ",", "batch_num", ")", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "batch_no", "in", "range", "(", "batch_num", ")", ":", "\n", "        ", "data_batch", "=", "get_aggregated_batch", "(", "data", ",", "batch_size", "=", "batch_size", ",", "batch_no", "=", "batch_no", ")", "\n", "\n", "pred", ",", "label", ",", "loss", "=", "model", ".", "eval", "(", "sess", ",", "data_batch", ",", "reg_lambda", ")", "\n", "preds", ".", "extend", "(", "pred", ")", "\n", "labels", ".", "extend", "(", "label", ")", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "\n", "", "logloss", "=", "log_loss", "(", "labels", ",", "preds", ")", "\n", "auc", "=", "roc_auc_score", "(", "labels", ",", "preds", ")", "\n", "loss", "=", "sum", "(", "losses", ")", "/", "len", "(", "losses", ")", "\n", "\n", "print", "(", "\"EVAL TIME: %.4fs\"", "%", "(", "time", ".", "time", "(", ")", "-", "t", ")", ")", "\n", "return", "loss", ",", "logloss", ",", "auc", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.save_rank": [[43, 58], ["len", "print", "range", "utils.rank", "utils.get_aggregated_batch", "model.eval", "preds.extend"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.rank", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.get_aggregated_batch", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval"], ["", "def", "save_rank", "(", "model", ",", "sess", ",", "data", ",", "reg_lambda", ",", "batch_size", ",", "out_file", ",", "max_behavior_len", ")", ":", "\n", "    ", "preds", "=", "[", "]", "\n", "\n", "data_size", "=", "len", "(", "data", "[", "0", "]", ")", "\n", "batch_num", "=", "data_size", "//", "batch_size", "\n", "if", "data_size", "%", "batch_size", ":", "\n", "        ", "batch_num", "+=", "1", "\n", "", "print", "(", "data_size", ",", "batch_size", ",", "batch_num", ")", "\n", "\n", "for", "batch_no", "in", "range", "(", "batch_num", ")", ":", "\n", "        ", "data_batch", "=", "get_aggregated_batch", "(", "data", ",", "batch_size", "=", "batch_size", ",", "batch_no", "=", "batch_no", ")", "\n", "pred", ",", "label", ",", "loss", "=", "model", ".", "eval", "(", "sess", ",", "data_batch", ",", "reg_lambda", ")", "\n", "preds", ".", "extend", "(", "pred", ")", "\n", "# print('pred', len(preds))", "\n", "", "rank", "(", "data", ",", "preds", ",", "out_file", ",", "max_behavior_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.train": [[60, 166], ["tensorflow.reset_default_graph", "tensorflow.GPUOptions", "initial_rankers.DIN", "tensorflow.Session", "sess.run", "sess.run", "run_init_ranker.eval", "training_monitor[].append", "training_monitor[].append", "training_monitor[].append", "training_monitor[].append", "print", "len", "print", "range", "initial_rankers.DNN", "print", "exit", "tensorflow.global_variables_initializer", "tensorflow.local_variables_initializer", "range", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "open", "pickle.dump", "tensorflow.ConfigProto", "utils.get_aggregated_batch", "initial_rankers.DNN.train", "train_losses_step.append", "training_monitor[].append", "run_init_ranker.eval", "training_monitor[].append", "training_monitor[].append", "training_monitor[].append", "print", "sum", "len", "max", "initial_rankers.DNN.save", "run_init_ranker.save_rank", "run_init_ranker.save_rank", "initial_rankers.DNN.save_pretrain", "print", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "len"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.get_aggregated_batch", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.train", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.save", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.save_rank", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.save_rank", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.BaseModel.save_pretrain"], ["", "def", "train", "(", "train_file", ",", "val_file", ",", "test_file", ",", "model_type", ",", "eb_dim", ",", "feature_size", ",", "itm_spar_fnum", ",", "\n", "itm_dens_fnum", ",", "hist_spar_fnum", ",", "hist_dens_fnum", ",", "user_fnum", ",", "num_user", ",", "num_item", ",", "lr", ",", "reg_lambda", ",", "batch_size", ",", "\n", "max_behavior_len", ",", "processed_dir", ",", "pt_dir", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "if", "model_type", "==", "'DIN'", ":", "\n", "        ", "model", "=", "DIN", "(", "eb_dim", ",", "feature_size", ",", "itm_spar_fnum", ",", "itm_dens_fnum", ",", "hist_spar_fnum", ",", "hist_dens_fnum", ",", "\n", "user_fnum", ",", "num_user", ",", "num_item", ",", "max_behavior_len", ")", "\n", "", "elif", "model_type", "==", "'DNN'", ":", "\n", "        ", "model", "=", "DNN", "(", "eb_dim", ",", "feature_size", ",", "itm_spar_fnum", ",", "itm_dens_fnum", ",", "hist_spar_fnum", ",", "hist_dens_fnum", ",", "\n", "user_fnum", ",", "num_user", ",", "num_item", ",", "max_behavior_len", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'WRONG MODEL TYPE'", ")", "\n", "exit", "(", "1", ")", "\n", "\n", "", "training_monitor", "=", "{", "\n", "'train_loss'", ":", "[", "]", ",", "\n", "'vali_loss'", ":", "[", "]", ",", "\n", "'logloss'", ":", "[", "]", ",", "\n", "'auc'", ":", "[", "]", "\n", "}", "\n", "\n", "# gpu settings", "\n", "gpu_options", "=", "tf", ".", "GPUOptions", "(", "allow_growth", "=", "True", ")", "\n", "\n", "# training process", "\n", "with", "tf", ".", "Session", "(", "config", "=", "tf", ".", "ConfigProto", "(", "gpu_options", "=", "gpu_options", ")", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "sess", ".", "run", "(", "tf", ".", "local_variables_initializer", "(", ")", ")", "\n", "\n", "train_losses_step", "=", "[", "]", "\n", "\n", "# before training process", "\n", "step", "=", "0", "\n", "vali_loss", ",", "logloss", ",", "auc", "=", "eval", "(", "model", ",", "sess", ",", "test_file", ",", "reg_lambda", ",", "batch_size", ")", "\n", "\n", "training_monitor", "[", "'train_loss'", "]", ".", "append", "(", "None", ")", "\n", "training_monitor", "[", "'vali_loss'", "]", ".", "append", "(", "vali_loss", ")", "\n", "training_monitor", "[", "'logloss'", "]", ".", "append", "(", "logloss", ")", "\n", "training_monitor", "[", "'auc'", "]", ".", "append", "(", "auc", ")", "\n", "\n", "print", "(", "\"STEP %d  LOSS TRAIN: NULL | LOSS VALI: %.4f  LOGLOSS: %.4f  AUC: %.4f\"", "%", "(", "\n", "step", ",", "vali_loss", ",", "logloss", ",", "auc", ")", ")", "\n", "early_stop", "=", "False", "\n", "data_size", "=", "len", "(", "train_file", "[", "0", "]", ")", "\n", "batch_num", "=", "data_size", "//", "batch_size", "\n", "eval_iter_num", "=", "(", "data_size", "//", "10", ")", "//", "batch_size", "\n", "print", "(", "'train'", ",", "data_size", ",", "batch_num", ")", "\n", "\n", "# begin training process", "\n", "for", "epoch", "in", "range", "(", "40", ")", ":", "\n", "            ", "if", "early_stop", ":", "\n", "                ", "break", "\n", "", "for", "batch_no", "in", "range", "(", "batch_num", ")", ":", "\n", "                ", "data_batch", "=", "get_aggregated_batch", "(", "train_file", ",", "batch_size", "=", "batch_size", ",", "batch_no", "=", "batch_no", ")", "\n", "# if early_stop:", "\n", "#     break", "\n", "loss", "=", "model", ".", "train", "(", "sess", ",", "data_batch", ",", "lr", ",", "reg_lambda", ")", "\n", "\n", "\n", "step", "+=", "1", "\n", "train_losses_step", ".", "append", "(", "loss", ")", "\n", "\n", "if", "step", "%", "eval_iter_num", "==", "0", ":", "\n", "                    ", "train_loss", "=", "sum", "(", "train_losses_step", ")", "/", "len", "(", "train_losses_step", ")", "\n", "training_monitor", "[", "'train_loss'", "]", ".", "append", "(", "train_loss", ")", "\n", "train_losses_step", "=", "[", "]", "\n", "\n", "vali_loss", ",", "logloss", ",", "auc", "=", "eval", "(", "model", ",", "sess", ",", "test_file", ",", "reg_lambda", ",", "batch_size", ")", "\n", "training_monitor", "[", "'vali_loss'", "]", ".", "append", "(", "vali_loss", ")", "\n", "training_monitor", "[", "'logloss'", "]", ".", "append", "(", "logloss", ")", "\n", "training_monitor", "[", "'auc'", "]", ".", "append", "(", "auc", ")", "\n", "\n", "print", "(", "\"EPOCH %d  STEP %d  LOSS TRAIN: %.4f | LOSS VALI: %.4f  LOGLOSS: %.4f  AUC: %.4f\"", "%", "(", "\n", "epoch", ",", "step", ",", "train_loss", ",", "vali_loss", ",", "logloss", ",", "auc", ")", ")", "\n", "if", "training_monitor", "[", "'auc'", "]", "[", "-", "1", "]", ">", "max", "(", "training_monitor", "[", "'auc'", "]", "[", ":", "-", "1", "]", ")", ":", "\n", "# save model", "\n", "                        ", "model_name", "=", "'{}_{}_{}_{}'", ".", "format", "(", "model_type", ",", "batch_size", ",", "lr", ",", "reg_lambda", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'save_model_{}/{}/{}/'", ".", "format", "(", "data_set_name", ",", "max_behavior_len", ",", "model_name", ")", ")", ":", "\n", "                            ", "os", ".", "makedirs", "(", "'save_model_{}/{}/{}/'", ".", "format", "(", "data_set_name", ",", "max_behavior_len", ",", "model_name", ")", ")", "\n", "", "save_path", "=", "'save_model_{}/{}/{}/ckpt'", ".", "format", "(", "data_set_name", ",", "max_behavior_len", ",", "model_name", ")", "\n", "model", ".", "save", "(", "sess", ",", "save_path", ")", "\n", "save_rank", "(", "model", ",", "sess", ",", "val_file", ",", "reg_lambda", ",", "batch_size", ",", "processed_dir", "+", "model_type", "+", "'.rankings.train'", ",", "\n", "max_behavior_len", ")", "\n", "save_rank", "(", "model", ",", "sess", ",", "test_file", ",", "reg_lambda", ",", "batch_size", ",", "processed_dir", "+", "model_type", "+", "'.rankings.test'", ",", "\n", "max_behavior_len", ")", "\n", "model", ".", "save_pretrain", "(", "sess", ",", "pt_dir", ")", "\n", "print", "(", "'intial lists saved'", ")", "\n", "early_stop", "=", "False", "\n", "continue", "\n", "\n", "", "if", "len", "(", "training_monitor", "[", "'vali_loss'", "]", ")", ">", "2", "and", "epoch", ">", "0", ":", "\n", "                        ", "if", "(", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "1", "]", ">", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "2", "]", "and", "\n", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "2", "]", ">", "training_monitor", "[", "'vali_loss'", "]", "[", "-", "3", "]", ")", ":", "\n", "                            ", "early_stop", "=", "True", "\n", "# if (training_monitor['vali_loss'][-2] - training_monitor['vali_loss'][-1]) <= 0.1 and (", "\n", "#         training_monitor['vali_loss'][-3] - training_monitor['vali_loss'][-2]) <= 0.1:", "\n", "#     early_stop = True", "\n", "\n", "# generate log", "\n", "", "", "", "", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'logs_{}/{}/'", ".", "format", "(", "data_set_name", ",", "max_behavior_len", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "'logs_{}/{}/'", ".", "format", "(", "data_set_name", ",", "max_behavior_len", ")", ")", "\n", "", "model_name", "=", "'{}_{}_{}_{}'", ".", "format", "(", "model_type", ",", "batch_size", ",", "lr", ",", "reg_lambda", ")", "\n", "\n", "with", "open", "(", "'logs_{}/{}/{}.pkl'", ".", "format", "(", "data_set_name", ",", "max_behavior_len", ",", "model_name", ")", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pkl", ".", "dump", "(", "training_monitor", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.get_data": [[168, 186], ["pickle.load", "zip", "open", "numpy.reshape", "records.append", "numpy.reshape().tolist", "numpy.array", "uid_map.__contains__", "np.reshape.tolist", "numpy.reshape", "numpy.array"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.load"], ["", "", "", "def", "get_data", "(", "dataset", ",", "embed_dir", ")", ":", "# get data for lambdaMART/SVM", "\n", "    ", "users", ",", "item_spars", ",", "item_denss", ",", "user_spars", ",", "user_denss", ",", "labels", ",", "seq_lens", ",", "list_lens", ",", "tiled_seq_lens", "=", "dataset", "\n", "# target_user, target_item, user_behavior, label, seq_length = dataset", "\n", "embeddings", "=", "pkl", ".", "load", "(", "open", "(", "embed_dir", ",", "'rb'", ")", ")", "\n", "embeddings", "=", "embeddings", "\n", "records", "=", "[", "]", "\n", "uid_idx", "=", "0", "\n", "uid_map", "=", "{", "}", "\n", "for", "itm_spar_i", ",", "itm_dens_i", ",", "label_i", ",", "uid_i", "in", "zip", "(", "item_spars", ",", "item_denss", ",", "labels", ",", "users", ")", ":", "\n", "        ", "itm_emd", "=", "np", ".", "reshape", "(", "np", ".", "array", "(", "embeddings", "[", "itm_spar_i", "]", ")", ",", "-", "1", ")", "\n", "# record_i = [label_i, uid_i] + itm_emd.tolist() + itm_dens_i", "\n", "if", "not", "uid_map", ".", "__contains__", "(", "uid_i", ")", ":", "\n", "            ", "uid_map", "[", "uid_i", "]", "=", "uid_idx", "\n", "uid_idx", "+=", "1", "\n", "", "record_i", "=", "[", "label_i", ",", "uid_map", "[", "uid_i", "]", "]", "+", "itm_emd", ".", "tolist", "(", ")", "\n", "uid_idx", "+=", "1", "\n", "records", ".", "append", "(", "record_i", ")", "\n", "", "return", "records", ",", "np", ".", "reshape", "(", "np", ".", "array", "(", "labels", ")", ",", "-", "1", ")", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.train_mart": [[188, 210], ["run_init_ranker.get_data", "initial_rankers.LambdaMART", "initial_rankers.LambdaMART.fit", "run_init_ranker.get_data", "initial_rankers.LambdaMART.predict", "utils.rank", "sklearn.metrics.log_loss", "sklearn.metrics.roc_auc_score", "print", "run_init_ranker.get_data", "initial_rankers.LambdaMART.predict", "utils.rank", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.get_data", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.fit", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.get_data", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.predict", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.rank", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.get_data", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.predict", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.rank"], ["", "def", "train_mart", "(", "train_file", ",", "val_file", ",", "test_file", ",", "model_type", ",", "embed_dir", ",", "max_behavior_len", ",", "processed_dir", ",", "\n", "tree_num", "=", "300", ",", "lr", "=", "0.05", ",", "tree_type", "=", "'lgb'", ")", ":", "\n", "    ", "training_data", ",", "labels", "=", "get_data", "(", "train_file", ",", "embed_dir", ")", "\n", "model", "=", "LambdaMART", "(", "training_data", ",", "tree_num", ",", "lr", ",", "tree_type", ")", "\n", "model", ".", "fit", "(", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'save_model_{}/{}'", ".", "format", "(", "data_set_name", ",", "'mart'", ")", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'save_model_{}/{}'", ".", "format", "(", "data_set_name", ",", "'mart'", ")", ")", "\n", "# model.save('save_model_{}/{}/{}_{}_{}'.format(data_set_name, 'mart', tree_num, lr, tree_type))", "\n", "", "training_data", "=", "[", "]", "\n", "\n", "\n", "test_data", ",", "labels", "=", "get_data", "(", "test_file", ",", "embed_dir", ")", "\n", "test_pred", "=", "model", ".", "predict", "(", "test_data", ")", "\n", "rank", "(", "test_file", ",", "test_pred", ",", "processed_dir", "+", "model_type", "+", "'.rankings.test2'", ",", "max_behavior_len", ")", "\n", "logloss", "=", "log_loss", "(", "labels", ",", "test_pred", ")", "\n", "auc", "=", "roc_auc_score", "(", "labels", ",", "test_pred", ")", "\n", "print", "(", "'mart logloss:'", ",", "logloss", ",", "'auc:'", ",", "auc", ")", "\n", "test_data", "=", "[", "]", "\n", "\n", "val_data", ",", "labels", "=", "get_data", "(", "val_file", ",", "embed_dir", ")", "\n", "val_pred", "=", "model", ".", "predict", "(", "val_data", ")", "\n", "rank", "(", "val_file", ",", "val_pred", ",", "processed_dir", "+", "model_type", "+", "'.rankings.train2'", ",", "max_behavior_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.save_svm_file": [[212, 221], ["open", "enumerate", "open.close", "enumerate", "open.write", "feats.append", "str", "str", "str", "str", "int", "int"], "function", ["None"], ["", "def", "save_svm_file", "(", "dataset", ",", "out_file", ")", ":", "\n", "    ", "svm_rank_fout", "=", "open", "(", "out_file", ",", "'w'", ")", "\n", "for", "i", ",", "record", "in", "enumerate", "(", "dataset", ")", ":", "\n", "        ", "feats", "=", "[", "]", "\n", "for", "j", ",", "v", "in", "enumerate", "(", "record", "[", "2", ":", "]", ")", ":", "\n", "            ", "feats", ".", "append", "(", "str", "(", "j", "+", "1", ")", "+", "':'", "+", "str", "(", "v", ")", ")", "\n", "", "line", "=", "str", "(", "int", "(", "record", "[", "0", "]", ")", ")", "+", "' qid:'", "+", "str", "(", "int", "(", "record", "[", "1", "]", ")", ")", "+", "' '", "+", "' '", ".", "join", "(", "feats", ")", "+", "'\\n'", "\n", "svm_rank_fout", ".", "write", "(", "line", ")", "\n", "", "svm_rank_fout", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.train_svm": [[223, 260], ["run_init_ranker.get_data", "run_init_ranker.save_svm_file", "run_init_ranker.get_data", "run_init_ranker.save_svm_file", "run_init_ranker.get_data", "run_init_ranker.save_svm_file", "os.system", "os.system", "os.system", "os.system", "os.system", "os.system", "open", "list", "open.close", "utils.rank", "sklearn.metrics.log_loss", "sklearn.metrics.roc_auc_score", "print", "open", "list", "open.close", "utils.rank", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "map", "map", "open.readlines", "open.readlines", "str"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.get_data", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.save_svm_file", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.get_data", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.save_svm_file", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.get_data", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.save_svm_file", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.rank", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.rank"], ["", "def", "train_svm", "(", "train_file", ",", "val_file", ",", "test_file", ",", "model_type", ",", "embed_dir", ",", "max_behavior_len", ",", "processed_dir", ",", "c", "=", "2", ")", ":", "\n", "    ", "svm_dir", "=", "processed_dir", "+", "'svm'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "svm_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "svm_dir", ")", "\n", "", "training_data", ",", "train_labels", "=", "get_data", "(", "train_file", ",", "embed_dir", ")", "\n", "save_svm_file", "(", "training_data", ",", "svm_dir", "+", "'/train.txt'", ")", "\n", "training_data", ",", "train_labels", "=", "[", "]", ",", "[", "]", "\n", "test_data", ",", "test_labels", "=", "get_data", "(", "test_file", ",", "embed_dir", ")", "\n", "save_svm_file", "(", "test_data", ",", "svm_dir", "+", "'/test.txt'", ")", "\n", "test_data", "=", "[", "]", "\n", "val_data", ",", "val_labels", "=", "get_data", "(", "val_file", ",", "embed_dir", ")", "\n", "save_svm_file", "(", "val_data", ",", "svm_dir", "+", "'/valid.txt'", ")", "\n", "val_data", ",", "val_labels", "=", "[", "]", ",", "[", "]", "\n", "\n", "# train SVMrank model", "\n", "command", "=", "'SVMrank/svm_rank_learn -c '", "+", "str", "(", "c", ")", "+", "' '", "+", "svm_dir", "+", "'/train.txt '", "+", "svm_dir", "+", "'/model.dat'", "\n", "os", ".", "system", "(", "command", ")", "\n", "\n", "# test the train set left, generate initial rank for context feature and examination", "\n", "# SVM_rank_path+svm_rank_classify remaining_train_set_path output_model_path output_prediction_path", "\n", "command", "=", "'SVMrank/svm_rank_classify '", "+", "svm_dir", "+", "'/test.txt '", "+", "svm_dir", "+", "'/model.dat '", "+", "svm_dir", "+", "'/test.predict'", "\n", "os", ".", "system", "(", "command", ")", "\n", "command", "=", "'SVMrank/svm_rank_classify '", "+", "svm_dir", "+", "'/valid.txt '", "+", "svm_dir", "+", "'/model.dat '", "+", "svm_dir", "+", "'/valid.predict'", "\n", "os", ".", "system", "(", "command", ")", "\n", "\n", "test_fin", "=", "open", "(", "svm_dir", "+", "'/test.predict'", ",", "'r'", ")", "\n", "test_pred", "=", "list", "(", "map", "(", "float", ",", "test_fin", ".", "readlines", "(", ")", ")", ")", "\n", "test_fin", ".", "close", "(", ")", "\n", "rank", "(", "test_file", ",", "test_pred", ",", "processed_dir", "+", "model_type", "+", "'.rankings.test2'", ",", "max_behavior_len", ")", "\n", "logloss", "=", "log_loss", "(", "test_labels", ",", "test_pred", ")", "\n", "auc", "=", "roc_auc_score", "(", "test_labels", ",", "test_pred", ")", "\n", "print", "(", "'mart logloss:'", ",", "logloss", ",", "'auc:'", ",", "auc", ")", "\n", "\n", "val_fin", "=", "open", "(", "svm_dir", "+", "'/valid.predict'", ",", "'r'", ")", "\n", "val_pred", "=", "list", "(", "map", "(", "float", ",", "val_fin", ".", "readlines", "(", ")", ")", ")", "\n", "val_fin", ".", "close", "(", ")", "\n", "rank", "(", "val_file", ",", "val_pred", ",", "processed_dir", "+", "model_type", "+", "'.rankings.train2'", ",", "max_behavior_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.run_init_ranker.ranker_parse_args": [[263, 285], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_known_args"], "function", ["None"], ["", "def", "ranker_parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--data_dir'", ",", "type", "=", "str", ",", "default", "=", "'./data/ad/processed/'", ",", "help", "=", "'the path of data'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_dir'", ",", "type", "=", "str", ",", "default", "=", "'./logs/'", ",", "help", "=", "'dir that saves logs and model'", ")", "\n", "parser", ".", "add_argument", "(", "'--model_type'", ",", "default", "=", "'DNN'", ",", "choices", "=", "[", "'DNN'", ",", "'mart'", ",", "'DIN'", "]", ",", "type", "=", "str", ",", "\n", "help", "=", "'algorithm name, including DNN, mart, svm'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_set_name'", ",", "default", "=", "'ad'", ",", "type", "=", "str", ",", "help", "=", "'name of dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_hist_len'", ",", "default", "=", "30", ",", "type", "=", "int", ",", "help", "=", "'the length of history'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_num'", ",", "default", "=", "50", ",", "type", "=", "int", ",", "help", "=", "'epochs of each iteration.'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "default", "=", "500", ",", "type", "=", "int", ",", "help", "=", "'batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "default", "=", "1e-3", ",", "type", "=", "float", ",", "help", "=", "'learning rate'", ")", "\n", "parser", ".", "add_argument", "(", "'--l2_reg'", ",", "default", "=", "1e-5", ",", "type", "=", "float", ",", "help", "=", "'l2 loss scale'", ")", "\n", "parser", ".", "add_argument", "(", "'--eb_dim'", ",", "default", "=", "16", ",", "type", "=", "int", ",", "help", "=", "'size of embedding'", ")", "\n", "parser", ".", "add_argument", "(", "'--hidden_size'", ",", "default", "=", "64", ",", "type", "=", "int", ",", "help", "=", "'hidden size'", ")", "\n", "parser", ".", "add_argument", "(", "'--tree_type'", ",", "default", "=", "'lgb'", ",", "type", "=", "str", ",", "help", "=", "'tree type for lambdamart'", ")", "\n", "parser", ".", "add_argument", "(", "'--tree_num'", ",", "default", "=", "10", ",", "type", "=", "int", ",", "help", "=", "'num of tree for lambdamart'", ")", "\n", "# parser.add_argument('--c', default=2, type=float, help='c for SVM')", "\n", "# parser.add_argument('--decay_steps', default=3000, type=int, help='learning rate decay steps')", "\n", "# parser.add_argument('--decay_rate', default=1.0, type=float, help='learning rate decay rate')", "\n", "parser", ".", "add_argument", "(", "'--setting_path'", ",", "type", "=", "str", ",", "default", "=", "''", ",", "help", "=", "'setting dir'", ")", "\n", "FLAGS", ",", "_", "=", "parser", ".", "parse_known_args", "(", ")", "\n", "return", "FLAGS", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.preprocess_ad.convert": [[12, 17], ["enumerate", "res.append"], "function", ["None"], ["def", "convert", "(", "data", ",", "ft_map", ")", ":", "\n", "    ", "res", "=", "[", "]", "\n", "for", "i", ",", "v", "in", "enumerate", "(", "data", ")", ":", "\n", "        ", "res", ".", "append", "(", "ft_map", "[", "i", "]", "[", "v", "]", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.preprocess_ad.process_data": [[19, 255], ["collections.defaultdict", "collections.defaultdict", "set", "set", "print", "collections.defaultdict.keys", "print", "print", "print", "set", "print", "print", "print", "print", "print", "print", "range", "print", "print", "range", "print", "print", "range", "prop.items", "print", "print", "random.shuffle", "len", "print", "open", "len", "len", "len", "open", "len", "collections.defaultdict.keys", "sorted", "open", "len", "open", "len", "range", "range", "print", "print", "print", "len", "len", "len", "len", "open", "pickle.dump", "enumerate", "enumerate", "range", "open", "pickle.dump", "open", "pickle.dump", "res.append", "len", "len", "len", "open", "pickle.dump", "line.split", "float", "int", "user_tl[].append", "len", "sorted", "len", "numpy.array", "max", "min", "set.add", "sum", "remain_tl.tolist.tolist", "remain_tl.tolist.reverse", "len", "len", "line.split", "int", "line.split", "int", "line.split", "int", "user_prof.__contains__", "range", "len", "len", "len", "new_prof.append", "print", "print", "range", "ft_spar.append", "ft_dens.append", "label.append", "hist_spar.append", "hist_dens.append", "sum", "print", "exit", "set.add", "float", "range", "range", "range", "item_ft_map[].__contains__", "usr_ft_map[].__contains__", "prop.__contains__", "preprocess_ad.convert", "preprocess_ad.convert", "int", "int", "int", "int", "int", "int", "sum", "behav_tl[].append", "eval", "range", "hist_ft_map[].__contains__", "range", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.preprocess_prm.convert", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.preprocess_prm.convert", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval"], ["", "def", "process_data", "(", "ad_feature", ",", "behavior", ",", "raw_sample", ",", "user_profile", ",", "store_dir", ",", "max_hist_len", ",", "list_len", ")", ":", "\n", "\n", "    ", "user_tl", "=", "defaultdict", "(", "list", ")", "\n", "behav_tl", "=", "defaultdict", "(", "list", ")", "\n", "item_sft", "=", "{", "}", "\n", "item_dft", "=", "{", "}", "\n", "user_prof", "=", "{", "}", "\n", "last_ts", "=", "{", "}", "\n", "uid_set", "=", "set", "(", ")", "\n", "iid_set", "=", "set", "(", ")", "\n", "idx", "=", "0", "\n", "pos", "=", "0", "\n", "\n", "First", "=", "True", "\n", "with", "open", "(", "raw_sample", ",", "'r'", ")", "as", "r", ":", "\n", "        ", "for", "line", "in", "r", ":", "\n", "            ", "if", "First", ":", "\n", "                ", "First", "=", "False", "\n", "continue", "\n", "", "uid", ",", "ts", ",", "iid", ",", "pid", ",", "noclk", ",", "clk", "=", "line", ".", "split", "(", "','", ")", "\n", "d", "=", "float", "(", "ts", ")", "\n", "pos", "+=", "int", "(", "clk", ")", "\n", "user_tl", "[", "int", "(", "uid", ")", "]", ".", "append", "(", "[", "d", ",", "int", "(", "iid", ")", ",", "int", "(", "clk", ")", "]", ")", "\n", "idx", "+=", "1", "\n", "", "", "print", "(", "'num of records: '", ",", "idx", ",", "'pos vs neg: '", ",", "pos", "/", "(", "idx", "-", "pos", ")", ",", "'user'", ",", "len", "(", "user_tl", ")", ")", "\n", "\n", "removed_1", ",", "removed_2", "=", "0", ",", "0", "\n", "pos", "=", "0", "\n", "total_len", ",", "max_len", ",", "min_len", "=", "0", ",", "0", ",", "1e9", "\n", "for", "uid", "in", "user_tl", ".", "keys", "(", ")", ":", "\n", "        ", "tl", "=", "user_tl", "[", "uid", "]", "\n", "if", "len", "(", "tl", ")", ">", "1", ":", "\n", "            ", "tl", "=", "sorted", "(", "tl", ",", "key", "=", "lambda", "k", ":", "k", "[", "0", "]", ",", "reverse", "=", "True", ")", "\n", "tl_len", "=", "len", "(", "tl", ")", "\n", "tl", "=", "np", ".", "array", "(", "tl", ")", "\n", "if", "sum", "(", "tl", "[", ":", ",", "2", "]", ")", "==", "0", ":", "\n", "                ", "removed_2", "+=", "1", "\n", "continue", "\n", "\n", "", "si", ",", "ei", "=", "0", ",", "1", "\n", "while", "si", "<", "tl_len", ":", "\n", "                ", "while", "ei", "<", "tl_len", "and", "(", "tl", "[", "si", "]", "[", "0", "]", "-", "tl", "[", "ei", "]", "[", "0", "]", "<=", "60", "*", "5", ")", ":", "\n", "                    ", "ei", "+=", "1", "\n", "", "if", "sum", "(", "tl", "[", "si", ":", "ei", "]", "[", ":", ",", "2", "]", ")", "==", "0", ":", "\n", "                    ", "si", "=", "ei", "\n", "ei", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "break", "\n", "\n", "", "", "if", "si", ">=", "tl_len", ":", "\n", "                ", "print", "(", "'wrong'", ",", "si", ",", "ei", ",", "tl", "[", ":", ",", "2", "]", ")", "\n", "exit", "(", ")", "\n", "", "total_len", "+=", "(", "ei", "-", "si", ")", "\n", "max_len", "=", "max", "(", "max_len", ",", "ei", "-", "si", ")", "\n", "min_len", "=", "min", "(", "min_len", ",", "ei", "-", "si", ")", "\n", "\n", "uid_set", ".", "add", "(", "uid", ")", "\n", "remain_tl", "=", "tl", "[", "si", ":", "ei", "]", "[", "-", "list_len", ":", "]", "\n", "\n", "pos", "+=", "sum", "(", "remain_tl", "[", ":", ",", "2", "]", ")", "\n", "remain_tl", "=", "remain_tl", ".", "tolist", "(", ")", "\n", "remain_tl", ".", "reverse", "(", ")", "\n", "user_tl", "[", "uid", "]", "=", "remain_tl", "\n", "last_ts", "[", "uid", "]", "=", "remain_tl", "[", "0", "]", "[", "0", "]", "\n", "for", "v", "in", "remain_tl", ":", "\n", "                ", "iid_set", ".", "add", "(", "v", "[", "1", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "removed_1", "+=", "1", "\n", "", "", "print", "(", "'filter <= 4: num of user:'", ",", "len", "(", "uid_set", ")", ",", "' num of item: '", ",", "len", "(", "iid_set", ")", ",", "' removed <= 3: '", ",", "removed_1", ",", "\n", "'remove all 0'", ",", "removed_2", ",", "'pos per list: '", ",", "pos", "/", "len", "(", "uid_set", ")", ")", "\n", "print", "(", "'max len:'", ",", "max_len", ",", "'min len:'", ",", "min_len", ",", "'average len:'", ",", "total_len", "/", "len", "(", "uid_set", ")", ")", "\n", "\n", "First", "=", "True", "\n", "with", "open", "(", "behavior", ",", "'r'", ")", "as", "r", ":", "\n", "        ", "for", "line", "in", "r", ":", "\n", "            ", "if", "First", ":", "\n", "                ", "First", "=", "False", "\n", "continue", "\n", "", "uid", ",", "ts", ",", "btag", ",", "cate", ",", "brand", "=", "line", ".", "split", "(", "','", ")", "\n", "if", "cate", "==", "'null'", "or", "brand", "==", "'null'", ":", "\n", "                ", "continue", "\n", "", "uid", "=", "int", "(", "uid", ")", "\n", "if", "uid", "in", "uid_set", ":", "\n", "                ", "d", "=", "float", "(", "ts", ")", "\n", "early_d", "=", "last_ts", "[", "uid", "]", "\n", "if", "d", "<=", "early_d", ":", "\n", "                    ", "behav_tl", "[", "uid", "]", ".", "append", "(", "[", "d", ",", "[", "btag", ",", "int", "(", "cate", ")", ",", "int", "(", "brand", ")", "]", "]", ")", "\n", "", "", "", "", "print", "(", "'finish loading history, num behavior:'", ",", "len", "(", "behav_tl", ")", ")", "\n", "uid_set", "=", "set", "(", "behav_tl", ".", "keys", "(", ")", ")", "\n", "\n", "for", "uid", "in", "uid_set", ":", "\n", "        ", "tl", "=", "behav_tl", "[", "uid", "]", "\n", "tl", "=", "sorted", "(", "tl", ",", "key", "=", "lambda", "k", ":", "k", "[", "0", "]", ",", "reverse", "=", "True", ")", "\n", "behav_tl", "[", "uid", "]", "=", "tl", "[", ":", "max_hist_len", "]", "\n", "\n", "", "First", "=", "4", "\n", "with", "open", "(", "user_profile", ",", "'r'", ")", "as", "r", ":", "\n", "        ", "for", "line", "in", "r", ":", "\n", "            ", "if", "First", ":", "\n", "                ", "First", "-=", "1", "\n", "continue", "\n", "", "values", "=", "line", ".", "split", "(", "','", ")", "\n", "uid", "=", "int", "(", "values", "[", "0", "]", ")", "\n", "if", "uid", "in", "uid_set", ":", "\n", "                ", "user_prof", "[", "uid", "]", "=", "values", "[", "1", ":", "]", "\n", "", "", "", "print", "(", "'finish loading user profile, num profile:'", ",", "len", "(", "user_prof", ")", ")", "\n", "# uid_set = set(user_prof.keys())", "\n", "\n", "First", "=", "True", "\n", "with", "open", "(", "ad_feature", ",", "'r'", ")", "as", "r", ":", "\n", "        ", "for", "line", "in", "r", ":", "\n", "            ", "if", "First", ":", "\n", "                ", "First", "=", "False", "\n", "continue", "\n", "", "iid", ",", "cate_id", ",", "cam_id", ",", "cust_id", ",", "brand", ",", "price", "=", "line", ".", "split", "(", "','", ")", "\n", "iid", "=", "int", "(", "iid", ")", "\n", "if", "iid", "in", "iid_set", ":", "\n", "                ", "item_sft", "[", "iid", "]", "=", "[", "iid", ",", "cate_id", ",", "cam_id", ",", "cust_id", ",", "brand", "]", "\n", "item_dft", "[", "iid", "]", "=", "[", "eval", "(", "price", ")", "]", "\n", "", "", "", "print", "(", "'finish loading ad feature, num item:'", ",", "len", "(", "item_sft", ")", ")", "\n", "\n", "\n", "profile_fnum", ",", "itm_dens_fnum", ",", "itm_spar_fnum", ",", "hist_dens_fnum", ",", "hist_spar_fnum", "=", "8", ",", "1", ",", "5", ",", "1", ",", "3", "\n", "print", "(", "'profile fnum:'", ",", "profile_fnum", ",", "'itm sparse fnum:'", ",", "itm_spar_fnum", ",", "'itm dense fnum:'", ",", "itm_dens_fnum", ")", "\n", "wo_profile", "=", "0", "\n", "for", "uid", "in", "uid_set", ":", "\n", "        ", "if", "not", "user_prof", ".", "__contains__", "(", "uid", ")", ":", "\n", "            ", "user_prof", "[", "uid", "]", "=", "[", "'null'", "for", "_", "in", "range", "(", "profile_fnum", ")", "]", "\n", "wo_profile", "+=", "1", "\n", "", "", "print", "(", "'user w/o profile:'", ",", "wo_profile", ")", "\n", "\n", "\n", "uid_map", ",", "usr_ft_map", ",", "item_ft_map", ",", "hist_ft_map", "=", "{", "}", ",", "[", "{", "}", "for", "_", "in", "range", "(", "profile_fnum", ")", "]", ",", "[", "{", "}", "for", "_", "in", "range", "(", "itm_spar_fnum", ")", "]", ",", "[", "{", "}", "for", "_", "in", "range", "(", "hist_spar_fnum", ")", "]", "\n", "ft_idx", "=", "1", "\n", "for", "iid", "in", "iid_set", ":", "\n", "        ", "itm_ft", "=", "item_sft", "[", "iid", "]", "\n", "for", "i", "in", "range", "(", "itm_spar_fnum", ")", ":", "\n", "            ", "if", "not", "item_ft_map", "[", "i", "]", ".", "__contains__", "(", "itm_ft", "[", "i", "]", ")", ":", "\n", "                ", "item_ft_map", "[", "i", "]", "[", "itm_ft", "[", "i", "]", "]", "=", "ft_idx", "\n", "ft_idx", "+=", "1", "\n", "", "", "", "for", "uid", "in", "uid_set", ":", "\n", "        ", "for", "hist_itm", "in", "behav_tl", "[", "uid", "]", ":", "\n", "            ", "for", "i", "in", "range", "(", "hist_spar_fnum", ")", ":", "\n", "                ", "if", "not", "hist_ft_map", "[", "i", "]", ".", "__contains__", "(", "hist_itm", "[", "1", "]", "[", "i", "]", ")", ":", "\n", "                    ", "hist_ft_map", "[", "i", "]", "[", "hist_itm", "[", "1", "]", "[", "i", "]", "]", "=", "ft_idx", "\n", "ft_idx", "+=", "1", "\n", "", "", "", "prof", "=", "user_prof", "[", "uid", "]", "\n", "for", "i", "in", "range", "(", "profile_fnum", ")", ":", "\n", "            ", "if", "not", "usr_ft_map", "[", "i", "]", ".", "__contains__", "(", "prof", "[", "i", "]", ")", ":", "\n", "                ", "usr_ft_map", "[", "i", "]", "[", "prof", "[", "i", "]", "]", "=", "ft_idx", "\n", "ft_idx", "+=", "1", "\n", "# uid_idx = ft_idx", "\n", "# for uid in uid_set:", "\n", "#     uid_map[uid] = uid_idx", "\n", "#     uid_idx += 1", "\n", "", "", "", "print", "(", "'total feature'", ",", "ft_idx", ")", "\n", "print", "(", "'user profile'", ")", "\n", "for", "i", "in", "range", "(", "profile_fnum", ")", ":", "\n", "        ", "print", "(", "len", "(", "usr_ft_map", "[", "i", "]", ")", ",", "end", "=", "'  '", ")", "\n", "", "print", "(", ")", "\n", "print", "(", "'item sparse feature'", ")", "\n", "for", "i", "in", "range", "(", "itm_spar_fnum", ")", ":", "\n", "        ", "print", "(", "len", "(", "item_ft_map", "[", "i", "]", ")", ",", "end", "=", "'  '", ")", "\n", "", "print", "(", ")", "\n", "print", "(", "'hist sparse feature'", ")", "\n", "for", "i", "in", "range", "(", "hist_spar_fnum", ")", ":", "\n", "        ", "print", "(", "len", "(", "hist_ft_map", "[", "i", "]", ")", ",", "end", "=", "'  '", ")", "\n", "\n", "", "stat", "=", "{", "'user_num'", ":", "len", "(", "uid_set", ")", ",", "'item_num'", ":", "len", "(", "iid_set", ")", ",", "'cate_num'", ":", "len", "(", "item_ft_map", "[", "1", "]", ")", ",", "\n", "'ft_num'", ":", "ft_idx", ",", "'list_num'", ":", "len", "(", "uid_set", ")", ",", "'user_fnum'", ":", "1", ",", "'profile_fnum'", ":", "profile_fnum", ",", "\n", "'itm_spar_fnum'", ":", "itm_spar_fnum", ",", "'itm_dens_fnum'", ":", "itm_dens_fnum", ",", "\n", "'hist_spar_fnum'", ":", "hist_spar_fnum", ",", "'hist_dens_fnum'", ":", "hist_dens_fnum", "}", "\n", "with", "open", "(", "store_dir", "+", "'data.stat'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pkl", ".", "dump", "(", "stat", ",", "f", ")", "\n", "\n", "", "prop", "=", "{", "}", "\n", "for", "uid", "in", "uid_set", ":", "\n", "        ", "tl", "=", "user_tl", "[", "uid", "]", "\n", "for", "i", ",", "itm", "in", "enumerate", "(", "tl", ")", ":", "\n", "            ", "d", ",", "iid", ",", "clk", "=", "itm", "\n", "cid", "=", "item_sft", "[", "iid", "]", "[", "1", "]", "\n", "cate", "=", "item_ft_map", "[", "1", "]", "[", "cid", "]", "\n", "if", "not", "prop", ".", "__contains__", "(", "cate", ")", ":", "\n", "                ", "prop", "[", "cate", "]", "=", "[", "0", "for", "i", "in", "range", "(", "list_len", ")", "]", "\n", "", "prop", "[", "cate", "]", "[", "i", "]", "+=", "clk", "\n", "", "prof", "=", "user_prof", "[", "uid", "]", "\n", "new_prof", "=", "[", "]", "\n", "for", "i", ",", "v", "in", "enumerate", "(", "prof", ")", ":", "\n", "            ", "new_prof", ".", "append", "(", "usr_ft_map", "[", "i", "]", "[", "v", "]", ")", "\n", "", "user_prof", "[", "uid", "]", "=", "new_prof", "\n", "\n", "", "_print", "=", "5", "\n", "for", "k", ",", "v", "in", "prop", ".", "items", "(", ")", ":", "\n", "        ", "first_pos_click", "=", "v", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "list_len", ")", ":", "\n", "            ", "prop", "[", "k", "]", "[", "i", "]", "=", "(", "v", "[", "i", "]", "+", "1e-6", ")", "/", "(", "first_pos_click", "+", "1e-6", ")", "\n", "", "if", "_print", ":", "\n", "            ", "print", "(", "k", ")", "\n", "print", "(", "prop", "[", "k", "]", ")", "\n", "_print", "-=", "1", "\n", "", "", "prop", "[", "0", "]", "=", "[", "1e-6", "for", "i", "in", "range", "(", "list_len", ")", "]", "\n", "\n", "with", "open", "(", "store_dir", "+", "'prop'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pkl", ".", "dump", "(", "prop", ",", "f", ")", "\n", "\n", "", "with", "open", "(", "store_dir", "+", "'user.profile'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pkl", ".", "dump", "(", "user_prof", ",", "f", ")", "\n", "\n", "", "prop", ",", "user_prof", ",", "usr_ft_map", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "print", "(", "'save prop & user profile'", ")", "\n", "\n", "# map old feature id to new one", "\n", "res", "=", "[", "]", "\n", "for", "uid", "in", "uid_set", ":", "\n", "        ", "ft_spar", ",", "ft_dens", ",", "label", ",", "hist_spar", ",", "hist_dens", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "d", ",", "iid", ",", "clk", "in", "user_tl", "[", "uid", "]", ":", "\n", "            ", "ft_spar", ".", "append", "(", "convert", "(", "item_sft", "[", "iid", "]", ",", "item_ft_map", ")", ")", "\n", "ft_dens", ".", "append", "(", "item_dft", "[", "iid", "]", ")", "\n", "label", ".", "append", "(", "clk", ")", "\n", "", "for", "d", ",", "sft", "in", "behav_tl", "[", "uid", "]", ":", "\n", "            ", "hist_spar", ".", "append", "(", "convert", "(", "sft", ",", "hist_ft_map", ")", ")", "\n", "interval", "=", "(", "last_ts", "[", "uid", "]", "-", "d", ")", "/", "(", "60", "*", "60", ")", "\n", "hist_dens", ".", "append", "(", "[", "interval", "]", ")", "\n", "", "res", ".", "append", "(", "[", "uid", ",", "ft_spar", ",", "ft_dens", ",", "hist_spar", ",", "hist_dens", ",", "label", "]", ")", "\n", "", "print", "(", "'get res'", ")", "\n", "user_tl", ",", "behav_tl", ",", "item_sft", ",", "item_dft", ",", "item_ft_map", ",", "hist_ft_map", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "# split", "\n", "random", ".", "shuffle", "(", "res", ")", "\n", "num", "=", "len", "(", "res", ")", "\n", "train_list", ",", "val_list", ",", "test_list", "=", "res", "[", ":", "int", "(", "0.4", "*", "num", ")", "]", ",", "res", "[", "int", "(", "0.4", "*", "num", ")", ":", "int", "(", "0.9", "*", "num", ")", "]", ",", "res", "[", "int", "(", "0.9", "*", "num", ")", ":", "]", "\n", "\n", "print", "(", "'train num'", ",", "len", "(", "train_list", ")", ",", "'val num'", ",", "len", "(", "val_list", ")", ",", "'test num'", ",", "len", "(", "test_list", ")", ")", "\n", "with", "open", "(", "store_dir", "+", "'data.data'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pkl", ".", "dump", "(", "[", "train_list", ",", "val_list", ",", "test_list", "]", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.preprocess_prm.convert": [[11, 17], ["numpy.concatenate().tolist", "range", "eval", "len", "data.strip().split", "numpy.concatenate", "range", "data.strip", "numpy.array", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval"], ["def", "convert", "(", "data", ",", "item_ft_map", ",", "uid_map", ")", ":", "\n", "    ", "uid", ",", "profile", ",", "spar_ft", ",", "dens_ft1", ",", "dens_ft2", ",", "label", "=", "[", "eval", "(", "v", ")", "for", "v", "in", "data", ".", "strip", "(", ")", ".", "split", "(", "'|'", ")", "]", "\n", "dens_ft", "=", "np", ".", "concatenate", "(", "(", "np", ".", "array", "(", "dens_ft1", ")", ",", "np", ".", "array", "(", "dens_ft2", ")", ")", ",", "axis", "=", "1", ")", ".", "tolist", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "spar_ft", ")", ")", ":", "\n", "        ", "spar_ft", "[", "i", "]", "=", "[", "item_ft_map", "[", "j", "]", "[", "spar_ft", "[", "i", "]", "[", "j", "]", "]", "for", "j", "in", "range", "(", "len", "(", "item_ft_map", ")", ")", "]", "\n", "", "return", "uid_map", "[", "uid", "]", ",", "spar_ft", ",", "dens_ft", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.preprocess_prm.get_data_with_hist": [[19, 38], ["len", "range", "range", "hist_dens.reverse", "hist_spar.reverse", "preprocess_prm.convert", "keep_uid.append", "keep_spar.append", "keep_dens.append", "keep_lb.append", "max", "preprocess_prm.convert", "range", "len", "len", "hist_spar.append", "hist_dens.append", "len"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.preprocess_prm.convert", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.preprocess_prm.convert"], ["", "def", "get_data_with_hist", "(", "idx_list", ",", "max_hist_len", ",", "num", ",", "records", ",", "uid_map", ",", "item_ft_map", ")", ":", "\n", "    ", "keep_uid", ",", "keep_lb", ",", "keep_dens", ",", "keep_spar", ",", "hist_spar", ",", "hist_dens", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "idx_list_len", "=", "len", "(", "idx_list", ")", "\n", "for", "i", "in", "range", "(", "idx_list_len", "-", "num", ",", "idx_list_len", ")", ":", "\n", "        ", "uid", ",", "spar_ft", ",", "dens_ft", ",", "label", "=", "convert", "(", "records", "[", "idx_list", "[", "i", "]", "]", ",", "item_ft_map", ",", "uid_map", ")", "\n", "keep_uid", ".", "append", "(", "uid", ")", "\n", "keep_spar", ".", "append", "(", "spar_ft", ")", "\n", "keep_dens", ".", "append", "(", "dens_ft", ")", "\n", "keep_lb", ".", "append", "(", "label", ")", "\n", "", "begin", ",", "end", "=", "max", "(", "0", ",", "len", "(", "idx_list", ")", "-", "max_hist_len", "-", "num", ")", ",", "len", "(", "idx_list", ")", "-", "1", "\n", "for", "i", "in", "range", "(", "begin", ",", "end", ")", ":", "\n", "        ", "uid", ",", "spar_ft", ",", "dens_ft", ",", "label", "=", "convert", "(", "records", "[", "idx_list", "[", "i", "]", "]", ",", "item_ft_map", ",", "uid_map", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "label", ")", ")", ":", "\n", "            ", "if", "label", "[", "j", "]", ":", "\n", "                ", "hist_spar", ".", "append", "(", "spar_ft", "[", "j", "]", ")", "\n", "hist_dens", ".", "append", "(", "dens_ft", "[", "j", "]", ")", "\n", "", "", "", "hist_dens", ".", "reverse", "(", ")", "\n", "hist_spar", ".", "reverse", "(", ")", "\n", "return", "keep_uid", ",", "keep_spar", ",", "keep_dens", ",", "hist_spar", "[", ":", "max_hist_len", "+", "num", "-", "1", ":", "]", ",", "hist_dens", "[", ":", "max_hist_len", "+", "num", "-", "1", ":", "]", ",", "keep_lb", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.preprocess_prm.process_data": [[42, 204], ["open", "open.readlines", "open", "fin1.readlines.extend", "print", "collections.defaultdict", "enumerate", "print", "records[].strip().split", "print", "collections.defaultdict.items", "print", "print", "print", "print", "print", "enumerate", "enumerate", "prop.items", "print", "print", "open.readlines", "uid_idx[].append", "len", "len", "len", "len", "set", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "open", "pickle.dump", "records[].strip().split", "enumerate", "range", "open", "pickle.dump", "open", "pickle.dump", "random.random", "preprocess_prm.get_data_with_hist", "len", "len", "len", "open", "pickle.dump", "v.find", "records[].strip", "eval", "len", "len", "set", "set", "len", "uid_set.add", "eval", "eval", "eval", "eval", "uid_profile.__contains__", "test_list.append", "eval", "range", "range", "remain_idx.append", "records[].strip().split", "eval", "enumerate", "eval", "sum", "range", "range", "records[].strip", "prop.__contains__", "val_list.append", "train_list.append", "eval", "eval", "min", "max", "eval", "usr_ft_set[].add", "enumerate", "len", "sum", "range", "eval", "records[].strip", "len", "len", "item_ft_set[].add", "range", "v.strip().split", "v.strip"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.preprocess_prm.get_data_with_hist", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval"], ["", "def", "process_data", "(", "raw_dir1", ",", "raw_dir2", ",", "store_dir", ")", ":", "\n", "    ", "fin1", "=", "open", "(", "raw_dir1", ",", "'r'", ")", "\n", "records", "=", "fin1", ".", "readlines", "(", ")", "\n", "fin2", "=", "open", "(", "raw_dir2", ",", "'r'", ")", "\n", "records", ".", "extend", "(", "fin2", ".", "readlines", "(", ")", ")", "\n", "print", "(", "'finish loading data'", ")", "\n", "\n", "uid_idx", "=", "defaultdict", "(", "list", ")", "\n", "with_null", "=", "0", "\n", "\n", "# remove records with null feature", "\n", "for", "i", ",", "v", "in", "enumerate", "(", "records", ")", ":", "\n", "        ", "if", "v", ".", "find", "(", "'null'", ")", "!=", "-", "1", ":", "\n", "            ", "with_null", "+=", "1", "\n", "continue", "\n", "", "uid_idx", "[", "eval", "(", "v", ".", "strip", "(", ")", ".", "split", "(", "'|'", ")", "[", "0", "]", ")", "]", ".", "append", "(", "i", ")", "\n", "\n", "", "print", "(", "'origin\\nuser num:'", ",", "len", "(", "uid_idx", ")", ",", "'record num:'", ",", "len", "(", "records", ")", ",", "'with null:'", ",", "with_null", ")", "\n", "\n", "# counting the number of feature", "\n", "uid", ",", "profile", ",", "spar_ft", ",", "dens_ft1", ",", "dens_ft2", ",", "label", "=", "records", "[", "0", "]", ".", "strip", "(", ")", ".", "split", "(", "'|'", ")", "\n", "profile_fnum", ",", "itm_dens_fnum", ",", "itm_spar_fnum", "=", "len", "(", "eval", "(", "profile", ")", ")", ",", "len", "(", "eval", "(", "dens_ft1", ")", "[", "0", "]", ")", "+", "len", "(", "eval", "(", "dens_ft2", ")", "[", "0", "]", ")", ",", "len", "(", "eval", "(", "spar_ft", ")", "[", "0", "]", ")", "\n", "print", "(", "'profile fnum:'", ",", "profile_fnum", ",", "'itm sparse fnum:'", ",", "itm_spar_fnum", ",", "'itm dense fnum:'", ",", "itm_dens_fnum", ")", "\n", "\n", "remain_idx", "=", "[", "]", "\n", "idx_uid", "=", "{", "}", "\n", "uid_set", ",", "item_ft_set", ",", "usr_ft_set", "=", "set", "(", ")", ",", "[", "set", "(", ")", "for", "_", "in", "range", "(", "itm_spar_fnum", ")", "]", ",", "[", "set", "(", ")", "for", "_", "in", "range", "(", "profile_fnum", ")", "]", "\n", "# num4, num5, num6, num7, num8 = 0, 0, 0, 0, 0", "\n", "pos", ",", "neg", "=", "0", ",", "0", "\n", "seq_min", ",", "seq_max", ",", "total_len", "=", "1e9", ",", "0", ",", "0", "\n", "\n", "\n", "# filter", "\n", "for", "k", ",", "v", "in", "uid_idx", ".", "items", "(", ")", ":", "\n", "# if len(v) > 8:", "\n", "#     num8 += 1", "\n", "# elif len(v) > 7:", "\n", "#     num7 += 1", "\n", "# elif len(v) > 6:", "\n", "#     num6 += 1", "\n", "# elif len(v) > 5:", "\n", "#     num5 += 1", "\n", "# elif len(v) > 4:", "\n", "#     num4 += 1", "\n", "        ", "if", "len", "(", "v", ")", ">", "3", ":", "\n", "            ", "uid_set", ".", "add", "(", "k", ")", "\n", "for", "idx", "in", "v", ":", "\n", "                ", "remain_idx", ".", "append", "(", "idx", ")", "\n", "idx_uid", "[", "idx", "]", "=", "k", "\n", "\n", "uid", ",", "profile", ",", "spar_ft", ",", "dens_ft1", ",", "dens_ft2", ",", "label", "=", "records", "[", "idx", "]", ".", "strip", "(", ")", ".", "split", "(", "'|'", ")", "\n", "label", "=", "eval", "(", "label", ")", "\n", "seq_min", ",", "seq_max", "=", "min", "(", "seq_min", ",", "len", "(", "label", ")", ")", ",", "max", "(", "seq_max", ",", "len", "(", "label", ")", ")", "\n", "# total_len += len(label)", "\n", "for", "i", ",", "value", "in", "enumerate", "(", "eval", "(", "profile", ")", ")", ":", "\n", "                    ", "usr_ft_set", "[", "i", "]", ".", "add", "(", "value", ")", "\n", "", "for", "ft", "in", "eval", "(", "spar_ft", ")", ":", "\n", "                    ", "for", "i", ",", "value", "in", "enumerate", "(", "ft", ")", ":", "\n", "                        ", "item_ft_set", "[", "i", "]", ".", "add", "(", "value", ")", "\n", "\n", "", "", "pos", "+=", "sum", "(", "label", ")", "\n", "neg", "+=", "len", "(", "label", ")", "-", "sum", "(", "label", ")", "\n", "\n", "# print(' >100:', num100, '\\n50-100:', num50, '\\n20-50', num20, '\\n10-20:', num10)", "\n", "# print(' >8:', num8, '\\n7:', num7, '\\n6', num6, '\\n5:', num5, '\\n4:', num4)", "\n", "", "", "", "print", "(", "'after filter < 4'", ")", "\n", "print", "(", "'user num:'", ",", "len", "(", "uid_set", ")", ",", "'list num:'", ",", "len", "(", "idx_uid", ")", ")", "\n", "print", "(", "'user ft:'", ",", "len", "(", "usr_ft_set", "[", "0", "]", ")", ",", "len", "(", "usr_ft_set", "[", "1", "]", ")", ",", "len", "(", "usr_ft_set", "[", "2", "]", ")", ")", "\n", "# print(usr_ft_set)", "\n", "print", "(", "'item ft'", ",", "len", "(", "item_ft_set", "[", "0", "]", ")", ",", "len", "(", "item_ft_set", "[", "1", "]", ")", ",", "len", "(", "item_ft_set", "[", "2", "]", ")", ",", "len", "(", "item_ft_set", "[", "3", "]", ")", ",", "len", "(", "item_ft_set", "[", "4", "]", ")", ")", "\n", "# print(item_ft_set[1:])", "\n", "print", "(", "'pos/neg:'", ",", "pos", "*", "1.0", "/", "neg", ")", "\n", "# print('max seq len:', seq_max, 'min seq len:', seq_min, 'average len:', total_len/len(remain_idx))", "\n", "\n", "# rename feature id", "\n", "ft_id", "=", "1", "\n", "uid_map", ",", "usr_ft_map", ",", "item_ft_map", "=", "{", "}", ",", "[", "{", "}", "for", "_", "in", "range", "(", "profile_fnum", ")", "]", ",", "[", "{", "}", "for", "_", "in", "range", "(", "itm_spar_fnum", ")", "]", "\n", "\n", "for", "v", "in", "uid_set", ":", "\n", "        ", "uid_map", "[", "v", "]", "=", "ft_id", "\n", "ft_id", "+=", "1", "\n", "", "for", "i", ",", "ft", "in", "enumerate", "(", "usr_ft_set", ")", ":", "\n", "        ", "for", "v", "in", "ft", ":", "\n", "            ", "usr_ft_map", "[", "i", "]", "[", "v", "]", "=", "ft_id", "\n", "ft_id", "+=", "1", "\n", "", "", "for", "i", ",", "ft", "in", "enumerate", "(", "item_ft_set", ")", ":", "\n", "        ", "for", "v", "in", "ft", ":", "\n", "            ", "item_ft_map", "[", "i", "]", "[", "v", "]", "=", "ft_id", "\n", "ft_id", "+=", "1", "\n", "\n", "# print('user_ft_map', usr_ft_map)", "\n", "# print('itm_ft_map', item_ft_map[2:])", "\n", "\n", "", "", "stat", "=", "{", "'user_num'", ":", "len", "(", "uid_map", ")", ",", "'item_num'", ":", "len", "(", "item_ft_map", "[", "0", "]", ")", ",", "'cate_num'", ":", "len", "(", "item_ft_map", "[", "1", "]", ")", ",", "\n", "'ft_num'", ":", "ft_id", ",", "'list_num'", ":", "len", "(", "idx_uid", ")", ",", "'user_fnum'", ":", "1", ",", "'profile_fnum'", ":", "profile_fnum", ",", "\n", "'itm_spar_fnum'", ":", "itm_spar_fnum", ",", "'itm_dens_fnum'", ":", "itm_dens_fnum", "}", "\n", "with", "open", "(", "store_dir", "+", "'data.stat'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pkl", ".", "dump", "(", "stat", ",", "f", ")", "\n", "\n", "# count clicks of different category at each position & process user profile", "\n", "", "prop", "=", "{", "}", "\n", "uid_profile", "=", "{", "}", "\n", "for", "idx", "in", "remain_idx", ":", "\n", "        ", "uid", ",", "profile", ",", "spar_ft", ",", "dens_ft1", ",", "dens_ft2", ",", "label", "=", "records", "[", "idx", "]", ".", "strip", "(", ")", ".", "split", "(", "'|'", ")", "\n", "uid", ",", "profile", ",", "spar_ft", ",", "label", "=", "eval", "(", "uid", ")", ",", "eval", "(", "profile", ")", ",", "eval", "(", "spar_ft", ")", ",", "eval", "(", "label", ")", "\n", "for", "i", ",", "sft", "in", "enumerate", "(", "spar_ft", ")", ":", "\n", "            ", "cate", "=", "item_ft_map", "[", "1", "]", "[", "sft", "[", "1", "]", "]", "\n", "if", "not", "prop", ".", "__contains__", "(", "cate", ")", ":", "\n", "                ", "prop", "[", "cate", "]", "=", "[", "0", "for", "i", "in", "range", "(", "seq_max", ")", "]", "\n", "", "prop", "[", "cate", "]", "[", "i", "]", "+=", "label", "[", "i", "]", "\n", "", "if", "not", "uid_profile", ".", "__contains__", "(", "uid_map", "[", "uid", "]", ")", ":", "\n", "            ", "uid_profile", "[", "uid_map", "[", "uid", "]", "]", "=", "[", "usr_ft_map", "[", "i", "]", "[", "profile", "[", "i", "]", "]", "for", "i", "in", "range", "(", "profile_fnum", ")", "]", "\n", "\n", "", "", "for", "k", ",", "v", "in", "prop", ".", "items", "(", ")", ":", "\n", "        ", "first_pos_click", "=", "v", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "seq_max", ")", ":", "\n", "            ", "prop", "[", "k", "]", "[", "i", "]", "=", "(", "v", "[", "i", "]", "+", "1e-6", ")", "/", "(", "first_pos_click", "+", "1e-6", ")", "\n", "\n", "", "", "with", "open", "(", "store_dir", "+", "'prop'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pkl", ".", "dump", "(", "prop", ",", "f", ")", "\n", "\n", "", "with", "open", "(", "store_dir", "+", "'user.profile'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pkl", ".", "dump", "(", "uid_profile", ",", "f", ")", "\n", "\n", "", "prop", ",", "uid_profile", "=", "[", "]", ",", "[", "]", "\n", "print", "(", "'save prop & user profile'", ")", "\n", "\n", "# split data", "\n", "train_list", ",", "val_list", ",", "test_list", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "uid", "in", "uid_set", ":", "\n", "        ", "idx_list", "=", "uid_idx", "[", "uid", "]", "\n", "rand", "=", "random", ".", "random", "(", ")", "\n", "uid", ",", "ft_spar", ",", "ft_dens", ",", "hist_spar", ",", "hist_dens", ",", "label", "=", "get_data_with_hist", "(", "idx_list", ",", "max_hist_len", ",", "1", ",", "records", ",", "uid_map", ",", "item_ft_map", ")", "\n", "if", "rand", "<", "0.1", ":", "\n", "            ", "test_list", ".", "append", "(", "[", "uid", "[", "0", "]", ",", "ft_spar", "[", "0", "]", ",", "ft_dens", "[", "0", "]", ",", "hist_spar", ",", "hist_dens", ",", "label", "[", "0", "]", "]", ")", "\n", "", "elif", "rand", "<", "0.6", ":", "\n", "            ", "val_list", ".", "append", "(", "[", "uid", "[", "0", "]", ",", "ft_spar", "[", "0", "]", ",", "ft_dens", "[", "0", "]", ",", "hist_spar", ",", "hist_dens", ",", "label", "[", "0", "]", "]", ")", "\n", "", "else", ":", "\n", "            ", "train_list", ".", "append", "(", "[", "uid", "[", "0", "]", ",", "ft_spar", "[", "0", "]", ",", "ft_dens", "[", "0", "]", ",", "hist_spar", ",", "hist_dens", ",", "label", "[", "0", "]", "]", ")", "\n", "# if random.random() < 0.1:", "\n", "#     uid, ft_spar, ft_dens, hist_spar, hist_dens, label = get_data_with_hist(idx_list, max_hist_len, 3, records, uid_map, item_ft_map)", "\n", "#     train_list.append([uid[0], ft_spar[0], ft_dens[0], hist_spar[-max_hist_len-2:-2], hist_dens[-max_hist_len-2:-2], label[0]])", "\n", "#     val_list.append([uid[1], ft_spar[1], ft_dens[1], hist_spar[-max_hist_len-1:-1], hist_dens[-max_hist_len-1:-1], label[1]])", "\n", "#     test_list.append([uid[2], ft_spar[2], ft_dens[2], hist_spar[-max_hist_len:], hist_dens[-max_hist_len:], label[2]])", "\n", "# # elif len(idx_list) == 2:", "\n", "# #     uid, ft_spar, ft_dens, hist_spar, hist_dens, label = get_data_with_hist(idx_list, max_hist_len, 1, records, uid_map, item_ft_map)", "\n", "# #     if random.random() < 0.1:", "\n", "# #         test_list.append([uid[0], ft_spar[0], ft_dens[0], hist_spar, hist_dens, label[0]])", "\n", "# #     else:", "\n", "# #         val_list.append([uid[0], ft_spar[0], ft_dens[0], hist_spar, hist_dens, label[0]])", "\n", "# else:", "\n", "#     uid, ft_spar, ft_dens, hist_spar, hist_dens, label = get_data_with_hist(idx_list, max_hist_len, 2, records, uid_map, item_ft_map)", "\n", "#     if random.random() < 0.1:", "\n", "#         val_list.append([uid[0], ft_spar[0], ft_dens[0], hist_spar[-max_hist_len-1:-1], hist_dens[-max_hist_len-1:-1], label[0]])", "\n", "#         test_list.append([uid[1], ft_spar[1], ft_dens[1], hist_spar[-max_hist_len:], hist_dens[-max_hist_len:], label[1]])", "\n", "#     else:", "\n", "#         train_list.append([uid[0], ft_spar[0], ft_dens[0], hist_spar[-max_hist_len-1:-1], hist_dens[-max_hist_len-1:-1], label[0]])", "\n", "#         val_list.append([uid[1], ft_spar[1], ft_dens[1], hist_spar[-max_hist_len:], hist_dens[-max_hist_len:], label[1]])", "\n", "\n", "", "", "print", "(", "'train num'", ",", "len", "(", "train_list", ")", ",", "'val num'", ",", "len", "(", "val_list", ")", ",", "'test num'", ",", "len", "(", "test_list", ")", ")", "\n", "with", "open", "(", "store_dir", "+", "'data.data'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pkl", ".", "dump", "(", "[", "train_list", ",", "val_list", ",", "test_list", "]", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.BaseModel.__init__": [[11, 53], ["tensorflow.reset_default_graph", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.name_scope", "tensorflow.get_variable", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.reshape", "tensorflow.reshape"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "eb_dim", ",", "feature_size", ",", "itm_spar_fnum", ",", "itm_dens_fnum", ",", "hist_spar_fnum", ",", "hist_dens_fnum", ",", "\n", "user_fnum", ",", "num_user", ",", "num_item", ",", "max_time_len", ")", ":", "\n", "# reset graph", "\n", "        ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "# input placeholders", "\n", "with", "tf", ".", "name_scope", "(", "'inputs'", ")", ":", "\n", "            ", "self", ".", "user_behavior_length_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "]", ",", "name", "=", "'user_behavior_length_ph'", ")", "\n", "self", ".", "target_user_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "user_fnum", "]", ",", "name", "=", "'target_user_ph'", ")", "\n", "self", ".", "user_spar_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "max_time_len", ",", "hist_spar_fnum", "]", ",", "name", "=", "'user_spar_ph'", ")", "\n", "self", ".", "user_dens_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "max_time_len", ",", "hist_dens_fnum", "]", ",", "name", "=", "'user_dens_ph'", ")", "\n", "self", ".", "item_spar_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "itm_spar_fnum", "]", ",", "name", "=", "'item_spar_ph'", ")", "\n", "self", ".", "item_dens_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "itm_dens_fnum", "]", ",", "name", "=", "'item_dens_ph'", ")", "\n", "self", ".", "label_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "]", ",", "name", "=", "'label_ph'", ")", "\n", "self", ".", "user_behavior_length_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "]", ",", "name", "=", "'user_hist_len'", ")", "\n", "\n", "# lr", "\n", "self", ".", "lr", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "# reg lambda", "\n", "self", ".", "reg_lambda", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "# keep prob", "\n", "self", ".", "keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "self", ".", "emb_dim", "=", "eb_dim", "\n", "self", ".", "itm_spar_fnum", "=", "itm_spar_fnum", "\n", "self", ".", "itm_dens_fnum", "=", "itm_dens_fnum", "\n", "self", ".", "user_fnum", "=", "user_fnum", "\n", "self", ".", "num_user", "=", "num_user", "\n", "self", ".", "num_item", "=", "num_item", "\n", "# self.ft_len = itm_spar_fnum * eb_dim + itm_dens_fnum", "\n", "self", ".", "ft_len", "=", "itm_spar_fnum", "*", "eb_dim", "\n", "\n", "\n", "# embedding", "\n", "", "with", "tf", ".", "name_scope", "(", "'embedding'", ")", ":", "\n", "            ", "self", ".", "emb_mtx", "=", "tf", ".", "get_variable", "(", "'emb_mtx'", ",", "[", "feature_size", ",", "eb_dim", "]", ",", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "self", ".", "target_item", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "emb_mtx", ",", "self", ".", "item_spar_ph", ")", "\n", "self", ".", "user_seq", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "emb_mtx", ",", "self", ".", "user_spar_ph", ")", "\n", "\n", "self", ".", "target_item", "=", "tf", ".", "reshape", "(", "self", ".", "target_item", ",", "[", "-", "1", ",", "itm_spar_fnum", "*", "eb_dim", "]", ")", "\n", "# self.target_item = tf.concat([self.target_item, self.item_dens_ph], axis=-1)", "\n", "self", ".", "user_seq", "=", "tf", ".", "reshape", "(", "self", ".", "user_seq", ",", "[", "-", "1", ",", "max_time_len", ",", "hist_spar_fnum", "*", "eb_dim", "]", ")", "\n", "# self.user_seq = tf.concat([self.user_seq, self.user_dens_ph], axis=-1)", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.BaseModel.build_fc_net": [[61, 71], ["tensorflow.layers.batch_normalization", "tensorflow.layers.dense", "tensorflow.nn.dropout", "tensorflow.layers.dense", "tensorflow.nn.dropout", "tensorflow.layers.dense", "tensorflow.nn.softmax", "tensorflow.reshape"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax"], ["", "", "def", "build_fc_net", "(", "self", ",", "inp", ")", ":", "\n", "        ", "bn1", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "inputs", "=", "inp", ",", "name", "=", "'bn1'", ")", "\n", "fc1", "=", "tf", ".", "layers", ".", "dense", "(", "bn1", ",", "200", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc1'", ")", "\n", "dp1", "=", "tf", ".", "nn", ".", "dropout", "(", "fc1", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp1'", ")", "\n", "fc2", "=", "tf", ".", "layers", ".", "dense", "(", "dp1", ",", "80", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc2'", ")", "\n", "dp2", "=", "tf", ".", "nn", ".", "dropout", "(", "fc2", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp2'", ")", "\n", "fc3", "=", "tf", ".", "layers", ".", "dense", "(", "dp2", ",", "2", ",", "activation", "=", "None", ",", "name", "=", "'fc3'", ")", "\n", "score", "=", "tf", ".", "nn", ".", "softmax", "(", "fc3", ")", "\n", "# output", "\n", "self", ".", "y_pred", "=", "tf", ".", "reshape", "(", "score", "[", ":", ",", "0", "]", ",", "[", "-", "1", ",", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.BaseModel.build_mlp_net": [[72, 81], ["enumerate", "tensorflow.layers.dense", "tensorflow.nn.softmax", "tensorflow.reshape", "tensorflow.layers.batch_normalization", "tensorflow.layers.dense", "tensorflow.nn.dropout", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax"], ["", "def", "build_mlp_net", "(", "self", ",", "inp", ",", "layer", "=", "(", "500", ",", "200", ",", "80", ")", ")", ":", "\n", "        ", "for", "i", ",", "hidden_num", "in", "enumerate", "(", "layer", ")", ":", "\n", "            ", "bn", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "inputs", "=", "inp", ",", "name", "=", "'bn'", "+", "str", "(", "i", ")", ")", "\n", "fc", "=", "tf", ".", "layers", ".", "dense", "(", "bn", ",", "hidden_num", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc'", "+", "str", "(", "i", ")", ")", "\n", "inp", "=", "tf", ".", "nn", ".", "dropout", "(", "fc", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp'", "+", "str", "(", "i", ")", ")", "\n", "", "final", "=", "tf", ".", "layers", ".", "dense", "(", "inp", ",", "2", ",", "activation", "=", "None", ",", "name", "=", "'fc_final'", ")", "\n", "score", "=", "tf", ".", "nn", ".", "softmax", "(", "final", ")", "\n", "# output", "\n", "self", ".", "y_pred", "=", "tf", ".", "reshape", "(", "score", "[", ":", ",", "0", "]", ",", "[", "-", "1", ",", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.BaseModel.build_logloss": [[82, 92], ["tensorflow.losses.log_loss", "tensorflow.trainable_variables", "tensorflow.train.AdamOptimizer", "initial_rankers.BaseModel.optimizer.minimize", "tensorflow.nn.l2_loss"], "methods", ["None"], ["", "def", "build_logloss", "(", "self", ")", ":", "\n", "# loss", "\n", "        ", "self", ".", "log_loss", "=", "tf", ".", "losses", ".", "log_loss", "(", "self", ".", "label_ph", ",", "self", ".", "y_pred", ")", "\n", "self", ".", "loss", "=", "self", ".", "log_loss", "\n", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "            ", "if", "'bias'", "not", "in", "v", ".", "name", "and", "'emb'", "not", "in", "v", ".", "name", ":", "\n", "                ", "self", ".", "loss", "+=", "self", ".", "reg_lambda", "*", "tf", ".", "nn", ".", "l2_loss", "(", "v", ")", "\n", "# optimizer and training step", "\n", "", "", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "self", ".", "lr", ")", "\n", "self", ".", "train_step", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.BaseModel.build_mseloss": [[93, 102], ["tensorflow.losses.mean_squared_error", "tensorflow.trainable_variables", "tensorflow.train.AdamOptimizer", "initial_rankers.BaseModel.optimizer.minimize", "tensorflow.nn.l2_loss"], "methods", ["None"], ["", "def", "build_mseloss", "(", "self", ")", ":", "\n", "        ", "self", ".", "loss", "=", "tf", ".", "losses", ".", "mean_squared_error", "(", "self", ".", "label_ph", ",", "self", ".", "y_pred", ")", "\n", "# regularization term", "\n", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "            ", "if", "'bias'", "not", "in", "v", ".", "name", "and", "'emb'", "not", "in", "v", ".", "name", ":", "\n", "                ", "self", ".", "loss", "+=", "self", ".", "reg_lambda", "*", "tf", ".", "nn", ".", "l2_loss", "(", "v", ")", "\n", "# optimizer and training step", "\n", "", "", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", "=", "self", ".", "lr", ")", "\n", "self", ".", "train_step", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.BaseModel.train": [[103, 117], ["sess.run", "numpy.array().reshape", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "sess", ",", "batch_data", ",", "lr", ",", "reg_lambda", ")", ":", "\n", "        ", "loss", ",", "_", "=", "sess", ".", "run", "(", "[", "self", ".", "loss", ",", "self", ".", "train_step", "]", ",", "feed_dict", "=", "{", "\n", "self", ".", "target_user_ph", ":", "np", ".", "array", "(", "batch_data", "[", "0", "]", ")", ".", "reshape", "(", "-", "1", ",", "self", ".", "user_fnum", ")", ",", "\n", "self", ".", "item_spar_ph", ":", "np", ".", "array", "(", "batch_data", "[", "1", "]", ")", ",", "\n", "self", ".", "item_dens_ph", ":", "np", ".", "array", "(", "batch_data", "[", "2", "]", ")", ",", "\n", "self", ".", "user_spar_ph", ":", "np", ".", "array", "(", "batch_data", "[", "3", "]", ")", ",", "\n", "self", ".", "user_dens_ph", ":", "np", ".", "array", "(", "batch_data", "[", "4", "]", ")", ",", "\n", "self", ".", "label_ph", ":", "np", ".", "array", "(", "batch_data", "[", "5", "]", ")", ",", "\n", "self", ".", "user_behavior_length_ph", ":", "np", ".", "array", "(", "batch_data", "[", "-", "1", "]", ")", ",", "\n", "self", ".", "lr", ":", "lr", ",", "\n", "self", ".", "reg_lambda", ":", "reg_lambda", ",", "\n", "self", ".", "keep_prob", ":", "0.8", ",", "\n", "}", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.BaseModel.eval": [[118, 132], ["sess.run", "pred.tolist", "label.tolist", "numpy.array().reshape", "numpy.array"], "methods", ["None"], ["", "def", "eval", "(", "self", ",", "sess", ",", "batch_data", ",", "reg_lambda", ")", ":", "\n", "\n", "        ", "pred", ",", "label", ",", "loss", "=", "sess", ".", "run", "(", "[", "self", ".", "y_pred", ",", "self", ".", "label_ph", ",", "self", ".", "loss", "]", ",", "feed_dict", "=", "{", "\n", "self", ".", "target_user_ph", ":", "np", ".", "array", "(", "batch_data", "[", "0", "]", ")", ".", "reshape", "(", "-", "1", ",", "self", ".", "user_fnum", ")", ",", "\n", "self", ".", "item_spar_ph", ":", "batch_data", "[", "1", "]", ",", "\n", "self", ".", "item_dens_ph", ":", "batch_data", "[", "2", "]", ",", "\n", "self", ".", "user_spar_ph", ":", "batch_data", "[", "3", "]", ",", "\n", "self", ".", "user_dens_ph", ":", "batch_data", "[", "4", "]", ",", "\n", "self", ".", "label_ph", ":", "batch_data", "[", "5", "]", ",", "\n", "self", ".", "user_behavior_length_ph", ":", "batch_data", "[", "-", "1", "]", ",", "\n", "self", ".", "reg_lambda", ":", "reg_lambda", ",", "\n", "self", ".", "keep_prob", ":", "1.", "\n", "}", ")", "\n", "return", "pred", ".", "tolist", "(", ")", ",", "label", ".", "tolist", "(", ")", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.BaseModel.save": [[133, 136], ["tensorflow.train.Saver", "tensorflow.train.Saver.save"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.save"], ["", "def", "save", "(", "self", ",", "sess", ",", "path", ")", ":", "\n", "        ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "save", "(", "sess", ",", "save_path", "=", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.BaseModel.save_pretrain": [[137, 141], ["sess.run", "open", "pickle.dump"], "methods", ["None"], ["", "def", "save_pretrain", "(", "self", ",", "sess", ",", "path", ")", ":", "\n", "        ", "embed", "=", "sess", ".", "run", "(", "self", ".", "emb_mtx", ")", "\n", "with", "open", "(", "path", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pkl", ".", "dump", "(", "embed", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.DIN.__init__": [[144, 156], ["initial_rankers.BaseModel.__init__", "tensorflow.sequence_mask", "initial_rankers.DIN.attention", "tensorflow.concat", "initial_rankers.DIN.build_mlp_net", "initial_rankers.DIN.build_logloss"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.MIR.__init__", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.DIN.attention", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_mlp_net", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_logloss"], ["    ", "def", "__init__", "(", "self", ",", "eb_dim", ",", "feature_size", ",", "itm_spar_fnum", ",", "itm_dens_fnum", ",", "hist_spar_fnum", ",", "hist_dens_fnum", ",", "\n", "user_fnum", ",", "num_user", ",", "num_item", ",", "max_time_len", ")", ":", "\n", "        ", "super", "(", "DIN", ",", "self", ")", ".", "__init__", "(", "eb_dim", ",", "feature_size", ",", "itm_spar_fnum", ",", "itm_dens_fnum", ",", "hist_spar_fnum", ",", "hist_dens_fnum", ",", "\n", "user_fnum", ",", "num_user", ",", "num_item", ",", "max_time_len", ")", "\n", "mask", "=", "tf", ".", "sequence_mask", "(", "self", ".", "user_behavior_length_ph", ",", "max_time_len", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "_", ",", "user_behavior_rep", "=", "self", ".", "attention", "(", "self", ".", "user_seq", ",", "self", ".", "user_seq", ",", "self", ".", "target_item", ",", "mask", ")", "\n", "\n", "inp", "=", "tf", ".", "concat", "(", "[", "user_behavior_rep", ",", "self", ".", "target_item", "]", ",", "axis", "=", "1", ")", "\n", "\n", "# fc layer", "\n", "self", ".", "build_mlp_net", "(", "inp", ",", "[", "1024", ",", "512", ",", "256", ",", "64", "]", ")", "\n", "self", ".", "build_logloss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.DIN.attention": [[157, 172], ["key.get_shape().as_list", "tensorflow.layers.dense", "tensorflow.tile", "tensorflow.reduce_sum", "tensorflow.equal", "tensorflow.nn.softmax", "tensorflow.expand_dims", "tensorflow.reduce_sum", "tensorflow.expand_dims", "tensorflow.ones_like", "tensorflow.ones_like", "tensorflow.where", "key.get_shape"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax"], ["", "def", "attention", "(", "self", ",", "key", ",", "value", ",", "query", ",", "mask", ")", ":", "\n", "# key: [B, T, Dk], query: [B, Dq], mask: [B, T]", "\n", "        ", "_", ",", "max_len", ",", "k_dim", "=", "key", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "query", "=", "tf", ".", "layers", ".", "dense", "(", "query", ",", "k_dim", ",", "activation", "=", "None", ")", "\n", "queries", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "query", ",", "1", ")", ",", "[", "1", ",", "max_len", ",", "1", "]", ")", "# [B, T, Dk]", "\n", "kq_inter", "=", "queries", "*", "key", "\n", "atten", "=", "tf", ".", "reduce_sum", "(", "kq_inter", ",", "axis", "=", "2", ")", "\n", "\n", "mask", "=", "tf", ".", "equal", "(", "mask", ",", "tf", ".", "ones_like", "(", "mask", ")", ")", "# [B, T]", "\n", "paddings", "=", "tf", ".", "ones_like", "(", "atten", ")", "*", "(", "-", "2", "**", "32", "+", "1", ")", "\n", "atten", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "where", "(", "mask", ",", "atten", ",", "paddings", ")", ")", "# [B, T]", "\n", "atten", "=", "tf", ".", "expand_dims", "(", "atten", ",", "2", ")", "\n", "\n", "res", "=", "tf", ".", "reduce_sum", "(", "atten", "*", "value", ",", "axis", "=", "1", ")", "\n", "return", "atten", ",", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.DNN.__init__": [[175, 186], ["initial_rankers.BaseModel.__init__", "initial_rankers.DNN.build_mlp_net", "initial_rankers.DNN.build_logloss"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.MIR.__init__", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_mlp_net", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_logloss"], ["    ", "def", "__init__", "(", "self", ",", "eb_dim", ",", "feature_size", ",", "itm_spar_fnum", ",", "itm_dens_fnum", ",", "hist_spar_fnum", ",", "hist_dens_fnum", ",", "\n", "user_fnum", ",", "num_user", ",", "num_item", ",", "max_time_len", ")", ":", "\n", "        ", "super", "(", "DNN", ",", "self", ")", ".", "__init__", "(", "eb_dim", ",", "feature_size", ",", "itm_spar_fnum", ",", "itm_dens_fnum", ",", "hist_spar_fnum", ",", "hist_dens_fnum", ",", "\n", "user_fnum", ",", "num_user", ",", "num_item", ",", "max_time_len", ")", "\n", "\n", "# inp = tf.concat([tf.reshape(self.user_seq, [-1, (itm_spar_fnum * eb_dim + itm_dens_fnum) * max_time_len]), self.target_item], axis=1)", "\n", "inp", "=", "self", ".", "target_item", "\n", "# fc layer", "\n", "# self.build_fc_net(inp)", "\n", "self", ".", "build_mlp_net", "(", "inp", ")", "\n", "self", ".", "build_logloss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.__init__": [[294, 318], ["numpy.array", "ValueError"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "training_data", "=", "None", ",", "number_of_trees", "=", "5", ",", "learning_rate", "=", "0.1", ",", "tree_type", "=", "'sklearn'", ")", ":", "\n", "        ", "\"\"\"\n        This is the constructor for the LambdaMART object.\n        Parameters\n        ----------\n        training_data : list of int\n            Contain a list of numbers\n        number_of_trees : int (default: 5)\n            Number of trees LambdaMART goes through\n        learning_rate : float (default: 0.1)\n            Rate at which we update our prediction with each tree\n        tree_type : string (default: \"sklearn\")\n            Either \"sklearn\" for using Sklearn implementation of the tree of \"original\"\n            for using our implementation\n        \"\"\"", "\n", "\n", "if", "tree_type", "!=", "'sklearn'", "and", "tree_type", "!=", "'lgb'", ":", "\n", "            ", "raise", "ValueError", "(", "'The \"tree_type\" must be \"sklearn\" or \"lgb\"'", ")", "\n", "", "self", ".", "training_data", "=", "np", ".", "array", "(", "training_data", ")", "\n", "# self.test_data = test_data", "\n", "self", ".", "number_of_trees", "=", "number_of_trees", "\n", "self", ".", "learning_rate", "=", "learning_rate", "\n", "self", ".", "trees", "=", "[", "]", "\n", "self", ".", "tree_type", "=", "tree_type", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.fit": [[319, 369], ["numpy.zeros", "initial_rankers.group_queries", "list", "range", "group_queries.keys", "initial_rankers.ideal_dcg", "print", "numpy.zeros", "numpy.zeros", "initial_rankers.get_pairs", "multiprocessing.Pool", "multiprocessing.Pool.map", "multiprocessing.Pool.close", "len", "len", "zip", "sklearn.tree.DecisionTreeRegressor", "sklearn.tree.DecisionTreeRegressor.fit", "initial_rankers.LambdaMART.trees.append", "sklearn.tree.DecisionTreeRegressor.predict", "lightgbm.LGBMRegressor", "lightgbm.LGBMRegressor.fit", "initial_rankers.LambdaMART.trees.append", "lightgbm.LGBMRegressor.predict"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.group_queries", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.ideal_dcg", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.get_pairs", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.fit", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.predict", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.fit", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.predict"], ["", "def", "fit", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Fits the model on the training data.\n        \"\"\"", "\n", "# self.test_data = test_dataset", "\n", "predicted_scores", "=", "np", ".", "zeros", "(", "self", ".", "training_data", ".", "shape", "[", "0", "]", ")", "\n", "\n", "query_indexes", "=", "group_queries", "(", "self", ".", "training_data", ",", "1", ")", "\n", "# test_query_indexes = group_queries(self.test_data, 1)", "\n", "query_keys", "=", "list", "(", "query_indexes", ".", "keys", "(", ")", ")", "\n", "# test_query_key = list(test_query_indexes.keys())", "\n", "true_scores", "=", "[", "self", ".", "training_data", "[", "query_indexes", "[", "query", "]", ",", "0", "]", "for", "query", "in", "query_keys", "]", "\n", "# exam = [train_exam[query_indexes[query]] for query in query_keys]", "\n", "\n", "# tree_data = pd.DataFrame(self.training_data[:, 3:])", "\n", "# labels = self.training_data[:, 0]", "\n", "\n", "# ideal dcg calculation", "\n", "idcg", "=", "[", "ideal_dcg", "(", "scores", ")", "for", "scores", "in", "true_scores", "]", "\n", "\n", "for", "k", "in", "range", "(", "self", ".", "number_of_trees", ")", ":", "\n", "            ", "print", "(", "'Tree %d'", "%", "(", "k", ")", ")", "\n", "lambdas", "=", "np", ".", "zeros", "(", "len", "(", "predicted_scores", ")", ")", "\n", "w", "=", "np", ".", "zeros", "(", "len", "(", "predicted_scores", ")", ")", "\n", "pred_scores", "=", "[", "predicted_scores", "[", "query_indexes", "[", "query", "]", "]", "for", "query", "in", "query_keys", "]", "\n", "good_ij_pairs", "=", "get_pairs", "(", "true_scores", ",", "pred_scores", ")", "\n", "\n", "pool", "=", "Pool", "(", ")", "\n", "for", "lambda_val", ",", "w_val", ",", "query_key", "in", "pool", ".", "map", "(", "compute_lambda", ",", "\n", "zip", "(", "true_scores", ",", "pred_scores", ",", "good_ij_pairs", ",", "idcg", ",", "\n", "query_keys", ")", ",", "chunksize", "=", "1", ")", ":", "\n", "                ", "indexes", "=", "query_indexes", "[", "query_key", "]", "\n", "lambdas", "[", "indexes", "]", "=", "lambda_val", "\n", "w", "[", "indexes", "]", "=", "w_val", "\n", "", "pool", ".", "close", "(", ")", "\n", "\n", "if", "self", ".", "tree_type", "==", "'sklearn'", ":", "\n", "# Sklearn implementation of the tree", "\n", "                ", "tree", "=", "DecisionTreeRegressor", "(", "splitter", "=", "\"random\"", ")", "\n", "tree", ".", "fit", "(", "self", ".", "training_data", "[", ":", ",", "2", ":", "]", ",", "lambdas", ")", "\n", "self", ".", "trees", ".", "append", "(", "tree", ")", "\n", "prediction", "=", "tree", ".", "predict", "(", "self", ".", "training_data", "[", ":", ",", "2", ":", "]", ")", "\n", "predicted_scores", "+=", "prediction", "*", "self", ".", "learning_rate", "\n", "\n", "", "elif", "self", ".", "tree_type", "==", "'lgb'", ":", "\n", "                ", "gbm", "=", "lgb", ".", "LGBMRegressor", "(", "objective", "=", "'regression'", ",", "num_leaves", "=", "31", ",", "learning_rate", "=", "0.1", ",", "n_estimators", "=", "10", ")", "\n", "gbm", ".", "fit", "(", "self", ".", "training_data", "[", ":", ",", "2", ":", "]", ",", "lambdas", ")", "\n", "self", ".", "trees", ".", "append", "(", "gbm", ")", "\n", "prediction", "=", "gbm", ".", "predict", "(", "self", ".", "training_data", "[", ":", ",", "2", ":", "]", ")", "\n", "predicted_scores", "+=", "prediction", "*", "self", ".", "learning_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.predict": [[370, 392], ["numpy.array", "initial_rankers.group_queries", "numpy.zeros", "len", "numpy.zeros", "len", "tree.predict"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.group_queries", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.predict"], ["", "", "", "def", "predict", "(", "self", ",", "test_dataset", ")", ":", "\n", "        ", "\"\"\"\n        Predicts the scores for the test dataset.\n        Parameters\n        ----------\n        data : Numpy array of documents\n            Numpy array of documents with each document's format is [query index, feature vector]\n\n        Returns\n        -------\n        predicted_scores : Numpy array of scores\n            This contains an array or the predicted scores for the documents.\n        \"\"\"", "\n", "data", "=", "np", ".", "array", "(", "test_dataset", ")", "\n", "query_indexes", "=", "group_queries", "(", "data", ",", "1", ")", "\n", "predicted_scores", "=", "np", ".", "zeros", "(", "len", "(", "data", ")", ")", "\n", "for", "query", "in", "query_indexes", ":", "\n", "            ", "results", "=", "np", ".", "zeros", "(", "len", "(", "query_indexes", "[", "query", "]", ")", ")", "\n", "for", "tree", "in", "self", ".", "trees", ":", "\n", "                ", "results", "+=", "self", ".", "learning_rate", "*", "tree", ".", "predict", "(", "data", "[", "query_indexes", "[", "query", "]", ",", "2", ":", "]", ")", "\n", "", "predicted_scores", "[", "query_indexes", "[", "query", "]", "]", "=", "results", "\n", "", "return", "predicted_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.save": [[393, 403], ["pickle.dump", "open"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "fname", ")", ":", "\n", "        ", "\"\"\"\n        Saves the model into a \".lmart\" file with the name given as a parameter.\n        Parameters\n        ----------\n        fname : string\n            Filename of the file you want to save\n\n        \"\"\"", "\n", "pkl", ".", "dump", "(", "self", ",", "open", "(", "'%s.lmart'", "%", "(", "fname", ")", ",", "\"wb\"", ")", ",", "protocol", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.load": [[404, 419], ["pickle.load", "open"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.load"], ["", "def", "load", "(", "self", ",", "fname", ")", ":", "\n", "        ", "\"\"\"\n        Loads the model from the \".lmart\" file given as a parameter.\n        Parameters\n        ----------\n        fname : string\n            Filename of the file you want to load\n\n        \"\"\"", "\n", "model", "=", "pkl", ".", "load", "(", "open", "(", "fname", ",", "\"rb\"", ")", ")", "\n", "self", ".", "training_data", "=", "model", ".", "training_data", "\n", "self", ".", "number_of_trees", "=", "model", ".", "number_of_trees", "\n", "self", ".", "tree_type", "=", "model", ".", "tree_type", "\n", "self", ".", "learning_rate", "=", "model", ".", "learning_rate", "\n", "self", ".", "trees", "=", "model", ".", "trees", "", "", "", ""]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.dcg": [[188, 190], ["numpy.sum", "numpy.log2", "range", "numpy.power", "len"], "function", ["None"], ["", "", "def", "dcg", "(", "scores", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "[", "(", "np", ".", "power", "(", "2", ",", "scores", "[", "i", "]", ")", "-", "1", ")", "/", "np", ".", "log2", "(", "i", "+", "2", ")", "for", "i", "in", "range", "(", "len", "(", "scores", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.dcg_k": [[192, 194], ["numpy.sum", "numpy.log2", "range", "numpy.power", "len"], "function", ["None"], ["", "def", "dcg_k", "(", "scores", ",", "k", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "[", "(", "np", ".", "power", "(", "2", ",", "scores", "[", "i", "]", ")", "-", "1", ")", "/", "np", ".", "log2", "(", "i", "+", "2", ")", "for", "i", "in", "range", "(", "len", "(", "scores", "[", ":", "k", "]", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.ideal_dcg": [[196, 199], ["initial_rankers.dcg", "sorted"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.dcg"], ["", "def", "ideal_dcg", "(", "scores", ")", ":", "\n", "    ", "scores", "=", "[", "score", "for", "score", "in", "sorted", "(", "scores", ")", "[", ":", ":", "-", "1", "]", "]", "\n", "return", "dcg", "(", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.ideal_dcg_k": [[201, 204], ["initial_rankers.dcg_k", "sorted"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.dcg_k"], ["", "def", "ideal_dcg_k", "(", "scores", ",", "k", ")", ":", "\n", "    ", "scores", "=", "[", "score", "for", "score", "in", "sorted", "(", "scores", ")", "[", ":", ":", "-", "1", "]", "]", "\n", "return", "dcg_k", "(", "scores", ",", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.single_dcg": [[206, 208], ["numpy.log2", "numpy.power"], "function", ["None"], ["", "def", "single_dcg", "(", "scores", ",", "i", ",", "j", ")", ":", "\n", "    ", "return", "(", "np", ".", "power", "(", "2", ",", "scores", "[", "i", "]", ")", "-", "1", ")", "/", "np", ".", "log2", "(", "j", "+", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.compute_lambda": [[210, 266], ["len", "numpy.argsort", "numpy.argsort", "numpy.zeros", "numpy.zeros", "initial_rankers.single_dcg", "initial_rankers.single_dcg", "initial_rankers.single_dcg", "initial_rankers.single_dcg", "abs", "numpy.exp"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.single_dcg", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.single_dcg", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.single_dcg", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.single_dcg"], ["", "def", "compute_lambda", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n        Returns the lambda and w values for a given query.\n        Parameters\n        ----------\n        args : zipped value of true_scores, predicted_scores, good_ij_pairs, idcg, query_key\n            Contains a list of the true labels of documents, list of the predicted labels of documents,\n            i and j pairs where true_score[i] > true_score[j], idcg values, and query keys.\n\n        Returns\n        -------\n        lambdas : numpy array\n            This contains the calculated lambda values\n        w : numpy array\n            This contains the computed w values\n        query_key : int\n            This is the query id these values refer to\n    \"\"\"", "\n", "\n", "true_scores", ",", "predicted_scores", ",", "good_ij_pairs", ",", "idcg", ",", "query_key", "=", "args", "\n", "\n", "num_docs", "=", "len", "(", "true_scores", ")", "\n", "sorted_indexes", "=", "np", ".", "argsort", "(", "-", "predicted_scores", ")", "\n", "rev_indexes", "=", "np", ".", "argsort", "(", "sorted_indexes", ")", "\n", "true_scores", "=", "true_scores", "[", "sorted_indexes", "]", "\n", "predicted_scores", "=", "predicted_scores", "[", "sorted_indexes", "]", "\n", "\n", "lambdas", "=", "np", ".", "zeros", "(", "num_docs", ")", "\n", "w", "=", "np", ".", "zeros", "(", "num_docs", ")", "\n", "\n", "# print(\"compute dcg----------------------------------\")", "\n", "single_dcgs", "=", "{", "}", "\n", "for", "i", ",", "j", "in", "good_ij_pairs", ":", "\n", "        ", "if", "(", "i", ",", "i", ")", "not", "in", "single_dcgs", ":", "\n", "            ", "single_dcgs", "[", "(", "i", ",", "i", ")", "]", "=", "single_dcg", "(", "true_scores", ",", "i", ",", "i", ")", "\n", "", "single_dcgs", "[", "(", "i", ",", "j", ")", "]", "=", "single_dcg", "(", "true_scores", ",", "i", ",", "j", ")", "\n", "if", "(", "j", ",", "j", ")", "not", "in", "single_dcgs", ":", "\n", "            ", "single_dcgs", "[", "(", "j", ",", "j", ")", "]", "=", "single_dcg", "(", "true_scores", ",", "j", ",", "j", ")", "\n", "", "single_dcgs", "[", "(", "j", ",", "i", ")", "]", "=", "single_dcg", "(", "true_scores", ",", "j", ",", "i", ")", "\n", "\n", "# print(\"______________________________________________\")", "\n", "\n", "", "for", "i", ",", "j", "in", "good_ij_pairs", ":", "\n", "        ", "z_ndcg", "=", "abs", "(", "\n", "single_dcgs", "[", "(", "i", ",", "j", ")", "]", "-", "single_dcgs", "[", "(", "i", ",", "i", ")", "]", "+", "single_dcgs", "[", "(", "j", ",", "i", ")", "]", "-", "single_dcgs", "[", "(", "j", ",", "j", ")", "]", ")", "/", "idcg", "\n", "rho", "=", "1", "/", "(", "1", "+", "np", ".", "exp", "(", "predicted_scores", "[", "i", "]", "-", "predicted_scores", "[", "j", "]", ")", ")", "\n", "rho_complement", "=", "1.0", "-", "rho", "\n", "lambda_val", "=", "z_ndcg", "*", "rho", "\n", "lambdas", "[", "i", "]", "+=", "lambda_val", "\n", "lambdas", "[", "j", "]", "-=", "lambda_val", "\n", "\n", "w_val", "=", "rho", "*", "rho_complement", "*", "z_ndcg", "\n", "w", "[", "i", "]", "+=", "w_val", "\n", "w", "[", "j", "]", "+=", "w_val", "\n", "\n", "", "return", "lambdas", "[", "rev_indexes", "]", ",", "w", "[", "rev_indexes", "]", ",", "query_key", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.group_queries": [[268, 276], ["query_indexes.setdefault", "query_indexes[].append"], "function", ["None"], ["", "def", "group_queries", "(", "training_data", ",", "qid_index", ")", ":", "\n", "    ", "query_indexes", "=", "{", "}", "\n", "index", "=", "0", "\n", "for", "record", "in", "training_data", ":", "\n", "        ", "query_indexes", ".", "setdefault", "(", "record", "[", "qid_index", "]", ",", "[", "]", ")", "\n", "query_indexes", "[", "record", "[", "qid_index", "]", "]", ".", "append", "(", "index", ")", "\n", "index", "+=", "1", "\n", "", "return", "query_indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.get_pairs": [[278, 290], ["enumerate", "numpy.argsort", "[].tolist", "range", "query_pair.append", "len", "range", "numpy.array", "len", "numpy.array", "pairs.append"], "function", ["None"], ["", "def", "get_pairs", "(", "true_scores", ",", "pred_scores", ")", ":", "\n", "    ", "query_pair", "=", "[", "]", "\n", "for", "i", ",", "query_scores", "in", "enumerate", "(", "pred_scores", ")", ":", "\n", "        ", "sorted_indexes", "=", "np", ".", "argsort", "(", "-", "np", ".", "array", "(", "query_scores", ")", ")", "\n", "temp", "=", "np", ".", "array", "(", "true_scores", "[", "i", "]", ")", "[", "sorted_indexes", "]", ".", "tolist", "(", ")", "\n", "pairs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "temp", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "temp", ")", ")", ":", "\n", "                ", "if", "temp", "[", "i", "]", ">", "temp", "[", "j", "]", ":", "\n", "                    ", "pairs", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "", "", "", "query_pair", ".", "append", "(", "pairs", ")", "\n", "", "return", "query_pair", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.__init__": [[21, 69], ["tensorflow.reset_default_graph", "tensorflow.name_scope", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.name_scope", "tensorflow.get_variable", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.concat", "tensorflow.reshape"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", ",", "eb_dim", ",", "hidden_size", ",", "max_time_len", ",", "max_seq_len", ",", "itm_spar_num", ",", "itm_dens_num", ",", "\n", "hist_spar_num", ",", "hist_dens_num", ",", "profile_num", ",", "max_norm", "=", "None", ")", ":", "\n", "# reset graph", "\n", "        ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "# input placeholders", "\n", "with", "tf", ".", "name_scope", "(", "'inputs'", ")", ":", "\n", "            ", "self", ".", "itm_spar_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "max_time_len", ",", "itm_spar_num", "]", ",", "name", "=", "'item_spar'", ")", "\n", "self", ".", "itm_dens_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "max_time_len", ",", "itm_dens_num", "]", ",", "name", "=", "'item_dens'", ")", "\n", "self", ".", "usr_profile", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "profile_num", "]", ",", "name", "=", "'usr_profile'", ")", "\n", "self", ".", "usr_spar_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "max_seq_len", ",", "hist_spar_num", "]", ",", "name", "=", "'user_spar'", ")", "\n", "self", ".", "usr_dens_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "max_seq_len", ",", "hist_dens_num", "]", ",", "name", "=", "'user_dens'", ")", "\n", "self", ".", "seq_length_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "]", ",", "name", "=", "'seq_length_ph'", ")", "\n", "self", ".", "hist_length_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "]", ",", "name", "=", "'hist_length_ph'", ")", "\n", "self", ".", "label_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "max_time_len", "]", ",", "name", "=", "'label_ph'", ")", "\n", "self", ".", "time_ph", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "max_seq_len", "]", ",", "name", "=", "'time_ph'", ")", "\n", "self", ".", "is_train", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ",", "[", "]", ",", "name", "=", "'is_train'", ")", "\n", "\n", "\n", "# lr", "\n", "self", ".", "lr", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "# reg lambda", "\n", "self", ".", "reg_lambda", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "# keep prob", "\n", "self", ".", "keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "]", ")", "\n", "self", ".", "max_time_len", "=", "max_time_len", "\n", "self", ".", "max_seq_len", "=", "max_seq_len", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "emb_dim", "=", "eb_dim", "\n", "self", ".", "itm_spar_num", "=", "itm_spar_num", "\n", "self", ".", "itm_dens_num", "=", "itm_dens_num", "\n", "self", ".", "hist_spar_num", "=", "hist_spar_num", "\n", "self", ".", "hist_dens_num", "=", "hist_dens_num", "\n", "self", ".", "profile_num", "=", "profile_num", "\n", "self", ".", "max_grad_norm", "=", "max_norm", "\n", "self", ".", "ft_num", "=", "itm_spar_num", "*", "eb_dim", "+", "itm_dens_num", "\n", "self", ".", "feature_size", "=", "feature_size", "\n", "\n", "# embedding", "\n", "", "with", "tf", ".", "name_scope", "(", "'embedding'", ")", ":", "\n", "            ", "self", ".", "emb_mtx", "=", "tf", ".", "get_variable", "(", "'emb_mtx'", ",", "[", "feature_size", "+", "1", ",", "eb_dim", "]", ",", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "self", ".", "itm_spar_emb", "=", "tf", ".", "gather", "(", "self", ".", "emb_mtx", ",", "self", ".", "itm_spar_ph", ")", "\n", "self", ".", "usr_spar_emb", "=", "tf", ".", "gather", "(", "self", ".", "emb_mtx", ",", "self", ".", "usr_spar_ph", ")", "\n", "self", ".", "usr_prof_emb", "=", "tf", ".", "gather", "(", "self", ".", "emb_mtx", ",", "self", ".", "usr_profile", ")", "\n", "\n", "self", ".", "item_seq", "=", "tf", ".", "concat", "(", "\n", "[", "tf", ".", "reshape", "(", "self", ".", "itm_spar_emb", ",", "[", "-", "1", ",", "max_time_len", ",", "itm_spar_num", "*", "eb_dim", "]", ")", ",", "self", ".", "itm_dens_ph", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_fc_net": [[70, 84], ["tensorflow.variable_scope", "tensorflow.layers.batch_normalization", "tensorflow.layers.dense", "tensorflow.nn.dropout", "tensorflow.layers.dense", "tensorflow.nn.dropout", "tensorflow.layers.dense", "tensorflow.nn.softmax", "tensorflow.reshape", "tensorflow.sequence_mask"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax"], ["", "", "def", "build_fc_net", "(", "self", ",", "inp", ",", "scope", "=", "'fc'", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "            ", "bn1", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "inputs", "=", "inp", ",", "name", "=", "'bn1'", ")", "\n", "fc1", "=", "tf", ".", "layers", ".", "dense", "(", "bn1", ",", "200", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc1'", ")", "\n", "dp1", "=", "tf", ".", "nn", ".", "dropout", "(", "fc1", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp1'", ")", "\n", "fc2", "=", "tf", ".", "layers", ".", "dense", "(", "dp1", ",", "80", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc2'", ")", "\n", "dp2", "=", "tf", ".", "nn", ".", "dropout", "(", "fc2", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp2'", ")", "\n", "fc3", "=", "tf", ".", "layers", ".", "dense", "(", "dp2", ",", "2", ",", "activation", "=", "None", ",", "name", "=", "'fc3'", ")", "\n", "score", "=", "tf", ".", "nn", ".", "softmax", "(", "fc3", ")", "\n", "score", "=", "tf", ".", "reshape", "(", "score", "[", ":", ",", ":", ",", "0", "]", ",", "[", "-", "1", ",", "self", ".", "max_time_len", "]", ")", "\n", "# output", "\n", "seq_mask", "=", "tf", ".", "sequence_mask", "(", "self", ".", "seq_length_ph", ",", "maxlen", "=", "self", ".", "max_time_len", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "y_pred", "=", "seq_mask", "*", "score", "\n", "", "return", "y_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_mlp_net": [[85, 97], ["tensorflow.variable_scope", "tensorflow.layers.batch_normalization", "enumerate", "tensorflow.layers.dense", "tensorflow.nn.softmax", "tensorflow.reshape", "tensorflow.sequence_mask", "tensorflow.layers.dense", "tensorflow.nn.dropout", "str", "str"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax"], ["", "def", "build_mlp_net", "(", "self", ",", "inp", ",", "layer", "=", "(", "500", ",", "200", ",", "80", ")", ",", "scope", "=", "'mlp'", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "            ", "inp", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "inputs", "=", "inp", ",", "name", "=", "'mlp_bn'", ")", "\n", "for", "i", ",", "hidden_num", "in", "enumerate", "(", "layer", ")", ":", "\n", "                ", "fc", "=", "tf", ".", "layers", ".", "dense", "(", "inp", ",", "hidden_num", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc'", "+", "str", "(", "i", ")", ")", "\n", "inp", "=", "tf", ".", "nn", ".", "dropout", "(", "fc", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp'", "+", "str", "(", "i", ")", ")", "\n", "", "final", "=", "tf", ".", "layers", ".", "dense", "(", "inp", ",", "2", ",", "activation", "=", "None", ",", "name", "=", "'fc_final'", ")", "\n", "score", "=", "tf", ".", "nn", ".", "softmax", "(", "final", ")", "\n", "score", "=", "tf", ".", "reshape", "(", "score", "[", ":", ",", ":", ",", "0", "]", ",", "[", "-", "1", ",", "self", ".", "max_time_len", "]", ")", "\n", "seq_mask", "=", "tf", ".", "sequence_mask", "(", "self", ".", "seq_length_ph", ",", "maxlen", "=", "self", ".", "max_time_len", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "y_pred", "=", "seq_mask", "*", "score", "\n", "", "return", "y_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_logloss": [[98, 102], ["tensorflow.losses.log_loss", "model.BaseModel.opt"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.opt"], ["", "def", "build_logloss", "(", "self", ",", "y_pred", ")", ":", "\n", "# loss", "\n", "        ", "self", ".", "loss", "=", "tf", ".", "losses", ".", "log_loss", "(", "self", ".", "label_ph", ",", "y_pred", ")", "\n", "self", ".", "opt", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_mseloss": [[103, 106], ["tensorflow.losses.mean_squared_error", "model.BaseModel.opt"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.opt"], ["", "def", "build_mseloss", "(", "self", ",", "y_pred", ")", ":", "\n", "        ", "self", ".", "loss", "=", "tf", ".", "losses", ".", "mean_squared_error", "(", "self", ".", "label_ph", ",", "y_pred", ")", "\n", "self", ".", "opt", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_attention_loss": [[107, 114], ["model.attention_score", "model.attention_score", "tensorflow.losses.log_loss", "model.BaseModel.opt"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.attention_score", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.attention_score", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.opt"], ["", "def", "build_attention_loss", "(", "self", ",", "y_pred", ")", ":", "\n", "        ", "self", ".", "label_wt", "=", "attention_score", "(", "self", ".", "label_ph", ")", "\n", "self", ".", "pred_wt", "=", "attention_score", "(", "y_pred", ")", "\n", "# self.pred_wt = y_pred", "\n", "self", ".", "loss", "=", "tf", ".", "losses", ".", "log_loss", "(", "self", ".", "label_wt", ",", "self", ".", "pred_wt", ")", "\n", "# self.loss = tf.losses.mean_squared_error(self.label_wt, self.pred_wt)", "\n", "self", ".", "opt", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.opt": [[115, 135], ["tensorflow.trainable_variables", "tensorflow.train.AdamOptimizer", "model.BaseModel.optimizer.compute_gradients", "enumerate", "model.BaseModel.optimizer.apply_gradients", "model.BaseModel.optimizer.minimize", "tensorflow.nn.l2_loss", "tensorflow.clip_by_norm"], "methods", ["None"], ["", "def", "opt", "(", "self", ")", ":", "\n", "        ", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", ":", "\n", "            ", "if", "'bias'", "not", "in", "v", ".", "name", "and", "'emb'", "not", "in", "v", ".", "name", ":", "\n", "                ", "self", ".", "loss", "+=", "self", ".", "reg_lambda", "*", "tf", ".", "nn", ".", "l2_loss", "(", "v", ")", "\n", "# self.loss += self.reg_lambda * tf.norm(v, ord=1)", "\n", "\n", "# self.lr = tf.train.exponential_decay(", "\n", "#     self.lr_start, self.global_step, self.lr_decay_step,", "\n", "#     self.lr_decay_rate, staircase=True, name=\"learning_rate\")", "\n", "\n", "", "", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr", ")", "\n", "\n", "if", "self", ".", "max_grad_norm", "is", "not", "None", ":", "\n", "            ", "grads_and_vars", "=", "self", ".", "optimizer", ".", "compute_gradients", "(", "self", ".", "loss", ")", "\n", "for", "idx", ",", "(", "grad", ",", "var", ")", "in", "enumerate", "(", "grads_and_vars", ")", ":", "\n", "                ", "if", "grad", "is", "not", "None", ":", "\n", "                    ", "grads_and_vars", "[", "idx", "]", "=", "(", "tf", ".", "clip_by_norm", "(", "grad", ",", "self", ".", "max_grad_norm", ")", ",", "var", ")", "\n", "", "", "self", ".", "train_step", "=", "self", ".", "optimizer", ".", "apply_gradients", "(", "grads_and_vars", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "train_step", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.multihead_attention": [[136, 175], ["tensorflow.variable_scope", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.matmul", "tensorflow.sign", "tensorflow.tile", "tensorflow.tile", "tensorflow.where", "tensorflow.nn.softmax", "tensorflow.sign", "tensorflow.tile", "tensorflow.tile", "tensorflow.nn.dropout", "tensorflow.matmul", "tensorflow.concat", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.transpose", "tensorflow.abs", "tensorflow.expand_dims", "tensorflow.ones_like", "tensorflow.equal", "tensorflow.abs", "tensorflow.expand_dims", "tensorflow.split", "queries.get_shape().as_list", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.concat.get_shape().as_list", "tensorflow.shape", "tensorflow.shape", "queries.get_shape", "tensorflow.concat.get_shape"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax"], ["", "", "def", "multihead_attention", "(", "self", ",", "\n", "queries", ",", "\n", "keys", ",", "\n", "num_units", "=", "None", ",", "\n", "num_heads", "=", "2", ",", "\n", "scope", "=", "\"multihead_attention\"", ",", "\n", "reuse", "=", "None", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "scope", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "if", "num_units", "is", "None", ":", "\n", "                ", "num_units", "=", "queries", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "-", "1", "]", "\n", "\n", "", "Q", "=", "tf", ".", "layers", ".", "dense", "(", "queries", ",", "num_units", ",", "activation", "=", "None", ")", "# (N, T_q, C)", "\n", "K", "=", "tf", ".", "layers", ".", "dense", "(", "keys", ",", "num_units", ",", "activation", "=", "None", ")", "# (N, T_k, C)", "\n", "V", "=", "tf", ".", "layers", ".", "dense", "(", "keys", ",", "num_units", ",", "activation", "=", "None", ")", "# (N, T_k, C)", "\n", "\n", "Q_", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "Q", ",", "num_heads", ",", "axis", "=", "2", ")", ",", "axis", "=", "0", ")", "# (h*N, T_q, C/h)", "\n", "K_", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "K", ",", "num_heads", ",", "axis", "=", "2", ")", ",", "axis", "=", "0", ")", "# (h*N, T_k, C/h)", "\n", "V_", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "V", ",", "num_heads", ",", "axis", "=", "2", ")", ",", "axis", "=", "0", ")", "# (h*N, T_k, C/h)", "\n", "\n", "outputs", "=", "tf", ".", "matmul", "(", "Q_", ",", "tf", ".", "transpose", "(", "K_", ",", "[", "0", ",", "2", ",", "1", "]", ")", ")", "# (h*N, T_q, T_k)", "\n", "outputs", "=", "outputs", "/", "(", "K_", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "[", "-", "1", "]", "**", "0.5", ")", "\n", "\n", "key_masks", "=", "tf", ".", "sign", "(", "tf", ".", "abs", "(", "tf", ".", "reduce_sum", "(", "keys", ",", "axis", "=", "-", "1", ")", ")", ")", "# (N, T_k)", "\n", "key_masks", "=", "tf", ".", "tile", "(", "key_masks", ",", "[", "num_heads", ",", "1", "]", ")", "# (h*N, T_k)", "\n", "key_masks", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "key_masks", ",", "1", ")", ",", "[", "1", ",", "tf", ".", "shape", "(", "queries", ")", "[", "1", "]", ",", "1", "]", ")", "# (h*N, T_q, T_k)", "\n", "\n", "paddings", "=", "tf", ".", "ones_like", "(", "outputs", ")", "*", "(", "-", "2", "**", "32", "+", "1", ")", "\n", "outputs", "=", "tf", ".", "where", "(", "tf", ".", "equal", "(", "key_masks", ",", "0", ")", ",", "paddings", ",", "outputs", ")", "# (h*N, T_q, T_k)", "\n", "outputs", "=", "tf", ".", "nn", ".", "softmax", "(", "outputs", ")", "# (h*N, T_q, T_k)", "\n", "\n", "query_masks", "=", "tf", ".", "sign", "(", "tf", ".", "abs", "(", "tf", ".", "reduce_sum", "(", "queries", ",", "axis", "=", "-", "1", ")", ")", ")", "# (N, T_q)", "\n", "query_masks", "=", "tf", ".", "tile", "(", "query_masks", ",", "[", "num_heads", ",", "1", "]", ")", "# (h*N, T_q)", "\n", "query_masks", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "query_masks", ",", "-", "1", ")", ",", "[", "1", ",", "1", ",", "tf", ".", "shape", "(", "keys", ")", "[", "1", "]", "]", ")", "# (h*N, T_q, T_k)", "\n", "outputs", "*=", "query_masks", "# broadcasting. (N, T_q, C)", "\n", "outputs", "=", "tf", ".", "nn", ".", "dropout", "(", "outputs", ",", "self", ".", "keep_prob", ")", "\n", "outputs", "=", "tf", ".", "matmul", "(", "outputs", ",", "V_", ")", "# ( h*N, T_q, C/h)", "\n", "outputs", "=", "tf", ".", "concat", "(", "tf", ".", "split", "(", "outputs", ",", "num_heads", ",", "axis", "=", "0", ")", ",", "axis", "=", "2", ")", "# (N, T_q, C)", "\n", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.bilstm": [[176, 183], ["tensorflow.variable_scope", "tensorflow.nn.rnn_cell.BasicLSTMCell", "tensorflow.nn.rnn_cell.BasicLSTMCell", "tensorflow.contrib.rnn.static_bidirectional_rnn"], "methods", ["None"], ["", "def", "bilstm", "(", "self", ",", "inp", ",", "hidden_size", ",", "scope", "=", "'bilstm'", ",", "reuse", "=", "False", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "scope", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "lstm_fw_cell", "=", "tf", ".", "nn", ".", "rnn_cell", ".", "BasicLSTMCell", "(", "hidden_size", ",", "forget_bias", "=", "1.0", ",", "name", "=", "'cell_fw'", ")", "\n", "lstm_bw_cell", "=", "tf", ".", "nn", ".", "rnn_cell", ".", "BasicLSTMCell", "(", "hidden_size", ",", "forget_bias", "=", "1.0", ",", "name", "=", "'cell_bw'", ")", "\n", "\n", "outputs", ",", "state_fw", ",", "state_bw", "=", "static_bidirectional_rnn", "(", "lstm_fw_cell", ",", "lstm_bw_cell", ",", "inp", ",", "dtype", "=", "'float32'", ")", "\n", "", "return", "outputs", ",", "state_fw", ",", "state_bw", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.train": [[185, 206], ["numpy.array", "sess.run"], "methods", ["None"], ["", "def", "train", "(", "self", ",", "sess", ",", "batch_data", ",", "lr", ",", "reg_lambda", ",", "keep_prob", "=", "0.8", ")", ":", "\n", "        ", "de_lb", "=", "np", ".", "array", "(", "batch_data", "[", "-", "1", "]", ")", "\n", "de_lb", "[", "de_lb", ">", "10", "]", "=", "10", "\n", "batch_data", "[", "-", "1", "]", "=", "de_lb", "\n", "loss", ",", "_", "=", "sess", ".", "run", "(", "[", "self", ".", "loss", ",", "self", ".", "train_step", "]", ",", "feed_dict", "=", "{", "\n", "self", ".", "usr_profile", ":", "batch_data", "[", "0", "]", ",", "\n", "self", ".", "itm_spar_ph", ":", "batch_data", "[", "1", "]", ",", "\n", "self", ".", "itm_dens_ph", ":", "batch_data", "[", "2", "]", ",", "\n", "self", ".", "usr_spar_ph", ":", "batch_data", "[", "3", "]", ",", "\n", "self", ".", "usr_dens_ph", ":", "batch_data", "[", "4", "]", ",", "\n", "# self.label_ph: batch_data[-1],", "\n", "self", ".", "label_ph", ":", "batch_data", "[", "5", "]", ",", "\n", "self", ".", "time_ph", ":", "batch_data", "[", "6", "]", ",", "\n", "self", ".", "seq_length_ph", ":", "batch_data", "[", "7", "]", ",", "\n", "self", ".", "hist_length_ph", ":", "batch_data", "[", "8", "]", ",", "\n", "self", ".", "lr", ":", "lr", ",", "\n", "self", ".", "reg_lambda", ":", "reg_lambda", ",", "\n", "self", ".", "keep_prob", ":", "keep_prob", ",", "\n", "self", ".", "is_train", ":", "True", ",", "\n", "}", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.eval": [[207, 225], ["sess.run", "pred.reshape().tolist", "label.reshape().tolist", "pred.reshape", "label.reshape"], "methods", ["None"], ["", "def", "eval", "(", "self", ",", "sess", ",", "batch_data", ",", "reg_lambda", ",", "keep_prob", "=", "1", ",", "no_print", "=", "True", ")", ":", "\n", "# fi_mat, ii_mat = [], []", "\n", "        ", "pred", ",", "label", ",", "loss", "=", "sess", ".", "run", "(", "[", "self", ".", "y_pred", ",", "self", ".", "label_ph", ",", "self", ".", "loss", "]", ",", "feed_dict", "=", "{", "\n", "self", ".", "usr_profile", ":", "batch_data", "[", "0", "]", ",", "\n", "self", ".", "itm_spar_ph", ":", "batch_data", "[", "1", "]", ",", "\n", "self", ".", "itm_dens_ph", ":", "batch_data", "[", "2", "]", ",", "\n", "self", ".", "usr_spar_ph", ":", "batch_data", "[", "3", "]", ",", "\n", "self", ".", "usr_dens_ph", ":", "batch_data", "[", "4", "]", ",", "\n", "# self.label_ph: batch_data[-1],", "\n", "self", ".", "label_ph", ":", "batch_data", "[", "5", "]", ",", "\n", "self", ".", "time_ph", ":", "batch_data", "[", "6", "]", ",", "\n", "self", ".", "seq_length_ph", ":", "batch_data", "[", "7", "]", ",", "\n", "self", ".", "hist_length_ph", ":", "batch_data", "[", "8", "]", ",", "\n", "self", ".", "reg_lambda", ":", "reg_lambda", ",", "\n", "self", ".", "keep_prob", ":", "keep_prob", ",", "\n", "self", ".", "is_train", ":", "False", ",", "\n", "}", ")", "\n", "return", "pred", ".", "reshape", "(", "[", "-", "1", ",", "self", ".", "max_time_len", "]", ")", ".", "tolist", "(", ")", ",", "label", ".", "reshape", "(", "[", "-", "1", ",", "self", ".", "max_time_len", "]", ")", ".", "tolist", "(", ")", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.save": [[226, 229], ["tensorflow.train.Saver", "tensorflow.train.Saver.save"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.save"], ["", "def", "save", "(", "self", ",", "sess", ",", "path", ")", ":", "\n", "        ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "save", "(", "sess", ",", "save_path", "=", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.MIR.__init__": [[232, 292], ["model.BaseModel.__init__", "tensorflow.variable_scope", "tensorflow.placeholder", "tensorflow.expand_dims", "tensorflow.concat", "tensorflow.concat", "model.MIR.build_mlp_net", "tensorflow.sequence_mask", "model.MIR.bilstm", "tensorflow.reshape", "tensorflow.concat", "tensorflow.variable_scope", "model.MIR.build_attention_loss", "tensorflow.variable_scope", "model.MIR.multihead_attention", "tensorflow.concat", "tensorflow.reshape", "tensorflow.unstack", "tensorflow.stack", "model.MIR.co_attention", "tensorflow.concat", "model.MIR.build_mseloss", "model.MIR.build_logloss", "model.MIR.SLAttention", "tensorflow.concat"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.MIR.__init__", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_mlp_net", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.bilstm", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_attention_loss", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.multihead_attention", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.MIR.co_attention", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_mseloss", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.BaseModel.build_logloss", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.MIR.SLAttention"], ["    ", "def", "__init__", "(", "self", ",", "feature_size", ",", "eb_dim", ",", "hidden_size", ",", "max_time_len", ",", "max_seq_len", ",", "itm_spar_num", ",", "itm_dens_num", ",", "\n", "hist_spar_num", ",", "hist_dens_num", ",", "profile_num", ",", "max_norm", "=", "None", ",", "intra_list", "=", "True", ",", "intra_set", "=", "True", ",", "\n", "set2list", "=", "'SLAttention'", ",", "loss", "=", "'log'", ",", "fi", "=", "True", ",", "ii", "=", "True", ",", "decay", "=", "True", ")", ":", "\n", "        ", "super", "(", "MIR", ",", "self", ")", ".", "__init__", "(", "feature_size", ",", "eb_dim", ",", "hidden_size", ",", "max_time_len", ",", "\n", "max_seq_len", ",", "itm_spar_num", ",", "itm_dens_num", ",", "hist_spar_num", ",", "hist_dens_num", ",", "profile_num", ",", "max_norm", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'MIR'", ")", ":", "\n", "            ", "self", ".", "istrain", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ",", "[", "]", ")", "\n", "self", ".", "item_mask", "=", "tf", ".", "expand_dims", "(", "tf", ".", "sequence_mask", "(", "self", ".", "seq_length_ph", ",", "maxlen", "=", "max_time_len", ",", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "axis", "=", "-", "1", ")", "\n", "\n", "# intra-set interaction", "\n", "if", "intra_set", ":", "\n", "                ", "with", "tf", ".", "variable_scope", "(", "'cross_item'", ")", ":", "\n", "                    ", "item_seq", "=", "self", ".", "item_seq", "\n", "seq", "=", "self", ".", "multihead_attention", "(", "item_seq", ",", "item_seq", ",", "num_heads", "=", "1", ")", "\n", "seq", "=", "tf", ".", "concat", "(", "[", "seq", ",", "self", ".", "item_seq", "]", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "cross_item_embed", "=", "seq", "*", "self", ".", "item_mask", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "cross_item_embed", "=", "self", ".", "item_seq", "\n", "\n", "\n", "", "self", ".", "user_seq", "=", "tf", ".", "concat", "(", "[", "tf", ".", "reshape", "(", "self", ".", "usr_spar_emb", ",", "[", "-", "1", ",", "max_seq_len", ",", "hist_spar_num", "*", "eb_dim", "]", ")", ",", "\n", "self", ".", "usr_dens_ph", "]", ",", "axis", "=", "-", "1", ")", "\n", "# intra-list interaction", "\n", "if", "intra_list", ":", "\n", "                ", "outputs", ",", "_", ",", "_", "=", "self", ".", "bilstm", "(", "tf", ".", "unstack", "(", "self", ".", "user_seq", ",", "max_seq_len", ",", "1", ")", ",", "hidden_size", ",", "scope", "=", "'user_bilstm'", ")", "\n", "seq_ht", "=", "tf", ".", "reshape", "(", "tf", ".", "stack", "(", "outputs", ",", "axis", "=", "1", ")", ",", "(", "-", "1", ",", "max_seq_len", ",", "hidden_size", "*", "2", ")", ")", "\n", "usr_seq", "=", "tf", ".", "concat", "(", "[", "seq_ht", ",", "self", ".", "user_seq", "]", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "usr_seq", "=", "self", ".", "user_seq", "\n", "\n", "# set2list interaction", "\n", "", "with", "tf", ".", "variable_scope", "(", "'set2list'", ")", ":", "\n", "                ", "if", "set2list", "==", "'co-att'", ":", "\n", "                    ", "usr_seq", "=", "self", ".", "user_seq", "\n", "v", ",", "q", "=", "self", ".", "co_attention", "(", "self", ".", "cross_item_embed", ",", "usr_seq", ")", "\n", "seq", "=", "tf", ".", "concat", "(", "[", "v", ",", "q", "]", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "set2list_embed", "=", "seq", "*", "self", ".", "item_mask", "\n", "", "elif", "set2list", "==", "'SLAttention'", ":", "\n", "                    ", "v", ",", "q", "=", "self", ".", "SLAttention", "(", "self", ".", "cross_item_embed", ",", "usr_seq", ",", "self", ".", "itm_spar_emb", ",", "self", ".", "usr_spar_emb", ",", "\n", "fi", ",", "ii", ",", "decay", ")", "\n", "seq", "=", "tf", ".", "concat", "(", "[", "v", ",", "q", "]", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "set2list_embed", "=", "seq", "*", "self", ".", "item_mask", "\n", "", "else", ":", "\n", "                    ", "self", ".", "set2list_embed", "=", "self", ".", "user_seq", "\n", "\n", "# mlp", "\n", "# self.final_embed = tf.concat([self.item_seq, self.intra_item_embed, self.set2list_embed], axis=-1)", "\n", "", "", "self", ".", "final_embed", "=", "tf", ".", "concat", "(", "[", "self", ".", "item_seq", ",", "self", ".", "set2list_embed", "]", ",", "axis", "=", "-", "1", ")", "\n", "# self.final_embed = self.set2list_embed", "\n", "self", ".", "y_pred", "=", "self", ".", "build_mlp_net", "(", "self", ".", "final_embed", ")", "\n", "\n", "# loss", "\n", "if", "loss", "==", "'list'", ":", "\n", "                ", "self", ".", "build_attention_loss", "(", "self", ".", "y_pred", ")", "\n", "", "elif", "loss", "==", "'mse'", ":", "\n", "                ", "self", ".", "build_mseloss", "(", "self", ".", "y_pred", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "build_logloss", "(", "self", ".", "y_pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.MIR.feed_forward_net": [[293, 304], ["tensorflow.variable_scope", "tensorflow.layers.batch_normalization", "tensorflow.layers.dense", "tensorflow.nn.dropout", "tensorflow.layers.dense", "tensorflow.nn.dropout", "tensorflow.layers.batch_normalization", "inp.get_shape"], "methods", ["None"], ["", "", "", "def", "feed_forward_net", "(", "self", ",", "inp", ",", "d_ff", "=", "256", ",", "scope", "=", "'ffn'", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "            ", "d_ft", "=", "inp", ".", "get_shape", "(", ")", "[", "-", "1", "]", "\n", "bn1", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "inputs", "=", "inp", ",", "name", "=", "'bn1'", ")", "\n", "tmp", "=", "bn1", "+", "inp", "\n", "fc1", "=", "tf", ".", "layers", ".", "dense", "(", "tmp", ",", "d_ff", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc1'", ")", "\n", "dp1", "=", "tf", ".", "nn", ".", "dropout", "(", "fc1", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp1'", ")", "\n", "fc2", "=", "tf", ".", "layers", ".", "dense", "(", "dp1", ",", "d_ft", ",", "activation", "=", "None", ",", "name", "=", "'fc2'", ")", "\n", "dp2", "=", "tf", ".", "nn", ".", "dropout", "(", "fc2", ",", "self", ".", "keep_prob", ",", "name", "=", "'dp2'", ")", "\n", "bn2", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "inputs", "=", "dp2", ",", "name", "=", "'bn2'", ")", "\n", "", "return", "inp", "+", "bn2", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.MIR.co_attention": [[305, 328], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.matmul", "tensorflow.tanh", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.nn.tanh", "tensorflow.nn.tanh", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "V.get_shape", "Q.get_shape", "V.get_shape", "Q.get_shape", "tensorflow.tile", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.transpose"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax"], ["", "def", "co_attention", "(", "self", ",", "V", ",", "Q", ",", "scope", "=", "'co_att'", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "            ", "v_dim", ",", "q_dim", "=", "V", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "Q", ".", "get_shape", "(", ")", "[", "-", "1", "]", "\n", "v_seq_len", ",", "q_seq_len", "=", "V", ".", "get_shape", "(", ")", "[", "-", "2", "]", ",", "Q", ".", "get_shape", "(", ")", "[", "-", "2", "]", "\n", "bat_size", "=", "tf", ".", "shape", "(", "Q", ")", "[", "0", "]", "\n", "w_b", "=", "tf", ".", "get_variable", "(", "\"w_b\"", ",", "[", "1", ",", "q_dim", ",", "v_dim", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "C", "=", "tf", ".", "matmul", "(", "Q", ",", "tf", ".", "matmul", "(", "tf", ".", "tile", "(", "w_b", ",", "[", "bat_size", ",", "1", ",", "1", "]", ")", ",", "tf", ".", "transpose", "(", "V", ",", "perm", "=", "[", "0", ",", "2", ",", "1", "]", ")", ")", ")", "\n", "C", "=", "tf", ".", "tanh", "(", "C", ")", "\n", "\n", "w_v", "=", "tf", ".", "get_variable", "(", "'w_v'", ",", "[", "v_dim", ",", "v_seq_len", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "w_q", "=", "tf", ".", "get_variable", "(", "'w_q'", ",", "[", "q_dim", ",", "v_seq_len", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "hv_1", "=", "tf", ".", "reshape", "(", "tf", ".", "matmul", "(", "tf", ".", "reshape", "(", "V", ",", "[", "-", "1", ",", "v_dim", "]", ")", ",", "w_v", ")", ",", "[", "-", "1", ",", "v_seq_len", ",", "v_seq_len", "]", ")", "\n", "hq_1", "=", "tf", ".", "reshape", "(", "tf", ".", "matmul", "(", "tf", ".", "reshape", "(", "Q", ",", "[", "-", "1", ",", "q_dim", "]", ")", ",", "w_q", ")", ",", "[", "-", "1", ",", "q_seq_len", ",", "v_seq_len", "]", ")", "\n", "hq_1", "=", "tf", ".", "transpose", "(", "hq_1", ",", "perm", "=", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "h_v", "=", "tf", ".", "nn", ".", "tanh", "(", "hv_1", "+", "tf", ".", "matmul", "(", "hq_1", ",", "C", ")", ")", "\n", "h_q", "=", "tf", ".", "nn", ".", "tanh", "(", "hq_1", "+", "tf", ".", "matmul", "(", "hv_1", ",", "tf", ".", "transpose", "(", "C", ",", "perm", "=", "[", "0", ",", "2", ",", "1", "]", ")", ")", ")", "\n", "a_v", "=", "tf", ".", "nn", ".", "softmax", "(", "h_v", ",", "axis", "=", "-", "1", ")", "\n", "a_q", "=", "tf", ".", "nn", ".", "softmax", "(", "h_q", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "a_v", "=", "a_v", "\n", "self", ".", "a_q", "=", "a_q", "\n", "v", "=", "tf", ".", "matmul", "(", "a_v", ",", "V", ")", "\n", "q", "=", "tf", ".", "matmul", "(", "a_q", ",", "Q", ")", "\n", "", "return", "v", ",", "q", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.MIR.SLAttention": [[329, 385], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.nn.tanh", "tensorflow.nn.tanh", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.shape", "tensorflow.get_variable", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.layers.conv2d", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.matmul", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.layers.dense", "tensorflow.layers.dense", "tensorflow.tile", "tensorflow.exp", "tensorflow.tanh", "tensorflow.matmul", "tensorflow.matmul", "V.get_shape", "Q.get_shape", "V.get_shape", "Q.get_shape", "tensorflow.matmul", "tensorflow.expand_dims", "tensorflow.matmul", "tensorflow.tile", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.tile", "tensorflow.transpose", "tensorflow.tile", "tensorflow.transpose", "tensorflow.expand_dims", "tensorflow.transpose"], "methods", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax"], ["", "def", "SLAttention", "(", "self", ",", "V", ",", "Q", ",", "V_s", ",", "Q_s", ",", "fi", "=", "True", ",", "ii", "=", "True", ",", "decay", "=", "True", ",", "scope", "=", "'fi_s2l'", ")", ":", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "            ", "v_dim", ",", "q_dim", "=", "V", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "Q", ".", "get_shape", "(", ")", "[", "-", "1", "]", "\n", "v_seq_len", ",", "q_seq_len", "=", "V", ".", "get_shape", "(", ")", "[", "-", "2", "]", ",", "Q", ".", "get_shape", "(", ")", "[", "-", "2", "]", "\n", "bat_size", "=", "tf", ".", "shape", "(", "Q", ")", "[", "0", "]", "\n", "\n", "# get affinity matrix", "\n", "if", "fi", ":", "\n", "                ", "self", ".", "w_b_fi", "=", "tf", ".", "get_variable", "(", "\"w_b_fi\"", ",", "[", "1", ",", "self", ".", "emb_dim", ",", "self", ".", "emb_dim", "]", ",", "\n", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "\n", "V_s", "=", "tf", ".", "reshape", "(", "V_s", ",", "[", "-", "1", ",", "self", ".", "max_time_len", "*", "self", ".", "itm_spar_num", ",", "self", ".", "emb_dim", "]", ")", "\n", "Q_s", "=", "tf", ".", "reshape", "(", "Q_s", ",", "[", "-", "1", ",", "self", ".", "max_seq_len", "*", "self", ".", "hist_spar_num", ",", "self", ".", "emb_dim", "]", ")", "\n", "C2", "=", "tf", ".", "matmul", "(", "Q_s", ",", "tf", ".", "matmul", "(", "tf", ".", "tile", "(", "self", ".", "w_b_fi", ",", "[", "bat_size", ",", "1", ",", "1", "]", ")", ",", "tf", ".", "transpose", "(", "V_s", ",", "perm", "=", "[", "0", ",", "2", ",", "1", "]", ")", ")", ")", "\n", "C2", "=", "tf", ".", "layers", ".", "conv2d", "(", "tf", ".", "expand_dims", "(", "C2", ",", "-", "1", ")", ",", "1", ",", "self", ".", "hist_spar_num", ",", "strides", "=", "(", "self", ".", "hist_spar_num", ",", "self", ".", "itm_spar_num", ")", ")", "\n", "C2", "=", "tf", ".", "reshape", "(", "C2", ",", "[", "bat_size", ",", "q_seq_len", ",", "v_seq_len", "]", ")", "\n", "self", ".", "fi_mat", "=", "C2", "\n", "", "if", "ii", ":", "\n", "                ", "self", ".", "w_b", "=", "tf", ".", "get_variable", "(", "\"w_b\"", ",", "[", "1", ",", "q_dim", ",", "v_dim", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "C1", "=", "tf", ".", "matmul", "(", "Q", ",", "tf", ".", "matmul", "(", "tf", ".", "tile", "(", "self", ".", "w_b", ",", "[", "bat_size", ",", "1", ",", "1", "]", ")", ",", "tf", ".", "transpose", "(", "V", ",", "perm", "=", "[", "0", ",", "2", ",", "1", "]", ")", ")", ")", "\n", "self", ".", "ii_mat", "=", "C1", "\n", "if", "fi", ":", "\n", "                    ", "C1", "=", "C1", "+", "C2", "\n", "", "", "else", ":", "\n", "                ", "C1", "=", "C2", "\n", "\n", "", "if", "decay", ":", "\n", "# decay", "\n", "                ", "pos", "=", "tf", ".", "reshape", "(", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "self", ".", "time_ph", ",", "-", "1", ")", ",", "[", "1", ",", "1", ",", "v_seq_len", "]", ")", ",", "\n", "[", "-", "1", ",", "q_seq_len", ",", "v_seq_len", "]", ")", "\n", "usr_prof", "=", "tf", ".", "reshape", "(", "self", ".", "usr_prof_emb", ",", "[", "-", "1", ",", "self", ".", "profile_num", "*", "self", ".", "emb_dim", "]", ")", "\n", "usr_prof", "=", "tf", ".", "layers", ".", "dense", "(", "usr_prof", ",", "32", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc_decay1'", ")", "\n", "theta", "=", "tf", ".", "layers", ".", "dense", "(", "usr_prof", ",", "1", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ",", "name", "=", "'fc_decay2'", ")", "\n", "self", ".", "decay_theta", "=", "tf", ".", "tile", "(", "tf", ".", "reshape", "(", "theta", ",", "[", "-", "1", ",", "1", ",", "1", "]", ")", ",", "[", "1", ",", "q_seq_len", ",", "v_seq_len", "]", ")", "\n", "pos_decay", "=", "tf", ".", "exp", "(", "self", ".", "decay_theta", "*", "pos", ")", "\n", "C", "=", "tf", ".", "tanh", "(", "C1", "*", "pos_decay", "+", "C1", ")", "\n", "", "else", ":", "\n", "                ", "C", "=", "C1", "\n", "\n", "# attention map", "\n", "", "w_v", "=", "tf", ".", "get_variable", "(", "'w_v'", ",", "[", "v_dim", ",", "v_seq_len", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "w_q", "=", "tf", ".", "get_variable", "(", "'w_q'", ",", "[", "q_dim", ",", "v_seq_len", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ")", "\n", "hv_1", "=", "tf", ".", "reshape", "(", "tf", ".", "matmul", "(", "tf", ".", "reshape", "(", "V", ",", "[", "-", "1", ",", "v_dim", "]", ")", ",", "w_v", ")", ",", "[", "-", "1", ",", "v_seq_len", ",", "v_seq_len", "]", ")", "\n", "hq_1", "=", "tf", ".", "reshape", "(", "tf", ".", "matmul", "(", "tf", ".", "reshape", "(", "Q", ",", "[", "-", "1", ",", "q_dim", "]", ")", ",", "w_q", ")", ",", "[", "-", "1", ",", "q_seq_len", ",", "v_seq_len", "]", ")", "\n", "hq_1", "=", "tf", ".", "transpose", "(", "hq_1", ",", "perm", "=", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "h_v", "=", "tf", ".", "nn", ".", "tanh", "(", "hv_1", "+", "tf", ".", "matmul", "(", "hq_1", ",", "C", ")", ")", "\n", "h_q", "=", "tf", ".", "nn", ".", "tanh", "(", "hq_1", "+", "tf", ".", "matmul", "(", "hv_1", ",", "tf", ".", "transpose", "(", "C", ",", "perm", "=", "[", "0", ",", "2", ",", "1", "]", ")", ")", ")", "\n", "# h_v = tf.nn.tanh(tf.matmul(hq_1, C))", "\n", "# h_q = tf.nn.tanh(tf.matmul(hv_1, tf.transpose(C, perm=[0, 2, 1])))", "\n", "a_v", "=", "tf", ".", "nn", ".", "softmax", "(", "h_v", ",", "axis", "=", "-", "1", ")", "\n", "a_q", "=", "tf", ".", "nn", ".", "softmax", "(", "h_q", ",", "axis", "=", "-", "1", ")", "\n", "self", ".", "a_v", "=", "a_v", "\n", "self", ".", "a_q", "=", "a_q", "\n", "v", "=", "tf", ".", "matmul", "(", "a_v", ",", "V", ")", "\n", "q", "=", "tf", ".", "matmul", "(", "a_q", ",", "Q", ")", "\n", "", "return", "v", ",", "q", "\n", "", "", ""]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.tau_function": [[12, 14], ["tensorflow.where", "tensorflow.exp", "tensorflow.zeros_like"], "function", ["None"], ["def", "tau_function", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "where", "(", "x", ">", "0", ",", "tf", ".", "exp", "(", "x", ")", ",", "tf", ".", "zeros_like", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.attention_score": [[16, 18], ["model.tau_function", "tensorflow.add", "tensorflow.reduce_sum", "model.tau_function"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.tau_function", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.model.tau_function"], ["", "def", "attention_score", "(", "x", ")", ":", "\n", "    ", "return", "tau_function", "(", "x", ")", "/", "tf", ".", "add", "(", "tf", ".", "reduce_sum", "(", "tau_function", "(", "x", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ",", "1e-20", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.normalize": [[12, 18], ["numpy.array", "numpy.linalg.norm"], "function", ["None"], ["def", "normalize", "(", "v", ")", ":", "\n", "    ", "v", "=", "np", ".", "array", "(", "v", ")", "\n", "norm", "=", "np", ".", "linalg", ".", "norm", "(", "v", ")", "\n", "if", "norm", "==", "0", ":", "\n", "        ", "return", "v", "\n", "", "return", "v", "/", "norm", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.softmax": [[20, 25], ["numpy.exp", "numpy.max", "numpy.sum"], "function", ["None"], ["", "def", "softmax", "(", "x", ")", ":", "\n", "    ", "x", "=", "x", "-", "np", ".", "max", "(", "x", ")", "\n", "exp_x", "=", "np", ".", "exp", "(", "x", ")", "\n", "softmax_x", "=", "exp_x", "/", "np", ".", "sum", "(", "exp_x", ")", "\n", "return", "softmax_x", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.get_batch": [[27, 29], ["None"], "function", ["None"], ["", "def", "get_batch", "(", "data", ",", "batch_size", ",", "batch_no", ")", ":", "\n", "    ", "return", "data", "[", "batch_size", "*", "batch_no", ":", "batch_size", "*", "(", "batch_no", "+", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.get_aggregated_batch": [[31, 33], ["range", "len"], "function", ["None"], ["", "def", "get_aggregated_batch", "(", "data", ",", "batch_size", ",", "batch_no", ")", ":", "\n", "    ", "return", "[", "data", "[", "d", "]", "[", "batch_size", "*", "batch_no", ":", "batch_size", "*", "(", "batch_no", "+", "1", ")", "]", "for", "d", "in", "range", "(", "len", "(", "data", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.padding_list": [[35, 42], ["min", "len", "len", "len", "numpy.zeros_like().tolist", "len", "numpy.zeros_like().tolist", "len", "numpy.zeros_like", "numpy.zeros_like", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "padding_list", "(", "seq", ",", "max_len", ")", ":", "\n", "    ", "spar_ft", ",", "dens_ft", "=", "seq", "\n", "seq_length", "=", "min", "(", "len", "(", "spar_ft", ")", ",", "max_len", ")", "\n", "if", "len", "(", "spar_ft", ")", "<", "max_len", "or", "len", "(", "dens_ft", ")", "<", "max_len", ":", "\n", "        ", "spar_ft", "+=", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "spar_ft", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_len", "-", "len", "(", "spar_ft", ")", ")", "\n", "dens_ft", "+=", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "dens_ft", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_len", "-", "len", "(", "dens_ft", ")", ")", "\n", "", "return", "spar_ft", "[", ":", "max_len", "]", ",", "dens_ft", "[", ":", "max_len", "]", ",", "seq_length", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.load_parse_from_json": [[43, 50], ["vars", "json.load.items", "open", "json.load"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.load"], ["", "def", "load_parse_from_json", "(", "parse", ",", "setting_path", ")", ":", "\n", "    ", "with", "open", "(", "setting_path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "setting", "=", "json", ".", "load", "(", "f", ")", "\n", "", "parse_dict", "=", "vars", "(", "parse", ")", "\n", "for", "k", ",", "v", "in", "setting", ".", "items", "(", ")", ":", "\n", "        ", "parse_dict", "[", "k", "]", "=", "v", "\n", "", "return", "parse", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.construct_behavior_data": [[52, 76], ["print", "target_item_dens.extend", "target_item_spar.extend", "min", "range", "label.extend", "seq_len.append", "list_len.append", "len", "len", "sum", "len", "len", "len", "target_user.append", "user_behavior_dens.append", "user_behavior_spar.append", "tiled_seq_len.append", "len", "numpy.zeros_like().tolist", "len", "numpy.zeros_like().tolist", "len", "numpy.zeros_like", "numpy.zeros_like", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "construct_behavior_data", "(", "data", ",", "max_len", ")", ":", "\n", "    ", "target_user", ",", "target_item_dens", ",", "target_item_spar", ",", "user_behavior_dens", ",", "user_behavior_spar", ",", "label", ",", "seq_len", ",", "list_len", ",", "tiled_seq_len", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "d", "in", "data", ":", "\n", "        ", "uid", ",", "spar_ft", ",", "dens_ft", ",", "hist_spar", ",", "hist_dens", ",", "lb", "=", "d", "\n", "target_item_dens", ".", "extend", "(", "dens_ft", ")", "\n", "target_item_spar", ".", "extend", "(", "spar_ft", ")", "\n", "\n", "length", "=", "min", "(", "len", "(", "hist_spar", ")", ",", "max_len", ")", "\n", "if", "len", "(", "hist_spar", ")", "<", "max_len", ":", "\n", "            ", "hist_spar", "=", "hist_spar", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "hist_spar", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_len", "-", "len", "(", "hist_spar", ")", ")", "\n", "hist_dens", "=", "hist_dens", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "hist_dens", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_len", "-", "len", "(", "hist_dens", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "lb", ")", ")", ":", "\n", "            ", "target_user", ".", "append", "(", "uid", ")", "\n", "user_behavior_dens", ".", "append", "(", "hist_dens", "[", ":", "max_len", "]", ")", "\n", "user_behavior_spar", ".", "append", "(", "hist_spar", "[", ":", "max_len", "]", ")", "\n", "tiled_seq_len", ".", "append", "(", "length", ")", "\n", "", "label", ".", "extend", "(", "lb", ")", "\n", "seq_len", ".", "append", "(", "length", ")", "\n", "list_len", ".", "append", "(", "len", "(", "lb", ")", ")", "\n", "", "print", "(", "target_item_spar", "[", "-", "1", "]", ",", "label", "[", "-", "30", ":", "]", ",", "len", "(", "target_item_spar", ")", ",", "len", "(", "list_len", ")", ",", "sum", "(", "list_len", ")", ")", "\n", "# if len(target_item_spar) != sum(list_len):", "\n", "#     print('not equal')", "\n", "return", "target_user", ",", "target_item_spar", ",", "target_item_dens", ",", "user_behavior_spar", ",", "user_behavior_dens", ",", "label", ",", "seq_len", ",", "list_len", ",", "tiled_seq_len", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.rank": [[78, 100], ["enumerate", "sorted", "out_user.append", "out_itm_spar.append", "out_itm_dens.append", "out_usr_spar.append", "out_usr_dens.append", "out_label.append", "out_pos.append", "open", "pickle.dump", "pickle.dump", "list", "[].tolist", "[].tolist", "[].tolist", "[].tolist", "range", "len", "numpy.array", "numpy.array", "numpy.array", "numpy.arange"], "function", ["None"], ["", "def", "rank", "(", "data", ",", "preds", ",", "out_file", ",", "max_behavior_len", ")", ":", "\n", "    ", "users", ",", "item_spars", ",", "item_denss", ",", "user_spars", ",", "user_denss", ",", "labels", ",", "seq_lens", ",", "list_lens", ",", "tiled_seq_len", "=", "data", "\n", "# print('origin', item_spars[-1], labels[-30:], len(item_spars), len(list_lens), sum(list_lens), len(preds))", "\n", "out_user", ",", "out_itm_spar", ",", "out_itm_dens", ",", "out_usr_spar", ",", "out_usr_dens", ",", "out_label", ",", "out_pos", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "idx", "=", "0", "\n", "for", "i", ",", "length", "in", "enumerate", "(", "list_lens", ")", ":", "\n", "        ", "item_spar", ",", "item_dens", "=", "item_spars", "[", "idx", ":", "idx", "+", "length", "]", ",", "item_denss", "[", "idx", ":", "idx", "+", "length", "]", "\n", "user_spar", ",", "user_dens", "=", "user_spars", "[", "idx", "]", ",", "user_denss", "[", "idx", "]", "\n", "label", ",", "pred", "=", "labels", "[", "idx", ":", "idx", "+", "length", "]", ",", "preds", "[", "idx", ":", "idx", "+", "length", "]", "\n", "\n", "rerank_idx", "=", "sorted", "(", "list", "(", "range", "(", "len", "(", "pred", ")", ")", ")", ",", "key", "=", "lambda", "k", ":", "pred", "[", "k", "]", ",", "reverse", "=", "True", ")", "\n", "out_user", ".", "append", "(", "users", "[", "i", "]", ")", "\n", "out_itm_spar", ".", "append", "(", "np", ".", "array", "(", "item_spar", ")", "[", "rerank_idx", "]", ".", "tolist", "(", ")", ")", "\n", "out_itm_dens", ".", "append", "(", "np", ".", "array", "(", "item_dens", ")", "[", "rerank_idx", "]", ".", "tolist", "(", ")", ")", "\n", "out_usr_spar", ".", "append", "(", "user_spar", ")", "\n", "out_usr_dens", ".", "append", "(", "user_dens", ")", "\n", "out_label", ".", "append", "(", "np", ".", "array", "(", "label", ")", "[", "rerank_idx", "]", ".", "tolist", "(", ")", ")", "\n", "out_pos", ".", "append", "(", "np", ".", "arange", "(", "length", ")", "[", "rerank_idx", "]", ".", "tolist", "(", ")", ")", "\n", "idx", "+=", "length", "\n", "\n", "", "with", "open", "(", "out_file", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "[", "out_user", ",", "out_itm_spar", ",", "out_itm_dens", ",", "out_usr_spar", ",", "out_usr_dens", ",", "out_label", ",", "out_pos", ",", "list_lens", ",", "seq_lens", "]", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.get_last_click_pos": [[102, 106], ["max", "sum", "sum", "len", "len", "enumerate"], "function", ["None"], ["", "", "def", "get_last_click_pos", "(", "my_list", ")", ":", "\n", "    ", "if", "sum", "(", "my_list", ")", "==", "0", "or", "sum", "(", "my_list", ")", "==", "len", "(", "my_list", ")", ":", "\n", "        ", "return", "len", "(", "my_list", ")", "-", "1", "\n", "", "return", "max", "(", "[", "index", "for", "index", ",", "el", "in", "enumerate", "(", "my_list", ")", "if", "el", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.construct_list": [[108, 148], ["pickle.load", "pickle.load", "zip", "open", "list", "range", "range", "len", "de_lb.append", "len", "cut_itm_spar.append", "cut_itm_dens.append", "cut_label.append", "de_label.append", "cut_pos.append", "cut_itm_spar.append", "cut_itm_dens.append", "cut_label.append", "de_label.append", "cut_pos.append", "len", "cut_usr_spar.append", "cut_usr_dens.append", "cut_usr_spar.append", "cut_usr_dens.append", "cut_hist_pos.append", "cut_hist_pos.append", "len", "numpy.reshape", "range", "numpy.zeros_like().tolist", "len", "numpy.zeros_like().tolist", "len", "range", "range", "range", "numpy.zeros_like().tolist", "len", "numpy.zeros_like().tolist", "len", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.load", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.load"], ["", "def", "construct_list", "(", "data_dir", ",", "max_time_len", ",", "max_seq_len", ",", "props", ",", "use_pos", "=", "True", ")", ":", "\n", "    ", "user", ",", "itm_spar", ",", "itm_dens", ",", "usr_spar", ",", "usr_dens", ",", "label", ",", "pos", ",", "list_len", ",", "seq_len", "=", "pickle", ".", "load", "(", "open", "(", "data_dir", ",", "'rb'", ")", ")", "\n", "\n", "cut_itm_dens", ",", "cut_itm_spar", ",", "cut_label", ",", "cut_pos", ",", "cut_usr_spar", ",", "cut_usr_dens", ",", "de_label", ",", "cut_hist_pos", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "i", ",", "itm_spar_i", ",", "itm_dens_i", ",", "usr_spar_i", ",", "usr_dens_i", ",", "label_i", ",", "pos_i", ",", "list_len_i", ",", "seq_len_i", "in", "zip", "(", "list", "(", "range", "(", "len", "(", "label", ")", ")", ")", ",", "\n", "itm_spar", ",", "itm_dens", ",", "usr_spar", ",", "usr_dens", ",", "label", ",", "pos", ",", "list_len", ",", "seq_len", ")", ":", "\n", "\n", "        ", "de_lb", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "label_i", ")", ")", ":", "\n", "            ", "de_lb", ".", "append", "(", "label_i", "[", "j", "]", "/", "props", "[", "itm_spar_i", "[", "j", "]", "[", "1", "]", "]", "[", "pos_i", "[", "j", "]", "]", ")", "\n", "\n", "", "if", "len", "(", "itm_spar_i", ")", ">=", "max_time_len", ":", "\n", "            ", "cut_itm_spar", ".", "append", "(", "itm_spar_i", "[", ":", "max_time_len", "]", ")", "\n", "cut_itm_dens", ".", "append", "(", "itm_dens_i", "[", ":", "max_time_len", "]", ")", "\n", "cut_label", ".", "append", "(", "label_i", "[", ":", "max_time_len", "]", ")", "\n", "de_label", ".", "append", "(", "de_lb", "[", ":", "max_time_len", "]", ")", "\n", "cut_pos", ".", "append", "(", "pos_i", "[", ":", "max_time_len", "]", ")", "\n", "list_len", "[", "i", "]", "=", "max_time_len", "\n", "", "else", ":", "\n", "            ", "cut_itm_spar", ".", "append", "(", "itm_spar_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "itm_spar_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_time_len", "-", "len", "(", "itm_spar_i", ")", ")", ")", "\n", "cut_itm_dens", ".", "append", "(", "itm_dens_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "itm_dens_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_time_len", "-", "len", "(", "itm_dens_i", ")", ")", ")", "\n", "cut_label", ".", "append", "(", "label_i", "+", "[", "0", "for", "_", "in", "range", "(", "max_time_len", "-", "list_len_i", ")", "]", ")", "\n", "de_label", ".", "append", "(", "de_lb", "+", "[", "0", "for", "_", "in", "range", "(", "max_time_len", "-", "list_len_i", ")", "]", ")", "\n", "cut_pos", ".", "append", "(", "pos_i", "+", "[", "j", "for", "j", "in", "range", "(", "list_len_i", ",", "max_time_len", ")", "]", ")", "\n", "\n", "\n", "", "if", "len", "(", "usr_spar_i", ")", ">=", "max_seq_len", ":", "\n", "            ", "cut_usr_spar", ".", "append", "(", "usr_spar_i", "[", ":", "max_seq_len", "]", ")", "\n", "cut_usr_dens", ".", "append", "(", "usr_dens_i", "[", ":", "max_seq_len", "]", ")", "\n", "seq_len", "[", "i", "]", "=", "max_seq_len", "\n", "", "else", ":", "\n", "            ", "cut_usr_spar", ".", "append", "(", "usr_spar_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "usr_spar_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_seq_len", "-", "len", "(", "usr_spar_i", ")", ")", ")", "\n", "cut_usr_dens", ".", "append", "(", "usr_dens_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "usr_dens_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_seq_len", "-", "len", "(", "usr_dens_i", ")", ")", ")", "\n", "\n", "", "if", "use_pos", ":", "\n", "            ", "cut_hist_pos", ".", "append", "(", "[", "j", "for", "j", "in", "range", "(", "max_seq_len", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "cut_hist_pos", ".", "append", "(", "np", ".", "reshape", "(", "cut_usr_dens", "[", "-", "1", "]", ",", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "return", "user", ",", "cut_itm_spar", ",", "cut_itm_dens", ",", "cut_usr_spar", ",", "cut_usr_dens", ",", "cut_label", ",", "cut_hist_pos", ",", "list_len", ",", "seq_len", ",", "cut_pos", ",", "de_label", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.construct_list_with_profile": [[150, 208], ["pickle.load", "pickle.load", "print", "print", "zip", "print", "open", "len", "list", "user_prof.append", "range", "range", "len", "de_lb.append", "len", "cut_itm_spar.append", "cut_itm_dens.append", "cut_label.append", "de_label.append", "cut_pos.append", "cut_itm_spar.append", "cut_itm_dens.append", "cut_label.append", "de_label.append", "cut_pos.append", "len", "cut_usr_spar.append", "cut_usr_dens.append", "cut_usr_spar.append", "cut_usr_dens.append", "cut_hist_pos.append", "numpy.log2", "numpy.reshape().tolist", "cut_hist_pos.append", "max", "min", "len", "max", "min", "numpy.array", "numpy.reshape", "range", "numpy.array", "max", "range", "numpy.zeros_like().tolist", "len", "numpy.zeros_like().tolist", "len", "range", "range", "range", "numpy.zeros_like().tolist", "len", "numpy.zeros_like().tolist", "len", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.load", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.load"], ["", "def", "construct_list_with_profile", "(", "data_dir", ",", "max_time_len", ",", "max_seq_len", ",", "props", ",", "profile", ",", "use_pos", "=", "True", ")", ":", "\n", "    ", "user", ",", "itm_spar", ",", "itm_dens", ",", "usr_spar", ",", "usr_dens", ",", "label", ",", "pos", ",", "list_len", ",", "seq_len", "=", "pickle", ".", "load", "(", "open", "(", "data_dir", ",", "'rb'", ")", ")", "\n", "print", "(", "len", "(", "user", ")", ")", "\n", "print", "(", "'max time len'", ",", "max_time_len", ",", "'max seq len'", ",", "max_seq_len", ")", "\n", "\n", "max_interval", ",", "min_interval", "=", "0", ",", "1e9", "\n", "cut_itm_dens", ",", "cut_itm_spar", ",", "cut_label", ",", "cut_pos", ",", "cut_usr_spar", ",", "cut_usr_dens", ",", "de_label", ",", "user_prof", ",", "cut_hist_pos", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "i", ",", "itm_spar_i", ",", "itm_dens_i", ",", "usr_spar_i", ",", "usr_dens_i", ",", "label_i", ",", "pos_i", ",", "list_len_i", ",", "seq_len_i", "in", "zip", "(", "list", "(", "range", "(", "len", "(", "label", ")", ")", ")", ",", "\n", "itm_spar", ",", "itm_dens", ",", "usr_spar", ",", "usr_dens", ",", "label", ",", "pos", ",", "list_len", ",", "seq_len", ")", ":", "\n", "\n", "        ", "user_prof", ".", "append", "(", "profile", "[", "user", "[", "i", "]", "]", ")", "\n", "de_lb", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "label_i", ")", ")", ":", "\n", "            ", "de_lb", ".", "append", "(", "label_i", "[", "j", "]", "/", "props", "[", "itm_spar_i", "[", "j", "]", "[", "1", "]", "]", "[", "pos_i", "[", "j", "]", "]", ")", "\n", "\n", "", "if", "len", "(", "itm_spar_i", ")", ">=", "max_time_len", ":", "\n", "            ", "cut_itm_spar", ".", "append", "(", "itm_spar_i", "[", ":", "max_time_len", "]", ")", "\n", "cut_itm_dens", ".", "append", "(", "itm_dens_i", "[", ":", "max_time_len", "]", ")", "\n", "cut_label", ".", "append", "(", "label_i", "[", ":", "max_time_len", "]", ")", "\n", "de_label", ".", "append", "(", "de_lb", "[", ":", "max_time_len", "]", ")", "\n", "cut_pos", ".", "append", "(", "pos_i", "[", ":", "max_time_len", "]", ")", "\n", "list_len", "[", "i", "]", "=", "max_time_len", "\n", "", "else", ":", "\n", "\n", "            ", "cut_itm_spar", ".", "append", "(", "itm_spar_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "itm_spar_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_time_len", "-", "len", "(", "itm_spar_i", ")", ")", ")", "\n", "cut_itm_dens", ".", "append", "(", "itm_dens_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "itm_dens_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_time_len", "-", "len", "(", "itm_dens_i", ")", ")", ")", "\n", "# cut_itm_spar.append([np.zeros_like(np.array(itm_spar_i[0])).tolist()] * max_time_len)", "\n", "# cut_itm_dens.append([np.zeros_like(np.array(itm_dens_i[0])).tolist()] * max_time_len)", "\n", "cut_label", ".", "append", "(", "label_i", "+", "[", "0", "for", "_", "in", "range", "(", "max_time_len", "-", "list_len_i", ")", "]", ")", "\n", "de_label", ".", "append", "(", "de_lb", "+", "[", "0", "for", "_", "in", "range", "(", "max_time_len", "-", "list_len_i", ")", "]", ")", "\n", "cut_pos", ".", "append", "(", "pos_i", "+", "[", "j", "for", "j", "in", "range", "(", "list_len_i", ",", "max_time_len", ")", "]", ")", "\n", "\n", "\n", "", "if", "len", "(", "usr_spar_i", ")", ">=", "max_seq_len", ":", "\n", "            ", "cut_usr_spar", ".", "append", "(", "usr_spar_i", "[", ":", "max_seq_len", "]", ")", "\n", "cut_usr_dens", ".", "append", "(", "usr_dens_i", "[", ":", "max_seq_len", "]", ")", "\n", "seq_len", "[", "i", "]", "=", "max_seq_len", "\n", "", "else", ":", "\n", "            ", "cut_usr_spar", ".", "append", "(", "\n", "usr_spar_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "usr_spar_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_seq_len", "-", "len", "(", "usr_spar_i", ")", ")", ")", "\n", "cut_usr_dens", ".", "append", "(", "\n", "usr_dens_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "usr_dens_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_seq_len", "-", "len", "(", "usr_dens_i", ")", ")", ")", "\n", "\n", "", "if", "use_pos", ":", "\n", "            ", "cut_hist_pos", ".", "append", "(", "[", "j", "for", "j", "in", "range", "(", "max_seq_len", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "usr_dens_i", "=", "np", ".", "log2", "(", "np", ".", "array", "(", "usr_dens_i", ")", "+", "1", ")", "\n", "lst", "=", "np", ".", "reshape", "(", "np", ".", "array", "(", "usr_dens_i", "[", ":", "seq_len_i", "]", ")", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "#1", "\n", "\n", "hist_pos", "=", "lst", "+", "[", "max", "(", "lst", ")", "+", "1", "for", "i", "in", "range", "(", "seq_len_i", ",", "max_seq_len", ")", "]", "\n", "cut_hist_pos", ".", "append", "(", "hist_pos", "[", ":", "max_seq_len", "]", ")", "\n", "\n", "max_interval", "=", "max", "(", "max_interval", ",", "max", "(", "cut_hist_pos", "[", "-", "1", "]", ")", ")", "\n", "min_interval", "=", "min", "(", "min_interval", ",", "min", "(", "cut_hist_pos", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "print", "(", "max_interval", ",", "min_interval", ")", "\n", "\n", "return", "user_prof", ",", "cut_itm_spar", ",", "cut_itm_dens", ",", "cut_usr_spar", ",", "cut_usr_dens", ",", "cut_label", ",", "cut_hist_pos", ",", "list_len", ",", "seq_len", ",", "cut_pos", ",", "de_label", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.get_sim_hist": [[210, 220], ["random.choice", "len", "list"], "function", ["None"], ["", "def", "get_sim_hist", "(", "profile_group", ",", "usr_profile", ")", ":", "\n", "    ", "comm", "=", "profile_group", "[", "0", "]", "[", "usr_profile", "[", "0", "]", "]", "\n", "idx", "=", "1", "\n", "while", "idx", "<", "len", "(", "usr_profile", ")", ":", "\n", "        ", "tmp", "=", "comm", "&", "profile_group", "[", "idx", "]", "[", "usr_profile", "[", "idx", "]", "]", "\n", "idx", "+=", "1", "\n", "if", "not", "tmp", ":", "\n", "            ", "break", "\n", "", "comm", "=", "tmp", "\n", "", "return", "random", ".", "choice", "(", "list", "(", "comm", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.construct_list_with_profile_sim_hist": [[222, 286], ["pickle.load", "pickle.load", "range", "print", "print", "zip", "print", "open", "collections.defaultdict", "len", "range", "len", "list", "user_prof.append", "utils.get_sim_hist", "range", "range", "[].add", "range", "len", "de_lb.append", "len", "cut_itm_spar.append", "cut_itm_dens.append", "cut_label.append", "de_label.append", "cut_pos.append", "cut_itm_spar.append", "cut_itm_dens.append", "cut_label.append", "de_label.append", "cut_pos.append", "len", "cut_usr_spar.append", "cut_usr_dens.append", "cut_usr_spar.append", "cut_usr_dens.append", "cut_hist_pos.append", "numpy.log2", "numpy.reshape().tolist", "cut_hist_pos.append", "max", "min", "len", "max", "min", "numpy.array", "numpy.reshape", "range", "numpy.array", "max", "range", "numpy.zeros_like().tolist", "len", "numpy.zeros_like().tolist", "len", "range", "range", "range", "numpy.zeros_like().tolist", "len", "numpy.zeros_like().tolist", "len", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.load", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.initial_rankers.LambdaMART.load", "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.get_sim_hist"], ["", "def", "construct_list_with_profile_sim_hist", "(", "data_dir", ",", "max_time_len", ",", "max_seq_len", ",", "props", ",", "profile", ",", "profile_fnum", ",", "use_pos", "=", "True", ")", ":", "\n", "    ", "user", ",", "itm_spar", ",", "itm_dens", ",", "usr_spar", ",", "usr_dens", ",", "label", ",", "pos", ",", "list_len", ",", "seq_len", "=", "pickle", ".", "load", "(", "open", "(", "data_dir", ",", "'rb'", ")", ")", "\n", "profile_group", "=", "[", "defaultdict", "(", "set", ")", "for", "_", "in", "range", "(", "profile_fnum", ")", "]", "\n", "for", "u", "in", "range", "(", "len", "(", "user", ")", ")", ":", "\n", "        ", "usr_prof", "=", "profile", "[", "user", "[", "u", "]", "]", "\n", "for", "i", "in", "range", "(", "profile_fnum", ")", ":", "\n", "            ", "profile_group", "[", "i", "]", "[", "usr_prof", "[", "i", "]", "]", ".", "add", "(", "u", ")", "\n", "", "", "print", "(", "len", "(", "user", ")", ")", "\n", "print", "(", "'max time len'", ",", "max_time_len", ",", "'max seq len'", ",", "max_seq_len", ")", "\n", "\n", "max_interval", ",", "min_interval", "=", "0", ",", "1e9", "\n", "cut_itm_dens", ",", "cut_itm_spar", ",", "cut_label", ",", "cut_pos", ",", "cut_usr_spar", ",", "cut_usr_dens", ",", "de_label", ",", "user_prof", ",", "cut_hist_pos", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "i", ",", "itm_spar_i", ",", "itm_dens_i", ",", "label_i", ",", "pos_i", ",", "list_len_i", ",", "seq_len_i", "in", "zip", "(", "list", "(", "range", "(", "len", "(", "label", ")", ")", ")", ",", "\n", "itm_spar", ",", "itm_dens", ",", "label", ",", "pos", ",", "list_len", ",", "seq_len", ")", ":", "\n", "\n", "        ", "user_prof", ".", "append", "(", "profile", "[", "user", "[", "i", "]", "]", ")", "\n", "sim_id", "=", "get_sim_hist", "(", "profile_group", ",", "user_prof", "[", "-", "1", "]", ")", "\n", "usr_dens_i", ",", "usr_spar_i", "=", "usr_dens", "[", "sim_id", "]", ",", "usr_spar", "[", "sim_id", "]", "\n", "de_lb", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "label_i", ")", ")", ":", "\n", "            ", "de_lb", ".", "append", "(", "label_i", "[", "j", "]", "/", "props", "[", "itm_spar_i", "[", "j", "]", "[", "1", "]", "]", "[", "pos_i", "[", "j", "]", "]", ")", "\n", "\n", "", "if", "len", "(", "itm_spar_i", ")", ">=", "max_time_len", ":", "\n", "            ", "cut_itm_spar", ".", "append", "(", "itm_spar_i", "[", ":", "max_time_len", "]", ")", "\n", "cut_itm_dens", ".", "append", "(", "itm_dens_i", "[", ":", "max_time_len", "]", ")", "\n", "cut_label", ".", "append", "(", "label_i", "[", ":", "max_time_len", "]", ")", "\n", "de_label", ".", "append", "(", "de_lb", "[", ":", "max_time_len", "]", ")", "\n", "cut_pos", ".", "append", "(", "pos_i", "[", ":", "max_time_len", "]", ")", "\n", "list_len", "[", "i", "]", "=", "max_time_len", "\n", "", "else", ":", "\n", "\n", "            ", "cut_itm_spar", ".", "append", "(", "itm_spar_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "itm_spar_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_time_len", "-", "len", "(", "itm_spar_i", ")", ")", ")", "\n", "cut_itm_dens", ".", "append", "(", "itm_dens_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "itm_dens_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_time_len", "-", "len", "(", "itm_dens_i", ")", ")", ")", "\n", "# cut_itm_spar.append([np.zeros_like(np.array(itm_spar_i[0])).tolist()] * max_time_len)", "\n", "# cut_itm_dens.append([np.zeros_like(np.array(itm_dens_i[0])).tolist()] * max_time_len)", "\n", "cut_label", ".", "append", "(", "label_i", "+", "[", "0", "for", "_", "in", "range", "(", "max_time_len", "-", "list_len_i", ")", "]", ")", "\n", "de_label", ".", "append", "(", "de_lb", "+", "[", "0", "for", "_", "in", "range", "(", "max_time_len", "-", "list_len_i", ")", "]", ")", "\n", "cut_pos", ".", "append", "(", "pos_i", "+", "[", "j", "for", "j", "in", "range", "(", "list_len_i", ",", "max_time_len", ")", "]", ")", "\n", "\n", "\n", "", "if", "len", "(", "usr_spar_i", ")", ">=", "max_seq_len", ":", "\n", "            ", "cut_usr_spar", ".", "append", "(", "usr_spar_i", "[", ":", "max_seq_len", "]", ")", "\n", "cut_usr_dens", ".", "append", "(", "usr_dens_i", "[", ":", "max_seq_len", "]", ")", "\n", "seq_len", "[", "i", "]", "=", "max_seq_len", "\n", "", "else", ":", "\n", "            ", "cut_usr_spar", ".", "append", "(", "\n", "usr_spar_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "usr_spar_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_seq_len", "-", "len", "(", "usr_spar_i", ")", ")", ")", "\n", "cut_usr_dens", ".", "append", "(", "\n", "usr_dens_i", "+", "[", "np", ".", "zeros_like", "(", "np", ".", "array", "(", "usr_dens_i", "[", "0", "]", ")", ")", ".", "tolist", "(", ")", "]", "*", "(", "max_seq_len", "-", "len", "(", "usr_dens_i", ")", ")", ")", "\n", "\n", "", "if", "use_pos", ":", "\n", "            ", "cut_hist_pos", ".", "append", "(", "[", "j", "for", "j", "in", "range", "(", "max_seq_len", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "usr_dens_i", "=", "np", ".", "log2", "(", "np", ".", "array", "(", "usr_dens_i", ")", "+", "1", ")", "\n", "lst", "=", "np", ".", "reshape", "(", "np", ".", "array", "(", "usr_dens_i", "[", ":", "seq_len_i", "]", ")", ",", "[", "-", "1", "]", ")", ".", "tolist", "(", ")", "#1", "\n", "hist_pos", "=", "lst", "+", "[", "max", "(", "lst", ")", "+", "1", "for", "i", "in", "range", "(", "seq_len_i", ",", "max_seq_len", ")", "]", "\n", "cut_hist_pos", ".", "append", "(", "hist_pos", "[", ":", "max_seq_len", "]", ")", "\n", "\n", "max_interval", "=", "max", "(", "max_interval", ",", "max", "(", "cut_hist_pos", "[", "-", "1", "]", ")", ")", "\n", "min_interval", "=", "min", "(", "min_interval", ",", "min", "(", "cut_hist_pos", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "", "print", "(", "max_interval", ",", "min_interval", ")", "\n", "\n", "return", "user_prof", ",", "cut_itm_spar", ",", "cut_itm_dens", ",", "cut_usr_spar", ",", "cut_usr_dens", ",", "cut_label", ",", "cut_hist_pos", ",", "list_len", ",", "seq_len", ",", "cut_pos", ",", "de_label", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.rerank": [[290, 293], ["sorted", "numpy.array", "numpy.array", "range", "numpy.ones_like", "len"], "function", ["None"], ["", "def", "rerank", "(", "attracts", ",", "terms", ")", ":", "\n", "    ", "val", "=", "np", ".", "array", "(", "attracts", ")", "*", "np", ".", "array", "(", "np", ".", "ones_like", "(", "terms", ")", ")", "\n", "return", "sorted", "(", "range", "(", "len", "(", "val", ")", ")", ",", "key", "=", "lambda", "k", ":", "val", "[", "k", "]", ",", "reverse", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.evaluate": [[295, 329], ["zip", "[].tolist", "sorted", "min", "zip", "ndcg.append", "map.append", "utility.append", "clicks.append", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "sorted", "list", "range", "len", "range", "sum", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "range", "range", "len", "numpy.log2", "numpy.log2", "float", "float", "len", "len", "numpy.array", "pow", "pow"], "function", ["None"], ["", "def", "evaluate", "(", "labels", ",", "preds", ",", "scope_number", ",", "props", ",", "cates", ",", "poss", ",", "is_rank", ")", ":", "\n", "    ", "ndcg", ",", "utility", ",", "map", ",", "clicks", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "label", ",", "pred", ",", "cate", ",", "pos", "in", "zip", "(", "labels", ",", "preds", ",", "cates", ",", "poss", ")", ":", "\n", "        ", "if", "is_rank", ":", "\n", "            ", "final", "=", "sorted", "(", "range", "(", "len", "(", "pred", ")", ")", ",", "key", "=", "lambda", "k", ":", "pred", "[", "k", "]", ",", "reverse", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "final", "=", "list", "(", "range", "(", "len", "(", "pred", ")", ")", ")", "\n", "\n", "", "click", "=", "np", ".", "array", "(", "label", ")", "[", "final", "]", ".", "tolist", "(", ")", "# reranked labels", "\n", "gold", "=", "sorted", "(", "range", "(", "len", "(", "click", ")", ")", ",", "key", "=", "lambda", "k", ":", "click", "[", "k", "]", ",", "reverse", "=", "True", ")", "# optimal list for ndcg", "\n", "\n", "ideal_dcg", ",", "dcg", ",", "AP_value", ",", "AP_count", ",", "util", "=", "0", ",", "0", ",", "0", ",", "0", ",", "0", "\n", "scope_number", "=", "min", "(", "scope_number", ",", "len", "(", "label", ")", ")", "\n", "scope_gold", "=", "gold", "[", ":", "scope_number", "]", "\n", "\n", "for", "_i", ",", "_g", ",", "_f", "in", "zip", "(", "range", "(", "1", ",", "scope_number", "+", "1", ")", ",", "scope_gold", ",", "final", "[", "scope_number", ":", "]", ")", ":", "\n", "            ", "dcg", "+=", "(", "pow", "(", "2", ",", "click", "[", "_i", "-", "1", "]", ")", "-", "1", ")", "/", "(", "np", ".", "log2", "(", "_i", "+", "1", ")", ")", "\n", "ideal_dcg", "+=", "(", "pow", "(", "2", ",", "click", "[", "_g", "]", ")", "-", "1", ")", "/", "(", "np", ".", "log2", "(", "_i", "+", "1", ")", ")", "\n", "\n", "if", "click", "[", "_i", "]", ">=", "1", ":", "\n", "                ", "AP_count", "+=", "1", "\n", "AP_value", "+=", "AP_count", "/", "_i", "\n", "\n", "", "util", "+=", "click", "[", "_i", "]", "*", "props", "[", "cate", "[", "_f", "]", "]", "[", "_i", "]", "/", "props", "[", "cate", "[", "_f", "]", "]", "[", "pos", "[", "_f", "]", "]", "\n", "\n", "", "_ndcg", "=", "float", "(", "dcg", ")", "/", "ideal_dcg", "if", "ideal_dcg", "!=", "0", "else", "0.", "\n", "_map", "=", "float", "(", "AP_value", ")", "/", "AP_count", "if", "AP_count", "!=", "0", "else", "0.", "\n", "\n", "ndcg", ".", "append", "(", "_ndcg", ")", "\n", "map", ".", "append", "(", "_map", ")", "\n", "utility", ".", "append", "(", "util", ")", "\n", "clicks", ".", "append", "(", "sum", "(", "clicks", "[", ":", "scope_number", "]", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "np", ".", "array", "(", "map", ")", ")", ",", "np", ".", "mean", "(", "np", ".", "array", "(", "ndcg", ")", ")", ",", "np", ".", "mean", "(", "np", ".", "array", "(", "clicks", ")", ")", ",", "np", ".", "mean", "(", "np", ".", "array", "(", "utility", ")", ")", ",", "[", "map", ",", "ndcg", ",", "clicks", ",", "utility", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.YunjiaXi_Multi-Level-Interaction-Reranking.None.utils.evaluate_multi": [[332, 378], ["zip", "[].tolist", "sorted", "enumerate", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "sorted", "list", "range", "min", "zip", "ndcg[].append", "de_ndcg[].append", "map[].append", "utility[].append", "clicks[].append", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "range", "range", "range", "range", "range", "range", "range", "len", "len", "range", "sum", "len", "len", "len", "len", "len", "len", "len", "numpy.array", "numpy.log2", "numpy.log2", "float", "float", "float", "pow", "pow", "pow", "numpy.log2", "pow", "numpy.log2"], "function", ["None"], ["", "def", "evaluate_multi", "(", "labels", ",", "preds", ",", "scope_number", ",", "props", ",", "cates", ",", "poss", ",", "is_rank", ",", "_print", "=", "False", ")", ":", "\n", "    ", "ndcg", ",", "utility", ",", "map", ",", "clicks", ",", "de_ndcg", "=", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "scope_number", ")", ")", "]", ",", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "scope_number", ")", ")", "]", ",", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "scope_number", ")", ")", "]", ",", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "scope_number", ")", ")", "]", ",", "[", "[", "]", "for", "_", "in", "range", "(", "len", "(", "scope_number", ")", ")", "]", "\n", "\n", "if", "_print", ":", "\n", "        ", "_print", "=", "5", "\n", "\n", "", "for", "label", ",", "pred", ",", "cate", ",", "pos", "in", "zip", "(", "labels", ",", "preds", ",", "cates", ",", "poss", ")", ":", "\n", "        ", "if", "is_rank", ":", "\n", "            ", "final", "=", "sorted", "(", "range", "(", "len", "(", "pred", ")", ")", ",", "key", "=", "lambda", "k", ":", "pred", "[", "k", "]", ",", "reverse", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "final", "=", "list", "(", "range", "(", "len", "(", "pred", ")", ")", ")", "\n", "", "click", "=", "np", ".", "array", "(", "label", ")", "[", "final", "]", ".", "tolist", "(", ")", "# reranked labels", "\n", "gold", "=", "sorted", "(", "range", "(", "len", "(", "label", ")", ")", ",", "key", "=", "lambda", "k", ":", "label", "[", "k", "]", ",", "reverse", "=", "True", ")", "# optimal list for ndcg", "\n", "\n", "for", "i", ",", "scope", "in", "enumerate", "(", "scope_number", ")", ":", "\n", "            ", "ideal_dcg", ",", "dcg", ",", "de_dcg", ",", "de_idcg", ",", "AP_value", ",", "AP_count", ",", "util", "=", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "\n", "cur_scope", "=", "min", "(", "scope", ",", "len", "(", "label", ")", ")", "\n", "for", "_i", ",", "_g", ",", "_f", "in", "zip", "(", "range", "(", "1", ",", "cur_scope", "+", "1", ")", ",", "gold", "[", ":", "cur_scope", "]", ",", "final", "[", ":", "cur_scope", "]", ")", ":", "\n", "                ", "dcg", "+=", "(", "pow", "(", "2", ",", "click", "[", "_i", "-", "1", "]", ")", "-", "1", ")", "/", "(", "np", ".", "log2", "(", "_i", "+", "1", ")", ")", "\n", "ideal_dcg", "+=", "(", "pow", "(", "2", ",", "label", "[", "_g", "]", ")", "-", "1", ")", "/", "(", "np", ".", "log2", "(", "_i", "+", "1", ")", ")", "\n", "\n", "de_dcg", "+=", "(", "pow", "(", "2", ",", "click", "[", "_i", "-", "1", "]", ")", "-", "1", ")", "/", "(", "np", ".", "log2", "(", "_i", "+", "1", ")", "*", "props", "[", "cate", "[", "_f", "]", "]", "[", "pos", "[", "_f", "]", "]", ")", "\n", "de_idcg", "+=", "(", "pow", "(", "2", ",", "label", "[", "_g", "]", ")", "-", "1", ")", "/", "(", "np", ".", "log2", "(", "_i", "+", "1", ")", "*", "props", "[", "cate", "[", "_g", "]", "]", "[", "pos", "[", "_g", "]", "]", ")", "\n", "\n", "if", "click", "[", "_i", "-", "1", "]", ">=", "1", ":", "\n", "                    ", "AP_count", "+=", "1", "\n", "AP_value", "+=", "AP_count", "/", "_i", "\n", "\n", "", "util", "+=", "click", "[", "_i", "-", "1", "]", "*", "props", "[", "cate", "[", "_f", "]", "]", "[", "_i", "-", "1", "]", "/", "props", "[", "cate", "[", "_f", "]", "]", "[", "pos", "[", "_f", "]", "]", "\n", "\n", "\n", "", "_ndcg", "=", "float", "(", "dcg", ")", "/", "ideal_dcg", "if", "ideal_dcg", "!=", "0", "else", "0.", "\n", "_map", "=", "float", "(", "AP_value", ")", "/", "AP_count", "if", "AP_count", "!=", "0", "else", "0.", "\n", "_de_ndcg", "=", "float", "(", "de_dcg", ")", "/", "de_idcg", "if", "de_idcg", "!=", "0", "else", "0.", "\n", "\n", "ndcg", "[", "i", "]", ".", "append", "(", "_ndcg", ")", "\n", "de_ndcg", "[", "i", "]", ".", "append", "(", "_de_ndcg", ")", "\n", "map", "[", "i", "]", ".", "append", "(", "_map", ")", "\n", "utility", "[", "i", "]", ".", "append", "(", "util", ")", "\n", "clicks", "[", "i", "]", ".", "append", "(", "sum", "(", "click", "[", ":", "cur_scope", "]", ")", ")", "\n", "", "_print", "-=", "1", "\n", "", "return", "np", ".", "mean", "(", "np", ".", "array", "(", "map", ")", ",", "axis", "=", "-", "1", ")", ",", "np", ".", "mean", "(", "np", ".", "array", "(", "ndcg", ")", ",", "axis", "=", "-", "1", ")", ",", "np", ".", "mean", "(", "np", ".", "array", "(", "de_ndcg", ")", ",", "axis", "=", "-", "1", ")", ",", "np", ".", "mean", "(", "np", ".", "array", "(", "clicks", ")", ",", "axis", "=", "-", "1", ")", ",", "np", ".", "mean", "(", "np", ".", "array", "(", "utility", ")", ",", "axis", "=", "-", "1", ")", ",", "[", "map", ",", "ndcg", ",", "de_ndcg", ",", "clicks", ",", "utility", "]", "\n", "", ""]]}