{"home.repos.pwc.inspect_result.fredfung007_snlt.None.run_experiment.run_training": [[35, 52], ["torch.init_process_group", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.cuda", "torch.nn.parallel.DistributedDataParallel", "tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.train", "input_pipeline.paired_patches_dataset.PairedPatchesDataset", "input_pipeline.paired_patches_dataset.TestDataset", "tracker.trainer.TrackerTrainer", "tracker.trainer.TrackerTrainer.train_tracker_on_datasets", "torch.destroy_process_group", "tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN", "NotImplementedError"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.tracker.trainer.TrackerTrainer.train_tracker_on_datasets"], ["def", "run_training", "(", "rank", ",", "cfg", ")", ":", "\n", "    ", "dist_rank", "=", "rank", "+", "cfg", ".", "LOCAL_MACHINE", "*", "cfg", ".", "NUM_GPU_PER_MACHINE", "\n", "dist", ".", "init_process_group", "(", "backend", "=", "\"nccl\"", ",", "rank", "=", "dist_rank", ",", "world_size", "=", "cfg", ".", "WORLD_SIZE", ",", "init_method", "=", "cfg", ".", "INIT_METHOD", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "rank", ")", "\n", "if", "cfg", ".", "MODEL", "==", "\"siamrpn++\"", ":", "\n", "        ", "tracker", "=", "SiamRPNPPMultiNLRPN", "(", "cfg", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "", "tracker", "=", "tracker", ".", "cuda", "(", ")", "\n", "tracker", "=", "DistributedDataParallel", "(", "tracker", ",", "device_ids", "=", "[", "rank", "]", ",", "output_device", "=", "rank", ",", "\n", "broadcast_buffers", "=", "cfg", ".", "WORLD_SIZE", ">", "1", ")", "\n", "tracker", ".", "train", "(", ")", "\n", "train_dataset", "=", "PairedPatchesDataset", "(", "cfg", ".", "DATASET", ",", "cfg", ".", "ANCHOR", ",", "cfg", ".", "SEARCH_SIZE", ",", "cfg", ".", "EXEMPLAR_SIZE", ",", "cfg", ".", "OUTPUT_SIZE", ")", "\n", "test_dataset", "=", "TestDataset", "(", "cfg", ".", "DATASET", ",", "cfg", ".", "ANCHOR", ",", "cfg", ".", "SEARCH_SIZE", ",", "cfg", ".", "EXEMPLAR_SIZE", ",", "cfg", ".", "OUTPUT_SIZE", ")", "\n", "trainer", "=", "TrackerTrainer", "(", "cfg", ")", "\n", "trainer", ".", "train_tracker_on_datasets", "(", "tracker", ",", "train_dataset", ",", "test_dataset", ",", "dist_rank", ")", "\n", "dist", ".", "destroy_process_group", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.None.run_experiment.run_evaluation": [[54, 89], ["torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "tracker.inference.Inference", "tracker.inference.Inference.prepare_tracker", "tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.eval", "tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.cuda", "os.path.join", "os.makedirs", "utils.logging.get_logger", "enumerate", "tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN", "NotImplementedError", "input_pipeline.evaluation.LaSOTDataLoader", "input_pipeline.evaluation.OTBDataLoader", "input_pipeline.evaluation.TNL2KDataLoader", "NotImplementedError", "utils.logging.get_logger.info", "input_pipeline.evaluation.TNL2KDataLoader.get_next_batch", "tracker.inference.Inference.track_on_video", "utils.logging.get_logger.info", "utils.logging.get_logger.info", "utils.logging.get_logger.info", "open", "f.writelines", "utils.logging.get_logger.warning", "os.path.join", "video_name.strip", "numpy.mean", "numpy.corrcoef", "numpy.corrcoef", "video_name.strip"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.prepare_tracker", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.get_logger", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.evaluation.OTBDataLoader.get_next_batch", "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.track_on_video"], ["", "def", "run_evaluation", "(", "rank", ",", "cfg", ")", ":", "\n", "    ", "if", "cfg", ".", "MODEL", "==", "\"siamrpn++\"", ":", "\n", "        ", "tracker", "=", "SiamRPNPPMultiNLRPN", "(", "cfg", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n", "", "if", "cfg", ".", "TRACK", ".", "DATASET", "==", "\"lasot\"", ":", "\n", "        ", "data_loader", "=", "LaSOTDataLoader", "(", "cfg", ".", "DATASET", ".", "LASOT_TEST_FILE", ",", "cfg", ".", "DATASET", ".", "LASOT_TEST_HOME", ")", "\n", "", "elif", "cfg", ".", "TRACK", ".", "DATASET", "==", "\"otb\"", ":", "\n", "        ", "data_loader", "=", "OTBDataLoader", "(", "cfg", ".", "DATASET", ".", "OTB_TEST_FILE", ",", "cfg", ".", "DATASET", ".", "OTB_TEST_HOME", ")", "\n", "", "elif", "cfg", ".", "TRACK", ".", "DATASET", "==", "\"tnl2k\"", ":", "\n", "        ", "data_loader", "=", "TNL2KDataLoader", "(", "cfg", ".", "DATASET", ".", "TNL2K_TEST_HOME", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "", "torch", ".", "cuda", ".", "set_device", "(", "rank", ")", "\n", "evaluator", "=", "Inference", "(", "cfg", ")", "\n", "tracker", "=", "evaluator", ".", "prepare_tracker", "(", "tracker", ",", "cfg", ".", "TRACK", ".", "RESTORE_FROM", ",", "rank", ")", "\n", "tracker", "=", "tracker", ".", "eval", "(", ")", "\n", "tracker", "=", "tracker", ".", "cuda", "(", ")", "\n", "dir", "=", "os", ".", "path", ".", "join", "(", "cfg", ".", "LOG_DIR", ",", "cfg", ".", "TRACK", ".", "DATASET", ",", "cfg", ".", "EXPR_NAME", ")", "\n", "os", ".", "makedirs", "(", "dir", ",", "exist_ok", "=", "True", ")", "\n", "_logger", "=", "get_logger", "(", "\"main\"", ")", "\n", "for", "idx", ",", "video_name", "in", "enumerate", "(", "data_loader", ".", "test_video_names", ")", ":", "\n", "        ", "if", "idx", "%", "cfg", ".", "NUM_GPU_PER_MACHINE", "==", "rank", ":", "\n", "            ", "try", ":", "\n", "                ", "_logger", ".", "info", "(", "\"Evaluate %s on GPU %d.\"", "%", "(", "video_name", ".", "strip", "(", ")", ",", "rank", ")", ")", "\n", "video_name", ",", "phrase", ",", "video", ",", "gt_boxes", "=", "data_loader", ".", "get_next_batch", "(", "video_name", "=", "video_name", ")", "\n", "results", "=", "evaluator", ".", "track_on_video", "(", "tracker", ",", "video", ",", "gt_boxes", ",", "phrase", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir", ",", "video_name", ".", "strip", "(", ")", "+", "\".txt\"", ")", ",", "\"w\"", ")", "as", "f", ":", "\n", "                    ", "f", ".", "writelines", "(", "results", "[", "\"boxes\"", "]", ")", "\n", "", "_logger", ".", "info", "(", "\"Mean IOU on %s: %.4f\"", "%", "(", "video_name", ",", "np", ".", "mean", "(", "results", "[", "\"ious\"", "]", ")", ")", ")", "\n", "_logger", ".", "info", "(", "\"NL Correlation is \\t %.2f\"", "%", "np", ".", "corrcoef", "(", "results", "[", "\"ious\"", "]", "[", "1", ":", "]", ",", "results", "[", "\"nl_ents\"", "]", ")", "[", "0", ",", "1", "]", ")", "\n", "_logger", ".", "info", "(", "\"VIS Correlation is \\t %.2f\"", "%", "np", ".", "corrcoef", "(", "results", "[", "\"ious\"", "]", "[", "1", ":", "]", ",", "results", "[", "\"ents\"", "]", ")", "[", "0", ",", "1", "]", ")", "\n", "", "except", "Exception", "as", "ex", ":", "\n", "                ", "_logger", ".", "warning", "(", "\"Failed: %s\"", "%", "video_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.None.configs.get_default_configs": [[117, 119], ["_C.clone"], "function", ["None"], ["def", "get_default_configs", "(", ")", ":", "\n", "    ", "return", "_C", ".", "clone", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.None.configs.get_default_anchor_configs": [[121, 123], ["_C.ANCHOR.clone"], "function", ["None"], ["", "def", "get_default_anchor_configs", "(", ")", ":", "\n", "    ", "return", "_C", ".", "ANCHOR", ".", "clone", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.TqdmToLogger.__init__": [[19, 22], ["io.StringIO.__init__", "logging.get_logger"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.get_logger"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "TqdmToLogger", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "logger", "=", "get_logger", "(", "'tqdm'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.TqdmToLogger.write": [[23, 25], ["buf.strip"], "methods", ["None"], ["", "def", "write", "(", "self", ",", "buf", ")", ":", "\n", "        ", "self", ".", "buf", "=", "buf", ".", "strip", "(", "'\\r\\n\\t '", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.TqdmToLogger.flush": [[26, 28], ["logging.TqdmToLogger.logger.info"], "methods", ["None"], ["", "def", "flush", "(", "self", ")", ":", "\n", "        ", "self", ".", "logger", ".", "info", "(", "self", ".", "buf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.get_logger": [[30, 77], ["colorlog.basicConfig", "logging.getLogger", "logging.getLogger.setLevel", "logging.getLogger.setLevel", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.getLogger.addHandler", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["", "", "def", "get_logger", "(", "logger_name", "=", "'default'", ",", "debug", "=", "False", ",", "save_to_dir", "=", "None", ")", "->", "logging", ".", "Logger", ":", "\n", "    ", "if", "debug", ":", "\n", "        ", "log_format", "=", "(", "\n", "'%(asctime)s - '", "\n", "'%(levelname)s : '", "\n", "'%(name)s - '", "\n", "'%(pathname)s[%(lineno)d]:'", "\n", "'%(funcName)s - '", "\n", "'%(message)s'", "\n", ")", "\n", "", "else", ":", "\n", "        ", "log_format", "=", "(", "\n", "'%(asctime)s - '", "\n", "'%(levelname)s : '", "\n", "'%(name)s - '", "\n", "'%(message)s'", "\n", ")", "\n", "", "bold_seq", "=", "'\\033[1m'", "\n", "colorlog_format", "=", "f'{bold_seq} %(log_color)s {log_format}'", "\n", "colorlog", ".", "basicConfig", "(", "format", "=", "colorlog_format", ",", "datefmt", "=", "'%y-%m-%d %H:%M:%S'", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", "logger_name", ")", "\n", "\n", "if", "debug", ":", "\n", "        ", "logger", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "", "else", ":", "\n", "        ", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "\n", "", "if", "save_to_dir", "is", "not", "None", ":", "\n", "        ", "fh", "=", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "save_to_dir", ",", "'log'", ",", "'debug.log'", ")", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "log_format", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "save_to_dir", ",", "'log'", ",", "'warning.log'", ")", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "WARNING", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "log_format", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n", "fh", "=", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "save_to_dir", ",", "'log'", ",", "'error.log'", ")", ")", "\n", "fh", ".", "setLevel", "(", "logging", ".", "ERROR", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "log_format", ")", "\n", "fh", ".", "setFormatter", "(", "formatter", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "\n", "", "return", "logger", "\n", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.OpticalFlowForVideo.__init__": [[20, 32], ["os.path.join", "os.path.join", "gzip.open", "pickle.load", "video_name.split", "str"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "video_name", ",", "lasot_flows", ",", "otb_flows", ")", ":", "\n", "        ", "self", ".", "video_name", "=", "video_name", "\n", "self", ".", "lasot_flows", "=", "lasot_flows", "\n", "if", "dataset", "==", "'otb'", ":", "\n", "            ", "path_to_flows", "=", "os", ".", "path", ".", "join", "(", "otb_flows", ",", "video_name", "+", "'.pklz'", ")", "\n", "", "else", ":", "\n", "            ", "object_name", "=", "video_name", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "self", ".", "index", "=", "0", "\n", "path_to_flows", "=", "os", ".", "path", ".", "join", "(", "lasot_flows", ",", "object_name", ",", "\n", "video_name", "+", "'-'", "+", "str", "(", "self", ".", "index", ")", "+", "'.pklz'", ")", "\n", "", "with", "gzip", ".", "open", "(", "path_to_flows", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "flows", "=", "pickle", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.OpticalFlowForVideo.get_optical_flow": [[33, 54], ["numpy.mean().astype", "numpy.isnan().any", "os.path.join", "numpy.array", "optical_flow.OpticalFlowForVideo.video_name.split", "gzip.open", "pickle.load", "absl.logging.warning", "numpy.array", "numpy.mean", "numpy.isnan", "max", "min", "max", "min", "str", "int", "int", "int", "int"], "methods", ["None"], ["", "", "def", "get_optical_flow", "(", "self", ",", "frame_id", ",", "bounding_box", ")", ":", "\n", "        ", "if", "'%08d'", "%", "frame_id", "in", "self", ".", "flows", ":", "\n", "            ", "flow", "=", "self", ".", "flows", "[", "'%08d'", "%", "frame_id", "]", "\n", "", "else", ":", "\n", "            ", "object_name", "=", "self", ".", "video_name", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "self", ".", "index", "+=", "1", "\n", "path_to_flows", "=", "os", ".", "path", ".", "join", "(", "self", ".", "lasot_flows", ",", "object_name", ",", "\n", "self", ".", "video_name", "+", "'-'", "+", "str", "(", "self", ".", "index", ")", "+", "'.pklz'", ")", "\n", "with", "gzip", ".", "open", "(", "path_to_flows", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "self", ".", "flows", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "if", "'%08d'", "%", "frame_id", "in", "self", ".", "flows", ":", "\n", "                ", "flow", "=", "self", ".", "flows", "[", "'%08d'", "%", "frame_id", "]", "\n", "", "else", ":", "\n", "                ", "logging", ".", "warning", "(", "'FLOW NOT FOUND: '", "+", "'%08d'", "%", "frame_id", ")", "\n", "return", "np", ".", "array", "(", "[", "0.", ",", "0.", "]", ",", "dtype", "=", "'float32'", ")", "\n", "", "", "flow_crop", "=", "flow", "[", "max", "(", "0", ",", "int", "(", "bounding_box", "[", "1", "]", ")", ")", ":", "min", "(", "flow", ".", "shape", "[", "0", "]", ",", "int", "(", "bounding_box", "[", "1", "]", "+", "bounding_box", "[", "3", "]", ")", ")", ",", "\n", "max", "(", "0", ",", "int", "(", "bounding_box", "[", "0", "]", ")", ")", ":", "min", "(", "flow", ".", "shape", "[", "1", "]", ",", "int", "(", "bounding_box", "[", "0", "]", "+", "bounding_box", "[", "2", "]", ")", ")", ",", ":", "]", "\n", "average_flow", "=", "np", ".", "mean", "(", "flow_crop", ",", "axis", "=", "(", "0", ",", "1", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "if", "np", ".", "isnan", "(", "average_flow", ")", ".", "any", "(", ")", ":", "\n", "            ", "average_flow", "=", "np", ".", "array", "(", "[", "0.", ",", "0.", "]", ",", "dtype", "=", "'float32'", ")", "\n", "", "return", "average_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.generate_flownet_inputs_for_lasot": [[56, 84], ["tqdm.tqdm", "open", "test_dataset.readlines", "tqdm.tqdm.write", "video_name.strip.strip", "video_name.strip.split", "os.path.join", "optical_flow.generate_flownet_inputs", "os.makedirs", "os.makedirs", "tqdm.tqdm.write", "subprocess.call", "optical_flow.save_flow_as_npy", "open", "first_frame_output_file.writelines", "open", "second_frame_output_file.writelines", "open", "outputs_file.writelines"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.TqdmToLogger.write", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.generate_flownet_inputs", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.TqdmToLogger.write", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.save_flow_as_npy"], ["", "", "def", "generate_flownet_inputs_for_lasot", "(", ")", ":", "\n", "    ", "with", "open", "(", "'LaSOT_testing_set'", ")", "as", "test_dataset", ":", "\n", "        ", "test_video_names", "=", "test_dataset", ".", "readlines", "(", ")", "\n", "", "for", "video_name", "in", "tqdm", "(", "test_video_names", ")", ":", "\n", "        ", "tqdm", ".", "write", "(", "video_name", ")", "\n", "video_name", "=", "video_name", ".", "strip", "(", ")", "\n", "object_name", ",", "number", "=", "video_name", ".", "split", "(", "'-'", ")", "\n", "path_to_video", "=", "os", ".", "path", ".", "join", "(", "'LaSOTBenchmark'", ",", "object_name", ",", "video_name", ")", "\n", "path_to_frames", "=", "path_to_video", "+", "'/img/'", "\n", "files", "=", "generate_flownet_inputs", "(", "path_to_frames", ",", "output_append", "=", "'/'", "+", "object_name", "+", "'/'", "+", "video_name", "+", "'/'", ")", "\n", "list_of_first_frame", "=", "files", "[", "0", "]", "\n", "list_of_second_frame", "=", "files", "[", "1", "]", "\n", "list_of_outputs", "=", "files", "[", "2", "]", "\n", "os", ".", "makedirs", "(", "'/scratch/tmp/'", "+", "video_name", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "'/scratch/flows/output/'", "+", "object_name", "+", "'/'", "+", "video_name", ",", "exist_ok", "=", "True", ")", "\n", "\n", "with", "open", "(", "'/scratch/tmp/'", "+", "video_name", "+", "'/first_frames_lasot.txt'", ",", "'w+'", ")", "as", "first_frame_output_file", ":", "\n", "            ", "first_frame_output_file", ".", "writelines", "(", "list_of_first_frame", ")", "\n", "", "with", "open", "(", "'/scratch/tmp/'", "+", "video_name", "+", "'/second_frames_lasot.txt'", ",", "'w+'", ")", "as", "second_frame_output_file", ":", "\n", "            ", "second_frame_output_file", ".", "writelines", "(", "list_of_second_frame", ")", "\n", "", "with", "open", "(", "'/scratch/tmp/'", "+", "video_name", "+", "'/outputs_lasot.txt'", ",", "'w+'", ")", "as", "outputs_file", ":", "\n", "            ", "outputs_file", ".", "writelines", "(", "list_of_outputs", ")", "\n", "", "command", "=", "'sudo /scratch/repository/flownet2-docker/run-network.sh -n FlowNet2-s -g 0 -vv '", "'/scratch/tmp/'", "+", "video_name", "+", "'/first_frames_lasot.txt /scratch/tmp/'", "+", "video_name", "+", "'/second_frames_lasot.txt /scratch/tmp/'", "+", "video_name", "+", "'/outputs_lasot.txt'", "\n", "tqdm", ".", "write", "(", "command", ")", "\n", "subprocess", ".", "call", "(", "[", "command", "]", ",", "shell", "=", "True", ")", "\n", "save_flow_as_npy", "(", "'/scratch/flows/output/'", "+", "object_name", "+", "'/'", "+", "video_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.generate_flownet_inputs_for_otb": [[86, 109], ["tqdm.tqdm", "open", "test_dataset.readlines", "tqdm.tqdm.write", "video_name.strip.strip", "optical_flow.generate_flownet_inputs", "tqdm.tqdm.write", "subprocess.call", "optical_flow.save_flow_as_npy", "open", "first_frame_output_file.writelines", "open", "second_frame_output_file.writelines", "open", "outputs_file.writelines"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.TqdmToLogger.write", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.generate_flownet_inputs", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.TqdmToLogger.write", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.save_flow_as_npy"], ["", "", "def", "generate_flownet_inputs_for_otb", "(", ")", ":", "\n", "    ", "with", "open", "(", "'otb_testing_set'", ")", "as", "test_dataset", ":", "\n", "        ", "test_video_names", "=", "test_dataset", ".", "readlines", "(", ")", "\n", "", "for", "video_name", "in", "tqdm", "(", "test_video_names", ")", ":", "\n", "        ", "tqdm", ".", "write", "(", "video_name", ")", "\n", "video_name", "=", "video_name", ".", "strip", "(", ")", "\n", "path_to_frames", "=", "'/data/otb_sentences/OTB_videos/'", "+", "video_name", "+", "'/img/'", "\n", "files", "=", "generate_flownet_inputs", "(", "path_to_frames", ",", "output_append", "=", "'/'", "+", "video_name", "+", "'/'", ")", "\n", "list_of_first_frame", "=", "files", "[", "0", "]", "\n", "list_of_second_frame", "=", "files", "[", "1", "]", "\n", "list_of_outputs", "=", "files", "[", "2", "]", "\n", "with", "open", "(", "'/scratch/tmp/'", "+", "video_name", "+", "'first_frames_otb.txt'", ",", "'w+'", ")", "as", "first_frame_output_file", ":", "\n", "            ", "first_frame_output_file", ".", "writelines", "(", "list_of_first_frame", ")", "\n", "", "with", "open", "(", "'/scratch/tmp/'", "+", "video_name", "+", "'second_frames_otb.txt'", ",", "'w+'", ")", "as", "second_frame_output_file", ":", "\n", "            ", "second_frame_output_file", ".", "writelines", "(", "list_of_second_frame", ")", "\n", "", "with", "open", "(", "'/scratch/tmp/'", "+", "video_name", "+", "'outputs_otb.txt'", ",", "'w+'", ")", "as", "outputs_file", ":", "\n", "            ", "outputs_file", ".", "writelines", "(", "list_of_outputs", ")", "\n", "", "command", "=", "'sudo /scratch/repository/flownet2-docker/run-network.sh -n FlowNet2-s -g 0 -vv '", "'/scratch/tmp/'", "+", "video_name", "+", "'first_frames_otb.txt /scratch/tmp/'", "+", "video_name", "+", "'second_frames_otb.txt /scratch/tmp/'", "+", "video_name", "+", "'outputs_otb.txt'", "\n", "tqdm", ".", "write", "(", "command", ")", "\n", "subprocess", ".", "call", "(", "[", "command", "]", ",", "shell", "=", "True", ")", "\n", "save_flow_as_npy", "(", "'/scratch/flows/output/'", "+", "video_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.save_flow_as_npy": [[111, 124], ["range", "shutil.rmtree", "os.path.join", "os.listdir", "int", "optical_flow.read_flow", "read_flow.astype", "gzip.open", "pickle.dump", "os.path.isfile", "f.endswith", "min", "re.findall", "str", "os.path.join", "len", "len"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.read_flow"], ["", "", "def", "save_flow_as_npy", "(", "path_to_flows", ")", ":", "\n", "    ", "flow_files", "=", "[", "os", ".", "path", ".", "join", "(", "path_to_flows", ",", "f", ")", "for", "f", "in", "listdir", "(", "path_to_flows", ")", "if", "\n", "isfile", "(", "join", "(", "path_to_flows", ",", "f", ")", ")", "and", "f", ".", "endswith", "(", "'flo'", ")", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "int", "(", "len", "(", "flow_files", ")", "/", "1000", ")", "+", "1", ")", ":", "\n", "        ", "flows", "=", "{", "}", "\n", "for", "flow_file", "in", "flow_files", "[", "i", "*", "1000", ":", "min", "(", "(", "i", "+", "1", ")", "*", "1000", ",", "len", "(", "flow_files", ")", ")", "]", ":", "\n", "            ", "flow", "=", "read_flow", "(", "flow_file", ")", "\n", "frame_id", "=", "re", ".", "findall", "(", "r'\\d+'", ",", "flow_file", ")", "[", "-", "1", "]", "\n", "flows", "[", "frame_id", "]", "=", "flow", ".", "astype", "(", "np", ".", "int32", ")", "\n", "", "flows_pkl", "=", "path_to_flows", "+", "'-'", "+", "str", "(", "i", ")", "+", "'.pklz'", "\n", "with", "gzip", ".", "open", "(", "flows_pkl", ",", "\"wb\"", ")", "as", "pklz", ":", "\n", "            ", "pickle", ".", "dump", "(", "flows", ",", "pklz", ")", "\n", "", "", "shutil", ".", "rmtree", "(", "path_to_flows", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.generate_flownet_inputs": [[126, 137], ["frame_files.sort", "range", "list_of_first_frame.append", "list_of_second_frame.append", "list_of_outputs.append", "os.listdir", "os.path.isfile", "len", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "generate_flownet_inputs", "(", "path_to_frames", ",", "output_append", "=", "'/'", ")", ":", "\n", "    ", "frame_files", "=", "[", "f", "for", "f", "in", "listdir", "(", "path_to_frames", ")", "if", "isfile", "(", "join", "(", "path_to_frames", ",", "f", ")", ")", "]", "\n", "frame_files", ".", "sort", "(", ")", "\n", "list_of_first_frame", "=", "[", "]", "\n", "list_of_second_frame", "=", "[", "]", "\n", "list_of_outputs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "frame_files", ")", "-", "1", ")", ":", "\n", "        ", "list_of_first_frame", ".", "append", "(", "join", "(", "path_to_frames", ",", "frame_files", "[", "i", "]", "+", "'\\n'", ")", ")", "\n", "list_of_second_frame", ".", "append", "(", "join", "(", "path_to_frames", ",", "frame_files", "[", "i", "+", "1", "]", "+", "'\\n'", ")", ")", "\n", "list_of_outputs", ".", "append", "(", "'output'", "+", "output_append", "+", "frame_files", "[", "i", "+", "1", "]", "+", "'.flo\\n'", ")", "\n", "", "return", "list_of_first_frame", ",", "list_of_second_frame", ",", "list_of_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.get_optical_flow_for_target": [[139, 149], ["os.path.join", "optical_flow.read_flow", "numpy.mean", "os.path.isfile", "path_to_frame.split", "path_to_frame.split", "path_to_frame.split", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.read_flow"], ["", "def", "get_optical_flow_for_target", "(", "path_to_frame", ",", "bounding_box", ")", ":", "\n", "    ", "path_to_flow", "=", "os", ".", "path", ".", "join", "(", "'/data/lasot_flow/'", ",", "path_to_frame", ".", "split", "(", "'/'", ")", "[", "-", "4", "]", ",", "\n", "path_to_frame", ".", "split", "(", "'/'", ")", "[", "-", "3", "]", ",", "path_to_frame", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "+", "'.flo'", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "path_to_flow", ")", ":", "\n", "        ", "return", "[", "0.", ",", "0.", "]", "\n", "", "flow", "=", "read_flow", "(", "path_to_flow", ")", "\n", "flow_crop", "=", "flow", "[", "int", "(", "bounding_box", "[", "1", "]", ")", ":", "int", "(", "bounding_box", "[", "1", "]", "+", "bounding_box", "[", "3", "]", ")", ",", "\n", "int", "(", "bounding_box", "[", "0", "]", ")", ":", "int", "(", "bounding_box", "[", "0", "]", "+", "bounding_box", "[", "2", "]", ")", ",", ":", "]", "\n", "average_flow", "=", "np", ".", "mean", "(", "flow_crop", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "return", "average_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.read_flow": [[151, 165], ["open", "numpy.fromfile", "numpy.fromfile", "numpy.fromfile", "numpy.resize", "open.close", "numpy.fromfile", "absl.logging.warning", "int", "int", "numpy.np.int32"], "function", ["None"], ["", "def", "read_flow", "(", "file", ")", ":", "\n", "    ", "f", "=", "open", "(", "file", ",", "'rb'", ")", "\n", "flo_number", "=", "np", ".", "fromfile", "(", "f", ",", "np", ".", "float32", ",", "count", "=", "1", ")", "[", "0", "]", "\n", "if", "flo_number", "!=", "TAG_FLOAT", ":", "\n", "        ", "logging", ".", "warning", "(", "file", "+", "'Flow number %r incorrect. Invalid .flo file'", "%", "flo_number", ")", "\n", "", "w", "=", "np", ".", "fromfile", "(", "f", ",", "np", ".", "int32", ",", "count", "=", "1", ")", "\n", "h", "=", "np", ".", "fromfile", "(", "f", ",", "np", ".", "int32", ",", "count", "=", "1", ")", "\n", "# if error try:", "\n", "data", "=", "np", ".", "fromfile", "(", "f", ",", "np", ".", "float32", ",", "count", "=", "2", "*", "w", "[", "0", "]", "*", "h", "[", "0", "]", ")", "\n", "# data = np.fromfile(f, np.float32, count=2 * w * h)", "\n", "# Reshape data into 3D array (columns, rows, bands)", "\n", "flow", "=", "np", ".", "resize", "(", "data", ",", "(", "int", "(", "h", ")", ",", "int", "(", "w", ")", ",", "2", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "return", "flow", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.corner2center": [[14, 31], ["isinstance", "Center"], "function", ["None"], ["def", "corner2center", "(", "corner", ")", ":", "\n", "    ", "\"\"\" convert (x1, y1, x2, y2) to (cx, cy, w, h)\n    Args:\n        conrner: Corner or np.array (4*N)\n    Return:\n        Center or np.array (4 * N)\n    \"\"\"", "\n", "if", "isinstance", "(", "corner", ",", "Corner", ")", ":", "\n", "        ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "corner", "\n", "return", "Center", "(", "(", "x1", "+", "x2", ")", "*", "0.5", ",", "(", "y1", "+", "y2", ")", "*", "0.5", ",", "(", "x2", "-", "x1", ")", ",", "(", "y2", "-", "y1", ")", ")", "\n", "", "else", ":", "\n", "        ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "corner", "[", "0", "]", ",", "corner", "[", "1", "]", ",", "corner", "[", "2", "]", ",", "corner", "[", "3", "]", "\n", "x", "=", "(", "x1", "+", "x2", ")", "*", "0.5", "\n", "y", "=", "(", "y1", "+", "y2", ")", "*", "0.5", "\n", "w", "=", "x2", "-", "x1", "\n", "h", "=", "y2", "-", "y1", "\n", "return", "x", ",", "y", ",", "w", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.center2corner": [[33, 50], ["isinstance", "Corner", "numpy.array"], "function", ["None"], ["", "", "def", "center2corner", "(", "center", ")", ":", "\n", "    ", "\"\"\" convert (cx, cy, w, h) to (x1, y1, x2, y2)\n    Args:\n        center: Center or np.array (4 * N)\n    Return:\n        center or np.array (4 * N)\n    \"\"\"", "\n", "if", "isinstance", "(", "center", ",", "Center", ")", ":", "\n", "        ", "x", ",", "y", ",", "w", ",", "h", "=", "center", "\n", "return", "Corner", "(", "x", "-", "w", "*", "0.5", ",", "y", "-", "h", "*", "0.5", ",", "x", "+", "w", "*", "0.5", ",", "y", "+", "h", "*", "0.5", ")", "\n", "", "else", ":", "\n", "        ", "x", ",", "y", ",", "w", ",", "h", "=", "center", "[", "0", "]", ",", "center", "[", "1", "]", ",", "center", "[", "2", "]", ",", "center", "[", "3", "]", "\n", "x1", "=", "x", "-", "w", "*", "0.5", "\n", "y1", "=", "y", "-", "h", "*", "0.5", "\n", "x2", "=", "x", "+", "w", "*", "0.5", "\n", "y2", "=", "y", "+", "h", "*", "0.5", "\n", "return", "np", ".", "array", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.IoU": [[52, 76], ["numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum"], "function", ["None"], ["", "", "def", "IoU", "(", "rect1", ",", "rect2", ")", ":", "\n", "    ", "\"\"\" caculate interection over union\n    Args:\n        rect1: (x1, y1, x2, y2)\n        rect2: (x1, y1, x2, y2)\n    Returns:\n        iou\n    \"\"\"", "\n", "# overlap", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "rect1", "[", "0", "]", ",", "rect1", "[", "1", "]", ",", "rect1", "[", "2", "]", ",", "rect1", "[", "3", "]", "\n", "tx1", ",", "ty1", ",", "tx2", ",", "ty2", "=", "rect2", "[", "0", "]", ",", "rect2", "[", "1", "]", ",", "rect2", "[", "2", "]", ",", "rect2", "[", "3", "]", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "tx1", ",", "x1", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "ty1", ",", "y1", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "tx2", ",", "x2", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "ty2", ",", "y2", ")", "\n", "\n", "ww", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "hh", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "target_a", "=", "(", "tx2", "-", "tx1", ")", "*", "(", "ty2", "-", "ty1", ")", "\n", "inter", "=", "ww", "*", "hh", "\n", "iou", "=", "inter", "/", "(", "area", "+", "target_a", "-", "inter", ")", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.cxy_wh_2_rect": [[78, 82], ["numpy.array"], "function", ["None"], ["", "def", "cxy_wh_2_rect", "(", "pos", ",", "sz", ")", ":", "\n", "    ", "\"\"\" convert (cx, cy, w, h) to (x1, y1, w, h), 0-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "pos", "[", "0", "]", "-", "sz", "[", "0", "]", "/", "2", ",", "pos", "[", "1", "]", "-", "sz", "[", "1", "]", "/", "2", ",", "sz", "[", "0", "]", ",", "sz", "[", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.rect_2_cxy_wh": [[84, 89], ["numpy.array", "numpy.array"], "function", ["None"], ["", "def", "rect_2_cxy_wh", "(", "rect", ")", ":", "\n", "    ", "\"\"\" convert (x1, y1, w, h) to (cx, cy, w, h), 0-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "rect", "[", "0", "]", "+", "rect", "[", "2", "]", "/", "2", ",", "rect", "[", "1", "]", "+", "rect", "[", "3", "]", "/", "2", "]", ")", ",", "np", ".", "array", "(", "[", "rect", "[", "2", "]", ",", "rect", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.cxy_wh_2_rect1": [[91, 95], ["numpy.array"], "function", ["None"], ["", "def", "cxy_wh_2_rect1", "(", "pos", ",", "sz", ")", ":", "\n", "    ", "\"\"\" convert (cx, cy, w, h) to (x1, y1, w, h), 1-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "pos", "[", "0", "]", "-", "sz", "[", "0", "]", "/", "2", "+", "1", ",", "pos", "[", "1", "]", "-", "sz", "[", "1", "]", "/", "2", "+", "1", ",", "sz", "[", "0", "]", ",", "sz", "[", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.rect1_2_cxy_wh": [[97, 102], ["numpy.array", "numpy.array"], "function", ["None"], ["", "def", "rect1_2_cxy_wh", "(", "rect", ")", ":", "\n", "    ", "\"\"\" convert (x1, y1, w, h) to (cx, cy, w, h), 1-index\n    \"\"\"", "\n", "return", "np", ".", "array", "(", "[", "rect", "[", "0", "]", "+", "rect", "[", "2", "]", "/", "2", "-", "1", ",", "rect", "[", "1", "]", "+", "rect", "[", "3", "]", "/", "2", "-", "1", "]", ")", ",", "np", ".", "array", "(", "[", "rect", "[", "2", "]", ",", "rect", "[", "3", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.get_axis_aligned_bbox": [[104, 129], ["numpy.mean", "numpy.mean", "min", "max", "min", "max", "numpy.sqrt", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["None"], ["", "def", "get_axis_aligned_bbox", "(", "region", ")", ":", "\n", "    ", "\"\"\" convert region to (cx, cy, w, h) that represent by axis aligned box\n    \"\"\"", "\n", "nv", "=", "region", ".", "size", "\n", "if", "nv", "==", "8", ":", "\n", "        ", "cx", "=", "np", ".", "mean", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "cy", "=", "np", ".", "mean", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "x1", "=", "min", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "x2", "=", "max", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "y1", "=", "min", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "y2", "=", "max", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "A1", "=", "np", ".", "linalg", ".", "norm", "(", "region", "[", "0", ":", "2", "]", "-", "region", "[", "2", ":", "4", "]", ")", "*", "np", ".", "linalg", ".", "norm", "(", "region", "[", "2", ":", "4", "]", "-", "region", "[", "4", ":", "6", "]", ")", "\n", "A2", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "s", "=", "np", ".", "sqrt", "(", "A1", "/", "A2", ")", "\n", "w", "=", "s", "*", "(", "x2", "-", "x1", ")", "+", "1", "\n", "h", "=", "s", "*", "(", "y2", "-", "y1", ")", "+", "1", "\n", "", "else", ":", "\n", "        ", "x", "=", "region", "[", "0", "]", "\n", "y", "=", "region", "[", "1", "]", "\n", "w", "=", "region", "[", "2", "]", "\n", "h", "=", "region", "[", "3", "]", "\n", "cx", "=", "x", "+", "w", "/", "2", "\n", "cy", "=", "y", "+", "h", "/", "2", "\n", "", "return", "cx", ",", "cy", ",", "w", ",", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.get_min_max_bbox": [[131, 152], ["numpy.mean", "numpy.mean", "min", "max", "min", "max"], "function", ["None"], ["", "def", "get_min_max_bbox", "(", "region", ")", ":", "\n", "    ", "\"\"\" convert region to (cx, cy, w, h) that represent by mim-max box\n    \"\"\"", "\n", "nv", "=", "region", ".", "size", "\n", "if", "nv", "==", "8", ":", "\n", "        ", "cx", "=", "np", ".", "mean", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "cy", "=", "np", ".", "mean", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "x1", "=", "min", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "x2", "=", "max", "(", "region", "[", "0", ":", ":", "2", "]", ")", "\n", "y1", "=", "min", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "y2", "=", "max", "(", "region", "[", "1", ":", ":", "2", "]", ")", "\n", "w", "=", "x2", "-", "x1", "\n", "h", "=", "y2", "-", "y1", "\n", "", "else", ":", "\n", "        ", "x", "=", "region", "[", "0", "]", "\n", "y", "=", "region", "[", "1", "]", "\n", "w", "=", "region", "[", "2", "]", "\n", "h", "=", "region", "[", "3", "]", "\n", "cx", "=", "x", "+", "w", "/", "2", "\n", "cy", "=", "y", "+", "h", "/", "2", "\n", "", "return", "cx", ",", "cy", ",", "w", ",", "h", "\n", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.anchor.Anchors.__init__": [[22, 34], ["anchor.Anchors.generate_anchors", "len", "len"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.anchor.Anchors.generate_anchors"], ["def", "__init__", "(", "self", ",", "stride", ",", "ratios", ",", "scales", ",", "image_center", "=", "0", ",", "size", "=", "0", ")", ":", "\n", "        ", "self", ".", "stride", "=", "stride", "\n", "self", ".", "ratios", "=", "ratios", "\n", "self", ".", "scales", "=", "scales", "\n", "self", ".", "image_center", "=", "image_center", "\n", "self", ".", "size", "=", "size", "\n", "\n", "self", ".", "anchor_num", "=", "len", "(", "self", ".", "scales", ")", "*", "len", "(", "self", ".", "ratios", ")", "\n", "\n", "self", ".", "anchors", "=", "None", "\n", "\n", "self", ".", "generate_anchors", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.anchor.Anchors.generate_anchors": [[35, 51], ["numpy.zeros", "int", "int", "math.sqrt"], "methods", ["None"], ["", "def", "generate_anchors", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        generate anchors based on predefined configuration\n        \"\"\"", "\n", "self", ".", "anchors", "=", "np", ".", "zeros", "(", "(", "self", ".", "anchor_num", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "size", "=", "self", ".", "stride", "*", "self", ".", "stride", "\n", "count", "=", "0", "\n", "for", "r", "in", "self", ".", "ratios", ":", "\n", "            ", "ws", "=", "int", "(", "math", ".", "sqrt", "(", "size", "*", "1.", "/", "r", ")", ")", "\n", "hs", "=", "int", "(", "ws", "*", "r", ")", "\n", "\n", "for", "s", "in", "self", ".", "scales", ":", "\n", "                ", "w", "=", "ws", "*", "s", "\n", "h", "=", "hs", "*", "s", "\n", "self", ".", "anchors", "[", "count", "]", "[", ":", "]", "=", "[", "-", "w", "*", "0.5", ",", "-", "h", "*", "0.5", ",", "w", "*", "0.5", ",", "h", "*", "0.5", "]", "[", ":", "]", "\n", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.anchor.Anchors.generate_all_anchors": [[52, 89], ["numpy.array", "map", "utils.bbox.corner2center", "numpy.zeros", "map", "utils.bbox.center2corner", "numpy.arange().reshape", "numpy.arange().reshape", "numpy.stack().astype", "numpy.stack().astype", "x.reshape", "numpy.arange", "numpy.arange", "numpy.stack", "numpy.stack"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.corner2center", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.center2corner"], ["", "", "", "def", "generate_all_anchors", "(", "self", ",", "im_c", ",", "size", ")", ":", "\n", "        ", "\"\"\"\n        im_c: image center\n        size: image size\n        \"\"\"", "\n", "if", "self", ".", "image_center", "==", "im_c", "and", "self", ".", "size", "==", "size", ":", "\n", "            ", "return", "False", "\n", "", "self", ".", "image_center", "=", "im_c", "\n", "self", ".", "size", "=", "size", "\n", "\n", "a0x", "=", "im_c", "-", "size", "//", "2", "*", "self", ".", "stride", "\n", "ori", "=", "np", ".", "array", "(", "[", "a0x", "]", "*", "4", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "zero_anchors", "=", "self", ".", "anchors", "+", "ori", "\n", "\n", "x1", "=", "zero_anchors", "[", ":", ",", "0", "]", "\n", "y1", "=", "zero_anchors", "[", ":", ",", "1", "]", "\n", "x2", "=", "zero_anchors", "[", ":", ",", "2", "]", "\n", "y2", "=", "zero_anchors", "[", ":", ",", "3", "]", "\n", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "map", "(", "lambda", "x", ":", "x", ".", "reshape", "(", "self", ".", "anchor_num", ",", "1", ",", "1", ")", ",", "\n", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "corner2center", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "\n", "disp_x", "=", "np", ".", "arange", "(", "0", ",", "size", ")", ".", "reshape", "(", "1", ",", "1", ",", "-", "1", ")", "*", "self", ".", "stride", "\n", "disp_y", "=", "np", ".", "arange", "(", "0", ",", "size", ")", ".", "reshape", "(", "1", ",", "-", "1", ",", "1", ")", "*", "self", ".", "stride", "\n", "\n", "cx", "=", "cx", "+", "disp_x", "\n", "cy", "=", "cy", "+", "disp_y", "\n", "\n", "# broadcast", "\n", "zero", "=", "np", ".", "zeros", "(", "(", "self", ".", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "map", "(", "lambda", "x", ":", "x", "+", "zero", ",", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "center2corner", "(", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", "\n", "\n", "self", ".", "all_anchors", "=", "(", "np", ".", "stack", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", ",", "\n", "np", ".", "stack", "(", "[", "cx", ",", "cy", ",", "w", ",", "h", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.anchor.AnchorTarget.__init__": [[92, 100], ["anchor.Anchors", "anchor.AnchorTarget.anchors.generate_all_anchors", "configs.get_default_anchor_configs"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.anchor.Anchors.generate_all_anchors", "home.repos.pwc.inspect_result.fredfung007_snlt.None.configs.get_default_anchor_configs"], ["    ", "def", "__init__", "(", "self", ",", "search_size", ",", "output_size", ",", "anchor_cfg", "=", "None", ")", ":", "\n", "        ", "if", "anchor_cfg", "is", "None", ":", "\n", "            ", "anchor_cfg", "=", "get_default_anchor_configs", "(", ")", "\n", "", "self", ".", "anchors", "=", "Anchors", "(", "anchor_cfg", ".", "STRIDE", ",", "anchor_cfg", ".", "RATIOS", ",", "anchor_cfg", ".", "SCALES", ")", "\n", "self", ".", "anchors", ".", "generate_all_anchors", "(", "im_c", "=", "search_size", "//", "2", ",", "size", "=", "output_size", ")", "\n", "self", ".", "anchor_cfg", "=", "anchor_cfg", "\n", "self", ".", "search_size", "=", "search_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.anchor.AnchorTarget.__call__": [[101, 166], ["utils.bbox.corner2center", "numpy.zeros", "numpy.zeros", "utils.bbox.IoU", "numpy.where", "numpy.where", "anchor.AnchorTarget.__call__.select"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.corner2center", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.IoU"], ["", "def", "__call__", "(", "self", ",", "target", ",", "size", ",", "neg", "=", "False", ",", "is_fc", "=", "False", ")", ":", "\n", "        ", "tcx", ",", "tcy", ",", "tw", ",", "th", "=", "corner2center", "(", "target", ")", "\n", "anchor_num", "=", "len", "(", "self", ".", "anchor_cfg", ".", "RATIOS", ")", "*", "len", "(", "self", ".", "anchor_cfg", ".", "SCALES", ")", "\n", "\n", "# -1 ignore 0 negative 1 positive", "\n", "cls", "=", "-", "1", "*", "np", ".", "ones", "(", "(", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "delta", "=", "np", ".", "zeros", "(", "(", "4", ",", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "delta_weight", "=", "np", ".", "zeros", "(", "(", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "def", "select", "(", "position", ",", "keep_num", "=", "16", ")", ":", "\n", "            ", "num", "=", "position", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "if", "num", "<=", "keep_num", ":", "\n", "                ", "return", "position", ",", "num", "\n", "", "slt", "=", "np", ".", "arange", "(", "num", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "slt", ")", "\n", "slt", "=", "slt", "[", ":", "keep_num", "]", "\n", "return", "tuple", "(", "p", "[", "slt", "]", "for", "p", "in", "position", ")", ",", "keep_num", "\n", "\n", "", "if", "neg", ":", "\n", "            ", "cx", "=", "size", "//", "2", "\n", "cy", "=", "size", "//", "2", "\n", "cx", "+=", "int", "(", "np", ".", "ceil", "(", "(", "tcx", "-", "self", ".", "search_size", "//", "2", ")", "/", "self", ".", "anchor_cfg", ".", "STRIDE", "+", "0.5", ")", ")", "\n", "cy", "+=", "int", "(", "np", ".", "ceil", "(", "(", "tcy", "-", "self", ".", "search_size", "//", "2", ")", "/", "self", ".", "anchor_cfg", ".", "STRIDE", "+", "0.5", ")", ")", "\n", "l", "=", "max", "(", "0", ",", "cx", "-", "3", ")", "\n", "r", "=", "min", "(", "size", ",", "cx", "+", "4", ")", "\n", "u", "=", "max", "(", "0", ",", "cy", "-", "3", ")", "\n", "d", "=", "min", "(", "size", ",", "cy", "+", "4", ")", "\n", "cls", "[", ":", ",", "u", ":", "d", ",", "l", ":", "r", "]", "=", "0", "\n", "\n", "neg", ",", "neg_num", "=", "select", "(", "np", ".", "where", "(", "cls", "==", "0", ")", ",", "self", ".", "anchor_cfg", ".", "NEG_NUM", ")", "\n", "cls", "[", ":", "]", "=", "-", "1", "\n", "cls", "[", "neg", "]", "=", "0", "\n", "\n", "overlap", "=", "np", ".", "zeros", "(", "(", "anchor_num", ",", "size", ",", "size", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "cls", ",", "delta", ",", "delta_weight", ",", "overlap", "\n", "\n", "", "anchor_box", "=", "self", ".", "anchors", ".", "all_anchors", "[", "0", "]", "\n", "anchor_center", "=", "self", ".", "anchors", ".", "all_anchors", "[", "1", "]", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "anchor_box", "[", "0", "]", ",", "anchor_box", "[", "1", "]", ",", "anchor_box", "[", "2", "]", ",", "anchor_box", "[", "3", "]", "\n", "cx", ",", "cy", ",", "w", ",", "h", "=", "anchor_center", "[", "0", "]", ",", "anchor_center", "[", "1", "]", ",", "anchor_center", "[", "2", "]", ",", "anchor_center", "[", "3", "]", "\n", "\n", "delta", "[", "0", "]", "=", "(", "tcx", "-", "cx", ")", "/", "w", "\n", "delta", "[", "1", "]", "=", "(", "tcy", "-", "cy", ")", "/", "h", "\n", "with", "np", ".", "errstate", "(", "invalid", "=", "'raise'", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "delta", "[", "2", "]", "=", "np", ".", "log", "(", "tw", "/", "w", ")", "\n", "delta", "[", "3", "]", "=", "np", ".", "log", "(", "th", "/", "h", ")", "\n", "", "except", "Exception", ":", "\n", "                ", "_logger", ".", "warning", "(", "'Invalid value encountered in log. [ANCHOR TARGET ENCODING]'", ")", "\n", "delta", "[", "2", "]", "=", "np", ".", "zeros_like", "(", "w", ")", "\n", "delta", "[", "3", "]", "=", "np", ".", "zeros_like", "(", "h", ")", "\n", "\n", "", "", "overlap", "=", "IoU", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ",", "target", ")", "\n", "\n", "pos", "=", "np", ".", "where", "(", "overlap", ">", "self", ".", "anchor_cfg", ".", "THR_HIGH", ")", "\n", "neg", "=", "np", ".", "where", "(", "overlap", "<", "self", ".", "anchor_cfg", ".", "THR_LOW", ")", "\n", "\n", "pos", ",", "pos_num", "=", "select", "(", "pos", ",", "self", ".", "anchor_cfg", ".", "POS_NUM", ")", "\n", "neg", ",", "neg_num", "=", "select", "(", "neg", ",", "self", ".", "anchor_cfg", ".", "TOTAL_NUM", "-", "self", ".", "anchor_cfg", ".", "POS_NUM", ")", "\n", "\n", "cls", "[", "pos", "]", "=", "1", "\n", "delta_weight", "[", "pos", "]", "=", "1.", "/", "(", "pos_num", "+", "1e-6", ")", "\n", "\n", "cls", "[", "neg", "]", "=", "0", "\n", "return", "cls", ",", "delta", ",", "delta_weight", ",", "overlap", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.compute_difference_between": [[19, 34], ["absl.logging.info", "tracking_inference._compute_distance"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference._compute_distance"], ["", "def", "compute_difference_between", "(", "templates", ",", "new_template", ",", "margin", ")", ":", "\n", "    ", "\"\"\"\n\n    :param templates: history of template patches (convolution feat map).\n    :param new_template: high confidence new detection patch ready to add into the history (convolution feat map).\n    :param margin: NL initialized margin\n    :return:\n    \"\"\"", "\n", "min_distance", "=", "sys", ".", "float_info", ".", "max", "\n", "for", "existing_template", "in", "templates", ":", "\n", "        ", "distance", "=", "_compute_distance", "(", "existing_template", ",", "new_template", ")", "\n", "if", "distance", "<", "min_distance", ":", "\n", "            ", "min_distance", "=", "distance", "\n", "", "", "logging", ".", "info", "(", "min_distance", ")", "\n", "return", "min_distance", ">", "margin", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference._compute_distance": [[36, 47], ["range", "numpy.mean", "len", "distance.append", "torch.norm().cpu().numpy", "torch.norm().cpu", "torch.norm"], "function", ["None"], ["", "def", "_compute_distance", "(", "template1", ",", "template2", ")", ":", "\n", "    ", "\"\"\"\n    Distance between two list of convolution feature maps.\n    :param template1: [(1,16,16,256),(1,16,16,256),(1,16,16,256)] Feature Map.\n    :param template2: [(1,16,16,256),(1,16,16,256),(1,16,16,256)] Feature Map.\n    :return:\n    \"\"\"", "\n", "distance", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "template1", ")", ")", ":", "\n", "        ", "distance", ".", "append", "(", "torch", ".", "norm", "(", "template1", "[", "i", "]", "-", "template2", "[", "i", "]", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "return", "np", ".", "mean", "(", "distance", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.change": [[49, 51], ["numpy.maximum"], "function", ["None"], ["", "def", "change", "(", "r", ")", ":", "\n", "    ", "return", "np", ".", "maximum", "(", "r", ",", "1.", "/", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.compute_size": [[53, 56], ["numpy.sqrt"], "function", ["None"], ["", "def", "compute_size", "(", "w", ",", "h", ")", ":", "\n", "    ", "pad", "=", "(", "w", "+", "h", ")", "*", "0.5", "\n", "return", "np", ".", "sqrt", "(", "(", "w", "+", "pad", ")", "*", "(", "h", "+", "pad", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.get_subwindow_pyramid": [[58, 62], ["tracking_inference.get_subwindow"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.get_subwindow"], ["", "def", "get_subwindow_pyramid", "(", "im", ",", "pos", ",", "model_sz", ",", "size_x_scales", ",", "avg_chans", ")", ":", "\n", "    ", "pyramid", "=", "[", "get_subwindow", "(", "im", ",", "pos", ",", "model_sz", ",", "size_x_scale", ",", "avg_chans", ")", "\n", "for", "size_x_scale", "in", "size_x_scales", "]", "\n", "return", "pyramid", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.get_subwindow": [[64, 115], ["int", "numpy.floor", "numpy.floor", "int", "int", "int", "int", "any", "cv2.resize", "im_patch.cuda.transpose", "im_patch.cuda.astype", "torch.from_numpy", "im_patch.cuda.cuda", "max", "max", "max", "max", "numpy.zeros", "int", "int", "int", "int", "int", "int", "int", "int"], "function", ["None"], ["", "def", "get_subwindow", "(", "im", ",", "pos", ",", "crop_size", ",", "scale_z", ",", "avg_chans", ")", ":", "\n", "    ", "\"\"\"\n    args:\n        im: bgr based image\n        pos: center position\n        model_sz: exemplar size\n        s_z: original size\n        avg_chans: channel average\n    \"\"\"", "\n", "h", ",", "w", ",", "k", "=", "im", ".", "shape", "\n", "original_size", "=", "crop_size", "/", "scale_z", "\n", "c", "=", "int", "(", "(", "original_size", "+", "1", ")", "/", "2.", ")", "\n", "context_xmin", "=", "np", ".", "floor", "(", "pos", "[", "0", "]", "-", "c", "+", "0.5", ")", "\n", "context_xmax", "=", "context_xmin", "+", "original_size", "-", "1", "\n", "context_ymin", "=", "np", ".", "floor", "(", "pos", "[", "1", "]", "-", "c", "+", "0.5", ")", "\n", "context_ymax", "=", "context_ymin", "+", "original_size", "-", "1", "\n", "left_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_xmin", ")", ")", "\n", "top_pad", "=", "int", "(", "max", "(", "0.", ",", "-", "context_ymin", ")", ")", "\n", "right_pad", "=", "int", "(", "max", "(", "0.", ",", "context_xmax", "-", "w", "+", "1", ")", ")", "\n", "bottom_pad", "=", "int", "(", "max", "(", "0.", ",", "context_ymax", "-", "h", "+", "1", ")", ")", "\n", "\n", "context_xmin", "=", "context_xmin", "+", "left_pad", "\n", "context_xmax", "=", "context_xmax", "+", "left_pad", "\n", "context_ymin", "=", "context_ymin", "+", "top_pad", "\n", "context_ymax", "=", "context_ymax", "+", "top_pad", "\n", "\n", "if", "any", "(", "[", "top_pad", ",", "bottom_pad", ",", "left_pad", ",", "right_pad", "]", ")", ":", "\n", "        ", "size", "=", "(", "h", "+", "top_pad", "+", "bottom_pad", ",", "w", "+", "left_pad", "+", "right_pad", ",", "k", ")", "\n", "te_im", "=", "np", ".", "zeros", "(", "size", ",", "np", ".", "uint8", ")", "\n", "te_im", "[", "top_pad", ":", "top_pad", "+", "h", ",", "left_pad", ":", "left_pad", "+", "w", ",", ":", "]", "=", "im", "\n", "if", "top_pad", ":", "\n", "            ", "te_im", "[", "0", ":", "top_pad", ",", "left_pad", ":", "left_pad", "+", "w", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "bottom_pad", ":", "\n", "            ", "te_im", "[", "h", "+", "top_pad", ":", ",", "left_pad", ":", "left_pad", "+", "w", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "left_pad", ":", "\n", "            ", "te_im", "[", ":", ",", "0", ":", "left_pad", ",", ":", "]", "=", "avg_chans", "\n", "", "if", "right_pad", ":", "\n", "            ", "te_im", "[", ":", ",", "w", "+", "left_pad", ":", ",", ":", "]", "=", "avg_chans", "\n", "", "im_patch", "=", "te_im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "", "else", ":", "\n", "        ", "im_patch", "=", "im", "[", "int", "(", "context_ymin", ")", ":", "int", "(", "context_ymax", "+", "1", ")", ",", "\n", "int", "(", "context_xmin", ")", ":", "int", "(", "context_xmax", "+", "1", ")", ",", ":", "]", "\n", "\n", "", "im_patch", "=", "cv2", ".", "resize", "(", "im_patch", ",", "(", "crop_size", ",", "crop_size", ")", ")", "\n", "im_patch", "=", "im_patch", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "im_patch", "=", "im_patch", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "im_patch", "=", "im_patch", ".", "astype", "(", "np", ".", "float32", ")", "\n", "im_patch", "=", "torch", ".", "from_numpy", "(", "im_patch", ")", "\n", "im_patch", "=", "im_patch", ".", "cuda", "(", ")", "\n", "return", "im_patch", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.convert_score": [[117, 120], ["torch.nn.functional.softmax"], "function", ["None"], ["", "def", "convert_score", "(", "score", ")", ":", "\n", "    ", "score", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "score", "[", "0", "]", ",", "dim", "=", "-", "1", ")", "[", ":", ",", ":", ",", ":", ",", "1", "]", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.convert_bbox": [[122, 130], ["delta[].view().cpu().numpy", "numpy.exp", "numpy.exp", "delta[].view().cpu", "delta[].view"], "function", ["None"], ["", "def", "convert_bbox", "(", "delta", ",", "anchor", ")", ":", "\n", "    ", "b", ",", "_", ",", "sh", ",", "sw", "=", "delta", ".", "shape", "\n", "delta", "=", "delta", "[", "0", "]", ".", "view", "(", "4", ",", "-", "1", ",", "sh", ",", "sw", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "delta", "[", "0", ",", ":", "]", "=", "delta", "[", "0", ",", ":", "]", "*", "anchor", "[", "2", ",", ":", "]", "+", "anchor", "[", "0", ",", ":", "]", "\n", "delta", "[", "1", ",", ":", "]", "=", "delta", "[", "1", ",", ":", "]", "*", "anchor", "[", "3", ",", ":", "]", "+", "anchor", "[", "1", ",", ":", "]", "\n", "delta", "[", "2", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "2", ",", ":", "]", ")", "*", "anchor", "[", "2", ",", ":", "]", "\n", "delta", "[", "3", ",", ":", "]", "=", "np", ".", "exp", "(", "delta", "[", "3", ",", ":", "]", ")", "*", "anchor", "[", "3", ",", ":", "]", "\n", "return", "delta", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.bbox_clip": [[132, 138], ["max", "max", "max", "max", "min", "min", "min", "min"], "function", ["None"], ["", "def", "bbox_clip", "(", "cx", ",", "cy", ",", "width", ",", "height", ",", "boundary", ")", ":", "\n", "    ", "cx", "=", "max", "(", "0", ",", "min", "(", "cx", ",", "boundary", "[", "1", "]", ")", ")", "\n", "cy", "=", "max", "(", "0", ",", "min", "(", "cy", ",", "boundary", "[", "0", "]", ")", ")", "\n", "width", "=", "max", "(", "10", ",", "min", "(", "width", ",", "boundary", "[", "1", "]", ")", ")", "\n", "height", "=", "max", "(", "10", ",", "min", "(", "height", ",", "boundary", "[", "0", "]", ")", ")", "\n", "return", "cx", ",", "cy", ",", "width", ",", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.log_softmax": [[140, 146], ["torch.nn.functional.log_softmax.size", "torch.nn.functional.log_softmax.view", "torch.nn.functional.log_softmax.permute().contiguous", "torch.nn.functional.log_softmax", "torch.nn.functional.log_softmax.permute"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.log_softmax"], ["", "def", "log_softmax", "(", "cls", ")", ":", "\n", "    ", "b", ",", "a2", ",", "h", ",", "w", "=", "cls", ".", "size", "(", ")", "\n", "cls", "=", "cls", ".", "view", "(", "b", ",", "2", ",", "a2", "//", "2", ",", "h", ",", "w", ")", "\n", "cls", "=", "cls", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "4", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "cls", "=", "torch", ".", "nn", ".", "functional", ".", "log_softmax", "(", "cls", ",", "dim", "=", "4", ")", "\n", "return", "cls", "\n", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.utils.__init__.check_keys": [[6, 27], ["set", "set", "pretrained_state_dict.keys", "model.state_dict().keys", "absl.logging.info", "len", "absl.logging.warning", "absl.logging.warning", "len", "absl.logging.warning", "absl.logging.warning", "input", "len", "absl.logging.error", "input", "model.state_dict", "x.endswith", "len", "len", "len"], "function", ["None"], ["def", "check_keys", "(", "model", ",", "pretrained_state_dict", ",", "rank", ")", ":", "\n", "    ", "ckpt_keys", "=", "set", "(", "pretrained_state_dict", ".", "keys", "(", ")", ")", "\n", "model_keys", "=", "set", "(", "model", ".", "state_dict", "(", ")", ".", "keys", "(", ")", ")", "\n", "used_pretrained_keys", "=", "model_keys", "&", "ckpt_keys", "\n", "unused_pretrained_keys", "=", "ckpt_keys", "-", "model_keys", "\n", "missing_keys", "=", "model_keys", "-", "ckpt_keys", "\n", "missing_keys", "=", "[", "x", "for", "x", "in", "missing_keys", "if", "not", "x", ".", "endswith", "(", "'num_batches_tracked'", ")", "]", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "        ", "if", "len", "(", "missing_keys", ")", ">", "0", ":", "\n", "            ", "logging", ".", "warning", "(", "'MISSING KEYS: {}'", ".", "format", "(", "missing_keys", ")", ")", "\n", "logging", ".", "warning", "(", "'MISSING KEYS: {}'", ".", "format", "(", "len", "(", "missing_keys", ")", ")", ")", "\n", "", "if", "len", "(", "unused_pretrained_keys", ")", ">", "0", ":", "\n", "            ", "logging", ".", "warning", "(", "'UNUSED_PRETRAINED_KEYS: {}'", ".", "format", "(", "unused_pretrained_keys", ")", ")", "\n", "logging", ".", "warning", "(", "'UNUSED CHECKPOINT KEYS: {}'", ".", "format", "(", "len", "(", "unused_pretrained_keys", ")", ")", ")", "\n", "input", "(", "'CONFIRM CONTINUE...'", ")", "\n", "", "logging", ".", "info", "(", "'USED KEYS: {}'", ".", "format", "(", "len", "(", "used_pretrained_keys", ")", ")", ")", "\n", "if", "len", "(", "used_pretrained_keys", ")", "==", "0", ":", "\n", "            ", "logging", ".", "error", "(", "'LOAD NONE FROM PRE-TRAINED CHECKPOINT'", ")", "\n", "input", "(", "'CONFIRM CONTINUE...'", ")", "\n", "", "", "return", "True", "\n", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.BasicBlock.__init__": [[18, 41], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "resnet_atrous.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__", "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "\n", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "padding", "=", "2", "-", "stride", "\n", "\n", "if", "dilation", ">", "1", ":", "\n", "            ", "padding", "=", "dilation", "\n", "\n", "", "dd", "=", "dilation", "\n", "pad", "=", "padding", "\n", "if", "downsample", "is", "not", "None", "and", "dilation", ">", "1", ":", "\n", "            ", "dd", "=", "dilation", "//", "2", "\n", "pad", "=", "dd", "\n", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "\n", "stride", "=", "stride", ",", "dilation", "=", "dd", ",", "bias", "=", "False", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "pad", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.BasicBlock.forward": [[42, 59], ["resnet_atrous.BasicBlock.conv1", "resnet_atrous.BasicBlock.bn1", "resnet_atrous.BasicBlock.relu", "resnet_atrous.BasicBlock.conv2", "resnet_atrous.BasicBlock.bn2", "resnet_atrous.BasicBlock.relu", "resnet_atrous.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.Bottleneck.__init__": [[64, 87], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "\n", "downsample", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "padding", "=", "2", "-", "stride", "\n", "if", "downsample", "is", "not", "None", "and", "dilation", ">", "1", ":", "\n", "            ", "dilation", "=", "dilation", "//", "2", "\n", "padding", "=", "dilation", "\n", "\n", "", "assert", "stride", "==", "1", "or", "dilation", "==", "1", ",", "\"stride and dilation must have one equals to zero at least\"", "\n", "\n", "if", "dilation", ">", "1", ":", "\n", "            ", "padding", "=", "dilation", "\n", "", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.Bottleneck.forward": [[88, 110], ["resnet_atrous.Bottleneck.conv1", "resnet_atrous.Bottleneck.bn1", "resnet_atrous.Bottleneck.relu", "resnet_atrous.Bottleneck.conv2", "resnet_atrous.Bottleneck.bn2", "resnet_atrous.Bottleneck.relu", "resnet_atrous.Bottleneck.conv3", "resnet_atrous.Bottleneck.bn3", "resnet_atrous.Bottleneck.relu", "resnet_atrous.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.ResNet.__init__": [[113, 150], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet_atrous.ResNet._make_layer", "resnet_atrous.ResNet._make_layer", "resnet_atrous.ResNet.modules", "resnet_atrous.ResNet._make_layer", "resnet_atrous.ResNet._make_layer", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__", "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.ResNet._make_layer", "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.ResNet._make_layer", "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.ResNet._make_layer", "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "used_layers", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "# 3", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "feature_size", "=", "128", "*", "block", ".", "expansion", "\n", "self", ".", "used_layers", "=", "used_layers", "\n", "layer3", "=", "True", "if", "3", "in", "used_layers", "else", "False", "\n", "layer4", "=", "True", "if", "4", "in", "used_layers", "else", "False", "\n", "\n", "if", "layer3", ":", "\n", "            ", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "\n", "stride", "=", "1", ",", "dilation", "=", "2", ")", "# 15x15, 7x7", "\n", "self", ".", "feature_size", "=", "(", "256", "+", "128", ")", "*", "block", ".", "expansion", "\n", "", "else", ":", "\n", "            ", "self", ".", "layer3", "=", "lambda", "x", ":", "x", "# identity", "\n", "\n", "", "if", "layer4", ":", "\n", "            ", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "\n", "stride", "=", "1", ",", "dilation", "=", "4", ")", "# 7x7, 3x3", "\n", "self", ".", "feature_size", "=", "512", "*", "block", ".", "expansion", "\n", "", "else", ":", "\n", "            ", "self", ".", "layer4", "=", "lambda", "x", ":", "x", "# identity", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.ResNet._make_layer": [[151, 183], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "dd", "=", "dilation", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "if", "stride", "==", "1", "and", "dilation", "==", "1", ":", "\n", "                ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "                ", "if", "dilation", ">", "1", ":", "\n", "                    ", "dd", "=", "dilation", "//", "2", "\n", "padding", "=", "dd", "\n", "", "else", ":", "\n", "                    ", "dd", "=", "1", "\n", "padding", "=", "0", "\n", "", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "bias", "=", "False", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dd", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "\n", "downsample", ",", "dilation", "=", "dilation", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "dilation", "=", "dilation", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.ResNet.forward": [[184, 200], ["resnet_atrous.ResNet.conv1", "resnet_atrous.ResNet.bn1", "resnet_atrous.ResNet.relu", "resnet_atrous.ResNet.maxpool", "resnet_atrous.ResNet.layer1", "resnet_atrous.ResNet.layer2", "resnet_atrous.ResNet.layer3", "resnet_atrous.ResNet.layer4", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x_", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x_", ")", "\n", "\n", "p1", "=", "self", ".", "layer1", "(", "x", ")", "\n", "p2", "=", "self", ".", "layer2", "(", "p1", ")", "\n", "p3", "=", "self", ".", "layer3", "(", "p2", ")", "\n", "p4", "=", "self", ".", "layer4", "(", "p3", ")", "\n", "out", "=", "[", "x_", ",", "p1", ",", "p2", ",", "p3", ",", "p4", "]", "\n", "out", "=", "[", "out", "[", "i", "]", "for", "i", "in", "self", ".", "used_layers", "]", "\n", "if", "len", "(", "out", ")", "==", "1", ":", "\n", "            ", "return", "out", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.conv3x3": [[9, 13], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "dilation", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "dilation", ",", "bias", "=", "False", ",", "dilation", "=", "dilation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.resnet18": [[202, 208], ["resnet_atrous.ResNet"], "function", ["None"], ["", "", "", "def", "resnet18", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.resnet34": [[210, 216], ["resnet_atrous.ResNet"], "function", ["None"], ["", "def", "resnet34", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.ResNet50": [[218, 224], ["resnet_atrous.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN.__init__": [[9, 25], ["super().__init__", "transformers.BertTokenizer.from_pretrained", "transformers.BertModel.from_pretrained", "region_proposal_network.depthwise_rpn.DepthwiseRPN", "region_proposal_network.depthwise_rpn.DepthwiseRPN", "region_proposal_network.depthwise_rpn.DepthwiseRPN", "AssertionError", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "lang_cfg", ",", "anchor_num", ",", "in_channels", ",", "weighted", "=", "True", ")", ":", "\n", "        ", "super", "(", "MultiNLRPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "lang_cfg", ".", "MODEL", "!=", "'bert'", ":", "\n", "            ", "raise", "AssertionError", "(", "'MULTI LANG RPN FOR BERT LANGUAGE MODELS ONLY. CONFIG.LANG.MODEL SHOULD BE \"bert\".'", ")", "\n", "", "self", ".", "bert_tokenizer", "=", "BertTokenizer", ".", "from_pretrained", "(", "lang_cfg", ".", "BERT_CHECKPOINT", ")", "\n", "self", ".", "bert_model", "=", "BertModel", ".", "from_pretrained", "(", "lang_cfg", ".", "BERT_CHECKPOINT", ")", "\n", "self", ".", "l2_rpn", "=", "DepthwiseRPN", "(", "anchor_num", ",", "in_channels", "[", "0", "]", ",", "in_channels", "[", "0", "]", ")", "\n", "self", ".", "l3_rpn", "=", "DepthwiseRPN", "(", "anchor_num", ",", "in_channels", "[", "1", "]", ",", "in_channels", "[", "1", "]", ")", "\n", "self", ".", "l4_rpn", "=", "DepthwiseRPN", "(", "anchor_num", ",", "in_channels", "[", "2", "]", ",", "in_channels", "[", "2", "]", ")", "\n", "self", ".", "weighted", "=", "weighted", "\n", "\n", "if", "self", ".", "weighted", ":", "\n", "            ", "self", ".", "cls_weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "len", "(", "in_channels", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "loc_weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "len", "(", "in_channels", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "nl_cls_weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "len", "(", "in_channels", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "nl_loc_weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "len", "(", "in_channels", ")", ")", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN.forward": [[26, 53], ["multi_nl_rpn.MultiNLRPN.bert_tokenizer.batch_encode_plus", "torch.mean", "embeds.view.view.view", "multi_nl_rpn.MultiNLRPN.l2_rpn", "multi_nl_rpn.MultiNLRPN.l3_rpn", "multi_nl_rpn.MultiNLRPN.l4_rpn", "multi_nl_rpn.MultiNLRPN.bert_model", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "multi_nl_rpn.MultiNLRPN._weighted_avg", "multi_nl_rpn.MultiNLRPN._weighted_avg", "multi_nl_rpn.MultiNLRPN._weighted_avg", "multi_nl_rpn.MultiNLRPN._weighted_avg", "multi_nl_rpn.MultiNLRPN._avg", "multi_nl_rpn.MultiNLRPN._avg", "multi_nl_rpn.MultiNLRPN._avg", "multi_nl_rpn.MultiNLRPN._avg", "tokens[].cuda", "tokens[].cuda"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN._weighted_avg", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN._weighted_avg", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN._weighted_avg", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN._weighted_avg", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN._avg", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN._avg", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN._avg", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN._avg"], ["", "", "def", "forward", "(", "self", ",", "zf_s", ",", "x_fs", ",", "phrase", ")", ":", "\n", "        ", "tokens", "=", "self", ".", "bert_tokenizer", ".", "batch_encode_plus", "(", "phrase", ",", "padding", "=", "'longest'", ",", "return_tensors", "=", "'pt'", ")", "\n", "embeds", "=", "self", ".", "bert_model", "(", "tokens", "[", "'input_ids'", "]", ".", "cuda", "(", ")", ",", "attention_mask", "=", "tokens", "[", "'attention_mask'", "]", ".", "cuda", "(", ")", ")", "[", "0", "]", "\n", "embeds", "=", "torch", ".", "mean", "(", "embeds", ",", "dim", "=", "1", ")", "\n", "embeds", "=", "embeds", ".", "view", "(", "[", "-", "1", ",", "768", ",", "1", ",", "1", "]", ")", "\n", "l2_output", "=", "self", ".", "l2_rpn", "(", "zf_s", "[", "0", "]", ",", "x_fs", "[", "0", "]", ",", "embeds", "[", ":", ",", ":", "256", ",", ":", ",", ":", "]", ")", "\n", "l3_output", "=", "self", ".", "l3_rpn", "(", "zf_s", "[", "1", "]", ",", "x_fs", "[", "1", "]", ",", "embeds", "[", ":", ",", "256", ":", "512", ",", ":", ",", ":", "]", ")", "\n", "l4_output", "=", "self", ".", "l4_rpn", "(", "zf_s", "[", "2", "]", ",", "x_fs", "[", "2", "]", ",", "embeds", "[", ":", ",", "512", ":", "768", ",", ":", ",", ":", "]", ")", "\n", "cls", "=", "[", "l2_output", "[", "'cls'", "]", ",", "l3_output", "[", "'cls'", "]", ",", "l4_output", "[", "'cls'", "]", "]", "\n", "reg", "=", "[", "l2_output", "[", "'reg'", "]", ",", "l3_output", "[", "'reg'", "]", ",", "l4_output", "[", "'reg'", "]", "]", "\n", "nl_cls", "=", "[", "l2_output", "[", "'nl_cls'", "]", ",", "l3_output", "[", "'nl_cls'", "]", ",", "l4_output", "[", "'nl_cls'", "]", "]", "\n", "nl_reg", "=", "[", "l2_output", "[", "'nl_reg'", "]", ",", "l3_output", "[", "'nl_reg'", "]", ",", "l4_output", "[", "'nl_reg'", "]", "]", "\n", "if", "self", ".", "weighted", ":", "\n", "            ", "cls_weight", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "self", ".", "cls_weight", ",", "0", ")", "\n", "loc_weight", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "self", ".", "loc_weight", ",", "0", ")", "\n", "nl_cls_weight", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "self", ".", "nl_cls_weight", ",", "0", ")", "\n", "nl_loc_weight", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "self", ".", "nl_loc_weight", ",", "0", ")", "\n", "cls", "=", "self", ".", "_weighted_avg", "(", "cls", ",", "cls_weight", ")", "\n", "reg", "=", "self", ".", "_weighted_avg", "(", "reg", ",", "loc_weight", ")", "\n", "nl_cls", "=", "self", ".", "_weighted_avg", "(", "nl_cls", ",", "nl_cls_weight", ")", "\n", "nl_reg", "=", "self", ".", "_weighted_avg", "(", "nl_reg", ",", "nl_loc_weight", ")", "\n", "", "else", ":", "\n", "            ", "cls", "=", "self", ".", "_avg", "(", "cls", ")", "\n", "reg", "=", "self", ".", "_avg", "(", "reg", ")", "\n", "nl_cls", "=", "self", ".", "_avg", "(", "nl_cls", ")", "\n", "nl_reg", "=", "self", ".", "_avg", "(", "nl_reg", ")", "\n", "", "return", "{", "'cls'", ":", "cls", ",", "'reg'", ":", "reg", ",", "'nl_cls'", ":", "nl_cls", ",", "'nl_reg'", ":", "nl_reg", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN._avg": [[54, 57], ["sum", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_avg", "(", "lst", ")", ":", "\n", "        ", "return", "sum", "(", "lst", ")", "/", "len", "(", "lst", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.multi_nl_rpn.MultiNLRPN._weighted_avg": [[58, 64], ["range", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_weighted_avg", "(", "lst", ",", "weight", ")", ":", "\n", "        ", "s", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "weight", ")", ")", ":", "\n", "            ", "s", "+=", "lst", "[", "i", "]", "*", "weight", "[", "i", "]", "\n", "", "return", "s", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.get_cls_loss": [[5, 11], ["torch.index_select", "torch.index_select", "torch.nn.functional.nll_loss", "torch.tensor", "len", "select.size", "torch.Size", "select.size"], "function", ["None"], ["def", "get_cls_loss", "(", "pred", ",", "label", ",", "select", ")", ":", "\n", "    ", "if", "len", "(", "select", ".", "size", "(", ")", ")", "==", "0", "or", "select", ".", "size", "(", ")", "==", "torch", ".", "Size", "(", "[", "0", "]", ")", ":", "\n", "        ", "return", "torch", ".", "tensor", "(", "0.", ",", "requires_grad", "=", "False", ")", "\n", "", "pred", "=", "torch", ".", "index_select", "(", "pred", ",", "0", ",", "select", ")", "\n", "label", "=", "torch", ".", "index_select", "(", "label", ",", "0", ",", "select", ")", "\n", "return", "torch", ".", "nn", ".", "functional", ".", "nll_loss", "(", "pred", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.select_cross_entropy_loss": [[13, 28], ["pred.view.view", "label.type.view", "torch.nonzero().squeeze", "torch.nonzero().squeeze", "pos.cuda.cuda", "neg.cuda.cuda", "loss.get_cls_loss", "loss.get_cls_loss", "label.type.transpose", "label.type.transpose", "label.type.type", "torch.nonzero", "torch.nonzero", "label.type.data.eq", "label.type.data.eq"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.get_cls_loss", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.get_cls_loss"], ["", "def", "select_cross_entropy_loss", "(", "pred", ",", "label", ",", "phrase_present", "=", "None", ")", ":", "\n", "    ", "if", "phrase_present", "is", "not", "None", ":", "\n", "        ", "label", "=", "label", ".", "transpose", "(", "0", ",", "-", "1", ")", "\n", "label", "=", "phrase_present", "*", "(", "1", "+", "label", ")", "-", "1", "\n", "label", "=", "label", ".", "transpose", "(", "0", ",", "-", "1", ")", "\n", "label", "=", "label", ".", "type", "(", "torch", ".", "int64", ")", "\n", "", "pred", "=", "pred", ".", "view", "(", "-", "1", ",", "2", ")", "\n", "label", "=", "label", ".", "view", "(", "-", "1", ")", "\n", "pos", "=", "torch", ".", "nonzero", "(", "label", ".", "data", ".", "eq", "(", "1", ")", ",", "as_tuple", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "neg", "=", "torch", ".", "nonzero", "(", "label", ".", "data", ".", "eq", "(", "0", ")", ",", "as_tuple", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "pos", "=", "pos", ".", "cuda", "(", ")", "\n", "neg", "=", "neg", ".", "cuda", "(", ")", "\n", "loss_pos", "=", "get_cls_loss", "(", "pred", ",", "label", ",", "pos", ")", "\n", "loss_neg", "=", "get_cls_loss", "(", "pred", ",", "label", ",", "neg", ")", "\n", "return", "loss_pos", "*", "0.5", "+", "loss_neg", "*", "0.5", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.weight_l1_loss": [[30, 47], ["pred_loc.view.size", "pred_loc.view.view", "diff.transpose.sum().view", "loss.sum().div", "diff.transpose.transpose", "diff.transpose.transpose", "torch.sum", "diff.transpose.sum", "torch.sum.is_nonzero", "loss.sum"], "function", ["None"], ["", "def", "weight_l1_loss", "(", "pred_loc", ",", "label_loc", ",", "loss_weight", ",", "phrase_present", "=", "None", ")", ":", "\n", "    ", "b", ",", "_", ",", "sh", ",", "sw", "=", "pred_loc", ".", "size", "(", ")", "\n", "pred_loc", "=", "pred_loc", ".", "view", "(", "b", ",", "4", ",", "-", "1", ",", "sh", ",", "sw", ")", "\n", "diff", "=", "(", "pred_loc", "-", "label_loc", ")", ".", "abs", "(", ")", "\n", "if", "phrase_present", "is", "not", "None", ":", "\n", "        ", "diff", "=", "diff", ".", "transpose", "(", "0", ",", "-", "1", ")", "\n", "diff", "=", "phrase_present", "*", "diff", "\n", "diff", "=", "diff", ".", "transpose", "(", "0", ",", "-", "1", ")", "\n", "", "diff", "=", "diff", ".", "sum", "(", "dim", "=", "1", ")", ".", "view", "(", "b", ",", "-", "1", ",", "sh", ",", "sw", ")", "\n", "loss", "=", "diff", "*", "loss_weight", "\n", "if", "phrase_present", "is", "not", "None", ":", "\n", "        ", "count", "=", "torch", ".", "sum", "(", "phrase_present", ")", "\n", "if", "not", "count", ".", "is_nonzero", "(", ")", ":", "\n", "            ", "count", "+=", "1", "\n", "", "", "else", ":", "\n", "        ", "count", "=", "b", "\n", "", "return", "loss", ".", "sum", "(", ")", ".", "div", "(", "count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.triplet_loss": [[49, 74], ["pred.view.view", "label.type.view", "label.type.eq().nonzero().squeeze", "label.type.eq().nonzero().squeeze", "pos.cuda.cuda", "neg.cuda.cuda", "torch.stack", "torch.stack", "pos_pred.repeat().view.repeat().view", "neg_pred.repeat().view().transpose.repeat().view().transpose", "torch.mean", "label.type.transpose", "label.type.transpose", "label.type.type", "torch.nn.functional.softmax", "torch.tensor", "pos.cuda.size", "neg.cuda.size", "torch.max", "label.type.eq().nonzero", "label.type.eq().nonzero", "len", "pos.cuda.size", "torch.Size", "len", "neg.cuda.size", "torch.Size", "pos_pred.repeat().view.repeat", "neg_pred.repeat().view().transpose.repeat().view", "torch.zeros_like", "pos.cuda.size", "neg.cuda.size", "label.type.eq", "label.type.eq", "neg_pred.repeat().view().transpose.repeat"], "function", ["None"], ["", "def", "triplet_loss", "(", "pred", ",", "label", ",", "phrase_present", "=", "None", ",", "margin", "=", "0.4", ")", ":", "\n", "    ", "if", "phrase_present", "is", "not", "None", ":", "\n", "        ", "label", "=", "label", ".", "transpose", "(", "0", ",", "-", "1", ")", "\n", "label", "=", "phrase_present", "*", "(", "1", "+", "label", ")", "-", "1", "\n", "label", "=", "label", ".", "transpose", "(", "0", ",", "-", "1", ")", "\n", "label", "=", "label", ".", "type", "(", "torch", ".", "int64", ")", "\n", "", "batch_size", "=", "pred", ".", "shape", "[", "0", "]", "\n", "pred", "=", "pred", ".", "view", "(", "batch_size", ",", "-", "1", ",", "2", ")", "\n", "score", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "pred", ",", "dim", "=", "-", "1", ")", "[", ":", ",", ":", ",", "1", "]", "\n", "label", "=", "label", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "pos", "=", "label", ".", "eq", "(", "1", ")", ".", "nonzero", "(", "as_tuple", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "neg", "=", "label", ".", "eq", "(", "0", ")", ".", "nonzero", "(", "as_tuple", "=", "False", ")", ".", "squeeze", "(", ")", "\n", "pos", "=", "pos", ".", "cuda", "(", ")", "\n", "neg", "=", "neg", ".", "cuda", "(", ")", "\n", "if", "len", "(", "pos", ".", "size", "(", ")", ")", "==", "0", "or", "pos", ".", "size", "(", ")", "==", "torch", ".", "Size", "(", "[", "0", "]", ")", "or", "len", "(", "neg", ".", "size", "(", ")", ")", "==", "0", "or", "neg", ".", "size", "(", ")", "==", "torch", ".", "Size", "(", "[", "0", "]", ")", ":", "\n", "        ", "return", "torch", ".", "tensor", "(", "0.", ",", "requires_grad", "=", "False", ")", "\n", "", "pos_pred", "=", "torch", ".", "stack", "(", "[", "score", "[", "batch", ",", "index", "]", "for", "batch", ",", "index", "in", "pos", "]", ")", "\n", "neg_pred", "=", "torch", ".", "stack", "(", "[", "score", "[", "batch", ",", "index", "]", "for", "batch", ",", "index", "in", "neg", "]", ")", "\n", "pos_length", "=", "pos", ".", "size", "(", ")", "[", "0", "]", "\n", "neg_length", "=", "neg", ".", "size", "(", ")", "[", "0", "]", "\n", "pos_pred", "=", "pos_pred", ".", "repeat", "(", "neg_length", ")", ".", "view", "(", "neg_length", ",", "pos_length", ")", "\n", "neg_pred", "=", "neg_pred", ".", "repeat", "(", "pos_length", ")", ".", "view", "(", "pos_length", ",", "neg_length", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "distance", "=", "neg_pred", "-", "pos_pred", "+", "margin", "\n", "loss", "=", "torch", ".", "mean", "(", "torch", ".", "max", "(", "distance", ",", "torch", ".", "zeros_like", "(", "distance", ")", ")", ")", "\n", "return", "loss", "\n", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.depthwise_rpn.DepthwiseRPN.__init__": [[6, 52], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "anchor_num", "=", "5", ",", "in_channels", "=", "256", ",", "hidden", "=", "256", ")", ":", "\n", "        ", "super", "(", "DepthwiseRPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cls_conv_kernel", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "hidden", ",", "kernel_size", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "cls_conv_search", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "hidden", ",", "kernel_size", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "cls_head", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "hidden", ",", "hidden", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "hidden", ",", "2", "*", "anchor_num", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n", "self", ".", "reg_conv_kernel", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "hidden", ",", "kernel_size", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "reg_conv_search", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "in_channels", ",", "hidden", ",", "kernel_size", "=", "3", ",", "bias", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "reg_head", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "hidden", ",", "hidden", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "hidden", ",", "4", "*", "anchor_num", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n", "\n", "self", ".", "nl_cls_head", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "hidden", ",", "hidden", ",", "kernel_size", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "hidden", ",", "2", "*", "anchor_num", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n", "self", ".", "nl_reg_head", "=", "torch", ".", "nn", ".", "Sequential", "(", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "hidden", ",", "hidden", ",", "kernel_size", "=", "5", ",", "bias", "=", "False", ")", ",", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "(", "hidden", ")", ",", "\n", "torch", ".", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "torch", ".", "nn", ".", "Conv2d", "(", "hidden", ",", "4", "*", "anchor_num", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.depthwise_rpn.DepthwiseRPN.forward": [[54, 68], ["depthwise_rpn.DepthwiseRPN.cls_conv_kernel", "depthwise_rpn.DepthwiseRPN.cls_conv_search", "depthwise_rpn.xcorr_depthwise", "depthwise_rpn.DepthwiseRPN.cls_head", "depthwise_rpn.xcorr_depthwise", "depthwise_rpn.DepthwiseRPN.nl_cls_head", "depthwise_rpn.DepthwiseRPN.reg_conv_kernel", "depthwise_rpn.DepthwiseRPN.reg_conv_search", "depthwise_rpn.xcorr_depthwise", "depthwise_rpn.DepthwiseRPN.reg_head", "depthwise_rpn.xcorr_depthwise", "depthwise_rpn.DepthwiseRPN.nl_reg_head"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.depthwise_rpn.xcorr_depthwise", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.depthwise_rpn.xcorr_depthwise", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.depthwise_rpn.xcorr_depthwise", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.depthwise_rpn.xcorr_depthwise"], ["", "def", "forward", "(", "self", ",", "z_f", ",", "x_f", ",", "nl_kernel", ")", ":", "\n", "        ", "kernel", "=", "self", ".", "cls_conv_kernel", "(", "z_f", ")", "\n", "search", "=", "self", ".", "cls_conv_search", "(", "x_f", ")", "\n", "feature", "=", "xcorr_depthwise", "(", "search", ",", "kernel", ")", "\n", "cls", "=", "self", ".", "cls_head", "(", "feature", ")", "\n", "feature", "=", "xcorr_depthwise", "(", "search", ",", "nl_kernel", ")", "\n", "nl_cls", "=", "self", ".", "nl_cls_head", "(", "feature", ")", "\n", "kernel", "=", "self", ".", "reg_conv_kernel", "(", "z_f", ")", "\n", "search", "=", "self", ".", "reg_conv_search", "(", "x_f", ")", "\n", "feature", "=", "xcorr_depthwise", "(", "search", ",", "kernel", ")", "\n", "reg", "=", "self", ".", "reg_head", "(", "feature", ")", "\n", "feature", "=", "xcorr_depthwise", "(", "search", ",", "nl_kernel", ")", "\n", "nl_reg", "=", "self", ".", "nl_reg_head", "(", "feature", ")", "\n", "return", "{", "'cls'", ":", "cls", ",", "'reg'", ":", "reg", ",", "'nl_cls'", ":", "nl_cls", ",", "'nl_reg'", ":", "nl_reg", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.depthwise_rpn.xcorr_depthwise": [[70, 80], ["kernel.reshape.size", "kernel.reshape.size", "search.view.view", "kernel.reshape.reshape", "torch.nn.functional.conv2d", "out.view.view", "search.view.size", "search.view.size", "kernel.reshape.size", "kernel.reshape.size", "out.view.size", "out.view.size"], "function", ["None"], ["", "", "def", "xcorr_depthwise", "(", "search", ",", "kernel", ")", ":", "\n", "    ", "\"\"\"depthwise cross correlation\n    \"\"\"", "\n", "batch", "=", "kernel", ".", "size", "(", "0", ")", "\n", "channel", "=", "kernel", ".", "size", "(", "1", ")", "\n", "search", "=", "search", ".", "view", "(", "1", ",", "batch", "*", "channel", ",", "search", ".", "size", "(", "2", ")", ",", "search", ".", "size", "(", "3", ")", ")", "\n", "kernel", "=", "kernel", ".", "reshape", "(", "batch", "*", "channel", ",", "1", ",", "kernel", ".", "size", "(", "2", ")", ",", "kernel", ".", "size", "(", "3", ")", ")", "\n", "out", "=", "torch", ".", "nn", ".", "functional", ".", "conv2d", "(", "search", ",", "kernel", ",", "groups", "=", "batch", "*", "channel", ")", "\n", "out", "=", "out", ".", "view", "(", "batch", ",", "channel", ",", "out", ".", "size", "(", "2", ")", ",", "out", ".", "size", "(", "3", ")", ")", "\n", "return", "out", "\n", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.adjustment_layer.AdjustLayer.__init__": [[6, 13], ["torch.Module.__init__", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "center_size", "=", "7", ")", ":", "\n", "        ", "super", "(", "AdjustLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", ")", "\n", "self", ".", "center_size", "=", "center_size", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.adjustment_layer.AdjustLayer.forward": [[14, 21], ["adjustment_layer.AdjustLayer.downsample", "adjustment_layer.AdjustLayer.size", "adjustment_layer.AdjustLayer.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "if", "x", ".", "size", "(", "3", ")", "<", "20", ":", "\n", "            ", "l", "=", "(", "x", ".", "size", "(", "3", ")", "-", "self", ".", "center_size", ")", "//", "2", "\n", "r", "=", "l", "+", "self", ".", "center_size", "\n", "x", "=", "x", "[", ":", ",", ":", ",", "l", ":", "r", ",", "l", ":", "r", "]", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.adjustment_layer.AdjustAllLayer.__init__": [[24, 32], ["torch.Module.__init__", "len", "adjustment_layer.AdjustLayer", "range", "adjustment_layer.AdjustAllLayer.add_module", "adjustment_layer.AdjustLayer", "str"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "center_size", "=", "7", ")", ":", "\n", "        ", "super", "(", "AdjustAllLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num", "=", "len", "(", "out_channels", ")", "\n", "if", "self", ".", "num", "==", "1", ":", "\n", "            ", "self", ".", "downsample", "=", "AdjustLayer", "(", "in_channels", "[", "0", "]", ",", "out_channels", "[", "0", "]", ",", "center_size", ")", "\n", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "num", ")", ":", "\n", "                ", "self", ".", "add_module", "(", "'downsample'", "+", "str", "(", "i", "+", "2", ")", ",", "AdjustLayer", "(", "in_channels", "[", "i", "]", ",", "out_channels", "[", "i", "]", ",", "center_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.adjustment_layer.AdjustAllLayer.forward": [[33, 42], ["adjustment_layer.AdjustAllLayer.downsample", "range", "getattr", "out.append", "getattr.", "str"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "if", "self", ".", "num", "==", "1", ":", "\n", "            ", "return", "self", ".", "downsample", "(", "features", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num", ")", ":", "\n", "                ", "adj_layer", "=", "getattr", "(", "self", ",", "'downsample'", "+", "str", "(", "i", "+", "2", ")", ")", "\n", "out", ".", "append", "(", "adj_layer", "(", "features", "[", "i", "]", ")", ")", "\n", "", "return", "out", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.__init__": [[18, 36], ["numpy.tile", "utils.anchor.Anchors", "inference.Inference.anchors.generate_all_anchors", "numpy.tile", "utils.anchor.Anchors", "inference.Inference.lost_anchors.generate_all_anchors", "utils.logging.get_logger", "len", "len", "numpy.outer", "numpy.outer", "numpy.hanning", "numpy.hanning", "numpy.hanning", "numpy.hanning"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.anchor.Anchors.generate_all_anchors", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.anchor.Anchors.generate_all_anchors", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.get_logger"], ["    ", "def", "__init__", "(", "self", ",", "inference_cfg", ")", ":", "\n", "        ", "self", ".", "inf_cfg", "=", "inference_cfg", "\n", "self", ".", "anchor_num", "=", "len", "(", "self", ".", "inf_cfg", ".", "ANCHOR", ".", "RATIOS", ")", "*", "len", "(", "self", ".", "inf_cfg", ".", "ANCHOR", ".", "SCALES", ")", "\n", "self", ".", "window", "=", "np", ".", "tile", "(", "\n", "np", ".", "outer", "(", "np", ".", "hanning", "(", "self", ".", "inf_cfg", ".", "TRACK", ".", "SCORE_SIZE", ")", ",", "np", ".", "hanning", "(", "self", ".", "inf_cfg", ".", "TRACK", ".", "SCORE_SIZE", ")", ")", "[", "np", ".", "newaxis", ",", "\n", ":", ",", ":", "]", ",", "[", "self", ".", "anchor_num", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "anchors", "=", "Anchors", "(", "self", ".", "inf_cfg", ".", "ANCHOR", ".", "STRIDE", ",", "self", ".", "inf_cfg", ".", "ANCHOR", ".", "RATIOS", ",", "\n", "self", ".", "inf_cfg", ".", "ANCHOR", ".", "SCALES", ")", "\n", "self", ".", "anchors", ".", "generate_all_anchors", "(", "self", ".", "inf_cfg", ".", "SEARCH_SIZE", "//", "2", ",", "self", ".", "inf_cfg", ".", "OUTPUT_SIZE", ")", "\n", "self", ".", "lost_window", "=", "np", ".", "tile", "(", "\n", "np", ".", "outer", "(", "np", ".", "hanning", "(", "self", ".", "inf_cfg", ".", "TRACK", ".", "LOST_SCORE_SIZE", ")", ",", "np", ".", "hanning", "(", "self", ".", "inf_cfg", ".", "TRACK", ".", "LOST_SCORE_SIZE", ")", ")", "[", "\n", "np", ".", "newaxis", ",", ":", ",", ":", "]", ",", "[", "self", ".", "anchor_num", ",", "1", ",", "1", "]", ")", "\n", "self", ".", "lost_anchors", "=", "Anchors", "(", "self", ".", "inf_cfg", ".", "ANCHOR", ".", "STRIDE", ",", "self", ".", "inf_cfg", ".", "ANCHOR", ".", "RATIOS", ",", "\n", "self", ".", "inf_cfg", ".", "ANCHOR", ".", "SCALES", ")", "\n", "self", ".", "lost_anchors", ".", "generate_all_anchors", "(", "self", ".", "inf_cfg", ".", "TRACK", ".", "LOST_INSTANCE_SIZE", "//", "2", ",", "\n", "self", ".", "inf_cfg", ".", "TRACK", ".", "LOST_SCORE_SIZE", ")", "\n", "\n", "self", ".", "_logger", "=", "get_logger", "(", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.prepare_tracker": [[37, 45], ["torch.load", "utils.check_keys", "tracker.load_state_dict", "key.replace", "inference.Inference._logger.info", "ckpt[].keys", "storage.cpu"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.__init__.check_keys"], ["", "def", "prepare_tracker", "(", "self", ",", "tracker", ",", "restore_from", ",", "rank", "=", "0", ")", ":", "\n", "        ", "ckpt", "=", "torch", ".", "load", "(", "restore_from", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cpu", "(", ")", ")", "\n", "restore_kv", "=", "{", "key", ".", "replace", "(", "\"module.\"", ",", "\"\"", ")", ":", "ckpt", "[", "\"state_dict\"", "]", "[", "key", "]", "for", "key", "in", "ckpt", "[", "\"state_dict\"", "]", ".", "keys", "(", ")", "}", "\n", "check_keys", "(", "tracker", ",", "restore_kv", ",", "rank", "=", "rank", ")", "\n", "tracker", ".", "load_state_dict", "(", "restore_kv", ",", "strict", "=", "True", ")", "\n", "if", "rank", "==", "0", ":", "\n", "            ", "self", ".", "_logger", ".", "info", "(", "\"RESTORED TRACKER FROM {}.\"", ".", "format", "(", "restore_from", ")", ")", "\n", "", "return", "tracker", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.track_on_video": [[46, 93], ["inference.Inference._initialize_tracker", "enumerate", "numpy.transpose", "pyplot.imshow", "pyplot.axis", "pyplot.show", "inference.Inference._logger.info", "cv2.imread", "inference.Inference._crop_and_get_center_pos", "[].cpu().numpy", "[].cpu().numpy", "inference.Inference.make_prediction", "boxes.append", "ents.append", "nl_ents.append", "inference.Inference.predictions.append", "inference.Inference.history_management", "z_crop[].cpu().numpy", "cv2.cvtColor", "torch.autograd.no_grad", "tracker", "utils.tracking_inference.convert_bbox", "utils.tracking_inference.convert_bbox", "evaluation.ope.overlap_ratio", "[].cpu", "[].cpu", "utils.tracking_inference.convert_bbox", "utils.tracking_inference.convert_bbox", "NotImplementedError", "z_crop[].cpu"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference._initialize_tracker", "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference._crop_and_get_center_pos", "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.make_prediction", "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.history_management", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.convert_bbox", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.convert_bbox", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.overlap_ratio", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.convert_bbox", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.convert_bbox"], ["", "def", "track_on_video", "(", "self", ",", "tracker", ",", "video", ",", "gt_boxes", ",", "phrase", ",", "debug", "=", "False", ")", ":", "\n", "        ", "first_frame_path", "=", "video", "[", "0", "]", "\n", "z_crop", "=", "self", ".", "_initialize_tracker", "(", "first_frame_path", ",", "gt_boxes", "[", "0", "]", ")", "\n", "if", "debug", ":", "\n", "            ", "template", "=", "np", ".", "transpose", "(", "z_crop", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "[", "1", ",", "2", ",", "0", "]", ")", "\n", "template", "=", "cv2", ".", "cvtColor", "(", "template", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "/", "255.", "\n", "import", "matplotlib", ".", "pyplot", "as", "pyplot", "\n", "pyplot", ".", "imshow", "(", "template", ")", "\n", "pyplot", ".", "axis", "(", "'off'", ")", "\n", "pyplot", ".", "show", "(", ")", "\n", "self", ".", "_logger", ".", "info", "(", "phrase", ")", "\n", "", "boxes", "=", "[", "]", "\n", "ents", "=", "[", "]", "\n", "nl_ents", "=", "[", "]", "\n", "for", "frame_id", ",", "frame_path", "in", "enumerate", "(", "video", "[", "1", ":", "]", ")", ":", "\n", "            ", "frame_id", "+=", "1", "\n", "frame", "=", "cv2", ".", "imread", "(", "frame_path", ")", "\n", "scale_z", ",", "size", ",", "x_crop", ",", "crop_center", "=", "self", ".", "_crop_and_get_center_pos", "(", "frame", ",", "frame_id", "+", "1", ")", "\n", "frame_data", "=", "{", "\"template\"", ":", "z_crop", ",", "\"search\"", ":", "x_crop", ",", "\"phrase\"", ":", "[", "phrase", "]", "}", "\n", "with", "torch", ".", "autograd", ".", "no_grad", "(", ")", ":", "\n", "                ", "frame_results", "=", "tracker", "(", "frame_data", ")", "\n", "\n", "", "score", "=", "frame_results", "[", "\"cls\"", "]", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "nl_score", "=", "frame_results", "[", "\"nl_cls\"", "]", "[", "0", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "self", ".", "tracking_state", "==", "TrackingState", ".", "STABLE", ":", "\n", "                ", "pred_bbox", "=", "convert_bbox", "(", "frame_results", "[", "\"reg\"", "]", ",", "self", ".", "anchors", ".", "all_anchors", "[", "1", "]", ")", "\n", "nl_pred_bbox", "=", "convert_bbox", "(", "frame_results", "[", "\"nl_reg\"", "]", ",", "self", ".", "anchors", ".", "all_anchors", "[", "1", "]", ")", "\n", "", "elif", "self", ".", "tracking_state", "==", "TrackingState", ".", "LOST", ":", "\n", "                ", "pred_bbox", "=", "convert_bbox", "(", "frame_results", "[", "\"reg\"", "]", ",", "self", ".", "lost_anchors", ".", "all_anchors", "[", "1", "]", ")", "\n", "nl_pred_bbox", "=", "convert_bbox", "(", "frame_results", "[", "\"nl_reg\"", "]", ",", "self", ".", "lost_anchors", ".", "all_anchors", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", ")", "\n", "", "track_result", "=", "self", ".", "make_prediction", "(", "pred_bbox", ",", "score", ",", "nl_pred_bbox", ",", "nl_score", ",", "crop_center", ",", "frame", ".", "shape", "[", ":", "2", "]", ",", "\n", "scale_z", ",", "size", ")", "\n", "boxes", ".", "append", "(", "\"%.2f,%.2f,%.2f,%.2f\\n\"", "%", "\n", "(", "track_result", "[", "\"bbox\"", "]", "[", "0", "]", ",", "track_result", "[", "\"bbox\"", "]", "[", "1", "]", ",", "\n", "track_result", "[", "\"bbox\"", "]", "[", "2", "]", ",", "track_result", "[", "\"bbox\"", "]", "[", "3", "]", ")", ")", "\n", "\n", "iou", "=", "overlap_ratio", "(", "gt_boxes", "[", "frame_id", "]", ",", "track_result", "[", "\"bbox\"", "]", ")", "[", "0", "]", "\n", "ents", ".", "append", "(", "track_result", "[", "\"ent\"", "]", ")", "\n", "nl_ents", ".", "append", "(", "track_result", "[", "\"nl_ent\"", "]", ")", "\n", "track_result", "[", "\"crop\"", "]", "=", "crop_center", "\n", "track_result", "[", "\"ious\"", "]", "=", "iou", "\n", "self", ".", "predictions", ".", "append", "(", "track_result", ")", "\n", "self", ".", "history_management", "(", "debug", ")", "\n", "", "ious", "=", "[", "pred", "[", "\"ious\"", "]", "for", "pred", "in", "self", ".", "predictions", "]", "\n", "return", "{", "\"boxes\"", ":", "boxes", ",", "\"ious\"", ":", "ious", ",", "\"nl_ents\"", ":", "nl_ents", ",", "\"ents\"", ":", "ents", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference._initialize_tracker": [[94, 110], ["cv2.imread", "numpy.array", "numpy.array", "inference.Inference.compute_template", "numpy.mean", "utils.optical_flow.OpticalFlowForVideo", "frame_path.split"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.compute_template"], ["", "def", "_initialize_tracker", "(", "self", ",", "frame_path", ",", "xywh_bbox", ")", ":", "\n", "        ", "img", "=", "cv2", ".", "imread", "(", "frame_path", ")", "\n", "center_pos", "=", "np", ".", "array", "(", "[", "xywh_bbox", "[", "0", "]", "+", "(", "xywh_bbox", "[", "2", "]", "-", "1", ")", "/", "2.", ",", "xywh_bbox", "[", "1", "]", "+", "(", "xywh_bbox", "[", "3", "]", "-", "1", ")", "/", "2.", "]", ")", "\n", "size", "=", "np", ".", "array", "(", "[", "xywh_bbox", "[", "2", "]", ",", "xywh_bbox", "[", "3", "]", "]", ")", "\n", "z_crop", "=", "self", ".", "compute_template", "(", "img", ",", "xywh_bbox", ")", "\n", "self", ".", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "if", "self", ".", "inf_cfg", ".", "TRACK", ".", "USE_OPTICAL_FLOW", ":", "\n", "            ", "self", ".", "optical_flow", "=", "OpticalFlowForVideo", "(", "dataset", "=", "self", ".", "inf_cfg", ".", "TRACK", ".", "DATASET", ",", "\n", "video_name", "=", "frame_path", ".", "split", "(", "\"/\"", ")", "[", "-", "3", "]", ",", "\n", "lasot_flows", "=", "self", ".", "inf_cfg", ".", "DATASET", ".", "LASOT_FLOW", ",", "\n", "otb_flows", "=", "self", ".", "inf_cfg", ".", "DATASET", ".", "OTB_FLOW", ")", "\n", "", "self", ".", "tracking_state", "=", "TrackingState", ".", "STABLE", "\n", "self", ".", "lost_count", "=", "0", "\n", "self", ".", "predictions", "=", "[", "\n", "{", "\"center_pos\"", ":", "center_pos", ",", "\"size\"", ":", "size", ",", "\"ious\"", ":", "1.0", ",", "\"best_score\"", ":", "1.0", ",", "\"nl_std\"", ":", "0.1", ",", "\"std\"", ":", "0.1", "}", "]", "\n", "return", "z_crop", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.compute_template": [[111, 121], ["numpy.array", "numpy.array", "round", "numpy.mean", "utils.tracking_inference.get_subwindow", "numpy.sqrt", "numpy.sum", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.get_subwindow"], ["", "def", "compute_template", "(", "self", ",", "img", ",", "xywh_bbox", ")", ":", "\n", "        ", "center_pos", "=", "np", ".", "array", "(", "[", "xywh_bbox", "[", "0", "]", "+", "(", "xywh_bbox", "[", "2", "]", "-", "1", ")", "/", "2", ",", "xywh_bbox", "[", "1", "]", "+", "(", "xywh_bbox", "[", "3", "]", "-", "1", ")", "/", "2", "]", ")", "\n", "size", "=", "np", ".", "array", "(", "[", "xywh_bbox", "[", "2", "]", ",", "xywh_bbox", "[", "3", "]", "]", ")", "\n", "w_z", "=", "size", "[", "0", "]", "+", "self", ".", "inf_cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "size", ")", "\n", "h_z", "=", "size", "[", "1", "]", "+", "self", ".", "inf_cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "size", ")", "\n", "s_z", "=", "round", "(", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", ")", "\n", "scale_z", "=", "self", ".", "inf_cfg", ".", "EXEMPLAR_SIZE", "/", "s_z", "\n", "channel_average", "=", "np", ".", "mean", "(", "img", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "z_crop", "=", "get_subwindow", "(", "img", ",", "center_pos", ",", "self", ".", "inf_cfg", ".", "EXEMPLAR_SIZE", ",", "scale_z", ",", "channel_average", ")", "\n", "return", "z_crop", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference._crop_and_get_center_pos": [[122, 150], ["numpy.sqrt", "utils.tracking_inference.get_subwindow", "numpy.stack", "inference.Inference.optical_flow.get_optical_flow", "NotImplementedError", "numpy.sum", "numpy.sum", "utils.tracking_inference.get_subwindow", "NotImplementedError", "random.sample", "int"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.get_subwindow", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.optical_flow.OpticalFlowForVideo.get_optical_flow", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.get_subwindow"], ["", "def", "_crop_and_get_center_pos", "(", "self", ",", "img", ",", "frame_id", ")", ":", "\n", "        ", "if", "self", ".", "tracking_state", "==", "TrackingState", ".", "STABLE", ":", "\n", "            ", "center_pos", "=", "self", ".", "predictions", "[", "-", "1", "]", "[", "\"center_pos\"", "]", "\n", "size", "=", "self", ".", "predictions", "[", "-", "1", "]", "[", "\"size\"", "]", "\n", "if", "self", ".", "inf_cfg", ".", "TRACK", ".", "USE_OPTICAL_FLOW", ":", "\n", "                ", "bbox", "=", "np", ".", "stack", "(", "[", "center_pos", "[", "0", "]", "-", "size", "[", "0", "]", "/", "2", ",", "center_pos", "[", "1", "]", "-", "size", "[", "1", "]", "/", "2", ",", "size", "[", "0", "]", ",", "size", "[", "1", "]", "]", ",", "axis", "=", "0", ")", "\n", "optical_flow", "=", "self", ".", "optical_flow", ".", "get_optical_flow", "(", "frame_id", ",", "bbox", ")", "\n", "crop_center", "=", "center_pos", "+", "optical_flow", "\n", "", "else", ":", "\n", "                ", "crop_center", "=", "center_pos", "\n", "", "", "elif", "self", ".", "tracking_state", "==", "TrackingState", ".", "LOST", ":", "\n", "            ", "past_prediction", "=", "random", ".", "sample", "(", "self", ".", "predictions", "[", "int", "(", "-", "1.5", "*", "self", ".", "lost_count", ")", "-", "1", ":", "]", ",", "k", "=", "1", ")", "[", "0", "]", "\n", "crop_center", "=", "past_prediction", "[", "\"center_pos\"", "]", "\n", "size", "=", "past_prediction", "[", "\"size\"", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "", "w_z", "=", "size", "[", "0", "]", "+", "self", ".", "inf_cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "size", ")", "\n", "h_z", "=", "size", "[", "1", "]", "+", "self", ".", "inf_cfg", ".", "TRACK", ".", "CONTEXT_AMOUNT", "*", "np", ".", "sum", "(", "size", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "w_z", "*", "h_z", ")", "\n", "scale_z", "=", "self", ".", "inf_cfg", ".", "EXEMPLAR_SIZE", "/", "s_z", "\n", "if", "self", ".", "tracking_state", "==", "TrackingState", ".", "STABLE", ":", "\n", "            ", "x_crop", "=", "get_subwindow", "(", "img", ",", "crop_center", ",", "self", ".", "inf_cfg", ".", "SEARCH_SIZE", ",", "scale_z", ",", "self", ".", "channel_average", ")", "\n", "", "elif", "self", ".", "tracking_state", "==", "TrackingState", ".", "LOST", ":", "\n", "            ", "x_crop", "=", "get_subwindow", "(", "img", ",", "crop_center", ",", "self", ".", "inf_cfg", ".", "TRACK", ".", "LOST_INSTANCE_SIZE", ",", "scale_z", ",", "\n", "self", ".", "channel_average", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "", "return", "scale_z", ",", "size", ",", "x_crop", ",", "crop_center", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.make_prediction": [[151, 201], ["numpy.std", "numpy.sum", "numpy.sum", "numpy.std", "scipy.special.softmax", "numpy.unravel_index", "utils.tracking_inference.bbox_clip", "numpy.array", "scipy.special.softmax", "scipy.special.softmax", "scipy.special.entr", "scipy.special.entr", "utils.tracking_inference.change", "utils.tracking_inference.change", "numpy.exp", "numpy.argmax", "numpy.array", "numpy.array", "AssertionError", "NotImplementedError", "NotImplementedError", "utils.tracking_inference.compute_size", "utils.tracking_inference.compute_size", "str"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.bbox_clip", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.change", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.change", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.compute_size", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.compute_size"], ["", "def", "make_prediction", "(", "self", ",", "vis_bbox", ",", "score", ",", "nl_pred_bbox", ",", "nl_score", ",", "crop_center", ",", "img_shape", ",", "scale", ",", "size", ")", ":", "\n", "        ", "score", "=", "scipy", ".", "special", ".", "softmax", "(", "score", ",", "axis", "=", "-", "1", ")", "[", ":", ",", ":", ",", ":", ",", "1", "]", "\n", "nl_score", "=", "scipy", ".", "special", ".", "softmax", "(", "nl_score", ",", "axis", "=", "-", "1", ")", "[", ":", ",", ":", ",", ":", ",", "1", "]", "\n", "std", "=", "np", ".", "std", "(", "score", ")", "\n", "ent", "=", "np", ".", "sum", "(", "scipy", ".", "special", ".", "entr", "(", "score", ")", ")", "\n", "nl_ent", "=", "np", ".", "sum", "(", "scipy", ".", "special", ".", "entr", "(", "nl_score", ")", ")", "\n", "nl_std", "=", "np", ".", "std", "(", "nl_score", ")", "\n", "w_vis", ",", "w_nl", "=", "scipy", ".", "special", ".", "softmax", "(", "\n", "[", "self", ".", "inf_cfg", ".", "TRACK", ".", "NLRPN_ALPHA", "*", "nl_ent", ",", "self", ".", "inf_cfg", ".", "TRACK", ".", "NLRPN_ALPHA", "*", "ent", "]", ")", "\n", "pred_bbox", "=", "w_vis", "*", "vis_bbox", "+", "w_nl", "*", "nl_pred_bbox", "\n", "pred_score", "=", "w_vis", "*", "score", "+", "w_nl", "*", "nl_score", "\n", "if", "self", ".", "tracking_state", "==", "TrackingState", ".", "STABLE", ":", "\n", "            ", "width", "=", "pred_bbox", "[", "2", ",", ":", "]", "\n", "height", "=", "pred_bbox", "[", "3", ",", ":", "]", "\n", "s_c", "=", "change", "(", "compute_size", "(", "width", ",", "height", ")", "/", "(", "compute_size", "(", "size", "[", "0", "]", "*", "scale", ",", "size", "[", "1", "]", "*", "scale", ")", ")", ")", "\n", "r_c", "=", "change", "(", "(", "size", "[", "0", "]", "/", "size", "[", "1", "]", ")", "/", "(", "pred_bbox", "[", "2", ",", ":", "]", "/", "pred_bbox", "[", "3", ",", ":", "]", ")", ")", "\n", "penalty", "=", "np", ".", "exp", "(", "-", "(", "r_c", "*", "s_c", "-", "1", ")", "*", "self", ".", "inf_cfg", ".", "TRACK", ".", "PENALTY_K", ")", "\n", "pred_score", "=", "penalty", "*", "pred_score", "\n", "pred_score", "=", "(", "1.", "-", "self", ".", "inf_cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", ")", "*", "pred_score", "\n", "pred_score", "+=", "self", ".", "inf_cfg", ".", "TRACK", ".", "WINDOW_INFLUENCE", "*", "self", ".", "window", "\n", "", "elif", "self", ".", "tracking_state", "==", "TrackingState", ".", "LOST", ":", "\n", "            ", "pred_score", "=", "(", "1.", "-", "self", ".", "inf_cfg", ".", "TRACK", ".", "LOST_WINDOW_INFLUENCE", ")", "*", "pred_score", "\n", "pred_score", "+=", "self", ".", "inf_cfg", ".", "TRACK", ".", "LOST_WINDOW_INFLUENCE", "*", "self", ".", "lost_window", "\n", "", "else", ":", "\n", "            ", "raise", "AssertionError", "(", "\"TRACKING STATE WRONG \"", "+", "str", "(", "self", ".", "tracking_state", ")", ")", "\n", "\n", "", "idx", ",", "w", ",", "h", "=", "np", ".", "unravel_index", "(", "np", ".", "argmax", "(", "pred_score", ")", ",", "pred_score", ".", "shape", ")", "\n", "bbox", "=", "pred_bbox", "[", ":", ",", "idx", ",", "w", ",", "h", "]", "/", "scale", "\n", "\n", "if", "self", ".", "tracking_state", "==", "TrackingState", ".", "STABLE", ":", "\n", "            ", "lr", "=", "pred_score", "[", "idx", ",", "w", ",", "h", "]", "*", "self", ".", "inf_cfg", ".", "TRACK", ".", "LR", "\n", "", "elif", "self", ".", "tracking_state", "==", "TrackingState", ".", "LOST", ":", "\n", "            ", "lr", "=", "pred_score", "[", "idx", ",", "w", ",", "h", "]", "*", "self", ".", "inf_cfg", ".", "TRACK", ".", "LOST_LR", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "", "width", "=", "size", "[", "0", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "2", "]", "*", "lr", "\n", "height", "=", "size", "[", "1", "]", "*", "(", "1", "-", "lr", ")", "+", "bbox", "[", "3", "]", "*", "lr", "\n", "if", "self", ".", "tracking_state", "==", "TrackingState", ".", "STABLE", ":", "\n", "            ", "cx", "=", "bbox", "[", "0", "]", "+", "crop_center", "[", "0", "]", "-", "self", ".", "inf_cfg", ".", "SEARCH_SIZE", "//", "2", "/", "scale", "\n", "cy", "=", "bbox", "[", "1", "]", "+", "crop_center", "[", "1", "]", "-", "self", ".", "inf_cfg", ".", "SEARCH_SIZE", "//", "2", "/", "scale", "\n", "", "elif", "self", ".", "tracking_state", "==", "TrackingState", ".", "LOST", ":", "\n", "            ", "cx", "=", "bbox", "[", "0", "]", "+", "crop_center", "[", "0", "]", "-", "self", ".", "inf_cfg", ".", "TRACK", ".", "LOST_INSTANCE_SIZE", "//", "2", "/", "scale", "\n", "cy", "=", "bbox", "[", "1", "]", "+", "crop_center", "[", "1", "]", "-", "self", ".", "inf_cfg", ".", "TRACK", ".", "LOST_INSTANCE_SIZE", "//", "2", "/", "scale", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "", "cx", ",", "cy", ",", "width", ",", "height", "=", "bbox_clip", "(", "cx", ",", "cy", ",", "width", ",", "height", ",", "img_shape", ")", "\n", "bbox", "=", "np", ".", "array", "(", "[", "cx", "-", "width", "/", "2", ",", "cy", "-", "height", "/", "2", ",", "width", ",", "height", "]", ")", "\n", "best_score", "=", "pred_score", "[", "idx", ",", "w", ",", "h", "]", "\n", "return", "{", "\"bbox\"", ":", "bbox", ",", "\"best_score\"", ":", "best_score", ",", "\"center_pos\"", ":", "np", ".", "array", "(", "[", "cx", ",", "cy", "]", ")", ",", "\n", "\"size\"", ":", "np", ".", "array", "(", "[", "width", ",", "height", "]", ")", ",", "\"std\"", ":", "std", ",", "\"nl_std\"", ":", "nl_std", ",", "\"ent\"", ":", "ent", ",", "\"nl_ent\"", ":", "nl_ent", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.inference.Inference.history_management": [[202, 224], ["numpy.mean", "inference.Inference._logger.warning", "inference.Inference._logger.warning", "inference.Inference._logger.info", "inference.Inference._logger.warning", "inference.Inference._logger.warning"], "methods", ["None"], ["", "def", "history_management", "(", "self", ",", "debug", "=", "False", ")", ":", "\n", "        ", "past_pred", "=", "self", ".", "predictions", "[", "-", "5", ":", "]", "\n", "score", "=", "np", ".", "mean", "(", "[", "pred", "[", "\"best_score\"", "]", "for", "pred", "in", "past_pred", "]", ")", "\n", "if", "self", ".", "tracking_state", "==", "TrackingState", ".", "STABLE", ":", "\n", "            ", "self", ".", "lost_count", "=", "0", "\n", "score_status", "=", "score", "<", "self", ".", "inf_cfg", ".", "TRACK", ".", "CONFIDENCE_LOW", "\n", "if", "score_status", ":", "\n", "                ", "self", ".", "lost_count", "+=", "1", "\n", "self", ".", "tracking_state", "=", "TrackingState", ".", "LOST", "\n", "if", "debug", ":", "\n", "                    ", "self", ".", "_logger", ".", "warning", "(", "\"LOST MODE.\"", ")", "\n", "self", ".", "_logger", ".", "warning", "(", "\"SCORE IS %.2f\"", "%", "score", ")", "\n", "", "", "", "elif", "self", ".", "tracking_state", "==", "TrackingState", ".", "LOST", ":", "\n", "            ", "self", ".", "lost_count", "+=", "1", "\n", "if", "debug", ":", "\n", "                ", "self", ".", "_logger", ".", "info", "(", "\"LOST_COUNT: %d\"", "%", "self", ".", "lost_count", ")", "\n", "", "score_status", "=", "score", ">", "self", ".", "inf_cfg", ".", "TRACK", ".", "CONFIDENCE_HIGH", "\n", "if", "score_status", ":", "\n", "                ", "self", ".", "tracking_state", "=", "TrackingState", ".", "STABLE", "\n", "if", "debug", ":", "\n", "                    ", "self", ".", "_logger", ".", "warning", "(", "\"STABLE MODE.\"", ")", "\n", "self", ".", "_logger", ".", "warning", "(", "\"SCORE IS %.2f\"", "%", "score", ")", "\n", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.trainer.TrackerTrainer.__init__": [[16, 19], ["utils.logging.get_logger"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.get_logger"], ["    ", "def", "__init__", "(", "self", ",", "train_cfg", ")", ":", "\n", "        ", "self", ".", "train_cfg", "=", "train_cfg", "\n", "self", ".", "_logger", "=", "get_logger", "(", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.trainer.TrackerTrainer.train_tracker_on_datasets": [[20, 34], ["trainer.TrackerTrainer._prepare_for_training", "torch.utils.data.DistributedSampler", "torch.utils.data.DataLoader", "torch.utils.data.DistributedSampler", "torch.utils.data.DataLoader", "range", "trainer.TrackerTrainer._train_one_epoch"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.tracker.trainer.TrackerTrainer._prepare_for_training", "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.trainer.TrackerTrainer._train_one_epoch"], ["", "def", "train_tracker_on_datasets", "(", "self", ",", "tracker", ",", "train_dataset", ",", "test_dataset", ",", "rank", ")", ":", "\n", "        ", "self", ".", "_prepare_for_training", "(", "tracker", ",", "rank", ")", "\n", "train_sampler", "=", "DistributedSampler", "(", "train_dataset", ")", "\n", "train_dataloader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "self", ".", "train_cfg", ".", "TRAIN", ".", "BATCH_SIZE", ",", "\n", "sampler", "=", "train_sampler", ",", "num_workers", "=", "self", ".", "train_cfg", ".", "TRAIN", ".", "NUM_WORKERS", ")", "\n", "test_sampler", "=", "DistributedSampler", "(", "test_dataset", ")", "\n", "test_dataloader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "self", ".", "train_cfg", ".", "TRAIN", ".", "BATCH_SIZE", ",", "\n", "sampler", "=", "test_sampler", ",", "num_workers", "=", "self", ".", "train_cfg", ".", "TRAIN", ".", "NUM_WORKERS", ")", "\n", "\n", "start_epoch", "=", "self", ".", "train_cfg", ".", "TRAIN", ".", "INIT", ".", "START_EPOCH", "\n", "best_test_loss", "=", "self", ".", "train_cfg", ".", "TRAIN", ".", "LOSS_CLIP_VALUE", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "self", ".", "train_cfg", ".", "TRAIN", ".", "EPOCH", ")", ":", "\n", "            ", "best_test_loss", "=", "self", ".", "_train_one_epoch", "(", "tracker", ",", "train_dataloader", ",", "test_dataloader", ",", "best_test_loss", ",", "epoch", ",", "\n", "rank", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.trainer.TrackerTrainer._prepare_for_training": [[35, 101], ["torch.optim.SGD", "torch.optim.lr_scheduler.ReduceLROnPlateau", "tensorboardX.SummaryWriter", "tracker.module.backbone.train", "tracker.module.adjustment_layer.train", "tracker.module.backbone.eval", "tracker.module.adjustment_layer.eval", "tracker.module.backbone.parameters", "tracker.module.adjustment_layer.parameters", "NotImplementedError", "tracker.module.nl_multi_rpn.bert_model.eval", "tracker.module.nl_multi_rpn.bert_model.parameters", "torch.cuda.current_device", "torch.load", "utils.check_keys", "tracker.load_state_dict", "utils.check_keys", "trainer.TrackerTrainer.optimizer.load_state_dict", "trainer.TrackerTrainer._logger.info", "os.path.exists", "os.makedirs", "os.makedirs", "os.path.join", "open", "f.write", "tracker.module.get_trainable_weights", "trainer.TrackerTrainer._logger.info", "trainer.TrackerTrainer._logger.info", "trainer.TrackerTrainer._logger.info", "torch.cuda.current_device", "torch.load", "utils.check_keys", "tracker.load_state_dict", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "trainer.TrackerTrainer.train_cfg.dump", "trainer.TrackerTrainer._logger.warning", "trainer.TrackerTrainer._logger.info", "trainer.TrackerTrainer._logger.warning", "storage.cuda", "torch.load.keys", "storage.cuda"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.__init__.check_keys", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.__init__.check_keys", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.TqdmToLogger.write", "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.get_trainable_weights", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.__init__.check_keys"], ["", "", "def", "_prepare_for_training", "(", "self", ",", "tracker", ",", "rank", ")", ":", "\n", "        ", "if", "rank", "==", "0", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "train_cfg", ".", "LOG_DIR", ",", "self", ".", "train_cfg", ".", "EXPR_NAME", ")", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "train_cfg", ".", "LOG_DIR", ",", "self", ".", "train_cfg", ".", "EXPR_NAME", ",", "\"summary\"", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "train_cfg", ".", "LOG_DIR", ",", "self", ".", "train_cfg", ".", "EXPR_NAME", ",", "\"checkpoints\"", ")", ")", "\n", "", "self", ".", "tb_writer", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "self", ".", "train_cfg", ".", "LOG_DIR", ",", "self", ".", "train_cfg", ".", "EXPR_NAME", ",", "\"summary\"", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "train_cfg", ".", "LOG_DIR", ",", "self", ".", "train_cfg", ".", "EXPR_NAME", ",", "\"config.yaml\"", ")", ",", "\"w\"", ")", "as", "f", ":", "\n", "                ", "f", ".", "write", "(", "self", ".", "train_cfg", ".", "dump", "(", ")", ")", "\n", "", "", "self", ".", "global_step", "=", "0", "\n", "if", "self", ".", "train_cfg", ".", "TRAIN", ".", "BACKBONE_TRAIN", ":", "\n", "            ", "tracker", ".", "module", ".", "backbone", ".", "train", "(", ")", "\n", "tracker", ".", "module", ".", "adjustment_layer", ".", "train", "(", ")", "\n", "", "else", ":", "\n", "            ", "tracker", ".", "module", ".", "backbone", ".", "eval", "(", ")", "\n", "tracker", ".", "module", ".", "adjustment_layer", ".", "eval", "(", ")", "\n", "for", "param", "in", "tracker", ".", "module", ".", "backbone", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "", "for", "param", "in", "tracker", ".", "module", ".", "adjustment_layer", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "if", "self", ".", "train_cfg", ".", "LANG", ".", "FINETUNE_BERT", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Fine-tuning BERT Model is not implemented.\"", ")", "\n", "", "else", ":", "\n", "            ", "tracker", ".", "module", ".", "nl_multi_rpn", ".", "bert_model", ".", "eval", "(", ")", "\n", "for", "param", "in", "tracker", ".", "module", ".", "nl_multi_rpn", ".", "bert_model", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "\n", "params", "=", "tracker", ".", "module", ".", "get_trainable_weights", "(", "self", ".", "train_cfg", ".", "TRAIN", ".", "BACKBONE_TRAIN", ")", ",", "\n", "lr", "=", "self", ".", "train_cfg", ".", "TRAIN", ".", "LR", ".", "BASE_LR", ",", "\n", "momentum", "=", "self", ".", "train_cfg", ".", "TRAIN", ".", "LR", ".", "MOMENTUM", ")", "\n", "self", ".", "lr_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "self", ".", "optimizer", ",", "\n", "patience", "=", "2", ",", "\n", "factor", "=", "self", ".", "train_cfg", ".", "TRAIN", ".", "LR", ".", "WEIGHT_DECAY", ")", "\n", "\n", "if", "self", ".", "train_cfg", ".", "TRAIN", ".", "INIT", ".", "RESUME", ":", "\n", "            ", "device", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "ckpt", "=", "torch", ".", "load", "(", "self", ".", "train_cfg", ".", "TRAIN", ".", "INIT", ".", "RESUME", ",", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cuda", "(", "device", ")", ")", "\n", "check_keys", "(", "tracker", ",", "ckpt", "[", "'state_dict'", "]", ",", "rank", ")", "\n", "tracker", ".", "load_state_dict", "(", "ckpt", "[", "'state_dict'", "]", ",", "strict", "=", "False", ")", "\n", "check_keys", "(", "self", ".", "optimizer", ",", "ckpt", "[", "'optimizer'", "]", ",", "rank", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "ckpt", "[", "'optimizer'", "]", ")", "\n", "self", ".", "global_step", "=", "ckpt", "[", "'global_step'", "]", "\n", "if", "rank", "==", "0", ":", "\n", "                ", "self", ".", "_logger", ".", "info", "(", "\"RELOADED FROM {}.\"", ".", "format", "(", "self", ".", "train_cfg", ".", "TRAIN", ".", "INIT", ".", "RESUME", ")", ")", "\n", "self", ".", "_logger", ".", "info", "(", "\"CURRENT EPOCH {}.\"", ".", "format", "(", "ckpt", "[", "'epoch'", "]", ")", ")", "\n", "self", ".", "_logger", ".", "info", "(", "\"CURRENT GLOBAL_STEP {}.\"", ".", "format", "(", "self", ".", "global_step", ")", ")", "\n", "if", "ckpt", "[", "'epoch'", "]", "!=", "self", ".", "train_cfg", ".", "TRAIN", ".", "INIT", ".", "START_EPOCH", ":", "\n", "                    ", "self", ".", "_logger", ".", "warning", "(", "'START EPOCH AND RELOADED EPOCH DOES NOT MATCH.'", ")", "\n", "", "", "", "elif", "self", ".", "train_cfg", ".", "TRAIN", ".", "INIT", ".", "PRETRAINED", ":", "\n", "            ", "device", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "self", ".", "train_cfg", ".", "TRAIN", ".", "INIT", ".", "PRETRAINED", ",", "\n", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cuda", "(", "device", ")", ")", "\n", "resnet_keys", "=", "[", "key", "for", "key", "in", "pretrained_dict", ".", "keys", "(", ")", "if", "(", "'backbone'", "in", "key", "or", "\"adjustment_layer\"", "in", "key", ")", "]", "\n", "resnet_weights", "=", "{", "\"module.\"", "+", "key", ":", "pretrained_dict", "[", "key", "]", "for", "key", "in", "resnet_keys", "}", "\n", "check_keys", "(", "tracker", ",", "resnet_weights", ",", "rank", ")", "\n", "tracker", ".", "load_state_dict", "(", "resnet_weights", ",", "strict", "=", "False", ")", "\n", "if", "rank", "==", "0", ":", "\n", "                ", "self", ".", "_logger", ".", "info", "(", "\n", "\"LOADED PRE-TRAINED RESNET WEIGHTS AND ADJUSTMENT LAYER WEIGHTS FROM {}.\"", ".", "format", "(", "\n", "self", ".", "train_cfg", ".", "TRAIN", ".", "INIT", ".", "PRETRAINED_RESNET_ONLY", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "rank", "==", "0", ":", "\n", "                ", "self", ".", "_logger", ".", "warning", "(", "'NOT LOADING ANY WEIGHTS. INITIALIZED FROM SCRATCH.'", ")", "\n", "", "", "if", "rank", "==", "0", ":", "\n", "            ", "self", ".", "_logger", ".", "info", "(", "\"TRAINING PREPARATION DONE.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.trainer.TrackerTrainer._train_one_epoch": [[102, 169], ["trainer.TrackerTrainer._logger.info", "tqdm.tqdm.tqdm", "tqdm.tqdm.tqdm.close", "trainer.TrackerTrainer._logger.info", "trainer.TrackerTrainer._logger.info", "torch.autograd.enable_grad", "trainer.TrackerTrainer.optimizer.zero_grad", "tracker.module.compute_loss", "tqdm.tqdm.tqdm.update", "tracker.module.compute_loss.keys", "sorted", "trainer.TrackerTrainer.lr_scheduler.step", "str", "len", "utils.logging.TqdmToLogger", "loss.backward", "trainer.TrackerTrainer.optimizer.step", "trainer.TrackerTrainer._logger.info", "tracker.module.compute_loss.items", "trainer.TrackerTrainer._logger.info", "tracker.named_parameters", "tqdm.tqdm.tqdm", "sorted", "tqdm.tqdm.tqdm.close", "test_info.items", "numpy.mean", "test_info.items", "math.isnan", "math.isinf", "trainer.TrackerTrainer.tb_writer.add_scalar", "trainer.TrackerTrainer.tb_writer.add_scalar", "torch.autograd.no_grad", "tracker.module.compute_loss", "tqdm.tqdm.tqdm.update", "tracker.module.compute_loss.items", "test_info[].append", "trainer.TrackerTrainer.tb_writer.add_scalar", "os.path.join", "torch.save", "trainer.TrackerTrainer._logger.info", "loss.data.item", "loss.data.item", "loss.data.item", "torch.mean", "len", "utils.logging.TqdmToLogger", "v.data.item", "tracker.state_dict", "trainer.TrackerTrainer.optimizer.state_dict"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.compute_loss", "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.compute_loss"], ["", "", "def", "_train_one_epoch", "(", "self", ",", "tracker", ",", "train_dataloader", ",", "test_dataloader", ",", "best_test_loss", ",", "epoch", ",", "rank", ")", ":", "\n", "        ", "if", "rank", "==", "0", ":", "\n", "            ", "if", "self", ".", "train_cfg", ".", "TRAIN", ".", "BACKBONE_TRAIN", ":", "\n", "                ", "self", ".", "_logger", ".", "info", "(", "'TRAINING BACKBONE.'", ")", "\n", "", "if", "self", ".", "train_cfg", ".", "LANG", ".", "FINETUNE_BERT", ":", "\n", "                ", "self", ".", "_logger", ".", "info", "(", "'TRAINING BERT.'", ")", "\n", "", "self", ".", "_logger", ".", "info", "(", "'EPOCH: '", "+", "str", "(", "epoch", ")", ")", "\n", "", "if", "rank", "==", "0", ":", "\n", "            ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "train_dataloader", ")", ",", "leave", "=", "False", ",", "desc", "=", "\"Training Epoch %d\"", "%", "epoch", ",", "file", "=", "TqdmToLogger", "(", ")", ",", "\n", "mininterval", "=", "1", ",", "maxinterval", "=", "100", ",", ")", "\n", "\n", "", "for", "batch", "in", "train_dataloader", ":", "\n", "            ", "with", "torch", ".", "autograd", ".", "enable_grad", "(", ")", ":", "\n", "                ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "losses", "=", "tracker", ".", "module", ".", "compute_loss", "(", "batch", ")", "\n", "loss", "=", "losses", "[", "'total_loss'", "]", "\n", "if", "not", "(", "math", ".", "isnan", "(", "loss", ".", "data", ".", "item", "(", ")", ")", "\n", "or", "math", ".", "isinf", "(", "loss", ".", "data", ".", "item", "(", ")", ")", "\n", "or", "loss", ".", "data", ".", "item", "(", ")", ">", "self", ".", "train_cfg", ".", "TRAIN", ".", "LOSS_CLIP_VALUE", ")", ":", "\n", "                    ", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "", "", "self", ".", "global_step", "+=", "1", "\n", "if", "rank", "==", "0", ":", "\n", "                ", "pbar", ".", "update", "(", ")", "\n", "", "if", "self", ".", "global_step", "%", "self", ".", "train_cfg", ".", "TRAIN", ".", "PRINT_FREQ", "==", "0", ":", "\n", "                ", "if", "rank", "==", "0", ":", "\n", "                    ", "self", ".", "_logger", ".", "info", "(", "\"EPOCH: %d, STEP: %d, LR: %.6f, TRAIN_LOSS: %.6f\"", "%", "(", "\n", "epoch", ",", "self", ".", "global_step", ",", "self", ".", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "losses", "[", "\"total_loss\"", "]", ")", ")", "\n", "for", "k", ",", "v", "in", "losses", ".", "items", "(", ")", ":", "\n", "                        ", "self", ".", "tb_writer", ".", "add_scalar", "(", "'train_loss/'", "+", "k", ",", "v", ",", "self", ".", "global_step", ")", "\n", "", "self", ".", "_logger", ".", "info", "(", "\"Running Evaluation.\"", ")", "\n", "for", "k", ",", "v", "in", "tracker", ".", "named_parameters", "(", ")", ":", "\n", "                        ", "self", ".", "tb_writer", ".", "add_scalar", "(", "\"weights/%s/avg\"", "%", "k", ",", "torch", ".", "mean", "(", "v", ")", ",", "self", ".", "global_step", ")", "\n", "", "", "test_info", "=", "{", "}", "\n", "for", "k", "in", "losses", ".", "keys", "(", ")", ":", "\n", "                    ", "test_info", "[", "k", "]", "=", "[", "]", "\n", "", "if", "rank", "==", "0", ":", "\n", "                    ", "pbar_eval", "=", "tqdm", "(", "total", "=", "len", "(", "test_dataloader", ")", ",", "leave", "=", "False", ",", "desc", "=", "\"Evaluation\"", ",", "file", "=", "TqdmToLogger", "(", ")", ",", "\n", "mininterval", "=", "1", ",", "maxinterval", "=", "100", ")", "\n", "", "for", "test_data", "in", "test_dataloader", ":", "\n", "                    ", "with", "torch", ".", "autograd", ".", "no_grad", "(", ")", ":", "\n", "                        ", "test_loss", "=", "tracker", ".", "module", ".", "compute_loss", "(", "test_data", ")", "\n", "", "if", "rank", "==", "0", ":", "\n", "                        ", "pbar_eval", ".", "update", "(", ")", "\n", "", "for", "k", ",", "v", "in", "sorted", "(", "test_loss", ".", "items", "(", ")", ")", ":", "\n", "                        ", "test_info", "[", "k", "]", ".", "append", "(", "v", ".", "data", ".", "item", "(", ")", ")", "\n", "", "", "if", "rank", "==", "0", ":", "\n", "                    ", "pbar_eval", ".", "close", "(", ")", "\n", "", "for", "k", ",", "v", "in", "sorted", "(", "test_info", ".", "items", "(", ")", ")", ":", "\n", "                    ", "test_info", "[", "k", "]", "=", "np", ".", "mean", "(", "test_info", "[", "k", "]", ")", "\n", "", "if", "rank", "==", "0", ":", "\n", "                    ", "for", "k", ",", "v", "in", "test_info", ".", "items", "(", ")", ":", "\n", "                        ", "self", ".", "tb_writer", ".", "add_scalar", "(", "'test_loss/'", "+", "k", ",", "v", ",", "self", ".", "global_step", ")", "\n", "", "", "if", "test_info", "[", "\"total_loss\"", "]", "<", "best_test_loss", ":", "\n", "                    ", "best_test_loss", "=", "test_info", "[", "\"total_loss\"", "]", "\n", "if", "rank", "==", "0", ":", "\n", "                        ", "checkpoint_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "train_cfg", ".", "LOG_DIR", ",", "self", ".", "train_cfg", ".", "EXPR_NAME", ",", "\"checkpoints\"", ",", "\n", "'CKPT-E%d-S%d.pth'", "%", "(", "epoch", ",", "self", ".", "global_step", ")", ")", "\n", "torch", ".", "save", "(", "\n", "{", "'epoch'", ":", "epoch", ",", "'global_step'", ":", "self", ".", "global_step", ",", "'state_dict'", ":", "tracker", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", "}", ",", "checkpoint_file", ")", "\n", "self", ".", "_logger", ".", "info", "(", "\n", "'NEW BEST LOSS FOUND: %f, CHECKPOINT SAVED AT: %s'", "%", "(", "best_test_loss", ",", "checkpoint_file", ")", ")", "\n", "", "", "self", ".", "lr_scheduler", ".", "step", "(", "test_info", "[", "'total_loss'", "]", ")", "\n", "", "", "if", "rank", "==", "0", ":", "\n", "            ", "pbar", ".", "close", "(", ")", "\n", "", "return", "best_test_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamese_tracker.SiameseTracker.__init__": [[12, 16], ["super().__init__", "utils.logging.get_logger"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.get_logger"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", "SiameseTracker", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cfg", "=", "cfg", "\n", "self", ".", "_logger", "=", "get_logger", "(", "__name__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamese_tracker.SiameseTracker.forward": [[17, 20], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamese_tracker.SiameseTracker.get_trainable_weights": [[21, 24], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "get_trainable_weights", "(", "self", ",", "train_backbone", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamese_tracker.SiameseTracker.compute_loss": [[25, 28], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "compute_loss", "(", "self", ",", "data", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamese_tracker.SiameseTracker._forward_unimplemented": [[29, 31], ["None"], "methods", ["None"], ["", "def", "_forward_unimplemented", "(", "self", ",", "*", "input", ":", "Any", ")", "->", "None", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.__init__": [[14, 19], ["tracker.siamese_tracker.SiameseTracker.__init__", "third_party.resnet_atrous.ResNet50", "region_proposal_network.adjustment_layer.AdjustAllLayer", "region_proposal_network.multi_nl_rpn.MultiNLRPN"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__", "home.repos.pwc.inspect_result.fredfung007_snlt.third_party.resnet_atrous.ResNet50"], ["    ", "def", "__init__", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "cfg", ")", "\n", "self", ".", "backbone", "=", "ResNet50", "(", "used_layers", "=", "[", "2", ",", "3", ",", "4", "]", ")", "\n", "self", ".", "adjustment_layer", "=", "AdjustAllLayer", "(", "in_channels", "=", "[", "512", ",", "1024", ",", "2048", "]", ",", "out_channels", "=", "[", "256", ",", "256", ",", "256", "]", ")", "\n", "self", ".", "nl_multi_rpn", "=", "MultiNLRPN", "(", "self", ".", "cfg", ".", "LANG", ",", "self", ".", "cfg", ".", "ANCHOR", ".", "ANCHOR_NUM", ",", "in_channels", "=", "[", "256", ",", "256", ",", "256", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.forward": [[20, 31], ["data[].cuda", "data[].cuda", "siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.backbone", "siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.backbone", "siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.adjustment_layer", "siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.adjustment_layer", "siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.nl_multi_rpn", "utils.tracking_inference.log_softmax", "utils.tracking_inference.log_softmax"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.log_softmax", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.tracking_inference.log_softmax"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "template", "=", "data", "[", "\"template\"", "]", ".", "cuda", "(", ")", "\n", "search", "=", "data", "[", "\"search\"", "]", ".", "cuda", "(", ")", "\n", "zf", "=", "self", ".", "backbone", "(", "template", ")", "\n", "xf", "=", "self", ".", "backbone", "(", "search", ")", "\n", "zf", "=", "self", ".", "adjustment_layer", "(", "zf", ")", "\n", "xf", "=", "self", ".", "adjustment_layer", "(", "xf", ")", "\n", "rpn_output", "=", "self", ".", "nl_multi_rpn", "(", "zf", ",", "xf", ",", "data", "[", "\"phrase\"", "]", ")", "\n", "cls", "=", "log_softmax", "(", "rpn_output", "[", "\"cls\"", "]", ")", "\n", "nl_cls", "=", "log_softmax", "(", "rpn_output", "[", "\"nl_cls\"", "]", ")", "\n", "return", "{", "\"cls\"", ":", "cls", ",", "\"reg\"", ":", "rpn_output", "[", "\"reg\"", "]", ",", "\"nl_cls\"", ":", "nl_cls", ",", "\"nl_reg\"", ":", "rpn_output", "[", "\"nl_reg\"", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.get_trainable_weights": [[32, 42], ["NotImplementedError", "siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.nl_multi_rpn.parameters", "filter", "siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.adjustment_layer.parameters", "siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.backbone.parameters"], "methods", ["None"], ["", "def", "get_trainable_weights", "(", "self", ",", "train_backbone", ",", "finetune_bert", "=", "False", ")", ":", "\n", "        ", "trainable_params", "=", "[", "]", "\n", "if", "train_backbone", ":", "\n", "            ", "trainable_params", "+=", "[", "{", "\"params\"", ":", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "self", ".", "backbone", ".", "parameters", "(", ")", ")", ",", "\n", "\"lr\"", ":", "self", ".", "cfg", ".", "TRAIN", ".", "LR", ".", "BACKBONE_LAYERS_LR", "}", "]", "\n", "trainable_params", "+=", "[", "{", "\"params\"", ":", "self", ".", "adjustment_layer", ".", "parameters", "(", ")", "}", "]", "\n", "", "trainable_params", "+=", "[", "{", "\"params\"", ":", "self", ".", "nl_multi_rpn", ".", "parameters", "(", ")", "}", "]", "\n", "if", "finetune_bert", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Finetuning BERT is not implemented.\"", ")", "\n", "", "return", "trainable_params", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.compute_loss": [[43, 76], ["siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.forward", "data[].cuda", "data[].cuda", "data[].cuda", "torch.tensor().cuda", "region_proposal_network.loss.weight_l1_loss", "region_proposal_network.loss.weight_l1_loss", "region_proposal_network.loss.triplet_loss", "region_proposal_network.loss.select_cross_entropy_loss", "region_proposal_network.loss.triplet_loss", "region_proposal_network.loss.select_cross_entropy_loss", "torch.tensor", "torch.no_grad", "region_proposal_network.loss.select_cross_entropy_loss", "torch.no_grad", "region_proposal_network.loss.select_cross_entropy_loss", "rpn_output[].detach", "rpn_output[].detach"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.tracker.siamrpnpp_multinlrpn.SiamRPNPPMultiNLRPN.forward", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.weight_l1_loss", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.weight_l1_loss", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.triplet_loss", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.select_cross_entropy_loss", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.triplet_loss", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.select_cross_entropy_loss", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.select_cross_entropy_loss", "home.repos.pwc.inspect_result.fredfung007_snlt.region_proposal_network.loss.select_cross_entropy_loss"], ["", "def", "compute_loss", "(", "self", ",", "data", ")", ":", "\n", "        ", "rpn_output", "=", "self", ".", "forward", "(", "data", ")", "\n", "label_cls", "=", "data", "[", "'label_cls'", "]", ".", "cuda", "(", ")", "\n", "label_loc", "=", "data", "[", "'label_loc'", "]", ".", "cuda", "(", ")", "\n", "label_loc_weight", "=", "data", "[", "'label_loc_weight'", "]", ".", "cuda", "(", ")", "\n", "phrase_present", "=", "torch", ".", "tensor", "(", "[", "0", "if", "phrase", "==", "''", "else", "1", "for", "phrase", "in", "data", "[", "'phrase'", "]", "]", ",", "\n", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "loc_loss", "=", "weight_l1_loss", "(", "rpn_output", "[", "'reg'", "]", ",", "label_loc", ",", "label_loc_weight", ")", "\n", "if", "self", ".", "cfg", ".", "TRAIN", ".", "USE_TRIPLET_LOSS", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "cls_loss", "=", "select_cross_entropy_loss", "(", "rpn_output", "[", "'cls'", "]", ".", "detach", "(", ")", ",", "label_cls", ")", "\n", "", "t_loss", "=", "triplet_loss", "(", "rpn_output", "[", "'cls'", "]", ",", "label_cls", ",", "margin", "=", "0.4", ")", "\n", "total_loss", "=", "self", ".", "cfg", ".", "TRAIN", ".", "LR", ".", "CLS_WEIGHT", "*", "t_loss", "+", "self", ".", "cfg", ".", "TRAIN", ".", "LR", ".", "LOC_WEIGHT", "*", "loc_loss", "\n", "", "else", ":", "\n", "            ", "cls_loss", "=", "select_cross_entropy_loss", "(", "rpn_output", "[", "'cls'", "]", ",", "label_cls", ")", "\n", "total_loss", "=", "self", ".", "cfg", ".", "TRAIN", ".", "LR", ".", "CLS_WEIGHT", "*", "cls_loss", "+", "self", ".", "cfg", ".", "TRAIN", ".", "LR", ".", "LOC_WEIGHT", "*", "loc_loss", "\n", "\n", "", "nl_loc_loss", "=", "weight_l1_loss", "(", "rpn_output", "[", "'nl_reg'", "]", ",", "label_loc", ",", "label_loc_weight", ",", "phrase_present", ")", "\n", "if", "self", ".", "cfg", ".", "TRAIN", ".", "USE_TRIPLET_LOSS", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "nl_cls_loss", "=", "select_cross_entropy_loss", "(", "rpn_output", "[", "'nl_cls'", "]", ".", "detach", "(", ")", ",", "label_cls", ",", "phrase_present", ")", "\n", "", "nl_t_loss", "=", "triplet_loss", "(", "rpn_output", "[", "'nl_cls'", "]", ",", "label_cls", ",", "margin", "=", "0.4", ")", "\n", "nl_total_loss", "=", "self", ".", "cfg", ".", "TRAIN", ".", "LR", ".", "CLS_WEIGHT", "*", "nl_t_loss", "+", "self", ".", "cfg", ".", "TRAIN", ".", "LR", ".", "LOC_WEIGHT", "*", "nl_loc_loss", "\n", "", "else", ":", "\n", "            ", "nl_cls_loss", "=", "select_cross_entropy_loss", "(", "rpn_output", "[", "'nl_cls'", "]", ",", "label_cls", ",", "phrase_present", ")", "\n", "nl_total_loss", "=", "self", ".", "cfg", ".", "TRAIN", ".", "LR", ".", "CLS_WEIGHT", "*", "nl_cls_loss", "+", "self", ".", "cfg", ".", "TRAIN", ".", "LR", ".", "LOC_WEIGHT", "*", "nl_loc_loss", "\n", "", "losses", "=", "{", "'nl_total_loss'", ":", "nl_total_loss", ",", "'nl_cls_loss'", ":", "nl_cls_loss", ",", "'nl_loc_loss'", ":", "nl_loc_loss", ",", "\n", "'vis_total_loss'", ":", "total_loss", ",", "'vis_cls_loss'", ":", "cls_loss", ",", "'vis_loc_loss'", ":", "loc_loss", ",", "\n", "'total_loss'", ":", "total_loss", "+", "nl_total_loss", "}", "\n", "if", "self", ".", "cfg", ".", "TRAIN", ".", "USE_TRIPLET_LOSS", ":", "\n", "            ", "losses", "[", "'vis_t_loss'", "]", "=", "t_loss", "\n", "losses", "[", "'nl_t_loss'", "]", "=", "nl_t_loss", "\n", "", "return", "losses", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.overlap_ratio": [[20, 41], ["numpy.maximum", "numpy.minimum", "numpy.maximum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.minimum"], "function", ["None"], ["def", "overlap_ratio", "(", "rect1", ",", "rect2", ")", ":", "\n", "    ", "'''Compute overlap ratio between two rects\n    Args\n        rect:2d array of N x [x,y,w,h]\n    Return:\n        iou\n    '''", "\n", "if", "rect1", ".", "ndim", "==", "1", ":", "\n", "        ", "rect1", "=", "rect1", "[", "np", ".", "newaxis", ",", ":", "]", "\n", "", "if", "rect2", ".", "ndim", "==", "1", ":", "\n", "        ", "rect2", "=", "rect2", "[", "np", ".", "newaxis", ",", ":", "]", "\n", "", "left", "=", "np", ".", "maximum", "(", "rect1", "[", ":", ",", "0", "]", ",", "rect2", "[", ":", ",", "0", "]", ")", "\n", "right", "=", "np", ".", "minimum", "(", "rect1", "[", ":", ",", "0", "]", "+", "rect1", "[", ":", ",", "2", "]", ",", "rect2", "[", ":", ",", "0", "]", "+", "rect2", "[", ":", ",", "2", "]", ")", "\n", "top", "=", "np", ".", "maximum", "(", "rect1", "[", ":", ",", "1", "]", ",", "rect2", "[", ":", ",", "1", "]", ")", "\n", "bottom", "=", "np", ".", "minimum", "(", "rect1", "[", ":", ",", "1", "]", "+", "rect1", "[", ":", ",", "3", "]", ",", "rect2", "[", ":", ",", "1", "]", "+", "rect2", "[", ":", ",", "3", "]", ")", "\n", "\n", "intersect", "=", "np", ".", "maximum", "(", "0", ",", "right", "-", "left", ")", "*", "np", ".", "maximum", "(", "0", ",", "bottom", "-", "top", ")", "\n", "union", "=", "rect1", "[", ":", ",", "2", "]", "*", "rect1", "[", ":", ",", "3", "]", "+", "rect2", "[", ":", ",", "2", "]", "*", "rect2", "[", ":", ",", "3", "]", "-", "intersect", "\n", "iou", "=", "intersect", "/", "union", "\n", "iou", "=", "np", ".", "maximum", "(", "np", ".", "minimum", "(", "1", ",", "iou", ")", ",", "0", ")", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.success_overlap": [[43, 52], ["numpy.arange", "numpy.zeros", "ope.overlap_ratio", "range", "len", "numpy.ones", "numpy.sum", "len", "len", "numpy.sum", "float"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.overlap_ratio"], ["", "def", "success_overlap", "(", "gt_bb", ",", "result_bb", ",", "n_frame", ")", ":", "\n", "    ", "thresholds_overlap", "=", "np", ".", "arange", "(", "0", ",", "1.05", ",", "0.05", ")", "\n", "success", "=", "np", ".", "zeros", "(", "len", "(", "thresholds_overlap", ")", ")", "\n", "iou", "=", "np", ".", "ones", "(", "len", "(", "gt_bb", ")", ")", "*", "(", "-", "1", ")", "\n", "mask", "=", "np", ".", "sum", "(", "gt_bb", ">", "0", ",", "axis", "=", "1", ")", "==", "4", "\n", "iou", "[", "mask", "]", "=", "overlap_ratio", "(", "gt_bb", "[", "mask", "]", ",", "result_bb", "[", "mask", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "thresholds_overlap", ")", ")", ":", "\n", "        ", "success", "[", "i", "]", "=", "np", ".", "sum", "(", "iou", ">", "thresholds_overlap", "[", "i", "]", ")", "/", "float", "(", "n_frame", ")", "\n", "", "return", "success", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.success_error": [[54, 64], ["numpy.zeros", "numpy.sqrt", "range", "len", "numpy.ones", "numpy.sum", "numpy.sum", "len", "len", "numpy.power", "numpy.sum", "float"], "function", ["None"], ["", "def", "success_error", "(", "gt_center", ",", "result_center", ",", "thresholds", ",", "n_frame", ")", ":", "\n", "# n_frame = len(gt_center)", "\n", "    ", "success", "=", "np", ".", "zeros", "(", "len", "(", "thresholds", ")", ")", "\n", "dist", "=", "np", ".", "ones", "(", "len", "(", "gt_center", ")", ")", "*", "(", "-", "1", ")", "\n", "mask", "=", "np", ".", "sum", "(", "gt_center", ">", "0", ",", "axis", "=", "1", ")", "==", "2", "\n", "dist", "[", "mask", "]", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "\n", "np", ".", "power", "(", "gt_center", "[", "mask", "]", "-", "result_center", "[", "mask", "]", ",", "2", ")", ",", "axis", "=", "1", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "thresholds", ")", ")", ":", "\n", "        ", "success", "[", "i", "]", "=", "np", ".", "sum", "(", "dist", "<=", "thresholds", "[", "i", "]", ")", "/", "float", "(", "n_frame", ")", "\n", "", "return", "success", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.convert_bb_to_center": [[66, 69], ["numpy.array"], "function", ["None"], ["", "def", "convert_bb_to_center", "(", "bboxes", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "[", "(", "bboxes", "[", ":", ",", "0", "]", "+", "(", "bboxes", "[", ":", ",", "2", "]", "-", "1", ")", "/", "2", ")", ",", "\n", "(", "bboxes", "[", ":", ",", "1", "]", "+", "(", "bboxes", "[", ":", ",", "3", "]", "-", "1", ")", "/", "2", ")", "]", ")", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.convert_bb_to_norm_center": [[71, 73], ["ope.convert_bb_to_center"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.convert_bb_to_center"], ["", "def", "convert_bb_to_norm_center", "(", "bboxes", ",", "gt_wh", ")", ":", "\n", "    ", "return", "convert_bb_to_center", "(", "bboxes", ")", "/", "(", "gt_wh", "+", "1e-16", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_trajectories": [[75, 109], ["numpy.array", "os.path.join", "numpy.array", "os.path.join", "os.path.join", "open", "f.readlines", "numpy.array", "np.array.append", "open", "f.readlines", "numpy.array", "np.concatenate.append", "len", "numpy.concatenate", "len", "numpy.concatenate", "len", "len", "len", "len", "len", "len", "float", "float", "len", "len", "len", "ValueError", "np.array.split", "re.split", "len"], "function", ["None"], ["", "def", "get_trajectories", "(", "basedir", ",", "evaldir", ",", "tracker_name", ",", "category", ",", "video", ")", ":", "\n", "    ", "if", "category", "is", "not", "None", ":", "\n", "        ", "gt_file", "=", "os", ".", "path", ".", "join", "(", "basedir", ",", "category", ",", "video", ",", "'groundtruth.txt'", ")", "\n", "", "else", ":", "\n", "        ", "gt_file", "=", "os", ".", "path", ".", "join", "(", "basedir", ",", "video", ",", "'groundtruth.txt'", ")", "\n", "", "with", "open", "(", "gt_file", ")", "as", "f", ":", "\n", "        ", "all_gt_boxes_str", "=", "f", ".", "readlines", "(", ")", "\n", "", "all_gt_boxes", "=", "[", "]", "\n", "for", "gt_box", "in", "all_gt_boxes_str", ":", "\n", "        ", "gt_box", "=", "np", ".", "array", "(", "[", "float", "(", "index", ")", "for", "index", "in", "gt_box", ".", "split", "(", "','", ")", "]", ")", "\n", "all_gt_boxes", ".", "append", "(", "gt_box", ")", "\n", "", "all_gt_boxes", "=", "np", ".", "array", "(", "all_gt_boxes", ")", "\n", "output_file", "=", "os", ".", "path", ".", "join", "(", "evaldir", ",", "tracker_name", ",", "video", "+", "'.txt'", ")", "\n", "with", "open", "(", "output_file", ")", "as", "f", ":", "\n", "        ", "all_output_boxes_str", "=", "f", ".", "readlines", "(", ")", "\n", "", "all_output_boxes", "=", "[", "]", "\n", "for", "output_box", "in", "all_output_boxes_str", ":", "\n", "        ", "output_box", "=", "np", ".", "array", "(", "[", "float", "(", "index", ")", "for", "index", "in", "re", ".", "split", "(", "',|\\t'", ",", "output_box", ")", "]", ")", "\n", "all_output_boxes", ".", "append", "(", "output_box", ")", "\n", "", "all_output_boxes", "=", "np", ".", "array", "(", "all_output_boxes", ")", "\n", "if", "video", "==", "'monkey-17'", ":", "\n", "        ", "all_output_boxes", "=", "all_output_boxes", "[", ":", "len", "(", "all_gt_boxes", ")", "]", "\n", "", "if", "len", "(", "all_gt_boxes", ")", "==", "1", "+", "len", "(", "all_output_boxes", ")", ":", "\n", "        ", "all_output_boxes", "=", "np", ".", "concatenate", "(", "[", "all_gt_boxes", "[", "0", ":", "1", "]", ",", "all_output_boxes", "]", ")", "\n", "", "if", "len", "(", "all_gt_boxes", ")", "==", "2", "+", "len", "(", "all_output_boxes", ")", ":", "\n", "        ", "all_output_boxes", "=", "np", ".", "concatenate", "(", "[", "all_gt_boxes", "[", "0", ":", "1", "]", ",", "all_output_boxes", "]", ")", "\n", "all_gt_boxes", "=", "all_gt_boxes", "[", ":", "-", "1", "]", "\n", "", "if", "len", "(", "all_gt_boxes", ")", "==", "3", "+", "len", "(", "all_output_boxes", ")", ":", "\n", "        ", "all_gt_boxes", "=", "all_gt_boxes", "[", "3", ":", "]", "\n", "", "elif", "len", "(", "all_gt_boxes", ")", "<", "len", "(", "all_output_boxes", ")", ":", "\n", "        ", "all_output_boxes", "=", "all_output_boxes", "[", ":", "len", "(", "all_gt_boxes", ")", "]", "\n", "", "elif", "len", "(", "all_gt_boxes", ")", ">", "len", "(", "all_output_boxes", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'size of prediction and gt mismatch'", ")", "\n", "", "return", "all_gt_boxes", ",", "all_output_boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_success": [[111, 124], ["enumerate", "ope.get_trajectories", "ope.success_overlap", "len"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_trajectories", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.success_overlap"], ["", "def", "eval_success", "(", "tracker_name", ",", "basedir", ",", "evaldir", ",", "video_names", ",", "categories", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        eval_trackers: list of tracker name or single tracker name\n    Return:\n        res: dict of results\n    \"\"\"", "\n", "success_ret", "=", "{", "}", "\n", "for", "i", ",", "video", "in", "enumerate", "(", "video_names", ")", ":", "\n", "        ", "all_gt_boxes", ",", "all_output_boxes", "=", "get_trajectories", "(", "basedir", ",", "evaldir", ",", "tracker_name", ",", "\n", "categories", "[", "i", "]", "if", "categories", "is", "not", "None", "else", "None", ",", "video", ")", "\n", "success_ret", "[", "video", "]", "=", "success_overlap", "(", "all_gt_boxes", ",", "all_output_boxes", ",", "len", "(", "all_gt_boxes", ")", ")", "\n", "", "return", "success_ret", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_precision": [[126, 142], ["enumerate", "ope.get_trajectories", "ope.convert_bb_to_center", "ope.convert_bb_to_center", "numpy.arange", "ope.success_error", "len"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_trajectories", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.convert_bb_to_center", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.convert_bb_to_center", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.success_error"], ["", "def", "eval_precision", "(", "tracker_name", ",", "basedir", ",", "evaldir", ",", "video_names", ",", "categories", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        eval_trackers: list of tracker name or single tracker name\n    Return:\n        res: dict of results\n    \"\"\"", "\n", "precision_ret", "=", "{", "}", "\n", "for", "i", ",", "video", "in", "enumerate", "(", "video_names", ")", ":", "\n", "        ", "all_gt_boxes", ",", "all_output_boxes", "=", "get_trajectories", "(", "basedir", ",", "evaldir", ",", "tracker_name", ",", "\n", "categories", "[", "i", "]", "if", "categories", "is", "not", "None", "else", "None", ",", "video", ")", "\n", "gt_center", "=", "convert_bb_to_center", "(", "all_gt_boxes", ")", "\n", "tracker_center", "=", "convert_bb_to_center", "(", "all_output_boxes", ")", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "\n", "precision_ret", "[", "video", "]", "=", "success_error", "(", "gt_center", ",", "tracker_center", ",", "thresholds", ",", "len", "(", "all_gt_boxes", ")", ")", "\n", "", "return", "precision_ret", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_norm_precision": [[144, 161], ["enumerate", "ope.get_trajectories", "ope.convert_bb_to_norm_center", "ope.convert_bb_to_norm_center", "ope.success_error", "numpy.arange", "len"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_trajectories", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.convert_bb_to_norm_center", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.convert_bb_to_norm_center", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.success_error"], ["", "def", "eval_norm_precision", "(", "tracker_name", ",", "basedir", ",", "evaldir", ",", "video_names", ",", "categories", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        eval_trackers: list of tracker name or single tracker name\n    Return:\n        res: dict of results\n    \"\"\"", "\n", "\n", "norm_precision_ret", "=", "{", "}", "\n", "for", "i", ",", "video", "in", "enumerate", "(", "video_names", ")", ":", "\n", "        ", "all_gt_boxes", ",", "all_output_boxes", "=", "get_trajectories", "(", "basedir", ",", "evaldir", ",", "tracker_name", ",", "\n", "categories", "[", "i", "]", "if", "categories", "is", "not", "None", "else", "None", ",", "video", ")", "\n", "gt_center_norm", "=", "convert_bb_to_norm_center", "(", "all_gt_boxes", ",", "all_gt_boxes", "[", ":", ",", "2", ":", "4", "]", ")", "\n", "tracker_center_norm", "=", "convert_bb_to_norm_center", "(", "all_output_boxes", ",", "all_gt_boxes", "[", ":", ",", "2", ":", "4", "]", ")", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "/", "100", "\n", "norm_precision_ret", "[", "video", "]", "=", "success_error", "(", "gt_center_norm", ",", "tracker_center_norm", ",", "thresholds", ",", "len", "(", "all_gt_boxes", ")", ")", "\n", "", "return", "norm_precision_ret", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.success_overlap_iou": [[163, 170], ["len", "numpy.arange", "numpy.zeros", "range", "len", "len", "numpy.sum", "float"], "function", ["None"], ["", "def", "success_overlap_iou", "(", "ious", ")", ":", "\n", "    ", "n_frame", "=", "len", "(", "ious", ")", "\n", "thresholds_overlap", "=", "np", ".", "arange", "(", "0", ",", "1.05", ",", "0.05", ")", "\n", "success", "=", "np", ".", "zeros", "(", "len", "(", "thresholds_overlap", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "thresholds_overlap", ")", ")", ":", "\n", "        ", "success", "[", "i", "]", "=", "np", ".", "sum", "(", "ious", ">", "thresholds_overlap", "[", "i", "]", ")", "/", "float", "(", "n_frame", ")", "\n", "", "return", "success", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_label_for_ablation_study": [[172, 200], ["None"], "function", ["None"], ["", "def", "get_label_for_ablation_study", "(", "tracker", ")", ":", "\n", "    ", "if", "tracker", "==", "'SIAMRPNPP_BASELINE'", ":", "\n", "        ", "return", "'PP[B]'", "\n", "", "if", "tracker", "==", "'SIAMRPNPP/HGLMM/FINALIZED'", ":", "\n", "        ", "return", "'PP[H]'", "\n", "", "if", "tracker", "==", "'SIAMRPNPP/GLOVE/FINALIZED'", ":", "\n", "        ", "return", "'PP[G]'", "\n", "", "if", "tracker", "==", "'SIAMRPNPP/HGLMM/NL_INIT'", ":", "\n", "        ", "return", "'PP[NL]'", "\n", "", "if", "tracker", "==", "'SIAMRPN_BASELINE'", ":", "\n", "        ", "return", "'RPN[B]'", "\n", "", "if", "tracker", "==", "'SIAMRPN/GLOVE/FINALIZED'", ":", "\n", "        ", "return", "'RPN[G]'", "\n", "", "if", "tracker", "==", "'SIAMRPN/HGLMM/FINALIZED'", ":", "\n", "        ", "return", "'RPN[H]'", "\n", "", "if", "tracker", "==", "'SiamFC_BASELINE'", ":", "\n", "        ", "return", "'FC[B]'", "\n", "", "if", "tracker", "==", "\"dimp50_000\"", ":", "\n", "        ", "return", "'DiMP'", "\n", "", "if", "tracker", "==", "\"prdimp50_000\"", ":", "\n", "        ", "return", "'PrDiMP'", "\n", "", "if", "tracker", "==", "\"V3-BEST\"", ":", "\n", "        ", "return", "'PP[BERT]'", "\n", "", "if", "tracker", "==", "\"siamrcnn_lasot\"", ":", "\n", "        ", "return", "'SiamRCNN'", "\n", "", "if", "tracker", "==", "\"FENG_NL\"", ":", "\n", "        ", "return", "\"FENG[NL]\"", "\n", "", "return", "tracker", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_lasot": [[202, 247], ["numpy.arange", "pandas.DataFrame", "enumerate", "print", "numpy.arange", "pandas.DataFrame", "enumerate", "print", "pandas.DataFrame", "enumerate", "print", "open", "f.readlines", "test_video.strip", "ope.eval_success", "numpy.mean", "numpy.mean", "print", "pd.DataFrame.to_string", "ope.eval_precision", "numpy.mean", "print", "pd.DataFrame.to_string", "numpy.arange", "ope.eval_norm_precision", "numpy.mean", "print", "pd.DataFrame.to_string", "test_video.split", "list", "list", "list", "numpy.mean", "numpy.mean", "list", "ope.get_label_for_ablation_study", "eval_success.values", "eval_success.values", "ope.get_label_for_ablation_study", "eval_norm_precision.values", "list", "list", "ope.get_label_for_ablation_study", "eval_norm_precision.values", "eval_norm_precision.values", "eval_norm_precision.values"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_success", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_precision", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_norm_precision", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_label_for_ablation_study", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_label_for_ablation_study", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_label_for_ablation_study"], ["", "def", "eval_lasot", "(", ")", ":", "\n", "    ", "base_dir", "=", "'/research/fung/data/LaSOTBenchmark'", "\n", "testing_set", "=", "'/research/fung/repository/lang_tracking_vos/evaluation/nl-consistent-lasot.txt'", "\n", "tracker_base_dir", "=", "'/research/fung/results/cvpr_results/lasot'", "\n", "trackers", "=", "[", "\n", "\"dimp50_000\"", ",", "\n", "\"prdimp50_000\"", ",", "\n", "]", "\n", "\n", "with", "open", "(", "testing_set", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "testing_videos", "=", "f", ".", "readlines", "(", ")", "\n", "", "categories", "=", "[", "test_video", ".", "split", "(", "'-'", ")", "[", "0", "]", "for", "test_video", "in", "testing_videos", "]", "\n", "testing_videos", "=", "[", "test_video", ".", "strip", "(", ")", "for", "test_video", "in", "testing_videos", "]", "\n", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "1.05", ",", "0.05", ")", "\n", "success_df", "=", "pd", ".", "DataFrame", "(", "thresholds", ",", "columns", "=", "[", "'THRESHOLD'", "]", ")", "\n", "\n", "for", "idx", ",", "tracker", "in", "enumerate", "(", "trackers", ")", ":", "\n", "        ", "success_ret", "=", "eval_success", "(", "tracker", ",", "base_dir", ",", "tracker_base_dir", ",", "testing_videos", ",", "categories", ")", "\n", "success_df", "[", "get_label_for_ablation_study", "(", "tracker", ")", "]", "=", "np", ".", "mean", "(", "list", "(", "success_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "auc", "=", "np", ".", "mean", "(", "list", "(", "success_ret", ".", "values", "(", ")", ")", ")", "\n", "print", "(", "auc", ")", "\n", "", "print", "(", "success_df", ".", "to_string", "(", "index", "=", "False", ")", ")", "\n", "\n", "# # Evaluation precision plot.", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "\n", "precision_df", "=", "pd", ".", "DataFrame", "(", "thresholds", ",", "columns", "=", "[", "'THRESHOLD'", "]", ")", "\n", "\n", "for", "idx", ",", "tracker", "in", "enumerate", "(", "trackers", ")", ":", "\n", "        ", "precision_ret", "=", "eval_precision", "(", "tracker", ",", "base_dir", ",", "tracker_base_dir", ",", "testing_videos", ",", "categories", ")", "\n", "precision_df", "[", "get_label_for_ablation_study", "(", "tracker", ")", "]", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "precision", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "[", "20", "]", "\n", "print", "(", "precision", ")", "\n", "", "print", "(", "precision_df", ".", "to_string", "(", "index", "=", "False", ")", ")", "\n", "\n", "# Normalized Evaluation precision plot.", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "/", "100.", "\n", "normed_precision_df", "=", "pd", ".", "DataFrame", "(", "thresholds", ",", "columns", "=", "[", "'THRESHOLD'", "]", ")", "\n", "\n", "for", "idx", ",", "tracker", "in", "enumerate", "(", "trackers", ")", ":", "\n", "        ", "precision_ret", "=", "eval_norm_precision", "(", "tracker", ",", "base_dir", ",", "tracker_base_dir", ",", "testing_videos", ",", "categories", ")", "\n", "precision", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "[", "20", "]", "\n", "normed_precision_df", "[", "get_label_for_ablation_study", "(", "tracker", ")", "]", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "print", "(", "precision", ")", "\n", "", "print", "(", "normed_precision_df", ".", "to_string", "(", "index", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_nl_lasot": [[249, 299], ["numpy.arange", "pandas.DataFrame", "enumerate", "print", "numpy.arange", "pandas.DataFrame", "enumerate", "print", "pandas.DataFrame", "enumerate", "print", "open", "f.readlines", "test_video.strip", "ope.eval_success", "numpy.mean", "numpy.mean", "print", "pd.DataFrame.to_string", "ope.eval_precision", "numpy.mean", "print", "pd.DataFrame.to_string", "numpy.arange", "ope.eval_norm_precision", "numpy.mean", "print", "pd.DataFrame.to_string", "test_video.split", "list", "list", "list", "numpy.mean", "numpy.mean", "list", "ope.get_label_for_ablation_study", "eval_success.values", "eval_success.values", "ope.get_label_for_ablation_study", "eval_norm_precision.values", "list", "list", "ope.get_label_for_ablation_study", "eval_norm_precision.values", "eval_norm_precision.values", "eval_norm_precision.values"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_success", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_precision", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_norm_precision", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_label_for_ablation_study", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_label_for_ablation_study", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_label_for_ablation_study"], ["", "def", "eval_nl_lasot", "(", ")", ":", "\n", "    ", "base_dir", "=", "'/research/fung/data/LaSOTBenchmark'", "\n", "tracker_base_dir", "=", "'/research/fung/eccv_results/lasot'", "\n", "testing_set", "=", "'experiments/eccv/finalized/NL-CONSISTENT-LASOT'", "\n", "trackers", "=", "[", "\n", "# 'VITAL', 'MDNet', 'ATOM', 'ECO','MEEM',", "\n", "'SIAMRPNPP_BASELINE'", ",", "'SIAMRPNPP/HGLMM/FINALIZED'", ",", "\n", "'SIAMRPNPP/GLOVE/FINALIZED'", ",", "\n", "# 'SIAMRPNPP/HGLMM/NL_INIT',", "\n", "# 'SiamFC_BASELINE',", "\n", "'SIAMRPN_BASELINE'", ",", "'SIAMRPN/HGLMM/FINALIZED'", ",", "\n", "'SIAMRPN/GLOVE/FINALIZED'", "\n", "]", "\n", "\n", "with", "open", "(", "testing_set", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "testing_videos", "=", "f", ".", "readlines", "(", ")", "\n", "", "categories", "=", "[", "test_video", ".", "split", "(", "'-'", ")", "[", "0", "]", "for", "test_video", "in", "testing_videos", "]", "\n", "testing_videos", "=", "[", "test_video", ".", "strip", "(", ")", "for", "test_video", "in", "testing_videos", "]", "\n", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "1.05", ",", "0.05", ")", "\n", "success_df", "=", "pd", ".", "DataFrame", "(", "thresholds", ",", "columns", "=", "[", "'THRESHOLD'", "]", ")", "\n", "\n", "for", "idx", ",", "tracker", "in", "enumerate", "(", "trackers", ")", ":", "\n", "        ", "success_ret", "=", "eval_success", "(", "tracker", ",", "base_dir", ",", "tracker_base_dir", ",", "testing_videos", ",", "categories", ")", "\n", "success_df", "[", "get_label_for_ablation_study", "(", "tracker", ")", "]", "=", "np", ".", "mean", "(", "list", "(", "success_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "auc", "=", "np", ".", "mean", "(", "list", "(", "success_ret", ".", "values", "(", ")", ")", ")", "\n", "print", "(", "auc", ")", "\n", "", "print", "(", "success_df", ".", "to_string", "(", "index", "=", "False", ")", ")", "\n", "\n", "# Evaluation precision plot.", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "\n", "precision_df", "=", "pd", ".", "DataFrame", "(", "thresholds", ",", "columns", "=", "[", "'THRESHOLD'", "]", ")", "\n", "\n", "for", "idx", ",", "tracker", "in", "enumerate", "(", "trackers", ")", ":", "\n", "        ", "precision_ret", "=", "eval_precision", "(", "tracker", ",", "base_dir", ",", "tracker_base_dir", ",", "testing_videos", ",", "categories", ")", "\n", "precision_df", "[", "get_label_for_ablation_study", "(", "tracker", ")", "]", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "precision", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "[", "20", "]", "\n", "print", "(", "precision", ")", "\n", "", "print", "(", "precision_df", ".", "to_string", "(", "index", "=", "False", ")", ")", "\n", "\n", "# Normalized Evaluation precision plot.", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "/", "100.", "\n", "normed_precision_df", "=", "pd", ".", "DataFrame", "(", "thresholds", ",", "columns", "=", "[", "'THRESHOLD'", "]", ")", "\n", "\n", "for", "idx", ",", "tracker", "in", "enumerate", "(", "trackers", ")", ":", "\n", "        ", "precision_ret", "=", "eval_norm_precision", "(", "tracker", ",", "base_dir", ",", "tracker_base_dir", ",", "testing_videos", ",", "categories", ")", "\n", "precision", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "[", "20", "]", "\n", "normed_precision_df", "[", "get_label_for_ablation_study", "(", "tracker", ")", "]", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "print", "(", "precision", ")", "\n", "", "print", "(", "normed_precision_df", ".", "to_string", "(", "index", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_otb": [[301, 345], ["numpy.arange", "pandas.DataFrame", "enumerate", "print", "numpy.arange", "pandas.DataFrame", "enumerate", "print", "pandas.DataFrame", "enumerate", "print", "open", "f.readlines", "test_video.strip", "ope.eval_success", "numpy.mean", "numpy.mean", "print", "pd.DataFrame.to_string", "ope.eval_precision", "numpy.mean", "print", "pd.DataFrame.to_string", "numpy.arange", "ope.eval_norm_precision", "numpy.mean", "print", "pd.DataFrame.to_string", "list", "list", "list", "numpy.mean", "numpy.mean", "list", "ope.get_label_for_ablation_study", "eval_success.values", "eval_success.values", "ope.get_label_for_ablation_study", "eval_norm_precision.values", "list", "list", "ope.get_label_for_ablation_study", "eval_norm_precision.values", "eval_norm_precision.values", "eval_norm_precision.values"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_success", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_precision", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.eval_norm_precision", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_label_for_ablation_study", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_label_for_ablation_study", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_label_for_ablation_study"], ["", "def", "eval_otb", "(", ")", ":", "\n", "    ", "base_dir", "=", "'/research/fung/data/otb_sentences/OTB_videos'", "\n", "tracker_base_dir", "=", "'/research/fung/cvpr_results/lasot'", "\n", "testing_set", "=", "'/research/fung/client1/research/tmwtt_v2/input_pipeline/otb_testing_set'", "\n", "trackers", "=", "[", "\n", "\"dimp18_000\"", ",", "\n", "\"prdimp18_000\"", ",", "\n", "]", "\n", "\n", "with", "open", "(", "testing_set", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "testing_videos", "=", "f", ".", "readlines", "(", ")", "\n", "", "testing_videos", "=", "[", "test_video", ".", "strip", "(", ")", "for", "test_video", "in", "testing_videos", "]", "\n", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "1.05", ",", "0.05", ")", "\n", "success_df", "=", "pd", ".", "DataFrame", "(", "thresholds", ",", "columns", "=", "[", "'THRESHOLD'", "]", ")", "\n", "\n", "for", "idx", ",", "tracker", "in", "enumerate", "(", "trackers", ")", ":", "\n", "        ", "success_ret", "=", "eval_success", "(", "tracker", ",", "base_dir", ",", "tracker_base_dir", ",", "testing_videos", ")", "\n", "success_df", "[", "get_label_for_ablation_study", "(", "tracker", ")", "]", "=", "np", ".", "mean", "(", "list", "(", "success_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "auc", "=", "np", ".", "mean", "(", "list", "(", "success_ret", ".", "values", "(", ")", ")", ")", "\n", "print", "(", "auc", ")", "\n", "", "print", "(", "success_df", ".", "to_string", "(", "index", "=", "False", ")", ")", "\n", "\n", "# # Evaluation precision plot.", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "\n", "precision_df", "=", "pd", ".", "DataFrame", "(", "thresholds", ",", "columns", "=", "[", "'THRESHOLD'", "]", ")", "\n", "\n", "for", "idx", ",", "tracker", "in", "enumerate", "(", "trackers", ")", ":", "\n", "        ", "precision_ret", "=", "eval_precision", "(", "tracker", ",", "base_dir", ",", "tracker_base_dir", ",", "testing_videos", ")", "\n", "precision_df", "[", "get_label_for_ablation_study", "(", "tracker", ")", "]", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "precision", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "[", "20", "]", "\n", "print", "(", "precision", ")", "\n", "", "print", "(", "precision_df", ".", "to_string", "(", "index", "=", "False", ")", ")", "\n", "\n", "# Normalized Evaluation precision plot.", "\n", "thresholds", "=", "np", ".", "arange", "(", "0", ",", "51", ",", "1", ")", "/", "100.", "\n", "normed_precision_df", "=", "pd", ".", "DataFrame", "(", "thresholds", ",", "columns", "=", "[", "'THRESHOLD'", "]", ")", "\n", "\n", "for", "idx", ",", "tracker", "in", "enumerate", "(", "trackers", ")", ":", "\n", "        ", "precision_ret", "=", "eval_norm_precision", "(", "tracker", ",", "base_dir", ",", "tracker_base_dir", ",", "testing_videos", ")", "\n", "precision", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "[", "20", "]", "\n", "normed_precision_df", "[", "get_label_for_ablation_study", "(", "tracker", ")", "]", "=", "np", ".", "mean", "(", "list", "(", "precision_ret", ".", "values", "(", ")", ")", ",", "axis", "=", "0", ")", "\n", "print", "(", "precision", ")", "\n", "", "print", "(", "normed_precision_df", ".", "to_string", "(", "index", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.lasot_per_video_iou": [[347, 364], ["enumerate", "open", "f.readlines", "test_video.strip", "ope.get_trajectories", "ope.overlap_ratio", "print", "test_video.split", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_trajectories", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.overlap_ratio"], ["", "def", "lasot_per_video_iou", "(", ")", ":", "\n", "    ", "base_dir", "=", "'/research/fung/data/LaSOTBenchmark'", "\n", "tracker_base_dir", "=", "'/research/fung/cvpr_results/lasot'", "\n", "testing_set", "=", "'/research/fung/client1/research/tmwtt_v2/input_pipeline/LaSOT_testing_set'", "\n", "# tracker = \"prdimp18_000\"", "\n", "tracker", "=", "\"V3-BEST\"", "\n", "\n", "with", "open", "(", "testing_set", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "testing_videos", "=", "f", ".", "readlines", "(", ")", "\n", "", "categories", "=", "[", "test_video", ".", "split", "(", "'-'", ")", "[", "0", "]", "for", "test_video", "in", "testing_videos", "]", "\n", "testing_videos", "=", "[", "test_video", ".", "strip", "(", ")", "for", "test_video", "in", "testing_videos", "]", "\n", "for", "i", ",", "video", "in", "enumerate", "(", "testing_videos", ")", ":", "\n", "        ", "all_gt_boxes", ",", "all_output_boxes", "=", "get_trajectories", "(", "base_dir", ",", "tracker_base_dir", ",", "tracker", ",", "\n", "categories", "[", "i", "]", "if", "categories", "is", "not", "None", "else", "None", ",", "video", ")", "\n", "iou", "=", "overlap_ratio", "(", "all_gt_boxes", ",", "all_output_boxes", ")", "\n", "# success = success_overlap_iou(iou)", "\n", "print", "(", "'%s\\t%.2f'", "%", "(", "video", ",", "np", ".", "mean", "(", "iou", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.lasot_per_cat_success": [[366, 402], ["open", "f.readlines", "test_video.strip", "per_cat[].append", "enumerate", "str", "print", "test_video.split", "ope.get_trajectories", "ope.overlap_ratio", "list", "ope.success_overlap_iou", "per_cat[].append", "numpy.mean", "video.split"], "function", ["home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.get_trajectories", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.overlap_ratio", "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.ope.success_overlap_iou"], ["", "", "def", "lasot_per_cat_success", "(", ")", ":", "\n", "    ", "base_dir", "=", "'/research/fung/data/LaSOTBenchmark'", "\n", "testing_set", "=", "'/research/fung/client1/research/tmwtt_v2/input_pipeline/LaSOT_testing_set'", "\n", "tracker_base_dir", "=", "'/research/fung/cvpr_results/lasot'", "\n", "trackers", "=", "[", "\n", "\"prdimp18_000\"", ",", "\n", "\"V3-BEST\"", "\n", "]", "\n", "# tracker_base_dir = '/research/fung/cvpr_results/lasot'", "\n", "# trackers = ['SiamRPN++_tracking_result']", "\n", "with", "open", "(", "testing_set", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "testing_videos", "=", "f", ".", "readlines", "(", ")", "\n", "", "categories", "=", "[", "test_video", ".", "split", "(", "'-'", ")", "[", "0", "]", "for", "test_video", "in", "testing_videos", "]", "\n", "testing_videos", "=", "[", "test_video", ".", "strip", "(", ")", "for", "test_video", "in", "testing_videos", "]", "\n", "ious", "=", "[", "]", "\n", "per_cat", "=", "{", "\"tracker\"", ":", "[", "]", "}", "\n", "for", "c", "in", "categories", ":", "\n", "        ", "per_cat", "[", "c", "]", "=", "[", "]", "\n", "\n", "", "for", "tracker", "in", "trackers", ":", "\n", "        ", "per_cat", "[", "\"tracker\"", "]", ".", "append", "(", "tracker", ")", "\n", "for", "i", ",", "video", "in", "enumerate", "(", "testing_videos", ")", ":", "\n", "            ", "if", "i", "%", "4", "==", "0", ":", "\n", "                ", "ious", "=", "[", "]", "\n", "", "all_gt_boxes", ",", "all_output_boxes", "=", "get_trajectories", "(", "base_dir", ",", "tracker_base_dir", ",", "tracker", ",", "\n", "categories", "[", "i", "]", "if", "categories", "is", "not", "None", "else", "None", ",", "video", ")", "\n", "iou", "=", "overlap_ratio", "(", "all_gt_boxes", ",", "all_output_boxes", ")", "\n", "ious", "=", "ious", "+", "list", "(", "iou", ")", "\n", "if", "i", "%", "4", "==", "3", ":", "\n", "                ", "cat_success", "=", "success_overlap_iou", "(", "ious", ")", "\n", "per_cat", "[", "video", ".", "split", "(", "'-'", ")", "[", "0", "]", "]", ".", "append", "(", "\"%.2f\"", "%", "np", ".", "mean", "(", "cat_success", ")", ")", "\n", "", "", "", "for", "key", "in", "per_cat", ":", "\n", "        ", "row", "=", "str", "(", "key", ")", "\n", "for", "elem", "in", "per_cat", "[", "key", "]", ":", "\n", "            ", "row", "=", "row", "+", "\"\\t\"", "+", "elem", "\n", "", "print", "(", "row", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.evaluation.lasot_get_videos_full_occlusion.getMaxLength": [[18, 33], ["range"], "function", ["None"], ["def", "getMaxLength", "(", "arr", ",", "n", ")", ":", "\n", "# intitialize count", "\n", "    ", "count", "=", "0", "\n", "# initialize max", "\n", "result", "=", "0", "\n", "time", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "n", ")", ":", "\n", "        ", "if", "(", "arr", "[", "i", "]", "==", "0", ")", ":", "\n", "            ", "count", "=", "0", "\n", "", "else", ":", "\n", "            ", "count", "+=", "1", "\n", "if", "result", "<", "count", ":", "\n", "                ", "result", "=", "count", "\n", "time", "=", "i", "\n", "", "", "", "return", "result", ",", "time", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset.__init__": [[28, 52], ["utils.logging.get_logger", "paired_patches_dataset.PairedPatchesDataset._logger.info", "paired_patches_dataset.PairedPatchesDataset._logger.info", "paired_patches_dataset.PairedPatchesDataset._logger.info", "list", "paired_patches_dataset.PairedPatchesDataset.resample", "paired_patches_dataset.PairedPatchesDataset._logger.info", "paired_patches_dataset.PairedPatchesDataset._build_anchors_and_augmentations", "data_loader.prepare_dataset_for_siamese_net", "zip", "DATA_SETS.get", "len"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.get_logger", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset.resample", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset._build_anchors_and_augmentations", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.prepare_dataset_for_siamese_net"], ["    ", "def", "__init__", "(", "self", ",", "data_cfg", ",", "anchor_cfg", ",", "search_size", ",", "exemplar_size", ",", "output_size", ")", ":", "\n", "        ", "self", ".", "data_cfg", "=", "data_cfg", "\n", "self", ".", "exemplar_size", "=", "exemplar_size", "\n", "self", ".", "search_size", "=", "search_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "_logger", "=", "get_logger", "(", "__name__", ")", "\n", "self", ".", "_logger", ".", "info", "(", "\"BUILDING PAIRED PATCHES DATASET...\"", ")", "\n", "templates", "=", "[", "]", "\n", "searches", "=", "[", "]", "\n", "xyxy_bboxes", "=", "[", "]", "\n", "phrases", "=", "[", "]", "\n", "for", "dataset", "in", "self", ".", "data_cfg", ".", "DATASETS", ":", "\n", "            ", "data_loader", "=", "DATA_SETS", ".", "get", "(", "dataset", ")", "(", "self", ".", "data_cfg", ")", "\n", "data_loader", ".", "prepare_dataset_for_siamese_net", "(", ")", "\n", "templates", "+=", "data_loader", ".", "template_files", "\n", "searches", "+=", "data_loader", ".", "search_files", "\n", "xyxy_bboxes", "+=", "data_loader", ".", "xyxy_boxes", "\n", "phrases", "+=", "data_loader", ".", "phrases", "\n", "", "self", ".", "_logger", ".", "info", "(", "\"SIZE OF THE DATASET IS: %d\"", "%", "len", "(", "templates", ")", ")", "\n", "self", ".", "_logger", ".", "info", "(", "\"SHUFFLING THE ENTIRE TRAINING SET. MAY TAKE A WHILE...\"", ")", "\n", "self", ".", "list_of_datapoints", "=", "list", "(", "zip", "(", "templates", ",", "searches", ",", "xyxy_bboxes", ",", "phrases", ")", ")", "\n", "self", ".", "resample", "(", "self", ".", "data_cfg", ".", "VIDEOS_PER_EPOCH", ")", "\n", "self", ".", "_logger", ".", "info", "(", "\"SHUFFLING COMPLETED.\"", ")", "\n", "self", ".", "_build_anchors_and_augmentations", "(", "search_size", ",", "output_size", ",", "anchor_cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset._build_anchors_and_augmentations": [[53, 68], ["utils.anchor.AnchorTarget", "input_pipeline.augmentation.Augmentation", "input_pipeline.augmentation.Augmentation"], "methods", ["None"], ["", "def", "_build_anchors_and_augmentations", "(", "self", ",", "search_size", ",", "output_size", ",", "anchor_cfg", ")", ":", "\n", "        ", "self", ".", "anchor_target", "=", "AnchorTarget", "(", "search_size", ",", "output_size", ",", "anchor_cfg", "=", "anchor_cfg", ")", "\n", "self", ".", "template_aug", "=", "Augmentation", "(", "\n", "self", ".", "data_cfg", ".", "TEMPLATE", ".", "SHIFT", ",", "\n", "self", ".", "data_cfg", ".", "TEMPLATE", ".", "SCALE", ",", "\n", "self", ".", "data_cfg", ".", "TEMPLATE", ".", "BLUR", ",", "\n", "self", ".", "data_cfg", ".", "TEMPLATE", ".", "FLIP", ",", "\n", "self", ".", "data_cfg", ".", "TEMPLATE", ".", "COLOR", "\n", ")", "\n", "self", ".", "search_aug", "=", "Augmentation", "(", "\n", "self", ".", "data_cfg", ".", "SEARCH", ".", "SHIFT", ",", "\n", "self", ".", "data_cfg", ".", "SEARCH", ".", "SCALE", ",", "\n", "self", ".", "data_cfg", ".", "SEARCH", ".", "BLUR", ",", "\n", "self", ".", "data_cfg", ".", "SEARCH", ".", "FLIP", ",", "\n", "self", ".", "data_cfg", ".", "SEARCH", ".", "COLOR", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset.resample": [[70, 79], ["random.sample", "zip", "len", "len", "paired_patches_dataset.PairedPatchesDataset._logger.warning", "len", "len"], "methods", ["None"], ["", "def", "resample", "(", "self", ",", "num_of_pairs", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "list_of_datapoints", ")", "==", "0", ":", "\n", "            ", "return", "\n", "", "if", "len", "(", "self", ".", "list_of_datapoints", ")", "<", "num_of_pairs", ":", "\n", "            ", "self", ".", "_logger", ".", "warning", "(", "\"Sampled number of pairs (%d) is greater than the dataset size (%d).\"", "%", "(", "\n", "num_of_pairs", ",", "len", "(", "self", ".", "list_of_datapoints", ")", ")", ")", "\n", "num_of_pairs", "=", "len", "(", "self", ".", "list_of_datapoints", ")", "\n", "", "sampled_dp", "=", "random", ".", "sample", "(", "self", ".", "list_of_datapoints", ",", "num_of_pairs", ")", "\n", "self", ".", "template", ",", "self", ".", "search", ",", "self", ".", "xyxy_bboxes", ",", "self", ".", "phrases", "=", "zip", "(", "*", "sampled_dp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset._get_bbox": [[80, 96], ["numpy.sqrt", "utils.bbox.center2corner", "len", "utils.bbox.Center"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.center2corner"], ["", "def", "_get_bbox", "(", "self", ",", "image", ",", "shape", ",", "exemplar_size", ")", ":", "\n", "        ", "imh", ",", "imw", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "if", "len", "(", "shape", ")", "==", "4", ":", "\n", "            ", "w", ",", "h", "=", "shape", "[", "2", "]", "-", "shape", "[", "0", "]", ",", "shape", "[", "3", "]", "-", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "w", ",", "h", "=", "shape", "\n", "", "context_amount", "=", "0.5", "\n", "wc_z", "=", "w", "+", "context_amount", "*", "(", "w", "+", "h", ")", "\n", "hc_z", "=", "h", "+", "context_amount", "*", "(", "w", "+", "h", ")", "\n", "s_z", "=", "np", ".", "sqrt", "(", "wc_z", "*", "hc_z", ")", "\n", "scale_z", "=", "exemplar_size", "/", "s_z", "\n", "w", "=", "w", "*", "scale_z", "\n", "h", "=", "h", "*", "scale_z", "\n", "cx", ",", "cy", "=", "imw", "//", "2", ",", "imh", "//", "2", "\n", "bbox", "=", "center2corner", "(", "Center", "(", "cx", ",", "cy", ",", "w", ",", "h", ")", ")", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset.__len__": [[97, 99], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "template", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset.__getitem__": [[100, 130], ["cv2.imread", "cv2.imread", "utils.bbox.Corner", "utils.bbox.Corner", "paired_patches_dataset.PairedPatchesDataset._get_bbox", "paired_patches_dataset.PairedPatchesDataset.template_aug", "paired_patches_dataset.PairedPatchesDataset.search_aug", "paired_patches_dataset.PairedPatchesDataset.anchor_target", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array", "torch.from_numpy.transpose().astype", "torch.from_numpy.transpose().astype", "numpy.random.random", "numpy.random.random", "torch.from_numpy.transpose", "torch.from_numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset._get_bbox", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "gray", "=", "self", ".", "data_cfg", ".", "GRAY", "and", "self", ".", "data_cfg", ".", "GRAY", ">", "np", ".", "random", ".", "random", "(", ")", "\n", "neg", "=", "self", ".", "data_cfg", ".", "NEG", "and", "self", ".", "data_cfg", ".", "NEG", ">", "np", ".", "random", ".", "random", "(", ")", "\n", "template_image", "=", "cv2", ".", "imread", "(", "self", ".", "template", "[", "index", "]", ")", "\n", "search_image", "=", "cv2", ".", "imread", "(", "self", ".", "search", "[", "index", "]", ")", "\n", "template_box", "=", "Corner", "(", "0.", ",", "0.", ",", "0.", ",", "0.", ")", "\n", "xyxybox", "=", "Corner", "(", "self", ".", "xyxy_bboxes", "[", "index", "]", "[", "0", "]", ",", "self", ".", "xyxy_bboxes", "[", "index", "]", "[", "1", "]", ",", "self", ".", "xyxy_bboxes", "[", "index", "]", "[", "2", "]", ",", "\n", "self", ".", "xyxy_bboxes", "[", "index", "]", "[", "3", "]", ")", "\n", "search_box", "=", "self", ".", "_get_bbox", "(", "search_image", ",", "xyxybox", ",", "self", ".", "exemplar_size", ")", "\n", "\n", "template", ",", "_", "=", "self", ".", "template_aug", "(", "template_image", ",", "\n", "template_box", ",", "\n", "self", ".", "exemplar_size", ",", "\n", "gray", "=", "gray", ")", "\n", "\n", "search", ",", "bbox", "=", "self", ".", "search_aug", "(", "search_image", ",", "\n", "search_box", ",", "\n", "self", ".", "search_size", ",", "\n", "gray", "=", "gray", ")", "\n", "\n", "# get labels", "\n", "cls", ",", "delta", ",", "delta_weight", ",", "overlap", "=", "self", ".", "anchor_target", "(", "bbox", ",", "self", ".", "output_size", ",", "neg", ")", "\n", "cls", "=", "torch", ".", "from_numpy", "(", "cls", ")", "\n", "delta", "=", "torch", ".", "from_numpy", "(", "delta", ")", "\n", "delta_weight", "=", "torch", ".", "from_numpy", "(", "delta_weight", ")", "\n", "bbox", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "bbox", ")", ")", "\n", "template", "=", "torch", ".", "from_numpy", "(", "template", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "search", "=", "torch", ".", "from_numpy", "(", "search", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "return", "{", "\"template\"", ":", "template", ",", "\"search\"", ":", "search", ",", "\"label_cls\"", ":", "cls", ",", "\"label_loc\"", ":", "delta", ",", "\n", "\"label_loc_weight\"", ":", "delta_weight", ",", "\"bbox\"", ":", "bbox", ",", "\"phrase\"", ":", "self", ".", "phrases", "[", "index", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.TestDataset.__init__": [[133, 152], ["utils.logging.get_logger", "paired_patches_dataset.PairedPatchesDataset.__init__", "input_pipeline.datasets.LaSOTDataset", "input_pipeline.datasets.LaSOTDataset.prepare_dataset_for_siamese_net", "paired_patches_dataset.TestDataset._logger.info", "paired_patches_dataset.TestDataset._logger.info", "list", "paired_patches_dataset.TestDataset.resample", "paired_patches_dataset.TestDataset._build_anchors_and_augmentations", "zip", "len"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.logging.get_logger", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.prepare_dataset_for_siamese_net", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset.resample", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.paired_patches_dataset.PairedPatchesDataset._build_anchors_and_augmentations"], ["    ", "def", "__init__", "(", "self", ",", "data_cfg", ",", "anchor_cfg", ",", "search_size", ",", "exemplar_size", ",", "output_size", ")", ":", "\n", "        ", "self", ".", "data_cfg", "=", "data_cfg", "\n", "self", ".", "search_size", "=", "search_size", "\n", "self", ".", "exemplar_size", "=", "exemplar_size", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "_logger", "=", "get_logger", "(", "__name__", ")", "\n", "data_cfg", ".", "DATASETS", "=", "[", "]", "\n", "super", "(", "Dataset", ")", ".", "__init__", "(", ")", "\n", "data_loader", "=", "LaSOTDataset", "(", "data_cfg", ",", "training", "=", "False", ")", "\n", "data_loader", ".", "prepare_dataset_for_siamese_net", "(", ")", "\n", "templates", "=", "data_loader", ".", "template_files", "\n", "searches", "=", "data_loader", ".", "search_files", "\n", "xyxy_bboxes", "=", "data_loader", ".", "xyxy_boxes", "\n", "phrases", "=", "data_loader", ".", "phrases", "\n", "self", ".", "_logger", ".", "info", "(", "\"SIZE OF THE TEST DATASET IS: %d\"", "%", "len", "(", "templates", ")", ")", "\n", "self", ".", "_logger", ".", "info", "(", "\"SHUFFLING THE ENTIRE TEST SET. MAY TAKE A WHILE...\"", ")", "\n", "self", ".", "list_of_datapoints", "=", "list", "(", "zip", "(", "templates", ",", "searches", ",", "xyxy_bboxes", ",", "phrases", ")", ")", "\n", "self", ".", "resample", "(", "self", ".", "data_cfg", ".", "VIDEOS_FOR_TESTING", ")", "\n", "self", ".", "_build_anchors_and_augmentations", "(", "search_size", ",", "output_size", ",", "anchor_cfg", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.config.get_default_configs": [[58, 60], ["_C.clone"], "function", ["None"], ["def", "get_default_configs", "(", ")", ":", "\n", "    ", "return", "_C", ".", "clone", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.__init__": [[17, 27], ["numpy.array"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "shift", ",", "scale", ",", "blur", ",", "flip", ",", "color", ")", ":", "\n", "        ", "self", ".", "shift", "=", "shift", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "blur", "=", "blur", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "color", "=", "color", "\n", "self", ".", "rgbVar", "=", "np", ".", "array", "(", "\n", "[", "[", "-", "0.55919361", ",", "0.98062831", ",", "-", "0.41940627", "]", ",", "\n", "[", "1.72091413", ",", "0.19879334", ",", "-", "1.82968581", "]", ",", "\n", "[", "4.64467907", ",", "4.73710203", ",", "4.88324118", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random": [[28, 31], ["numpy.random.random"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random"], ["", "@", "staticmethod", "\n", "def", "random", "(", ")", ":", "\n", "        ", "return", "np", ".", "random", ".", "random", "(", ")", "*", "2", "-", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._crop_roi": [[32, 44], ["numpy.array().astype", "cv2.warpAffine", "float", "numpy.array"], "methods", ["None"], ["", "def", "_crop_roi", "(", "self", ",", "image", ",", "bbox", ",", "out_sz", ",", "padding", "=", "(", "0", ",", "0", ",", "0", ")", ")", ":", "\n", "        ", "bbox", "=", "[", "float", "(", "x", ")", "for", "x", "in", "bbox", "]", "\n", "a", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "2", "]", "-", "bbox", "[", "0", "]", ")", "\n", "b", "=", "(", "out_sz", "-", "1", ")", "/", "(", "bbox", "[", "3", "]", "-", "bbox", "[", "1", "]", ")", "\n", "c", "=", "-", "a", "*", "bbox", "[", "0", "]", "\n", "d", "=", "-", "b", "*", "bbox", "[", "1", "]", "\n", "mapping", "=", "np", ".", "array", "(", "[", "[", "a", ",", "0", ",", "c", "]", ",", "\n", "[", "0", ",", "b", ",", "d", "]", "]", ")", ".", "astype", "(", "np", ".", "float", ")", "\n", "crop", "=", "cv2", ".", "warpAffine", "(", "image", ",", "mapping", ",", "(", "out_sz", ",", "out_sz", ")", ",", "\n", "borderMode", "=", "cv2", ".", "BORDER_CONSTANT", ",", "\n", "borderValue", "=", "padding", ")", "\n", "return", "crop", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._blur_aug": [[45, 59], ["augmentation.Augmentation._blur_aug.rand_kernel"], "methods", ["None"], ["", "def", "_blur_aug", "(", "self", ",", "image", ")", ":", "\n", "        ", "def", "rand_kernel", "(", ")", ":", "\n", "            ", "sizes", "=", "np", ".", "arange", "(", "5", ",", "46", ",", "2", ")", "\n", "size", "=", "np", ".", "random", ".", "choice", "(", "sizes", ")", "\n", "kernel", "=", "np", ".", "zeros", "(", "(", "size", ",", "size", ")", ")", "\n", "c", "=", "int", "(", "size", "/", "2", ")", "\n", "wx", "=", "np", ".", "random", ".", "random", "(", ")", "\n", "kernel", "[", ":", ",", "c", "]", "+=", "1.", "/", "size", "*", "wx", "\n", "kernel", "[", "c", ",", ":", "]", "+=", "1.", "/", "size", "*", "(", "1", "-", "wx", ")", "\n", "return", "kernel", "\n", "\n", "", "kernel", "=", "rand_kernel", "(", ")", "\n", "image", "=", "cv2", ".", "filter2D", "(", "image", ",", "-", "1", ",", "kernel", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._color_aug": [[60, 66], ["numpy.dot", "offset.reshape.reshape.reshape", "numpy.random.randn"], "methods", ["None"], ["", "def", "_color_aug", "(", "self", ",", "image", ")", ":", "\n", "        ", "offset", "=", "np", ".", "dot", "(", "self", ".", "rgbVar", ",", "np", ".", "random", ".", "randn", "(", "3", ",", "1", ")", ")", "\n", "offset", "=", "offset", "[", ":", ":", "-", "1", "]", "# bgr 2 rgb", "\n", "offset", "=", "offset", ".", "reshape", "(", "3", ")", "\n", "image", "=", "image", "-", "offset", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._gray_aug": [[67, 71], ["cv2.cvtColor", "cv2.cvtColor"], "methods", ["None"], ["", "def", "_gray_aug", "(", "self", ",", "image", ")", ":", "\n", "        ", "grayed", "=", "cv2", ".", "cvtColor", "(", "image", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "grayed", ",", "cv2", ".", "COLOR_GRAY2BGR", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._shift_scale_aug": [[72, 111], ["utils.bbox.corner2center", "utils.bbox.center2corner", "utils.bbox.Corner", "augmentation.Augmentation._crop_roi", "min", "min", "utils.bbox.Center", "max", "max", "utils.bbox.Corner", "utils.bbox.Corner", "augmentation.Augmentation.random", "augmentation.Augmentation.random", "min", "min", "augmentation.Augmentation.random", "augmentation.Augmentation.random", "float", "float"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.corner2center", "home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.center2corner", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._crop_roi", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random"], ["", "def", "_shift_scale_aug", "(", "self", ",", "image", ",", "bbox", ",", "crop_bbox", ",", "size", ")", ":", "\n", "        ", "im_h", ",", "im_w", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "\n", "# adjust crop bounding box", "\n", "crop_bbox_center", "=", "corner2center", "(", "crop_bbox", ")", "\n", "if", "self", ".", "scale", ":", "\n", "            ", "scale_x", "=", "(", "1.0", "+", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "scale", ")", "\n", "scale_y", "=", "(", "1.0", "+", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "scale", ")", "\n", "h", ",", "w", "=", "crop_bbox_center", ".", "h", ",", "crop_bbox_center", ".", "w", "\n", "scale_x", "=", "min", "(", "scale_x", ",", "float", "(", "im_w", ")", "/", "w", ")", "\n", "scale_y", "=", "min", "(", "scale_y", ",", "float", "(", "im_h", ")", "/", "h", ")", "\n", "crop_bbox_center", "=", "Center", "(", "crop_bbox_center", ".", "x", ",", "\n", "crop_bbox_center", ".", "y", ",", "\n", "crop_bbox_center", ".", "w", "*", "scale_x", ",", "\n", "crop_bbox_center", ".", "h", "*", "scale_y", ")", "\n", "\n", "", "crop_bbox", "=", "center2corner", "(", "crop_bbox_center", ")", "\n", "if", "self", ".", "shift", ":", "\n", "            ", "sx", "=", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "shift", "\n", "sy", "=", "Augmentation", ".", "random", "(", ")", "*", "self", ".", "shift", "\n", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "crop_bbox", "\n", "\n", "sx", "=", "max", "(", "-", "x1", ",", "min", "(", "im_w", "-", "1", "-", "x2", ",", "sx", ")", ")", "\n", "sy", "=", "max", "(", "-", "y1", ",", "min", "(", "im_h", "-", "1", "-", "y2", ",", "sy", ")", ")", "\n", "\n", "crop_bbox", "=", "Corner", "(", "x1", "+", "sx", ",", "y1", "+", "sy", ",", "x2", "+", "sx", ",", "y2", "+", "sy", ")", "\n", "\n", "# adjust target bounding box", "\n", "", "x1", ",", "y1", "=", "crop_bbox", ".", "x1", ",", "crop_bbox", ".", "y1", "\n", "bbox", "=", "Corner", "(", "bbox", ".", "x1", "-", "x1", ",", "bbox", ".", "y1", "-", "y1", ",", "\n", "bbox", ".", "x2", "-", "x1", ",", "bbox", ".", "y2", "-", "y1", ")", "\n", "\n", "if", "self", ".", "scale", ":", "\n", "            ", "bbox", "=", "Corner", "(", "bbox", ".", "x1", "/", "scale_x", ",", "bbox", ".", "y1", "/", "scale_y", ",", "\n", "bbox", ".", "x2", "/", "scale_x", ",", "bbox", ".", "y2", "/", "scale_y", ")", "\n", "\n", "", "image", "=", "self", ".", "_crop_roi", "(", "image", ",", "crop_bbox", ",", "size", ")", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._flip_aug": [[112, 118], ["cv2.flip", "utils.bbox.Corner"], "methods", ["None"], ["", "def", "_flip_aug", "(", "self", ",", "image", ",", "bbox", ")", ":", "\n", "        ", "image", "=", "cv2", ".", "flip", "(", "image", ",", "1", ")", "\n", "width", "=", "image", ".", "shape", "[", "1", "]", "\n", "bbox", "=", "Corner", "(", "width", "-", "1", "-", "bbox", ".", "x2", ",", "bbox", ".", "y1", ",", "\n", "width", "-", "1", "-", "bbox", ".", "x1", ",", "bbox", ".", "y2", ")", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.__call__": [[119, 142], ["utils.bbox.center2corner", "augmentation.Augmentation._shift_scale_aug", "utils.bbox.Center", "augmentation.Augmentation._gray_aug", "numpy.random.random", "augmentation.Augmentation._color_aug", "numpy.random.random", "augmentation.Augmentation._blur_aug", "augmentation.Augmentation._flip_aug", "numpy.random.random"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.utils.bbox.center2corner", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._shift_scale_aug", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._gray_aug", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._color_aug", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._blur_aug", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation._flip_aug", "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.augmentation.Augmentation.random"], ["", "def", "__call__", "(", "self", ",", "image", ",", "bbox", ",", "size", ",", "gray", "=", "False", ")", ":", "\n", "        ", "shape", "=", "image", ".", "shape", "\n", "crop_bbox", "=", "center2corner", "(", "Center", "(", "shape", "[", "0", "]", "//", "2", ",", "shape", "[", "1", "]", "//", "2", ",", "\n", "size", "-", "1", ",", "size", "-", "1", ")", ")", "\n", "# gray augmentation", "\n", "if", "gray", ":", "\n", "            ", "image", "=", "self", ".", "_gray_aug", "(", "image", ")", "\n", "\n", "# shift scale augmentation", "\n", "", "image", ",", "bbox", "=", "self", ".", "_shift_scale_aug", "(", "image", ",", "bbox", ",", "crop_bbox", ",", "size", ")", "\n", "\n", "# color augmentation", "\n", "if", "self", ".", "color", ">", "np", ".", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", "=", "self", ".", "_color_aug", "(", "image", ")", "\n", "\n", "# blur augmentation", "\n", "", "if", "self", ".", "blur", ">", "np", ".", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", "=", "self", ".", "_blur_aug", "(", "image", ")", "\n", "\n", "# flip augmentation", "\n", "", "if", "self", ".", "flip", "and", "self", ".", "flip", ">", "np", ".", "random", ".", "random", "(", ")", ":", "\n", "            ", "image", ",", "bbox", "=", "self", ".", "_flip_aug", "(", "image", ",", "bbox", ")", "\n", "", "return", "image", ",", "bbox", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.evaluation.TNL2KDataLoader.__init__": [[8, 14], ["os.listdir", "evaluation.TNL2KDataLoader.test_video_names.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "tnl2k_home", ")", ":", "\n", "        ", "self", ".", "tnl2k_home", "=", "tnl2k_home", "\n", "self", ".", "test_video_names", "=", "[", "]", "\n", "for", "video", "in", "os", ".", "listdir", "(", "self", ".", "tnl2k_home", ")", ":", "\n", "            ", "if", "video", "!=", "\"NL\"", ":", "\n", "                ", "self", ".", "test_video_names", ".", "append", "(", "video", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.evaluation.TNL2KDataLoader.get_next_batch": [[15, 34], ["os.path.join", "os.listdir", "len", "range", "open", "gt_boxes_file.readlines", "open", "gt_nlp_file.readline().strip", "numpy.array", "images.append", "gt_boxes.append", "numpy.stack", "os.path.join", "os.path.join", "gt_nlp_file.readline", "int", "numpy.array.split"], "methods", ["None"], ["", "", "", "def", "get_next_batch", "(", "self", ",", "video_name", ")", ":", "\n", "        ", "path_to_video", "=", "os", ".", "path", ".", "join", "(", "self", ".", "tnl2k_home", ",", "video_name", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"groundtruth.txt\"", ")", ")", "as", "gt_boxes_file", ":", "\n", "            ", "all_gt_boxes", "=", "gt_boxes_file", ".", "readlines", "(", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "tnl2k_home", ",", "\"NL\"", ",", "\"%s_language.txt\"", "%", "video_name", ")", ")", "as", "gt_nlp_file", ":", "\n", "            ", "phrases", "=", "gt_nlp_file", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "\n", "", "image_files", "=", "os", ".", "listdir", "(", "path_to_video", "+", "\"/imgs/\"", ")", "\n", "\n", "length", "=", "len", "(", "all_gt_boxes", ")", "\n", "images", "=", "[", "]", "\n", "gt_boxes", "=", "[", "]", "\n", "for", "frame_num", "in", "range", "(", "length", ")", ":", "\n", "            ", "gt_box", "=", "all_gt_boxes", "[", "frame_num", "]", "\n", "gt_box", "=", "np", ".", "array", "(", "[", "int", "(", "index", ")", "for", "index", "in", "gt_box", ".", "split", "(", "\",\"", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "images", ".", "append", "(", "path_to_video", "+", "\"/imgs/\"", "+", "image_files", "[", "frame_num", "]", ")", "\n", "gt_boxes", ".", "append", "(", "gt_box", ")", "\n", "", "return", "video_name", ",", "phrases", ",", "images", ",", "np", ".", "stack", "(", "gt_boxes", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.evaluation.LaSOTDataLoader.__init__": [[37, 41], ["open", "test_dataset.readlines"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lasot_test_dataset_file", ",", "lasot_home", ")", ":", "\n", "        ", "with", "open", "(", "lasot_test_dataset_file", ")", "as", "test_dataset", ":", "\n", "            ", "self", ".", "test_video_names", "=", "test_dataset", ".", "readlines", "(", ")", "\n", "", "self", ".", "lasot_home", "=", "lasot_home", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.evaluation.LaSOTDataLoader.get_next_batch": [[42, 61], ["video_name.strip.strip.strip", "video_name.strip.strip.split", "os.path.join", "len", "range", "open", "gt_boxes_file.readlines", "open", "gt_nlp_file.readline().strip", "numpy.array", "images.append", "gt_boxes.append", "numpy.stack", "os.path.join", "os.path.join", "os.path.join", "gt_nlp_file.readline", "int", "numpy.array.split"], "methods", ["None"], ["", "def", "get_next_batch", "(", "self", ",", "video_name", ")", ":", "\n", "        ", "video_name", "=", "video_name", ".", "strip", "(", ")", "\n", "object_name", ",", "number", "=", "video_name", ".", "split", "(", "\"-\"", ")", "\n", "path_to_video", "=", "os", ".", "path", ".", "join", "(", "self", ".", "lasot_home", ",", "object_name", ",", "video_name", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"groundtruth.txt\"", ")", ")", "as", "gt_boxes_file", ":", "\n", "            ", "all_gt_boxes", "=", "gt_boxes_file", ".", "readlines", "(", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"nlp.txt\"", ")", ")", "as", "gt_nlp_file", ":", "\n", "            ", "phrases", "=", "gt_nlp_file", ".", "readline", "(", ")", ".", "strip", "(", ")", "\n", "\n", "", "length", "=", "len", "(", "all_gt_boxes", ")", "\n", "images", "=", "[", "]", "\n", "gt_boxes", "=", "[", "]", "\n", "for", "frame_num", "in", "range", "(", "length", ")", ":", "\n", "            ", "gt_box", "=", "all_gt_boxes", "[", "frame_num", "]", "\n", "gt_box", "=", "np", ".", "array", "(", "[", "int", "(", "index", ")", "for", "index", "in", "gt_box", ".", "split", "(", "\",\"", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "images", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"img\"", ",", "\"%08d.jpg\"", "%", "(", "frame_num", "+", "1", ")", ")", ")", "\n", "gt_boxes", ".", "append", "(", "gt_box", ")", "\n", "", "return", "video_name", ",", "phrases", ",", "images", ",", "np", ".", "stack", "(", "gt_boxes", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.evaluation.LaSOTDataLoader.get_all_init_frames": [[62, 79], ["test_video.strip", "test_video.strip.split", "os.path.join", "first_frames.append", "numpy.array", "gt_boxes.append", "phrases.append", "os.path.join", "open", "gt_boxes_file.readline", "open", "gt_nlp_file.readline().strip().replace", "os.path.join", "int", "os.path.join", "gt_boxes_file.readline.split", "gt_nlp_file.readline().strip", "gt_nlp_file.readline"], "methods", ["None"], ["", "def", "get_all_init_frames", "(", "self", ")", ":", "\n", "        ", "first_frames", "=", "[", "]", "\n", "gt_boxes", "=", "[", "]", "\n", "phrases", "=", "[", "]", "\n", "for", "test_video", "in", "self", ".", "test_video_names", ":", "\n", "            ", "video_name", "=", "test_video", ".", "strip", "(", ")", "\n", "object_name", ",", "number", "=", "video_name", ".", "split", "(", "\"-\"", ")", "\n", "path_to_video", "=", "os", ".", "path", ".", "join", "(", "self", ".", "lasot_home", ",", "object_name", ",", "video_name", ")", "\n", "first_frames", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"img\"", ",", "\"%08d.jpg\"", "%", "1", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"groundtruth.txt\"", ")", ")", "as", "gt_boxes_file", ":", "\n", "                ", "gt_box", "=", "gt_boxes_file", ".", "readline", "(", ")", "\n", "", "gt_box", "=", "np", ".", "array", "(", "[", "int", "(", "index", ")", "for", "index", "in", "gt_box", ".", "split", "(", "\",\"", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "gt_boxes", ".", "append", "(", "gt_box", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"nlp.txt\"", ")", ")", "as", "gt_nlp_file", ":", "\n", "                ", "phrase", "=", "gt_nlp_file", ".", "readline", "(", ")", ".", "strip", "(", ")", ".", "replace", "(", "\".\"", ",", "\"\"", ")", "\n", "", "phrases", ".", "append", "(", "phrase", ")", "\n", "", "return", "{", "\"first_frames\"", ":", "first_frames", ",", "\"gt_boxes\"", ":", "gt_boxes", ",", "\"phrases\"", ":", "phrases", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.evaluation.OTBDataLoader.__init__": [[83, 87], ["open", "test_dataset.readlines"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "otb_test_dataset_file", ",", "otb_home", ")", ":", "\n", "        ", "with", "open", "(", "otb_test_dataset_file", ")", "as", "test_dataset", ":", "\n", "            ", "self", ".", "test_video_names", "=", "test_dataset", ".", "readlines", "(", ")", "\n", "", "self", ".", "otb_home", "=", "otb_home", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.evaluation.OTBDataLoader.get_all_init_frames": [[88, 104], ["test_video.strip", "os.path.join", "first_frames.append", "numpy.array", "gt_boxes.append", "phrases.append", "os.path.join", "open", "gt_boxes_file.readline", "open", "gt_nlp_file.readline", "os.path.join", "int", "os.path.join", "gt_boxes_file.readline.split"], "methods", ["None"], ["", "def", "get_all_init_frames", "(", "self", ")", ":", "\n", "        ", "first_frames", "=", "[", "]", "\n", "gt_boxes", "=", "[", "]", "\n", "phrases", "=", "[", "]", "\n", "for", "test_video", "in", "self", ".", "test_video_names", ":", "\n", "            ", "video_name", "=", "test_video", ".", "strip", "(", ")", "\n", "path_to_video", "=", "os", ".", "path", ".", "join", "(", "self", ".", "otb_home", ",", "\"OTB_videos\"", ",", "video_name", ")", "\n", "first_frames", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"img\"", ",", "\"%08d.jpg\"", "%", "1", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"groundtruth.txt\"", ")", ")", "as", "gt_boxes_file", ":", "\n", "                ", "gt_box", "=", "gt_boxes_file", ".", "readline", "(", ")", "\n", "", "gt_box", "=", "np", ".", "array", "(", "[", "int", "(", "index", ")", "for", "index", "in", "gt_box", ".", "split", "(", "\",\"", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "gt_boxes", ".", "append", "(", "gt_box", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "otb_home", ",", "\"OTB_queries\"", ",", "video_name", "+", "\".txt\"", ")", ")", "as", "gt_nlp_file", ":", "\n", "                ", "phrase", "=", "gt_nlp_file", ".", "readline", "(", ")", "\n", "", "phrases", ".", "append", "(", "phrase", ")", "\n", "", "return", "{", "\"first_frames\"", ":", "first_frames", ",", "\"gt_boxes\"", ":", "gt_boxes", ",", "\"phrases\"", ":", "phrases", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.evaluation.OTBDataLoader.get_next_batch": [[105, 122], ["video_name.strip.strip.strip", "os.path.join", "len", "range", "open", "gt_boxes_file.readlines", "open", "gt_nlp_file.readline", "os.path.join", "numpy.array", "images.append", "gt_boxes.append", "numpy.stack", "os.path.join", "os.path.join", "int", "numpy.array.split"], "methods", ["None"], ["", "def", "get_next_batch", "(", "self", ",", "video_name", ")", ":", "\n", "        ", "video_name", "=", "video_name", ".", "strip", "(", ")", "\n", "path_to_video", "=", "os", ".", "path", ".", "join", "(", "self", ".", "otb_home", ",", "\"OTB_videos\"", ",", "video_name", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"groundtruth.txt\"", ")", ")", "as", "gt_boxes_file", ":", "\n", "            ", "all_gt_boxes", "=", "gt_boxes_file", ".", "readlines", "(", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "otb_home", ",", "\"OTB_queries\"", ",", "video_name", "+", "\".txt\"", ")", ")", "as", "gt_nlp_file", ":", "\n", "            ", "phrases", "=", "gt_nlp_file", ".", "readline", "(", ")", "\n", "", "length", "=", "len", "(", "all_gt_boxes", ")", "\n", "images", "=", "[", "]", "\n", "gt_boxes", "=", "[", "]", "\n", "for", "frame_num", "in", "range", "(", "length", ")", ":", "\n", "            ", "image", "=", "os", ".", "path", ".", "join", "(", "path_to_video", ",", "\"img\"", ",", "\"%08d.jpg\"", "%", "(", "frame_num", "+", "1", ")", ")", "\n", "gt_box", "=", "all_gt_boxes", "[", "frame_num", "]", "\n", "gt_box", "=", "np", ".", "array", "(", "[", "int", "(", "index", ")", "for", "index", "in", "gt_box", ".", "split", "(", "\",\"", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "images", ".", "append", "(", "image", ")", "\n", "gt_boxes", ".", "append", "(", "gt_box", ")", "\n", "", "return", "video_name", ",", "phrases", ",", "images", ",", "np", ".", "stack", "(", "gt_boxes", ",", "axis", "=", "0", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.BaseDataset.__init__": [[14, 20], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset_cfg", ")", ":", "\n", "        ", "self", ".", "template_files", "=", "[", "]", "\n", "self", ".", "search_files", "=", "[", "]", "\n", "self", ".", "xyxy_boxes", "=", "[", "]", "\n", "self", ".", "phrases", "=", "[", "]", "\n", "self", ".", "dataset_cfg", "=", "dataset_cfg", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.BaseDataset.prepare_dataset_for_siamese_net": [[21, 24], ["None"], "methods", ["None"], ["", "@", "abc", ".", "abstractmethod", "\n", "def", "prepare_dataset_for_siamese_net", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.VisualGenomeDataset.__init__": [[27, 31], ["datasets.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_cfg", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dataset_cfg", ")", "\n", "self", ".", "json_file", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "VISUAL_GENOME_JSON_FILE", "\n", "self", ".", "vg_home", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "VISUAL_GENOME_HOME", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.VisualGenomeDataset.prepare_dataset_for_siamese_net": [[32, 47], ["tqdm.tqdm.tqdm", "open", "json.load", "os.path.join", "os.path.join", "[].replace", "numpy.array", "datasets.VisualGenomeDataset.template_files.append", "datasets.VisualGenomeDataset.search_files.append", "datasets.VisualGenomeDataset.phrases.append", "datasets.VisualGenomeDataset.xyxy_boxes.append", "image.split", "image.split"], "methods", ["None"], ["", "def", "prepare_dataset_for_siamese_net", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "json_file", ")", "as", "vg_json_file", ":", "\n", "            ", "vg_crops", "=", "json", ".", "load", "(", "vg_json_file", ")", "\n", "", "for", "image", "in", "tqdm", "(", "vg_crops", ",", "desc", "=", "\"Reading Visual Genome Images\"", ")", ":", "\n", "            ", "for", "region", "in", "vg_crops", "[", "image", "]", ":", "\n", "                ", "x_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "vg_home", ",", "\"crop\"", ",", "image", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ",", "\n", "\"000000.%s.x.jpg\"", "%", "region", ")", "\n", "z_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "vg_home", ",", "\"crop\"", ",", "image", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ",", "\n", "\"000000.%s.z.jpg\"", "%", "region", ")", "\n", "phrase", "=", "vg_crops", "[", "image", "]", "[", "region", "]", "[", "\"phrase\"", "]", ".", "replace", "(", "\".\"", ",", "\"\"", ")", "\n", "box", "=", "np", ".", "array", "(", "vg_crops", "[", "image", "]", "[", "region", "]", "[", "\"000000\"", "]", ")", "\n", "self", ".", "template_files", ".", "append", "(", "z_file", ")", "\n", "self", ".", "search_files", ".", "append", "(", "x_file", ")", "\n", "self", ".", "phrases", ".", "append", "(", "phrase", ")", "\n", "self", ".", "xyxy_boxes", ".", "append", "(", "box", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.MSCOCODataset.__init__": [[50, 54], ["datasets.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_cfg", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dataset_cfg", ")", "\n", "self", ".", "json_file", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "MSCOCO_JSON_FILE", "\n", "self", ".", "mscoco_home", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "MSCOCO_HOME", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.MSCOCODataset.prepare_dataset_for_siamese_net": [[55, 67], ["tqdm.tqdm.tqdm", "open", "json.load", "os.path.join", "os.path.join", "numpy.array", "datasets.MSCOCODataset.template_files.append", "datasets.MSCOCODataset.search_files.append", "datasets.MSCOCODataset.xyxy_boxes.append", "datasets.MSCOCODataset.phrases.append"], "methods", ["None"], ["", "def", "prepare_dataset_for_siamese_net", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "json_file", ")", "as", "mscoco_json_file", ":", "\n", "            ", "coco_crops", "=", "json", ".", "load", "(", "mscoco_json_file", ")", "\n", "", "for", "image", "in", "tqdm", "(", "coco_crops", ",", "desc", "=", "\"Reading MSCOCO Images\"", ")", ":", "\n", "            ", "for", "region", "in", "coco_crops", "[", "image", "]", ":", "\n", "                ", "x_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "mscoco_home", ",", "\"crop511\"", ",", "image", ",", "\"000000.%s.x.jpg\"", "%", "region", ")", "\n", "z_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "mscoco_home", ",", "\"crop511\"", ",", "image", ",", "\"000000.%s.z.jpg\"", "%", "region", ")", "\n", "box", "=", "np", ".", "array", "(", "coco_crops", "[", "image", "]", "[", "region", "]", "[", "\"000000\"", "]", ")", "\n", "self", ".", "template_files", ".", "append", "(", "z_file", ")", "\n", "self", ".", "search_files", ".", "append", "(", "x_file", ")", "\n", "self", ".", "xyxy_boxes", ".", "append", "(", "box", ")", "\n", "self", ".", "phrases", ".", "append", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.LaSOTDataset.__init__": [[70, 77], ["datasets.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_cfg", ",", "training", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dataset_cfg", ")", "\n", "if", "training", ":", "\n", "            ", "self", ".", "json_file", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "LASOT_JSON_FILE", "\n", "", "else", ":", "\n", "            ", "self", ".", "json_file", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "LASOT_TEST_JSON_FILE", "\n", "", "self", ".", "lasot_home", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "LASOT_CROP_HOME", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.LaSOTDataset.prepare_dataset_for_siamese_net": [[78, 100], ["tqdm.tqdm.tqdm", "open", "json.load", "range", "os.path.join", "os.path.join", "numpy.array", "datasets.LaSOTDataset.template_files.append", "datasets.LaSOTDataset.search_files.append", "datasets.LaSOTDataset.xyxy_boxes.append", "[].replace", "datasets.LaSOTDataset.phrases.append", "video.split", "random.sample", "max", "video.split", "list", "int", "int", "random.randint"], "methods", ["None"], ["", "def", "prepare_dataset_for_siamese_net", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "json_file", ")", "as", "lasot_json_file", ":", "\n", "            ", "lasot_crops", "=", "json", ".", "load", "(", "lasot_json_file", ")", "\n", "\n", "", "for", "video", "in", "tqdm", "(", "lasot_crops", ",", "desc", "=", "\"Reading LaSOT Images\"", ")", ":", "\n", "            ", "video_name", "=", "video", ".", "split", "(", "\"/\"", ")", "[", "-", "2", "]", "+", "\"/\"", "+", "video", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "frames", "=", "lasot_crops", "[", "video", "]", "[", "\"00\"", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "dataset_cfg", ".", "LASOT_NUM_PER_VIDEO", ")", ":", "\n", "                ", "frame1", "=", "random", ".", "sample", "(", "list", "(", "frames", ")", "[", ":", "-", "1", "]", ",", "1", ")", "[", "0", "]", "\n", "frame2", "=", "\"%06d\"", "%", "max", "(", "int", "(", "(", "int", "(", "frame1", ")", "-", "random", ".", "randint", "(", "0", ",", "50", ")", ")", "/", "10", ")", "*", "10", ",", "0", ")", "\n", "if", "frame2", "not", "in", "lasot_crops", "[", "video", "]", "[", "\"00\"", "]", ":", "\n", "                    ", "frame2", "=", "frame1", "\n", "", "if", "self", ".", "dataset_cfg", ".", "ALWAYS_USE_FIRST_FRAME_Z", ":", "\n", "                    ", "frame2", "=", "\"000000\"", "\n", "", "x_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "lasot_home", ",", "video_name", ",", "\"%s.00.x.jpg\"", "%", "frame1", ")", "\n", "z_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "lasot_home", ",", "video_name", ",", "\"%s.00.z.jpg\"", "%", "frame2", ")", "\n", "box", "=", "np", ".", "array", "(", "lasot_crops", "[", "video", "]", "[", "\"00\"", "]", "[", "frame1", "]", ")", "\n", "self", ".", "template_files", ".", "append", "(", "z_file", ")", "\n", "self", ".", "search_files", ".", "append", "(", "x_file", ")", "\n", "self", ".", "xyxy_boxes", ".", "append", "(", "box", ")", "\n", "phrase", "=", "lasot_crops", "[", "video", "]", "[", "\"00\"", "]", "[", "\"phrase\"", "]", ".", "replace", "(", "\".\"", ",", "\"\"", ")", "\n", "self", ".", "phrases", ".", "append", "(", "phrase", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.OTBDataset.__init__": [[105, 109], ["datasets.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["def", "__init__", "(", "self", ",", "dataset_cfg", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dataset_cfg", ")", "\n", "self", ".", "json_file", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "OTB_JSON_FILE", "\n", "self", ".", "otb_home", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "OTB_CROP_HOME", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.OTBDataset.prepare_dataset_for_siamese_net": [[110, 130], ["tqdm.tqdm.tqdm", "open", "json.load", "range", "video.split", "os.path.join", "os.path.join", "numpy.array", "datasets.OTBDataset.template_files.append", "datasets.OTBDataset.search_files.append", "datasets.OTBDataset.xyxy_boxes.append", "datasets.OTBDataset.phrases.append", "random.sample", "max", "list", "int", "random.randint"], "methods", ["None"], ["", "def", "prepare_dataset_for_siamese_net", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "json_file", ")", "as", "otb_json_file", ":", "\n", "            ", "otb_crops", "=", "json", ".", "load", "(", "otb_json_file", ")", "\n", "\n", "", "for", "video", "in", "tqdm", "(", "otb_crops", ",", "desc", "=", "\"Reading OTB Images\"", ")", ":", "\n", "            ", "video_name", "=", "video", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "frames", "=", "otb_crops", "[", "video", "]", "[", "\"00\"", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "dataset_cfg", ".", "OTB_NUM_PER_VIDEO", ")", ":", "\n", "                ", "frame1", "=", "random", ".", "sample", "(", "list", "(", "frames", ")", "[", ":", "-", "1", "]", ",", "1", ")", "[", "0", "]", "\n", "frame2", "=", "\"%06d\"", "%", "max", "(", "int", "(", "frame1", ")", "-", "random", ".", "randint", "(", "0", ",", "50", ")", ",", "0", ")", "\n", "if", "self", ".", "dataset_cfg", ".", "ALWAYS_USE_FIRST_FRAME_Z", ":", "\n", "                    ", "frame2", "=", "\"000000\"", "\n", "", "x_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "otb_home", ",", "video_name", ",", "\"%s.00.x.jpg\"", "%", "frame1", ")", "\n", "z_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "otb_home", ",", "video_name", ",", "\"%s.00.z.jpg\"", "%", "frame2", ")", "\n", "box", "=", "np", ".", "array", "(", "otb_crops", "[", "video", "]", "[", "\"00\"", "]", "[", "frame1", "]", ")", "\n", "self", ".", "template_files", ".", "append", "(", "z_file", ")", "\n", "self", ".", "search_files", ".", "append", "(", "x_file", ")", "\n", "self", ".", "xyxy_boxes", ".", "append", "(", "box", ")", "\n", "phrase", "=", "otb_crops", "[", "video", "]", "[", "\"00\"", "]", "[", "\"phrase\"", "]", "\n", "self", ".", "phrases", ".", "append", "(", "phrase", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.YouTubeBoundingBoxDataset.__init__": [[133, 137], ["datasets.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_cfg", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dataset_cfg", ")", "\n", "self", ".", "json_file", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "YOUTUBE_JSON_FILE", "\n", "self", ".", "youtube_home", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "YOUTUBE_HOME", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.YouTubeBoundingBoxDataset.prepare_dataset_for_siamese_net": [[138, 162], ["tqdm.tqdm.tqdm", "open", "json.load", "len", "random.sample", "os.path.join", "os.path.join", "numpy.array", "list", "os.path.isfile", "os.path.isfile", "datasets.YouTubeBoundingBoxDataset.template_files.append", "datasets.YouTubeBoundingBoxDataset.search_files.append", "datasets.YouTubeBoundingBoxDataset.xyxy_boxes.append", "datasets.YouTubeBoundingBoxDataset.phrases.append"], "methods", ["None"], ["", "def", "prepare_dataset_for_siamese_net", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "json_file", ")", "as", "youtube_json_file", ":", "\n", "            ", "youtube_crops", "=", "json", ".", "load", "(", "youtube_json_file", ")", "\n", "\n", "", "for", "video", "in", "tqdm", "(", "youtube_crops", ",", "desc", "=", "\"Reading YouTube Images\"", ")", ":", "\n", "            ", "if", "\"00\"", "not", "in", "youtube_crops", "[", "video", "]", ":", "\n", "                ", "continue", "\n", "", "frames", "=", "youtube_crops", "[", "video", "]", "[", "\"00\"", "]", "\n", "if", "len", "(", "frames", ")", "<", "2", ":", "\n", "                ", "continue", "\n", "", "count", "=", "0", "\n", "while", "count", "<", "self", ".", "dataset_cfg", ".", "YOUTUBE_NUM_PER_VIDEO", ":", "\n", "                ", "frames", "=", "random", ".", "sample", "(", "list", "(", "frames", ")", ",", "2", ")", "\n", "frame1", "=", "frames", "[", "0", "]", "\n", "frame2", "=", "frames", "[", "1", "]", "\n", "x_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "youtube_home", ",", "video", ",", "\"%s.00.x.jpg\"", "%", "frame1", ")", "\n", "z_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "youtube_home", ",", "video", ",", "\"%s.00.z.jpg\"", "%", "frame2", ")", "\n", "box", "=", "np", ".", "array", "(", "youtube_crops", "[", "video", "]", "[", "\"00\"", "]", "[", "frame1", "]", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "x_file", ")", "and", "os", ".", "path", ".", "isfile", "(", "z_file", ")", "and", "box", "[", "2", "]", ">", "box", "[", "0", "]", "and", "box", "[", "3", "]", ">", "box", "[", "1", "]", ":", "\n", "                    ", "self", ".", "template_files", ".", "append", "(", "z_file", ")", "\n", "self", ".", "search_files", ".", "append", "(", "x_file", ")", "\n", "self", ".", "xyxy_boxes", ".", "append", "(", "box", ")", "\n", "self", ".", "phrases", ".", "append", "(", "\"\"", ")", "\n", "", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__": [[165, 169], ["datasets.BaseDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dataset_cfg", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "dataset_cfg", ")", "\n", "self", ".", "json_file", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "GOT_JSON_FILE", "\n", "self", ".", "got_home", "=", "self", ".", "dataset_cfg", ".", "DATA_HOME", "+", "self", ".", "dataset_cfg", ".", "GOT_HOME", "\n", "\n"]], "home.repos.pwc.inspect_result.fredfung007_snlt.input_pipeline.datasets.GOTDataset.prepare_dataset_for_siamese_net": [[170, 194], ["tqdm.tqdm.tqdm", "open", "json.load", "len", "random.sample", "os.path.join", "os.path.join", "numpy.array", "list", "os.path.isfile", "os.path.isfile", "datasets.GOTDataset.template_files.append", "datasets.GOTDataset.search_files.append", "datasets.GOTDataset.xyxy_boxes.append", "datasets.GOTDataset.phrases.append"], "methods", ["None"], ["", "def", "prepare_dataset_for_siamese_net", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "json_file", ")", "as", "got_json_file", ":", "\n", "            ", "got_crops", "=", "json", ".", "load", "(", "got_json_file", ")", "\n", "\n", "", "for", "video", "in", "tqdm", "(", "got_crops", ",", "desc", "=", "\"Reading GOT-10K Images\"", ")", ":", "\n", "            ", "if", "\"00\"", "not", "in", "got_crops", "[", "video", "]", ":", "\n", "                ", "continue", "\n", "", "frames", "=", "got_crops", "[", "video", "]", "[", "\"00\"", "]", "\n", "if", "len", "(", "frames", ")", "<", "2", ":", "\n", "                ", "continue", "\n", "", "count", "=", "0", "\n", "while", "count", "<", "self", ".", "got_home", ".", "GOT_NUM_PER_VIDEO", ":", "\n", "                ", "frames", "=", "random", ".", "sample", "(", "list", "(", "frames", ")", ",", "2", ")", "\n", "frame1", "=", "frames", "[", "0", "]", "\n", "frame2", "=", "frames", "[", "1", "]", "\n", "x_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "got_home", ",", "video", ",", "\"%s.00.x.jpg\"", "%", "frame1", ")", "\n", "z_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "got_home", ",", "video", ",", "\"%s.00.z.jpg\"", "%", "frame2", ")", "\n", "box", "=", "np", ".", "array", "(", "got_crops", "[", "video", "]", "[", "\"00\"", "]", "[", "frame1", "]", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "x_file", ")", "and", "os", ".", "path", ".", "isfile", "(", "z_file", ")", "and", "box", "[", "2", "]", ">", "box", "[", "0", "]", "and", "box", "[", "3", "]", ">", "box", "[", "1", "]", ":", "\n", "                    ", "self", ".", "template_files", ".", "append", "(", "z_file", ")", "\n", "self", ".", "search_files", ".", "append", "(", "x_file", ")", "\n", "self", ".", "xyxy_boxes", ".", "append", "(", "box", ")", "\n", "self", ".", "phrases", ".", "append", "(", "\"\"", ")", "\n", "", "count", "+=", "1", "\n", "", "", "", "", ""]]}