{"home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.init_model": [[126, 149], ["torch.optim.Adam", "model.GCN", "model.JKNetMaxpool.parameters", "model.GAT", "model.JKNetConCat", "model.JKNetMaxpool", "print"], "function", ["None"], ["def", "init_model", "(", ")", ":", "\n", "    ", "if", "args", ".", "model", "==", "\"GCN\"", ":", "\n", "        ", "model", "=", "GCN", "(", "**", "model_args", ")", "\n", "", "elif", "args", ".", "model", "==", "\"GAT\"", ":", "\n", "        ", "model_args", "[", "\"num_heads\"", "]", "=", "8", "\n", "model_args", "[", "\"n_units\"", "]", "=", "8", "\n", "model_args", "[", "\"dropout\"", "]", "=", "0.6", "\n", "model_args", "[", "\"activation\"", "]", "=", "\"elu\"", "\n", "model", "=", "GAT", "(", "**", "model_args", ")", "\n", "", "else", ":", "\n", "        ", "model_args", "[", "\"n_layers\"", "]", "=", "args", ".", "hidden_layers", "\n", "if", "args", ".", "model", "==", "\"JKNetConCat\"", ":", "\n", "            ", "model", "=", "JKNetConCat", "(", "**", "model_args", ")", "\n", "", "elif", "args", ".", "model", "==", "\"JKNetMaxpool\"", ":", "\n", "            ", "model", "=", "JKNetMaxpool", "(", "**", "model_args", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"Model should be GCN, GAT, JKNetConCat or JKNetMaxpool.\"", ")", "\n", "assert", "False", "\n", "\n", "", "", "optimizer", "=", "th", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "\n", "lr", "=", "args", ".", "lr", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "return", "model", ",", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.evaluate": [[151, 160], ["model.eval", "torch.no_grad", "model", "torch.max", "torch.sum", "len", "th.sum.item"], "function", ["None"], ["", "def", "evaluate", "(", "model", ",", "data", ",", "mask", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "th", ".", "no_grad", "(", ")", ":", "\n", "        ", "logits", "=", "model", "(", "data", ")", "\n", "logits", "=", "logits", "[", "mask", "]", "\n", "_", ",", "indices", "=", "th", ".", "max", "(", "logits", ",", "dim", "=", "1", ")", "\n", "labels", "=", "data", ".", "labels", "[", "mask", "]", "\n", "correct", "=", "th", ".", "sum", "(", "indices", "==", "labels", ")", "\n", "return", "correct", ".", "item", "(", ")", "*", "1.0", "/", "len", "(", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.train": [[162, 174], ["model.train", "model", "torch.nll_loss", "torch.nll_loss().item", "optimizer.zero_grad", "F.nll_loss.backward", "optimizer.step", "main.evaluate", "main.evaluate", "main.evaluate", "torch.nll_loss"], "function", ["home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.train", "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.evaluate", "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.evaluate", "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.evaluate"], ["", "", "def", "train", "(", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "logits", "=", "model", "(", "data", ")", "\n", "loss", "=", "F", ".", "nll_loss", "(", "logits", "[", "idx_train", "]", ",", "data", ".", "labels", "[", "idx_train", "]", ")", "\n", "val_loss", "=", "F", ".", "nll_loss", "(", "logits", "[", "idx_val", "]", ",", "data", ".", "labels", "[", "idx_val", "]", ")", ".", "item", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "train_acc", "=", "evaluate", "(", "model", ",", "data", ",", "idx_train", ")", "\n", "val_acc", "=", "evaluate", "(", "model", ",", "data", ",", "idx_val", ")", "\n", "test_acc", "=", "evaluate", "(", "model", ",", "data", ",", "idx_test", ")", "\n", "return", "val_loss", ",", "[", "train_acc", ",", "val_acc", ",", "test_acc", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.Train": [[176, 196], ["range", "print", "main.train", "log.format", "print", "print", "log.format"], "function", ["home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.train"], ["", "def", "Train", "(", ")", ":", "\n", "    ", "patience", "=", "args", ".", "patience", "\n", "best_val_loss", "=", "np", ".", "inf", "\n", "selected_accs", "=", "None", "\n", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "epochs", ")", ":", "\n", "        ", "if", "patience", "<", "0", ":", "\n", "            ", "print", "(", "\"Early stopping happen at epoch %d.\"", "%", "epoch", ")", "\n", "break", "\n", "", "val_loss", ",", "accs", "=", "train", "(", ")", "\n", "if", "val_loss", "<", "best_val_loss", ":", "\n", "            ", "best_val_loss", "=", "val_loss", "\n", "selected_accs", "=", "accs", "\n", "patience", "=", "args", ".", "patience", "\n", "if", "args", ".", "verbose", ":", "\n", "                ", "log", "=", "'Epoch: {:03d}, Train: {:.4f}, Val: {:.4f}, Test: {:.4f}'", "\n", "print", "(", "log", ".", "format", "(", "epoch", ",", "*", "accs", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "patience", "-=", "1", "\n", "", "", "log", "=", "'Training finished. Train: {:.4f}, Val: {:.4f}, Test: {:.4f}'", "\n", "print", "(", "log", ".", "format", "(", "*", "accs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.grad_attack": [[198, 232], ["data.features.requires_grad_", "model.eval", "model", "torch.nll_loss", "optimizer.zero_grad", "torch.autograd.gradcheck.zero_gradients", "F.nll_loss.backward", "data.features.grad.detach().clone", "main.pick_feature", "data.features.requires_grad_", "torch.zeros", "main.evaluate", "enumerate", "main.evaluate", "model.eval", "main.evaluate", "model.eval", "torch.no_grad", "torch.nll_loss", "data.features.grad.detach", "torch.no_grad", "torch.nll_loss", "model", "model"], "function", ["home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.pick_feature", "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.evaluate", "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.evaluate", "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.evaluate"], ["", "def", "grad_attack", "(", "norm_length", ")", ":", "\n", "    ", "data", ".", "features", ".", "requires_grad_", "(", "True", ")", "\n", "model", ".", "eval", "(", ")", "\n", "logits", "=", "model", "(", "data", ")", "\n", "loss", "=", "F", ".", "nll_loss", "(", "logits", "[", "idx_train", "]", ",", "data", ".", "labels", "[", "idx_train", "]", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "zero_gradients", "(", "data", ".", "features", ")", "\n", "loss", ".", "backward", "(", "retain_graph", "=", "True", ")", "\n", "grad", "=", "data", ".", "features", ".", "grad", ".", "detach", "(", ")", ".", "clone", "(", ")", "\n", "signs", ",", "indexs", "=", "pick_feature", "(", "grad", ",", "args", ".", "num_features", ")", "\n", "data", ".", "features", ".", "requires_grad_", "(", "False", ")", "\n", "result", "=", "th", ".", "zeros", "(", "7", ",", "2", ")", "\n", "result", "[", "0", "]", "[", "0", "]", "=", "evaluate", "(", "model", ",", "data", ",", "idx_test", ")", "\n", "for", "i", ",", "targets", "in", "enumerate", "(", "[", "\n", "Baseline_Degree", ",", "Baseline_Pagerank", ",", "Baseline_Between", ",", "\n", "Baseline_Random", ",", "GC_RWCS", ",", "RWCS", "\n", "]", ")", ":", "\n", "        ", "for", "target", "in", "targets", ":", "\n", "            ", "for", "index", "in", "indexs", ":", "\n", "                ", "data", ".", "features", "[", "target", "]", "[", "index", "]", "+=", "norm_length", "*", "signs", "[", "index", "]", "\n", "", "", "result", "[", "i", "]", "[", "0", "]", "=", "evaluate", "(", "model", ",", "data", ",", "idx_test", ")", "\n", "model", ".", "eval", "(", ")", "\n", "with", "th", ".", "no_grad", "(", ")", ":", "\n", "            ", "logits", "=", "model", "(", "data", ")", "[", "idx_test", "]", "\n", "result", "[", "i", "]", "[", "1", "]", "=", "F", ".", "nll_loss", "(", "logits", ",", "data", ".", "labels", "[", "idx_test", "]", ")", "\n", "", "for", "target", "in", "targets", ":", "\n", "            ", "for", "index", "in", "indexs", ":", "\n", "                ", "data", ".", "features", "[", "target", "]", "[", "index", "]", "-=", "norm_length", "*", "signs", "[", "index", "]", "\n", "", "", "", "result", "[", "-", "1", ",", "0", "]", "=", "evaluate", "(", "model", ",", "data", ",", "idx_test", ")", "\n", "model", ".", "eval", "(", ")", "\n", "with", "th", ".", "no_grad", "(", ")", ":", "\n", "        ", "logits", "=", "model", "(", "data", ")", "[", "idx_test", "]", "\n", "result", "[", "-", "1", ",", "1", "]", "=", "F", ".", "nll_loss", "(", "logits", ",", "data", ".", "labels", "[", "idx_test", "]", ")", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.black_attack": [[233, 261], ["torch.zeros", "enumerate", "copy.deepcopy", "main.evaluate", "model.eval", "copy.deepcopy", "main.evaluate", "model.eval", "torch.no_grad", "torch.nll_loss", "torch.no_grad", "torch.nll_loss", "model", "model"], "function", ["home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.evaluate", "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.evaluate"], ["", "def", "black_attack", "(", "norm_length", "=", "10", ")", ":", "\n", "    ", "result", "=", "th", ".", "zeros", "(", "7", ",", "2", ")", "\n", "for", "i", ",", "targets", "in", "enumerate", "(", "[", "\n", "Baseline_Degree", ",", "Baseline_Pagerank", ",", "Baseline_Between", ",", "\n", "Baseline_Random", ",", "GC_RWCS", ",", "RWCS", "\n", "]", ")", ":", "\n", "        ", "data", "=", "deepcopy", "(", "data_backup", ")", "\n", "for", "target", "in", "targets", ":", "\n", "            ", "positive", "=", "data", ".", "features", "[", "target", "]", "[", "0", "]", "+", "data", ".", "features", "[", "target", "]", "[", "2", "]", "\n", "negative", "=", "data", ".", "features", "[", "target", "]", "[", "1", "]", "+", "data", ".", "features", "[", "target", "]", "[", "3", "]", "\n", "if", "positive", ">", "negative", ":", "\n", "                ", "data", ".", "features", "[", "target", "]", "[", "0", "]", "-=", "norm_length", "\n", "data", ".", "features", "[", "target", "]", "[", "1", "]", "+=", "norm_length", "\n", "", "else", ":", "\n", "                ", "data", ".", "features", "[", "target", "]", "[", "0", "]", "+=", "norm_length", "\n", "data", ".", "features", "[", "target", "]", "[", "1", "]", "-=", "norm_length", "\n", "", "", "result", "[", "i", "]", "[", "0", "]", "=", "evaluate", "(", "model", ",", "data", ",", "idx_test", ")", "\n", "model", ".", "eval", "(", ")", "\n", "with", "th", ".", "no_grad", "(", ")", ":", "\n", "            ", "logits", "=", "model", "(", "data", ")", "[", "idx_test", "]", "\n", "result", "[", "i", "]", "[", "1", "]", "=", "F", ".", "nll_loss", "(", "logits", ",", "data", ".", "labels", "[", "idx_test", "]", ")", "\n", "", "data", "=", "deepcopy", "(", "data_backup", ")", "\n", "result", "[", "-", "1", ",", "0", "]", "=", "evaluate", "(", "model", ",", "data", ",", "idx_test", ")", "\n", "model", ".", "eval", "(", ")", "\n", "with", "th", ".", "no_grad", "(", ")", ":", "\n", "            ", "logits", "=", "model", "(", "data", ")", "[", "idx_test", "]", "\n", "result", "[", "-", "1", ",", "1", "]", "=", "F", ".", "nll_loss", "(", "logits", ",", "data", ".", "labels", "[", "idx_test", "]", ")", "\n", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.main.pick_feature": [[262, 269], ["grad.sum", "torch.topk", "torch.zeros", "grad.sum.abs", "score[].sign"], "function", ["None"], ["", "def", "pick_feature", "(", "grad", ",", "k", ")", ":", "\n", "    ", "score", "=", "grad", ".", "sum", "(", "dim", "=", "0", ")", "\n", "_", ",", "indexs", "=", "th", ".", "topk", "(", "score", ".", "abs", "(", ")", ",", "k", ")", "\n", "signs", "=", "th", ".", "zeros", "(", "data", ".", "features", ".", "shape", "[", "1", "]", ")", "\n", "for", "i", "in", "indexs", ":", "\n", "        ", "signs", "[", "i", "]", "=", "score", "[", "i", "]", ".", "sign", "(", ")", "\n", "", "return", "signs", ",", "indexs", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.attack.getScore": [[5, 10], ["range", "th.sparse.mm.sum", "torch.sparse.mm"], "function", ["None"], ["def", "getScore", "(", "K", ",", "data", ")", ":", "\n", "    ", "Random", "=", "data", ".", "Prob", "\n", "for", "i", "in", "range", "(", "K", "-", "1", ")", ":", "\n", "        ", "Random", "=", "th", ".", "sparse", ".", "mm", "(", "Random", ",", "data", ".", "Prob", ")", "\n", "", "return", "Random", ".", "sum", "(", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.attack.getScoreGreedy": [[12, 36], ["range", "torch.zeros", "range", "th.zeros.sum", "range", "numpy.array", "torch.sparse.mm", "torch.topk", "zip", "ind.append", "torch.sum", "range", "max", "data.g.out_edges", "data.g.out_degree", "l.remove"], "function", ["None"], ["", "def", "getScoreGreedy", "(", "K", ",", "data", ",", "bar", ",", "num", ",", "beta", ")", ":", "\n", "    ", "Random", "=", "data", ".", "Prob", "\n", "for", "i", "in", "range", "(", "K", "-", "1", ")", ":", "\n", "        ", "Random", "=", "th", ".", "sparse", ".", "mm", "(", "Random", ",", "data", ".", "Prob", ")", "\n", "", "W", "=", "th", ".", "zeros", "(", "data", ".", "size", ",", "data", ".", "size", ")", "\n", "for", "i", "in", "range", "(", "data", ".", "size", ")", ":", "\n", "        ", "value", ",", "index", "=", "th", ".", "topk", "(", "Random", "[", "i", "]", ",", "beta", ")", "\n", "for", "j", ",", "ind", "in", "zip", "(", "value", ",", "index", ")", ":", "\n", "            ", "if", "j", "!=", "0", ":", "\n", "                ", "W", "[", "i", ",", "ind", "]", "=", "1", "\n", "", "", "", "SCORE", "=", "W", ".", "sum", "(", "dim", "=", "0", ")", "\n", "ind", "=", "[", "]", "\n", "l", "=", "[", "i", "for", "i", "in", "range", "(", "data", ".", "size", ")", "if", "data", ".", "g", ".", "out_degree", "(", "i", ")", "<=", "bar", "]", "\n", "for", "_", "in", "range", "(", "num", ")", ":", "\n", "        ", "cand", "=", "[", "(", "SCORE", "[", "i", "]", ",", "i", ")", "for", "i", "in", "l", "]", "\n", "best", "=", "max", "(", "cand", ")", "[", "1", "]", "\n", "for", "neighbor", "in", "data", ".", "g", ".", "out_edges", "(", "best", ")", "[", "1", "]", ":", "\n", "            ", "if", "neighbor", "in", "l", ":", "\n", "                ", "l", ".", "remove", "(", "neighbor", ")", "\n", "", "", "ind", ".", "append", "(", "best", ")", "\n", "for", "i", "in", "l", ":", "\n", "            ", "W", "[", ":", ",", "i", "]", "-=", "(", "W", "[", ":", ",", "best", "]", ">", "0", ")", "*", "1.0", "\n", "", "SCORE", "=", "th", ".", "sum", "(", "W", ">", "0", ",", "dim", "=", "0", ")", "\n", "", "return", "np", ".", "array", "(", "ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.attack.getThrehold": [[38, 67], ["g.out_degrees", "sorted", "int", "range", "len", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "index.append", "numpy.random.choice", "range", "numpy.random.choice", "index.append", "numpy.random.choice", "len", "len", "len", "len", "len", "len"], "function", ["None"], ["", "def", "getThrehold", "(", "g", ",", "size", ",", "threshold", ",", "num", ")", ":", "\n", "    ", "degree", "=", "g", ".", "out_degrees", "(", "range", "(", "size", ")", ")", "\n", "Cand_degree", "=", "sorted", "(", "[", "(", "degree", "[", "i", "]", ",", "i", ")", "for", "i", "in", "range", "(", "size", ")", "]", ",", "reverse", "=", "True", ")", "\n", "threshold", "=", "int", "(", "size", "*", "threshold", ")", "\n", "bar", ",", "_", "=", "Cand_degree", "[", "threshold", "]", "\n", "Baseline_Degree", "=", "[", "]", "\n", "index", "=", "[", "j", "for", "i", ",", "j", "in", "Cand_degree", "if", "i", "==", "bar", "]", "\n", "if", "len", "(", "index", ")", ">=", "num", ":", "\n", "        ", "Baseline_Degree", "=", "np", ".", "array", "(", "index", ")", "[", "np", ".", "random", ".", "choice", "(", "len", "(", "index", ")", ",", "\n", "num", ",", "\n", "replace", "=", "False", ")", "]", "\n", "", "else", ":", "\n", "        ", "while", "1", ":", "\n", "            ", "bar", "-=", "1", "\n", "index_", "=", "[", "j", "for", "i", ",", "j", "in", "Cand_degree", "if", "i", "==", "bar", "]", "\n", "if", "len", "(", "index", ")", "+", "len", "(", "index_", ")", ">=", "num", ":", "\n", "                ", "break", "\n", "", "for", "i", "in", "index_", ":", "\n", "                ", "index", ".", "append", "(", "i", ")", "\n", "", "", "for", "i", "in", "np", ".", "array", "(", "index_", ")", "[", "np", ".", "random", ".", "choice", "(", "len", "(", "index_", ")", ",", "\n", "num", "-", "len", "(", "index", ")", ",", "\n", "replace", "=", "False", ")", "]", ":", "\n", "            ", "index", ".", "append", "(", "i", ")", "\n", "", "Baseline_Degree", "=", "np", ".", "array", "(", "index", ")", "\n", "", "random", "=", "[", "j", "for", "i", ",", "j", "in", "Cand_degree", "if", "i", "<=", "bar", "]", "\n", "Baseline_Random", "=", "np", ".", "array", "(", "random", ")", "[", "np", ".", "random", ".", "choice", "(", "len", "(", "random", ")", ",", "\n", "num", ",", "\n", "replace", "=", "False", ")", "]", "\n", "return", "bar", ",", "Baseline_Degree", ",", "Baseline_Random", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.attack.getIndex": [[69, 77], ["numpy.array", "g.out_degree", "ind.append", "len"], "function", ["None"], ["", "def", "getIndex", "(", "g", ",", "Cand", ",", "bar", ",", "num", ")", ":", "\n", "    ", "ind", "=", "[", "]", "\n", "for", "j", ",", "i", "in", "Cand", ":", "\n", "        ", "if", "g", ".", "out_degree", "(", "i", ")", "<=", "bar", ":", "\n", "            ", "ind", ".", "append", "(", "i", ")", "\n", "", "if", "len", "(", "ind", ")", "==", "num", ":", "\n", "            ", "break", "\n", "", "", "return", "np", ".", "array", "(", "ind", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.GCN.__init__": [[8, 15], ["torch.Module.__init__", "getattr", "dgl.nn.pytorch.GraphConv", "dgl.nn.pytorch.GraphConv"], "methods", ["home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.JKNetConCat.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_feats", ",", "out_feats", ",", "n_units", ",", "dropout", ",", "activation", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "activation", "in", "[", "\"relu\"", ",", "\"elu\"", "]", "\n", "self", ".", "activation", "=", "getattr", "(", "F", ",", "activation", ")", "\n", "self", ".", "gc1", "=", "GraphConv", "(", "in_feats", ",", "n_units", ",", "activation", "=", "self", ".", "activation", ")", "\n", "self", ".", "gc2", "=", "GraphConv", "(", "n_units", ",", "out_feats", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.GCN.forward": [[16, 22], ["model.GCN.gc1", "torch.dropout", "torch.dropout", "torch.dropout", "model.GCN.gc2", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", "=", "data", ".", "features", "\n", "x", "=", "self", ".", "gc1", "(", "data", ".", "g", ",", "x", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "x", "=", "self", ".", "gc2", "(", "data", ".", "g", ",", "x", ")", "\n", "return", "F", ".", "log_softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.GAT.__init__": [[24, 38], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "getattr", "model.GAT.gat_layers.append", "model.GAT.gat_layers.append", "dgl.nn.pytorch.GATConv", "dgl.nn.pytorch.GATConv"], "methods", ["home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.JKNetConCat.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_feats", ",", "\n", "n_units", ",", "\n", "out_feats", ",", "\n", "num_heads", ",", "\n", "activation", ",", "\n", "dropout", ",", "\n", "negative_slope", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "GAT", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gat_layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "assert", "activation", "in", "[", "\"relu\"", ",", "\"elu\"", "]", "\n", "self", ".", "activation", "=", "getattr", "(", "F", ",", "activation", ")", "\n", "self", ".", "gat_layers", ".", "append", "(", "GATConv", "(", "in_feats", ",", "n_units", ",", "num_heads", ",", "dropout", ",", "dropout", ",", "negative_slope", ",", "False", ",", "self", ".", "activation", ")", ")", "\n", "self", ".", "gat_layers", ".", "append", "(", "GATConv", "(", "n_units", "*", "num_heads", ",", "out_feats", ",", "1", ",", "dropout", ",", "dropout", ",", "negative_slope", ",", "False", ",", "None", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.GAT.forward": [[39, 44], ["torch.log_softmax", "torch.log_softmax", "torch.log_softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "h", "=", "data", ".", "features", "\n", "h", "=", "self", ".", "gat_layers", "[", "0", "]", "(", "data", ".", "g", ",", "h", ")", ".", "flatten", "(", "1", ")", "\n", "logits", "=", "self", ".", "gat_layers", "[", "1", "]", "(", "data", ".", "g", ",", "h", ")", ".", "mean", "(", "1", ")", "\n", "return", "F", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.JKNetMaxpool.__init__": [[46, 61], ["torch.Module.__init__", "getattr", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "model.JKNetMaxpool.layers.append", "range", "model.JKNetMaxpool.layers.append", "dgl.nn.pytorch.GraphConv", "model.JKNetMaxpool.layers.append", "dgl.nn.pytorch.GraphConv", "dgl.nn.pytorch.GraphConv"], "methods", ["home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.JKNetConCat.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_feats", ",", "out_feats", ",", "n_layers", ",", "n_units", ",", "dropout", ",", "\n", "activation", ")", ":", "\n", "        ", "super", "(", "JKNetMaxpool", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "self", ".", "n_units", "=", "n_units", "\n", "assert", "activation", "in", "[", "\"relu\"", ",", "\"elu\"", "]", "\n", "self", ".", "activation", "=", "getattr", "(", "F", ",", "activation", ")", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "\n", "GraphConv", "(", "in_feats", ",", "n_units", ",", "activation", "=", "self", ".", "activation", ")", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "n_layers", ")", ":", "\n", "            ", "self", ".", "layers", ".", "append", "(", "\n", "GraphConv", "(", "n_units", ",", "n_units", ",", "activation", "=", "self", ".", "activation", ")", ")", "\n", "", "self", ".", "layers", ".", "append", "(", "GraphConv", "(", "n_units", ",", "out_feats", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.JKNetMaxpool.forward": [[62, 74], ["enumerate", "torch.stack", "torch.stack", "torch.stack", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "layer", "layer_outputs.append", "torch.max", "torch.max", "torch.max", "torch.dropout", "torch.dropout", "torch.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "h", "=", "data", ".", "features", "\n", "layer_outputs", "=", "[", "]", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", "[", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "i", "!=", "0", ":", "\n", "                ", "h", "=", "F", ".", "dropout", "(", "h", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "", "h", "=", "layer", "(", "data", ".", "g", ",", "h", ")", "\n", "layer_outputs", ".", "append", "(", "h", ")", "\n", "", "h", "=", "th", ".", "stack", "(", "layer_outputs", ",", "dim", "=", "0", ")", "\n", "h", "=", "th", ".", "max", "(", "h", ",", "dim", "=", "0", ")", "[", "0", "]", "\n", "h", "=", "self", ".", "layers", "[", "-", "1", "]", "(", "data", ".", "g", ",", "h", ")", "\n", "return", "F", ".", "log_softmax", "(", "h", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.JKNetConCat.__init__": [[77, 92], ["torch.Module.__init__", "getattr", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "model.JKNetConCat.layers.append", "range", "model.JKNetConCat.layers.append", "dgl.nn.pytorch.GraphConv", "model.JKNetConCat.layers.append", "dgl.nn.pytorch.GraphConv", "dgl.nn.pytorch.GraphConv"], "methods", ["home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.JKNetConCat.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_feats", ",", "out_feats", ",", "n_layers", ",", "n_units", ",", "dropout", ",", "\n", "activation", ")", ":", "\n", "        ", "super", "(", "JKNetConCat", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "self", ".", "n_units", "=", "n_units", "\n", "assert", "activation", "in", "[", "\"relu\"", ",", "\"elu\"", "]", "\n", "self", ".", "activation", "=", "getattr", "(", "F", ",", "activation", ")", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "\n", "GraphConv", "(", "in_feats", ",", "n_units", ",", "activation", "=", "self", ".", "activation", ")", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "n_layers", ")", ":", "\n", "            ", "self", ".", "layers", ".", "append", "(", "\n", "GraphConv", "(", "n_units", ",", "n_units", ",", "activation", "=", "self", ".", "activation", ")", ")", "\n", "", "self", ".", "layers", ".", "append", "(", "GraphConv", "(", "n_layers", "*", "n_units", ",", "out_feats", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.model.JKNetConCat.forward": [[93, 104], ["enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "layer", "layer_outputs.append", "torch.dropout", "torch.dropout", "torch.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "h", "=", "data", ".", "features", "\n", "layer_outputs", "=", "[", "]", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "layers", "[", ":", "-", "1", "]", ")", ":", "\n", "            ", "if", "i", "!=", "0", ":", "\n", "                ", "h", "=", "F", ".", "dropout", "(", "h", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "", "h", "=", "layer", "(", "data", ".", "g", ",", "h", ")", "\n", "layer_outputs", ".", "append", "(", "h", ")", "\n", "", "h", "=", "th", ".", "cat", "(", "layer_outputs", ",", "dim", "=", "1", ")", "\n", "h", "=", "self", ".", "layers", "[", "-", "1", "]", "(", "data", ".", "g", ",", "h", ")", "\n", "return", "F", ".", "log_softmax", "(", "h", ",", "dim", "=", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.utils.synthetic_data": [[11, 39], ["networkx.barabasi_albert_graph", "nx.barabasi_albert_graph.remove_edges_from", "dgl.DGLGraph", "dgl.DGLGraph.add_edges", "easydict.EasyDict", "dgl.DGLGraph.adjacency_matrix().to_dense", "numpy.zeros", "numpy.zeros", "range", "numpy.linalg.inv", "torch.from_numpy", "easydict.EasyDict.features.float().abs", "torch.Tensor", "torch.nn.functional.normalize", "torch.sigmoid", "torch.zeros", "th.zeros.long", "networkx.selfloop_edges", "dgl.DGLGraph.nodes", "dgl.DGLGraph.nodes", "numpy.identity", "numpy.matmul", "numpy.random.multivariate_normal().transpose", "torch.randn", "torch.FloatTensor", "torch.matmul", "dgl.DGLGraph.adjacency_matrix", "easydict.EasyDict.adj[].sum", "numpy.matmul", "numpy.identity", "easydict.EasyDict.features.float", "range", "torch.matmul", "easydict.EasyDict.adj.numpy", "numpy.random.multivariate_normal", "torch.nn.functional.normalize"], "function", ["None"], ["def", "synthetic_data", "(", "num_node", "=", "3000", ",", "num_feature", "=", "10", ",", "num_class", "=", "2", ",", "num_important", "=", "4", ")", ":", "\n", "    ", "gnp", "=", "nx", ".", "barabasi_albert_graph", "(", "num_node", ",", "2", ")", "\n", "gnp", ".", "remove_edges_from", "(", "nx", ".", "selfloop_edges", "(", "gnp", ")", ")", "\n", "g", "=", "DGLGraph", "(", "gnp", ")", "\n", "g", ".", "add_edges", "(", "g", ".", "nodes", "(", ")", ",", "g", ".", "nodes", "(", ")", ")", "\n", "data", "=", "EasyDict", "(", ")", "\n", "data", ".", "graph", "=", "gnp", "\n", "data", ".", "num_labels", "=", "num_class", "\n", "data", ".", "g", "=", "g", "\n", "data", ".", "adj", "=", "g", ".", "adjacency_matrix", "(", "transpose", "=", "None", ")", ".", "to_dense", "(", ")", "\n", "means", "=", "np", ".", "zeros", "(", "num_node", ")", "\n", "degree", "=", "np", ".", "zeros", "(", "(", "num_node", ",", "num_node", ")", ")", "\n", "for", "i", "in", "range", "(", "num_node", ")", ":", "\n", "        ", "degree", "[", "i", ",", "i", "]", "=", "data", ".", "adj", "[", "i", "]", ".", "sum", "(", ")", "**", "-", "0.5", "\n", "", "lap_matrix", "=", "np", ".", "identity", "(", "num_node", ")", "-", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "degree", ",", "data", ".", "adj", ".", "numpy", "(", ")", ")", ",", "degree", ")", "\n", "cov", "=", "np", ".", "linalg", ".", "inv", "(", "lap_matrix", "+", "np", ".", "identity", "(", "num_node", ")", ")", "\n", "data", ".", "features", "=", "th", ".", "from_numpy", "(", "multivariate_normal", "(", "means", ",", "cov", ",", "num_feature", ")", ".", "transpose", "(", ")", ")", "\n", "data", ".", "features", "=", "data", ".", "features", ".", "float", "(", ")", ".", "abs", "(", ")", "\n", "g", ".", "ndata", "[", "'x'", "]", "=", "data", ".", "features", "\n", "W", "=", "th", ".", "randn", "(", "num_feature", ")", "*", "0.1", "\n", "W", "[", "range", "(", "num_important", ")", "]", "=", "th", ".", "Tensor", "(", "[", "10", ",", "-", "10", ",", "10", ",", "-", "10", "]", ")", "\n", "data", ".", "Prob", "=", "normalize", "(", "th", ".", "FloatTensor", "(", "data", ".", "adj", ")", ",", "p", "=", "1", ",", "dim", "=", "1", ")", "\n", "logits", "=", "th", ".", "sigmoid", "(", "th", ".", "matmul", "(", "th", ".", "matmul", "(", "normalize", "(", "data", ".", "adj", ",", "p", "=", "1", ",", "dim", "=", "1", ")", ",", "data", ".", "features", ")", ",", "W", ")", ")", "\n", "labels", "=", "th", ".", "zeros", "(", "num_node", ")", "\n", "labels", "[", "logits", ">", "0.5", "]", "=", "1", "\n", "data", ".", "labels", "=", "labels", ".", "long", "(", ")", "\n", "data", ".", "size", "=", "num_node", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.utils.load_data": [[40, 62], ["torch.FloatTensor", "torch.LongTensor", "dgl.DGLGraph.remove_edges_from", "dgl.DGLGraph", "dgl.DGLGraph.add_edges", "dgl.DGLGraph.adjacency_matrix().to_dense", "torch.nn.functional.normalize", "print", "dgl.data.citation_graph.load_cora", "networkx.selfloop_edges", "dgl.DGLGraph.nodes", "dgl.DGLGraph.nodes", "torch.FloatTensor", "dgl.data.citation_graph.load_pubmed", "dgl.DGLGraph.adjacency_matrix", "dgl.data.citation_graph.load_citeseer", "utils.synthetic_data"], "function", ["home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.utils.synthetic_data"], ["", "def", "load_data", "(", "dataset", "=", "\"cora\"", ")", ":", "\n", "    ", "assert", "dataset", "in", "[", "\"cora\"", ",", "\"pubmed\"", ",", "\"citeseer\"", ",", "\"synthetic\"", "]", "\n", "if", "dataset", "==", "\"cora\"", ":", "\n", "        ", "data", "=", "citegrh", ".", "load_cora", "(", ")", "\n", "", "elif", "dataset", "==", "\"pubmed\"", ":", "\n", "        ", "data", "=", "citegrh", ".", "load_pubmed", "(", ")", "\n", "", "elif", "dataset", "==", "\"citeseer\"", ":", "\n", "        ", "data", "=", "citegrh", ".", "load_citeseer", "(", ")", "\n", "", "else", ":", "\n", "        ", "data", "=", "synthetic_data", "(", ")", "\n", "", "data", ".", "features", "=", "th", ".", "FloatTensor", "(", "data", ".", "features", ")", "\n", "data", ".", "labels", "=", "th", ".", "LongTensor", "(", "data", ".", "labels", ")", "\n", "data", ".", "size", "=", "data", ".", "labels", ".", "shape", "[", "0", "]", "\n", "g", "=", "data", ".", "graph", "\n", "g", ".", "remove_edges_from", "(", "nx", ".", "selfloop_edges", "(", "g", ")", ")", "\n", "g", "=", "DGLGraph", "(", "g", ")", "\n", "g", ".", "add_edges", "(", "g", ".", "nodes", "(", ")", ",", "g", ".", "nodes", "(", ")", ")", "\n", "data", ".", "g", "=", "g", "\n", "data", ".", "adj", "=", "g", ".", "adjacency_matrix", "(", "transpose", "=", "None", ")", ".", "to_dense", "(", ")", "\n", "data", ".", "Prob", "=", "normalize", "(", "th", ".", "FloatTensor", "(", "data", ".", "adj", ")", ",", "p", "=", "1", ",", "dim", "=", "1", ")", "\n", "print", "(", "\"============Successfully Load %s===============\"", "%", "dataset", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.Mark12Ding_GNN-Practical-Attack.None.utils.split_data": [[64, 75], ["numpy.random.choice", "numpy.array", "numpy.array", "numpy.random.choice", "numpy.random.choice", "range", "len", "range", "len"], "function", ["None"], ["", "def", "split_data", "(", "data", ",", "NumTrain", ",", "NumTest", ",", "NumVal", ")", ":", "\n", "    ", "idx_test", "=", "np", ".", "random", ".", "choice", "(", "data", ".", "size", ",", "NumTest", ",", "replace", "=", "False", ")", "\n", "without_test", "=", "np", ".", "array", "(", "[", "i", "for", "i", "in", "range", "(", "data", ".", "size", ")", "if", "i", "not", "in", "idx_test", "]", ")", "\n", "idx_train", "=", "without_test", "[", "np", ".", "random", ".", "choice", "(", "len", "(", "without_test", ")", ",", "\n", "NumTrain", ",", "\n", "replace", "=", "False", ")", "]", "\n", "idx_val", "=", "np", ".", "array", "(", "[", "\n", "i", "for", "i", "in", "range", "(", "data", ".", "size", ")", "if", "i", "not", "in", "idx_test", "if", "i", "not", "in", "idx_train", "\n", "]", ")", "\n", "idx_val", "=", "idx_val", "[", "np", ".", "random", ".", "choice", "(", "len", "(", "idx_val", ")", ",", "NumVal", ",", "replace", "=", "False", ")", "]", "\n", "return", "idx_train", ",", "idx_val", ",", "idx_test", "\n", "", ""]]}