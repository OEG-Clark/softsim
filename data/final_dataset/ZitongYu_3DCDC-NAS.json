{"home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.None.3DCDC.CDC_ST.__init__": [[27, 34], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.6", ")", ":", "\n", "\n", "        ", "super", "(", "CDC_ST", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "theta", "=", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.None.3DCDC.CDC_ST.forward": [[35, 54], ["3DCDC.CDC_ST.conv", "math.fabs", "3DCDC.CDC_ST.conv.weight.sum().sum().sum", "torch.conv3d", "torch.conv3d", "torch.conv3d", "3DCDC.CDC_ST.conv.weight.sum().sum", "3DCDC.CDC_ST.conv.weight.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_normal", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n", "            ", "return", "out_normal", "\n", "", "else", ":", "\n", "# pdb.set_trace()", "\n", "            ", "[", "C_out", ",", "C_in", ",", "t", ",", "kernel_size", ",", "kernel_size", "]", "=", "self", ".", "conv", ".", "weight", ".", "shape", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "x", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "self", ".", "conv", ".", "dilation", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.None.3DCDC.CDC_T.__init__": [[62, 69], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.6", ")", ":", "\n", "\n", "        ", "super", "(", "CDC_T", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "theta", "=", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.None.3DCDC.CDC_T.forward": [[70, 90], ["3DCDC.CDC_T.conv", "math.fabs", "torch.conv3d", "torch.conv3d", "torch.conv3d", "3DCDC.CDC_T.conv.weight[].sum().sum", "3DCDC.CDC_T.conv.weight[].sum().sum", "3DCDC.CDC_T.conv.weight[].sum", "3DCDC.CDC_T.conv.weight[].sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_normal", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n", "            ", "return", "out_normal", "\n", "", "else", ":", "\n", "# pdb.set_trace()", "\n", "            ", "[", "C_out", ",", "C_in", ",", "t", ",", "kernel_size", ",", "kernel_size", "]", "=", "self", ".", "conv", ".", "weight", ".", "shape", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "2", ",", ":", ",", ":", "]", ".", "sum", "(", "\n", "2", ")", ".", "sum", "(", "2", ")", "\n", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "x", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "self", ".", "conv", ".", "dilation", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.None.3DCDC.CDC_TR.__init__": [[98, 106], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.3", ")", ":", "\n", "\n", "        ", "super", "(", "CDC_TR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "padding", "=", "(", "padding", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "theta", "=", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.None.3DCDC.CDC_TR.forward": [[107, 127], ["3DCDC.CDC_TR.conv", "3DCDC.CDC_TR.avgpool", "math.fabs", "torch.conv3d", "torch.conv3d", "torch.conv3d", "3DCDC.CDC_TR.conv.weight[].sum().sum", "3DCDC.CDC_TR.conv.weight[].sum().sum", "3DCDC.CDC_TR.conv.weight[].sum", "3DCDC.CDC_TR.conv.weight[].sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_normal", "=", "self", ".", "conv", "(", "x", ")", "\n", "local_avg", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n", "            ", "return", "out_normal", "\n", "", "else", ":", "\n", "# pdb.set_trace()", "\n", "            ", "[", "C_out", ",", "C_in", ",", "t", ",", "kernel_size", ",", "kernel_size", "]", "=", "self", ".", "conv", ".", "weight", ".", "shape", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "2", ",", ":", ",", ":", "]", ".", "sum", "(", "\n", "2", ")", ".", "sum", "(", "2", ")", "\n", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "local_avg", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "\n", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.ST_3DCDC.__init__": [[61, 67], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.7", ")", ":", "\n", "\n", "        ", "super", "(", "ST_3DCDC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "theta", "=", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.ST_3DCDC.forward": [[68, 86], ["operations.ST_3DCDC.conv", "math.fabs", "operations.ST_3DCDC.conv.weight.sum().sum().sum", "torch.conv3d", "torch.conv3d", "torch.conv3d", "operations.ST_3DCDC.conv.weight.sum().sum", "operations.ST_3DCDC.conv.weight.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_normal", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n", "            ", "return", "out_normal", "\n", "", "else", ":", "\n", "#pdb.set_trace()", "\n", "            ", "[", "C_out", ",", "C_in", ",", "t", ",", "kernel_size", ",", "kernel_size", "]", "=", "self", ".", "conv", ".", "weight", ".", "shape", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "x", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.T_3DCDC.__init__": [[98, 104], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.7", ")", ":", "\n", "\n", "        ", "super", "(", "T_3DCDC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "theta", "=", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.T_3DCDC.forward": [[105, 124], ["operations.T_3DCDC.conv", "math.fabs", "torch.conv3d", "torch.conv3d", "torch.conv3d", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum", "operations.T_3DCDC.conv.weight[].sum", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum", "operations.T_3DCDC.conv.weight[].sum", "operations.T_3DCDC.conv.weight[].sum", "operations.T_3DCDC.conv.weight[].sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_normal", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n", "            ", "return", "out_normal", "\n", "", "else", ":", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "            ", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "                    ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "2", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", "==", "5", ":", "\n", "                    ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "1", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "3", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "4", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "x", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.T_3DCDC_Avg.__init__": [[133, 140], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.7", ")", ":", "\n", "\n", "        ", "super", "(", "T_3DCDC_Avg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "padding", "=", "(", "padding", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "theta", "=", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.T_3DCDC_Avg.forward": [[141, 161], ["operations.T_3DCDC_Avg.conv", "operations.T_3DCDC_Avg.avgpool", "math.fabs", "torch.conv3d", "torch.conv3d", "torch.conv3d", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum", "operations.T_3DCDC_Avg.conv.weight[].sum", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum", "operations.T_3DCDC_Avg.conv.weight[].sum", "operations.T_3DCDC_Avg.conv.weight[].sum", "operations.T_3DCDC_Avg.conv.weight[].sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_normal", "=", "self", ".", "conv", "(", "x", ")", "\n", "local_avg", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "\n", "if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n", "            ", "return", "out_normal", "\n", "", "else", ":", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "            ", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "                    ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "2", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", "==", "5", ":", "\n", "                    ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "1", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "3", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "4", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "local_avg", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.T_1DCDC.__init__": [[170, 176], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.7", ")", ":", "\n", "\n", "        ", "super", "(", "T_1DCDC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "padding", "=", "(", "padding", ",", "1", ",", "1", ")", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "theta", "=", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.T_1DCDC.forward": [[177, 193], ["operations.T_1DCDC.conv", "math.fabs", "torch.conv3d", "torch.conv3d", "torch.conv3d", "operations.T_1DCDC.conv.weight[].sum().sum", "operations.T_1DCDC.conv.weight[].sum().sum", "operations.T_1DCDC.conv.weight[].sum", "operations.T_1DCDC.conv.weight[].sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_normal", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n", "            ", "return", "out_normal", "\n", "", "else", ":", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "            ", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "2", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "x", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.T_1DCDC_Avg.__init__": [[202, 209], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.7", ")", ":", "\n", "\n", "        ", "super", "(", "T_1DCDC_Avg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "padding", "=", "(", "padding", ",", "1", ",", "1", ")", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "padding", "=", "(", "padding", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "theta", "=", "theta", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.T_1DCDC_Avg.forward": [[210, 227], ["operations.T_1DCDC_Avg.conv", "operations.T_1DCDC_Avg.avgpool", "math.fabs", "torch.conv3d", "torch.conv3d", "torch.conv3d", "operations.T_1DCDC_Avg.conv.weight[].sum().sum", "operations.T_1DCDC_Avg.conv.weight[].sum().sum", "operations.T_1DCDC_Avg.conv.weight[].sum", "operations.T_1DCDC_Avg.conv.weight[].sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_normal", "=", "self", ".", "conv", "(", "x", ")", "\n", "local_avg", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "\n", "if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n", "            ", "return", "out_normal", "\n", "", "else", ":", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "            ", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "2", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "local_avg", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.CDC_Unit.__init__": [[230, 236], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "basic_conv", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "basic_conv", ",", "theta", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "CDC_Unit", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "basic_conv", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "theta", "=", "theta", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.CDC_Unit.forward": [[238, 240], ["operations.CDC_Unit.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.VaniConv3d.__init__": [[247, 253], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "VaniConv3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.VaniConv3d.forward": [[255, 257], ["operations.VaniConv3d.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.VaniConv3d_Spatial_1x3x3.__init__": [[261, 267], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "VaniConv3d_Spatial_1x3x3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "[", "1", ",", "3", ",", "3", "]", ",", "stride", "=", "stride", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.VaniConv3d_Spatial_1x3x3.forward": [[269, 271], ["operations.VaniConv3d_Spatial_1x3x3.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.VaniConv3d_Temporal_3x1x1.__init__": [[275, 281], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "VaniConv3d_Temporal_3x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "[", "3", ",", "1", ",", "1", "]", ",", "stride", "=", "stride", ",", "padding", "=", "[", "1", ",", "0", ",", "0", "]", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.VaniConv3d_Temporal_3x1x1.forward": [[283, 285], ["operations.VaniConv3d_Temporal_3x1x1.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.VaniConv3d_Temporal_5x1x1.__init__": [[288, 294], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "VaniConv3d_Temporal_5x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "[", "5", ",", "1", ",", "1", "]", ",", "stride", "=", "stride", ",", "padding", "=", "[", "2", ",", "0", ",", "0", "]", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.VaniConv3d_Temporal_5x1x1.forward": [[296, 298], ["operations.VaniConv3d_Temporal_5x1x1.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.DilConv.__init__": [[302, 309], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "DilConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.DilConv.forward": [[311, 313], ["operations.DilConv.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.Dil_STCDC.__init__": [[317, 324], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "operations.ST_3DCDC", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "theta", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "Dil_STCDC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "ST_3DCDC", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "theta", "=", "theta", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.Dil_STCDC.forward": [[326, 328], ["operations.Dil_STCDC.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.Dil_TCDC.__init__": [[332, 339], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "operations.T_3DCDC", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "theta", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "Dil_TCDC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "T_3DCDC", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "theta", "=", "theta", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.Dil_TCDC.forward": [[341, 343], ["operations.Dil_TCDC.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.SepConv.__init__": [[347, 358], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "SepConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_in", ",", "affine", "=", "affine", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "padding", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.SepConv.forward": [[360, 362], ["operations.SepConv.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.Identity.__init__": [[366, 368], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.Identity.forward": [[369, 371], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.Zero.__init__": [[375, 378], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "stride", ")", ":", "\n", "    ", "super", "(", "Zero", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.Zero.forward": [[379, 383], ["x[].mul", "x.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "stride", "==", "1", ":", "\n", "      ", "return", "x", ".", "mul", "(", "0.", ")", "\n", "", "return", "x", "[", ":", ",", ":", ",", ":", ":", "self", ".", "stride", ",", ":", ":", "self", ".", "stride", "]", ".", "mul", "(", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.Zero_Connection.__init__": [[386, 390], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ")", ":", "\n", "    ", "super", "(", "Zero_Connection", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.Zero_Connection.forward": [[391, 396], ["operations.Zero_Connection.conv", "x[].mul", "operations.Zero_Connection.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "if", "self", ".", "stride", "==", "1", ":", "\n", "      ", "return", "x", ".", "mul", "(", "0.", ")", "\n", "", "return", "x", "[", ":", ",", ":", ",", ":", ":", "self", ".", "stride", "[", "0", "]", ",", ":", ",", ":", "]", ".", "mul", "(", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.FactorizedReduce_Spatial.__init__": [[400, 407], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "FactorizedReduce_Spatial", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "C_out", "%", "2", "==", "0", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.FactorizedReduce_Spatial.forward": [[408, 414], ["operations.FactorizedReduce_Spatial.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "operations.FactorizedReduce_Spatial.bn", "operations.FactorizedReduce_Spatial.conv_1", "operations.FactorizedReduce_Spatial.conv_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "#out = torch.cat([self.conv_1(x), self.conv_2(x[:,:,1:,1:])], dim=1)", "\n", "out", "=", "torch", ".", "cat", "(", "[", "self", ".", "conv_1", "(", "x", ")", ",", "self", ".", "conv_2", "(", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", ",", "1", ":", "]", ")", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.FactorizedReduce_SpatialTemporal.__init__": [[417, 424], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "FactorizedReduce_SpatialTemporal", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "C_out", "%", "2", "==", "0", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.FactorizedReduce_SpatialTemporal.forward": [[425, 431], ["operations.FactorizedReduce_SpatialTemporal.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "operations.FactorizedReduce_SpatialTemporal.bn", "operations.FactorizedReduce_SpatialTemporal.conv_1", "operations.FactorizedReduce_SpatialTemporal.conv_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "#out = torch.cat([self.conv_1(x), self.conv_2(x[:,:,1:,1:])], dim=1)", "\n", "out", "=", "torch", ".", "cat", "(", "[", "self", ".", "conv_1", "(", "x", ")", ",", "self", ".", "conv_2", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", "1", ":", ",", "1", ":", "]", ")", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.MaxPool_ST.__init__": [[435, 438], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "stride", ")", ":", "\n", "    ", "super", "(", "MaxPool_ST", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Maxpool", "=", "nn", ".", "MaxPool3d", "(", "stride", ",", "stride", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.MaxPool_ST.forward": [[439, 443], ["operations.MaxPool_ST.Maxpool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "Maxpool", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.MaxPool_3x1x1.__init__": [[448, 453], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "MaxPool_3x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Maxpool", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "3", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "1", ",", "0", ",", "0", "]", ",", "stride", "=", "stride", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.MaxPool_3x1x1.forward": [[454, 459], ["operations.MaxPool_3x1x1.Maxpool", "operations.MaxPool_3x1x1.bn", "operations.MaxPool_3x1x1.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "Maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.MaxPool_5x1x1.__init__": [[462, 467], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "MaxPool_5x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Maxpool", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "5", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "2", ",", "0", ",", "0", "]", ",", "stride", "=", "stride", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.MaxPool_5x1x1.forward": [[468, 473], ["operations.MaxPool_5x1x1.Maxpool", "operations.MaxPool_5x1x1.bn", "operations.MaxPool_5x1x1.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "Maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.AvgPool_3x1x1.__init__": [[477, 482], ["torch.Module.__init__", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "AvgPool_3x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Avgpool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "[", "3", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "1", ",", "0", ",", "0", "]", ",", "stride", "=", "stride", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.AvgPool_3x1x1.forward": [[483, 488], ["operations.AvgPool_3x1x1.Avgpool", "operations.AvgPool_3x1x1.bn", "operations.AvgPool_3x1x1.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "Avgpool", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.AvgPool_5x1x1.__init__": [[491, 496], ["torch.Module.__init__", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "AvgPool_5x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Avgpool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "[", "5", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "2", ",", "0", ",", "0", "]", ",", "stride", "=", "stride", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.operations.AvgPool_5x1x1.forward": [[497, 502], ["operations.AvgPool_5x1x1.Avgpool", "operations.AvgPool_5x1x1.bn", "operations.AvgPool_5x1x1.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "Avgpool", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter.__init__": [[125, 127], ["train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter.reset": [[128, 133], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter.update": [[134, 139], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.__init__": [[208, 234], ["train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.LoadOptimizer", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.training", "float", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.valid", "print", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.test", "print", "Exception", "args.resume.split"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.LoadOptimizer", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.training", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.valid", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.test"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "args", ",", "vis", ",", "train_loader", ",", "val_loader", ",", "test_loader", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "vis", "=", "vis", "\n", "self", ".", "step", "=", "0", "\n", "self", ".", "lr", "=", "args", ".", "learning_rate", "\n", "self", ".", "dlr", "=", "args", ".", "learning_rate", "\n", "\n", "try", ":", "\n", "            ", "self", ".", "best_val_acc", "=", "float", "(", "args", ".", "resume", ".", "split", "(", "'-'", ")", "[", "-", "2", "]", "[", "6", ":", "]", ")", "if", "args", ".", "resume", "and", "not", "args", ".", "pretrain", "else", "0.4", "\n", "", "except", ":", "\n", "            ", "self", ".", "best_val_acc", "=", "0.4", "\n", "", "self", ".", "optimizer", ",", "self", ".", "lr_scheduler", ",", "self", ".", "criterion1", "=", "self", ".", "LoadOptimizer", "(", ")", "\n", "\n", "if", "args", ".", "mode", "==", "'train'", ":", "\n", "            ", "self", ".", "training", "(", "train_loader", ",", "val_loader", ",", "test_loader", ")", "\n", "", "elif", "args", ".", "mode", "==", "'valid'", ":", "\n", "            ", "valid_acc", "=", "self", ".", "valid", "(", "1", ",", "dataloader", "=", "val_loader", ")", "\n", "print", "(", "'valid_acc:{}'", ".", "format", "(", "valid_acc", ")", ")", "\n", "", "elif", "args", ".", "mode", "==", "'test'", ":", "\n", "            ", "assert", "test_loader", ",", "\"test_loader is None\"", "\n", "test_acc", "=", "self", ".", "test", "(", "1", ",", "dataloader", "=", "test_loader", ")", "\n", "print", "(", "'test_acc:{}'", ".", "format", "(", "test_acc", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Error in phase!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.LoadOptimizer": [[235, 242], ["torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.model.parameters"], "methods", ["None"], ["", "", "def", "LoadOptimizer", "(", "self", ")", ":", "\n", "        ", "criterion1", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "args", ".", "learning_rate", ",", "momentum", "=", "self", ".", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "self", ".", "args", ".", "weight_decay", ")", "\n", "lr_scheduler", "=", "ReduceLROnPlateau", "(", "optimizer", ",", "mode", "=", "'max'", ",", "factor", "=", "0.1", ",", "patience", "=", "3", ",", "verbose", "=", "True", ",", "threshold", "=", "0.0001", ",", "\n", "threshold_mode", "=", "'rel'", ",", "cooldown", "=", "3", ",", "min_lr", "=", "0.00001", ",", "eps", "=", "1e-08", ")", "\n", "return", "optimizer", ",", "lr_scheduler", ",", "criterion1", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.update_lr": [[243, 257], ["numpy.power"], "methods", ["None"], ["", "def", "update_lr", "(", "self", ",", "optimizer", ",", "step", ")", ":", "\n", "        ", "df", "=", "0.7", "\n", "ds", "=", "40000.0", "\n", "in_dlr", "=", "self", ".", "dlr", "\n", "self", ".", "dlr", "=", "self", ".", "lr", "*", "np", ".", "power", "(", "df", ",", "step", "/", "ds", ")", "\n", "\n", "# Dynamic Modification Learning Rate", "\n", "for", "g", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "in_lr", "=", "g", "[", "'lr'", "]", "\n", "g", "[", "'lr'", "]", "=", "self", ".", "dlr", "\n", "\n", "", "self", ".", "lr", "=", "self", ".", "lr", "*", "(", "in_lr", "/", "in_dlr", ")", "\n", "if", "in_lr", "/", "in_dlr", "==", "0.1", ":", "\n", "            ", "self", ".", "step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.training": [[258, 303], ["print", "range", "print", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.train", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.model.state_dict", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.valid", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.lr_scheduler.step", "max", "time.strftime", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.test", "round", "round", "os.path.exists", "os.makedirs", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "time.localtime", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.model.state_dict", "open", "opened_file.write", "time.time", "os.path.split", "os.path.split", "str", "os.path.split", "time.strftime", "time.localtime", "time.time"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.train", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.valid", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.test"], ["", "", "def", "training", "(", "self", ",", "train_loader", ",", "val_loader", ",", "test_loader", ")", ":", "\n", "        ", "print", "(", "'Start training...'", ")", "\n", "for", "epoch", "in", "range", "(", "self", ".", "args", ".", "init_epochs", ",", "self", ".", "args", ".", "max_epochs", ")", ":", "\n", "            ", "if", "epoch", "==", "0", ":", "# Warm up", "\n", "                ", "for", "g", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "                    ", "g", "[", "'lr'", "]", "=", "0.00001", "\n", "", "", "elif", "epoch", "==", "3", ":", "\n", "                ", "for", "g", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "                    ", "g", "[", "'lr'", "]", "=", "self", ".", "lr", "\n", "", "", "'''\n            Train:\n            '''", "\n", "self", ".", "train", "(", "epoch", ",", "dataloader", "=", "train_loader", ")", "\n", "torch", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "\"middle.pth\"", ")", "\n", "if", "epoch", ">=", "3", ":", "\n", "                ", "'''\n                valid\n                '''", "\n", "valid_acc", "=", "self", ".", "valid", "(", "epoch", ",", "dataloader", "=", "val_loader", ")", "\n", "self", ".", "lr_scheduler", ".", "step", "(", "valid_acc", ")", "\n", "self", ".", "step", "+=", "1", "\n", "'''\n                Test\n                '''", "\n", "if", "test_loader", ":", "\n", "                    ", "test_acc", "=", "self", ".", "test", "(", "epoch", ",", "dataloader", "=", "test_loader", ")", "\n", "", "else", ":", "\n", "                    ", "test_acc", "=", "0.0", "\n", "\n", "", "'''\n                Save model\n                '''", "\n", "model_save_filename", "=", "'./Checkpoints/model_{}_{}/epoch{}-{}-valid_{}-test_{}.pth'", ".", "format", "(", "\n", "self", ".", "args", ".", "res_layer", ",", "self", ".", "args", ".", "sample_duration", ",", "epoch", ",", "self", ".", "args", ".", "type", ",", "\n", "round", "(", "valid_acc", ",", "4", ")", ",", "round", "(", "test_acc", ",", "4", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "split", "(", "model_save_filename", ")", "[", "0", "]", ")", ":", "os", ".", "makedirs", "(", "\n", "os", ".", "path", ".", "split", "(", "model_save_filename", ")", "[", "0", "]", ")", "\n", "if", "valid_acc", ">", "self", ".", "best_val_acc", ":", "\n", "                    ", "torch", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "model_save_filename", ")", "\n", "with", "open", "(", "\"log/logfile_{}_{}_{}.txt\"", ".", "format", "(", "args", ".", "res_layer", ",", "args", ".", "sample_duration", ",", "args", ".", "type", ")", ",", "\n", "'a'", ")", "as", "opened_file", ":", "\n", "                        ", "opened_file", ".", "write", "(", "str", "(", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", "+", "': '", "+", "\n", "os", ".", "path", ".", "split", "(", "model_save_filename", ")", "[", "1", "]", "+", "'\\n'", ")", "\n", "", "", "self", ".", "best_val_acc", "=", "max", "(", "valid_acc", ",", "self", ".", "best_val_acc", ")", "\n", "", "", "print", "(", "'Training finished in time: @{}'", ".", "format", "(", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.train": [[304, 343], ["train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.model.train", "train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter", "train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter", "train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter", "time.time", "tqdm.tqdm.tqdm", "enumerate", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.model", "train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter.update", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.criterion1", "train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter.update", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.optimizer.zero_grad", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.backward", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.optimizer.step", "train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter.update", "time.time", "d.cuda", "d2.cuda", "l.cuda", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.item", "d.size", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.update_lr", "print", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.vis.plot_many", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.vis.log", "time.time", "time.time", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.item", "time.strftime", "len", "len", "time.localtime", "time.time"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.train", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.update", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.update", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.update", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.update_lr", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.plot_many", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.log"], ["", "def", "train", "(", "self", ",", "epoch", ",", "dataloader", ")", ":", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "Avg_loss", "=", "AverageMeter", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "d", ",", "l", ",", "d2", ")", "in", "tqdm", "(", "enumerate", "(", "dataloader", ")", ")", ":", "\n", "            ", "outputs", "=", "self", ".", "model", "(", "d", ".", "cuda", "(", ")", ",", "d2", ".", "cuda", "(", ")", ")", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "# Forward propagation", "\n", "loss", "=", "self", ".", "criterion1", "(", "outputs", ",", "l", ".", "cuda", "(", ")", ")", "\n", "\n", "Avg_loss", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "d", ".", "size", "(", "0", ")", ")", "\n", "\n", "# backward propagation", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "# lr decayed exponentially", "\n", "if", "epoch", ">=", "3", ":", "\n", "                ", "self", ".", "update_lr", "(", "self", ".", "optimizer", ",", "len", "(", "dataloader", ".", "dataset", ")", "/", "self", ".", "args", ".", "batch_size", "*", "self", ".", "step", "+", "i", ")", "\n", "\n", "", "if", "(", "i", "+", "1", ")", "%", "self", ".", "args", ".", "print_freq", "==", "0", ":", "\n", "                ", "print", "(", "\n", "' Training [%2d/%2d, %4d/%4d] \\t Loss: %.4f(%.4f) \\t [datatime: %.3f] \\t [batchtime: %.3f] \\t @%s'", "%", "(", "\n", "epoch", ",", "self", ".", "args", ".", "max_epochs", ",", "i", ",", "len", "(", "dataloader", ".", "dataset", ")", "/", "self", ".", "args", ".", "batch_size", ",", "loss", ".", "item", "(", ")", ",", "\n", "Avg_loss", ".", "avg", ",", "\n", "data_time", ".", "avg", ",", "batch_time", ".", "avg", ",", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", ")", "\n", "\n", "self", ".", "vis", ".", "plot_many", "(", "{", "'loss'", ":", "Avg_loss", ".", "avg", "}", ",", "'Train-'", "+", "self", ".", "args", ".", "type", ")", "\n", "self", ".", "vis", ".", "log", "(", "\n", "'LR[{m}]: {lr}'", ".", "format", "(", "m", "=", "self", ".", "args", ".", "type", ",", "lr", "=", "[", "g", "[", "'lr'", "]", "for", "g", "in", "self", ".", "optimizer", ".", "param_groups", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.valid": [[344, 372], ["print", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.model.eval", "train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm.tqdm", "enumerate", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.model", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.criterion1", "train_AutoGesture_CDC_RGBD_sgd_12layers.AverageMeter.update", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "len", "d.cuda", "d2.cuda", "l.cuda", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.item", "d.size", "float", "print", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.vis.plot_many", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.item", "time.strftime", "l.cuda", "len", "time.localtime", "time.time"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.update", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.plot_many"], ["", "", "", "def", "valid", "(", "self", ",", "epoch", ",", "dataloader", ")", ":", "\n", "        ", "print", "(", "'Validation...'", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "Avg_loss", "=", "AverageMeter", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "correct", "=", "0", "\n", "max_num", "=", "0", "\n", "for", "i", ",", "(", "d", ",", "l", ",", "d2", ")", "in", "tqdm", "(", "enumerate", "(", "dataloader", ")", ")", ":", "\n", "                ", "outputs", "=", "self", ".", "model", "(", "d", ".", "cuda", "(", ")", ",", "d2", ".", "cuda", "(", ")", ")", "\n", "\n", "# Forward propagation", "\n", "loss", "=", "self", ".", "criterion1", "(", "outputs", ",", "l", ".", "cuda", "(", ")", ")", "\n", "\n", "Avg_loss", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "d", ".", "size", "(", "0", ")", ")", "\n", "\n", "pred", "=", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "correct", "+=", "(", "pred", "==", "l", ".", "cuda", "(", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "max_num", "+=", "len", "(", "d", ")", "\n", "acc", "=", "float", "(", "correct", ")", "/", "max_num", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "self", ".", "args", ".", "print_freq", "==", "0", ":", "\n", "                    ", "print", "(", "' Validing [%2d/%2d, %4d/%4d], Loss %.4f(%.4f), Acc: %.4f \\t time: @%s'", "%", "(", "\n", "epoch", ",", "self", ".", "args", ".", "max_epochs", ",", "i", ",", "len", "(", "dataloader", ".", "dataset", ")", "/", "self", ".", "args", ".", "testing_batch_size", ",", "\n", "loss", ".", "item", "(", ")", ",", "\n", "Avg_loss", ".", "avg", ",", "acc", ",", "\n", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", ")", "\n", "self", ".", "vis", ".", "plot_many", "(", "{", "'loss'", ":", "Avg_loss", ".", "avg", ",", "'Acc'", ":", "acc", "}", ",", "'Valid-'", "+", "self", ".", "args", ".", "type", ")", "\n", "", "", "", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.test": [[373, 392], ["print", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "time.time", "tqdm.tqdm.tqdm", "enumerate", "train_AutoGesture_CDC_RGBD_sgd_12layers.train_val.model", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "len", "d.cuda", "d2.cuda", "float", "print", "time.strftime", "l.cuda", "len", "time.localtime", "time.time"], "methods", ["None"], ["", "def", "test", "(", "self", ",", "epoch", ",", "dataloader", ")", ":", "\n", "        ", "print", "(", "'Testing...'", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "correct", "=", "0", "\n", "max_num", "=", "0", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "d", ",", "l", ",", "d2", ")", "in", "tqdm", "(", "enumerate", "(", "dataloader", ")", ")", ":", "\n", "                ", "outputs", "=", "self", ".", "model", "(", "d", ".", "cuda", "(", ")", ",", "d2", ".", "cuda", "(", ")", ")", "\n", "pred", "=", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "correct", "+=", "(", "pred", "==", "l", ".", "cuda", "(", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "max_num", "+=", "len", "(", "d", ")", "\n", "acc", "=", "float", "(", "correct", ")", "/", "max_num", "\n", "\n", "if", "(", "i", "+", "1", ")", "%", "self", ".", "args", ".", "print_freq", "==", "0", ":", "\n", "                    ", "print", "(", "' Testing [%2d/%2d, %4d/%4d], Acc: %.4f \\t time: @%s'", "%", "(", "\n", "epoch", ",", "self", ".", "args", ".", "max_epochs", ",", "i", ",", "len", "(", "dataloader", ".", "dataset", ")", "/", "self", ".", "args", ".", "testing_batch_size", ",", "acc", ",", "\n", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", ")", "\n", "", "", "", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.Module": [[141, 169], ["print", "Auto_RGBD_Diff", "print", "print", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "Auto_RGBD_Diff.cuda", "Auto_RGBD_Diff.load_state_dict", "print", "print", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "init.xavier_normal_", "len", "print", "collections.OrderedDict", "torch.load.items", "Auto_RGBD_Diff.load_state_dict", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel"], "function", ["None"], ["", "", "def", "Module", "(", "args", ")", ":", "\n", "    ", "print", "(", "\"load from AutoGesture_RGBD_Con_shared_DiffChannels\"", ")", "\n", "from", "models", ".", "AutoGesture_RGBD_searched_12layers_DiffChannels", "import", "AutoGesture_RGBD_12layers", "as", "Auto_RGBD_Diff", "\n", "\n", "model", "=", "Auto_RGBD_Diff", "(", "args", ".", "init_channels8", ",", "args", ".", "init_channels16", ",", "args", ".", "init_channels32", ",", "args", ".", "num_classes", ",", "\n", "args", ".", "layers", ",", "genotype_RGB", ",", "genotype_Depth", ",", "\n", "genotype_con_unshared", ")", "\n", "if", "args", ".", "init_model", ":", "\n", "# model.classifier = torch.nn.Linear(6144, 27)", "\n", "        ", "params", "=", "torch", ".", "load", "(", "args", ".", "init_model", ")", "\n", "try", ":", "\n", "            ", "model", ".", "load_state_dict", "(", "params", ")", "\n", "print", "(", "'Load state dict...'", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'Load state dict...'", ")", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", ":", "\n", "                ", "name", "=", "k", "[", "7", ":", "]", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "", "if", "args", ".", "pretrain", ":", "\n", "            ", "print", "(", "'init.xavier_normal_(model.classifier.weight)'", ")", "\n", "from", "torch", ".", "nn", "import", "init", "\n", "model", ".", "classifier", "=", "torch", ".", "nn", ".", "Linear", "(", "6144", ",", "249", ")", "\n", "init", ".", "xavier_normal_", "(", "model", ".", "classifier", ".", "weight", ")", "\n", "", "", "print", "(", "'Load module Finished'", ")", "\n", "print", "(", "'='", "*", "20", ")", "\n", "return", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", ".", "cuda", "(", ")", "if", "len", "(", "args", ".", "gpu_ids", ")", ">", "1", "else", "model", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.GetData": [[171, 205], ["print", "Videodatasets_RGBD.Videodatasets_RGBD", "torch.utils.data.DataLoader", "Videodatasets_RGBD.Videodatasets_RGBD", "torch.utils.data.DataLoader", "Videodatasets_RGBD.Videodatasets_RGBD", "torch.utils.data.DataLoader", "print", "print", "print", "print"], "function", ["None"], ["", "def", "GetData", "(", "args", ")", ":", "\n", "    ", "print", "(", "'Start load Data...'", ")", "\n", "modality1", "=", "'rgb'", "\n", "modality2", "=", "'depth'", "\n", "\n", "train_dataset", "=", "Videodatasets_RGBD", "(", "args", ".", "data_dir_root", "+", "'/train'", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_train_lst.txt'", ".", "format", "(", "modality1", ")", ",", "modality1", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_train_lst.txt'", ".", "format", "(", "modality2", ")", ",", "modality2", ",", "\n", "args", ".", "sample_duration", ",", "phase", "=", "'train'", ")", "\n", "train_dataloader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "valid_dataset", "=", "Videodatasets_RGBD", "(", "args", ".", "data_dir_root", "+", "'/valid'", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_valid_lst.txt'", ".", "format", "(", "modality1", ")", ",", "modality1", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_valid_lst.txt'", ".", "format", "(", "modality2", ")", ",", "modality2", ",", "\n", "args", ".", "sample_duration", ",", "phase", "=", "'valid'", ")", "\n", "valid_dataloader", "=", "DataLoader", "(", "valid_dataset", ",", "batch_size", "=", "args", ".", "testing_batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "try", ":", "\n", "        ", "test_dataset", "=", "Videodatasets_RGBD", "(", "args", ".", "data_dir_root", "+", "'/test'", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_test_lst.txt'", ".", "format", "(", "modality1", ")", ",", "modality1", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_test_lst.txt'", ".", "format", "(", "modality2", ")", ",", "modality2", ",", "\n", "args", ".", "sample_duration", ",", "phase", "=", "'test'", ")", "\n", "test_dataloader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "args", ".", "testing_batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "print", "(", "'Load <IsoGD>  Dataset!'", ")", "\n", "print", "(", "'='", "*", "20", ")", "\n", "return", "train_dataloader", ",", "valid_dataloader", ",", "test_dataloader", "\n", "", "except", ":", "\n", "        ", "print", "(", "'Load <INVIDIA>  Dataset!'", ")", "\n", "print", "(", "'='", "*", "20", ")", "\n", "return", "train_dataloader", ",", "valid_dataloader", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.train_AutoGesture_CDC_RGBD_sgd_12layers.parse": [[394, 412], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "", "def", "parse", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "default", "=", "'config.yml'", ",", "\n", "dest", "=", "'config'", ",", "help", "=", "'to set the parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'-r'", ",", "'--resume'", ",", "default", "=", "''", ",", "help", "=", "'load model'", ")", "\n", "parser", ".", "add_argument", "(", "'-m'", ",", "'--mode'", ",", "help", "=", "'train or valid or test'", ")", "\n", "parser", ".", "add_argument", "(", "'-t'", ",", "'--type'", ",", "help", "=", "'K or M'", ")", "\n", "parser", ".", "add_argument", "(", "'-g'", ",", "'--gpu_ids'", ",", "default", "=", "\"0,1\"", ",", "help", "=", "\"gpu\"", ")", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--res_layer'", ",", "default", "=", "18", ",", "help", "=", "\"ResNet Layer\"", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--init_model'", ",", "default", "=", "\"\"", ",", "help", "=", "\"Pretrained model on 20 BN\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--Mode'", ",", "default", "=", "'score'", ",", "type", "=", "str", ",", "\n", "help", "=", "'Mode (score | feature). score outputs class scores. feature outputs features (after global average pooling).'", ")", "\n", "parser", ".", "add_argument", "(", "'--resnet_shortcut'", ",", "default", "=", "'A'", ",", "type", "=", "str", ",", "help", "=", "'Shortcut type of resnet (A | B)'", ")", "\n", "parser", ".", "set_defaults", "(", "verbose", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "help", "=", "''", ")", "\n", "parser", ".", "set_defaults", "(", "verbose", "=", "False", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.Videodatasets_RGBD.Normaliztion.__call__": [[20, 23], ["None"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "Image", ")", ":", "\n", "        ", "new_video_x", "=", "(", "Image", "-", "127.5", ")", "/", "128", "\n", "return", "new_video_x", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.Videodatasets_RGBD.Videodatasets_RGBD.__init__": [[26, 43], ["torchvision.transforms.Compose", "filter", "filter", "list", "list", "Videodatasets_RGBD.Videodatasets_RGBD.__init__.get_data_list_and_label"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset_root", ",", "ground_truth1", ",", "typ1", ",", "ground_truth2", ",", "typ2", ",", "sample_duration", "=", "16", ",", "phase", "=", "'train'", ")", ":", "\n", "\n", "        ", "def", "get_data_list_and_label", "(", "data_df", ",", "typ", ")", ":", "\n", "            ", "T", "=", "0", "# if typ == 'M' else 1", "\n", "return", "[", "(", "lambda", "arr", ":", "(", "'/'", ".", "join", "(", "arr", "[", "T", "]", ".", "split", "(", "'/'", ")", "[", "1", ":", "]", ")", ",", "int", "(", "arr", "[", "1", "]", ")", ",", "int", "(", "arr", "[", "2", "]", ")", ")", ")", "(", "i", "[", ":", "-", "1", "]", ".", "split", "(", "' '", ")", ")", "\n", "for", "i", "in", "open", "(", "data_df", ")", ".", "readlines", "(", ")", "]", "\n", "\n", "", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "sample_duration", "=", "sample_duration", "\n", "self", ".", "phase", "=", "phase", "\n", "self", ".", "typ1", ",", "self", ".", "typ2", "=", "typ1", ",", "typ2", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "Normaliztion", "(", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "\n", "lines", "=", "filter", "(", "lambda", "x", ":", "x", "[", "1", "]", ">", "7", ",", "get_data_list_and_label", "(", "ground_truth1", ",", "typ1", ")", ")", "\n", "lines2", "=", "filter", "(", "lambda", "x", ":", "x", "[", "1", "]", ">", "7", ",", "get_data_list_and_label", "(", "ground_truth2", ",", "typ2", ")", ")", "\n", "self", ".", "inputs", "=", "list", "(", "lines", ")", "\n", "self", ".", "inputs2", "=", "list", "(", "lines2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.Videodatasets_RGBD.Videodatasets_RGBD.transform_params": [[44, 52], ["random.randint", "random.randint", "random.uniform"], "methods", ["None"], ["", "def", "transform_params", "(", "self", ",", "resize", "=", "(", "320", ",", "240", ")", ",", "crop_size", "=", "224", ",", "flip", "=", "0.5", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'train'", ":", "\n", "            ", "left", ",", "top", "=", "random", ".", "randint", "(", "0", ",", "resize", "[", "0", "]", "-", "crop_size", ")", ",", "random", ".", "randint", "(", "0", ",", "resize", "[", "1", "]", "-", "crop_size", ")", "\n", "is_flip", "=", "True", "if", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "flip", "else", "False", "\n", "", "else", ":", "\n", "            ", "left", ",", "top", "=", "(", "resize", "[", "0", "]", "-", "crop_size", ")", "//", "2", ",", "(", "resize", "[", "1", "]", "-", "crop_size", ")", "//", "2", "\n", "is_flip", "=", "False", "\n", "", "return", "(", "left", ",", "top", ",", "left", "+", "crop_size", ",", "top", "+", "crop_size", ")", ",", "is_flip", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.Videodatasets_RGBD.Videodatasets_RGBD.__getitem__": [[53, 118], ["Videodatasets_RGBD.Videodatasets_RGBD.transform_params", "f", "os.path.join", "Videodatasets_RGBD.Videodatasets_RGBD.__getitem__.Sample_Image"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.Videodatasets.Videodatasets.transform_params"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n        Returns:\n            tuple: (image, target) where target is class_index of the target class.\n        \"\"\"", "\n", "resize", "=", "(", "320", ",", "240", ")", "# default | (256, 256) may be helpful", "\n", "crop_rect", ",", "is_flip", "=", "self", ".", "transform_params", "(", "resize", "=", "resize", ",", "flip", "=", "1.0", ")", "# no flip", "\n", "\n", "def", "image_to_np", "(", "image", ")", ":", "\n", "            ", "\"\"\"\n            Returns:\n                np.ndarray: Image converted to array with shape (width, height, channels)\n            \"\"\"", "\n", "image_np", "=", "np", ".", "empty", "(", "[", "image", ".", "channels", ",", "image", ".", "height", ",", "image", ".", "width", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "image", ".", "copyto", "(", "image_np", ")", "\n", "image_np", "=", "np", ".", "transpose", "(", "image_np", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "return", "image_np", "\n", "\n", "", "def", "transform", "(", "img", ")", ":", "\n", "            ", "img", "=", "img", ".", "resize", "(", "resize", ")", "\n", "img", "=", "img", ".", "crop", "(", "crop_rect", ")", "\n", "if", "is_flip", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "return", "np", ".", "array", "(", "img", ".", "resize", "(", "(", "112", ",", "112", ")", ")", ")", "# Image.open", "\n", "# return image_to_np(img.resize((112, 112)))    # accimage.Image", "\n", "\n", "", "def", "Sample_Image", "(", "imgs_path", ",", "sl", ")", ":", "\n", "            ", "frams", "=", "[", "]", "\n", "for", "a", "in", "sl", ":", "\n", "# img = transform(accimage.Image(os.path.join(imgs_path, \"%06d.jpg\" % a))) #if use Accimage", "\n", "                ", "img", "=", "transform", "(", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "imgs_path", ",", "\"%06d.jpg\"", "%", "a", ")", ")", ")", "\n", "frams", ".", "append", "(", "self", ".", "transform", "(", "img", ")", ".", "view", "(", "3", ",", "112", ",", "112", ",", "1", ")", ")", "\n", "", "return", "torch", ".", "cat", "(", "frams", ",", "dim", "=", "3", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "\n", "", "sn", "=", "self", ".", "sample_duration", "\n", "if", "self", ".", "phase", "==", "'train'", ":", "\n", "            ", "f", "=", "lambda", "n", ":", "[", "(", "lambda", "n", ",", "arr", ":", "n", "if", "arr", "==", "[", "]", "else", "random", ".", "choice", "(", "arr", ")", ")", "(", "n", "*", "i", "/", "sn", ",", "\n", "range", "(", "int", "(", "n", "*", "i", "/", "sn", ")", ",", "\n", "max", "(", "int", "(", "n", "*", "i", "/", "sn", ")", "+", "1", ",", "\n", "int", "(", "n", "*", "(", "\n", "i", "+", "1", ")", "/", "sn", ")", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "sn", ")", "]", "\n", "", "else", ":", "\n", "            ", "f", "=", "lambda", "n", ":", "[", "(", "lambda", "n", ",", "arr", ":", "n", "if", "arr", "==", "[", "]", "else", "int", "(", "np", ".", "mean", "(", "arr", ")", ")", ")", "(", "n", "*", "i", "/", "sn", ",", "range", "(", "int", "(", "n", "*", "i", "/", "sn", ")", ",", "\n", "max", "(", "int", "(", "\n", "n", "*", "i", "/", "sn", ")", "+", "1", ",", "\n", "int", "(", "n", "*", "(", "\n", "i", "+", "1", ")", "/", "sn", ")", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "sn", ")", "]", "\n", "", "sl", "=", "f", "(", "self", ".", "inputs2", "[", "index", "]", "[", "1", "]", ")", "\n", "\n", "#Iso", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "'/'", ".", "join", "(", "self", ".", "dataset_root", ".", "split", "(", "'/'", ")", "[", ":", "-", "1", "]", ")", ",", "self", ".", "typ1", ",", "self", ".", "phase", ",", "\n", "'/'", ".", "join", "(", "self", ".", "inputs", "[", "index", "]", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "3", ":", "]", ")", ")", "\n", "clip", "=", "Sample_Image", "(", "data_path", ",", "sl", ")", "\n", "\n", "data_path2", "=", "os", ".", "path", ".", "join", "(", "'/'", ".", "join", "(", "self", ".", "dataset_root", ".", "split", "(", "'/'", ")", "[", ":", "-", "1", "]", ")", ",", "self", ".", "typ2", ",", "self", ".", "phase", ",", "\n", "'/'", ".", "join", "(", "self", ".", "inputs2", "[", "index", "]", "[", "0", "]", ".", "split", "(", "'/'", ")", "[", "-", "3", ":", "]", ")", ")", "\n", "\n", "clip2", "=", "Sample_Image", "(", "data_path2", ",", "sl", ")", "\n", "\n", "assert", "self", ".", "inputs", "[", "index", "]", "[", "2", "]", "==", "self", ".", "inputs2", "[", "index", "]", "[", "2", "]", "\n", "return", "clip", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ",", "self", ".", "inputs", "[", "index", "]", "[", "2", "]", ",", "clip2", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Multi_modality.Videodatasets_RGBD.Videodatasets_RGBD.__len__": [[119, 121], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "inputs2", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.config.Config": [[3, 12], ["config[].items", "print", "open", "yaml.load", "setattr", "print"], "function", ["None"], ["def", "Config", "(", "args", ")", ":", "\n", "\n", "    ", "with", "open", "(", "args", ".", "config", ")", "as", "f", ":", "\n", "        ", "config", "=", "yaml", ".", "load", "(", "f", ")", "\n", "", "for", "k", ",", "v", "in", "config", "[", "'common'", "]", ".", "items", "(", ")", ":", "\n", "        ", "setattr", "(", "args", ",", "k", ",", "v", ")", "\n", "print", "(", "'{0}: {1}'", ".", "format", "(", "k", ",", "v", ")", ")", "\n", "", "print", "(", "'='", "*", "20", ")", "\n", "return", "args", "", "", ""]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.__init__": [[8, 14], ["visdom.Visdom"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "env", "=", "'default'", ",", "**", "kwargs", ")", ":", "\n", "        ", "import", "visdom", "\n", "self", ".", "vis", "=", "visdom", ".", "Visdom", "(", "env", "=", "env", ",", "use_incoming_socket", "=", "False", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "index", "=", "{", "}", "\n", "self", ".", "log_text", "=", "''", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.reinit": [[15, 21], ["visdom.Visdom"], "methods", ["None"], ["", "def", "reinit", "(", "self", ",", "env", "=", "'defult'", ",", "**", "kwargs", ")", ":", "\n", "        ", "'''\n        ??visdom???\n        '''", "\n", "self", ".", "vis", "=", "visdom", ".", "Visdom", "(", "env", "=", "env", ",", "use_incoming_socket", "=", "False", ",", "**", "kwargs", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.plot_many": [[22, 35], ["d.items", "visualizer.Visualizer.index.get", "visualizer.Visualizer.vis.line", "colmu_stac.append", "numpy.array", "numpy.column_stack", "numpy.array", "dict", "tuple", "list", "d.keys"], "methods", ["None"], ["", "def", "plot_many", "(", "self", ",", "d", ",", "modality", ")", ":", "\n", "        ", "colmu_stac", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "            ", "colmu_stac", ".", "append", "(", "np", ".", "array", "(", "v", ")", ")", "\n", "", "x", "=", "self", ".", "index", ".", "get", "(", "modality", ",", "0", ")", "\n", "# self.vis.line(Y=np.column_stack((np.array(dicts['loss1']), np.array(dicts['loss2']))),", "\n", "self", ".", "vis", ".", "line", "(", "Y", "=", "np", ".", "column_stack", "(", "tuple", "(", "colmu_stac", ")", ")", ",", "\n", "X", "=", "np", ".", "array", "(", "[", "x", "]", ")", ",", "\n", "win", "=", "(", "modality", ")", ",", "\n", "# opts=dict(title=modality,legend=['loss1', 'loss2'], ylabel='loss value'),", "\n", "opts", "=", "dict", "(", "title", "=", "modality", ",", "legend", "=", "list", "(", "d", ".", "keys", "(", ")", ")", ",", "ylabel", "=", "'Value'", ",", "xlabel", "=", "'Iteration'", ")", ",", "\n", "update", "=", "None", "if", "x", "==", "0", "else", "'append'", ")", "\n", "self", ".", "index", "[", "modality", "]", "=", "x", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.plot": [[36, 47], ["visualizer.Visualizer.index.get", "visualizer.Visualizer.vis.line", "numpy.array", "numpy.array", "dict"], "methods", ["None"], ["", "def", "plot", "(", "self", ",", "name", ",", "y", ")", ":", "\n", "        ", "\"\"\"\n        self.plot('loss',1.00)\n        \"\"\"", "\n", "x", "=", "self", ".", "index", ".", "get", "(", "name", ",", "0", ")", "\n", "self", ".", "vis", ".", "line", "(", "Y", "=", "np", ".", "array", "(", "[", "y", "]", ")", ",", "X", "=", "np", ".", "array", "(", "[", "x", "]", ")", ",", "\n", "win", "=", "(", "name", ")", ",", "\n", "opts", "=", "dict", "(", "title", "=", "name", ")", ",", "\n", "update", "=", "None", "if", "x", "==", "0", "else", "'append'", "\n", ")", "\n", "self", ".", "index", "[", "name", "]", "=", "x", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.log": [[48, 57], ["visualizer.Visualizer.vis.text", "time.strftime"], "methods", ["None"], ["", "def", "log", "(", "self", ",", "info", ",", "win", "=", "'log_text'", ")", ":", "\n", "        ", "\"\"\"\n        self.log({'loss':1,'lr':0.0001})\n        \"\"\"", "\n", "\n", "self", ".", "log_text", "+=", "(", "'[{time}] {info} <br>'", ".", "format", "(", "\n", "time", "=", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ")", ",", "\n", "info", "=", "info", ")", ")", "\n", "self", ".", "vis", ".", "text", "(", "self", ".", "log_text", ",", "win", "=", "win", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.img_grid": [[58, 65], ["visualizer.Visualizer.img", "tv.utils.make_grid", "[].unsqueeze().clamp", "[].unsqueeze", "input_3d.cpu"], "methods", ["None"], ["", "def", "img_grid", "(", "self", ",", "name", ",", "input_3d", ")", ":", "\n", "        ", "\"\"\"\n        ??batch???????????i.e. input?36?64?64?\n        ??? 6*6 ???????????64*64\n        \"\"\"", "\n", "self", ".", "img", "(", "name", ",", "tv", ".", "utils", ".", "make_grid", "(", "\n", "input_3d", ".", "cpu", "(", ")", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "clamp", "(", "max", "=", "1", ",", "min", "=", "0", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.__getattr__": [[66, 68], ["getattr"], "methods", ["None"], ["", "def", "__getattr__", "(", "self", ",", "name", ")", ":", "\n", "        ", "return", "getattr", "(", "self", ".", "vis", ",", "name", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched.Cell_Con.__init__": [[11, 15], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "op_names", ",", "C_in", ",", "C_out", ",", "stride", ")", ":", "\n", "    ", "super", "(", "Cell_Con", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "op", "=", "OPS_connection", "[", "op_names", "]", "(", "C_in", ",", "C_out", ",", "stride", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched.Cell_Con.forward": [[16, 20], ["AutoGesture_RGBD_searched.Cell_Con.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "outputs", "=", "self", ".", "op", "(", "inputs", ")", "\n", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched.Cell_Net.__init__": [[28, 52], ["torch.Module.__init__", "VaniConv3d", "AutoGesture_RGBD_searched.Cell_Net._compile", "VaniConv3d", "VaniConv3d", "zip", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.Cell._compile"], ["  ", "def", "__init__", "(", "self", ",", "genotype", ",", "C_prev_prev", ",", "C_prev", ",", "C", ",", "reduction_prev", ",", "normal", ")", ":", "\n", "    ", "super", "(", "Cell_Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# stride = [1,2,2]", "\n", "if", "reduction_prev", ":", "\n", "      ", "self", ".", "preprocess0", "=", "VaniConv3d", "(", "C_prev_prev", ",", "C", ",", "1", ",", "[", "1", ",", "2", ",", "2", "]", ",", "0", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "preprocess0", "=", "VaniConv3d", "(", "C_prev_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "", "self", ".", "preprocess1", "=", "VaniConv3d", "(", "C_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "\n", "# branch 8 frame", "\n", "if", "normal", "==", "1", ":", "\n", "        ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal8", ")", "\n", "concat", "=", "genotype", ".", "normal_concat8", "\n", "# branch 16 frame", "\n", "", "if", "normal", "==", "2", ":", "\n", "        ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal16", ")", "\n", "concat", "=", "genotype", ".", "normal_concat16", "\n", "# branch 32 frame", "\n", "", "if", "normal", "==", "3", ":", "\n", "        ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal32", ")", "\n", "concat", "=", "genotype", ".", "normal_concat32", "\n", "\n", "", "self", ".", "_compile", "(", "C", ",", "op_names", ",", "indices", ",", "concat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched.Cell_Net._compile": [[53, 65], ["len", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "zip", "len", "len", "len"], "methods", ["None"], ["", "def", "_compile", "(", "self", ",", "C", ",", "op_names", ",", "indices", ",", "concat", ")", ":", "\n", "    ", "assert", "len", "(", "op_names", ")", "==", "len", "(", "indices", ")", "\n", "self", ".", "_steps", "=", "len", "(", "op_names", ")", "//", "2", "\n", "self", ".", "_concat", "=", "concat", "\n", "self", ".", "multiplier", "=", "len", "(", "concat", ")", "\n", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "name", ",", "index", "in", "zip", "(", "op_names", ",", "indices", ")", ":", "\n", "      ", "stride", "=", "1", "\n", "op", "=", "OPS", "[", "name", "]", "(", "C", ",", "stride", ",", "True", ")", "\n", "self", ".", "_ops", "+=", "[", "op", "]", "\n", "", "self", ".", "_indices", "=", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched.Cell_Net.forward": [[66, 83], ["AutoGesture_RGBD_searched.Cell_Net.preprocess0", "AutoGesture_RGBD_searched.Cell_Net.preprocess1", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "op1", "op2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "s0", ",", "s1", ")", ":", "\n", "    ", "s0", "=", "self", ".", "preprocess0", "(", "s0", ")", "\n", "s1", "=", "self", ".", "preprocess1", "(", "s1", ")", "\n", "\n", "#pdb.set_trace()", "\n", "\n", "states", "=", "[", "s0", ",", "s1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "      ", "h1", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "]", "]", "\n", "h2", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "+", "1", "]", "]", "\n", "op1", "=", "self", ".", "_ops", "[", "2", "*", "i", "]", "\n", "op2", "=", "self", ".", "_ops", "[", "2", "*", "i", "+", "1", "]", "\n", "h1", "=", "op1", "(", "h1", ")", "\n", "h2", "=", "op2", "(", "h2", ")", "\n", "s", "=", "h1", "+", "h2", "\n", "states", "+=", "[", "s", "]", "\n", "", "return", "torch", ".", "cat", "(", "[", "states", "[", "i", "]", "for", "i", "in", "self", ".", "_concat", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.__init__": [[93, 317], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "AutoGesture_RGBD_searched.Cell_Net", "AutoGesture_RGBD_searched.Cell_Net", "AutoGesture_RGBD_searched.Cell_Net", "AutoGesture_RGBD_searched.Cell_Net", "AutoGesture_RGBD_searched.Cell_Net", "AutoGesture_RGBD_searched.Cell_Net", "AutoGesture_RGBD_searched.Cell_Con", "AutoGesture_RGBD_searched.Cell_Con", "AutoGesture_RGBD_searched.Cell_Con", "AutoGesture_RGBD_searched.Cell_Con", "AutoGesture_RGBD_searched.Cell_Con", "AutoGesture_RGBD_searched.Cell_Con", "AutoGesture_RGBD_searched.Cell_Con", "AutoGesture_RGBD_searched.Cell_Con", "AutoGesture_RGBD_searched.Cell_Con"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C", ",", "num_classes", ",", "layers", ",", "genotype_searched_RGB", ",", "genotype_searched_Depth", ",", "genotype_con_unshared", ")", ":", "\n", "    ", "super", "(", "AutoGesture_RGBD_12layers", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "_C", "=", "C", "# 8", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_layers", "=", "layers", "\n", "\n", "self", ".", "_genotype_searched_RGB", "=", "genotype_searched_RGB", "\n", "self", ".", "_genotype_searched_Depth", "=", "genotype_searched_Depth", "\n", "self", ".", "_genotype_con_unshared", "=", "genotype_con_unshared", "\n", "\n", "\n", "self", ".", "MaxpoolSpa", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", "\n", "self", ".", "AvgpoolSpa", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "\n", "#  (0) R16-> R8   (1) R32-> R16   (2)  R32-> R8 (s=4)", "\n", "#  (3) D16-> D8   (4) D32-> D16   (5)  D32-> D8 (s=4)", "\n", "#  (6) R8-> D8  (s=1)  (7) R16-> D8    (8) R16-> D16 (s=1)  (9)  R32-> D8 (s=4) (10)  R32-> D16  (11)  R32-> D32  (s=1)", "\n", "#  (12)D8-> R8  (s=1) (13) D16-> R8   (14) D16-> R16 (s=1) (15)  D32-> R8 (s=4)(16)  D32-> R16  (17)  D32-> R32   (s=1)", "\n", "\n", "\n", "self", ".", "cells_Low_Connect", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cells_Mid_Connect", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cells_High_Connect", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "18", ")", ":", "# 18 connections", "\n", "      ", "if", "i", "in", "[", "6", ",", "8", ",", "11", ",", "12", ",", "14", ",", "17", "]", ":", "# stride = 1", "\n", "        ", "cell_low", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Low_Connect", "[", "i", "]", ",", "C", "*", "2", ",", "C", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", "cell_mid", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Mid_Connect", "[", "i", "]", ",", "C", "*", "2", "*", "4", ",", "C", "*", "2", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", "cell_high", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "High_Connect", "[", "i", "]", ",", "C", "*", "4", "*", "4", ",", "C", "*", "4", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", "\n", "", "elif", "i", "in", "[", "2", ",", "5", ",", "9", ",", "15", "]", ":", "# stride = 4", "\n", "        ", "cell_low", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Low_Connect", "[", "i", "]", ",", "C", "*", "2", ",", "C", ",", "[", "4", ",", "1", ",", "1", "]", ")", "\n", "cell_mid", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Mid_Connect", "[", "i", "]", ",", "C", "*", "2", "*", "4", ",", "C", "*", "2", ",", "[", "4", ",", "1", ",", "1", "]", ")", "\n", "cell_high", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "High_Connect", "[", "i", "]", ",", "C", "*", "4", "*", "4", ",", "C", "*", "4", ",", "[", "4", ",", "1", ",", "1", "]", ")", "\n", "\n", "", "else", ":", "# stride = 2", "\n", "        ", "cell_low", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Low_Connect", "[", "i", "]", ",", "C", "*", "2", ",", "C", ",", "[", "2", ",", "1", ",", "1", "]", ")", "\n", "cell_mid", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Mid_Connect", "[", "i", "]", ",", "C", "*", "2", "*", "4", ",", "C", "*", "2", ",", "[", "2", ",", "1", ",", "1", "]", ")", "\n", "cell_high", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "High_Connect", "[", "i", "]", ",", "C", "*", "4", "*", "4", ",", "C", "*", "4", ",", "[", "2", ",", "1", ",", "1", "]", ")", "\n", "\n", "", "self", ".", "cells_Low_Connect", "+=", "[", "cell_low", "]", "\n", "self", ".", "cells_Mid_Connect", "+=", "[", "cell_mid", "]", "\n", "self", ".", "cells_High_Connect", "+=", "[", "cell_high", "]", "\n", "\n", "\n", "\n", "# 8 frames", "\n", "", "self", ".", "stem0_8_RGB", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_8_RGB", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C", ",", "2", "*", "C", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "stem0_8_Depth", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_8_Depth", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C", ",", "2", "*", "C", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "\n", "# 16 frames", "\n", "self", ".", "stem0_16_RGB", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_16_RGB", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C", ",", "2", "*", "C", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "stem0_16_Depth", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_16_Depth", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C", ",", "2", "*", "C", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "# 32 frames", "\n", "self", ".", "stem0_32_RGB", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_32_RGB", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C", ",", "2", "*", "C", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "stem0_32_Depth", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_32_Depth", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C", ",", "2", "*", "C", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "\n", "\n", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", "=", "C", ",", "7", "*", "C", ",", "2", "*", "C", "\n", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", "=", "C", ",", "5", "*", "C", ",", "2", "*", "C", "\n", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", "=", "C", ",", "3", "*", "C", ",", "2", "*", "C", "\n", "\n", "\n", "\n", "##  8  ##", "\n", "self", ".", "cells8_RGB", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cells8_Depth", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "1", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "        ", "C_curr8", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "4", ":", "\n", "            ", "C_prev8", "=", "4", "*", "C", "*", "4", "+", "2", "*", "C", "#144", "\n", "\n", "", "if", "i", "==", "9", ":", "\n", "            ", "C_prev8", "=", "8", "*", "C", "*", "4", "+", "4", "*", "C", "\n", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell_RGB", "=", "Cell_Net", "(", "genotype_searched_RGB", ",", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", ",", "reduction_prev", ",", "normal", ")", "\n", "cell_Depth", "=", "Cell_Net", "(", "genotype_searched_Depth", ",", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", ",", "reduction_prev", ",", "normal", ")", "\n", "\n", "self", ".", "cells8_RGB", "+=", "[", "cell_RGB", "]", "\n", "self", ".", "cells8_Depth", "+=", "[", "cell_Depth", "]", "\n", "\n", "C_prev_prev8", ",", "C_prev8", "=", "C_prev8", ",", "cell_RGB", ".", "multiplier", "*", "C_curr8", "\n", "\n", "\n", "##  16  ##", "\n", "", "self", ".", "cells16_RGB", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cells16_Depth", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "2", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "        ", "C_curr16", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "4", ":", "\n", "            ", "C_prev16", "=", "3", "*", "C", "*", "4", "+", "2", "*", "C", "#112", "\n", "\n", "", "if", "i", "==", "9", ":", "\n", "            ", "C_prev16", "=", "6", "*", "C", "*", "4", "+", "4", "*", "C", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell_RGB", "=", "Cell_Net", "(", "genotype_searched_RGB", ",", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", ",", "reduction_prev", ",", "normal", ")", "\n", "cell_Depth", "=", "Cell_Net", "(", "genotype_searched_Depth", ",", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", ",", "reduction_prev", ",", "normal", ")", "\n", "\n", "self", ".", "cells16_RGB", "+=", "[", "cell_RGB", "]", "\n", "self", ".", "cells16_Depth", "+=", "[", "cell_Depth", "]", "\n", "\n", "C_prev_prev16", ",", "C_prev16", "=", "C_prev16", ",", "cell_RGB", ".", "multiplier", "*", "C_curr16", "\n", "\n", "\n", "##  32  ##", "\n", "", "self", ".", "cells32_RGB", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cells32_Depth", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "3", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "        ", "C_curr32", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "4", ":", "\n", "            ", "C_prev32", "=", "2", "*", "C", "*", "4", "+", "2", "*", "C", "#80", "\n", "\n", "", "if", "i", "==", "9", ":", "\n", "            ", "C_prev32", "=", "4", "*", "C", "*", "4", "+", "4", "*", "C", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "\n", "", "cell_RGB", "=", "Cell_Net", "(", "genotype_searched_RGB", ",", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", ",", "reduction_prev", ",", "normal", ")", "\n", "cell_Depth", "=", "Cell_Net", "(", "genotype_searched_Depth", ",", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", ",", "reduction_prev", ",", "normal", ")", "\n", "\n", "self", ".", "cells32_RGB", "+=", "[", "cell_RGB", "]", "\n", "self", ".", "cells32_Depth", "+=", "[", "cell_Depth", "]", "\n", "\n", "C_prev_prev32", ",", "C_prev32", "=", "C_prev32", ",", "cell_RGB", ".", "multiplier", "*", "C_curr32", "\n", "\n", "\n", "# head", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "1", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev8", "*", "2", "+", "C_prev16", "*", "2", "+", "C_prev32", "*", "2", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.forward": [[321, 544], ["AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem0_32_RGB", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem1_32_RGB", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.AvgpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem0_32_Depth", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem1_32_Depth", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.AvgpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem0_16_RGB", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem1_16_RGB", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.AvgpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem0_16_Depth", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem1_16_Depth", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.AvgpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem0_8_RGB", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem1_8_RGB", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.AvgpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem0_8_Depth", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.stem1_8_Depth", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.AvgpoolSpa", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.global_pooling", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.global_pooling", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.global_pooling", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.global_pooling", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.global_pooling", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.global_pooling", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.classifier", "laterals_Low.append", "laterals_Mid.append", "laterals_High.append", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.dropout", "cell", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched.AutoGesture_RGBD_12layers.MaxpoolSpa", "torch.cat.view", "torch.cat.view", "torch.cat.view", "cell", "torch.cat.size", "torch.cat.size", "torch.cat.size", "cell", "cell", "cell", "cell"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "inputs_D", ")", ":", "\n", "\n", "## inputs 32 x 3 x 112 x 112 ##", "\n", "\n", "\n", "# 32", "\n", "    ", "s0_32_RGB", "=", "self", ".", "stem0_32_RGB", "(", "inputs", ")", "# 32*28*28 ", "\n", "s1_32_RGB", "=", "self", ".", "stem1_32_RGB", "(", "s0_32_RGB", ")", "# 16*28*28  ", "\n", "s0_32_RGB", "=", "self", ".", "AvgpoolSpa", "(", "s0_32_RGB", ")", "# 16*28*28 ", "\n", "\n", "s0_32_Depth", "=", "self", ".", "stem0_32_Depth", "(", "inputs_D", ")", "# 32*28*28 ", "\n", "s1_32_Depth", "=", "self", ".", "stem1_32_Depth", "(", "s0_32_Depth", ")", "# 16*28*28  ", "\n", "s0_32_Depth", "=", "self", ".", "AvgpoolSpa", "(", "s0_32_Depth", ")", "# 16*28*28 ", "\n", "\n", "\n", "\n", "# 16", "\n", "s0_16_RGB", "=", "self", ".", "stem0_16_RGB", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ",", ":", "]", ")", "# 16*28*28 ", "\n", "s1_16_RGB", "=", "self", ".", "stem1_16_RGB", "(", "s0_16_RGB", ")", "# 8*28*28  ", "\n", "s0_16_RGB", "=", "self", ".", "AvgpoolSpa", "(", "s0_16_RGB", ")", "# 8*28*28 ", "\n", "\n", "s0_16_Depth", "=", "self", ".", "stem0_16_Depth", "(", "inputs_D", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ",", ":", "]", ")", "# 16*28*28 ", "\n", "s1_16_Depth", "=", "self", ".", "stem1_16_Depth", "(", "s0_16_Depth", ")", "# 8*28*28  ", "\n", "s0_16_Depth", "=", "self", ".", "AvgpoolSpa", "(", "s0_16_Depth", ")", "# 8*28*28 ", "\n", "\n", "\n", "\n", "# 8 ", "\n", "s0_8_RGB", "=", "self", ".", "stem0_8_RGB", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "4", ",", ":", ",", ":", "]", ")", "# 8*28*28 ", "\n", "s1_8_RGB", "=", "self", ".", "stem1_8_RGB", "(", "s0_8_RGB", ")", "# 4*28*28  ", "\n", "s0_8_RGB", "=", "self", ".", "AvgpoolSpa", "(", "s0_8_RGB", ")", "# 4*28*28 ", "\n", "\n", "s0_8_Depth", "=", "self", ".", "stem0_8_Depth", "(", "inputs_D", "[", ":", ",", ":", ",", ":", ":", "4", ",", ":", ",", ":", "]", ")", "# 8*28*28 ", "\n", "s1_8_Depth", "=", "self", ".", "stem1_8_Depth", "(", "s0_8_Depth", ")", "# 4*28*28  ", "\n", "s0_8_Depth", "=", "self", ".", "AvgpoolSpa", "(", "s0_8_Depth", ")", "# 4*28*28 ", "\n", "\n", "\n", "#  (0) R16-> R8   (1) R32-> R16   (2)  R32-> R8 (s=4)", "\n", "#  (3) D16-> D8   (4) D32-> D16   (5)  D32-> D8 (s=4)", "\n", "#  (6) R8-> D8  (s=1)  (7) R16-> D8    (8) R16-> D16 (s=1)  (9)  R32-> D8 (s=4) (10)  R32-> D16  (11)  R32-> D32  (s=1)", "\n", "#  (12)D8-> R8  (s=1) (13) D16-> R8   (14) D16-> R16 (s=1) (15)  D32-> R8 (s=4)(16)  D32-> R16  (17)  D32-> R32   (s=1)", "\n", "\n", "\n", "laterals_Low", "=", "[", "]", "\n", "#for i in range(18):  # 18 connections", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells_Low_Connect", ")", ":", "\n", "#pdb.set_trace()", "\n", "      ", "if", "i", "in", "[", "1", ",", "2", ",", "9", ",", "10", ",", "11", "]", ":", "# RGB32", "\n", "        ", "lateral1", "=", "cell", "(", "s1_32_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "0", ",", "7", ",", "8", "]", ":", "# RGB16", "\n", "        ", "lateral1", "=", "cell", "(", "s1_16_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "6", "]", ":", "# RGB8", "\n", "        ", "lateral1", "=", "cell", "(", "s1_8_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "4", ",", "5", ",", "15", ",", "16", ",", "17", "]", ":", "# Depth32", "\n", "        ", "lateral1", "=", "cell", "(", "s1_32_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "3", ",", "13", ",", "14", "]", ":", "# Depth16", "\n", "        ", "lateral1", "=", "cell", "(", "s1_16_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "12", "]", ":", "# Depth8", "\n", "        ", "lateral1", "=", "cell", "(", "s1_8_Depth", ")", "\n", "\n", "", "laterals_Low", ".", "append", "(", "lateral1", ")", "\n", "\n", "", "s1_32_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_Low", "[", "17", "]", ",", "s1_32_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_Low", "[", "1", "]", ",", "laterals_Low", "[", "14", "]", ",", "laterals_Low", "[", "16", "]", ",", "s1_16_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_Low", "[", "0", "]", ",", "laterals_Low", "[", "2", "]", ",", "laterals_Low", "[", "12", "]", ",", "laterals_Low", "[", "13", "]", ",", "laterals_Low", "[", "15", "]", ",", "s1_8_RGB", "]", ",", "dim", "=", "1", ")", "\n", "\n", "s1_32_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_Low", "[", "11", "]", ",", "s1_32_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_Low", "[", "4", "]", ",", "laterals_Low", "[", "8", "]", ",", "laterals_Low", "[", "10", "]", ",", "s1_16_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_Low", "[", "3", "]", ",", "laterals_Low", "[", "5", "]", ",", "laterals_Low", "[", "6", "]", ",", "laterals_Low", "[", "7", "]", ",", "laterals_Low", "[", "9", "]", ",", "s1_8_Depth", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "# 8 layers", "\n", "for", "ii", "in", "range", "(", "0", ",", "4", ")", ":", "\n", "      ", "s0_32_RGB", ",", "s1_32_RGB", "=", "s1_32_RGB", ",", "self", ".", "cells32_RGB", "[", "ii", "]", "(", "s0_32_RGB", ",", "s1_32_RGB", ")", "\n", "s0_32_Depth", ",", "s1_32_Depth", "=", "s1_32_Depth", ",", "self", ".", "cells32_Depth", "[", "ii", "]", "(", "s0_32_Depth", ",", "s1_32_Depth", ")", "\n", "\n", "s0_16_RGB", ",", "s1_16_RGB", "=", "s1_16_RGB", ",", "self", ".", "cells16_RGB", "[", "ii", "]", "(", "s0_16_RGB", ",", "s1_16_RGB", ")", "\n", "s0_16_Depth", ",", "s1_16_Depth", "=", "s1_16_Depth", ",", "self", ".", "cells16_Depth", "[", "ii", "]", "(", "s0_16_Depth", ",", "s1_16_Depth", ")", "\n", "\n", "s0_8_RGB", ",", "s1_8_RGB", "=", "s1_8_RGB", ",", "self", ".", "cells8_RGB", "[", "ii", "]", "(", "s0_8_RGB", ",", "s1_8_RGB", ")", "\n", "s0_8_Depth", ",", "s1_8_Depth", "=", "s1_8_Depth", ",", "self", ".", "cells8_Depth", "[", "ii", "]", "(", "s0_8_Depth", ",", "s1_8_Depth", ")", "\n", "\n", "if", "ii", "==", "3", ":", "\n", "        ", "x_visual28", "=", "s1_16_RGB", "\n", "\n", "s1_32_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_32_RGB", ")", "\n", "s1_32_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_32_Depth", ")", "\n", "s1_16_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_16_RGB", ")", "\n", "s1_16_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_16_Depth", ")", "\n", "s1_8_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_8_RGB", ")", "\n", "s1_8_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_8_Depth", ")", "\n", "\n", "\n", "\n", "", "", "laterals_Mid", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "18", ")", ":", "# 18 connections", "\n", "\n", "      ", "if", "i", "in", "[", "1", ",", "2", ",", "9", ",", "10", ",", "11", "]", ":", "# RGB32", "\n", "        ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_32_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "0", ",", "7", ",", "8", "]", ":", "# RGB16", "\n", "        ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_16_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "6", "]", ":", "# RGB8", "\n", "        ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_8_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "4", ",", "5", ",", "15", ",", "16", ",", "17", "]", ":", "# Depth32", "\n", "        ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_32_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "3", ",", "13", ",", "14", "]", ":", "# Depth16", "\n", "        ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_16_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "12", "]", ":", "# Depth8", "\n", "        ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_8_Depth", ")", "\n", "\n", "", "laterals_Mid", ".", "append", "(", "lateral1", ")", "\n", "\n", "\n", "\n", "\n", "", "s1_32_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_Mid", "[", "17", "]", ",", "s1_32_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_Mid", "[", "1", "]", ",", "laterals_Mid", "[", "14", "]", ",", "laterals_Mid", "[", "16", "]", ",", "s1_16_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_Mid", "[", "0", "]", ",", "laterals_Mid", "[", "2", "]", ",", "laterals_Mid", "[", "12", "]", ",", "laterals_Mid", "[", "13", "]", ",", "laterals_Mid", "[", "15", "]", ",", "s1_8_RGB", "]", ",", "dim", "=", "1", ")", "\n", "\n", "s1_32_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_Mid", "[", "11", "]", ",", "s1_32_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_Mid", "[", "4", "]", ",", "laterals_Mid", "[", "8", "]", ",", "laterals_Mid", "[", "10", "]", ",", "s1_16_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_Mid", "[", "3", "]", ",", "laterals_Mid", "[", "5", "]", ",", "laterals_Mid", "[", "6", "]", ",", "laterals_Mid", "[", "7", "]", ",", "laterals_Mid", "[", "9", "]", ",", "s1_8_Depth", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "\n", "#--------------------------------------------------------------------------------", "\n", "\n", "\n", "for", "ii", "in", "range", "(", "4", ",", "9", ")", ":", "\n", "      ", "s0_32_RGB", ",", "s1_32_RGB", "=", "s1_32_RGB", ",", "self", ".", "cells32_RGB", "[", "ii", "]", "(", "s0_32_RGB", ",", "s1_32_RGB", ")", "\n", "s0_32_Depth", ",", "s1_32_Depth", "=", "s1_32_Depth", ",", "self", ".", "cells32_Depth", "[", "ii", "]", "(", "s0_32_Depth", ",", "s1_32_Depth", ")", "\n", "\n", "s0_16_RGB", ",", "s1_16_RGB", "=", "s1_16_RGB", ",", "self", ".", "cells16_RGB", "[", "ii", "]", "(", "s0_16_RGB", ",", "s1_16_RGB", ")", "\n", "s0_16_Depth", ",", "s1_16_Depth", "=", "s1_16_Depth", ",", "self", ".", "cells16_Depth", "[", "ii", "]", "(", "s0_16_Depth", ",", "s1_16_Depth", ")", "\n", "\n", "s0_8_RGB", ",", "s1_8_RGB", "=", "s1_8_RGB", ",", "self", ".", "cells8_RGB", "[", "ii", "]", "(", "s0_8_RGB", ",", "s1_8_RGB", ")", "\n", "s0_8_Depth", ",", "s1_8_Depth", "=", "s1_8_Depth", ",", "self", ".", "cells8_Depth", "[", "ii", "]", "(", "s0_8_Depth", ",", "s1_8_Depth", ")", "\n", "\n", "if", "ii", "==", "8", ":", "\n", "        ", "x_visual14", "=", "s1_16_RGB", "\n", "\n", "s1_32_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_32_RGB", ")", "\n", "s1_32_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_32_Depth", ")", "\n", "s1_16_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_16_RGB", ")", "\n", "s1_16_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_16_Depth", ")", "\n", "s1_8_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_8_RGB", ")", "\n", "s1_8_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_8_Depth", ")", "\n", "\n", "\n", "\n", "", "", "laterals_High", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "18", ")", ":", "# 18 connections", "\n", "\n", "      ", "if", "i", "in", "[", "1", ",", "2", ",", "9", ",", "10", ",", "11", "]", ":", "# RGB32", "\n", "        ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_32_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "0", ",", "7", ",", "8", "]", ":", "# RGB16", "\n", "        ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_16_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "6", "]", ":", "# RGB8", "\n", "        ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_8_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "4", ",", "5", ",", "15", ",", "16", ",", "17", "]", ":", "# Depth32", "\n", "        ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_32_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "3", ",", "13", ",", "14", "]", ":", "# Depth16", "\n", "        ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_16_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "12", "]", ":", "# Depth8", "\n", "        ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_8_Depth", ")", "\n", "\n", "", "laterals_High", ".", "append", "(", "lateral1", ")", "\n", "\n", "\n", "\n", "", "s1_32_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_High", "[", "17", "]", ",", "s1_32_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_High", "[", "1", "]", ",", "laterals_High", "[", "14", "]", ",", "laterals_High", "[", "16", "]", ",", "s1_16_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_High", "[", "0", "]", ",", "laterals_High", "[", "2", "]", ",", "laterals_High", "[", "12", "]", ",", "laterals_High", "[", "13", "]", ",", "laterals_High", "[", "15", "]", ",", "s1_8_RGB", "]", ",", "dim", "=", "1", ")", "\n", "\n", "s1_32_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_High", "[", "11", "]", ",", "s1_32_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_High", "[", "4", "]", ",", "laterals_High", "[", "8", "]", ",", "laterals_High", "[", "10", "]", ",", "s1_16_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_High", "[", "3", "]", ",", "laterals_High", "[", "5", "]", ",", "laterals_High", "[", "6", "]", ",", "laterals_High", "[", "7", "]", ",", "laterals_High", "[", "9", "]", ",", "s1_8_Depth", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "#--------------------------------------------------------------------------------", "\n", "\n", "for", "ii", "in", "range", "(", "9", ",", "12", ")", ":", "\n", "      ", "s0_32_RGB", ",", "s1_32_RGB", "=", "s1_32_RGB", ",", "self", ".", "cells32_RGB", "[", "ii", "]", "(", "s0_32_RGB", ",", "s1_32_RGB", ")", "\n", "s0_32_Depth", ",", "s1_32_Depth", "=", "s1_32_Depth", ",", "self", ".", "cells32_Depth", "[", "ii", "]", "(", "s0_32_Depth", ",", "s1_32_Depth", ")", "\n", "\n", "s0_16_RGB", ",", "s1_16_RGB", "=", "s1_16_RGB", ",", "self", ".", "cells16_RGB", "[", "ii", "]", "(", "s0_16_RGB", ",", "s1_16_RGB", ")", "\n", "s0_16_Depth", ",", "s1_16_Depth", "=", "s1_16_Depth", ",", "self", ".", "cells16_Depth", "[", "ii", "]", "(", "s0_16_Depth", ",", "s1_16_Depth", ")", "\n", "\n", "s0_8_RGB", ",", "s1_8_RGB", "=", "s1_8_RGB", ",", "self", ".", "cells8_RGB", "[", "ii", "]", "(", "s0_8_RGB", ",", "s1_8_RGB", ")", "\n", "s0_8_Depth", ",", "s1_8_Depth", "=", "s1_8_Depth", ",", "self", ".", "cells8_Depth", "[", "ii", "]", "(", "s0_8_Depth", ",", "s1_8_Depth", ")", "\n", "\n", "\n", "#--------------------------------------------------------------------------------      ", "\n", "\n", "", "out_32_RGB", "=", "self", ".", "global_pooling", "(", "s1_32_RGB", ")", "# C*8*4*=8*8*4=256       ", "\n", "out_16_RGB", "=", "self", ".", "global_pooling", "(", "s1_16_RGB", ")", "# ", "\n", "out_8_RGB", "=", "self", ".", "global_pooling", "(", "s1_8_RGB", ")", "# ", "\n", "\n", "out_32_Depth", "=", "self", ".", "global_pooling", "(", "s1_32_Depth", ")", "# C*8*4*=8*8*4=256       ", "\n", "out_16_Depth", "=", "self", ".", "global_pooling", "(", "s1_16_Depth", ")", "# ", "\n", "out_8_Depth", "=", "self", ".", "global_pooling", "(", "s1_8_Depth", ")", "# ", "\n", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out_32_RGB", ",", "out_16_RGB", ",", "out_8_RGB", ",", "out_32_Depth", ",", "out_16_Depth", ",", "out_8_Depth", "]", ",", "dim", "=", "1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "self", ".", "dropout", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ")", "# dropout=0.5", "\n", "#logits = self.classifier(out.view(out.size(0),-1))", "\n", "\n", "#return logits, x_visual28, x_visual14", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con.__init__": [[11, 15], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["    ", "def", "__init__", "(", "self", ",", "op_names", ",", "C_in", ",", "C_out", ",", "stride", ")", ":", "\n", "        ", "super", "(", "Cell_Con", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "op", "=", "OPS_connection", "[", "op_names", "]", "(", "C_in", ",", "C_out", ",", "stride", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con.forward": [[16, 20], ["AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "outputs", "=", "self", ".", "op", "(", "inputs", ")", "\n", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net.__init__": [[24, 48], ["torch.Module.__init__", "VaniConv3d", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net._compile", "VaniConv3d", "VaniConv3d", "zip", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.Cell._compile"], ["    ", "def", "__init__", "(", "self", ",", "genotype", ",", "C_prev_prev", ",", "C_prev", ",", "C", ",", "reduction_prev", ",", "normal", ")", ":", "\n", "        ", "super", "(", "Cell_Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# stride = [1,2,2]", "\n", "if", "reduction_prev", ":", "\n", "            ", "self", ".", "preprocess0", "=", "VaniConv3d", "(", "C_prev_prev", ",", "C", ",", "1", ",", "[", "1", ",", "2", ",", "2", "]", ",", "0", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "preprocess0", "=", "VaniConv3d", "(", "C_prev_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "", "self", ".", "preprocess1", "=", "VaniConv3d", "(", "C_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "\n", "# branch 8 frame", "\n", "if", "normal", "==", "1", ":", "\n", "            ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal8", ")", "\n", "concat", "=", "genotype", ".", "normal_concat8", "\n", "# branch 16 frame", "\n", "", "if", "normal", "==", "2", ":", "\n", "            ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal16", ")", "\n", "concat", "=", "genotype", ".", "normal_concat16", "\n", "# branch 32 frame", "\n", "", "if", "normal", "==", "3", ":", "\n", "            ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal32", ")", "\n", "concat", "=", "genotype", ".", "normal_concat32", "\n", "\n", "", "self", ".", "_compile", "(", "C", ",", "op_names", ",", "indices", ",", "concat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net._compile": [[49, 61], ["len", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "zip", "len", "len", "len"], "methods", ["None"], ["", "def", "_compile", "(", "self", ",", "C", ",", "op_names", ",", "indices", ",", "concat", ")", ":", "\n", "        ", "assert", "len", "(", "op_names", ")", "==", "len", "(", "indices", ")", "\n", "self", ".", "_steps", "=", "len", "(", "op_names", ")", "//", "2", "\n", "self", ".", "_concat", "=", "concat", "\n", "self", ".", "multiplier", "=", "len", "(", "concat", ")", "\n", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "name", ",", "index", "in", "zip", "(", "op_names", ",", "indices", ")", ":", "\n", "            ", "stride", "=", "1", "\n", "op", "=", "OPS", "[", "name", "]", "(", "C", ",", "stride", ",", "True", ")", "\n", "self", ".", "_ops", "+=", "[", "op", "]", "\n", "", "self", ".", "_indices", "=", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net.forward": [[62, 79], ["AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net.preprocess0", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net.preprocess1", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "op1", "op2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "s0", ",", "s1", ")", ":", "\n", "        ", "s0", "=", "self", ".", "preprocess0", "(", "s0", ")", "\n", "s1", "=", "self", ".", "preprocess1", "(", "s1", ")", "\n", "\n", "# pdb.set_trace()", "\n", "\n", "states", "=", "[", "s0", ",", "s1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "            ", "h1", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "]", "]", "\n", "h2", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "+", "1", "]", "]", "\n", "op1", "=", "self", ".", "_ops", "[", "2", "*", "i", "]", "\n", "op2", "=", "self", ".", "_ops", "[", "2", "*", "i", "+", "1", "]", "\n", "h1", "=", "op1", "(", "h1", ")", "\n", "h2", "=", "op2", "(", "h2", ")", "\n", "s", "=", "h1", "+", "h2", "\n", "states", "+=", "[", "s", "]", "\n", "", "return", "torch", ".", "cat", "(", "[", "states", "[", "i", "]", "for", "i", "in", "self", ".", "_concat", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.__init__": [[86, 340], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Net", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con", "AutoGesture_RGBD_searched_12layers_DiffChannels.Cell_Con"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["    ", "def", "__init__", "(", "self", ",", "C8", ",", "C16", ",", "C32", ",", "num_classes", ",", "layers", ",", "genotype_searched_RGB", ",", "genotype_searched_Depth", ",", "\n", "genotype_con_unshared", ")", ":", "\n", "        ", "super", "(", "AutoGesture_RGBD_12layers", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# self._C = C    # 8", "\n", "self", ".", "_C8", "=", "C8", "# 48", "\n", "self", ".", "_C16", "=", "C16", "# 32", "\n", "self", ".", "_C32", "=", "C32", "# 16", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_layers", "=", "layers", "\n", "\n", "self", ".", "_genotype_searched_RGB", "=", "genotype_searched_RGB", "\n", "self", ".", "_genotype_searched_Depth", "=", "genotype_searched_Depth", "\n", "self", ".", "_genotype_con_unshared", "=", "genotype_con_unshared", "\n", "\n", "self", ".", "MaxpoolSpa", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", "\n", "self", ".", "AvgpoolSpa", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "#  (0) R16-> R8   (1) R32-> R16   (2)  R32-> R8 (s=4)", "\n", "#  (3) D16-> D8   (4) D32-> D16   (5)  D32-> D8 (s=4)", "\n", "#  (6) R8-> D8  (s=1)  (7) R16-> D8    (8) R16-> D16 (s=1)  (9)  R32-> D8 (s=4) (10)  R32-> D16  (11)  R32-> D32  (s=1)", "\n", "#  (12)D8-> R8  (s=1) (13) D16-> R8   (14) D16-> R16 (s=1) (15)  D32-> R8 (s=4)(16)  D32-> R16  (17)  D32-> R32   (s=1)", "\n", "\n", "self", ".", "cells_Low_Connect", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cells_Mid_Connect", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cells_High_Connect", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "18", ")", ":", "# 18 connections", "\n", "\n", "# C8", "\n", "            ", "if", "i", "in", "[", "6", ",", "12", "]", ":", "\n", "                ", "C_in_low", ",", "C_in_mid", ",", "C_in_high", "=", "C8", "*", "2", ",", "C8", "*", "2", "*", "4", ",", "C8", "*", "4", "*", "4", "\n", "C_out_low", ",", "C_out_mid", ",", "C_out_high", "=", "C8", ",", "C8", ",", "C8", "*", "2", "\n", "\n", "# C16", "\n", "", "elif", "i", "in", "[", "0", ",", "3", ",", "7", ",", "8", ",", "13", ",", "14", "]", ":", "\n", "                ", "C_in_low", ",", "C_in_mid", ",", "C_in_high", "=", "C16", "*", "2", ",", "C16", "*", "2", "*", "4", ",", "C16", "*", "4", "*", "4", "\n", "C_out_low", ",", "C_out_mid", ",", "C_out_high", "=", "C16", ",", "C16", ",", "C16", "*", "2", "\n", "\n", "# C32", "\n", "", "else", ":", "\n", "                ", "C_in_low", ",", "C_in_mid", ",", "C_in_high", "=", "C32", "*", "2", ",", "C32", "*", "2", "*", "4", ",", "C32", "*", "4", "*", "4", "\n", "C_out_low", ",", "C_out_mid", ",", "C_out_high", "=", "C32", ",", "C32", ",", "C32", "*", "2", "\n", "\n", "# ---------------------------------------", "\n", "\n", "", "if", "i", "in", "[", "6", ",", "8", ",", "11", ",", "12", ",", "14", ",", "17", "]", ":", "# stride = 1", "\n", "                ", "cell_low", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Low_Connect", "[", "i", "]", ",", "C_in_low", ",", "C_out_low", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", "cell_mid", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Mid_Connect", "[", "i", "]", ",", "C_in_mid", ",", "C_out_mid", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", "cell_high", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "High_Connect", "[", "i", "]", ",", "C_in_high", ",", "C_out_high", ",", "[", "1", ",", "1", ",", "1", "]", ")", "\n", "\n", "", "elif", "i", "in", "[", "2", ",", "5", ",", "9", ",", "15", "]", ":", "# stride = 4", "\n", "                ", "cell_low", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Low_Connect", "[", "i", "]", ",", "C_in_low", ",", "C_out_low", ",", "[", "4", ",", "1", ",", "1", "]", ")", "\n", "cell_mid", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Mid_Connect", "[", "i", "]", ",", "C_in_mid", ",", "C_out_mid", ",", "[", "4", ",", "1", ",", "1", "]", ")", "\n", "cell_high", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "High_Connect", "[", "i", "]", ",", "C_in_high", ",", "C_out_high", ",", "[", "4", ",", "1", ",", "1", "]", ")", "\n", "\n", "", "else", ":", "# stride = 2", "\n", "                ", "cell_low", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Low_Connect", "[", "i", "]", ",", "C_in_low", ",", "C_out_low", ",", "[", "2", ",", "1", ",", "1", "]", ")", "\n", "cell_mid", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "Mid_Connect", "[", "i", "]", ",", "C_in_mid", ",", "C_out_mid", ",", "[", "2", ",", "1", ",", "1", "]", ")", "\n", "cell_high", "=", "Cell_Con", "(", "self", ".", "_genotype_con_unshared", ".", "High_Connect", "[", "i", "]", ",", "C_in_high", ",", "C_out_high", ",", "[", "2", ",", "1", ",", "1", "]", ")", "\n", "\n", "# if i in [6,8,11,12,14,17]:    # stride = 1", "\n", "#  cell_low = Cell_Con(self._genotype_con_unshared.Low_Connect[i], C*2, C, [1,1,1])", "\n", "#  cell_mid = Cell_Con(self._genotype_con_unshared.Mid_Connect[i], C*2*4, C*2, [1,1,1])", "\n", "#  cell_high = Cell_Con(self._genotype_con_unshared.High_Connect[i], C*4*4, C*4, [1,1,1])", "\n", "\n", "# elif i in [2,5,9,15]:    # stride = 4", "\n", "#  cell_low = Cell_Con(self._genotype_con_unshared.Low_Connect[i], C*2, C, [4,1,1])", "\n", "#  cell_mid = Cell_Con(self._genotype_con_unshared.Mid_Connect[i], C*2*4, C*2, [4,1,1])", "\n", "#  cell_high = Cell_Con(self._genotype_con_unshared.High_Connect[i], C*4*4, C*4, [4,1,1])", "\n", "\n", "# else:      # stride = 2", "\n", "#  cell_low = Cell_Con(self._genotype_con_unshared.Low_Connect[i], C*2, C, [2,1,1])", "\n", "#  cell_mid = Cell_Con(self._genotype_con_unshared.Mid_Connect[i], C*2*4, C*2, [2,1,1])", "\n", "#  cell_high = Cell_Con(self._genotype_con_unshared.High_Connect[i], C*4*4, C*4, [2,1,1])", "\n", "\n", "", "self", ".", "cells_Low_Connect", "+=", "[", "cell_low", "]", "\n", "self", ".", "cells_Mid_Connect", "+=", "[", "cell_mid", "]", "\n", "self", ".", "cells_High_Connect", "+=", "[", "cell_high", "]", "\n", "\n", "# 8 frames", "\n", "", "self", ".", "stem0_8_RGB", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_8_RGB", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C8", ",", "2", "*", "C8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "stem0_8_Depth", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_8_Depth", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C8", ",", "2", "*", "C8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "# 16 frames", "\n", "self", ".", "stem0_16_RGB", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_16_RGB", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C16", ",", "2", "*", "C16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "stem0_16_Depth", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_16_Depth", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C16", ",", "2", "*", "C16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "# 32 frames", "\n", "self", ".", "stem0_32_RGB", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_32_RGB", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C32", ",", "2", "*", "C32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "stem0_32_Depth", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_32_Depth", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C32", ",", "2", "*", "C32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", "=", "C8", ",", "2", "*", "C8", "+", "1", "*", "C8", "+", "2", "*", "C16", "+", "2", "*", "C32", ",", "2", "*", "C8", "# all operation --> halves the channels", "\n", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", "=", "C16", ",", "2", "*", "C16", "+", "1", "*", "C16", "+", "2", "*", "C32", ",", "2", "*", "C16", "\n", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", "=", "C32", ",", "2", "*", "C32", "+", "C32", ",", "2", "*", "C32", "\n", "\n", "##  8  ##", "\n", "self", ".", "cells8_RGB", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cells8_Depth", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "1", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "            ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "                ", "C_curr8", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "4", ":", "\n", "# C_prev8 = 4*C*4 + 2*C  #144", "\n", "                    ", "C_prev8", "=", "2", "*", "C8", "*", "4", "+", "1", "*", "C8", "+", "2", "*", "C16", "+", "2", "*", "C32", "\n", "\n", "", "if", "i", "==", "9", ":", "\n", "# C_prev8 = 8*C*4 + 4*C", "\n", "                    ", "C_prev8", "=", "4", "*", "C8", "*", "4", "+", "2", "*", "C8", "+", "4", "*", "C16", "+", "4", "*", "C32", "\n", "\n", "", "", "else", ":", "\n", "                ", "reduction_prev", "=", "False", "\n", "", "cell_RGB", "=", "Cell_Net", "(", "genotype_searched_RGB", ",", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", ",", "reduction_prev", ",", "normal", ")", "\n", "cell_Depth", "=", "Cell_Net", "(", "genotype_searched_Depth", ",", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", ",", "reduction_prev", ",", "normal", ")", "\n", "\n", "self", ".", "cells8_RGB", "+=", "[", "cell_RGB", "]", "\n", "self", ".", "cells8_Depth", "+=", "[", "cell_Depth", "]", "\n", "\n", "C_prev_prev8", ",", "C_prev8", "=", "C_prev8", ",", "cell_RGB", ".", "multiplier", "*", "C_curr8", "\n", "\n", "##  16  ##", "\n", "", "self", ".", "cells16_RGB", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cells16_Depth", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "2", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "            ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "                ", "C_curr16", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "4", ":", "\n", "# C_prev16 = 3*C*4 + 2*C  #112", "\n", "                    ", "C_prev16", "=", "2", "*", "C16", "*", "4", "+", "1", "*", "C16", "+", "2", "*", "C32", "\n", "\n", "", "if", "i", "==", "9", ":", "\n", "# C_prev16 = 6*C*4 + 4*C", "\n", "                    ", "C_prev16", "=", "4", "*", "C16", "*", "4", "+", "2", "*", "C16", "+", "4", "*", "C32", "\n", "", "", "else", ":", "\n", "                ", "reduction_prev", "=", "False", "\n", "", "cell_RGB", "=", "Cell_Net", "(", "genotype_searched_RGB", ",", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", ",", "reduction_prev", ",", "normal", ")", "\n", "cell_Depth", "=", "Cell_Net", "(", "genotype_searched_Depth", ",", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", ",", "reduction_prev", ",", "normal", ")", "\n", "\n", "self", ".", "cells16_RGB", "+=", "[", "cell_RGB", "]", "\n", "self", ".", "cells16_Depth", "+=", "[", "cell_Depth", "]", "\n", "\n", "C_prev_prev16", ",", "C_prev16", "=", "C_prev16", ",", "cell_RGB", ".", "multiplier", "*", "C_curr16", "\n", "\n", "##  32  ##", "\n", "", "self", ".", "cells32_RGB", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "cells32_Depth", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "3", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "            ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "                ", "C_curr32", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "4", ":", "\n", "# C_prev32 = 2*C*4 + 2*C  #80", "\n", "                    ", "C_prev32", "=", "2", "*", "C32", "*", "4", "+", "C32", "\n", "\n", "", "if", "i", "==", "9", ":", "\n", "# C_prev32 = 4*C*4 + 4*C", "\n", "                    ", "C_prev32", "=", "4", "*", "C32", "*", "4", "+", "2", "*", "C32", "\n", "", "", "else", ":", "\n", "                ", "reduction_prev", "=", "False", "\n", "\n", "", "cell_RGB", "=", "Cell_Net", "(", "genotype_searched_RGB", ",", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", ",", "reduction_prev", ",", "normal", ")", "\n", "cell_Depth", "=", "Cell_Net", "(", "genotype_searched_Depth", ",", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", ",", "reduction_prev", ",", "normal", ")", "\n", "\n", "self", ".", "cells32_RGB", "+=", "[", "cell_RGB", "]", "\n", "self", ".", "cells32_Depth", "+=", "[", "cell_Depth", "]", "\n", "\n", "C_prev_prev32", ",", "C_prev32", "=", "C_prev32", ",", "cell_RGB", ".", "multiplier", "*", "C_curr32", "\n", "\n", "# head", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "1", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev8", "*", "2", "+", "C_prev16", "*", "2", "+", "C_prev32", "*", "2", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.forward": [[341, 550], ["AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem0_32_RGB", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem1_32_RGB", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.AvgpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem0_32_Depth", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem1_32_Depth", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.AvgpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem0_16_RGB", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem1_16_RGB", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.AvgpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem0_16_Depth", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem1_16_Depth", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.AvgpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem0_8_RGB", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem1_8_RGB", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.AvgpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem0_8_Depth", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.stem1_8_Depth", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.AvgpoolSpa", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.global_pooling", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.global_pooling", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.global_pooling", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.global_pooling", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.global_pooling", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.global_pooling", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.classifier", "laterals_Low.append", "laterals_Mid.append", "laterals_High.append", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.dropout", "cell", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "AutoGesture_RGBD_searched_12layers_DiffChannels.AutoGesture_RGBD_12layers.MaxpoolSpa", "torch.cat.view", "torch.cat.view", "torch.cat.view", "cell", "torch.cat.size", "torch.cat.size", "torch.cat.size", "cell", "cell", "cell", "cell"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "inputs_D", ")", ":", "\n", "\n", "## inputs 32 x 3 x 112 x 112 ##", "\n", "\n", "# 32", "\n", "        ", "s0_32_RGB", "=", "self", ".", "stem0_32_RGB", "(", "inputs", ")", "# 32*28*28", "\n", "s1_32_RGB", "=", "self", ".", "stem1_32_RGB", "(", "s0_32_RGB", ")", "# 16*28*28", "\n", "s0_32_RGB", "=", "self", ".", "AvgpoolSpa", "(", "s0_32_RGB", ")", "# 16*28*28", "\n", "\n", "s0_32_Depth", "=", "self", ".", "stem0_32_Depth", "(", "inputs_D", ")", "# 32*28*28", "\n", "s1_32_Depth", "=", "self", ".", "stem1_32_Depth", "(", "s0_32_Depth", ")", "# 16*28*28", "\n", "s0_32_Depth", "=", "self", ".", "AvgpoolSpa", "(", "s0_32_Depth", ")", "# 16*28*28", "\n", "\n", "# 16", "\n", "s0_16_RGB", "=", "self", ".", "stem0_16_RGB", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ",", ":", "]", ")", "# 16*28*28", "\n", "s1_16_RGB", "=", "self", ".", "stem1_16_RGB", "(", "s0_16_RGB", ")", "# 8*28*28", "\n", "s0_16_RGB", "=", "self", ".", "AvgpoolSpa", "(", "s0_16_RGB", ")", "# 8*28*28", "\n", "\n", "s0_16_Depth", "=", "self", ".", "stem0_16_Depth", "(", "inputs_D", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ",", ":", "]", ")", "# 16*28*28", "\n", "s1_16_Depth", "=", "self", ".", "stem1_16_Depth", "(", "s0_16_Depth", ")", "# 8*28*28", "\n", "s0_16_Depth", "=", "self", ".", "AvgpoolSpa", "(", "s0_16_Depth", ")", "# 8*28*28", "\n", "\n", "# 8", "\n", "s0_8_RGB", "=", "self", ".", "stem0_8_RGB", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "4", ",", ":", ",", ":", "]", ")", "# 8*28*28", "\n", "s1_8_RGB", "=", "self", ".", "stem1_8_RGB", "(", "s0_8_RGB", ")", "# 4*28*28", "\n", "s0_8_RGB", "=", "self", ".", "AvgpoolSpa", "(", "s0_8_RGB", ")", "# 4*28*28", "\n", "\n", "s0_8_Depth", "=", "self", ".", "stem0_8_Depth", "(", "inputs_D", "[", ":", ",", ":", ",", ":", ":", "4", ",", ":", ",", ":", "]", ")", "# 8*28*28", "\n", "s1_8_Depth", "=", "self", ".", "stem1_8_Depth", "(", "s0_8_Depth", ")", "# 4*28*28", "\n", "s0_8_Depth", "=", "self", ".", "AvgpoolSpa", "(", "s0_8_Depth", ")", "# 4*28*28", "\n", "\n", "#  (0) R16-> R8   (1) R32-> R16   (2)  R32-> R8 (s=4)", "\n", "#  (3) D16-> D8   (4) D32-> D16   (5)  D32-> D8 (s=4)", "\n", "#  (6) R8-> D8  (s=1)  (7) R16-> D8    (8) R16-> D16 (s=1)  (9)  R32-> D8 (s=4) (10)  R32-> D16  (11)  R32-> D32  (s=1)", "\n", "#  (12)D8-> R8  (s=1) (13) D16-> R8   (14) D16-> R16 (s=1) (15)  D32-> R8 (s=4)(16)  D32-> R16  (17)  D32-> R32   (s=1)", "\n", "\n", "laterals_Low", "=", "[", "]", "\n", "# for i in range(18):  # 18 connections", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells_Low_Connect", ")", ":", "\n", "# pdb.set_trace()", "\n", "            ", "if", "i", "in", "[", "1", ",", "2", ",", "9", ",", "10", ",", "11", "]", ":", "# RGB32", "\n", "                ", "lateral1", "=", "cell", "(", "s1_32_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "0", ",", "7", ",", "8", "]", ":", "# RGB16", "\n", "                ", "lateral1", "=", "cell", "(", "s1_16_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "6", "]", ":", "# RGB8", "\n", "                ", "lateral1", "=", "cell", "(", "s1_8_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "4", ",", "5", ",", "15", ",", "16", ",", "17", "]", ":", "# Depth32", "\n", "                ", "lateral1", "=", "cell", "(", "s1_32_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "3", ",", "13", ",", "14", "]", ":", "# Depth16", "\n", "                ", "lateral1", "=", "cell", "(", "s1_16_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "12", "]", ":", "# Depth8", "\n", "                ", "lateral1", "=", "cell", "(", "s1_8_Depth", ")", "\n", "\n", "", "laterals_Low", ".", "append", "(", "lateral1", ")", "\n", "\n", "", "s1_32_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_Low", "[", "17", "]", ",", "s1_32_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_Low", "[", "1", "]", ",", "laterals_Low", "[", "14", "]", ",", "laterals_Low", "[", "16", "]", ",", "s1_16_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_RGB", "=", "torch", ".", "cat", "(", "\n", "[", "laterals_Low", "[", "0", "]", ",", "laterals_Low", "[", "2", "]", ",", "laterals_Low", "[", "12", "]", ",", "laterals_Low", "[", "13", "]", ",", "laterals_Low", "[", "15", "]", ",", "s1_8_RGB", "]", ",", "dim", "=", "1", ")", "\n", "\n", "s1_32_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_Low", "[", "11", "]", ",", "s1_32_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_Low", "[", "4", "]", ",", "laterals_Low", "[", "8", "]", ",", "laterals_Low", "[", "10", "]", ",", "s1_16_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_Depth", "=", "torch", ".", "cat", "(", "\n", "[", "laterals_Low", "[", "3", "]", ",", "laterals_Low", "[", "5", "]", ",", "laterals_Low", "[", "6", "]", ",", "laterals_Low", "[", "7", "]", ",", "laterals_Low", "[", "9", "]", ",", "s1_8_Depth", "]", ",", "dim", "=", "1", ")", "\n", "\n", "# 8 layers", "\n", "for", "ii", "in", "range", "(", "0", ",", "4", ")", ":", "\n", "            ", "s0_32_RGB", ",", "s1_32_RGB", "=", "s1_32_RGB", ",", "self", ".", "cells32_RGB", "[", "ii", "]", "(", "s0_32_RGB", ",", "s1_32_RGB", ")", "\n", "s0_32_Depth", ",", "s1_32_Depth", "=", "s1_32_Depth", ",", "self", ".", "cells32_Depth", "[", "ii", "]", "(", "s0_32_Depth", ",", "s1_32_Depth", ")", "\n", "\n", "s0_16_RGB", ",", "s1_16_RGB", "=", "s1_16_RGB", ",", "self", ".", "cells16_RGB", "[", "ii", "]", "(", "s0_16_RGB", ",", "s1_16_RGB", ")", "\n", "s0_16_Depth", ",", "s1_16_Depth", "=", "s1_16_Depth", ",", "self", ".", "cells16_Depth", "[", "ii", "]", "(", "s0_16_Depth", ",", "s1_16_Depth", ")", "\n", "\n", "s0_8_RGB", ",", "s1_8_RGB", "=", "s1_8_RGB", ",", "self", ".", "cells8_RGB", "[", "ii", "]", "(", "s0_8_RGB", ",", "s1_8_RGB", ")", "\n", "s0_8_Depth", ",", "s1_8_Depth", "=", "s1_8_Depth", ",", "self", ".", "cells8_Depth", "[", "ii", "]", "(", "s0_8_Depth", ",", "s1_8_Depth", ")", "\n", "\n", "if", "ii", "==", "3", ":", "\n", "                ", "x_visual28", "=", "s1_16_RGB", "\n", "\n", "s1_32_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_32_RGB", ")", "\n", "s1_32_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_32_Depth", ")", "\n", "s1_16_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_16_RGB", ")", "\n", "s1_16_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_16_Depth", ")", "\n", "s1_8_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_8_RGB", ")", "\n", "s1_8_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_8_Depth", ")", "\n", "\n", "", "", "laterals_Mid", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "18", ")", ":", "# 18 connections", "\n", "\n", "            ", "if", "i", "in", "[", "1", ",", "2", ",", "9", ",", "10", ",", "11", "]", ":", "# RGB32", "\n", "                ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_32_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "0", ",", "7", ",", "8", "]", ":", "# RGB16", "\n", "                ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_16_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "6", "]", ":", "# RGB8", "\n", "                ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_8_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "4", ",", "5", ",", "15", ",", "16", ",", "17", "]", ":", "# Depth32", "\n", "                ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_32_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "3", ",", "13", ",", "14", "]", ":", "# Depth16", "\n", "                ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_16_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "12", "]", ":", "# Depth8", "\n", "                ", "lateral1", "=", "self", ".", "cells_Mid_Connect", "[", "i", "]", "(", "s1_8_Depth", ")", "\n", "\n", "", "laterals_Mid", ".", "append", "(", "lateral1", ")", "\n", "\n", "", "s1_32_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_Mid", "[", "17", "]", ",", "s1_32_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_Mid", "[", "1", "]", ",", "laterals_Mid", "[", "14", "]", ",", "laterals_Mid", "[", "16", "]", ",", "s1_16_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_RGB", "=", "torch", ".", "cat", "(", "\n", "[", "laterals_Mid", "[", "0", "]", ",", "laterals_Mid", "[", "2", "]", ",", "laterals_Mid", "[", "12", "]", ",", "laterals_Mid", "[", "13", "]", ",", "laterals_Mid", "[", "15", "]", ",", "s1_8_RGB", "]", ",", "dim", "=", "1", ")", "\n", "\n", "s1_32_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_Mid", "[", "11", "]", ",", "s1_32_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_Mid", "[", "4", "]", ",", "laterals_Mid", "[", "8", "]", ",", "laterals_Mid", "[", "10", "]", ",", "s1_16_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_Depth", "=", "torch", ".", "cat", "(", "\n", "[", "laterals_Mid", "[", "3", "]", ",", "laterals_Mid", "[", "5", "]", ",", "laterals_Mid", "[", "6", "]", ",", "laterals_Mid", "[", "7", "]", ",", "laterals_Mid", "[", "9", "]", ",", "s1_8_Depth", "]", ",", "dim", "=", "1", ")", "\n", "\n", "# --------------------------------------------------------------------------------", "\n", "\n", "for", "ii", "in", "range", "(", "4", ",", "9", ")", ":", "\n", "            ", "s0_32_RGB", ",", "s1_32_RGB", "=", "s1_32_RGB", ",", "self", ".", "cells32_RGB", "[", "ii", "]", "(", "s0_32_RGB", ",", "s1_32_RGB", ")", "\n", "s0_32_Depth", ",", "s1_32_Depth", "=", "s1_32_Depth", ",", "self", ".", "cells32_Depth", "[", "ii", "]", "(", "s0_32_Depth", ",", "s1_32_Depth", ")", "\n", "\n", "s0_16_RGB", ",", "s1_16_RGB", "=", "s1_16_RGB", ",", "self", ".", "cells16_RGB", "[", "ii", "]", "(", "s0_16_RGB", ",", "s1_16_RGB", ")", "\n", "s0_16_Depth", ",", "s1_16_Depth", "=", "s1_16_Depth", ",", "self", ".", "cells16_Depth", "[", "ii", "]", "(", "s0_16_Depth", ",", "s1_16_Depth", ")", "\n", "\n", "s0_8_RGB", ",", "s1_8_RGB", "=", "s1_8_RGB", ",", "self", ".", "cells8_RGB", "[", "ii", "]", "(", "s0_8_RGB", ",", "s1_8_RGB", ")", "\n", "s0_8_Depth", ",", "s1_8_Depth", "=", "s1_8_Depth", ",", "self", ".", "cells8_Depth", "[", "ii", "]", "(", "s0_8_Depth", ",", "s1_8_Depth", ")", "\n", "\n", "if", "ii", "==", "8", ":", "\n", "                ", "x_visual14", "=", "s1_16_RGB", "\n", "\n", "s1_32_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_32_RGB", ")", "\n", "s1_32_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_32_Depth", ")", "\n", "s1_16_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_16_RGB", ")", "\n", "s1_16_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_16_Depth", ")", "\n", "s1_8_RGB", "=", "self", ".", "MaxpoolSpa", "(", "s1_8_RGB", ")", "\n", "s1_8_Depth", "=", "self", ".", "MaxpoolSpa", "(", "s1_8_Depth", ")", "\n", "\n", "", "", "laterals_High", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "18", ")", ":", "# 18 connections", "\n", "\n", "            ", "if", "i", "in", "[", "1", ",", "2", ",", "9", ",", "10", ",", "11", "]", ":", "# RGB32", "\n", "                ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_32_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "0", ",", "7", ",", "8", "]", ":", "# RGB16", "\n", "                ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_16_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "6", "]", ":", "# RGB8", "\n", "                ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_8_RGB", ")", "\n", "\n", "", "elif", "i", "in", "[", "4", ",", "5", ",", "15", ",", "16", ",", "17", "]", ":", "# Depth32", "\n", "                ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_32_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "3", ",", "13", ",", "14", "]", ":", "# Depth16", "\n", "                ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_16_Depth", ")", "\n", "\n", "", "elif", "i", "in", "[", "12", "]", ":", "# Depth8", "\n", "                ", "lateral1", "=", "self", ".", "cells_High_Connect", "[", "i", "]", "(", "s1_8_Depth", ")", "\n", "\n", "", "laterals_High", ".", "append", "(", "lateral1", ")", "\n", "\n", "", "s1_32_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_High", "[", "17", "]", ",", "s1_32_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_RGB", "=", "torch", ".", "cat", "(", "[", "laterals_High", "[", "1", "]", ",", "laterals_High", "[", "14", "]", ",", "laterals_High", "[", "16", "]", ",", "s1_16_RGB", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_RGB", "=", "torch", ".", "cat", "(", "\n", "[", "laterals_High", "[", "0", "]", ",", "laterals_High", "[", "2", "]", ",", "laterals_High", "[", "12", "]", ",", "laterals_High", "[", "13", "]", ",", "laterals_High", "[", "15", "]", ",", "s1_8_RGB", "]", ",", "\n", "dim", "=", "1", ")", "\n", "\n", "s1_32_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_High", "[", "11", "]", ",", "s1_32_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_16_Depth", "=", "torch", ".", "cat", "(", "[", "laterals_High", "[", "4", "]", ",", "laterals_High", "[", "8", "]", ",", "laterals_High", "[", "10", "]", ",", "s1_16_Depth", "]", ",", "dim", "=", "1", ")", "\n", "s1_8_Depth", "=", "torch", ".", "cat", "(", "\n", "[", "laterals_High", "[", "3", "]", ",", "laterals_High", "[", "5", "]", ",", "laterals_High", "[", "6", "]", ",", "laterals_High", "[", "7", "]", ",", "laterals_High", "[", "9", "]", ",", "s1_8_Depth", "]", ",", "\n", "dim", "=", "1", ")", "\n", "\n", "# --------------------------------------------------------------------------------", "\n", "\n", "for", "ii", "in", "range", "(", "9", ",", "12", ")", ":", "\n", "            ", "s0_32_RGB", ",", "s1_32_RGB", "=", "s1_32_RGB", ",", "self", ".", "cells32_RGB", "[", "ii", "]", "(", "s0_32_RGB", ",", "s1_32_RGB", ")", "\n", "s0_32_Depth", ",", "s1_32_Depth", "=", "s1_32_Depth", ",", "self", ".", "cells32_Depth", "[", "ii", "]", "(", "s0_32_Depth", ",", "s1_32_Depth", ")", "\n", "\n", "s0_16_RGB", ",", "s1_16_RGB", "=", "s1_16_RGB", ",", "self", ".", "cells16_RGB", "[", "ii", "]", "(", "s0_16_RGB", ",", "s1_16_RGB", ")", "\n", "s0_16_Depth", ",", "s1_16_Depth", "=", "s1_16_Depth", ",", "self", ".", "cells16_Depth", "[", "ii", "]", "(", "s0_16_Depth", ",", "s1_16_Depth", ")", "\n", "\n", "s0_8_RGB", ",", "s1_8_RGB", "=", "s1_8_RGB", ",", "self", ".", "cells8_RGB", "[", "ii", "]", "(", "s0_8_RGB", ",", "s1_8_RGB", ")", "\n", "s0_8_Depth", ",", "s1_8_Depth", "=", "s1_8_Depth", ",", "self", ".", "cells8_Depth", "[", "ii", "]", "(", "s0_8_Depth", ",", "s1_8_Depth", ")", "\n", "\n", "# --------------------------------------------------------------------------------", "\n", "\n", "", "out_32_RGB", "=", "self", ".", "global_pooling", "(", "s1_32_RGB", ")", "# C*8*4*=8*8*4=256", "\n", "out_16_RGB", "=", "self", ".", "global_pooling", "(", "s1_16_RGB", ")", "#", "\n", "out_8_RGB", "=", "self", ".", "global_pooling", "(", "s1_8_RGB", ")", "#", "\n", "\n", "out_32_Depth", "=", "self", ".", "global_pooling", "(", "s1_32_Depth", ")", "# C*8*4*=8*8*4=256", "\n", "out_16_Depth", "=", "self", ".", "global_pooling", "(", "s1_16_Depth", ")", "#", "\n", "out_8_Depth", "=", "self", ".", "global_pooling", "(", "s1_8_Depth", ")", "#", "\n", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out_32_RGB", ",", "out_16_RGB", ",", "out_8_RGB", ",", "out_32_Depth", ",", "out_16_Depth", ",", "out_8_Depth", "]", ",", "dim", "=", "1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "self", ".", "dropout", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ")", "# dropout=0.5", "\n", "# logits = self.classifier(out.view(out.size(0),-1))", "\n", "\n", "# return logits, x_visual28, x_visual14", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_searched.Cell.__init__": [[12, 36], ["torch.Module.__init__", "VaniConv3d", "AutoGesture_searched.Cell._compile", "VaniConv3d", "VaniConv3d", "zip", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.Cell._compile"], ["  ", "def", "__init__", "(", "self", ",", "genotype", ",", "C_prev_prev", ",", "C_prev", ",", "C", ",", "reduction_prev", ",", "normal", ")", ":", "\n", "    ", "super", "(", "Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# stride = [1,2,2]", "\n", "if", "reduction_prev", ":", "\n", "      ", "self", ".", "preprocess0", "=", "VaniConv3d", "(", "C_prev_prev", ",", "C", ",", "1", ",", "[", "1", ",", "2", ",", "2", "]", ",", "0", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "preprocess0", "=", "VaniConv3d", "(", "C_prev_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "", "self", ".", "preprocess1", "=", "VaniConv3d", "(", "C_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "\n", "# branch 8 frame", "\n", "if", "normal", "==", "1", ":", "\n", "        ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal8", ")", "\n", "concat", "=", "genotype", ".", "normal_concat8", "\n", "# branch 16 frame", "\n", "", "if", "normal", "==", "2", ":", "\n", "        ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal16", ")", "\n", "concat", "=", "genotype", ".", "normal_concat16", "\n", "# branch 32 frame", "\n", "", "if", "normal", "==", "3", ":", "\n", "        ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal32", ")", "\n", "concat", "=", "genotype", ".", "normal_concat32", "\n", "\n", "", "self", ".", "_compile", "(", "C", ",", "op_names", ",", "indices", ",", "concat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_searched.Cell._compile": [[37, 49], ["len", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "zip", "len", "len", "len"], "methods", ["None"], ["", "def", "_compile", "(", "self", ",", "C", ",", "op_names", ",", "indices", ",", "concat", ")", ":", "\n", "    ", "assert", "len", "(", "op_names", ")", "==", "len", "(", "indices", ")", "\n", "self", ".", "_steps", "=", "len", "(", "op_names", ")", "//", "2", "\n", "self", ".", "_concat", "=", "concat", "\n", "self", ".", "multiplier", "=", "len", "(", "concat", ")", "\n", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "name", ",", "index", "in", "zip", "(", "op_names", ",", "indices", ")", ":", "\n", "      ", "stride", "=", "1", "\n", "op", "=", "OPS", "[", "name", "]", "(", "C", ",", "stride", ",", "True", ")", "\n", "self", ".", "_ops", "+=", "[", "op", "]", "\n", "", "self", ".", "_indices", "=", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_searched.Cell.forward": [[50, 67], ["AutoGesture_searched.Cell.preprocess0", "AutoGesture_searched.Cell.preprocess1", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "op1", "op2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "s0", ",", "s1", ")", ":", "\n", "    ", "s0", "=", "self", ".", "preprocess0", "(", "s0", ")", "\n", "s1", "=", "self", ".", "preprocess1", "(", "s1", ")", "\n", "\n", "#pdb.set_trace()", "\n", "\n", "states", "=", "[", "s0", ",", "s1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "      ", "h1", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "]", "]", "\n", "h2", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "+", "1", "]", "]", "\n", "op1", "=", "self", ".", "_ops", "[", "2", "*", "i", "]", "\n", "op2", "=", "self", ".", "_ops", "[", "2", "*", "i", "+", "1", "]", "\n", "h1", "=", "op1", "(", "h1", ")", "\n", "h2", "=", "op2", "(", "h2", ")", "\n", "s", "=", "h1", "+", "h2", "\n", "states", "+=", "[", "s", "]", "\n", "", "return", "torch", ".", "cat", "(", "[", "states", "[", "i", "]", "for", "i", "in", "self", ".", "_concat", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_searched.AutoGesture.__init__": [[75, 244], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "AutoGesture_searched.Cell", "AutoGesture_searched.Cell", "AutoGesture_searched.Cell"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C8", ",", "C16", ",", "C32", ",", "num_classes", ",", "layers", ",", "genotype", ")", ":", "\n", "    ", "super", "(", "AutoGesture", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_C8", "=", "C8", "# 48", "\n", "self", ".", "_C16", "=", "C16", "# 32", "\n", "self", ".", "_C32", "=", "C32", "# 16", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_layers", "=", "layers", "\n", "\n", "\n", "self", ".", "MaxpoolSpa", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", "\n", "self", ".", "AvgpoolSpa", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "\n", "# lateral 16", "\n", "self", ".", "lateral16_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "2", ",", "C16", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral16_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "2", "*", "4", ",", "C16", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral16_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "4", "*", "4", ",", "C16", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "4", ")", "\n", ")", "\n", "\n", "# lateral 32", "\n", "self", ".", "lateral32_16_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_16_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", "*", "4", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_16_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "4", "*", "4", ",", "C32", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "4", ")", "\n", ")", "\n", "self", ".", "lateral32_8_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_8_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", "*", "4", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_8_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "4", "*", "4", ",", "C32", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "4", ")", "\n", ")", "\n", "\n", "\n", "\n", "\n", "# 8 frames", "\n", "self", ".", "stem0_8", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_8", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C8", ",", "2", "*", "C8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "\n", "# 16 frames", "\n", "self", ".", "stem0_16", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_16", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C16", ",", "2", "*", "C16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "# 32 frames", "\n", "self", ".", "stem0_32", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_32", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C32", ",", "2", "*", "C32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "\n", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", "=", "C8", ",", "(", "2", "*", "C8", "+", "2", "*", "C16", "+", "2", "*", "C32", ")", ",", "2", "*", "C8", "\n", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", "=", "C16", ",", "(", "2", "*", "C16", "+", "2", "*", "C32", ")", ",", "2", "*", "C16", "\n", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", "=", "C32", ",", "2", "*", "C32", ",", "2", "*", "C32", "\n", "\n", "\n", "# 8 ", "\n", "self", ".", "cells8", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "1", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "3", ",", "6", "]", ":", "\n", "        ", "C_curr8", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "3", ":", "\n", "            ", "C_prev8", "=", "2", "*", "C8", "*", "4", "+", "2", "*", "C16", "+", "2", "*", "C32", "\n", "\n", "", "if", "i", "==", "6", ":", "\n", "            ", "C_prev8", "=", "4", "*", "C8", "*", "4", "+", "4", "*", "C16", "+", "4", "*", "C32", "\n", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells8", "+=", "[", "cell", "]", "\n", "C_prev_prev8", ",", "C_prev8", "=", "C_prev8", ",", "cell", ".", "multiplier", "*", "C_curr8", "\n", "\n", "\n", "# 16 ", "\n", "", "self", ".", "cells16", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "2", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "3", ",", "6", "]", ":", "\n", "        ", "C_curr16", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "3", ":", "\n", "            ", "C_prev16", "=", "2", "*", "C16", "*", "4", "+", "2", "*", "C32", "\n", "\n", "", "if", "i", "==", "6", ":", "\n", "            ", "C_prev16", "=", "4", "*", "C16", "*", "4", "+", "4", "*", "C32", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells16", "+=", "[", "cell", "]", "\n", "C_prev_prev16", ",", "C_prev16", "=", "C_prev16", ",", "cell", ".", "multiplier", "*", "C_curr16", "\n", "\n", "# 32  ", "\n", "", "self", ".", "cells32", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "3", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "3", ",", "6", "]", ":", "\n", "        ", "C_curr32", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells32", "+=", "[", "cell", "]", "\n", "C_prev_prev32", ",", "C_prev32", "=", "C_prev32", ",", "cell", ".", "multiplier", "*", "C_curr32", "\n", "\n", "\n", "# head", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "1", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev8", "+", "C_prev16", "+", "C_prev32", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_searched.AutoGesture.forward": [[246, 339], ["AutoGesture_searched.AutoGesture.stem0_32", "AutoGesture_searched.AutoGesture.stem1_32", "AutoGesture_searched.AutoGesture.AvgpoolSpa", "AutoGesture_searched.AutoGesture.lateral32_16_1", "AutoGesture_searched.AutoGesture.lateral32_8_1", "AutoGesture_searched.AutoGesture.stem0_16", "AutoGesture_searched.AutoGesture.stem1_16", "AutoGesture_searched.AutoGesture.AvgpoolSpa", "AutoGesture_searched.AutoGesture.lateral16_1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture.stem0_8", "AutoGesture_searched.AutoGesture.stem1_8", "AutoGesture_searched.AutoGesture.AvgpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "enumerate", "enumerate", "enumerate", "AutoGesture_searched.AutoGesture.global_pooling", "AutoGesture_searched.AutoGesture.global_pooling", "AutoGesture_searched.AutoGesture.global_pooling", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture.classifier", "AutoGesture_searched.AutoGesture.dropout", "cell", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "AutoGesture_searched.AutoGesture.lateral32_16_2", "AutoGesture_searched.AutoGesture.lateral32_8_2", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "AutoGesture_searched.AutoGesture.lateral32_16_3", "AutoGesture_searched.AutoGesture.lateral32_8_3", "cell", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "AutoGesture_searched.AutoGesture.lateral16_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "AutoGesture_searched.AutoGesture.lateral16_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cell", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "\n", "## inputs 32 x 3 x 112 x 112 ##", "\n", "\n", "# 32", "\n", "    ", "s0_32", "=", "self", ".", "stem0_32", "(", "inputs", ")", "# 32*28*28 ", "\n", "s1_32", "=", "self", ".", "stem1_32", "(", "s0_32", ")", "# 16*28*28  ", "\n", "s0_32", "=", "self", ".", "AvgpoolSpa", "(", "s0_32", ")", "# 16*28*28 ", "\n", "s1_32_lateral_16_1", "=", "self", ".", "lateral32_16_1", "(", "s1_32", ")", "\n", "s1_32_lateral_8_1", "=", "self", ".", "lateral32_8_1", "(", "s1_32", ")", "\n", "\n", "\n", "# 16", "\n", "s0_16", "=", "self", ".", "stem0_16", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ",", ":", "]", ")", "# 16*28*28 ", "\n", "s1_16", "=", "self", ".", "stem1_16", "(", "s0_16", ")", "# 8*28*28  ", "\n", "s0_16", "=", "self", ".", "AvgpoolSpa", "(", "s0_16", ")", "# 8*28*28 ", "\n", "s1_16_lateral1", "=", "self", ".", "lateral16_1", "(", "s1_16", ")", "\n", "\n", "\n", "s1_16", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_16_1", ",", "s1_16", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "# 8 ", "\n", "s0_8", "=", "self", ".", "stem0_8", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "4", ",", ":", ",", ":", "]", ")", "# 8*28*28 ", "\n", "s1_8", "=", "self", ".", "stem1_8", "(", "s0_8", ")", "# 4*28*28  ", "\n", "s0_8", "=", "self", ".", "AvgpoolSpa", "(", "s0_8", ")", "# 4*28*28 ", "\n", "\n", "s1_8", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_8_1", ",", "s1_16_lateral1", ",", "s1_8", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "# 32", "\n", "for", "ii", ",", "cell", "in", "enumerate", "(", "self", ".", "cells32", ")", ":", "\n", "\n", "      ", "s0_32", ",", "s1_32", "=", "s1_32", ",", "cell", "(", "s0_32", ",", "s1_32", ")", "\n", "\n", "if", "ii", "==", "2", ":", "\n", "        ", "s1_32", "=", "self", ".", "MaxpoolSpa", "(", "s1_32", ")", "\n", "s1_32_lateral_16_2", "=", "self", ".", "lateral32_16_2", "(", "s1_32", ")", "\n", "s1_32_lateral_8_2", "=", "self", ".", "lateral32_8_2", "(", "s1_32", ")", "\n", "\n", "", "if", "ii", "==", "5", ":", "\n", "        ", "s1_32", "=", "self", ".", "MaxpoolSpa", "(", "s1_32", ")", "\n", "s1_32_lateral_16_3", "=", "self", ".", "lateral32_16_3", "(", "s1_32", ")", "\n", "s1_32_lateral_8_3", "=", "self", ".", "lateral32_8_3", "(", "s1_32", ")", "\n", "\n", "\n", "\n", "# 16", "\n", "", "", "for", "ii", ",", "cell", "in", "enumerate", "(", "self", ".", "cells16", ")", ":", "\n", "\n", "      ", "s0_16", ",", "s1_16", "=", "s1_16", ",", "cell", "(", "s0_16", ",", "s1_16", ")", "\n", "\n", "if", "ii", "==", "2", ":", "\n", "        ", "branch16_Feature28", "=", "s1_16", "# [64, 8, 28, 28]", "\n", "s1_16", "=", "self", ".", "MaxpoolSpa", "(", "s1_16", ")", "\n", "s1_16_lateral2", "=", "self", ".", "lateral16_2", "(", "s1_16", ")", "\n", "s1_16", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_16_2", ",", "s1_16", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "ii", "==", "5", ":", "\n", "        ", "branch16_Feature14", "=", "s1_16", "# [128, 8, 14, 14]", "\n", "s1_16", "=", "self", ".", "MaxpoolSpa", "(", "s1_16", ")", "\n", "s1_16_lateral3", "=", "self", ".", "lateral16_3", "(", "s1_16", ")", "\n", "s1_16", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_16_3", ",", "s1_16", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "ii", "==", "7", ":", "\n", "        ", "branch16_Feature7", "=", "s1_16", "# [128, 8, 7, 7]", "\n", "\n", "\n", "\n", "# 8  ", "\n", "", "", "for", "ii", ",", "cell", "in", "enumerate", "(", "self", ".", "cells8", ")", ":", "\n", "\n", "      ", "s0_8", ",", "s1_8", "=", "s1_8", ",", "cell", "(", "s0_8", ",", "s1_8", ")", "\n", "\n", "if", "ii", "==", "2", ":", "\n", "        ", "s1_8", "=", "self", ".", "MaxpoolSpa", "(", "s1_8", ")", "\n", "s1_8", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_8_2", ",", "s1_16_lateral2", ",", "s1_8", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "ii", "==", "5", ":", "\n", "        ", "s1_8", "=", "self", ".", "MaxpoolSpa", "(", "s1_8", ")", "\n", "s1_8", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_8_3", ",", "s1_16_lateral3", ",", "s1_8", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "\n", "", "", "out_32", "=", "self", ".", "global_pooling", "(", "s1_32", ")", "# C32*8*4*=8*8*4=512       ", "\n", "out_16", "=", "self", ".", "global_pooling", "(", "s1_16", ")", "# C16*8*4*=16*8*4=1024 ", "\n", "out_8", "=", "self", ".", "global_pooling", "(", "s1_8", ")", "# C8*8*4=24*8*4=1592", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out_32", ",", "out_16", ",", "out_8", "]", ",", "dim", "=", "1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "self", ".", "dropout", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ")", "# dropout=0.5", "\n", "#logits = self.classifier(out.view(out.size(0),-1))", "\n", "\n", "#return logits, branch16_Feature28, branch16_Feature14, branch16_Feature7", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_searched.AutoGesture_12layers.__init__": [[350, 519], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "AutoGesture_searched.Cell", "AutoGesture_searched.Cell", "AutoGesture_searched.Cell"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C8", ",", "C16", ",", "C32", ",", "num_classes", ",", "layers", ",", "genotype", ")", ":", "\n", "    ", "super", "(", "AutoGesture_12layers", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_C8", "=", "C8", "# 48", "\n", "self", ".", "_C16", "=", "C16", "# 32", "\n", "self", ".", "_C32", "=", "C32", "# 16", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_layers", "=", "layers", "\n", "\n", "\n", "self", ".", "MaxpoolSpa", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", "\n", "self", ".", "AvgpoolSpa", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "\n", "# lateral 16", "\n", "self", ".", "lateral16_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "2", ",", "C16", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral16_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "2", "*", "4", ",", "C16", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral16_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "4", "*", "4", ",", "C16", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "4", ")", "\n", ")", "\n", "\n", "# lateral 32", "\n", "self", ".", "lateral32_16_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_16_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", "*", "4", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_16_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "4", "*", "4", ",", "C32", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "4", ")", "\n", ")", "\n", "self", ".", "lateral32_8_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_8_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", "*", "4", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_8_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "4", "*", "4", ",", "C32", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "4", ")", "\n", ")", "\n", "\n", "\n", "\n", "\n", "# 8 frames", "\n", "self", ".", "stem0_8", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_8", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C8", ",", "2", "*", "C8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "\n", "# 16 frames", "\n", "self", ".", "stem0_16", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_16", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C16", ",", "2", "*", "C16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "# 32 frames", "\n", "self", ".", "stem0_32", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_32", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C32", ",", "2", "*", "C32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "\n", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", "=", "C8", ",", "(", "2", "*", "C8", "+", "2", "*", "C16", "+", "2", "*", "C32", ")", ",", "2", "*", "C8", "\n", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", "=", "C16", ",", "(", "2", "*", "C16", "+", "2", "*", "C32", ")", ",", "2", "*", "C16", "\n", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", "=", "C32", ",", "2", "*", "C32", ",", "2", "*", "C32", "\n", "\n", "\n", "# 8 ", "\n", "self", ".", "cells8", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "1", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "        ", "C_curr8", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "4", ":", "\n", "            ", "C_prev8", "=", "2", "*", "C8", "*", "4", "+", "2", "*", "C16", "+", "2", "*", "C32", "\n", "\n", "", "if", "i", "==", "9", ":", "\n", "            ", "C_prev8", "=", "4", "*", "C8", "*", "4", "+", "4", "*", "C16", "+", "4", "*", "C32", "\n", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells8", "+=", "[", "cell", "]", "\n", "C_prev_prev8", ",", "C_prev8", "=", "C_prev8", ",", "cell", ".", "multiplier", "*", "C_curr8", "\n", "\n", "\n", "# 16 ", "\n", "", "self", ".", "cells16", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "2", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "        ", "C_curr16", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "4", ":", "\n", "            ", "C_prev16", "=", "2", "*", "C16", "*", "4", "+", "2", "*", "C32", "\n", "\n", "", "if", "i", "==", "9", ":", "\n", "            ", "C_prev16", "=", "4", "*", "C16", "*", "4", "+", "4", "*", "C32", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells16", "+=", "[", "cell", "]", "\n", "C_prev_prev16", ",", "C_prev16", "=", "C_prev16", ",", "cell", ".", "multiplier", "*", "C_curr16", "\n", "\n", "# 32  ", "\n", "", "self", ".", "cells32", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "3", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "        ", "C_curr32", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells32", "+=", "[", "cell", "]", "\n", "C_prev_prev32", ",", "C_prev32", "=", "C_prev32", ",", "cell", ".", "multiplier", "*", "C_curr32", "\n", "\n", "\n", "# head", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "1", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev8", "+", "C_prev16", "+", "C_prev32", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.models.AutoGesture_searched.AutoGesture_12layers.forward": [[521, 614], ["AutoGesture_searched.AutoGesture_12layers.stem0_32", "AutoGesture_searched.AutoGesture_12layers.stem1_32", "AutoGesture_searched.AutoGesture_12layers.AvgpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral32_16_1", "AutoGesture_searched.AutoGesture_12layers.lateral32_8_1", "AutoGesture_searched.AutoGesture_12layers.stem0_16", "AutoGesture_searched.AutoGesture_12layers.stem1_16", "AutoGesture_searched.AutoGesture_12layers.AvgpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral16_1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture_12layers.stem0_8", "AutoGesture_searched.AutoGesture_12layers.stem1_8", "AutoGesture_searched.AutoGesture_12layers.AvgpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "enumerate", "enumerate", "enumerate", "AutoGesture_searched.AutoGesture_12layers.global_pooling", "AutoGesture_searched.AutoGesture_12layers.global_pooling", "AutoGesture_searched.AutoGesture_12layers.global_pooling", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture_12layers.classifier", "AutoGesture_searched.AutoGesture_12layers.dropout", "cell", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral32_16_2", "AutoGesture_searched.AutoGesture_12layers.lateral32_8_2", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral32_16_3", "AutoGesture_searched.AutoGesture_12layers.lateral32_8_3", "cell", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral16_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral16_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cell", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "\n", "## inputs 32 x 3 x 112 x 112 ##", "\n", "\n", "# 32", "\n", "    ", "s0_32", "=", "self", ".", "stem0_32", "(", "inputs", ")", "# 32*28*28 ", "\n", "s1_32", "=", "self", ".", "stem1_32", "(", "s0_32", ")", "# 16*28*28  ", "\n", "s0_32", "=", "self", ".", "AvgpoolSpa", "(", "s0_32", ")", "# 16*28*28 ", "\n", "s1_32_lateral_16_1", "=", "self", ".", "lateral32_16_1", "(", "s1_32", ")", "\n", "s1_32_lateral_8_1", "=", "self", ".", "lateral32_8_1", "(", "s1_32", ")", "\n", "\n", "\n", "# 16", "\n", "s0_16", "=", "self", ".", "stem0_16", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ",", ":", "]", ")", "# 16*28*28 ", "\n", "s1_16", "=", "self", ".", "stem1_16", "(", "s0_16", ")", "# 8*28*28  ", "\n", "s0_16", "=", "self", ".", "AvgpoolSpa", "(", "s0_16", ")", "# 8*28*28 ", "\n", "s1_16_lateral1", "=", "self", ".", "lateral16_1", "(", "s1_16", ")", "\n", "\n", "\n", "s1_16", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_16_1", ",", "s1_16", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "# 8 ", "\n", "s0_8", "=", "self", ".", "stem0_8", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "4", ",", ":", ",", ":", "]", ")", "# 8*28*28 ", "\n", "s1_8", "=", "self", ".", "stem1_8", "(", "s0_8", ")", "# 4*28*28  ", "\n", "s0_8", "=", "self", ".", "AvgpoolSpa", "(", "s0_8", ")", "# 4*28*28 ", "\n", "\n", "s1_8", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_8_1", ",", "s1_16_lateral1", ",", "s1_8", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "# 32", "\n", "for", "ii", ",", "cell", "in", "enumerate", "(", "self", ".", "cells32", ")", ":", "\n", "\n", "      ", "s0_32", ",", "s1_32", "=", "s1_32", ",", "cell", "(", "s0_32", ",", "s1_32", ")", "\n", "\n", "if", "ii", "==", "3", ":", "\n", "        ", "s1_32", "=", "self", ".", "MaxpoolSpa", "(", "s1_32", ")", "\n", "s1_32_lateral_16_2", "=", "self", ".", "lateral32_16_2", "(", "s1_32", ")", "\n", "s1_32_lateral_8_2", "=", "self", ".", "lateral32_8_2", "(", "s1_32", ")", "\n", "\n", "", "if", "ii", "==", "8", ":", "\n", "        ", "s1_32", "=", "self", ".", "MaxpoolSpa", "(", "s1_32", ")", "\n", "s1_32_lateral_16_3", "=", "self", ".", "lateral32_16_3", "(", "s1_32", ")", "\n", "s1_32_lateral_8_3", "=", "self", ".", "lateral32_8_3", "(", "s1_32", ")", "\n", "\n", "\n", "\n", "# 16", "\n", "", "", "for", "ii", ",", "cell", "in", "enumerate", "(", "self", ".", "cells16", ")", ":", "\n", "\n", "      ", "s0_16", ",", "s1_16", "=", "s1_16", ",", "cell", "(", "s0_16", ",", "s1_16", ")", "\n", "\n", "if", "ii", "==", "3", ":", "\n", "        ", "branch16_Feature28", "=", "s1_16", "# [64, 8, 28, 28]", "\n", "s1_16", "=", "self", ".", "MaxpoolSpa", "(", "s1_16", ")", "\n", "s1_16_lateral2", "=", "self", ".", "lateral16_2", "(", "s1_16", ")", "\n", "s1_16", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_16_2", ",", "s1_16", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "ii", "==", "8", ":", "\n", "        ", "branch16_Feature14", "=", "s1_16", "# [128, 8, 14, 14]", "\n", "s1_16", "=", "self", ".", "MaxpoolSpa", "(", "s1_16", ")", "\n", "s1_16_lateral3", "=", "self", ".", "lateral16_3", "(", "s1_16", ")", "\n", "s1_16", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_16_3", ",", "s1_16", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "ii", "==", "11", ":", "\n", "        ", "branch16_Feature7", "=", "s1_16", "# [128, 8, 7, 7]", "\n", "\n", "\n", "\n", "# 8  ", "\n", "", "", "for", "ii", ",", "cell", "in", "enumerate", "(", "self", ".", "cells8", ")", ":", "\n", "\n", "      ", "s0_8", ",", "s1_8", "=", "s1_8", ",", "cell", "(", "s0_8", ",", "s1_8", ")", "\n", "\n", "if", "ii", "==", "3", ":", "\n", "        ", "s1_8", "=", "self", ".", "MaxpoolSpa", "(", "s1_8", ")", "\n", "s1_8", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_8_2", ",", "s1_16_lateral2", ",", "s1_8", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "ii", "==", "8", ":", "\n", "        ", "s1_8", "=", "self", ".", "MaxpoolSpa", "(", "s1_8", ")", "\n", "s1_8", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_8_3", ",", "s1_16_lateral3", ",", "s1_8", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "\n", "", "", "out_32", "=", "self", ".", "global_pooling", "(", "s1_32", ")", "# C32*8*4*=8*8*4=512       ", "\n", "out_16", "=", "self", ".", "global_pooling", "(", "s1_16", ")", "# C16*8*4*=16*8*4=1024 ", "\n", "out_8", "=", "self", ".", "global_pooling", "(", "s1_8", ")", "# C8*8*4=24*8*4=1592", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out_32", ",", "out_16", ",", "out_8", "]", ",", "dim", "=", "1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "self", ".", "dropout", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ")", "# dropout=0.5", "\n", "#logits = self.classifier(out.view(out.size(0),-1))", "\n", "\n", "#return logits, branch16_Feature28, branch16_Feature14, branch16_Feature7", "\n", "return", "logits", "", "", "", ""]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Fusion.Videodatasets_Fusion.Normaliztion.__call__": [[21, 24], ["None"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "Image", ")", ":", "\n", "        ", "new_video_x", "=", "(", "Image", "-", "127.5", ")", "/", "128", "\n", "return", "new_video_x", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Fusion.Videodatasets_Fusion.Videodatasets_Fusion.__init__": [[26, 45], ["torchvision.transforms.Compose", "filter", "filter", "filter", "list", "list", "list", "Videodatasets_Fusion.Videodatasets_Fusion.__init__.get_data_list_and_label"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset_root", ",", "ground_truth1", ",", "typ1", ",", "ground_truth2", ",", "typ2", ",", "ground_truth3", ",", "typ3", ",", "sample_duration", "=", "16", ",", "phase", "=", "'train'", ")", ":", "\n", "\n", "        ", "def", "get_data_list_and_label", "(", "data_df", ",", "typ", ")", ":", "\n", "            ", "T", "=", "0", "# if typ == 'M' else 1", "\n", "return", "[", "(", "lambda", "arr", ":", "(", "'/'", ".", "join", "(", "arr", "[", "T", "]", ".", "split", "(", "'/'", ")", "[", "1", ":", "]", ")", ",", "int", "(", "arr", "[", "1", "]", ")", ",", "int", "(", "arr", "[", "2", "]", ")", ")", ")", "(", "i", "[", ":", "-", "1", "]", ".", "split", "(", "' '", ")", ")", "\n", "for", "i", "in", "open", "(", "data_df", ")", ".", "readlines", "(", ")", "]", "\n", "\n", "", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "sample_duration", "=", "sample_duration", "\n", "self", ".", "phase", "=", "phase", "\n", "self", ".", "typ1", ",", "self", ".", "typ2", ",", "self", ".", "typ3", "=", "typ1", ",", "typ2", ",", "typ3", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "Normaliztion", "(", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "\n", "lines", "=", "filter", "(", "lambda", "x", ":", "x", "[", "1", "]", ">", "7", ",", "get_data_list_and_label", "(", "ground_truth1", ",", "typ1", ")", ")", "\n", "lines2", "=", "filter", "(", "lambda", "x", ":", "x", "[", "1", "]", ">", "7", ",", "get_data_list_and_label", "(", "ground_truth2", ",", "typ2", ")", ")", "\n", "lines3", "=", "filter", "(", "lambda", "x", ":", "x", "[", "1", "]", ">", "7", ",", "get_data_list_and_label", "(", "ground_truth3", ",", "typ3", ")", ")", "\n", "self", ".", "inputs", "=", "list", "(", "lines", ")", "\n", "self", ".", "inputs2", "=", "list", "(", "lines2", ")", "\n", "self", ".", "inputs3", "=", "list", "(", "lines3", ")", "\n", "", "def", "transform_params", "(", "self", ",", "resize", "=", "(", "320", ",", "240", ")", ",", "crop_size", "=", "224", ",", "flip", "=", "0.5", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Fusion.Videodatasets_Fusion.Videodatasets_Fusion.transform_params": [[45, 53], ["random.randint", "random.randint", "random.uniform"], "methods", ["None"], ["", "def", "transform_params", "(", "self", ",", "resize", "=", "(", "320", ",", "240", ")", ",", "crop_size", "=", "224", ",", "flip", "=", "0.5", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'train'", ":", "\n", "            ", "left", ",", "top", "=", "random", ".", "randint", "(", "0", ",", "resize", "[", "0", "]", "-", "crop_size", ")", ",", "random", ".", "randint", "(", "0", ",", "resize", "[", "1", "]", "-", "crop_size", ")", "\n", "is_flip", "=", "True", "if", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "flip", "else", "False", "\n", "", "else", ":", "\n", "            ", "left", ",", "top", "=", "(", "resize", "[", "0", "]", "-", "crop_size", ")", "//", "2", ",", "(", "resize", "[", "1", "]", "-", "crop_size", ")", "//", "2", "\n", "is_flip", "=", "False", "\n", "", "return", "(", "left", ",", "top", ",", "left", "+", "crop_size", ",", "top", "+", "crop_size", ")", ",", "is_flip", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Fusion.Videodatasets_Fusion.Videodatasets_Fusion.__getitem__": [[54, 119], ["Videodatasets_Fusion.Videodatasets_Fusion.transform_params", "f", "os.path.join", "Videodatasets_Fusion.Videodatasets_Fusion.__getitem__.Sample_Image"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.Videodatasets.Videodatasets.transform_params"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n        Returns:\n            tuple: (image, target) where target is class_index of the target class.\n        \"\"\"", "\n", "resize", "=", "(", "320", ",", "240", ")", "# default | (256, 256) may be helpful", "\n", "crop_rect", ",", "is_flip", "=", "self", ".", "transform_params", "(", "resize", "=", "resize", ",", "flip", "=", "1.0", ")", "# no flip", "\n", "\n", "def", "image_to_np", "(", "image", ")", ":", "\n", "            ", "\"\"\"\n            Returns:\n            np.ndarray: Image converted to array with shape (width, height, channels)\n            \"\"\"", "\n", "image_np", "=", "np", ".", "empty", "(", "[", "image", ".", "channels", ",", "image", ".", "height", ",", "image", ".", "width", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "image", ".", "copyto", "(", "image_np", ")", "\n", "image_np", "=", "np", ".", "transpose", "(", "image_np", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "return", "image_np", "\n", "\n", "", "def", "transform", "(", "img", ")", ":", "\n", "            ", "img", "=", "img", ".", "resize", "(", "resize", ")", "\n", "img", "=", "img", ".", "crop", "(", "crop_rect", ")", "\n", "if", "is_flip", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "return", "np", ".", "array", "(", "img", ".", "resize", "(", "(", "112", ",", "112", ")", ")", ")", "# Image.open", "\n", "# return image_to_np(img.resize((112, 112)))    # accimage.Image", "\n", "", "def", "Sample_Image", "(", "imgs_path", ",", "sl", ")", ":", "\n", "            ", "frams", "=", "[", "]", "\n", "for", "a", "in", "sl", ":", "\n", "# img = transform(accimage.Image(os.path.join(imgs_path, \"%06d.jpg\" % a)))", "\n", "                ", "img", "=", "transform", "(", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "imgs_path", ",", "\"%06d.jpg\"", "%", "a", ")", ")", ")", "\n", "frams", ".", "append", "(", "self", ".", "transform", "(", "img", ")", ".", "view", "(", "3", ",", "112", ",", "112", ",", "1", ")", ")", "\n", "", "return", "torch", ".", "cat", "(", "frams", ",", "dim", "=", "3", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "\n", "", "sn", "=", "self", ".", "sample_duration", "\n", "if", "self", ".", "phase", "==", "'train'", ":", "\n", "            ", "f", "=", "lambda", "n", ":", "[", "(", "lambda", "n", ",", "arr", ":", "n", "if", "arr", "==", "[", "]", "else", "random", ".", "choice", "(", "arr", ")", ")", "(", "n", "*", "i", "/", "sn", ",", "\n", "range", "(", "int", "(", "n", "*", "i", "/", "sn", ")", ",", "\n", "max", "(", "int", "(", "n", "*", "i", "/", "sn", ")", "+", "1", ",", "\n", "int", "(", "n", "*", "(", "\n", "i", "+", "1", ")", "/", "sn", ")", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "sn", ")", "]", "\n", "", "else", ":", "\n", "            ", "f", "=", "lambda", "n", ":", "[", "(", "lambda", "n", ",", "arr", ":", "n", "if", "arr", "==", "[", "]", "else", "int", "(", "np", ".", "mean", "(", "arr", ")", ")", ")", "(", "n", "*", "i", "/", "sn", ",", "range", "(", "int", "(", "n", "*", "i", "/", "sn", ")", ",", "\n", "max", "(", "int", "(", "\n", "n", "*", "i", "/", "sn", ")", "+", "1", ",", "\n", "int", "(", "n", "*", "(", "\n", "i", "+", "1", ")", "/", "sn", ")", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "sn", ")", "]", "\n", "\n", "", "sl", "=", "f", "(", "self", ".", "inputs3", "[", "index", "]", "[", "1", "]", ")", "\n", "\n", "# Iso", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "self", ".", "typ1", ",", "self", ".", "phase", ")", ",", "self", ".", "inputs", "[", "index", "]", "[", "0", "]", ")", "\n", "clip", "=", "Sample_Image", "(", "data_path", ",", "sl", ")", "\n", "\n", "data_path2", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "self", ".", "typ2", ",", "self", ".", "phase", ")", ",", "self", ".", "inputs2", "[", "index", "]", "[", "0", "]", ")", "\n", "clip2", "=", "Sample_Image", "(", "data_path2", ",", "sl", ")", "\n", "\n", "data_path3", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "self", ".", "typ3", ",", "self", ".", "phase", ")", ",", "self", ".", "inputs3", "[", "index", "]", "[", "0", "]", ")", "\n", "clip3", "=", "Sample_Image", "(", "data_path3", ",", "sl", ")", "\n", "\n", "assert", "self", ".", "inputs", "[", "index", "]", "[", "2", "]", "==", "self", ".", "inputs2", "[", "index", "]", "[", "2", "]", "and", "self", ".", "inputs2", "[", "index", "]", "[", "2", "]", "==", "self", ".", "inputs3", "[", "index", "]", "[", "2", "]", "\n", "return", "clip", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ",", "self", ".", "inputs", "[", "index", "]", "[", "2", "]", ",", "clip2", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ",", "clip3", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Fusion.Videodatasets_Fusion.Videodatasets_Fusion.__len__": [[120, 122], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "inputs3", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Fusion.AutoGesture_Fusion.val_test.__init__": [[211, 217], ["AutoGesture_Fusion.val_test.valid", "print"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.valid"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "model_RGB", ",", "model_Depth", ",", "model_RGBD", ",", "model_RGBF", ",", "model_FLOWD", ",", "val_loader", ")", ":", "\n", "        ", "self", ".", "model_RGB", ",", "self", ".", "model_Depth", ",", "self", ".", "model_RGBD", ",", "self", ".", "model_RGBF", ",", "self", ".", "model_FLOWD", "=", "model_RGB", ",", "model_Depth", ",", "model_RGBD", ",", "model_RGBF", ",", "model_FLOWD", "\n", "self", ".", "args", "=", "args", "\n", "\n", "valid_acc", "=", "self", ".", "valid", "(", "1", ",", "dataloader", "=", "val_loader", ")", "\n", "print", "(", "'valid_acc:{}'", ".", "format", "(", "valid_acc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Fusion.AutoGesture_Fusion.val_test.valid": [[219, 252], ["print", "AutoGesture_Fusion.val_test.model_RGB.eval", "AutoGesture_Fusion.val_test.model_Depth.eval", "AutoGesture_Fusion.val_test.model_RGBD.eval", "AutoGesture_Fusion.val_test.model_RGBF.eval", "AutoGesture_Fusion.val_test.model_FLOWD.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm.tqdm", "enumerate", "AutoGesture_Fusion.val_test.model_RGB", "AutoGesture_Fusion.val_test.model_Depth", "AutoGesture_Fusion.val_test.model_RGBD", "AutoGesture_Fusion.val_test.model_RGBF", "AutoGesture_Fusion.val_test.model_FLOWD", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "len", "r.cuda", "d.cuda", "r.cuda", "d.cuda", "r.cuda", "f.cuda", "f.cuda", "d.cuda", "float", "print", "time.strftime", "l.cuda", "len", "time.localtime", "time.time"], "methods", ["None"], ["", "def", "valid", "(", "self", ",", "epoch", ",", "dataloader", ")", ":", "\n", "        ", "print", "(", "'Validation...'", ")", "\n", "self", ".", "model_RGB", ".", "eval", "(", ")", "\n", "self", ".", "model_Depth", ".", "eval", "(", ")", "\n", "self", ".", "model_RGBD", ".", "eval", "(", ")", "\n", "self", ".", "model_RGBF", ".", "eval", "(", ")", "\n", "self", ".", "model_FLOWD", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "correct", "=", "0", "\n", "max_num", "=", "0", "\n", "for", "i", ",", "(", "r", ",", "l", ",", "d", ",", "f", ")", "in", "tqdm", "(", "enumerate", "(", "dataloader", ")", ")", ":", "\n", "                ", "outputs_r", "=", "self", ".", "model_RGB", "(", "r", ".", "cuda", "(", ")", ")", "\n", "outputs_d", "=", "self", ".", "model_Depth", "(", "d", ".", "cuda", "(", ")", ")", "\n", "outputs_rd", "=", "self", ".", "model_RGBD", "(", "r", ".", "cuda", "(", ")", ",", "d", ".", "cuda", "(", ")", ")", "\n", "outputs_rf", "=", "self", ".", "model_RGBF", "(", "r", ".", "cuda", "(", ")", ",", "f", ".", "cuda", "(", ")", ")", "\n", "outputs_fd", "=", "self", ".", "model_FLOWD", "(", "f", ".", "cuda", "(", ")", ",", "d", ".", "cuda", "(", ")", ")", "\n", "\n", "\n", "# ---------fusion----------", "\n", "# outputs = outputs_r + outputs_d + outputs_rd", "\n", "outputs", "=", "outputs_rd", "+", "outputs_rf", "+", "outputs_fd", "+", "outputs_r", "+", "outputs_d", "\n", "# -------------------------", "\n", "\n", "pred", "=", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "correct", "+=", "(", "pred", "==", "l", ".", "cuda", "(", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "max_num", "+=", "len", "(", "d", ")", "\n", "acc", "=", "float", "(", "correct", ")", "/", "max_num", "\n", "if", "(", "i", "+", "1", ")", "%", "self", ".", "args", ".", "print_freq", "==", "0", ":", "\n", "                    ", "print", "(", "' Validing [%2d/%2d, %4d/%4d], Acc: %.4f \\t time: @%s'", "%", "(", "\n", "epoch", ",", "self", ".", "args", ".", "max_epochs", ",", "i", ",", "len", "(", "dataloader", ".", "dataset", ")", "/", "self", ".", "args", ".", "testing_batch_size", ",", "acc", ",", "\n", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", ")", "\n", "", "", "", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Fusion.AutoGesture_Fusion.Module": [[22, 193], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "print", "print", "print", "namedtuple", "namedtuple", "namedtuple.", "namedtuple.", "namedtuple.", "namedtuple.", "Aut_network.AutoGesture_12layers", "Aut_network.AutoGesture_12layers", "Auto_RGBD_Diff", "Auto_RGBD_Diff", "Auto_RGBD_Diff", "Exception", "Aut_network.AutoGesture_12layers.load_state_dict", "print", "Aut_network.AutoGesture_12layers.load_state_dict", "print", "Auto_RGBD_Diff.load_state_dict", "print", "Auto_RGBD_Diff.load_state_dict", "print", "Auto_RGBD_Diff.load_state_dict", "print", "Aut_network.AutoGesture_12layers.cuda", "Aut_network.AutoGesture_12layers.cuda", "Auto_RGBD_Diff.cuda", "Auto_RGBD_Diff.cuda", "Auto_RGBD_Diff.cuda", "print", "collections.OrderedDict", "torch.load.items", "Aut_network.AutoGesture_12layers.load_state_dict", "print", "collections.OrderedDict", "torch.load.items", "Aut_network.AutoGesture_12layers.load_state_dict", "print", "collections.OrderedDict", "torch.load.items", "Auto_RGBD_Diff.load_state_dict", "print", "collections.OrderedDict", "torch.load.items", "Auto_RGBD_Diff.load_state_dict", "print", "collections.OrderedDict", "torch.load.items", "Auto_RGBD_Diff.load_state_dict", "range", "range", "range", "range", "range", "range"], "function", ["None"], ["def", "Module", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "res_layer", "==", "'AUG'", ":", "\n", "        ", "print", "(", "\"load from AutoGesture Network\"", ")", "\n", "from", "collections", "import", "namedtuple", "\n", "# from network import AutoGesture_searched as network", "\n", "Genotype_Net", "=", "namedtuple", "(", "'Genotype'", ",", "\n", "'normal8 normal_concat8 normal16 normal_concat16 normal32 normal_concat32'", ")", "\n", "\n", "PRIMITIVES", "=", "[", "\n", "'none'", ",", "\n", "'skip_connect'", ",", "\n", "'TCDC06_3x3x3'", ",", "\n", "'TCDC03avg_3x3x3'", ",", "\n", "'conv_1x3x3'", ",", "\n", "'TCDC06_3x1x1'", ",", "\n", "'TCDC03avg_3x1x1'", ",", "\n", "]", "\n", "\n", "Genotype_Con_Unshared", "=", "namedtuple", "(", "'Genotype'", ",", "'Low_Connect Mid_Connect High_Connect'", ")", "\n", "\n", "# For stride = 2 or stride = 1", "\n", "PRIMITIVES_3x1x1", "=", "[", "\n", "'none'", ",", "\n", "'TCDC06_3x1x1'", ",", "\n", "'TCDC03avg_3x1x1'", ",", "\n", "'conv_3x1x1'", ",", "\n", "]", "\n", "\n", "# For stride = 4", "\n", "PRIMITIVES_5x1x1", "=", "[", "\n", "'none'", ",", "\n", "'TCDC06_5x1x1'", ",", "\n", "'TCDC03avg_5x1x1'", ",", "\n", "'conv_5x1x1'", ",", "\n", "]", "\n", "\n", "\n", "genotype_rgb", "=", "Genotype_Net", "(", "\n", "normal8", "=", "[", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'TCDC06_3x3x3'", ",", "0", ")", ",", "(", "'skip_connect'", ",", "0", ")", ",", "(", "'skip_connect'", ",", "1", ")", ",", "\n", "(", "'skip_connect'", ",", "0", ")", ",", "(", "'skip_connect'", ",", "1", ")", ",", "(", "'TCDC06_3x1x1'", ",", "2", ")", ",", "(", "'skip_connect'", ",", "3", ")", "]", ",", "\n", "normal_concat8", "=", "range", "(", "2", ",", "6", ")", ",", "\n", "normal16", "=", "[", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "0", ")", ",", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'TCDC06_3x3x3'", ",", "2", ")", ",", "\n", "(", "'TCDC06_3x3x3'", ",", "3", ")", ",", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'TCDC03avg_3x3x3'", ",", "2", ")", ",", "(", "'TCDC06_3x3x3'", ",", "3", ")", "]", ",", "\n", "normal_concat16", "=", "range", "(", "2", ",", "6", ")", ",", "\n", "normal32", "=", "[", "(", "'TCDC03avg_3x3x3'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "0", ")", ",", "(", "'conv_1x3x3'", ",", "1", ")", ",", "(", "'conv_1x3x3'", ",", "0", ")", ",", "\n", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "2", ")", ",", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'TCDC06_3x3x3'", ",", "0", ")", "]", ",", "\n", "normal_concat32", "=", "range", "(", "2", ",", "6", ")", ")", "\n", "\n", "genotype_depth", "=", "Genotype_Net", "(", "\n", "normal8", "=", "[", "(", "'conv_1x3x3'", ",", "1", ")", ",", "(", "'TCDC06_3x1x1'", ",", "0", ")", ",", "(", "'skip_connect'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "0", ")", ",", "\n", "(", "'skip_connect'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "0", ")", ",", "(", "'conv_1x3x3'", ",", "2", ")", ",", "(", "'skip_connect'", ",", "1", ")", "]", ",", "\n", "normal_concat8", "=", "range", "(", "2", ",", "6", ")", ",", "\n", "normal16", "=", "[", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'conv_1x3x3'", ",", "0", ")", ",", "(", "'TCDC06_3x3x3'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "2", ")", ",", "\n", "(", "'TCDC06_3x1x1'", ",", "3", ")", ",", "(", "'conv_1x3x3'", ",", "0", ")", ",", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'conv_1x3x3'", ",", "3", ")", "]", ",", "\n", "normal_concat16", "=", "range", "(", "2", ",", "6", ")", ",", "\n", "normal32", "=", "[", "(", "'TCDC03avg_3x3x3'", ",", "1", ")", ",", "(", "'TCDC06_3x1x1'", ",", "0", ")", ",", "(", "'TCDC03avg_3x3x3'", ",", "2", ")", ",", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "\n", "(", "'TCDC03avg_3x1x1'", ",", "1", ")", ",", "(", "'TCDC06_3x3x3'", ",", "3", ")", ",", "(", "'TCDC03avg_3x1x1'", ",", "4", ")", ",", "(", "'TCDC03avg_3x3x3'", ",", "2", ")", "]", ",", "\n", "normal_concat32", "=", "range", "(", "2", ",", "6", ")", ")", "\n", "genotype_con_unshared", "=", "Genotype_Con_Unshared", "(", "\n", "Low_Connect", "=", "[", "'TCDC03avg_3x1x1'", ",", "'none'", ",", "'TCDC03avg_5x1x1'", ",", "'TCDC06_3x1x1'", ",", "'TCDC06_3x1x1'", ",", "'none'", ",", "'none'", ",", "\n", "'conv_3x1x1'", ",", "'none'", ",", "'conv_5x1x1'", ",", "'none'", ",", "'none'", ",", "'TCDC06_3x1x1'", ",", "'TCDC06_3x1x1'", ",", "\n", "'TCDC06_3x1x1'", ",", "\n", "'TCDC03avg_5x1x1'", ",", "'TCDC06_3x1x1'", ",", "'TCDC03avg_3x1x1'", "]", ",", "\n", "Mid_Connect", "=", "[", "'TCDC06_3x1x1'", ",", "'conv_3x1x1'", ",", "'none'", ",", "'conv_3x1x1'", ",", "'TCDC06_3x1x1'", ",", "'TCDC06_5x1x1'", ",", "\n", "'TCDC06_3x1x1'", ",", "\n", "'conv_3x1x1'", ",", "'TCDC03avg_3x1x1'", ",", "'conv_5x1x1'", ",", "'TCDC06_3x1x1'", ",", "'TCDC03avg_3x1x1'", ",", "\n", "'TCDC06_3x1x1'", ",", "\n", "'TCDC06_3x1x1'", ",", "'TCDC06_3x1x1'", ",", "'TCDC03avg_5x1x1'", ",", "'conv_3x1x1'", ",", "'TCDC03avg_3x1x1'", "]", ",", "\n", "High_Connect", "=", "[", "'TCDC06_3x1x1'", ",", "'TCDC03avg_3x1x1'", ",", "'TCDC06_5x1x1'", ",", "'TCDC03avg_3x1x1'", ",", "'TCDC03avg_3x1x1'", ",", "\n", "'TCDC06_5x1x1'", ",", "'conv_3x1x1'", ",", "'none'", ",", "'conv_3x1x1'", ",", "'conv_5x1x1'", ",", "'none'", ",", "'TCDC03avg_3x1x1'", ",", "\n", "'TCDC03avg_3x1x1'", ",", "'none'", ",", "'TCDC06_3x1x1'", ",", "'TCDC06_5x1x1'", ",", "'TCDC03avg_3x1x1'", ",", "\n", "'TCDC03avg_3x1x1'", "]", ")", "\n", "genotype_con_shared", "=", "Genotype_Con_Unshared", "(", "\n", "Low_Connect", "=", "[", "'conv_3x1x1'", ",", "'TCDC03avg_3x1x1'", ",", "'TCDC06_5x1x1'", ",", "'TCDC06_3x1x1'", ",", "'conv_3x1x1'", ",", "'none'", ",", "\n", "'conv_3x1x1'", ",", "\n", "'conv_3x1x1'", ",", "'TCDC06_3x1x1'", ",", "'conv_5x1x1'", ",", "'none'", ",", "'TCDC06_3x1x1'", ",", "'conv_3x1x1'", ",", "\n", "'TCDC06_3x1x1'", ",", "\n", "'TCDC03avg_3x1x1'", ",", "'TCDC03avg_5x1x1'", ",", "'conv_3x1x1'", ",", "'TCDC06_3x1x1'", "]", ",", "\n", "Mid_Connect", "=", "[", "'conv_3x1x1'", ",", "'TCDC03avg_3x1x1'", ",", "'TCDC06_5x1x1'", ",", "'TCDC06_3x1x1'", ",", "'conv_3x1x1'", ",", "'none'", ",", "\n", "'conv_3x1x1'", ",", "\n", "'conv_3x1x1'", ",", "'TCDC06_3x1x1'", ",", "'conv_5x1x1'", ",", "'none'", ",", "'TCDC06_3x1x1'", ",", "'conv_3x1x1'", ",", "\n", "'TCDC06_3x1x1'", ",", "\n", "'TCDC03avg_3x1x1'", ",", "'TCDC03avg_5x1x1'", ",", "'conv_3x1x1'", ",", "'TCDC06_3x1x1'", "]", ",", "\n", "High_Connect", "=", "[", "'conv_3x1x1'", ",", "'TCDC03avg_3x1x1'", ",", "'TCDC06_5x1x1'", ",", "'TCDC06_3x1x1'", ",", "'conv_3x1x1'", ",", "'none'", ",", "\n", "'conv_3x1x1'", ",", "\n", "'conv_3x1x1'", ",", "'TCDC06_3x1x1'", ",", "'conv_5x1x1'", ",", "'none'", ",", "'TCDC06_3x1x1'", ",", "'conv_3x1x1'", ",", "\n", "'TCDC06_3x1x1'", ",", "\n", "'TCDC03avg_3x1x1'", ",", "'TCDC03avg_5x1x1'", ",", "'conv_3x1x1'", ",", "'TCDC06_3x1x1'", "]", ")", "\n", "from", "network", "import", "AutoGesture_searched", "as", "Aut_network", "\n", "model_RGB", "=", "Aut_network", ".", "AutoGesture_12layers", "(", "args", ".", "init_channels8", ",", "args", ".", "init_channels16", ",", "args", ".", "init_channels32", ",", "\n", "args", ".", "num_classes", ",", "args", ".", "layers", ",", "genotype_rgb", ")", "\n", "model_Depth", "=", "Aut_network", ".", "AutoGesture_12layers", "(", "args", ".", "init_channels8", ",", "args", ".", "init_channels16", ",", "args", ".", "init_channels32", ",", "\n", "args", ".", "num_classes", ",", "args", ".", "layers", ",", "genotype_depth", ")", "\n", "from", "RGBD_searched", ".", "models", ".", "AutoGesture_RGBD_searched_12layers_DiffChannels", "import", "AutoGesture_RGBD_12layers", "as", "Auto_RGBD_Diff", "\n", "\n", "model_RGBD", "=", "Auto_RGBD_Diff", "(", "args", ".", "init_channels8", ",", "args", ".", "init_channels16", ",", "args", ".", "init_channels32", ",", "args", ".", "num_classes", ",", "\n", "args", ".", "layers", ",", "genotype_rgb", ",", "genotype_depth", ",", "\n", "genotype_con_unshared", ")", "\n", "model_RGBF", "=", "Auto_RGBD_Diff", "(", "args", ".", "init_channels8", ",", "args", ".", "init_channels16", ",", "args", ".", "init_channels32", ",", "args", ".", "num_classes", ",", "\n", "args", ".", "layers", ",", "genotype_rgb", ",", "genotype_depth", ",", "\n", "genotype_con_unshared", ")", "\n", "model_FLOWD", "=", "Auto_RGBD_Diff", "(", "args", ".", "init_channels8", ",", "args", ".", "init_channels16", ",", "args", ".", "init_channels32", ",", "args", ".", "num_classes", ",", "\n", "args", ".", "layers", ",", "genotype_rgb", ",", "genotype_depth", ",", "\n", "genotype_con_unshared", ")", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Error'", ")", "\n", "\n", "", "params_rgb", "=", "torch", ".", "load", "(", "args", ".", "resume_rgb", ")", "\n", "try", ":", "\n", "        ", "model_RGB", ".", "load_state_dict", "(", "params_rgb", ")", "\n", "print", "(", "'Load RGB state_dict...'", ")", "\n", "", "except", ":", "\n", "        ", "print", "(", "'Load RGB state_dict...'", ")", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "params_rgb", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model_RGB", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "", "params_depth", "=", "torch", ".", "load", "(", "args", ".", "resume_depth", ")", "\n", "try", ":", "\n", "        ", "model_Depth", ".", "load_state_dict", "(", "params_depth", ")", "\n", "print", "(", "'Load Depth state_dict...'", ")", "\n", "", "except", ":", "\n", "        ", "print", "(", "'Load Depth state_dict...'", ")", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "params_depth", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model_Depth", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n", "", "params_rgbd", "=", "torch", ".", "load", "(", "args", ".", "resume_rgbd", ")", "\n", "try", ":", "\n", "# model_RGBD.classifier = torch.nn.Linear(3072, 25) # NV", "\n", "        ", "model_RGBD", ".", "load_state_dict", "(", "params_rgbd", ")", "\n", "print", "(", "'Load RGBD state_dict...'", ")", "\n", "", "except", ":", "\n", "        ", "print", "(", "'Load RGBD state_dict...'", ")", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "params_rgbd", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model_RGBD", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n", "", "params_rgbf", "=", "torch", ".", "load", "(", "args", ".", "resume_rgbf", ")", "\n", "try", ":", "\n", "        ", "model_RGBF", ".", "load_state_dict", "(", "params_rgbf", ")", "\n", "print", "(", "'Load RGBF state_dict...'", ")", "\n", "", "except", ":", "\n", "        ", "print", "(", "'Load RGBF state_dict...'", ")", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "params_rgbf", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model_RGBF", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n", "", "params_flowd", "=", "torch", ".", "load", "(", "args", ".", "resume_flowd", ")", "\n", "try", ":", "\n", "        ", "model_FLOWD", ".", "load_state_dict", "(", "params_flowd", ")", "\n", "print", "(", "'Load FLOWD state_dict...'", ")", "\n", "", "except", ":", "\n", "        ", "print", "(", "'Load FLOWD state_dict...'", ")", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "params_flowd", ".", "items", "(", ")", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model_FLOWD", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n", "", "print", "(", "'Load module Finished'", ")", "\n", "print", "(", "'='", "*", "20", ")", "\n", "return", "model_RGB", ".", "cuda", "(", ")", ",", "model_Depth", ".", "cuda", "(", ")", ",", "model_RGBD", ".", "cuda", "(", ")", ",", "model_RGBF", ".", "cuda", "(", ")", ",", "model_FLOWD", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Fusion.AutoGesture_Fusion.GetData": [[194, 209], ["print", "Videodatasets_Fusion.Videodatasets_Fusion", "torch.utils.data.DataLoader"], "function", ["None"], ["", "def", "GetData", "(", "args", ")", ":", "\n", "    ", "print", "(", "'Start load Data...'", ")", "\n", "modality1", "=", "'rgb'", "\n", "modality2", "=", "'depth'", "\n", "modality3", "=", "'flow'", "\n", "valid_dataset", "=", "Videodatasets_Fusion", "(", "args", ".", "data_dir_root", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_valid_lst.txt'", ".", "format", "(", "modality1", ")", ",", "modality1", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_valid_lst.txt'", ".", "format", "(", "modality2", ")", ",", "modality2", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_valid_lst.txt'", ".", "format", "(", "modality3", ")", ",", "modality3", ",", "\n", "args", ".", "sample_duration", ",", "phase", "=", "'valid'", ")", "\n", "valid_dataloader", "=", "DataLoader", "(", "valid_dataset", ",", "batch_size", "=", "args", ".", "testing_batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "return", "valid_dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Fusion.AutoGesture_Fusion.parse": [[253, 270], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "", "def", "parse", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "default", "=", "'config.yml'", ",", "\n", "dest", "=", "'config'", ",", "help", "=", "'to set the parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'-r'", ",", "'--resume'", ",", "default", "=", "''", ",", "help", "=", "'load model'", ")", "\n", "parser", ".", "add_argument", "(", "'-m'", ",", "'--mode'", ",", "help", "=", "'train or valid or test'", ")", "\n", "parser", ".", "add_argument", "(", "'-t'", ",", "'--type'", ",", "help", "=", "'K or M'", ")", "\n", "parser", ".", "add_argument", "(", "'-g'", ",", "'--gpu_ids'", ",", "default", "=", "\"0,1\"", ",", "help", "=", "\"gpu\"", ")", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--res_layer'", ",", "default", "=", "18", ",", "help", "=", "\"ResNet Layer\"", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--init_model'", ",", "default", "=", "\"\"", ",", "help", "=", "\"Pretrained model on 20 BN\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--Mode'", ",", "default", "=", "'score'", ",", "type", "=", "str", ",", "help", "=", "'Mode (score | feature). score outputs class scores. feature outputs features (after global average pooling).'", ")", "\n", "parser", ".", "add_argument", "(", "'--resnet_shortcut'", ",", "default", "=", "'A'", ",", "type", "=", "str", ",", "help", "=", "'Shortcut type of resnet (A | B)'", ")", "\n", "parser", ".", "set_defaults", "(", "verbose", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "help", "=", "''", ")", "\n", "parser", ".", "set_defaults", "(", "verbose", "=", "False", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.__init__": [[24, 26], ["train_AutoGesture_3DCDC.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "", "def", "reset", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.reset": [[26, 31], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.update": [[32, 37], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.__init__": [[126, 146], ["train_AutoGesture_3DCDC.train_val.LoadOptimizer", "train_AutoGesture_3DCDC.train_val.training", "float", "train_AutoGesture_3DCDC.train_val.valid", "print", "Exception", "args.resume.split"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.LoadOptimizer", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.training", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.valid"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "args", ",", "vis", ",", "train_loader", ",", "val_loader", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "vis", "=", "vis", "\n", "self", ".", "lr", "=", "args", ".", "learning_rate", "\n", "self", ".", "dlr", "=", "args", ".", "learning_rate", "\n", "self", ".", "step", "=", "0", "\n", "try", ":", "\n", "            ", "self", ".", "best_val_acc", "=", "float", "(", "args", ".", "resume", ".", "split", "(", "'-'", ")", "[", "-", "2", "]", "[", "6", ":", "]", ")", "if", "args", ".", "resume", "and", "not", "args", ".", "pretrain", "else", "0.0", "\n", "", "except", ":", "\n", "            ", "self", ".", "best_val_acc", "=", "0.0", "\n", "", "self", ".", "optimizer", ",", "self", ".", "lr_scheduler", ",", "self", ".", "criterion1", "=", "self", ".", "LoadOptimizer", "(", ")", "\n", "\n", "if", "args", ".", "mode", "==", "'train'", ":", "\n", "            ", "self", ".", "training", "(", "train_loader", ",", "val_loader", ")", "\n", "", "elif", "args", ".", "mode", "==", "'valid'", ":", "\n", "            ", "valid_acc", "=", "self", ".", "valid", "(", "1", ",", "dataloader", "=", "val_loader", ")", "\n", "print", "(", "'valid_acc:{}'", ".", "format", "(", "valid_acc", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Error in phase!'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.LoadOptimizer": [[147, 153], ["torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.ReduceLROnPlateau", "train_AutoGesture_3DCDC.train_val.model.parameters"], "methods", ["None"], ["", "", "def", "LoadOptimizer", "(", "self", ")", ":", "\n", "        ", "criterion1", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "args", ".", "learning_rate", ",", "momentum", "=", "self", ".", "args", ".", "momentum", ",", "weight_decay", "=", "self", ".", "args", ".", "weight_decay", ")", "\n", "lr_scheduler", "=", "ReduceLROnPlateau", "(", "optimizer", ",", "mode", "=", "'max'", ",", "factor", "=", "0.1", ",", "patience", "=", "3", ",", "verbose", "=", "True", ",", "threshold", "=", "0.0001", ",", "\n", "threshold_mode", "=", "'rel'", ",", "cooldown", "=", "3", ",", "min_lr", "=", "0.00001", ",", "eps", "=", "1e-08", ")", "\n", "return", "optimizer", ",", "lr_scheduler", ",", "criterion1", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.update_lr": [[154, 168], ["numpy.power"], "methods", ["None"], ["", "def", "update_lr", "(", "self", ",", "optimizer", ",", "step", ")", ":", "\n", "        ", "df", "=", "0.7", "\n", "ds", "=", "30000.0", "\n", "in_dlr", "=", "self", ".", "dlr", "\n", "self", ".", "dlr", "=", "self", ".", "lr", "*", "np", ".", "power", "(", "df", ",", "step", "/", "ds", ")", "\n", "\n", "# Dynamic Modification Learning Rate", "\n", "for", "g", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "in_lr", "=", "g", "[", "'lr'", "]", "\n", "g", "[", "'lr'", "]", "=", "self", ".", "dlr", "\n", "\n", "", "self", ".", "lr", "=", "self", ".", "lr", "*", "(", "in_lr", "/", "in_dlr", ")", "\n", "if", "in_lr", "/", "in_dlr", "==", "0.1", ":", "\n", "            ", "self", ".", "step", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.training": [[169, 202], ["print", "range", "print", "train_AutoGesture_3DCDC.train_val.train", "train_AutoGesture_3DCDC.train_val.valid", "train_AutoGesture_3DCDC.train_val.lr_scheduler.step", "max", "time.strftime", "round", "os.path.exists", "os.makedirs", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "time.localtime", "train_AutoGesture_3DCDC.train_val.model.state_dict", "open", "opened_file.write", "time.time", "os.path.split", "os.path.split", "str", "os.path.split", "time.strftime", "time.localtime", "time.time"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.train", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.valid"], ["", "", "def", "training", "(", "self", ",", "train_loader", ",", "val_loader", ")", ":", "\n", "        ", "print", "(", "'Start training...'", ")", "\n", "for", "epoch", "in", "range", "(", "self", ".", "args", ".", "init_epochs", ",", "self", ".", "args", ".", "max_epochs", ")", ":", "\n", "            ", "if", "epoch", "==", "0", ":", "# Warm up", "\n", "                ", "for", "g", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "                    ", "g", "[", "'lr'", "]", "=", "0.00001", "\n", "", "", "elif", "epoch", "==", "3", ":", "\n", "                ", "for", "g", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "                    ", "g", "[", "'lr'", "]", "=", "self", ".", "lr", "\n", "", "", "'''\n            Train:\n            '''", "\n", "self", ".", "train", "(", "epoch", ",", "dataloader", "=", "train_loader", ")", "\n", "if", "epoch", ">=", "3", ":", "\n", "                ", "'''\n                valid\n                '''", "\n", "valid_acc", "=", "self", ".", "valid", "(", "epoch", ",", "dataloader", "=", "val_loader", ")", "\n", "self", ".", "lr_scheduler", ".", "step", "(", "valid_acc", ")", "\n", "self", ".", "step", "+=", "1", "\n", "\n", "'''\n                Save model\n                '''", "\n", "model_save_filename", "=", "'./Checkpoints/model_{}_{}/epoch{}-{}-valid_{}.pth'", ".", "format", "(", "\n", "self", ".", "args", ".", "res_layer", ",", "self", ".", "args", ".", "sample_duration", ",", "epoch", ",", "self", ".", "args", ".", "type", ",", "round", "(", "valid_acc", ",", "4", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "split", "(", "model_save_filename", ")", "[", "0", "]", ")", ":", "os", ".", "makedirs", "(", "os", ".", "path", ".", "split", "(", "model_save_filename", ")", "[", "0", "]", ")", "\n", "if", "valid_acc", ">", "self", ".", "best_val_acc", ":", "\n", "                    ", "torch", ".", "save", "(", "self", ".", "model", ".", "state_dict", "(", ")", ",", "model_save_filename", ")", "\n", "with", "open", "(", "\"log/logfile.txt\"", ",", "'a'", ")", "as", "opened_file", ":", "\n", "                        ", "opened_file", ".", "write", "(", "str", "(", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", "+", "': '", "+", "os", ".", "path", ".", "split", "(", "model_save_filename", ")", "[", "1", "]", "+", "'\\n'", ")", "\n", "", "", "self", ".", "best_val_acc", "=", "max", "(", "valid_acc", ",", "self", ".", "best_val_acc", ")", "\n", "", "", "print", "(", "'Training finished in time: @{}'", ".", "format", "(", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.train": [[203, 240], ["train_AutoGesture_3DCDC.train_val.model.train", "train_AutoGesture_3DCDC.AverageMeter", "train_AutoGesture_3DCDC.AverageMeter", "train_AutoGesture_3DCDC.AverageMeter", "time.time", "tqdm.tqdm.tqdm", "enumerate", "train_AutoGesture_3DCDC.train_val.model", "train_AutoGesture_3DCDC.AverageMeter.update", "train_AutoGesture_3DCDC.train_val.criterion1", "train_AutoGesture_3DCDC.AverageMeter.update", "train_AutoGesture_3DCDC.train_val.optimizer.zero_grad", "train_AutoGesture_3DCDC.train_val.backward", "train_AutoGesture_3DCDC.train_val.optimizer.step", "train_AutoGesture_3DCDC.AverageMeter.update", "time.time", "d.cuda", "l.cuda", "train_AutoGesture_3DCDC.train_val.item", "d.size", "train_AutoGesture_3DCDC.train_val.update_lr", "print", "train_AutoGesture_3DCDC.train_val.vis.log", "time.time", "time.time", "train_AutoGesture_3DCDC.train_val.vis.plot_many", "train_AutoGesture_3DCDC.train_val.vis.plot_many", "train_AutoGesture_3DCDC.train_val.item", "time.strftime", "str", "len", "len", "time.localtime", "time.time"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.train", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.update", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.update", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.update", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.update_lr", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.log", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.plot_many", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.plot_many"], ["", "def", "train", "(", "self", ",", "epoch", ",", "dataloader", ")", ":", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "Avg_loss", "=", "AverageMeter", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "d", ",", "l", ")", "in", "tqdm", "(", "enumerate", "(", "dataloader", ")", ")", ":", "\n", "            ", "outputs", "=", "self", ".", "model", "(", "d", ".", "cuda", "(", ")", ")", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "# Forward propagation", "\n", "loss", "=", "self", ".", "criterion1", "(", "outputs", ",", "l", ".", "cuda", "(", ")", ")", "\n", "\n", "Avg_loss", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "d", ".", "size", "(", "0", ")", ")", "\n", "\n", "# backward propagation", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "# lr decayed exponentially", "\n", "if", "epoch", ">=", "3", ":", "\n", "                ", "self", ".", "update_lr", "(", "self", ".", "optimizer", ",", "len", "(", "dataloader", ".", "dataset", ")", "/", "self", ".", "args", ".", "batch_size", "*", "self", ".", "step", "+", "i", ")", "\n", "\n", "", "if", "(", "i", "+", "1", ")", "%", "self", ".", "args", ".", "print_freq", "==", "0", ":", "\n", "                ", "print", "(", "' Training [%2d/%2d, %4d/%4d] \\t Loss: %.4f(%.4f) \\t [datatime: %.3f] \\t [batchtime: %.3f] \\t @%s'", "%", "(", "\n", "epoch", ",", "self", ".", "args", ".", "max_epochs", ",", "i", ",", "len", "(", "dataloader", ".", "dataset", ")", "/", "self", ".", "args", ".", "batch_size", ",", "loss", ".", "item", "(", ")", ",", "Avg_loss", ".", "avg", ",", "\n", "data_time", ".", "avg", ",", "batch_time", ".", "avg", ",", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", ")", "\n", "if", "args", ".", "theta", ":", "\n", "                    ", "self", ".", "vis", ".", "plot_many", "(", "{", "'loss'", ":", "Avg_loss", ".", "avg", "}", ",", "'Train-'", "+", "self", ".", "args", ".", "type", "+", "str", "(", "args", ".", "theta", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "vis", ".", "plot_many", "(", "{", "'loss'", ":", "Avg_loss", ".", "avg", "}", ",", "'Train-'", "+", "self", ".", "args", ".", "type", ")", "\n", "", "self", ".", "vis", ".", "log", "(", "'LR[{m}]: {lr}'", ".", "format", "(", "m", "=", "self", ".", "args", ".", "type", ",", "lr", "=", "[", "g", "[", "'lr'", "]", "for", "g", "in", "self", ".", "optimizer", ".", "param_groups", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.train_val.valid": [[241, 265], ["train_AutoGesture_3DCDC.train_val.model.eval", "train_AutoGesture_3DCDC.AverageMeter", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "tqdm.tqdm.tqdm", "enumerate", "train_AutoGesture_3DCDC.train_val.model", "train_AutoGesture_3DCDC.train_val.criterion1", "train_AutoGesture_3DCDC.AverageMeter.update", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "len", "d.cuda", "l.cuda", "train_AutoGesture_3DCDC.train_val.item", "d.size", "float", "print", "train_AutoGesture_3DCDC.train_val.vis.plot_many", "train_AutoGesture_3DCDC.train_val.item", "time.strftime", "l.cuda", "len", "time.localtime", "time.time"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.AverageMeter.update", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.utils.visualizer.Visualizer.plot_many"], ["", "", "", "def", "valid", "(", "self", ",", "epoch", ",", "dataloader", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "Avg_loss", "=", "AverageMeter", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "correct", "=", "0", "\n", "max_num", "=", "0", "\n", "for", "i", ",", "(", "d", ",", "l", ")", "in", "tqdm", "(", "enumerate", "(", "dataloader", ")", ")", ":", "\n", "                ", "outputs", "=", "self", ".", "model", "(", "d", ".", "cuda", "(", ")", ")", "\n", "\n", "# Forward propagation", "\n", "loss", "=", "self", ".", "criterion1", "(", "outputs", ",", "l", ".", "cuda", "(", ")", ")", "\n", "\n", "Avg_loss", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "d", ".", "size", "(", "0", ")", ")", "\n", "\n", "pred", "=", "torch", ".", "argmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "correct", "+=", "(", "pred", "==", "l", ".", "cuda", "(", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "max_num", "+=", "len", "(", "d", ")", "\n", "acc", "=", "float", "(", "correct", ")", "/", "max_num", "\n", "if", "(", "i", "+", "1", ")", "%", "self", ".", "args", ".", "print_freq", "==", "0", ":", "\n", "                    ", "print", "(", "' Validing [%2d/%2d, %4d/%4d], Loss %.4f(%.4f), Acc: %.4f \\t time: @%s'", "%", "(", "\n", "epoch", ",", "self", ".", "args", ".", "max_epochs", ",", "i", ",", "len", "(", "dataloader", ".", "dataset", ")", "/", "self", ".", "args", ".", "testing_batch_size", ",", "loss", ".", "item", "(", ")", ",", "Avg_loss", ".", "avg", ",", "acc", ",", "\n", "time", ".", "strftime", "(", "'%m.%d %H:%M:%S'", ",", "time", ".", "localtime", "(", "time", ".", "time", "(", ")", ")", ")", ")", ")", "\n", "self", ".", "vis", ".", "plot_many", "(", "{", "'loss'", ":", "Avg_loss", ".", "avg", ",", "'Acc'", ":", "acc", "}", ",", "'Valid-'", "+", "self", ".", "args", ".", "type", ")", "\n", "", "", "", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.Module": [[38, 101], ["print", "collections.namedtuple", "network.AutoGesture_searched.AutoGesture_12layers", "print", "print", "print", "collections.namedtuple.", "torch.load", "torch.load", "torch.load", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "torch.nn.DataParallel().cuda", "network.AutoGesture_12layers.cuda", "print", "collections.namedtuple.", "network.AutoGesture_12layers.load_state_dict", "print", "print", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "init.xavier_normal_", "len", "range", "range", "range", "print", "collections.OrderedDict", "torch.load.items", "network.AutoGesture_12layers.load_state_dict", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "range", "range", "range"], "function", ["None"], ["", "", "def", "Module", "(", "args", ")", ":", "\n", "    ", "print", "(", "\"load from AutoGesture Network\"", ")", "\n", "Genotype_Net", "=", "namedtuple", "(", "'Genotype'", ",", "'normal8 normal_concat8 normal16 normal_concat16 normal32 normal_concat32'", ")", "\n", "\n", "PRIMITIVES", "=", "[", "\n", "'none'", ",", "\n", "'skip_connect'", ",", "\n", "'TCDC06_3x3x3'", ",", "\n", "'TCDC03avg_3x3x3'", ",", "\n", "'conv_1x3x3'", ",", "\n", "'TCDC06_3x1x1'", ",", "\n", "'TCDC03avg_3x1x1'", ",", "\n", "]", "\n", "if", "args", ".", "type", "==", "'M'", ":", "\n", "        ", "print", "(", "'Load RGB network...'", ")", "\n", "genotype", "=", "Genotype_Net", "(", "\n", "normal8", "=", "[", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'TCDC06_3x3x3'", ",", "0", ")", ",", "(", "'skip_connect'", ",", "0", ")", ",", "(", "'skip_connect'", ",", "1", ")", ",", "\n", "(", "'skip_connect'", ",", "0", ")", ",", "(", "'skip_connect'", ",", "1", ")", ",", "(", "'TCDC06_3x1x1'", ",", "2", ")", ",", "(", "'skip_connect'", ",", "3", ")", "]", ",", "\n", "normal_concat8", "=", "range", "(", "2", ",", "6", ")", ",", "\n", "normal16", "=", "[", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "0", ")", ",", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'TCDC06_3x3x3'", ",", "2", ")", ",", "\n", "(", "'TCDC06_3x3x3'", ",", "3", ")", ",", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'TCDC03avg_3x3x3'", ",", "2", ")", ",", "(", "'TCDC06_3x3x3'", ",", "3", ")", "]", ",", "\n", "normal_concat16", "=", "range", "(", "2", ",", "6", ")", ",", "\n", "normal32", "=", "[", "(", "'TCDC03avg_3x3x3'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "0", ")", ",", "(", "'conv_1x3x3'", ",", "1", ")", ",", "(", "'conv_1x3x3'", ",", "0", ")", ",", "\n", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "2", ")", ",", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'TCDC06_3x3x3'", ",", "0", ")", "]", ",", "\n", "normal_concat32", "=", "range", "(", "2", ",", "6", ")", ")", "\n", "\n", "", "elif", "args", ".", "type", "==", "'K'", ":", "\n", "        ", "print", "(", "'Load Depth network...'", ")", "\n", "genotype", "=", "Genotype_Net", "(", "\n", "normal8", "=", "[", "(", "'conv_1x3x3'", ",", "1", ")", ",", "(", "'TCDC06_3x1x1'", ",", "0", ")", ",", "(", "'skip_connect'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "0", ")", ",", "\n", "(", "'skip_connect'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "0", ")", ",", "(", "'conv_1x3x3'", ",", "2", ")", ",", "(", "'skip_connect'", ",", "1", ")", "]", ",", "\n", "normal_concat8", "=", "range", "(", "2", ",", "6", ")", ",", "\n", "normal16", "=", "[", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'conv_1x3x3'", ",", "0", ")", ",", "(", "'TCDC06_3x3x3'", ",", "1", ")", ",", "(", "'skip_connect'", ",", "2", ")", ",", "\n", "(", "'TCDC06_3x1x1'", ",", "3", ")", ",", "(", "'conv_1x3x3'", ",", "0", ")", ",", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "(", "'conv_1x3x3'", ",", "3", ")", "]", ",", "\n", "normal_concat16", "=", "range", "(", "2", ",", "6", ")", ",", "\n", "normal32", "=", "[", "(", "'TCDC03avg_3x3x3'", ",", "1", ")", ",", "(", "'TCDC06_3x1x1'", ",", "0", ")", ",", "(", "'TCDC03avg_3x3x3'", ",", "2", ")", ",", "(", "'TCDC06_3x1x1'", ",", "1", ")", ",", "\n", "(", "'TCDC03avg_3x1x1'", ",", "1", ")", ",", "(", "'TCDC06_3x3x3'", ",", "3", ")", ",", "(", "'TCDC03avg_3x1x1'", ",", "4", ")", ",", "(", "'TCDC03avg_3x3x3'", ",", "2", ")", "]", ",", "\n", "normal_concat32", "=", "range", "(", "2", ",", "6", ")", ")", "\n", "\n", "", "model", "=", "network", ".", "AutoGesture_12layers", "(", "args", ".", "init_channels8", ",", "args", ".", "init_channels16", ",", "args", ".", "init_channels32", ",", "args", ".", "num_classes", ",", "args", ".", "layers", ",", "genotype", ")", "\n", "\n", "if", "args", ".", "init_model", ":", "\n", "# model.classifier = torch.nn.Linear(3072, 27)", "\n", "        ", "params", "=", "torch", ".", "load", "(", "args", ".", "init_model", ")", "\n", "try", ":", "\n", "            ", "model", ".", "load_state_dict", "(", "params", ")", "\n", "print", "(", "'Load state_dict...'", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'Load state_dict...'", ")", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", ":", "\n", "                ", "name", "=", "k", "[", "7", ":", "]", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n", "", "if", "args", ".", "pretrain", ":", "\n", "            ", "from", "torch", ".", "nn", "import", "init", "\n", "print", "(", "'Pre-train, init.xavier_normal_(model.classifier.weight)'", ")", "\n", "model", ".", "classifier", "=", "torch", ".", "nn", ".", "Linear", "(", "3072", ",", "249", ")", "\n", "init", ".", "xavier_normal_", "(", "model", ".", "classifier", ".", "weight", ")", "\n", "", "", "print", "(", "'Load module Finished'", ")", "\n", "print", "(", "'='", "*", "20", ")", "\n", "return", "torch", ".", "nn", ".", "DataParallel", "(", "model", ")", ".", "cuda", "(", ")", "if", "len", "(", "args", ".", "gpu_ids", ")", ">", "1", "else", "model", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.GetData": [[102, 124], ["print", "Videodatasets.Videodatasets", "torch.utils.data.DataLoader", "Videodatasets.Videodatasets", "torch.utils.data.DataLoader", "Exception"], "function", ["None"], ["", "def", "GetData", "(", "args", ")", ":", "\n", "    ", "print", "(", "'Start load Data...'", ")", "\n", "if", "args", ".", "type", "==", "'M'", ":", "\n", "        ", "modality", "=", "'rgb'", "\n", "", "elif", "args", ".", "type", "==", "'K'", ":", "\n", "        ", "modality", "=", "'depth'", "\n", "", "elif", "args", ".", "type", "==", "'F'", ":", "\n", "        ", "modality", "=", "'flow'", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Error in load data modality!'", ")", "\n", "", "train_dataset", "=", "Videodatasets", "(", "args", ".", "data_dir_root", "+", "'/{0}/train'", ".", "format", "(", "modality", ")", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_train_lst.txt'", ".", "format", "(", "modality", ")", ",", "modality", ",", "\n", "args", ".", "sample_duration", ",", "phase", "=", "'train'", ")", "\n", "train_dataloader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "\n", "valid_dataset", "=", "Videodatasets", "(", "args", ".", "data_dir_root", "+", "'/{0}/valid'", ".", "format", "(", "modality", ")", ",", "\n", "args", ".", "dataset_splits", "+", "'/{0}_valid_lst.txt'", ".", "format", "(", "modality", ")", ",", "modality", ",", "\n", "args", ".", "sample_duration", ",", "phase", "=", "'valid'", ")", "\n", "valid_dataloader", "=", "DataLoader", "(", "valid_dataset", ",", "batch_size", "=", "args", ".", "testing_batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "return", "train_dataloader", ",", "valid_dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.train_AutoGesture_3DCDC.parse": [[267, 284], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "", "def", "parse", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--config'", ",", "type", "=", "str", ",", "default", "=", "'config.yml'", ",", "\n", "dest", "=", "'config'", ",", "help", "=", "'to set the parameters'", ")", "\n", "parser", ".", "add_argument", "(", "'-r'", ",", "'--resume'", ",", "default", "=", "''", ",", "help", "=", "'load model'", ")", "\n", "parser", ".", "add_argument", "(", "'-m'", ",", "'--mode'", ",", "help", "=", "'train or valid'", ")", "\n", "parser", ".", "add_argument", "(", "'-t'", ",", "'--type'", ",", "help", "=", "'K or M'", ")", "\n", "parser", ".", "add_argument", "(", "'-g'", ",", "'--gpu_ids'", ",", "default", "=", "\"0,1\"", ",", "help", "=", "\"gpu\"", ")", "\n", "parser", ".", "add_argument", "(", "'-l'", ",", "'--res_layer'", ",", "default", "=", "18", ",", "help", "=", "\"ResNet Layer\"", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--init_model'", ",", "default", "=", "\"\"", ",", "help", "=", "\"Pretrained model on 20 BN\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--Mode'", ",", "default", "=", "'score'", ",", "type", "=", "str", ",", "help", "=", "'Mode (score | feature). score outputs class scores. feature outputs features (after global average pooling).'", ")", "\n", "parser", ".", "add_argument", "(", "'--resnet_shortcut'", ",", "default", "=", "'A'", ",", "type", "=", "str", ",", "help", "=", "'Shortcut type of resnet (A | B)'", ")", "\n", "parser", ".", "set_defaults", "(", "verbose", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "help", "=", "''", ")", "\n", "parser", ".", "set_defaults", "(", "verbose", "=", "False", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.Videodatasets.Normaliztion.__call__": [[19, 22], ["None"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "Image", ")", ":", "\n", "        ", "new_video_x", "=", "(", "Image", "-", "127.5", ")", "/", "128", "\n", "return", "new_video_x", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.Videodatasets.Videodatasets.__init__": [[24, 39], ["torchvision.transforms.Compose", "filter", "list", "Videodatasets.Videodatasets.__init__.get_data_list_and_label"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset_root", ",", "ground_truth", ",", "typ", ",", "sample_duration", "=", "16", ",", "phase", "=", "'train'", ")", ":", "\n", "\n", "        ", "def", "get_data_list_and_label", "(", "data_df", ",", "typ", ")", ":", "\n", "            ", "T", "=", "0", "# if typ == 'M' else 1", "\n", "return", "[", "(", "lambda", "arr", ":", "(", "'/'", ".", "join", "(", "arr", "[", "T", "]", ".", "split", "(", "'/'", ")", "[", "1", ":", "]", ")", ",", "int", "(", "arr", "[", "1", "]", ")", ",", "int", "(", "arr", "[", "2", "]", ")", ")", ")", "(", "i", "[", ":", "-", "1", "]", ".", "split", "(", "' '", ")", ")", "\n", "for", "i", "in", "open", "(", "data_df", ")", ".", "readlines", "(", ")", "]", "\n", "\n", "", "self", ".", "dataset_root", "=", "dataset_root", "\n", "self", ".", "sample_duration", "=", "sample_duration", "\n", "self", ".", "phase", "=", "phase", "\n", "\n", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "Normaliztion", "(", ")", ",", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "\n", "lines", "=", "filter", "(", "lambda", "x", ":", "x", "[", "1", "]", ">", "8", ",", "get_data_list_and_label", "(", "ground_truth", ",", "typ", ")", ")", "\n", "self", ".", "inputs", "=", "list", "(", "lines", ")", "\n", "", "def", "transform_params", "(", "self", ",", "resize", "=", "(", "320", ",", "240", ")", ",", "crop_size", "=", "224", ",", "flip", "=", "0.5", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.Videodatasets.Videodatasets.transform_params": [[39, 47], ["random.randint", "random.randint", "random.uniform"], "methods", ["None"], ["", "def", "transform_params", "(", "self", ",", "resize", "=", "(", "320", ",", "240", ")", ",", "crop_size", "=", "224", ",", "flip", "=", "0.5", ")", ":", "\n", "        ", "if", "self", ".", "phase", "==", "'train'", ":", "\n", "            ", "left", ",", "top", "=", "random", ".", "randint", "(", "0", ",", "resize", "[", "0", "]", "-", "crop_size", ")", ",", "random", ".", "randint", "(", "0", ",", "resize", "[", "1", "]", "-", "crop_size", ")", "\n", "is_flip", "=", "True", "if", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "flip", "else", "False", "\n", "", "else", ":", "\n", "            ", "left", ",", "top", "=", "(", "resize", "[", "0", "]", "-", "crop_size", ")", "//", "2", ",", "(", "resize", "[", "1", "]", "-", "crop_size", ")", "//", "2", "\n", "is_flip", "=", "False", "\n", "", "return", "(", "left", ",", "top", ",", "left", "+", "crop_size", ",", "top", "+", "crop_size", ")", ",", "is_flip", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.Videodatasets.Videodatasets.__getitem__": [[48, 101], ["Videodatasets.Videodatasets.transform_params", "os.path.join", "Videodatasets.Videodatasets.__getitem__.Sample_Image"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.Videodatasets.Videodatasets.transform_params"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n        Returns:\n            tuple: (image, target) where target is class_index of the target class.\n        \"\"\"", "\n", "resize", "=", "(", "320", ",", "240", ")", "# default | (256, 256) may be helpful", "\n", "crop_rect", ",", "is_flip", "=", "self", ".", "transform_params", "(", "resize", "=", "resize", ",", "flip", "=", "1.0", ")", "# no flip", "\n", "\n", "def", "image_to_np", "(", "image", ")", ":", "\n", "            ", "\"\"\"\n            Returns:\n                np.ndarray: Image converted to array with shape (width, height, channels)\n            \"\"\"", "\n", "image_np", "=", "np", ".", "empty", "(", "[", "image", ".", "channels", ",", "image", ".", "height", ",", "image", ".", "width", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "image", ".", "copyto", "(", "image_np", ")", "\n", "image_np", "=", "np", ".", "transpose", "(", "image_np", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "return", "image_np", "\n", "\n", "", "def", "transform", "(", "img", ")", ":", "\n", "            ", "img", "=", "img", ".", "resize", "(", "resize", ")", "\n", "img", "=", "img", ".", "crop", "(", "crop_rect", ")", "\n", "if", "is_flip", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "return", "np", ".", "array", "(", "img", ".", "resize", "(", "(", "112", ",", "112", ")", ")", ")", "\n", "# return image_to_np(img.resize((112, 112)))", "\n", "", "def", "Sample_Image", "(", "imgs_path", ",", "frame_count", ")", ":", "\n", "            ", "sn", "=", "self", ".", "sample_duration", "\n", "if", "self", ".", "phase", "==", "'train'", ":", "\n", "                ", "f", "=", "lambda", "n", ":", "[", "(", "lambda", "n", ",", "arr", ":", "n", "if", "arr", "==", "[", "]", "else", "random", ".", "choice", "(", "arr", ")", ")", "(", "n", "*", "i", "/", "sn", ",", "\n", "range", "(", "int", "(", "n", "*", "i", "/", "sn", ")", ",", "\n", "max", "(", "int", "(", "n", "*", "i", "/", "sn", ")", "+", "1", ",", "\n", "int", "(", "n", "*", "(", "\n", "i", "+", "1", ")", "/", "sn", ")", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "sn", ")", "]", "\n", "", "else", ":", "\n", "                ", "f", "=", "lambda", "n", ":", "[", "(", "lambda", "n", ",", "arr", ":", "n", "if", "arr", "==", "[", "]", "else", "int", "(", "np", ".", "mean", "(", "arr", ")", ")", ")", "(", "n", "*", "i", "/", "sn", ",", "range", "(", "int", "(", "n", "*", "i", "/", "sn", ")", ",", "\n", "max", "(", "int", "(", "\n", "n", "*", "i", "/", "sn", ")", "+", "1", ",", "\n", "int", "(", "n", "*", "(", "\n", "i", "+", "1", ")", "/", "sn", ")", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "sn", ")", "]", "\n", "", "sl", "=", "f", "(", "frame_count", ")", "\n", "frams", "=", "[", "]", "\n", "for", "a", "in", "sl", ":", "\n", "# img = transform(accimage.Image(os.path.join(imgs_path, \"%06d.jpg\" % a))) #if use Accimage", "\n", "                ", "img", "=", "transform", "(", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "imgs_path", ",", "\"%06d.jpg\"", "%", "a", ")", ")", ")", "\n", "frams", ".", "append", "(", "self", ".", "transform", "(", "img", ")", ".", "view", "(", "3", ",", "112", ",", "112", ",", "1", ")", ")", "\n", "", "return", "torch", ".", "cat", "(", "frams", ",", "dim", "=", "3", ")", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "", "data_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dataset_root", ",", "self", ".", "inputs", "[", "index", "]", "[", "0", "]", ")", "\n", "clip", "=", "Sample_Image", "(", "data_path", ",", "self", ".", "inputs", "[", "index", "]", "[", "1", "]", ")", "\n", "return", "clip", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ",", "self", ".", "inputs", "[", "index", "]", "[", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.Single_modality.Videodatasets.Videodatasets.__len__": [[102, 104], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "inputs", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.ST_3DCDC.__init__": [[73, 80], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["", "else", ":", "\n", "#pdb.set_trace()", "\n", "            ", "[", "C_out", ",", "C_in", ",", "t", ",", "kernel_size", ",", "kernel_size", "]", "=", "self", ".", "conv", ".", "weight", ".", "shape", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.ST_3DCDC.forward": [[81, 100], ["operations.ST_3DCDC.conv", "math.fabs", "operations.ST_3DCDC.conv.weight.sum().sum().sum", "torch.conv3d", "torch.conv3d", "torch.conv3d", "operations.ST_3DCDC.conv.weight.sum().sum", "operations.ST_3DCDC.conv.weight.sum"], "methods", ["None"], ["out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "x", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "", "", "", "", "class", "T_3DCDC", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "'''\n    Temporal Center-difference based Convolutional layer (3D version) \n    theta: control the percentage of original convolution and centeral-difference convolution\n    '''", "\n", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.7", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.T_3DCDC.__init__": [[108, 115], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n", "            ", "return", "out_normal", "\n", "", "else", ":", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "            ", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "                    ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "2", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.T_3DCDC.forward": [[116, 139], ["operations.T_3DCDC.conv", "math.fabs", "torch.conv3d", "torch.conv3d", "torch.conv3d", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum", "operations.T_3DCDC.conv.weight[].sum", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum().sum", "operations.T_3DCDC.conv.weight[].sum", "operations.T_3DCDC.conv.weight[].sum", "operations.T_3DCDC.conv.weight[].sum", "operations.T_3DCDC.conv.weight[].sum"], "methods", ["None"], ["", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", "==", "5", ":", "\n", "                    ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "1", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "3", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "4", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n", "out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "x", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n", "\n", "\n", "\n", "", "", "", "", "class", "T_3DCDC_Avg", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "'''\n    Temporal Center-difference based Convolutional layer (3D version) \n    theta: control the percentage of original convolution and centeral-difference convolution\n    '''", "\n", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.7", ")", ":", "\n", "\n", "        ", "super", "(", "T_3DCDC_Avg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "padding", "=", "(", "padding", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "theta", "=", "theta", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.T_3DCDC_Avg.__init__": [[147, 155], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["", "else", ":", "\n", "\n", "# only CD works on temporal kernel size>1", "\n", "            ", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", ">", "1", ":", "\n", "                ", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "                    ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "2", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "", "if", "self", ".", "conv", ".", "weight", ".", "shape", "[", "2", "]", "==", "5", ":", "\n", "                    ", "kernel_diff", "=", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "1", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "3", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "+", "self", ".", "conv", ".", "weight", "[", ":", ",", ":", ",", "4", ",", ":", ",", ":", "]", ".", "sum", "(", "2", ")", ".", "sum", "(", "2", ")", "\n", "", "kernel_diff", "=", "kernel_diff", "[", ":", ",", ":", ",", "None", ",", "None", ",", "None", "]", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.T_3DCDC_Avg.forward": [[156, 180], ["operations.T_3DCDC_Avg.conv", "operations.T_3DCDC_Avg.avgpool", "math.fabs", "torch.conv3d", "torch.conv3d", "torch.conv3d", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum", "operations.T_3DCDC_Avg.conv.weight[].sum", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum().sum", "operations.T_3DCDC_Avg.conv.weight[].sum", "operations.T_3DCDC_Avg.conv.weight[].sum", "operations.T_3DCDC_Avg.conv.weight[].sum", "operations.T_3DCDC_Avg.conv.weight[].sum"], "methods", ["None"], ["out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "local_avg", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n", "\n", "\n", "\n", "", "", "", "", "class", "T_1DCDC", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "'''\n    Temporal Center-difference based Convolutional layer (3D version) \n    theta: control the percentage of original convolution and centeral-difference convolution\n    '''", "\n", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.7", ")", ":", "\n", "\n", "        ", "super", "(", "T_1DCDC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "padding", "=", "(", "padding", ",", "1", ",", "1", ")", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "theta", "=", "theta", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_normal", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.T_1DCDC.__init__": [[188, 195], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "x", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.T_1DCDC.forward": [[196, 214], ["operations.T_1DCDC.conv", "math.fabs", "torch.conv3d", "torch.conv3d", "torch.conv3d", "operations.T_1DCDC.conv.weight[].sum().sum", "operations.T_1DCDC.conv.weight[].sum().sum", "operations.T_1DCDC.conv.weight[].sum", "operations.T_1DCDC.conv.weight[].sum"], "methods", ["None"], ["\n", "", "", "", "", "class", "T_1DCDC_Avg", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "'''\n    Temporal Center-difference based Convolutional layer (3D version) \n    theta: control the percentage of original convolution and centeral-difference convolution\n    '''", "\n", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "theta", "=", "0.7", ")", ":", "\n", "\n", "        ", "super", "(", "T_1DCDC_Avg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "padding", "=", "(", "padding", ",", "1", ",", "1", ")", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "(", "kernel_size", ",", "1", ",", "1", ")", ",", "stride", "=", "stride", ",", "padding", "=", "(", "padding", ",", "0", ",", "0", ")", ")", "\n", "self", ".", "theta", "=", "theta", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_normal", "=", "self", ".", "conv", "(", "x", ")", "\n", "local_avg", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "\n", "if", "math", ".", "fabs", "(", "self", ".", "theta", "-", "0.0", ")", "<", "1e-8", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.T_1DCDC_Avg.__init__": [[222, 230], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["out_diff", "=", "F", ".", "conv3d", "(", "input", "=", "local_avg", ",", "weight", "=", "kernel_diff", ",", "bias", "=", "self", ".", "conv", ".", "bias", ",", "stride", "=", "self", ".", "conv", ".", "stride", ",", "padding", "=", "0", ",", "groups", "=", "self", ".", "conv", ".", "groups", ")", "\n", "return", "out_normal", "-", "self", ".", "theta", "*", "out_diff", "\n", "\n", "", "else", ":", "\n", "                ", "return", "out_normal", "\n", "\n", "", "", "", "", "class", "CDC_Unit", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "basic_conv", ",", "theta", ",", "affine", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.T_1DCDC_Avg.forward": [[231, 250], ["operations.T_1DCDC_Avg.conv", "operations.T_1DCDC_Avg.avgpool", "math.fabs", "torch.conv3d", "torch.conv3d", "torch.conv3d", "operations.T_1DCDC_Avg.conv.weight[].sum().sum", "operations.T_1DCDC_Avg.conv.weight[].sum().sum", "operations.T_1DCDC_Avg.conv.weight[].sum", "operations.T_1DCDC_Avg.conv.weight[].sum"], "methods", ["None"], ["    ", "super", "(", "CDC_Unit", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "basic_conv", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "theta", "=", "theta", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n", "\n", "\n", "\n", "\n", "", "", "class", "VaniConv3d", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "VaniConv3d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.CDC_Unit.__init__": [[254, 260], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "basic_conv", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "VaniConv3d_Spatial_1x3x3", "(", "nn", ".", "Module", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.CDC_Unit.forward": [[262, 264], ["operations.CDC_Unit.op"], "methods", ["None"], ["    ", "super", "(", "VaniConv3d_Spatial_1x3x3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.VaniConv3d.__init__": [[268, 274], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "VaniConv3d_Temporal_3x1x1", "(", "nn", ".", "Module", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.VaniConv3d.forward": [[276, 278], ["operations.VaniConv3d.op"], "methods", ["None"], ["    ", "super", "(", "VaniConv3d_Temporal_3x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.VaniConv3d_Spatial_1x3x3.__init__": [[282, 288], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n", "", "", "class", "VaniConv3d_Temporal_5x1x1", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.VaniConv3d_Spatial_1x3x3.forward": [[290, 292], ["operations.VaniConv3d_Spatial_1x3x3.op"], "methods", ["None"], ["self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "[", "5", ",", "1", ",", "1", "]", ",", "stride", "=", "stride", ",", "padding", "=", "[", "2", ",", "0", ",", "0", "]", ",", "bias", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.VaniConv3d_Temporal_3x1x1.__init__": [[296, 302], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "DilConv", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "affine", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.VaniConv3d_Temporal_3x1x1.forward": [[304, 306], ["operations.VaniConv3d_Temporal_3x1x1.op"], "methods", ["None"], ["self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.VaniConv3d_Temporal_5x1x1.__init__": [[310, 316], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "Dil_STCDC", "(", "nn", ".", "Module", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.VaniConv3d_Temporal_5x1x1.forward": [[318, 320], ["operations.VaniConv3d_Temporal_5x1x1.op"], "methods", ["None"], ["    ", "super", "(", "Dil_STCDC", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.DilConv.__init__": [[324, 332], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], [")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "Dil_TCDC", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "theta", ",", "affine", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.DilConv.forward": [[334, 336], ["operations.DilConv.op"], "methods", ["None"], ["self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "T_3DCDC", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "theta", "=", "theta", ",", "bias", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.Dil_STCDC.__init__": [[340, 348], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "operations.ST_3DCDC", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "SepConv", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "SepConv", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.Dil_STCDC.forward": [[350, 352], ["operations.Dil_STCDC.op"], "methods", ["None"], ["nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv3d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.Dil_TCDC.__init__": [[356, 364], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "operations.T_3DCDC", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "Identity", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.Dil_TCDC.forward": [[366, 368], ["operations.Dil_TCDC.op"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.SepConv.__init__": [[372, 383], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["\n", "", "", "class", "Zero", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "stride", ")", ":", "\n", "    ", "super", "(", "Zero", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "stride", "==", "1", ":", "\n", "      ", "return", "x", ".", "mul", "(", "0.", ")", "\n", "", "return", "x", "[", ":", ",", ":", ",", ":", ":", "self", ".", "stride", ",", ":", ":", "self", ".", "stride", "]", ".", "mul", "(", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.SepConv.forward": [[385, 387], ["operations.SepConv.op"], "methods", ["None"], ["\n", "  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ")", ":", "\n", "    ", "super", "(", "Zero_Connection", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.Identity.__init__": [[391, 393], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "if", "self", ".", "stride", "==", "1", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.Identity.forward": [[394, 396], ["None"], "methods", ["None"], ["      ", "return", "x", ".", "mul", "(", "0.", ")", "\n", "", "return", "x", "[", ":", ",", ":", ",", ":", ":", "self", ".", "stride", "[", "0", "]", ",", ":", ",", ":", "]", ".", "mul", "(", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.Zero.__init__": [[400, 403], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "FactorizedReduce_Spatial", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "C_out", "%", "2", "==", "0", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.Zero.forward": [[404, 408], ["x[].mul", "x.mul"], "methods", ["None"], ["self", ".", "conv_1", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.Zero_Connection.__init__": [[412, 416], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "out", "\n", "\n", "", "", "class", "FactorizedReduce_SpatialTemporal", "(", "nn", ".", "Module", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.Zero_Connection.forward": [[417, 422], ["operations.Zero_Connection.conv", "x[].mul", "operations.Zero_Connection.mul"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "FactorizedReduce_SpatialTemporal", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "C_out", "%", "2", "==", "0", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.FactorizedReduce_Spatial.__init__": [[426, 433], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["    ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "#out = torch.cat([self.conv_1(x), self.conv_2(x[:,:,1:,1:])], dim=1)", "\n", "out", "=", "torch", ".", "cat", "(", "[", "self", ".", "conv_1", "(", "x", ")", ",", "self", ".", "conv_2", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", "1", ":", ",", "1", ":", "]", ")", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "out", "\n", "\n", "\n", "", "", "class", "MaxPool_ST", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.FactorizedReduce_Spatial.forward": [[434, 440], ["operations.FactorizedReduce_Spatial.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "operations.FactorizedReduce_Spatial.bn", "operations.FactorizedReduce_Spatial.conv_1", "operations.FactorizedReduce_Spatial.conv_2"], "methods", ["None"], ["\n", "  ", "def", "__init__", "(", "self", ",", "stride", ")", ":", "\n", "    ", "super", "(", "MaxPool_ST", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Maxpool", "=", "nn", ".", "MaxPool3d", "(", "stride", ",", "stride", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "Maxpool", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.FactorizedReduce_SpatialTemporal.__init__": [[444, 451], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["\n", "\n", "", "", "class", "MaxPool_3x1x1", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "MaxPool_3x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Maxpool", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "3", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "1", ",", "0", ",", "0", "]", ",", "stride", "=", "stride", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.FactorizedReduce_SpatialTemporal.forward": [[452, 458], ["operations.FactorizedReduce_SpatialTemporal.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "operations.FactorizedReduce_SpatialTemporal.bn", "operations.FactorizedReduce_SpatialTemporal.conv_1", "operations.FactorizedReduce_SpatialTemporal.conv_2"], "methods", ["None"], ["self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "Maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.MaxPool_ST.__init__": [[462, 465], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "MaxPool_5x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Maxpool", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "5", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "2", ",", "0", ",", "0", "]", ",", "stride", "=", "stride", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.MaxPool_ST.forward": [[466, 470], ["operations.MaxPool_ST.Maxpool"], "methods", ["None"], ["self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "Maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "self", ".", "conv", "(", "x", ")", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.MaxPool_3x1x1.__init__": [[474, 479], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["\n", "", "", "class", "AvgPool_3x1x1", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "AvgPool_3x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Avgpool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "[", "3", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "1", ",", "0", ",", "0", "]", ",", "stride", "=", "stride", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.MaxPool_3x1x1.forward": [[480, 485], ["operations.MaxPool_3x1x1.Maxpool", "operations.MaxPool_3x1x1.bn", "operations.MaxPool_3x1x1.conv"], "methods", ["None"], ["self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "Avgpool", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "self", ".", "conv", "(", "x", ")", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.MaxPool_5x1x1.__init__": [[489, 494], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["", "", "class", "AvgPool_5x1x1", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "stride", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "AvgPool_5x1x1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Avgpool", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "[", "5", ",", "1", ",", "1", "]", ",", "padding", "=", "[", "2", ",", "0", ",", "0", "]", ",", "stride", "=", "stride", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.MaxPool_5x1x1.forward": [[495, 500], ["operations.MaxPool_5x1x1.Maxpool", "operations.MaxPool_5x1x1.bn", "operations.MaxPool_5x1x1.conv"], "methods", ["None"], ["self", ".", "bn", "=", "nn", ".", "BatchNorm3d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "Avgpool", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.AvgPool_3x1x1.__init__": [[504, 509], ["torch.Module.__init__", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], []], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.AvgPool_3x1x1.forward": [[510, 515], ["operations.AvgPool_3x1x1.Avgpool", "operations.AvgPool_3x1x1.bn", "operations.AvgPool_3x1x1.conv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.AvgPool_5x1x1.__init__": [[519, 524], ["torch.Module.__init__", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], []], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.operations.AvgPool_5x1x1.forward": [[525, 530], ["operations.AvgPool_5x1x1.Avgpool", "operations.AvgPool_5x1x1.bn", "operations.AvgPool_5x1x1.conv"], "methods", ["None"], []], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.Cell.__init__": [[13, 37], ["torch.Module.__init__", "VaniConv3d", "AutoGesture_searched.Cell._compile", "VaniConv3d", "VaniConv3d", "zip", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__", "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.Cell._compile"], ["    ", "super", "(", "Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# stride = [1,2,2]", "\n", "if", "reduction_prev", ":", "\n", "      ", "self", ".", "preprocess0", "=", "VaniConv3d", "(", "C_prev_prev", ",", "C", ",", "1", ",", "[", "1", ",", "2", ",", "2", "]", ",", "0", ",", "affine", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "preprocess0", "=", "VaniConv3d", "(", "C_prev_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "", "self", ".", "preprocess1", "=", "VaniConv3d", "(", "C_prev", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ")", "\n", "\n", "# branch 8 frame", "\n", "if", "normal", "==", "1", ":", "\n", "        ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal8", ")", "\n", "concat", "=", "genotype", ".", "normal_concat8", "\n", "# branch 16 frame", "\n", "", "if", "normal", "==", "2", ":", "\n", "        ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal16", ")", "\n", "concat", "=", "genotype", ".", "normal_concat16", "\n", "# branch 32 frame", "\n", "", "if", "normal", "==", "3", ":", "\n", "        ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal32", ")", "\n", "concat", "=", "genotype", ".", "normal_concat32", "\n", "\n", "", "self", ".", "_compile", "(", "C", ",", "op_names", ",", "indices", ",", "concat", ")", "\n", "\n", "", "def", "_compile", "(", "self", ",", "C", ",", "op_names", ",", "indices", ",", "concat", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.Cell._compile": [[38, 50], ["len", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "zip", "len", "len", "len"], "methods", ["None"], ["    ", "assert", "len", "(", "op_names", ")", "==", "len", "(", "indices", ")", "\n", "self", ".", "_steps", "=", "len", "(", "op_names", ")", "//", "2", "\n", "self", ".", "_concat", "=", "concat", "\n", "self", ".", "multiplier", "=", "len", "(", "concat", ")", "\n", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "name", ",", "index", "in", "zip", "(", "op_names", ",", "indices", ")", ":", "\n", "      ", "stride", "=", "1", "\n", "op", "=", "OPS", "[", "name", "]", "(", "C", ",", "stride", ",", "True", ")", "\n", "self", ".", "_ops", "+=", "[", "op", "]", "\n", "", "self", ".", "_indices", "=", "indices", "\n", "\n", "", "def", "forward", "(", "self", ",", "s0", ",", "s1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.Cell.forward": [[51, 68], ["AutoGesture_searched.Cell.preprocess0", "AutoGesture_searched.Cell.preprocess1", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "op1", "op2"], "methods", ["None"], ["    ", "s0", "=", "self", ".", "preprocess0", "(", "s0", ")", "\n", "s1", "=", "self", ".", "preprocess1", "(", "s1", ")", "\n", "\n", "#pdb.set_trace()", "\n", "\n", "states", "=", "[", "s0", ",", "s1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "      ", "h1", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "]", "]", "\n", "h2", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "+", "1", "]", "]", "\n", "op1", "=", "self", ".", "_ops", "[", "2", "*", "i", "]", "\n", "op2", "=", "self", ".", "_ops", "[", "2", "*", "i", "+", "1", "]", "\n", "h1", "=", "op1", "(", "h1", ")", "\n", "h2", "=", "op2", "(", "h2", ")", "\n", "s", "=", "h1", "+", "h2", "\n", "states", "+=", "[", "s", "]", "\n", "", "return", "torch", ".", "cat", "(", "[", "states", "[", "i", "]", "for", "i", "in", "self", ".", "_concat", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture.__init__": [[75, 234], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "AutoGesture_searched.Cell", "AutoGesture_searched.Cell", "AutoGesture_searched.Cell"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C8", ",", "C16", ",", "C32", ",", "num_classes", ",", "layers", ",", "genotype", ")", ":", "\n", "    ", "super", "(", "AutoGesture", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_C8", "=", "C8", "# 48", "\n", "self", ".", "_C16", "=", "C16", "# 32", "\n", "self", ".", "_C32", "=", "C32", "# 16", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_layers", "=", "layers", "\n", "\n", "\n", "self", ".", "MaxpoolSpa", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", "\n", "self", ".", "AvgpoolSpa", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "\n", "# lateral 16", "\n", "self", ".", "lateral16_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "2", ",", "C16", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral16_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "2", "*", "4", ",", "C16", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral16_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "4", "*", "4", ",", "C16", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "4", ")", "\n", ")", "\n", "\n", "# lateral 32", "\n", "self", ".", "lateral32_16_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_16_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", "*", "4", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_16_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "4", "*", "4", ",", "C32", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "4", ")", "\n", ")", "\n", "self", ".", "lateral32_8_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_8_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", "*", "4", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_8_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "4", "*", "4", ",", "C32", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "4", ")", "\n", ")", "\n", "\n", "\n", "\n", "\n", "# 8 frames", "\n", "self", ".", "stem0_8", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_8", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C8", ",", "2", "*", "C8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "\n", "# 16 frames", "\n", "self", ".", "stem0_16", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_16", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C16", ",", "2", "*", "C16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "# 32 frames", "\n", "self", ".", "stem0_32", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_32", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C32", ",", "2", "*", "C32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "\n", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", "=", "C8", ",", "(", "2", "*", "C8", "+", "2", "*", "C16", "+", "2", "*", "C32", ")", ",", "2", "*", "C8", "\n", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", "=", "C16", ",", "(", "2", "*", "C16", "+", "2", "*", "C32", ")", ",", "2", "*", "C16", "\n", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", "=", "C32", ",", "2", "*", "C32", ",", "2", "*", "C32", "\n", "\n", "\n", "# 8 ", "\n", "self", ".", "cells8", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "1", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "3", ",", "6", "]", ":", "\n", "        ", "C_curr8", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "3", ":", "\n", "            ", "C_prev8", "=", "2", "*", "C8", "*", "4", "+", "2", "*", "C16", "+", "2", "*", "C32", "\n", "\n", "", "if", "i", "==", "6", ":", "\n", "            ", "C_prev8", "=", "4", "*", "C8", "*", "4", "+", "4", "*", "C16", "+", "4", "*", "C32", "\n", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells8", "+=", "[", "cell", "]", "\n", "C_prev_prev8", ",", "C_prev8", "=", "C_prev8", ",", "cell", ".", "multiplier", "*", "C_curr8", "\n", "\n", "\n", "# 16 ", "\n", "", "self", ".", "cells16", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "2", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "3", ",", "6", "]", ":", "\n", "        ", "C_curr16", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "3", ":", "\n", "            ", "C_prev16", "=", "2", "*", "C16", "*", "4", "+", "2", "*", "C32", "\n", "\n", "", "if", "i", "==", "6", ":", "\n", "            ", "C_prev16", "=", "4", "*", "C16", "*", "4", "+", "4", "*", "C32", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells16", "+=", "[", "cell", "]", "\n", "C_prev_prev16", ",", "C_prev16", "=", "C_prev16", ",", "cell", ".", "multiplier", "*", "C_curr16", "\n", "\n", "# 32  ", "\n", "", "self", ".", "cells32", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "3", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "3", ",", "6", "]", ":", "\n", "        ", "C_curr32", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture.forward": [[235, 318], ["AutoGesture_searched.AutoGesture.stem0_32", "AutoGesture_searched.AutoGesture.stem1_32", "AutoGesture_searched.AutoGesture.AvgpoolSpa", "AutoGesture_searched.AutoGesture.lateral32_16_1", "AutoGesture_searched.AutoGesture.lateral32_8_1", "AutoGesture_searched.AutoGesture.stem0_16", "AutoGesture_searched.AutoGesture.stem1_16", "AutoGesture_searched.AutoGesture.AvgpoolSpa", "AutoGesture_searched.AutoGesture.lateral16_1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture.stem0_8", "AutoGesture_searched.AutoGesture.stem1_8", "AutoGesture_searched.AutoGesture.AvgpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "enumerate", "enumerate", "enumerate", "AutoGesture_searched.AutoGesture.global_pooling", "AutoGesture_searched.AutoGesture.global_pooling", "AutoGesture_searched.AutoGesture.global_pooling", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture.classifier", "AutoGesture_searched.AutoGesture.dropout", "cell", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "AutoGesture_searched.AutoGesture.lateral32_16_2", "AutoGesture_searched.AutoGesture.lateral32_8_2", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "AutoGesture_searched.AutoGesture.lateral32_16_3", "AutoGesture_searched.AutoGesture.lateral32_8_3", "cell", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "AutoGesture_searched.AutoGesture.lateral16_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "AutoGesture_searched.AutoGesture.lateral16_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cell", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture.MaxpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells32", "+=", "[", "cell", "]", "\n", "C_prev_prev32", ",", "C_prev32", "=", "C_prev32", ",", "cell", ".", "multiplier", "*", "C_curr32", "\n", "\n", "\n", "# head", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "1", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev8", "+", "C_prev16", "+", "C_prev32", ",", "num_classes", ")", "\n", "\n", "\n", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "\n", "## inputs 32 x 3 x 112 x 112 ##", "\n", "\n", "# 32", "\n", "    ", "s0_32", "=", "self", ".", "stem0_32", "(", "inputs", ")", "# 32*28*28 ", "\n", "s1_32", "=", "self", ".", "stem1_32", "(", "s0_32", ")", "# 16*28*28  ", "\n", "s0_32", "=", "self", ".", "AvgpoolSpa", "(", "s0_32", ")", "# 16*28*28 ", "\n", "s1_32_lateral_16_1", "=", "self", ".", "lateral32_16_1", "(", "s1_32", ")", "\n", "s1_32_lateral_8_1", "=", "self", ".", "lateral32_8_1", "(", "s1_32", ")", "\n", "\n", "\n", "# 16", "\n", "s0_16", "=", "self", ".", "stem0_16", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ",", ":", "]", ")", "# 16*28*28 ", "\n", "s1_16", "=", "self", ".", "stem1_16", "(", "s0_16", ")", "# 8*28*28  ", "\n", "s0_16", "=", "self", ".", "AvgpoolSpa", "(", "s0_16", ")", "# 8*28*28 ", "\n", "s1_16_lateral1", "=", "self", ".", "lateral16_1", "(", "s1_16", ")", "\n", "\n", "\n", "s1_16", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_16_1", ",", "s1_16", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "# 8 ", "\n", "s0_8", "=", "self", ".", "stem0_8", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "4", ",", ":", ",", ":", "]", ")", "# 8*28*28 ", "\n", "s1_8", "=", "self", ".", "stem1_8", "(", "s0_8", ")", "# 4*28*28  ", "\n", "s0_8", "=", "self", ".", "AvgpoolSpa", "(", "s0_8", ")", "# 4*28*28 ", "\n", "\n", "s1_8", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_8_1", ",", "s1_16_lateral1", ",", "s1_8", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "# 32", "\n", "for", "ii", ",", "cell", "in", "enumerate", "(", "self", ".", "cells32", ")", ":", "\n", "\n", "      ", "s0_32", ",", "s1_32", "=", "s1_32", ",", "cell", "(", "s0_32", ",", "s1_32", ")", "\n", "\n", "if", "ii", "==", "2", ":", "\n", "        ", "s1_32", "=", "self", ".", "MaxpoolSpa", "(", "s1_32", ")", "\n", "s1_32_lateral_16_2", "=", "self", ".", "lateral32_16_2", "(", "s1_32", ")", "\n", "s1_32_lateral_8_2", "=", "self", ".", "lateral32_8_2", "(", "s1_32", ")", "\n", "\n", "", "if", "ii", "==", "5", ":", "\n", "        ", "s1_32", "=", "self", ".", "MaxpoolSpa", "(", "s1_32", ")", "\n", "s1_32_lateral_16_3", "=", "self", ".", "lateral32_16_3", "(", "s1_32", ")", "\n", "s1_32_lateral_8_3", "=", "self", ".", "lateral32_8_3", "(", "s1_32", ")", "\n", "\n", "\n", "\n", "# 16", "\n", "", "", "for", "ii", ",", "cell", "in", "enumerate", "(", "self", ".", "cells16", ")", ":", "\n", "\n", "      ", "s0_16", ",", "s1_16", "=", "s1_16", ",", "cell", "(", "s0_16", ",", "s1_16", ")", "\n", "\n", "if", "ii", "==", "2", ":", "\n", "        ", "branch16_Feature28", "=", "s1_16", "# [64, 8, 28, 28]", "\n", "s1_16", "=", "self", ".", "MaxpoolSpa", "(", "s1_16", ")", "\n", "s1_16_lateral2", "=", "self", ".", "lateral16_2", "(", "s1_16", ")", "\n", "s1_16", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_16_2", ",", "s1_16", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "ii", "==", "5", ":", "\n", "        ", "branch16_Feature14", "=", "s1_16", "# [128, 8, 14, 14]", "\n", "s1_16", "=", "self", ".", "MaxpoolSpa", "(", "s1_16", ")", "\n", "s1_16_lateral3", "=", "self", ".", "lateral16_3", "(", "s1_16", ")", "\n", "s1_16", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_16_3", ",", "s1_16", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "ii", "==", "7", ":", "\n", "        ", "branch16_Feature7", "=", "s1_16", "# [128, 8, 7, 7]", "\n", "\n", "\n", "\n", "# 8  ", "\n", "", "", "for", "ii", ",", "cell", "in", "enumerate", "(", "self", ".", "cells8", ")", ":", "\n", "\n", "      ", "s0_8", ",", "s1_8", "=", "s1_8", ",", "cell", "(", "s0_8", ",", "s1_8", ")", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__": [[325, 484], ["torch.Module.__init__", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.AvgPool3d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.AdaptiveAvgPool3d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool3d", "torch.MaxPool3d", "torch.MaxPool3d", "AutoGesture_searched.Cell", "AutoGesture_searched.Cell", "AutoGesture_searched.Cell"], "methods", ["home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.__init__"], ["        ", "s1_8", "=", "self", ".", "MaxpoolSpa", "(", "s1_8", ")", "\n", "s1_8", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_8_3", ",", "s1_16_lateral3", ",", "s1_8", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "\n", "", "", "out_32", "=", "self", ".", "global_pooling", "(", "s1_32", ")", "# C32*8*4*=8*8*4=512       ", "\n", "out_16", "=", "self", ".", "global_pooling", "(", "s1_16", ")", "# C16*8*4*=16*8*4=1024 ", "\n", "out_8", "=", "self", ".", "global_pooling", "(", "s1_8", ")", "# C8*8*4=24*8*4=1592", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out_32", ",", "out_16", ",", "out_8", "]", ",", "dim", "=", "1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "self", ".", "dropout", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", ")", "# dropout=0.5", "\n", "#logits = self.classifier(out.view(out.size(0),-1))", "\n", "\n", "#return logits, branch16_Feature28, branch16_Feature14, branch16_Feature7", "\n", "return", "logits", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "# steps = how many nodes in a cell; multiplier = how many nodes to be concated ", "\n", "# Default, layer = 12, steps = 4, multiplier = 4", "\n", "# [3 x 16 x 112 x 112]", "\n", "# 8 layers, each 2 layers with one MaxPool(stride=[1,2,2])", "\n", "", "", "class", "AutoGesture_12layers", "(", "nn", ".", "Module", ")", ":", "\n", "  ", "def", "__init__", "(", "self", ",", "C8", ",", "C16", ",", "C32", ",", "num_classes", ",", "layers", ",", "genotype", ")", ":", "\n", "    ", "super", "(", "AutoGesture_12layers", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_C8", "=", "C8", "# 48", "\n", "self", ".", "_C16", "=", "C16", "# 32", "\n", "self", ".", "_C32", "=", "C32", "# 16", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_layers", "=", "layers", "\n", "\n", "\n", "self", ".", "MaxpoolSpa", "=", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", "\n", "self", ".", "AvgpoolSpa", "=", "nn", ".", "AvgPool3d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "\n", "# lateral 16", "\n", "self", ".", "lateral16_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "2", ",", "C16", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral16_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "2", "*", "4", ",", "C16", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral16_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C16", "*", "4", "*", "4", ",", "C16", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", "*", "4", ")", "\n", ")", "\n", "\n", "# lateral 32", "\n", "self", ".", "lateral32_16_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_16_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", "*", "4", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_16_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "4", "*", "4", ",", "C32", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "2", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "4", ")", "\n", ")", "\n", "self", ".", "lateral32_8_1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_8_2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "2", "*", "4", ",", "C32", "*", "2", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "2", ")", "\n", ")", "\n", "self", ".", "lateral32_8_3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "C32", "*", "4", "*", "4", ",", "C32", "*", "4", ",", "kernel_size", "=", "(", "5", ",", "1", ",", "1", ")", ",", "stride", "=", "(", "4", ",", "1", ",", "1", ")", ",", "bias", "=", "False", ",", "padding", "=", "(", "2", ",", "0", ",", "0", ")", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", "*", "4", ")", "\n", ")", "\n", "\n", "\n", "\n", "\n", "# 8 frames", "\n", "self", ".", "stem0_8", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C8", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_8", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C8", ",", "2", "*", "C8", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C8", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "\n", "# 16 frames", "\n", "self", ".", "stem0_16", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_16", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C16", ",", "2", "*", "C16", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C16", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "# 32 frames", "\n", "self", ".", "stem0_32", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv3d", "(", "3", ",", "C32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "[", "1", ",", "3", ",", "3", "]", ",", "padding", "=", "[", "0", ",", "1", ",", "1", "]", ",", "stride", "=", "[", "1", ",", "2", ",", "2", "]", ")", ",", "\n", ")", "\n", "self", ".", "stem1_32", "=", "nn", ".", "Sequential", "(", "\n", "\n", "nn", ".", "Conv3d", "(", "C32", ",", "2", "*", "C32", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm3d", "(", "2", "*", "C32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool3d", "(", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "\n", "\n", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", "=", "C8", ",", "(", "2", "*", "C8", "+", "2", "*", "C16", "+", "2", "*", "C32", ")", ",", "2", "*", "C8", "\n", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", "=", "C16", ",", "(", "2", "*", "C16", "+", "2", "*", "C32", ")", ",", "2", "*", "C16", "\n", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", "=", "C32", ",", "2", "*", "C32", ",", "2", "*", "C32", "\n", "\n", "\n", "# 8 ", "\n", "self", ".", "cells8", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "1", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "        ", "C_curr8", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "4", ":", "\n", "            ", "C_prev8", "=", "2", "*", "C8", "*", "4", "+", "2", "*", "C16", "+", "2", "*", "C32", "\n", "\n", "", "if", "i", "==", "9", ":", "\n", "            ", "C_prev8", "=", "4", "*", "C8", "*", "4", "+", "4", "*", "C16", "+", "4", "*", "C32", "\n", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev8", ",", "C_prev8", ",", "C_curr8", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells8", "+=", "[", "cell", "]", "\n", "C_prev_prev8", ",", "C_prev8", "=", "C_prev8", ",", "cell", ".", "multiplier", "*", "C_curr8", "\n", "\n", "\n", "# 16 ", "\n", "", "self", ".", "cells16", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "2", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ZitongYu_3DCDC-NAS.network.AutoGesture_searched.AutoGesture_12layers.forward": [[485, 568], ["AutoGesture_searched.AutoGesture_12layers.stem0_32", "AutoGesture_searched.AutoGesture_12layers.stem1_32", "AutoGesture_searched.AutoGesture_12layers.AvgpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral32_16_1", "AutoGesture_searched.AutoGesture_12layers.lateral32_8_1", "AutoGesture_searched.AutoGesture_12layers.stem0_16", "AutoGesture_searched.AutoGesture_12layers.stem1_16", "AutoGesture_searched.AutoGesture_12layers.AvgpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral16_1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture_12layers.stem0_8", "AutoGesture_searched.AutoGesture_12layers.stem1_8", "AutoGesture_searched.AutoGesture_12layers.AvgpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "enumerate", "enumerate", "enumerate", "AutoGesture_searched.AutoGesture_12layers.global_pooling", "AutoGesture_searched.AutoGesture_12layers.global_pooling", "AutoGesture_searched.AutoGesture_12layers.global_pooling", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture_12layers.classifier", "AutoGesture_searched.AutoGesture_12layers.dropout", "cell", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral32_16_2", "AutoGesture_searched.AutoGesture_12layers.lateral32_8_2", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral32_16_3", "AutoGesture_searched.AutoGesture_12layers.lateral32_8_3", "cell", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral16_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "AutoGesture_searched.AutoGesture_12layers.lateral16_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cell", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "AutoGesture_searched.AutoGesture_12layers.MaxpoolSpa", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "torch.cat.view", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["      ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "        ", "C_curr16", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "\n", "if", "i", "==", "4", ":", "\n", "            ", "C_prev16", "=", "2", "*", "C16", "*", "4", "+", "2", "*", "C32", "\n", "\n", "", "if", "i", "==", "9", ":", "\n", "            ", "C_prev16", "=", "4", "*", "C16", "*", "4", "+", "4", "*", "C32", "\n", "", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev16", ",", "C_prev16", ",", "C_curr16", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells16", "+=", "[", "cell", "]", "\n", "C_prev_prev16", ",", "C_prev16", "=", "C_prev16", ",", "cell", ".", "multiplier", "*", "C_curr16", "\n", "\n", "# 32  ", "\n", "", "self", ".", "cells32", "=", "nn", ".", "ModuleList", "(", ")", "\n", "normal", "=", "3", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "i", "in", "[", "4", ",", "9", "]", ":", "\n", "        ", "C_curr32", "*=", "2", "\n", "reduction_prev", "=", "True", "\n", "", "else", ":", "\n", "        ", "reduction_prev", "=", "False", "\n", "", "cell", "=", "Cell", "(", "genotype", ",", "C_prev_prev32", ",", "C_prev32", ",", "C_curr32", ",", "reduction_prev", ",", "normal", ")", "\n", "self", ".", "cells32", "+=", "[", "cell", "]", "\n", "C_prev_prev32", ",", "C_prev32", "=", "C_prev32", ",", "cell", ".", "multiplier", "*", "C_curr32", "\n", "\n", "\n", "# head", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "1", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "C_prev8", "+", "C_prev16", "+", "C_prev32", ",", "num_classes", ")", "\n", "\n", "\n", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "\n", "## inputs 32 x 3 x 112 x 112 ##", "\n", "\n", "# 32", "\n", "    ", "s0_32", "=", "self", ".", "stem0_32", "(", "inputs", ")", "# 32*28*28 ", "\n", "s1_32", "=", "self", ".", "stem1_32", "(", "s0_32", ")", "# 16*28*28  ", "\n", "s0_32", "=", "self", ".", "AvgpoolSpa", "(", "s0_32", ")", "# 16*28*28 ", "\n", "s1_32_lateral_16_1", "=", "self", ".", "lateral32_16_1", "(", "s1_32", ")", "\n", "s1_32_lateral_8_1", "=", "self", ".", "lateral32_8_1", "(", "s1_32", ")", "\n", "\n", "\n", "# 16", "\n", "s0_16", "=", "self", ".", "stem0_16", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "2", ",", ":", ",", ":", "]", ")", "# 16*28*28 ", "\n", "s1_16", "=", "self", ".", "stem1_16", "(", "s0_16", ")", "# 8*28*28  ", "\n", "s0_16", "=", "self", ".", "AvgpoolSpa", "(", "s0_16", ")", "# 8*28*28 ", "\n", "s1_16_lateral1", "=", "self", ".", "lateral16_1", "(", "s1_16", ")", "\n", "\n", "\n", "s1_16", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_16_1", ",", "s1_16", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "# 8 ", "\n", "s0_8", "=", "self", ".", "stem0_8", "(", "inputs", "[", ":", ",", ":", ",", ":", ":", "4", ",", ":", ",", ":", "]", ")", "# 8*28*28 ", "\n", "s1_8", "=", "self", ".", "stem1_8", "(", "s0_8", ")", "# 4*28*28  ", "\n", "s0_8", "=", "self", ".", "AvgpoolSpa", "(", "s0_8", ")", "# 4*28*28 ", "\n", "\n", "s1_8", "=", "torch", ".", "cat", "(", "[", "s1_32_lateral_8_1", ",", "s1_16_lateral1", ",", "s1_8", "]", ",", "dim", "=", "1", ")", "\n", "\n", "\n", "# 32", "\n", "for", "ii", ",", "cell", "in", "enumerate", "(", "self", ".", "cells32", ")", ":", "\n", "\n", "      ", "s0_32", ",", "s1_32", "=", "s1_32", ",", "cell", "(", "s0_32", ",", "s1_32", ")", "\n", "\n", "if", "ii", "==", "3", ":", "\n", "        ", "s1_32", "=", "self", ".", "MaxpoolSpa", "(", "s1_32", ")", "\n", "s1_32_lateral_16_2", "=", "self", ".", "lateral32_16_2", "(", "s1_32", ")", "\n", "s1_32_lateral_8_2", "=", "self", ".", "lateral32_8_2", "(", "s1_32", ")", "\n", "\n", "", "if", "ii", "==", "8", ":", "\n", "        ", "s1_32", "=", "self", ".", "MaxpoolSpa", "(", "s1_32", ")", "\n", "s1_32_lateral_16_3", "=", "self", ".", "lateral32_16_3", "(", "s1_32", ")", "\n", "s1_32_lateral_8_3", "=", "self", ".", "lateral32_8_3", "(", "s1_32", ")", "\n", "\n", "\n", "\n", "# 16", "\n"]]}