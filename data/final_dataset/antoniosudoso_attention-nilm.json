{"home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.attention_layer.AttentionLayer.__init__": [[6, 11], ["super().__init__", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense"], "methods", ["home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.data_generator.DataGenerator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "units", ")", ":", "\n", "        ", "super", "(", "AttentionLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "weight_initializer", "=", "'he_normal'", "\n", "self", ".", "W", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "units", ",", "kernel_initializer", "=", "weight_initializer", ")", "\n", "self", ".", "V", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "1", ",", "kernel_initializer", "=", "weight_initializer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.attention_layer.AttentionLayer.call": [[12, 26], ["attention_layer.AttentionLayer.V", "tensorflow.nn.softmax", "tensorflow.reduce_sum", "tensorflow.nn.tanh", "attention_layer.AttentionLayer.W"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "encoder_output", ",", "**", "kwargs", ")", ":", "\n", "# encoder_output shape == (batch_size, seq_length, latent_dim)", "\n", "# score shape == (batch_size, seq_length, 1)", "\n", "# we get 1 at the last axis because we are applying score to self.V", "\n", "# the shape of the tensor before applying self.V is (batch_size, seq_length, units)", "\n", "        ", "score", "=", "self", ".", "V", "(", "tf", ".", "nn", ".", "tanh", "(", "self", ".", "W", "(", "encoder_output", ")", ")", ")", "\n", "\n", "# attention_weights shape == (batch_size, seq_length, 1)", "\n", "attention_weights", "=", "tf", ".", "nn", ".", "softmax", "(", "score", ",", "axis", "=", "1", ")", "\n", "\n", "# context_vector shape after sum == (batch_size, hidden_size)", "\n", "context_vector", "=", "attention_weights", "*", "encoder_output", "\n", "context_vector", "=", "tf", ".", "reduce_sum", "(", "context_vector", ",", "axis", "=", "1", ")", "\n", "return", "context_vector", ",", "attention_weights", "\n", "", "", ""]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.model.build_model": [[5, 41], ["tensorflow.keras.Input", "tensorflow.keras.Model", "tensorflow.keras.Model", "tensorflow.keras.optimizers.SGD", "tf.keras.Model.compile", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Flatten", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Conv1D", "tensorflow.keras.layers.Bidirectional", "attention_layer.AttentionLayer", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Multiply", "tensorflow.keras.layers.LSTM", "tensorflow.keras.losses.MeanSquaredError", "tensorflow.keras.losses.BinaryCrossentropy"], "function", ["None"], ["def", "build_model", "(", "window_size", ",", "filters", ",", "kernel_size", ",", "units", ")", ":", "\n", "    ", "input_data", "=", "tf", ".", "keras", ".", "Input", "(", "shape", "=", "(", "window_size", ",", "1", ")", ")", "\n", "\n", "# CLASSIFICATION SUBNETWORK", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv1D", "(", "filters", "=", "30", ",", "kernel_size", "=", "10", ",", "activation", "=", "'relu'", ")", "(", "input_data", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv1D", "(", "filters", "=", "30", ",", "kernel_size", "=", "8", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv1D", "(", "filters", "=", "40", ",", "kernel_size", "=", "6", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv1D", "(", "filters", "=", "50", ",", "kernel_size", "=", "5", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv1D", "(", "filters", "=", "50", ",", "kernel_size", "=", "5", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Conv1D", "(", "filters", "=", "50", ",", "kernel_size", "=", "5", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Flatten", "(", ")", "(", "x", ")", "\n", "x", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "units", "=", "1024", ",", "activation", "=", "'relu'", ",", "kernel_initializer", "=", "'he_normal'", ")", "(", "x", ")", "\n", "classification_output", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "units", "=", "window_size", ",", "activation", "=", "'sigmoid'", ",", "name", "=", "\"classification_output\"", ")", "(", "x", ")", "\n", "\n", "#REGRESSION SUBNETWORK", "\n", "y", "=", "tf", ".", "keras", ".", "layers", ".", "Conv1D", "(", "filters", "=", "filters", ",", "kernel_size", "=", "kernel_size", ",", "activation", "=", "'relu'", ")", "(", "input_data", ")", "\n", "y", "=", "tf", ".", "keras", ".", "layers", ".", "Conv1D", "(", "filters", "=", "filters", ",", "kernel_size", "=", "kernel_size", ",", "activation", "=", "'relu'", ")", "(", "y", ")", "\n", "y", "=", "tf", ".", "keras", ".", "layers", ".", "Conv1D", "(", "filters", "=", "filters", ",", "kernel_size", "=", "kernel_size", ",", "activation", "=", "'relu'", ")", "(", "y", ")", "\n", "y", "=", "tf", ".", "keras", ".", "layers", ".", "Conv1D", "(", "filters", "=", "filters", ",", "kernel_size", "=", "kernel_size", ",", "activation", "=", "'relu'", ")", "(", "y", ")", "\n", "y", "=", "tf", ".", "keras", ".", "layers", ".", "Bidirectional", "(", "tf", ".", "keras", ".", "layers", ".", "LSTM", "(", "units", ",", "activation", "=", "\"tanh\"", ",", "return_sequences", "=", "True", ")", ",", "merge_mode", "=", "\"concat\"", ")", "(", "y", ")", "\n", "y", ",", "weights", "=", "AttentionLayer", "(", "units", "=", "units", ")", "(", "y", ")", "\n", "y", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "units", ",", "activation", "=", "'relu'", ")", "(", "y", ")", "\n", "regression_output", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "window_size", ",", "activation", "=", "'relu'", ",", "name", "=", "\"regression_output\"", ")", "(", "y", ")", "\n", "\n", "output", "=", "tf", ".", "keras", ".", "layers", ".", "Multiply", "(", "name", "=", "\"output\"", ")", "(", "[", "regression_output", ",", "classification_output", "]", ")", "\n", "\n", "full_model", "=", "tf", ".", "keras", ".", "Model", "(", "inputs", "=", "input_data", ",", "outputs", "=", "[", "output", ",", "classification_output", "]", ",", "name", "=", "\"LDwA\"", ")", "\n", "attention_model", "=", "tf", ".", "keras", ".", "Model", "(", "inputs", "=", "input_data", ",", "outputs", "=", "weights", ")", "\n", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "SGD", "(", "learning_rate", "=", "0.01", ",", "momentum", "=", "0.9", ")", "\n", "\n", "full_model", ".", "compile", "(", "optimizer", "=", "optimizer", ",", "loss", "=", "{", "\n", "\"output\"", ":", "tf", ".", "keras", ".", "losses", ".", "MeanSquaredError", "(", ")", ",", "\n", "\"classification_output\"", ":", "tf", ".", "keras", ".", "losses", ".", "BinaryCrossentropy", "(", ")", "}", ")", "\n", "\n", "return", "full_model", ",", "attention_model", "\n", "", ""]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.data_generator.DataGenerator.__init__": [[7, 15], ["numpy.arange", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mains", ",", "appliances_regression", ",", "appliances_classification", ",", "window_size", ",", "batch_size", ",", "shuffle", "=", "False", ")", ":", "\n", "        ", "self", ".", "mains", "=", "mains", "\n", "self", ".", "appliances_regression", "=", "appliances_regression", "\n", "self", ".", "appliances_classification", "=", "appliances_classification", "\n", "self", ".", "window_size", "=", "window_size", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "indices", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "mains", ")", "-", "self", ".", "window_size", "+", "1", ")", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "\n"]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.data_generator.DataGenerator.__len__": [[16, 18], ["numpy.ceil", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "ceil", "(", "len", "(", "self", ".", "indices", ")", "/", "self", ".", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.data_generator.DataGenerator.__getitem__": [[19, 51], ["numpy.array", "numpy.reshape", "numpy.array", "numpy.reshape", "numpy.array", "numpy.reshape", "mains_batch.append", "appliances_regression_batch.append", "appliances_classification_batch.append", "data_generator.DataGenerator.__len__"], "methods", ["home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.data_generator.DataGenerator.__len__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "mains_batch", "=", "[", "]", "\n", "appliances_regression_batch", "=", "[", "]", "\n", "appliances_classification_batch", "=", "[", "]", "\n", "appliance_regression_sample", "=", "[", "]", "\n", "appliance_classification_sample", "=", "[", "]", "\n", "\n", "if", "idx", "==", "self", ".", "__len__", "(", ")", "-", "1", ":", "\n", "            ", "inds", "=", "self", ".", "indices", "[", "idx", "*", "self", ".", "batch_size", ":", "]", "\n", "", "else", ":", "\n", "            ", "inds", "=", "self", ".", "indices", "[", "idx", "*", "self", ".", "batch_size", ":", "(", "idx", "+", "1", ")", "*", "self", ".", "batch_size", "]", "\n", "\n", "", "for", "i", "in", "inds", ":", "\n", "            ", "main_sample", "=", "self", ".", "mains", "[", "i", ":", "i", "+", "self", ".", "window_size", "]", "\n", "appliance_regression_sample", "=", "self", ".", "appliances_regression", "[", "i", ":", "i", "+", "self", ".", "window_size", "]", "\n", "appliance_classification_sample", "=", "self", ".", "appliances_classification", "[", "i", ":", "i", "+", "self", ".", "window_size", "]", "\n", "\n", "mains_batch", ".", "append", "(", "main_sample", ")", "\n", "appliances_regression_batch", ".", "append", "(", "appliance_regression_sample", ")", "\n", "appliances_classification_batch", ".", "append", "(", "appliance_classification_sample", ")", "\n", "\n", "", "mains_batch_np", "=", "np", ".", "array", "(", "mains_batch", ")", "\n", "mains_batch_np", "=", "np", ".", "reshape", "(", "mains_batch_np", ",", "(", "mains_batch_np", ".", "shape", "[", "0", "]", ",", "mains_batch_np", ".", "shape", "[", "1", "]", ",", "1", ")", ")", "\n", "appliances_regression_batch_np", "=", "np", ".", "array", "(", "appliances_regression_batch", ")", "\n", "appliances_regression_batch_np", "=", "np", ".", "reshape", "(", "appliances_regression_batch_np", ",", "\n", "(", "appliances_regression_batch_np", ".", "shape", "[", "0", "]", ",", "\n", "appliances_regression_batch_np", ".", "shape", "[", "1", "]", ")", ")", "\n", "appliances_classification_batch_np", "=", "np", ".", "array", "(", "appliances_classification_batch", ")", "\n", "appliances_classification_batch_np", "=", "np", ".", "reshape", "(", "appliances_classification_batch_np", ",", "\n", "(", "appliances_classification_batch_np", ".", "shape", "[", "0", "]", ",", "\n", "appliances_classification_batch_np", ".", "shape", "[", "1", "]", ")", ")", "\n", "return", "mains_batch_np", ",", "[", "appliances_regression_batch_np", ",", "appliances_classification_batch_np", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.data_generator.DataGenerator.on_epoch_end": [[52, 56], ["numpy.random.shuffle"], "methods", ["None"], ["", "def", "on_epoch_end", "(", "self", ")", ":", "\n", "\n", "        ", "if", "self", ".", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "self", ".", "indices", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.utils.mae": [[4, 9], ["abs", "numpy.sum", "len"], "function", ["None"], ["def", "mae", "(", "prediction", ",", "true", ")", ":", "\n", "    ", "MAE", "=", "abs", "(", "true", "-", "prediction", ")", "\n", "MAE", "=", "np", ".", "sum", "(", "MAE", ")", "\n", "MAE", "=", "MAE", "/", "len", "(", "prediction", ")", "\n", "return", "MAE", "\n", "\n"]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.utils.sae": [[11, 21], ["len", "int", "range", "numpy.sum", "numpy.sum", "abs"], "function", ["None"], ["", "def", "sae", "(", "prediction", ",", "true", ",", "N", ")", ":", "\n", "    ", "T", "=", "len", "(", "prediction", ")", "\n", "K", "=", "int", "(", "T", "/", "N", ")", "\n", "SAE", "=", "0", "\n", "for", "k", "in", "range", "(", "1", ",", "N", ")", ":", "\n", "        ", "pred_r", "=", "np", ".", "sum", "(", "prediction", "[", "k", "*", "N", ":", "(", "k", "+", "1", ")", "*", "N", "]", ")", "\n", "true_r", "=", "np", ".", "sum", "(", "true", "[", "k", "*", "N", ":", "(", "k", "+", "1", ")", "*", "N", "]", ")", "\n", "SAE", "+=", "abs", "(", "true_r", "-", "pred_r", ")", "\n", "", "SAE", "=", "SAE", "/", "(", "K", "*", "N", ")", "\n", "return", "SAE", "\n", "\n"]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.utils.f1": [[23, 46], ["range", "len"], "function", ["None"], ["", "def", "f1", "(", "prediction", ",", "true", ")", ":", "\n", "    ", "epsilon", "=", "1e-8", "\n", "TP", "=", "epsilon", "\n", "FN", "=", "epsilon", "\n", "FP", "=", "epsilon", "\n", "TN", "=", "epsilon", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "prediction_binary", "=", "1", "\n", "", "else", ":", "\n", "            ", "prediction_binary", "=", "0", "\n", "", "if", "prediction_binary", "==", "1", "and", "true", "[", "i", "]", "==", "1", ":", "\n", "            ", "TP", "+=", "1", "\n", "", "elif", "prediction_binary", "==", "0", "and", "true", "[", "i", "]", "==", "1", ":", "\n", "            ", "FN", "+=", "1", "\n", "", "elif", "prediction_binary", "==", "1", "and", "true", "[", "i", "]", "==", "0", ":", "\n", "            ", "FP", "+=", "1", "\n", "", "elif", "prediction_binary", "==", "0", "and", "true", "[", "i", "]", "==", "0", ":", "\n", "            ", "TN", "+=", "1", "\n", "", "", "R", "=", "TP", "/", "(", "TP", "+", "FN", ")", "\n", "P", "=", "TP", "/", "(", "TP", "+", "FP", ")", "\n", "f1", "=", "(", "2", "*", "P", "*", "R", ")", "/", "(", "P", "+", "R", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.utils.standardize_data": [[48, 52], ["None"], "function", ["None"], ["", "def", "standardize_data", "(", "data", ",", "mu", "=", "0.0", ",", "sigma", "=", "1.0", ")", ":", "\n", "    ", "data", "-=", "mu", "\n", "data", "/=", "sigma", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.utils.normalize_data": [[54, 58], ["None"], "function", ["None"], ["", "def", "normalize_data", "(", "data", ",", "min_value", "=", "0.0", ",", "max_value", "=", "1.0", ")", ":", "\n", "    ", "data", "-=", "min_value", "\n", "data", "/=", "max_value", "-", "min_value", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.antoniosudoso_attention-nilm.source.utils.build_overall_sequence": [[60, 67], ["range", "numpy.array", "sequences[].diagonal", "len", "np.array.append", "range", "numpy.median"], "function", ["None"], ["", "def", "build_overall_sequence", "(", "sequences", ")", ":", "\n", "    ", "unique_sequence", "=", "[", "]", "\n", "matrix", "=", "[", "sequences", "[", ":", ":", "-", "1", ",", ":", "]", ".", "diagonal", "(", "i", ")", "for", "i", "in", "range", "(", "-", "sequences", ".", "shape", "[", "0", "]", "+", "1", ",", "sequences", ".", "shape", "[", "1", "]", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "matrix", ")", ")", ":", "\n", "        ", "unique_sequence", ".", "append", "(", "np", ".", "median", "(", "matrix", "[", "i", "]", ")", ")", "\n", "", "unique_sequence", "=", "np", ".", "array", "(", "unique_sequence", ")", "\n", "return", "unique_sequence", "\n", "", ""]]}