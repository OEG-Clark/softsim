{"home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.__init__": [[9, 14], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "config", ",", "emb_mtx", ",", "sess", ")", ":", "\n", "        ", "\"\"\"\"Initialize data\"\"\"", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "emb_mtx", "=", "emb_mtx", "\n", "self", ".", "sess", "=", "sess", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.getEvaluator": [[15, 26], ["eval.chunkEvaluator", "eval.chunkEvaluator", "eval.relaxedChunkEvaluator", "ValueError"], "methods", ["None"], ["", "def", "getEvaluator", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "config", ".", "evaluation_method", "==", "\"strict\"", "and", "self", ".", "config", ".", "ner_classes", "==", "\"BIO\"", ":", "# the most common metric", "\n", "            ", "return", "eval", ".", "chunkEvaluator", "(", "self", ".", "config", ",", "ner_chunk_eval", "=", "\"boundaries_type\"", ",", "\n", "rel_chunk_eval", "=", "\"boundaries_type\"", ")", "\n", "", "elif", "self", ".", "config", ".", "evaluation_method", "==", "\"boundaries\"", "and", "self", ".", "config", ".", "ner_classes", "==", "\"BIO\"", ":", "# s", "\n", "            ", "return", "eval", ".", "chunkEvaluator", "(", "self", ".", "config", ",", "ner_chunk_eval", "=", "\"boundaries\"", ",", "rel_chunk_eval", "=", "\"boundaries\"", ")", "\n", "", "elif", "self", ".", "config", ".", "evaluation_method", "==", "\"relaxed\"", "and", "self", ".", "config", ".", "ner_classes", "==", "\"EC\"", ":", "# todo", "\n", "            ", "return", "eval", ".", "relaxedChunkEvaluator", "(", "self", ".", "config", ",", "rel_chunk_eval", "=", "\"boundaries_type\"", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Valid evaluation methods : \"strict\" and \"boundaries\" in \"BIO\" mode and \"relaxed\" in \"EC\" mode .'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.train": [[28, 58], ["tf_utils.model.getEvaluator", "time.time", "utils.generator", "print", "print", "print", "print", "print", "tf_utils.model.sess.run", "tf_utils.model.computeInfoMacro", "tf_utils.model.printInfo", "time.time", "tf_utils.model.add", "tf_utils.model.add", "str"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.getEvaluator", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.generator", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.run", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.computeInfoMacro", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.printInfo", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add"], ["", "", "def", "train", "(", "self", ",", "train_data", ",", "operations", ",", "iter", ")", ":", "\n", "\n", "            ", "loss", "=", "0", "\n", "\n", "evaluator", "=", "self", ".", "getEvaluator", "(", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "for", "x_train", "in", "utils", ".", "generator", "(", "train_data", ",", "operations", ".", "m_op", ",", "self", ".", "config", ",", "train", "=", "True", ")", ":", "\n", "                ", "_", ",", "val", ",", "predicted_ner", ",", "actual_ner", ",", "predicted_rel", ",", "actual_rel", ",", "_", ",", "m_train", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "operations", ".", "train_step", ",", "operations", ".", "obj", ",", "operations", ".", "predicted_op_ner", ",", "operations", ".", "actual_op_ner", ",", "operations", ".", "predicted_op_rel", ",", "operations", ".", "actual_op_rel", ",", "operations", ".", "score_op_rel", ",", "\n", "operations", ".", "m_op", "]", ",", "feed_dict", "=", "x_train", ")", "# sess.run(embedding_init, feed_dict={embedding_placeholder: wordvectors})", "\n", "\n", "if", "self", ".", "config", ".", "evaluation_method", "==", "\"relaxed\"", ":", "\n", "                    ", "evaluator", ".", "add", "(", "predicted_ner", ",", "actual_ner", ",", "predicted_rel", ",", "actual_rel", ",", "m_train", "[", "'BIO'", "]", ")", "\n", "", "else", ":", "\n", "                    ", "evaluator", ".", "add", "(", "predicted_ner", ",", "actual_ner", ",", "predicted_rel", ",", "actual_rel", ")", "\n", "\n", "", "loss", "+=", "val", "\n", "\n", "", "print", "(", "'****iter %d****'", "%", "(", "iter", ")", ")", "\n", "print", "(", "'-------Train-------'", ")", "\n", "print", "(", "'loss: %f '", "%", "(", "loss", ")", ")", "\n", "\n", "if", "self", ".", "config", ".", "evaluation_method", "==", "\"relaxed\"", ":", "\n", "                ", "evaluator", ".", "computeInfoMacro", "(", ")", "\n", "", "else", ":", "\n", "                ", "evaluator", ".", "printInfo", "(", ")", "\n", "\n", "", "elapsed_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "print", "(", "\"Elapsed train time in sec:\"", "+", "str", "(", "elapsed_time", ")", ")", "\n", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.evaluate": [[61, 85], ["print", "tf_utils.model.getEvaluator", "utils.generator", "tf_utils.model.sess.run", "tf_utils.model.computeInfoMacro", "tf_utils.model.printInfo", "tf_utils.model.getChunkedOverallAvgF1", "tf_utils.model.add", "tf_utils.model.add", "x.lower", "tf_utils.model.getMacroF1scoresNoOtherClass", "tf_utils.model.getMacroF1scores"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.getEvaluator", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.generator", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.run", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.computeInfoMacro", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.printInfo", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getChunkedOverallAvgF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getMacroF1scoresNoOtherClass", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getMacroF1scores"], ["", "def", "evaluate", "(", "self", ",", "eval_data", ",", "operations", ",", "set", ")", ":", "\n", "\n", "        ", "print", "(", "'-------Evaluate on '", "+", "set", "+", "'-------'", ")", "\n", "\n", "evaluator", "=", "self", ".", "getEvaluator", "(", ")", "\n", "for", "x_dev", "in", "utils", ".", "generator", "(", "eval_data", ",", "operations", ".", "m_op", ",", "self", ".", "config", ",", "train", "=", "False", ")", ":", "\n", "            ", "predicted_ner", ",", "actual_ner", ",", "predicted_rel", ",", "actual_rel", ",", "_", ",", "m_eval", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "operations", ".", "predicted_op_ner", ",", "operations", ".", "actual_op_ner", ",", "operations", ".", "predicted_op_rel", ",", "operations", ".", "actual_op_rel", ",", "operations", ".", "score_op_rel", ",", "operations", ".", "m_op", "]", ",", "feed_dict", "=", "x_dev", ")", "\n", "\n", "if", "self", ".", "config", ".", "evaluation_method", "==", "\"relaxed\"", ":", "\n", "                ", "evaluator", ".", "add", "(", "predicted_ner", ",", "actual_ner", ",", "predicted_rel", ",", "actual_rel", ",", "m_eval", "[", "'BIO'", "]", ")", "\n", "", "else", ":", "\n", "                ", "evaluator", ".", "add", "(", "predicted_ner", ",", "actual_ner", ",", "predicted_rel", ",", "actual_rel", ")", "\n", "\n", "", "", "if", "self", ".", "config", ".", "evaluation_method", "==", "\"relaxed\"", ":", "\n", "            ", "evaluator", ".", "computeInfoMacro", "(", "printScores", "=", "True", ")", "\n", "if", "\"other\"", "in", "[", "x", ".", "lower", "(", ")", "for", "x", "in", "self", ".", "config", ".", "dataset_set_ec_tags", "]", ":", "# if other class exists report score without \"Other\" class, see previous work on the CoNLL04", "\n", "                ", "return", "evaluator", ".", "getMacroF1scoresNoOtherClass", "(", ")", "[", "2", "]", "\n", "", "else", ":", "\n", "                ", "return", "evaluator", ".", "getMacroF1scores", "(", ")", "[", "2", "]", "\n", "\n", "", "", "else", ":", "\n", "            ", "evaluator", ".", "printInfo", "(", ")", "\n", "return", "evaluator", ".", "getChunkedOverallAvgF1", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.get_train_op": [[88, 116], ["tf.train.AdamOptimizer", "tf.train.GradientDescentOptimizer.compute_gradients", "tf_utils.model.correctGradients", "tf.train.GradientDescentOptimizer.apply_gradients", "tf.train.GradientDescentOptimizer.minimize", "tf.train.AdagradOptimizer", "tf.train.AdadeltaOptimizer", "tf.clip_by_value", "tf.train.GradientDescentOptimizer"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.correctGradients"], ["", "", "def", "get_train_op", "(", "self", ",", "obj", ")", ":", "\n", "        ", "import", "tensorflow", "as", "tf", "\n", "\n", "if", "self", ".", "config", ".", "optimizer", "==", "'Adam'", ":", "\n", "\n", "            ", "optim", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "config", ".", "learning_rate", ")", "\n", "\n", "", "elif", "self", ".", "config", ".", "optimizer", "==", "'Adagrad'", ":", "\n", "            ", "optim", "=", "tf", ".", "train", ".", "AdagradOptimizer", "(", "self", ".", "config", ".", "learning_rate", ")", "\n", "", "elif", "self", ".", "config", ".", "optimizer", "==", "'AdadeltaOptimizer'", ":", "\n", "            ", "optim", "=", "tf", ".", "train", ".", "AdadeltaOptimizer", "(", "self", ".", "config", ".", "learning_rate", ")", "\n", "", "elif", "self", ".", "config", ".", "optimizer", "==", "'GradientDescentOptimizer'", ":", "\n", "            ", "optim", "=", "tf", ".", "train", ".", "GradientDescentOptimizer", "(", "self", ".", "config", ".", "learning_rate", ")", "\n", "\n", "", "if", "self", ".", "config", ".", "gradientClipping", "==", "True", ":", "\n", "\n", "            ", "gvs", "=", "optim", ".", "compute_gradients", "(", "obj", ")", "\n", "\n", "new_gvs", "=", "self", ".", "correctGradients", "(", "gvs", ")", "\n", "\n", "capped_gvs", "=", "[", "(", "tf", ".", "clip_by_value", "(", "grad", ",", "-", "1.", ",", "1.", ")", ",", "var", ")", "for", "grad", ",", "var", "in", "new_gvs", "]", "\n", "train_step", "=", "optim", ".", "apply_gradients", "(", "capped_gvs", ")", "\n", "\n", "\n", "", "else", ":", "\n", "            ", "train_step", "=", "optim", ".", "minimize", "(", "obj", ")", "\n", "\n", "", "return", "train_step", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.correctGradients": [[117, 131], ["new_gvs.append", "len", "len", "print", "tf.zeros_like"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print"], ["", "def", "correctGradients", "(", "self", ",", "gvs", ")", ":", "\n", "        ", "import", "tensorflow", "as", "tf", "\n", "\n", "new_gvs", "=", "[", "]", "\n", "for", "grad", ",", "var", "in", "gvs", ":", "\n", "# print (grad)", "\n", "            ", "if", "grad", "==", "None", ":", "\n", "\n", "                ", "grad", "=", "tf", ".", "zeros_like", "(", "var", ")", "\n", "\n", "", "new_gvs", ".", "append", "(", "(", "grad", ",", "var", ")", ")", "\n", "", "if", "len", "(", "gvs", ")", "!=", "len", "(", "new_gvs", ")", ":", "\n", "            ", "print", "(", "\"gradient Error\"", ")", "\n", "", "return", "new_gvs", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.broadcasting": [[132, 147], ["tf.transpose", "tf.expand_dims", "tf.transpose", "tf.expand_dims", "tf.transpose"], "methods", ["None"], ["", "def", "broadcasting", "(", "self", ",", "left", ",", "right", ")", ":", "\n", "        ", "import", "tensorflow", "as", "tf", "\n", "\n", "\n", "\n", "left", "=", "tf", ".", "transpose", "(", "left", ",", "perm", "=", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "left", "=", "tf", ".", "expand_dims", "(", "left", ",", "3", ")", "\n", "\n", "right", "=", "tf", ".", "transpose", "(", "right", ",", "perm", "=", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "right", "=", "tf", ".", "expand_dims", "(", "right", ",", "0", ")", "\n", "\n", "B", "=", "left", "+", "right", "\n", "B", "=", "tf", ".", "transpose", "(", "B", ",", "perm", "=", "[", "1", ",", "0", ",", "3", ",", "2", "]", ")", "\n", "\n", "return", "B", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.getNerScores": [[148, 172], ["tf.get_variable", "tf.get_variable", "tf.get_variable", "tf.get_variable", "tf.einsum", "tf.nn.tanh", "tf.nn.dropout", "tf.einsum", "tf.nn.relu"], "methods", ["None"], ["", "def", "getNerScores", "(", "self", ",", "lstm_out", ",", "n_types", "=", "1", ",", "dropout_keep_in_prob", "=", "1", ")", ":", "\n", "        ", "import", "tensorflow", "as", "tf", "\n", "\n", "\n", "u_a", "=", "tf", ".", "get_variable", "(", "\"u_typ\"", ",", "[", "self", ".", "config", ".", "hidden_size_lstm", "*", "2", ",", "self", ".", "config", ".", "hidden_size_n1", "]", ")", "# [128 32]", "\n", "v", "=", "tf", ".", "get_variable", "(", "\"v_typ\"", ",", "[", "self", ".", "config", ".", "hidden_size_n1", ",", "n_types", "]", ")", "# [32,1] or [32,10]", "\n", "b_s", "=", "tf", ".", "get_variable", "(", "\"b_typ\"", ",", "[", "self", ".", "config", ".", "hidden_size_n1", "]", ")", "\n", "b_c", "=", "tf", ".", "get_variable", "(", "\"b_ctyp\"", ",", "[", "n_types", "]", ")", "\n", "\n", "mul", "=", "tf", ".", "einsum", "(", "'aij,jk->aik'", ",", "lstm_out", ",", "u_a", ")", "# [16 348 64] * #[64 32] = [16 348 32]", "\n", "\n", "sum", "=", "mul", "+", "b_s", "\n", "if", "self", ".", "config", ".", "activation", "==", "\"tanh\"", ":", "\n", "            ", "output", "=", "tf", ".", "nn", ".", "tanh", "(", "sum", ")", "\n", "", "elif", "self", ".", "config", ".", "activation", "==", "\"relu\"", ":", "\n", "            ", "output", "=", "tf", ".", "nn", ".", "relu", "(", "sum", ")", "\n", "\n", "", "if", "self", ".", "config", ".", "use_dropout", "==", "True", ":", "\n", "            ", "output", "=", "tf", ".", "nn", ".", "dropout", "(", "output", ",", "keep_prob", "=", "dropout_keep_in_prob", ")", "\n", "\n", "", "g", "=", "tf", ".", "einsum", "(", "'aik,kp->aip'", ",", "output", ",", "v", ")", "+", "b_c", "\n", "\n", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.getHeadSelectionScores": [[173, 216], ["tf.get_variable", "tf.get_variable", "tf.get_variable", "tf.get_variable", "tf.einsum", "tf.einsum", "tf_utils.model.broadcasting", "tf.nn.dropout", "tf.einsum", "tf.reshape", "tf.tanh", "tf.nn.dropout", "len", "tf.nn.relu", "tf.shape", "tf.shape", "len", "tf.shape"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.broadcasting"], ["", "def", "getHeadSelectionScores", "(", "self", ",", "lstm_out", ",", "dropout_keep_in_prob", "=", "1", ")", ":", "\n", "        ", "import", "tensorflow", "as", "tf", "\n", "\n", "u_a", "=", "tf", ".", "get_variable", "(", "\"u_a\"", ",", "[", "(", "self", ".", "config", ".", "hidden_size_lstm", "*", "2", ")", "+", "self", ".", "config", ".", "label_embeddings_size", ",", "self", ".", "config", ".", "hidden_size_n1", "]", ")", "# [128 32]", "\n", "w_a", "=", "tf", ".", "get_variable", "(", "\"w_a\"", ",", "[", "(", "self", ".", "config", ".", "hidden_size_lstm", "*", "2", ")", "+", "self", ".", "config", ".", "label_embeddings_size", ",", "self", ".", "config", ".", "hidden_size_n1", "]", ")", "# [128 32]", "\n", "v", "=", "tf", ".", "get_variable", "(", "\"v\"", ",", "[", "self", ".", "config", ".", "hidden_size_n1", ",", "len", "(", "self", ".", "config", ".", "dataset_set_relations", ")", "]", ")", "# [32,1] or [32,4]", "\n", "b_s", "=", "tf", ".", "get_variable", "(", "\"b_s\"", ",", "[", "self", ".", "config", ".", "hidden_size_n1", "]", ")", "\n", "\n", "\n", "\n", "left", "=", "tf", ".", "einsum", "(", "'aij,jk->aik'", ",", "lstm_out", ",", "u_a", ")", "# [16 348 64] * #[64 32] = [16 348 32]", "\n", "right", "=", "tf", ".", "einsum", "(", "'aij,jk->aik'", ",", "lstm_out", ",", "w_a", ")", "# [16 348 64] * #[64 32] = [16 348 32]", "\n", "\n", "\n", "\n", "outer_sum", "=", "self", ".", "broadcasting", "(", "left", ",", "right", ")", "# [16 348 348 32]", "\n", "\n", "outer_sum_bias", "=", "outer_sum", "+", "b_s", "\n", "\n", "\n", "if", "self", ".", "config", ".", "activation", "==", "\"tanh\"", ":", "\n", "            ", "output", "=", "tf", ".", "tanh", "(", "outer_sum_bias", ")", "\n", "", "elif", "self", ".", "config", ".", "activation", "==", "\"relu\"", ":", "\n", "            ", "output", "=", "tf", ".", "nn", ".", "relu", "(", "outer_sum_bias", ")", "\n", "\n", "\n", "", "if", "self", ".", "config", ".", "use_dropout", "==", "True", ":", "\n", "            ", "output", "=", "tf", ".", "nn", ".", "dropout", "(", "output", ",", "keep_prob", "=", "dropout_keep_in_prob", ")", "\n", "\n", "\n", "", "output", "=", "tf", ".", "nn", ".", "dropout", "(", "output", ",", "keep_prob", "=", "dropout_keep_in_prob", ")", "\n", "\n", "\n", "\n", "g", "=", "tf", ".", "einsum", "(", "'aijk,kp->aijp'", ",", "output", ",", "v", ")", "\n", "\n", "\n", "\n", "g", "=", "tf", ".", "reshape", "(", "g", ",", "[", "tf", ".", "shape", "(", "g", ")", "[", "0", "]", ",", "tf", ".", "shape", "(", "g", ")", "[", "1", "]", ",", "tf", ".", "shape", "(", "g", ")", "[", "2", "]", "*", "len", "(", "self", ".", "config", ".", "dataset_set_relations", ")", "]", ")", "\n", "\n", "\n", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.computeLoss": [[219, 310], ["tf.variable_scope", "range", "tf.sequence_mask", "tf.contrib.crf.crf_log_likelihood", "tf_utils.model.getHeadSelectionScores", "tf.nn.sigmoid_cross_entropy_with_logits", "tf.nn.sigmoid", "tf.round", "tf.nn.dropout", "tf.contrib.rnn.BasicLSTMCell", "tf.contrib.rnn.BasicLSTMCell", "tf.nn.bidirectional_dynamic_rnn", "tf.concat", "tf.nn.dropout", "tf_utils.model.getNerScores", "tf.get_variable", "tf.contrib.crf.crf_decode", "tf.cond", "tf.nn.embedding_lookup", "tf.concat", "tf.nn.dropout", "len", "tf_utils.model.getNerScores", "tf.get_variable", "tf.nn.sparse_softmax_cross_entropy_with_logits", "tf.cast", "len", "tf.arg_max", "str", "len", "len"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.getHeadSelectionScores", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.getNerScores", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.getNerScores"], ["", "def", "computeLoss", "(", "self", ",", "input_rnn", ",", "dropout_embedding_keep", ",", "dropout_lstm_keep", ",", "dropout_lstm_output_keep", ",", "\n", "seqlen", ",", "dropout_fcl_ner_keep", ",", "ners_ids", ",", "dropout_fcl_rel_keep", ",", "is_train", ",", "scoring_matrix_gold", ",", "reuse", "=", "False", ")", ":", "\n", "\n", "        ", "import", "tensorflow", "as", "tf", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "\"loss_computation\"", ",", "reuse", "=", "reuse", ")", ":", "\n", "\n", "            ", "if", "self", ".", "config", ".", "use_dropout", ":", "\n", "                    ", "input_rnn", "=", "tf", ".", "nn", ".", "dropout", "(", "input_rnn", ",", "keep_prob", "=", "dropout_embedding_keep", ")", "\n", "#input_rnn = tf.Print(input_rnn, [dropout_embedding_keep], 'embedding:  ', summarize=1000)", "\n", "", "for", "i", "in", "range", "(", "self", ".", "config", ".", "num_lstm_layers", ")", ":", "\n", "                ", "if", "self", ".", "config", ".", "use_dropout", "and", "i", ">", "0", ":", "\n", "                    ", "input_rnn", "=", "tf", ".", "nn", ".", "dropout", "(", "input_rnn", ",", "keep_prob", "=", "dropout_lstm_keep", ")", "\n", "#input_rnn = tf.Print(input_rnn, [dropout_lstm_keep], 'lstm:  ', summarize=1000)", "\n", "\n", "", "lstm_fw_cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "self", ".", "config", ".", "hidden_size_lstm", ")", "\n", "# Backward direction cell", "\n", "lstm_bw_cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "self", ".", "config", ".", "hidden_size_lstm", ")", "\n", "\n", "lstm_out", ",", "_", "=", "tf", ".", "nn", ".", "bidirectional_dynamic_rnn", "(", "\n", "cell_fw", "=", "lstm_fw_cell", ",", "\n", "cell_bw", "=", "lstm_bw_cell", ",", "\n", "inputs", "=", "input_rnn", ",", "\n", "sequence_length", "=", "seqlen", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "scope", "=", "'BiLSTM'", "+", "str", "(", "i", ")", ")", "\n", "\n", "input_rnn", "=", "tf", ".", "concat", "(", "lstm_out", ",", "2", ")", "\n", "\n", "lstm_output", "=", "input_rnn", "\n", "\n", "", "if", "self", ".", "config", ".", "use_dropout", ":", "\n", "                ", "lstm_output", "=", "tf", ".", "nn", ".", "dropout", "(", "lstm_output", ",", "keep_prob", "=", "dropout_lstm_output_keep", ")", "\n", "\n", "\n", "", "mask", "=", "tf", ".", "sequence_mask", "(", "seqlen", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "ner_input", "=", "lstm_output", "\n", "# loss= tf.Print(loss, [tf.shape(loss)], 'shape of loss is:') # same as scoring matrix ie, [1 59 590]", "\n", "if", "self", ".", "config", ".", "ner_classes", "==", "\"EC\"", ":", "\n", "\n", "                ", "nerScores", "=", "self", ".", "getNerScores", "(", "ner_input", ",", "len", "(", "self", ".", "config", ".", "dataset_set_ec_tags", ")", ",", "\n", "dropout_keep_in_prob", "=", "dropout_fcl_ner_keep", ")", "\n", "label_matrix", "=", "tf", ".", "get_variable", "(", "name", "=", "\"label_embeddings\"", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "len", "(", "self", ".", "config", ".", "dataset_set_ec_tags", ")", ",", "\n", "self", ".", "config", ".", "label_embeddings_size", "]", ")", "\n", "", "elif", "self", ".", "config", ".", "ner_classes", "==", "\"BIO\"", ":", "\n", "\n", "                ", "nerScores", "=", "self", ".", "getNerScores", "(", "ner_input", ",", "len", "(", "self", ".", "config", ".", "dataset_set_bio_tags", ")", ",", "\n", "dropout_keep_in_prob", "=", "dropout_fcl_ner_keep", ")", "\n", "label_matrix", "=", "tf", ".", "get_variable", "(", "name", "=", "\"label_embeddings\"", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "len", "(", "self", ".", "config", ".", "dataset_set_bio_tags", ")", ",", "\n", "self", ".", "config", ".", "label_embeddings_size", "]", ")", "\n", "\n", "# nerScores = tf.Print(nerScores, [tf.shape(ners_ids), ners_ids, tf.shape(nerScores)], 'ners_ids:  ', summarize=1000)", "\n", "\n", "", "log_likelihood", ",", "transition_params", "=", "tf", ".", "contrib", ".", "crf", ".", "crf_log_likelihood", "(", "\n", "nerScores", ",", "ners_ids", ",", "seqlen", ")", "\n", "if", "self", ".", "config", ".", "ner_loss", "==", "\"crf\"", ":", "\n", "\n", "                ", "lossNER", "=", "-", "log_likelihood", "\n", "predNers", ",", "viterbi_score", "=", "tf", ".", "contrib", ".", "crf", ".", "crf_decode", "(", "\n", "nerScores", ",", "transition_params", ",", "seqlen", ")", "\n", "\n", "", "elif", "self", ".", "config", ".", "ner_loss", "==", "\"softmax\"", ":", "\n", "                ", "lossNER", "=", "tf", ".", "nn", ".", "sparse_softmax_cross_entropy_with_logits", "(", "logits", "=", "nerScores", ",", "labels", "=", "ners_ids", ")", "\n", "\n", "predNers", "=", "tf", ".", "cast", "(", "tf", ".", "arg_max", "(", "nerScores", ",", "2", ")", ",", "tf", ".", "int32", ")", "\n", "\n", "\n", "", "if", "self", ".", "config", ".", "label_embeddings_size", ">", "0", ":", "\n", "\n", "                ", "labels", "=", "tf", ".", "cond", "(", "is_train", ">", "0", ",", "lambda", ":", "ners_ids", ",", "lambda", ":", "predNers", ")", "\n", "\n", "\n", "label_embeddings", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "label_matrix", ",", "labels", ")", "\n", "rel_input", "=", "tf", ".", "concat", "(", "[", "lstm_output", ",", "label_embeddings", "]", ",", "axis", "=", "2", ")", "\n", "\n", "", "else", ":", "\n", "\n", "                ", "rel_input", "=", "lstm_output", "\n", "\n", "\n", "", "rel_scores", "=", "self", ".", "getHeadSelectionScores", "(", "rel_input", ",", "\n", "dropout_keep_in_prob", "=", "dropout_fcl_rel_keep", ")", "\n", "\n", "\n", "lossREL", "=", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "logits", "=", "rel_scores", ",", "labels", "=", "scoring_matrix_gold", ")", "\n", "probas", "=", "tf", ".", "nn", ".", "sigmoid", "(", "rel_scores", ")", "\n", "predictedRel", "=", "tf", ".", "round", "(", "probas", ")", "\n", "\n", "return", "lossNER", ",", "lossREL", ",", "predNers", ",", "predictedRel", ",", "rel_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.run": [[314, 455], ["tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.get_variable", "tf.get_variable", "tf.nn.embedding_lookup", "tf.shape", "tf.reshape", "tf.reshape", "tf.contrib.rnn.BasicLSTMCell", "tf.contrib.rnn.BasicLSTMCell", "tf.nn.bidirectional_dynamic_rnn", "tf.concat", "tf.reshape", "tf.nn.embedding_lookup", "tf_utils.model.computeLoss", "tf.nn.l2_normalize", "tf_utils.model.computeLoss", "tf.round", "tf.concat", "tf.reduce_sum", "tf.reduce_sum", "tf.gradients", "tf.stop_gradient", "tf.constant_initializer", "tf.sqrt", "tf.reduce_sum", "tf.reduce_sum", "len", "tf.cast", "tf.shape"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.computeLoss", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.model.computeLoss"], ["", "", "def", "run", "(", "self", ")", ":", "\n", "\n", "        ", "import", "tensorflow", "as", "tf", "\n", "\n", "# shape = (batch size, max length of sentence, max length of word)", "\n", "char_ids", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "None", ",", "None", "]", ")", "\n", "is_train", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ")", "\n", "\n", "# shape = (batch_size, max_length of sentence)", "\n", "word_lengths", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", ",", "None", "]", ")", "\n", "\n", "embedding_ids", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "None", "]", ")", "# [ batch_size  *   max_sequence ]", "\n", "\n", "token_ids", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "None", "]", ")", "# [ batch_size  *   max_sequence ]", "\n", "\n", "entity_tags_ids", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "None", "]", ")", "\n", "\n", "scoring_matrix_gold", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "None", ",", "None", "]", ")", "# [ batch_size  *   max_sequence]", "\n", "\n", "\n", "tokens", "=", "tf", ".", "placeholder", "(", "tf", ".", "string", ",", "[", "None", ",", "None", "]", ")", "# [ batch_size  *   max_sequence]", "\n", "BIO", "=", "tf", ".", "placeholder", "(", "tf", ".", "string", ",", "[", "None", ",", "None", "]", ")", "# [ batch_size  *   max_sequence]", "\n", "entity_tags", "=", "tf", ".", "placeholder", "(", "tf", ".", "string", ",", "[", "None", ",", "None", "]", ")", "# [ batch_size  *   max_sequence]", "\n", "\n", "# classes = ...", "\n", "seqlen", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ")", "# [ batch_size ]", "\n", "\n", "doc_ids", "=", "tf", ".", "placeholder", "(", "tf", ".", "string", ",", "[", "None", "]", ")", "# [ batch_size ]", "\n", "\n", "\n", "dropout_embedding_keep", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "name", "=", "\"dropout_embedding_keep\"", ")", "\n", "dropout_lstm_keep", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "name", "=", "\"dropout_lstm_keep\"", ")", "\n", "dropout_lstm_output_keep", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "name", "=", "\"dropout_lstm_output_keep\"", ")", "\n", "dropout_fcl_ner_keep", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "name", "=", "\"dropout_fcl_ner_keep\"", ")", "\n", "dropout_fcl_rel_keep", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "name", "=", "\"dropout_fcl_rel_keep\"", ")", "\n", "\n", "embedding_matrix", "=", "tf", ".", "get_variable", "(", "name", "=", "\"embeddings\"", ",", "shape", "=", "self", ".", "emb_mtx", ".", "shape", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "self", ".", "emb_mtx", ")", ",", "trainable", "=", "False", ")", "\n", "\n", "\n", "#####char embeddings", "\n", "\n", "# 1. get character embeddings", "\n", "\n", "K", "=", "tf", ".", "get_variable", "(", "name", "=", "\"char_embeddings\"", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "len", "(", "self", ".", "config", ".", "dataset_set_characters", ")", ",", "self", ".", "config", ".", "char_embeddings_size", "]", ")", "\n", "# shape = (batch, sentence, word, dim of char embeddings)", "\n", "char_embeddings", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "K", ",", "char_ids", ")", "\n", "\n", "# 2. put the time dimension on axis=1 for dynamic_rnn", "\n", "s", "=", "tf", ".", "shape", "(", "char_embeddings", ")", "# store old shape", "\n", "\n", "\n", "char_embeddings_reshaped", "=", "tf", ".", "reshape", "(", "char_embeddings", ",", "shape", "=", "[", "-", "1", ",", "s", "[", "-", "2", "]", ",", "self", ".", "config", ".", "char_embeddings_size", "]", ")", "\n", "word_lengths_reshaped", "=", "tf", ".", "reshape", "(", "word_lengths", ",", "shape", "=", "[", "-", "1", "]", ")", "\n", "\n", "\n", "\n", "char_hidden_size", "=", "self", ".", "config", ".", "hidden_size_char", "\n", "\n", "# 3. bi lstm on chars", "\n", "cell_fw", "=", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "char_hidden_size", ",", "state_is_tuple", "=", "True", ")", "\n", "cell_bw", "=", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "char_hidden_size", ",", "state_is_tuple", "=", "True", ")", "\n", "\n", "_", ",", "(", "(", "_", ",", "output_fw", ")", ",", "(", "_", ",", "output_bw", ")", ")", "=", "tf", ".", "nn", ".", "bidirectional_dynamic_rnn", "(", "cell_fw", "=", "cell_fw", ",", "cell_bw", "=", "cell_bw", ",", "\n", "inputs", "=", "char_embeddings_reshaped", ",", "\n", "sequence_length", "=", "word_lengths_reshaped", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "# shape = (batch x sentence, 2 x char_hidden_size)", "\n", "output", "=", "tf", ".", "concat", "(", "[", "output_fw", ",", "output_bw", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "# shape = (batch, sentence, 2 x char_hidden_size)", "\n", "char_rep", "=", "tf", ".", "reshape", "(", "output", ",", "shape", "=", "[", "-", "1", ",", "s", "[", "1", "]", ",", "2", "*", "char_hidden_size", "]", ")", "\n", "\n", "# concat char embeddings", "\n", "\n", "word_embeddings", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "embedding_matrix", ",", "embedding_ids", ")", "\n", "\n", "if", "self", ".", "config", ".", "use_chars", "==", "True", ":", "\n", "            ", "input_rnn", "=", "tf", ".", "concat", "(", "[", "word_embeddings", ",", "char_rep", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "", "else", ":", "\n", "            ", "input_rnn", "=", "word_embeddings", "\n", "\n", "", "embeddings_input", "=", "input_rnn", "\n", "\n", "\n", "lossNER", ",", "lossREL", ",", "predicted_entity_tags_ids", ",", "predictedRel", ",", "rel_scores", "=", "self", ".", "computeLoss", "(", "input_rnn", ",", "\n", "dropout_embedding_keep", ",", "\n", "dropout_lstm_keep", ",", "\n", "dropout_lstm_output_keep", ",", "seqlen", ",", "\n", "dropout_fcl_ner_keep", ",", "\n", "entity_tags_ids", ",", "dropout_fcl_rel_keep", ",", "\n", "is_train", ",", "\n", "scoring_matrix_gold", ",", "reuse", "=", "False", ")", "\n", "\n", "obj", "=", "tf", ".", "reduce_sum", "(", "lossNER", ")", "+", "tf", ".", "reduce_sum", "(", "lossREL", ")", "\n", "#perturb the inputs", "\n", "raw_perturb", "=", "tf", ".", "gradients", "(", "obj", ",", "embeddings_input", ")", "[", "0", "]", "# [batch, L, dim]", "\n", "normalized_per", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "raw_perturb", ",", "axis", "=", "[", "1", ",", "2", "]", ")", "\n", "perturb", "=", "self", ".", "config", ".", "alpha", "*", "tf", ".", "sqrt", "(", "tf", ".", "cast", "(", "tf", ".", "shape", "(", "input_rnn", ")", "[", "2", "]", ",", "tf", ".", "float32", ")", ")", "*", "tf", ".", "stop_gradient", "(", "normalized_per", ")", "\n", "perturb_inputs", "=", "embeddings_input", "+", "perturb", "\n", "\n", "lossNER_per", ",", "lossREL_per", ",", "_", ",", "_", ",", "_", "=", "self", ".", "computeLoss", "(", "perturb_inputs", ",", "\n", "dropout_embedding_keep", ",", "\n", "dropout_lstm_keep", ",", "\n", "dropout_lstm_output_keep", ",", "seqlen", ",", "\n", "dropout_fcl_ner_keep", ",", "\n", "entity_tags_ids", ",", "dropout_fcl_rel_keep", ",", "\n", "is_train", ",", "\n", "scoring_matrix_gold", ",", "reuse", "=", "True", ")", "\n", "\n", "actualRel", "=", "tf", ".", "round", "(", "scoring_matrix_gold", ")", "\n", "\n", "\n", "if", "self", ".", "config", ".", "use_adversarial", "==", "True", ":", "\n", "\n", "            ", "obj", "+=", "tf", ".", "reduce_sum", "(", "lossNER_per", ")", "+", "tf", ".", "reduce_sum", "(", "lossREL_per", ")", "\n", "\n", "\n", "\n", "", "m", "=", "{", "}", "\n", "m", "[", "'isTrain'", "]", "=", "is_train", "\n", "m", "[", "'embeddingIds'", "]", "=", "embedding_ids", "\n", "m", "[", "'charIds'", "]", "=", "char_ids", "\n", "m", "[", "'tokensLens'", "]", "=", "word_lengths", "\n", "m", "[", "'entity_tags_ids'", "]", "=", "entity_tags_ids", "\n", "m", "[", "'scoringMatrixGold'", "]", "=", "scoring_matrix_gold", "\n", "m", "[", "'seqlen'", "]", "=", "seqlen", "\n", "m", "[", "'doc_ids'", "]", "=", "doc_ids", "\n", "m", "[", "'tokenIds'", "]", "=", "token_ids", "\n", "m", "[", "'dropout_embedding'", "]", "=", "dropout_embedding_keep", "\n", "m", "[", "'dropout_lstm'", "]", "=", "dropout_lstm_keep", "\n", "m", "[", "'dropout_lstm_output'", "]", "=", "dropout_lstm_output_keep", "\n", "m", "[", "'dropout_fcl_ner'", "]", "=", "dropout_fcl_ner_keep", "\n", "m", "[", "'dropout_fcl_rel'", "]", "=", "dropout_fcl_rel_keep", "\n", "m", "[", "'tokens'", "]", "=", "tokens", "\n", "m", "[", "'BIO'", "]", "=", "BIO", "\n", "m", "[", "'entity_tags'", "]", "=", "entity_tags", "\n", "\n", "return", "obj", ",", "m", ",", "predicted_entity_tags_ids", ",", "entity_tags_ids", ",", "predictedRel", ",", "actualRel", ",", "rel_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.tf_utils.operations.__init__": [[458, 468], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "train_step", ",", "obj", ",", "m_op", ",", "predicted_op_ner", ",", "actual_op_ner", ",", "predicted_op_rel", ",", "actual_op_rel", ",", "score_op_rel", ")", ":", "\n", "\n", "        ", "self", ".", "train_step", "=", "train_step", "\n", "self", ".", "obj", "=", "obj", "\n", "self", ".", "m_op", "=", "m_op", "\n", "self", ".", "predicted_op_ner", "=", "predicted_op_ner", "\n", "self", ".", "actual_op_ner", "=", "actual_op_ner", "\n", "self", ".", "predicted_op_rel", "=", "predicted_op_rel", "\n", "self", ".", "actual_op_rel", "=", "actual_op_rel", "\n", "self", ".", "score_op_rel", "=", "score_op_rel", "", "", "", ""]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.__init__": [[8, 23], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "id", ")", ":", "\n", "        ", "self", ".", "docId", "=", "id", "\n", "self", ".", "token_ids", "=", "[", "]", "\n", "self", ".", "tokens", "=", "[", "]", "\n", "self", ".", "BIOs", "=", "[", "]", "\n", "self", ".", "relations", "=", "[", "]", "\n", "self", ".", "heads", "=", "[", "]", "\n", "\n", "###extend", "\n", "self", ".", "embedding_ids", "=", "[", "]", "\n", "self", ".", "char_ids", "=", "[", "]", "\n", "self", ".", "BIO_ids", "=", "[", "]", "\n", "self", ".", "ecs", "=", "[", "]", "\n", "self", ".", "ec_ids", "=", "[", "]", "\n", "self", ".", "joint_ids", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append": [[24, 30], ["parsers.headIdDoc.tokens.append", "parsers.headIdDoc.token_ids.append", "parsers.headIdDoc.BIOs.append", "parsers.headIdDoc.relations.append", "parsers.headIdDoc.heads.append", "str"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "append", "(", "self", ",", "token_id", ",", "token", ",", "BIO", ",", "relations", ",", "heads", ")", ":", "\n", "        ", "self", ".", "tokens", ".", "append", "(", "str", "(", "token", ")", ")", "\n", "self", ".", "token_ids", ".", "append", "(", "token_id", ")", "\n", "self", ".", "BIOs", ".", "append", "(", "BIO", ")", "\n", "self", ".", "relations", ".", "append", "(", "relations", ")", "\n", "self", ".", "heads", ".", "append", "(", "heads", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.extend": [[31, 40], ["range", "len", "parsers.headIdDoc.embedding_ids.append", "parsers.headIdDoc.char_ids.append", "parsers.headIdDoc.BIO_ids.append", "parsers.headIdDoc.ecs.append", "parsers.headIdDoc.ec_ids.append", "parsers.headIdDoc.joint_ids.append", "int", "utils.tokenToCharIds", "int", "utils.getECfromBIO", "int", "utils.getScoringMatrixHeads", "utils.getEmbeddingId", "utils.getLabelId", "utils.getLabelId", "utils.getECfromBIO"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.tokenToCharIds", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getECfromBIO", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getScoringMatrixHeads", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getEmbeddingId", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getLabelId", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getLabelId", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getECfromBIO"], ["", "def", "extend", "(", "self", ",", "wordindices", ",", "dataset_set_characters", ",", "dataset_set_bio_tags", ",", "dataset_set_ec_tags", ",", "\n", "dataset_set_relations", ")", ":", "\n", "        ", "for", "tId", "in", "range", "(", "len", "(", "self", ".", "tokens", ")", ")", ":", "\n", "            ", "self", ".", "embedding_ids", ".", "append", "(", "int", "(", "utils", ".", "getEmbeddingId", "(", "self", ".", "tokens", "[", "tId", "]", ",", "wordindices", ")", ")", ")", "\n", "self", ".", "char_ids", ".", "append", "(", "utils", ".", "tokenToCharIds", "(", "self", ".", "tokens", "[", "tId", "]", ",", "dataset_set_characters", ")", ")", "\n", "self", ".", "BIO_ids", ".", "append", "(", "int", "(", "utils", ".", "getLabelId", "(", "self", ".", "BIOs", "[", "tId", "]", ",", "dataset_set_bio_tags", ")", ")", ")", "\n", "self", ".", "ecs", ".", "append", "(", "utils", ".", "getECfromBIO", "(", "self", ".", "BIOs", "[", "tId", "]", ")", ")", "\n", "self", ".", "ec_ids", ".", "append", "(", "int", "(", "utils", ".", "getLabelId", "(", "utils", ".", "getECfromBIO", "(", "self", ".", "BIOs", "[", "tId", "]", ")", ",", "dataset_set_ec_tags", ")", ")", ")", "\n", "self", ".", "joint_ids", ".", "append", "(", "utils", ".", "getScoringMatrixHeads", "(", "self", ".", "relations", "[", "tId", "]", ",", "dataset_set_relations", ",", "self", ".", "heads", "[", "tId", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdParser.__init__": [[43, 62], ["parsers.headIdDoc", "range", "parsers.headIdDoc", "parsers.headIdDoc.append", "parsers.headIdDoc.append", "parsers.headIdParser.head_docs.append", "int", "utils.strToLst", "utils.strToLst", "int", "utils.strToLst", "utils.strToLst"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToLst", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToLst", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToLst", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToLst"], ["    ", "def", "__init__", "(", "self", ",", "file", ")", ":", "\n", "        ", "docNr", "=", "-", "1", "\n", "self", ".", "head_docs", "=", "[", "]", "\n", "tokens", "=", "headIdDoc", "(", "\"\"", ")", "\n", "\n", "for", "i", "in", "range", "(", "file", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "'#doc'", "in", "file", "[", "i", "]", "[", "0", "]", "or", "i", "==", "file", ".", "shape", "[", "0", "]", "-", "1", ":", "# append all docs including the last one", "\n", "                ", "if", "(", "i", "==", "file", ".", "shape", "[", "0", "]", "-", "1", ")", ":", "# append last line", "\n", "                    ", "tokens", ".", "append", "(", "int", "(", "file", "[", "i", "]", "[", "0", "]", ")", ",", "file", "[", "i", "]", "[", "1", "]", ",", "file", "[", "i", "]", "[", "2", "]", ",", "utils", ".", "strToLst", "(", "file", "[", "i", "]", "[", "3", "]", ")", ",", "\n", "utils", ".", "\n", "strToLst", "(", "file", "[", "i", "]", "[", "4", "]", ")", ")", "# append lines", "\n", "", "if", "(", "docNr", "!=", "-", "1", ")", ":", "\n", "                    ", "self", ".", "head_docs", ".", "append", "(", "tokens", ")", "\n", "", "docNr", "+=", "1", "\n", "tokens", "=", "headIdDoc", "(", "file", "[", "i", "]", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "tokens", ".", "append", "(", "int", "(", "file", "[", "i", "]", "[", "0", "]", ")", ",", "file", "[", "i", "]", "[", "1", "]", ",", "file", "[", "i", "]", "[", "2", "]", ",", "utils", ".", "strToLst", "(", "file", "[", "i", "]", "[", "3", "]", ")", ",", "\n", "utils", ".", "\n", "strToLst", "(", "file", "[", "i", "]", "[", "4", "]", ")", ")", "# append lines", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.__init__": [[77, 88], ["open", "line.strip", "line.strip.split", "[].strip", "line.strip.startswith", "key_value[].strip", "key_value[].split"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.HeadData.split", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.HeadData.split"], ["    ", "def", "__init__", "(", "self", ",", "filepath", ",", "sep", "=", "'='", ",", "comment_char", "=", "'#'", ")", ":", "\n", "        ", "\"\"\"Read the file passed as parameter as a properties file.\"\"\"", "\n", "self", ".", "props", "=", "{", "}", "\n", "#print filepath", "\n", "with", "open", "(", "filepath", ",", "\"rt\"", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ":", "\n", "#print line", "\n", "                ", "l", "=", "line", ".", "strip", "(", ")", "\n", "if", "l", "and", "not", "l", ".", "startswith", "(", "comment_char", ")", ":", "\n", "                    ", "key_value", "=", "l", ".", "split", "(", "sep", ")", "\n", "self", ".", "props", "[", "key_value", "[", "0", "]", ".", "strip", "(", ")", "]", "=", "key_value", "[", "1", "]", ".", "split", "(", "\"#\"", ")", "[", "0", "]", ".", "strip", "(", "'\" \\t'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty": [[90, 92], ["parsers.read_properties.props.get"], "methods", ["None"], ["", "", "", "", "def", "getProperty", "(", "self", ",", "propertyName", ")", ":", "\n", "        ", "return", "self", ".", "props", ".", "get", "(", "propertyName", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.readHeadFile": [[64, 71], ["pandas.read_csv().as_matrix", "parsers.headIdParser", "pandas.read_csv"], "function", ["None"], ["", "", "", "", "def", "readHeadFile", "(", "headFile", ")", ":", "\n", "# head_id_col_vector = ['tId', 'emId', \"token\", \"nerId\", \"nerBilou\",\"nerBIO\", \"ner\", 'relLabels', \"headIds\", 'rels', 'relIds','scoringMatrixHeads','tokenWeights']", "\n", "    ", "head_id_col_vector", "=", "[", "'token_id'", ",", "'token'", ",", "\"BIO\"", ",", "\"relation\"", ",", "'head'", "]", "\n", "headfile", "=", "pd", ".", "read_csv", "(", "headFile", ",", "names", "=", "head_id_col_vector", ",", "encoding", "=", "\"utf-8\"", ",", "\n", "engine", "=", "'python'", ",", "sep", "=", "\"\\t\"", ",", "quoting", "=", "csv", ".", "QUOTE_NONE", ")", ".", "as_matrix", "(", ")", "\n", "\n", "return", "headIdParser", "(", "headfile", ")", ".", "head_docs", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.preprocess": [[72, 75], ["doc.extend"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.extend"], ["", "def", "preprocess", "(", "docs", ",", "wordindices", ",", "dataset_set_characters", ",", "dataset_set_bio_tags", ",", "dataset_set_ec_tags", ",", "dataset_set_relations", ")", ":", "\n", "    ", "for", "doc", "in", "docs", ":", "\n", "        ", "doc", ".", "extend", "(", "wordindices", ",", "dataset_set_characters", ",", "dataset_set_bio_tags", ",", "dataset_set_ec_tags", ",", "dataset_set_relations", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.train_es.checkInputs": [[11, 15], ["ValueError", "len", "os.path.isfile"], "function", ["None"], ["def", "checkInputs", "(", ")", ":", "\n", "    ", "if", "(", "len", "(", "sys", ".", "argv", ")", "<=", "3", ")", "or", "os", ".", "path", ".", "isfile", "(", "sys", ".", "argv", "[", "0", "]", ")", "==", "False", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The configuration file and the timestamp should be specified.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.__init__": [[12, 14], ["prettytable.PrettyTable"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "t", "=", "PrettyTable", "(", "[", "'Class'", ",", "'TP'", ",", "'FP'", ",", "'FN'", ",", "'Pr'", ",", "'Re'", ",", "'F1'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.add": [[15, 18], ["eval.printClasses.t.add_row"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "Class", ",", "TP", ",", "FP", ",", "FN", ",", "Pr", ",", "Re", ",", "F1", ")", ":", "\n", "        ", "if", "Class", "!=", "\"O\"", ":", "\n", "            ", "self", ".", "t", ".", "add_row", "(", "[", "Class", ",", "TP", ",", "FP", ",", "FN", ",", "Pr", ",", "Re", ",", "F1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print": [[19, 21], ["eval.printClasses.print"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print"], ["", "", "def", "print", "(", "self", ")", ":", "\n", "        ", "print", "(", "self", ".", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.__init__": [[143, 184], ["dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "ner_chunk_eval", "=", "\"boundaries_type\"", ",", "rel_chunk_eval", "=", "\"boundaries\"", ")", ":", "\n", "        ", "self", ".", "nerSegmentationTags", "=", "config", ".", "dataset_set_bio_tags", "\n", "\n", "self", ".", "NERset", "=", "config", ".", "dataset_set_ec_tags", "\n", "self", ".", "RELset", "=", "config", ".", "dataset_set_relations", "\n", "\n", "self", ".", "root_node", "=", "config", ".", "root_node", "\n", "\n", "\n", "self", ".", "ner_chunk_eval", "=", "ner_chunk_eval", "\n", "self", ".", "rel_chunk_eval", "=", "rel_chunk_eval", "\n", "\n", "\n", "self", ".", "totals", "=", "0", "\n", "self", ".", "oks", "=", "0", "\n", "\n", "self", ".", "tpsNER", "=", "0", "\n", "self", ".", "fpsNER", "=", "0", "\n", "self", ".", "fnsNER", "=", "0", "\n", "\n", "self", ".", "tpsREL", "=", "0", "\n", "self", ".", "fpsREL", "=", "0", "\n", "self", ".", "fnsREL", "=", "0", "\n", "\n", "self", ".", "tpsClassesNER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "self", ".", "fpsClassesNER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "self", ".", "fnsClassesNER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "self", ".", "precisionNER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "self", ".", "recallNER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "self", ".", "f1NER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "\n", "self", ".", "tpsClassesREL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "self", ".", "fpsClassesREL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "self", ".", "fnsClassesREL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "\n", "self", ".", "precisionREL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "self", ".", "recallREL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "self", ".", "f1REL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "\n", "self", ".", "correct_predsNER", ",", "self", ".", "total_correctNER", ",", "self", ".", "total_predsNER", "=", "0.", ",", "0.", ",", "0.", "\n", "self", ".", "correct_predsREL", ",", "self", ".", "total_correctREL", ",", "self", ".", "total_predsREL", "=", "0.", ",", "0.", ",", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.add": [[185, 300], ["range", "len", "utils.transformToInitialInput", "utils.transformToInitialInput", "eval.getTokenRelations", "eval.getTokenRelations", "utils.getSegmentationDict", "list", "list", "list", "list", "range", "range", "len", "len", "len", "len", "len", "len", "set", "set", "range", "range", "copy.deepcopy", "copy.deepcopy.append", "copy.deepcopy", "copy.deepcopy.append", "set", "set", "set", "set", "len", "len", "eval.get_chunks", "eval.get_chunks", "set", "set", "len", "len", "range", "range", "eval.relationChunks", "eval.relationChunks", "eval.relationChunks", "eval.relationChunks", "eval.keepOnlyChunkBoundaries", "eval.keepOnlyChunkBoundaries", "len", "len", "set", "set", "eval.get_chunks", "eval.get_chunks"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.transformToInitialInput", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.transformToInitialInput", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.getTokenRelations", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.getTokenRelations", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getSegmentationDict", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.get_chunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.get_chunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relationChunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relationChunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relationChunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relationChunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.keepOnlyChunkBoundaries", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.keepOnlyChunkBoundaries", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.get_chunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.get_chunks"], ["", "def", "add", "(", "self", ",", "pred_batchesNER", ",", "true_batchesNER", ",", "pred_batchesREL", ",", "true_batchesREL", ")", ":", "\n", "\n", "\n", "\n", "        ", "for", "batch_idx", "in", "range", "(", "len", "(", "pred_batchesNER", ")", ")", ":", "\n", "            ", "predNER", "=", "pred_batchesNER", "[", "batch_idx", "]", "\n", "trueNER", "=", "true_batchesNER", "[", "batch_idx", "]", "\n", "\n", "predRel", "=", "pred_batchesREL", "[", "batch_idx", "]", "\n", "trueRel", "=", "true_batchesREL", "[", "batch_idx", "]", "\n", "\n", "ptoken_ids", ",", "_", ",", "plabel_ids", ",", "phead_ids", ",", "plabel_names", "=", "utils", ".", "transformToInitialInput", "(", "\n", "predRel", ",", "self", ".", "RELset", ")", "\n", "\n", "_", ",", "_", ",", "tlabel_ids", ",", "thead_ids", ",", "tlabel_names", "=", "utils", ".", "transformToInitialInput", "(", "\n", "trueRel", ",", "self", ".", "RELset", ")", "\n", "\n", "trueRel", "=", "getTokenRelations", "(", "tlabel_names", ",", "thead_ids", ",", "ptoken_ids", ")", "\n", "\n", "predRel", "=", "getTokenRelations", "(", "plabel_names", ",", "phead_ids", ",", "ptoken_ids", ")", "\n", "\n", "tagsNER", "=", "utils", ".", "getSegmentationDict", "(", "self", ".", "nerSegmentationTags", ")", "#self.", "\n", "\n", "if", "self", ".", "ner_chunk_eval", "==", "\"boundaries_type\"", ":", "\n", "\n", "                ", "lab_chunks", "=", "set", "(", "get_chunks", "(", "trueNER", ",", "tagsNER", ")", ")", "\n", "lab_pred_chunks", "=", "set", "(", "get_chunks", "(", "predNER", ",", "tagsNER", ")", ")", "\n", "\n", "", "elif", "self", ".", "ner_chunk_eval", "==", "\"boundaries\"", ":", "\n", "\n", "                ", "lab_chunks", "=", "set", "(", "keepOnlyChunkBoundaries", "(", "set", "(", "get_chunks", "(", "trueNER", ",", "tagsNER", ")", ")", ")", ")", "\n", "lab_pred_chunks", "=", "set", "(", "keepOnlyChunkBoundaries", "(", "set", "(", "get_chunks", "(", "predNER", ",", "tagsNER", ")", ")", ")", ")", "\n", "\n", "\n", "\n", "\n", "", "lab_chunks_list", "=", "list", "(", "lab_chunks", ")", "\n", "lab_pred_chunks_list", "=", "list", "(", "lab_pred_chunks", ")", "\n", "\n", "\n", "if", "self", ".", "ner_chunk_eval", "==", "\"boundaries_type\"", ":", "\n", "                ", "for", "lab_idx", "in", "range", "(", "len", "(", "lab_pred_chunks_list", ")", ")", ":", "\n", "\n", "                    ", "if", "lab_pred_chunks_list", "[", "lab_idx", "]", "in", "lab_chunks_list", ":", "\n", "# print (lab_pred_chunks_list[lab_idx][0])", "\n", "                        ", "self", ".", "tpsClassesNER", "[", "lab_pred_chunks_list", "[", "lab_idx", "]", "[", "0", "]", "]", "+=", "1", "\n", "", "else", ":", "\n", "                        ", "self", ".", "fpsClassesNER", "[", "lab_pred_chunks_list", "[", "lab_idx", "]", "[", "0", "]", "]", "+=", "1", "\n", "# fnsEntitiesNER+=1", "\n", "\n", "", "", "for", "lab_idx", "in", "range", "(", "len", "(", "lab_chunks_list", ")", ")", ":", "\n", "\n", "                    ", "if", "lab_chunks_list", "[", "lab_idx", "]", "not", "in", "lab_pred_chunks_list", ":", "\n", "                        ", "self", ".", "fnsClassesNER", "[", "lab_chunks_list", "[", "lab_idx", "]", "[", "0", "]", "]", "+=", "1", "\n", "\n", "", "", "", "elif", "self", ".", "ner_chunk_eval", "==", "\"boundaries\"", ":", "\n", "                ", "for", "lab_idx", "in", "range", "(", "len", "(", "lab_pred_chunks_list", ")", ")", ":", "\n", "\n", "                    ", "if", "lab_pred_chunks_list", "[", "lab_idx", "]", "in", "lab_chunks_list", ":", "\n", "# print (lab_pred_chunks_list[lab_idx][0])", "\n", "                        ", "self", ".", "tpsNER", "+=", "1", "\n", "", "else", ":", "\n", "                        ", "self", ".", "fpsNER", "+=", "1", "\n", "# fnsEntitiesNER+=1", "\n", "\n", "", "", "for", "lab_idx", "in", "range", "(", "len", "(", "lab_chunks_list", ")", ")", ":", "\n", "\n", "                    ", "if", "lab_chunks_list", "[", "lab_idx", "]", "not", "in", "lab_pred_chunks_list", ":", "\n", "                        ", "self", ".", "fnsNER", "+=", "1", "\n", "\n", "", "", "", "if", "self", ".", "root_node", "==", "True", ":", "\n", "                ", "lab_chunks_list_with_ROOT", "=", "copy", ".", "deepcopy", "(", "lab_chunks_list", ")", "\n", "lab_chunks_list_with_ROOT", ".", "append", "(", "(", "None", ",", "0", ",", "0", ")", ")", "\n", "\n", "lab_pred_chunks_list_with_ROOT", "=", "copy", ".", "deepcopy", "(", "lab_pred_chunks_list", ")", "\n", "lab_pred_chunks_list_with_ROOT", ".", "append", "(", "(", "None", ",", "0", ",", "0", ")", ")", "\n", "\n", "relTrue", "=", "set", "(", "relationChunks", "(", "trueRel", ",", "lab_chunks_list_with_ROOT", ",", "relationTuple", "=", "self", ".", "rel_chunk_eval", ")", ")", "\n", "\n", "relPred", "=", "set", "(", "relationChunks", "(", "predRel", ",", "lab_pred_chunks_list_with_ROOT", ",", "relationTuple", "=", "self", ".", "rel_chunk_eval", ")", ")", "\n", "\n", "", "else", ":", "\n", "                ", "relTrue", "=", "set", "(", "relationChunks", "(", "trueRel", ",", "lab_chunks_list", ",", "relationTuple", "=", "self", ".", "rel_chunk_eval", ")", ")", "\n", "\n", "relPred", "=", "set", "(", "relationChunks", "(", "predRel", ",", "lab_pred_chunks_list", ",", "relationTuple", "=", "self", ".", "rel_chunk_eval", ")", ")", "\n", "\n", "", "relTrueList", "=", "list", "(", "relTrue", ")", "# trueRel#", "\n", "\n", "# if (len(trueRel)!=len(relTrueList)):", "\n", "#    print (\"warning\")", "\n", "\n", "relPredList", "=", "list", "(", "relPred", ")", "# predRel#", "\n", "\n", "for", "lab_idx", "in", "range", "(", "len", "(", "relPredList", ")", ")", ":", "\n", "\n", "                ", "if", "relPredList", "[", "lab_idx", "]", "in", "relTrueList", ":", "\n", "# print (lab_pred_chunks_list[lab_idx][0])", "\n", "                    ", "self", ".", "tpsClassesREL", "[", "relPredList", "[", "lab_idx", "]", "[", "1", "]", "]", "+=", "1", "\n", "# print (relPredList[lab_idx])", "\n", "", "else", ":", "\n", "                    ", "self", ".", "fpsClassesREL", "[", "relPredList", "[", "lab_idx", "]", "[", "1", "]", "]", "+=", "1", "\n", "# fnsEntitiesNER+=1", "\n", "\n", "", "", "for", "lab_idx", "in", "range", "(", "len", "(", "relTrueList", ")", ")", ":", "\n", "\n", "                ", "if", "relTrueList", "[", "lab_idx", "]", "not", "in", "relPredList", ":", "\n", "                    ", "self", ".", "fnsClassesREL", "[", "relTrueList", "[", "lab_idx", "]", "[", "1", "]", "]", "+=", "1", "\n", "\n", "", "", "self", ".", "correct_predsNER", "+=", "len", "(", "lab_chunks", "&", "lab_pred_chunks", ")", "\n", "self", ".", "total_predsNER", "+=", "len", "(", "lab_pred_chunks", ")", "\n", "self", ".", "total_correctNER", "+=", "len", "(", "lab_chunks", ")", "\n", "\n", "self", ".", "correct_predsREL", "+=", "len", "(", "relTrue", "&", "relPred", ")", "\n", "self", ".", "total_predsREL", "+=", "len", "(", "relPred", ")", "\n", "self", ".", "total_correctREL", "+=", "len", "(", "relTrue", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getResultsNER": [[303, 314], ["print", "print", "print", "print"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print"], ["", "", "def", "getResultsNER", "(", "self", ")", ":", "\n", "        ", "p", "=", "self", ".", "correct_predsNER", "/", "self", ".", "total_predsNER", "if", "self", ".", "correct_predsNER", ">", "0", "else", "0", "\n", "r", "=", "self", ".", "correct_predsNER", "/", "self", ".", "total_correctNER", "if", "self", ".", "correct_predsNER", ">", "0", "else", "0", "\n", "f1", "=", "2", "*", "p", "*", "r", "/", "(", "p", "+", "r", ")", "if", "self", ".", "correct_predsNER", ">", "0", "else", "0", "\n", "\n", "print", "(", "self", ".", "correct_predsNER", ")", "\n", "print", "(", "self", ".", "total_predsNER", ")", "\n", "print", "(", "self", ".", "total_correctNER", ")", "\n", "\n", "print", "(", "f1", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getResultsREL": [[315, 326], ["print", "print", "print", "print"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print"], ["", "def", "getResultsREL", "(", "self", ")", ":", "\n", "        ", "p", "=", "self", ".", "correct_predsREL", "/", "self", ".", "total_predsREL", "if", "self", ".", "correct_predsREL", ">", "0", "else", "0", "\n", "r", "=", "self", ".", "correct_predsREL", "/", "self", ".", "total_correctREL", "if", "self", ".", "correct_predsREL", ">", "0", "else", "0", "\n", "f1", "=", "2", "*", "p", "*", "r", "/", "(", "p", "+", "r", ")", "if", "self", ".", "correct_predsREL", ">", "0", "else", "0", "\n", "\n", "print", "(", "self", ".", "correct_predsREL", ")", "\n", "print", "(", "self", ".", "total_predsREL", ")", "\n", "print", "(", "self", ".", "total_correctREL", ")", "\n", "\n", "print", "(", "f1", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getPrecision": [[327, 332], ["None"], "methods", ["None"], ["", "def", "getPrecision", "(", "self", ",", "tps", ",", "fps", ")", ":", "\n", "        ", "if", "tps", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "return", "tps", "/", "(", "tps", "+", "fps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getRecall": [[333, 338], ["None"], "methods", ["None"], ["", "", "def", "getRecall", "(", "self", ",", "tps", ",", "fns", ")", ":", "\n", "        ", "if", "tps", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "return", "tps", "/", "(", "tps", "+", "fns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getF1": [[339, 345], ["eval.chunkEvaluator.getRecall", "eval.chunkEvaluator.getPrecision", "eval.chunkEvaluator.getRecall", "eval.chunkEvaluator.getPrecision"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision"], ["", "", "def", "getF1", "(", "self", ",", "tps", ",", "fps", ",", "fns", ")", ":", "\n", "        ", "if", "tps", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "return", "2", "*", "self", ".", "getPrecision", "(", "tps", ",", "fps", ")", "*", "self", ".", "getRecall", "(", "tps", ",", "fns", ")", "/", "(", "\n", "self", ".", "getPrecision", "(", "tps", ",", "fps", ")", "+", "self", ".", "getRecall", "(", "tps", ",", "fns", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getChunkedOverallAvgF1": [[347, 351], ["eval.chunkEvaluator.getChunkedNERF1", "eval.chunkEvaluator.getChunkedRELF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getChunkedNERF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getChunkedRELF1"], ["", "", "def", "getChunkedOverallAvgF1", "(", "self", ")", ":", "\n", "\n", "\n", "        ", "return", "(", "self", ".", "getChunkedNERF1", "(", ")", "+", "self", ".", "getChunkedRELF1", "(", ")", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getChunkedOverallF1": [[352, 383], ["eval.chunkEvaluator.getF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1"], ["", "def", "getChunkedOverallF1", "(", "self", ")", ":", "\n", "        ", "tpsNER", "=", "0", "\n", "fnsNER", "=", "0", "\n", "fpsNER", "=", "0", "\n", "tpsREL", "=", "0", "\n", "fnsREL", "=", "0", "\n", "fpsREL", "=", "0", "\n", "if", "self", ".", "ner_chunk_eval", "==", "\"boundaries_type\"", ":", "\n", "            ", "for", "label", "in", "self", ".", "NERset", ":", "\n", "# if label != \"O\" :", "\n", "                ", "tpsNER", "+=", "self", ".", "tpsClassesNER", "[", "label", "]", "\n", "\n", "fnsNER", "+=", "self", ".", "fnsClassesNER", "[", "label", "]", "\n", "fpsNER", "+=", "self", ".", "fpsClassesNER", "[", "label", "]", "\n", "", "", "elif", "self", ".", "ner_chunk_eval", "==", "\"boundaries\"", ":", "\n", "            ", "tpsNER", "=", "self", ".", "tpsNER", "\n", "fnsNER", "=", "self", ".", "fnsNER", "\n", "fpsNER", "=", "self", ".", "fpsNER", "\n", "\n", "\n", "", "for", "label", "in", "self", ".", "RELset", ":", "\n", "\n", "            ", "if", "label", "!=", "\"N\"", ":", "\n", "                ", "tpsREL", "+=", "self", ".", "tpsClassesREL", "[", "label", "]", "\n", "\n", "fnsREL", "+=", "self", ".", "fnsClassesREL", "[", "label", "]", "\n", "fpsREL", "+=", "self", ".", "fpsClassesREL", "[", "label", "]", "\n", "\n", "\n", "\n", "", "", "return", "self", ".", "getF1", "(", "tpsNER", "+", "tpsREL", ",", "fpsNER", "+", "fpsREL", ",", "fnsNER", "+", "fnsREL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getOverallF1": [[385, 411], ["eval.chunkEvaluator.getF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1"], ["", "def", "getOverallF1", "(", "self", ")", ":", "\n", "        ", "tpsNER", "=", "0", "\n", "fnsNER", "=", "0", "\n", "fpsNER", "=", "0", "\n", "tpsREL", "=", "0", "\n", "fnsREL", "=", "0", "\n", "fpsREL", "=", "0", "\n", "\n", "for", "label", "in", "self", ".", "NERset", ":", "\n", "# if label != \"O\" :", "\n", "            ", "tpsNER", "+=", "self", ".", "tpsClassesNER", "[", "label", "]", "\n", "\n", "fnsNER", "+=", "self", ".", "fnsClassesNER", "[", "label", "]", "\n", "fpsNER", "+=", "self", ".", "fpsClassesNER", "[", "label", "]", "\n", "\n", "", "for", "label", "in", "self", ".", "RELset", ":", "\n", "\n", "            ", "if", "label", "!=", "\"N\"", ":", "\n", "                ", "tpsREL", "+=", "self", ".", "tpsClassesREL", "[", "label", "]", "\n", "\n", "fnsREL", "+=", "self", ".", "fnsClassesREL", "[", "label", "]", "\n", "fpsREL", "+=", "self", ".", "fpsClassesREL", "[", "label", "]", "\n", "\n", "\n", "\n", "", "", "return", "self", ".", "getF1", "(", "tpsNER", "+", "tpsREL", ",", "fpsNER", "+", "fpsREL", ",", "fnsNER", "+", "fnsREL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getChunkedRELF1": [[412, 431], ["eval.chunkEvaluator.getF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1"], ["", "def", "getChunkedRELF1", "(", "self", ")", ":", "\n", "\n", "        ", "tpsREL", "=", "0", "\n", "fnsREL", "=", "0", "\n", "fpsREL", "=", "0", "\n", "\n", "\n", "\n", "for", "label", "in", "self", ".", "RELset", ":", "\n", "\n", "            ", "if", "label", "!=", "\"N\"", ":", "\n", "                ", "tpsREL", "+=", "self", ".", "tpsClassesREL", "[", "label", "]", "\n", "\n", "fnsREL", "+=", "self", ".", "fnsClassesREL", "[", "label", "]", "\n", "fpsREL", "+=", "self", ".", "fpsClassesREL", "[", "label", "]", "\n", "\n", "\n", "\n", "", "", "return", "self", ".", "getF1", "(", "tpsREL", ",", "fpsREL", ",", "fnsREL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getChunkedNERF1": [[432, 453], ["eval.chunkEvaluator.getF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1"], ["", "def", "getChunkedNERF1", "(", "self", ")", ":", "\n", "        ", "tpsNER", "=", "0", "\n", "fnsNER", "=", "0", "\n", "fpsNER", "=", "0", "\n", "if", "self", ".", "ner_chunk_eval", "==", "\"boundaries_type\"", ":", "\n", "\n", "\n", "            ", "for", "label", "in", "self", ".", "NERset", ":", "\n", "# if label != \"O\" :", "\n", "                ", "tpsNER", "+=", "self", ".", "tpsClassesNER", "[", "label", "]", "\n", "\n", "fnsNER", "+=", "self", ".", "fnsClassesNER", "[", "label", "]", "\n", "fpsNER", "+=", "self", ".", "fpsClassesNER", "[", "label", "]", "\n", "\n", "\n", "", "", "elif", "self", ".", "ner_chunk_eval", "==", "\"boundaries\"", ":", "\n", "            ", "tpsNER", "=", "self", ".", "tpsNER", "\n", "fnsNER", "=", "self", ".", "fnsNER", "\n", "fpsNER", "=", "self", ".", "fpsNER", "\n", "\n", "", "return", "self", ".", "getF1", "(", "tpsNER", ",", "fpsNER", ",", "fnsNER", ")", "\n", "", "def", "getAccuracy", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.getAccuracy": [[453, 455], ["None"], "methods", ["None"], ["", "def", "getAccuracy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "oks", "/", "self", ".", "totals", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.chunkEvaluator.printInfo": [[456, 514], ["eval.printClasses", "eval.printClasses.print", "eval.printClasses", "eval.printClasses.add", "eval.printClasses.add", "eval.printClasses.print", "eval.printClasses.add", "eval.printClasses.add", "eval.chunkEvaluator.getPrecision", "eval.chunkEvaluator.getRecall", "eval.chunkEvaluator.getF1", "eval.printClasses.add", "eval.chunkEvaluator.getPrecision", "eval.chunkEvaluator.getRecall", "eval.chunkEvaluator.getF1", "eval.printClasses.add", "eval.printClasses.add", "eval.chunkEvaluator.getPrecision", "eval.chunkEvaluator.getRecall", "eval.chunkEvaluator.getF1", "eval.chunkEvaluator.getPrecision", "eval.chunkEvaluator.getRecall", "eval.chunkEvaluator.getF1", "eval.chunkEvaluator.getPrecision", "eval.chunkEvaluator.getRecall", "eval.chunkEvaluator.getF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1"], ["", "def", "printInfo", "(", "self", ")", ":", "\n", "\n", "        ", "printer", "=", "printClasses", "(", ")", "\n", "\n", "if", "self", ".", "ner_chunk_eval", "==", "\"boundaries_type\"", ":", "\n", "            ", "for", "label", "in", "self", ".", "NERset", ":", "\n", "# if label != \"O\" :", "\n", "                ", "self", ".", "tpsNER", "+=", "self", ".", "tpsClassesNER", "[", "label", "]", "\n", "\n", "self", ".", "fnsNER", "+=", "self", ".", "fnsClassesNER", "[", "label", "]", "\n", "self", ".", "fpsNER", "+=", "self", ".", "fpsClassesNER", "[", "label", "]", "\n", "\n", "printer", ".", "add", "(", "label", ",", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fpsClassesNER", "[", "label", "]", ",", "self", ".", "fnsClassesNER", "[", "label", "]", ",", "\n", "self", ".", "getPrecision", "(", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fpsClassesNER", "[", "label", "]", ")", ",", "\n", "self", ".", "getRecall", "(", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fnsClassesNER", "[", "label", "]", ")", ",", "\n", "self", ".", "getF1", "(", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fpsClassesNER", "[", "label", "]", ",", "self", ".", "fnsClassesNER", "[", "label", "]", ")", ")", "\n", "\n", "\n", "\n", "# print('%s TP: %d  FP: %d  FN: %d TN: %d precision: %f recall: %f F1: %f' % (label,self.tpsClasses[label],self.fpsClasses[label],self.fnsClasses[label],self.tnsClasses[label], self.precision[label], self.recall[label], self.f1[label]))", "\n", "", "printer", ".", "add", "(", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ")", "\n", "printer", ".", "add", "(", "\"Micro NER chunk\"", ",", "self", ".", "tpsNER", ",", "self", ".", "fpsNER", ",", "self", ".", "fnsNER", ",", "\n", "self", ".", "getPrecision", "(", "self", ".", "tpsNER", ",", "self", ".", "fpsNER", ")", ",", "self", ".", "getRecall", "(", "self", ".", "tpsNER", ",", "self", ".", "fnsNER", ")", ",", "\n", "self", ".", "getF1", "(", "self", ".", "tpsNER", ",", "self", ".", "fpsNER", ",", "self", ".", "fnsNER", ")", ")", "\n", "\n", "", "elif", "self", ".", "ner_chunk_eval", "==", "\"boundaries\"", ":", "\n", "            ", "printer", ".", "add", "(", "\"Micro NER chunk boundaries\"", ",", "self", ".", "tpsNER", ",", "self", ".", "fpsNER", ",", "self", ".", "fnsNER", ",", "\n", "self", ".", "getPrecision", "(", "self", ".", "tpsNER", ",", "self", ".", "fpsNER", ")", ",", "self", ".", "getRecall", "(", "self", ".", "tpsNER", ",", "self", ".", "fnsNER", ")", ",", "\n", "self", ".", "getF1", "(", "self", ".", "tpsNER", ",", "self", ".", "fpsNER", ",", "self", ".", "fnsNER", ")", ")", "\n", "", "printer", ".", "print", "(", ")", "\n", "\n", "printer", "=", "printClasses", "(", ")", "\n", "for", "label", "in", "self", ".", "RELset", ":", "\n", "\n", "            ", "if", "label", "!=", "\"N\"", ":", "\n", "                ", "self", ".", "tpsREL", "+=", "self", ".", "tpsClassesREL", "[", "label", "]", "\n", "\n", "self", ".", "fnsREL", "+=", "self", ".", "fnsClassesREL", "[", "label", "]", "\n", "self", ".", "fpsREL", "+=", "self", ".", "fpsClassesREL", "[", "label", "]", "\n", "\n", "printer", ".", "add", "(", "label", ",", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fpsClassesREL", "[", "label", "]", ",", "self", ".", "fnsClassesREL", "[", "label", "]", ",", "\n", "self", ".", "getPrecision", "(", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fpsClassesREL", "[", "label", "]", ")", ",", "\n", "self", ".", "getRecall", "(", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fnsClassesREL", "[", "label", "]", ")", ",", "\n", "self", ".", "getF1", "(", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fpsClassesREL", "[", "label", "]", ",", "self", ".", "fnsClassesREL", "[", "label", "]", ")", ")", "\n", "\n", "\n", "\n", "# print('%s TP: %d  FP: %d  FN: %d TN: %d precision: %f recall: %f F1: %f' % (label,self.tpsClasses[label],self.fpsClasses[label],self.fnsClasses[label],self.tnsClasses[label], self.precision[label], self.recall[label], self.f1[label]))", "\n", "", "", "printer", ".", "add", "(", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ")", "\n", "printer", ".", "add", "(", "\"Micro REL chunk\"", ",", "self", ".", "tpsREL", ",", "self", ".", "fpsREL", ",", "self", ".", "fnsREL", ",", "\n", "self", ".", "getPrecision", "(", "self", ".", "tpsREL", ",", "self", ".", "fpsREL", ")", ",", "self", ".", "getRecall", "(", "self", ".", "tpsREL", ",", "self", ".", "fnsREL", ")", ",", "\n", "self", ".", "getF1", "(", "self", ".", "tpsREL", ",", "self", ".", "fpsREL", ",", "self", ".", "fnsREL", ")", ")", "\n", "\n", "printer", ".", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.__init__": [[550, 606], ["dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys", "dict.fromkeys"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset_params", ",", "rel_chunk_eval", "=", "\"boundaries\"", ")", ":", "\n", "        ", "self", ".", "nerSegmentationTags", "=", "dataset_params", ".", "dataset_set_bio_tags", "\n", "\n", "self", ".", "NERset", "=", "dataset_params", ".", "dataset_set_ec_tags", "#utils.getNerSetACE04()", "\n", "self", ".", "RELset", "=", "dataset_params", ".", "dataset_set_relations", "#reutils.getRelSetACE04()", "\n", "#self.nerDict=dataset_params", "\n", "# print (self.NERset)", "\n", "self", ".", "rel_chunk_eval", "=", "rel_chunk_eval", "\n", "self", ".", "totals", "=", "0", "\n", "self", ".", "oks", "=", "0", "\n", "\n", "self", ".", "tpsNER", "=", "0", "\n", "self", ".", "fpsNER", "=", "0", "\n", "self", ".", "fnsNER", "=", "0", "\n", "\n", "self", ".", "tpsREL", "=", "0", "\n", "self", ".", "fpsREL", "=", "0", "\n", "self", ".", "fnsREL", "=", "0", "\n", "\n", "self", ".", "tpsNERMacro", "=", "0", "\n", "self", ".", "fpsNERMacro", "=", "0", "\n", "self", ".", "fnsNERMacro", "=", "0", "\n", "\n", "self", ".", "tpsNERMacro_no_other", "=", "0", "\n", "self", ".", "fpsNERMacro_no_other", "=", "0", "\n", "self", ".", "fnsNERMacro_no_other", "=", "0", "\n", "\n", "self", ".", "tpsRELMacro", "=", "0", "\n", "self", ".", "fpsRELMacro", "=", "0", "\n", "self", ".", "fnsRELMacro", "=", "0", "\n", "\n", "\n", "self", ".", "NERF1Macro", "=", "0", "\n", "self", ".", "NERF1Macro_no_other", "=", "0", "\n", "self", ".", "RELF1Macro", "=", "0", "\n", "self", ".", "OverallF1Macro", "=", "0", "\n", "self", ".", "OverallF1Macro_no_other", "=", "0", "\n", "\n", "\n", "self", ".", "tpsClassesNER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "self", ".", "fpsClassesNER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "self", ".", "fnsClassesNER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "self", ".", "precisionNER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "self", ".", "recallNER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "self", ".", "f1NER", "=", "dict", ".", "fromkeys", "(", "self", ".", "NERset", ",", "0", ")", "\n", "\n", "self", ".", "tpsClassesREL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "self", ".", "fpsClassesREL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "self", ".", "fnsClassesREL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "\n", "self", ".", "precisionREL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "self", ".", "recallREL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "self", ".", "f1REL", "=", "dict", ".", "fromkeys", "(", "self", ".", "RELset", ",", "0", ")", "\n", "\n", "self", ".", "correct_predsNER", ",", "self", ".", "total_correctNER", ",", "self", ".", "total_predsNER", "=", "0.", ",", "0.", ",", "0.", "\n", "self", ".", "correct_predsREL", ",", "self", ".", "total_correctREL", ",", "self", ".", "total_predsREL", "=", "0.", ",", "0.", ",", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add": [[607, 704], ["range", "len", "utils.transformToInitialInput", "utils.transformToInitialInput", "eval.getTokenRelations", "eval.getTokenRelations", "utils.getSegmentationDict", "set", "list", "eval.listOfIdsToTags", "eval.listOfIdsToTags", "set", "set", "list", "list", "range", "range", "set", "set", "list", "list", "range", "range", "len", "len", "len", "len", "len", "len", "eval.get_chunks", "eval.classesToChunks", "eval.classesToChunks", "len", "len", "eval.relationChunks", "eval.relationChunks", "len", "len", "eval.listOfTagsToids"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.transformToInitialInput", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.transformToInitialInput", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.getTokenRelations", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.getTokenRelations", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getSegmentationDict", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.listOfIdsToTags", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.listOfIdsToTags", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.get_chunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.classesToChunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.classesToChunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relationChunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relationChunks", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.listOfTagsToids"], ["", "def", "add", "(", "self", ",", "pred_batchesNER", ",", "true_batchesNER", ",", "pred_batchesREL", ",", "true_batchesREL", ",", "true_batchesBIONER", ")", ":", "\n", "\n", "\n", "\n", "        ", "for", "batch_idx", "in", "range", "(", "len", "(", "pred_batchesNER", ")", ")", ":", "\n", "            ", "predNER", "=", "pred_batchesNER", "[", "batch_idx", "]", "\n", "trueNER", "=", "true_batchesNER", "[", "batch_idx", "]", "\n", "\n", "predRel", "=", "pred_batchesREL", "[", "batch_idx", "]", "\n", "trueRel", "=", "true_batchesREL", "[", "batch_idx", "]", "\n", "\n", "trueBIONER", "=", "true_batchesBIONER", "[", "batch_idx", "]", "\n", "\n", "\n", "ptoken_ids", ",", "_", ",", "plabel_ids", ",", "phead_ids", ",", "plabel_names", "=", "utils", ".", "transformToInitialInput", "(", "\n", "predRel", ",", "self", ".", "RELset", ")", "\n", "\n", "_", ",", "_", ",", "tlabel_ids", ",", "thead_ids", ",", "tlabel_names", "=", "utils", ".", "transformToInitialInput", "(", "\n", "trueRel", ",", "self", ".", "RELset", ")", "\n", "\n", "trueRel", "=", "getTokenRelations", "(", "tlabel_names", ",", "thead_ids", ",", "ptoken_ids", ")", "\n", "\n", "predRel", "=", "getTokenRelations", "(", "plabel_names", ",", "phead_ids", ",", "ptoken_ids", ")", "\n", "\n", "\n", "#print (self.NERset)", "\n", "tagsNER", "=", "utils", ".", "getSegmentationDict", "(", "self", ".", "nerSegmentationTags", ")", "#self.", "\n", "\n", "\n", "\n", "lab_chunks_", "=", "set", "(", "get_chunks", "(", "listOfTagsToids", "(", "trueBIONER", ",", "self", ".", "nerSegmentationTags", ")", ",", "tagsNER", ")", ")", "\n", "#lab_pred_chunks = set(get_chunks(predNER, tagsNER))", "\n", "\n", "lab_chunks_list_", "=", "list", "(", "lab_chunks_", ")", "\n", "\n", "\n", "trueNER_tags", "=", "listOfIdsToTags", "(", "trueNER", ",", "self", ".", "NERset", ")", "\n", "predNER_tags", "=", "listOfIdsToTags", "(", "predNER", ",", "self", ".", "NERset", ")", "\n", "\n", "lab_chunks", "=", "set", "(", "classesToChunks", "(", "trueNER_tags", ",", "lab_chunks_list_", ")", ")", "\n", "lab_pred_chunks", "=", "set", "(", "classesToChunks", "(", "predNER_tags", ",", "lab_chunks_list_", ")", ")", "\n", "\n", "lab_chunks_list", "=", "list", "(", "lab_chunks", ")", "\n", "lab_pred_chunks_list", "=", "list", "(", "lab_pred_chunks", ")", "\n", "\n", "\n", "for", "lab_idx", "in", "range", "(", "len", "(", "lab_pred_chunks_list", ")", ")", ":", "\n", "\n", "                ", "if", "lab_pred_chunks_list", "[", "lab_idx", "]", "in", "lab_chunks_list", ":", "\n", "# print (lab_pred_chunks_list[lab_idx][0])", "\n", "                    ", "self", ".", "tpsClassesNER", "[", "lab_pred_chunks_list", "[", "lab_idx", "]", "[", "0", "]", "]", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "self", ".", "fpsClassesNER", "[", "lab_pred_chunks_list", "[", "lab_idx", "]", "[", "0", "]", "]", "+=", "1", "\n", "# fnsEntitiesNER+=1", "\n", "\n", "", "", "for", "lab_idx", "in", "range", "(", "len", "(", "lab_chunks_list", ")", ")", ":", "\n", "\n", "                ", "if", "lab_chunks_list", "[", "lab_idx", "]", "not", "in", "lab_pred_chunks_list", ":", "\n", "                    ", "self", ".", "fnsClassesNER", "[", "lab_chunks_list", "[", "lab_idx", "]", "[", "0", "]", "]", "+=", "1", "\n", "\n", "", "", "relTrue", "=", "set", "(", "relationChunks", "(", "trueRel", ",", "lab_chunks_list", ",", "relationTuple", "=", "self", ".", "rel_chunk_eval", ")", ")", "\n", "\n", "relPred", "=", "set", "(", "relationChunks", "(", "predRel", ",", "lab_pred_chunks_list", ",", "relationTuple", "=", "self", ".", "rel_chunk_eval", ")", ")", "\n", "\n", "relTrueList", "=", "list", "(", "relTrue", ")", "# trueRel#", "\n", "\n", "# if (len(trueRel)!=len(relTrueList)):", "\n", "#    print (\"warning\")", "\n", "\n", "relPredList", "=", "list", "(", "relPred", ")", "# predRel#", "\n", "\n", "#print(\"GOLD REL chunks:\" + str(relTrueList))", "\n", "\n", "#print(\"PRED REL chunks:\" + str(relPredList))", "\n", "\n", "for", "lab_idx", "in", "range", "(", "len", "(", "relPredList", ")", ")", ":", "\n", "\n", "                ", "if", "relPredList", "[", "lab_idx", "]", "in", "relTrueList", ":", "\n", "# print (lab_pred_chunks_list[lab_idx][0])", "\n", "                    ", "self", ".", "tpsClassesREL", "[", "relPredList", "[", "lab_idx", "]", "[", "1", "]", "]", "+=", "1", "\n", "# print (relPredList[lab_idx])", "\n", "", "else", ":", "\n", "                    ", "self", ".", "fpsClassesREL", "[", "relPredList", "[", "lab_idx", "]", "[", "1", "]", "]", "+=", "1", "\n", "# fnsEntitiesNER+=1", "\n", "\n", "", "", "for", "lab_idx", "in", "range", "(", "len", "(", "relTrueList", ")", ")", ":", "\n", "\n", "                ", "if", "relTrueList", "[", "lab_idx", "]", "not", "in", "relPredList", ":", "\n", "                    ", "self", ".", "fnsClassesREL", "[", "relTrueList", "[", "lab_idx", "]", "[", "1", "]", "]", "+=", "1", "\n", "\n", "", "", "self", ".", "correct_predsNER", "+=", "len", "(", "lab_chunks", "&", "lab_pred_chunks", ")", "\n", "self", ".", "total_predsNER", "+=", "len", "(", "lab_pred_chunks", ")", "\n", "self", ".", "total_correctNER", "+=", "len", "(", "lab_chunks", ")", "\n", "\n", "self", ".", "correct_predsREL", "+=", "len", "(", "relTrue", "&", "relPred", ")", "\n", "self", ".", "total_predsREL", "+=", "len", "(", "relPred", ")", "\n", "self", ".", "total_correctREL", "+=", "len", "(", "relTrue", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getResultsNER": [[707, 718], ["print", "print", "print", "print"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print"], ["", "", "def", "getResultsNER", "(", "self", ")", ":", "\n", "        ", "p", "=", "self", ".", "correct_predsNER", "/", "self", ".", "total_predsNER", "if", "self", ".", "correct_predsNER", ">", "0", "else", "0", "\n", "r", "=", "self", ".", "correct_predsNER", "/", "self", ".", "total_correctNER", "if", "self", ".", "correct_predsNER", ">", "0", "else", "0", "\n", "f1", "=", "2", "*", "p", "*", "r", "/", "(", "p", "+", "r", ")", "if", "self", ".", "correct_predsNER", ">", "0", "else", "0", "\n", "\n", "print", "(", "self", ".", "correct_predsNER", ")", "\n", "print", "(", "self", ".", "total_predsNER", ")", "\n", "print", "(", "self", ".", "total_correctNER", ")", "\n", "\n", "print", "(", "f1", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getResultsREL": [[719, 730], ["print", "print", "print", "print"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print"], ["", "def", "getResultsREL", "(", "self", ")", ":", "\n", "        ", "p", "=", "self", ".", "correct_predsREL", "/", "self", ".", "total_predsREL", "if", "self", ".", "correct_predsREL", ">", "0", "else", "0", "\n", "r", "=", "self", ".", "correct_predsREL", "/", "self", ".", "total_correctREL", "if", "self", ".", "correct_predsREL", ">", "0", "else", "0", "\n", "f1", "=", "2", "*", "p", "*", "r", "/", "(", "p", "+", "r", ")", "if", "self", ".", "correct_predsREL", ">", "0", "else", "0", "\n", "\n", "print", "(", "self", ".", "correct_predsREL", ")", "\n", "print", "(", "self", ".", "total_predsREL", ")", "\n", "print", "(", "self", ".", "total_correctREL", ")", "\n", "\n", "print", "(", "f1", ")", "\n", "return", "f1", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision": [[731, 736], ["None"], "methods", ["None"], ["", "def", "getPrecision", "(", "self", ",", "tps", ",", "fps", ")", ":", "\n", "        ", "if", "tps", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "return", "tps", "/", "(", "tps", "+", "fps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall": [[737, 742], ["None"], "methods", ["None"], ["", "", "def", "getRecall", "(", "self", ",", "tps", ",", "fns", ")", ":", "\n", "        ", "if", "tps", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "return", "tps", "/", "(", "tps", "+", "fns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1": [[743, 749], ["eval.relaxedChunkEvaluator.getRecall", "eval.relaxedChunkEvaluator.getPrecision", "eval.relaxedChunkEvaluator.getRecall", "eval.relaxedChunkEvaluator.getPrecision"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision"], ["", "", "def", "getF1", "(", "self", ",", "tps", ",", "fps", ",", "fns", ")", ":", "\n", "        ", "if", "tps", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "return", "2", "*", "self", ".", "getPrecision", "(", "tps", ",", "fps", ")", "*", "self", ".", "getRecall", "(", "tps", ",", "fns", ")", "/", "(", "\n", "self", ".", "getPrecision", "(", "tps", ",", "fps", ")", "+", "self", ".", "getRecall", "(", "tps", ",", "fns", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getChunkedOverallF1": [[750, 776], ["eval.relaxedChunkEvaluator.getF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1"], ["", "", "def", "getChunkedOverallF1", "(", "self", ")", ":", "\n", "        ", "tpsNER", "=", "0", "\n", "fnsNER", "=", "0", "\n", "fpsNER", "=", "0", "\n", "tpsREL", "=", "0", "\n", "fnsREL", "=", "0", "\n", "fpsREL", "=", "0", "\n", "\n", "for", "label", "in", "self", ".", "NERset", ":", "\n", "# if label != \"O\" :", "\n", "            ", "tpsNER", "+=", "self", ".", "tpsClassesNER", "[", "label", "]", "\n", "\n", "fnsNER", "+=", "self", ".", "fnsClassesNER", "[", "label", "]", "\n", "fpsNER", "+=", "self", ".", "fpsClassesNER", "[", "label", "]", "\n", "\n", "", "for", "label", "in", "self", ".", "RELset", ":", "\n", "\n", "            ", "if", "label", "!=", "\"N\"", ":", "\n", "                ", "tpsREL", "+=", "self", ".", "tpsClassesREL", "[", "label", "]", "\n", "\n", "fnsREL", "+=", "self", ".", "fnsClassesREL", "[", "label", "]", "\n", "fpsREL", "+=", "self", ".", "fpsClassesREL", "[", "label", "]", "\n", "\n", "\n", "\n", "", "", "return", "self", ".", "getF1", "(", "tpsNER", "+", "tpsREL", ",", "fpsNER", "+", "fpsREL", ",", "fnsNER", "+", "fnsREL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getOverallF1": [[778, 804], ["eval.relaxedChunkEvaluator.getF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1"], ["", "def", "getOverallF1", "(", "self", ")", ":", "\n", "        ", "tpsNER", "=", "0", "\n", "fnsNER", "=", "0", "\n", "fpsNER", "=", "0", "\n", "tpsREL", "=", "0", "\n", "fnsREL", "=", "0", "\n", "fpsREL", "=", "0", "\n", "\n", "for", "label", "in", "self", ".", "NERset", ":", "\n", "# if label != \"O\" :", "\n", "            ", "tpsNER", "+=", "self", ".", "tpsClassesNER", "[", "label", "]", "\n", "\n", "fnsNER", "+=", "self", ".", "fnsClassesNER", "[", "label", "]", "\n", "fpsNER", "+=", "self", ".", "fpsClassesNER", "[", "label", "]", "\n", "\n", "", "for", "label", "in", "self", ".", "RELset", ":", "\n", "\n", "            ", "if", "label", "!=", "\"N\"", ":", "\n", "                ", "tpsREL", "+=", "self", ".", "tpsClassesREL", "[", "label", "]", "\n", "\n", "fnsREL", "+=", "self", ".", "fnsClassesREL", "[", "label", "]", "\n", "fpsREL", "+=", "self", ".", "fpsClassesREL", "[", "label", "]", "\n", "\n", "\n", "\n", "", "", "return", "self", ".", "getF1", "(", "tpsNER", "+", "tpsREL", ",", "fpsNER", "+", "fpsREL", ",", "fnsNER", "+", "fnsREL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getChunkedRELF1": [[805, 824], ["eval.relaxedChunkEvaluator.getF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1"], ["", "def", "getChunkedRELF1", "(", "self", ")", ":", "\n", "\n", "        ", "tpsREL", "=", "0", "\n", "fnsREL", "=", "0", "\n", "fpsREL", "=", "0", "\n", "\n", "\n", "\n", "for", "label", "in", "self", ".", "RELset", ":", "\n", "\n", "            ", "if", "label", "!=", "\"N\"", ":", "\n", "                ", "tpsREL", "+=", "self", ".", "tpsClassesREL", "[", "label", "]", "\n", "\n", "fnsREL", "+=", "self", ".", "fnsClassesREL", "[", "label", "]", "\n", "fpsREL", "+=", "self", ".", "fpsClassesREL", "[", "label", "]", "\n", "\n", "\n", "\n", "", "", "return", "self", ".", "getF1", "(", "tpsREL", ",", "fpsREL", ",", "fnsREL", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getChunkedNERF1": [[825, 839], ["eval.relaxedChunkEvaluator.getF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1"], ["", "def", "getChunkedNERF1", "(", "self", ")", ":", "\n", "        ", "tpsNER", "=", "0", "\n", "fnsNER", "=", "0", "\n", "fpsNER", "=", "0", "\n", "\n", "\n", "for", "label", "in", "self", ".", "NERset", ":", "\n", "# if label != \"O\" :", "\n", "            ", "tpsNER", "+=", "self", ".", "tpsClassesNER", "[", "label", "]", "\n", "\n", "fnsNER", "+=", "self", ".", "fnsClassesNER", "[", "label", "]", "\n", "fpsNER", "+=", "self", ".", "fpsClassesNER", "[", "label", "]", "\n", "\n", "", "return", "self", ".", "getF1", "(", "tpsNER", ",", "fpsNER", ",", "fnsNER", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getAccuracy": [[840, 842], ["None"], "methods", ["None"], ["", "def", "getAccuracy", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "oks", "/", "self", ".", "totals", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getMacroF1scores": [[843, 847], ["None"], "methods", ["None"], ["", "def", "getMacroF1scores", "(", "self", ")", ":", "\n", "\n", "\n", "        ", "return", "self", ".", "NERF1Macro", ",", "self", ".", "RELF1Macro", ",", "self", ".", "OverallF1Macro", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getMacroF1scoresNoOtherClass": [[848, 851], ["None"], "methods", ["None"], ["", "def", "getMacroF1scoresNoOtherClass", "(", "self", ")", ":", "\n", "\n", "        ", "return", "self", ".", "NERF1Macro_no_other", ",", "self", ".", "RELF1Macro", ",", "self", ".", "OverallF1Macro_no_other", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.computeInfoMacro": [[853, 1002], ["eval.printClasses", "eval.printClasses.add", "eval.printClasses.add", "eval.printClasses", "eval.printClasses.add", "eval.printClasses.add", "prettytable.PrettyTable", "prettytable.PrettyTable.add_row", "eval.relaxedChunkEvaluator.getF1", "eval.relaxedChunkEvaluator.getPrecision", "eval.relaxedChunkEvaluator.getRecall", "eval.printClasses.add", "eval.printClasses.add", "eval.printClasses.print", "eval.printClasses.print", "prettytable.PrettyTable.add_row", "print", "len", "len", "len", "x.lower", "eval.relaxedChunkEvaluator.getF1", "eval.relaxedChunkEvaluator.getPrecision", "eval.relaxedChunkEvaluator.getRecall", "eval.printClasses.add", "len", "len", "len", "x.lower", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add"], ["", "def", "computeInfoMacro", "(", "self", ",", "printScores", "=", "True", ")", ":", "\n", "\n", "        ", "printer", "=", "printClasses", "(", ")", "\n", "\n", "\n", "averageNERF1_no_Other", "=", "0", "\n", "averageNERF1", "=", "0", "\n", "\n", "averageNERrecall_no_Other", "=", "0", "\n", "averageNERrecall", "=", "0", "\n", "\n", "averageNERprecision_no_Other", "=", "0", "\n", "averageNERprecision", "=", "0", "\n", "\n", "for", "label", "in", "self", ".", "NERset", ":", "\n", "            ", "if", "label", "!=", "\"O\"", ":", "\n", "                ", "self", ".", "tpsNERMacro", "+=", "self", ".", "tpsClassesNER", "[", "label", "]", "\n", "\n", "self", ".", "fnsNERMacro", "+=", "self", ".", "fnsClassesNER", "[", "label", "]", "\n", "self", ".", "fpsNERMacro", "+=", "self", ".", "fpsClassesNER", "[", "label", "]", "\n", "\n", "", "f1_class", "=", "self", ".", "getF1", "(", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fpsClassesNER", "[", "label", "]", ",", "self", ".", "fnsClassesNER", "[", "label", "]", ")", "\n", "precision_class", "=", "self", ".", "getPrecision", "(", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fpsClassesNER", "[", "label", "]", ")", "\n", "recall_class", "=", "self", ".", "getRecall", "(", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fnsClassesNER", "[", "label", "]", ")", "\n", "if", "label", "!=", "\"O\"", ":", "\n", "                ", "averageNERF1", "+=", "f1_class", "\n", "averageNERrecall", "+=", "recall_class", "\n", "averageNERprecision", "+=", "precision_class", "\n", "\n", "", "if", "label", "!=", "\"O\"", "and", "label", "!=", "\"Other\"", ":", "\n", "                ", "averageNERF1_no_Other", "+=", "f1_class", "\n", "averageNERrecall_no_Other", "+=", "recall_class", "\n", "averageNERprecision_no_Other", "+=", "precision_class", "\n", "\n", "\n", "", "if", "label", "!=", "\"O\"", "and", "label", "!=", "\"Other\"", ":", "\n", "                ", "self", ".", "tpsNERMacro_no_other", "+=", "self", ".", "tpsClassesNER", "[", "label", "]", "\n", "\n", "self", ".", "fnsNERMacro_no_other", "+=", "self", ".", "fnsClassesNER", "[", "label", "]", "\n", "self", ".", "fpsNERMacro_no_other", "+=", "self", ".", "fpsClassesNER", "[", "label", "]", "\n", "\n", "\n", "", "printer", ".", "add", "(", "label", ",", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fpsClassesNER", "[", "label", "]", ",", "self", ".", "fnsClassesNER", "[", "label", "]", ",", "\n", "precision_class", ",", "\n", "recall_class", ",", "\n", "f1_class", ")", "\n", "\n", "\n", "\n", "# print('%s TP: %d  FP: %d  FN: %d TN: %d precision: %f recall: %f F1: %f' % (label,self.tpsClasses[label],self.fpsClasses[label],self.fnsClasses[label],self.tnsClasses[label], self.precision[label], self.recall[label], self.f1[label]))", "\n", "", "printer", ".", "add", "(", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ")", "\n", "\n", "averageNERrecall", "=", "averageNERrecall", "/", "(", "len", "(", "self", ".", "NERset", ")", "-", "1", ")", "\n", "averageNERprecision", "=", "averageNERprecision", "/", "(", "len", "(", "self", ".", "NERset", ")", "-", "1", ")", "\n", "averageNERF1", "=", "averageNERF1", "/", "(", "len", "(", "self", ".", "NERset", ")", "-", "1", ")", "\n", "\n", "\n", "if", "\"other\"", "in", "[", "x", ".", "lower", "(", ")", "for", "x", "in", "self", ".", "NERset", "]", ":", "\n", "\n", "            ", "averageNERprecision_no_Other", "=", "averageNERprecision_no_Other", "/", "(", "len", "(", "self", ".", "NERset", ")", "-", "2", ")", "\n", "averageNERrecall_no_Other", "=", "averageNERrecall_no_Other", "/", "(", "len", "(", "self", ".", "NERset", ")", "-", "2", ")", "\n", "averageNERF1_no_Other", "=", "averageNERF1_no_Other", "/", "(", "len", "(", "self", ".", "NERset", ")", "-", "2", ")", "\n", "\n", "printer", ".", "add", "(", "\"Macro NER chunk RELAXED ^Other\"", ",", "self", ".", "tpsNERMacro_no_other", ",", "self", ".", "fpsNERMacro_no_other", ",", "self", ".", "fnsNERMacro_no_other", ",", "\n", "averageNERprecision_no_Other", ",", "averageNERrecall_no_Other", ",", "\n", "averageNERF1_no_Other", ")", "\n", "", "else", ":", "\n", "            ", "averageNERprecision_no_Other", "=", "averageNERprecision", "\n", "averageNERrecall_no_Other", "=", "averageNERrecall", "\n", "averageNERF1_no_Other", "=", "averageNERF1", "\n", "\n", "\n", "", "printer", ".", "add", "(", "\"Macro NER chunk RELAXED\"", ",", "self", ".", "tpsNERMacro", ",", "self", ".", "fpsNERMacro", ",", "self", ".", "fnsNERMacro", ",", "\n", "averageNERprecision", ",", "averageNERrecall", ",", "\n", "averageNERF1", ")", "\n", "if", "printScores", "==", "True", ":", "\n", "\n", "            ", "printer", ".", "print", "(", ")", "\n", "\n", "", "printer", "=", "printClasses", "(", ")", "\n", "\n", "averageRELF1", "=", "0", "\n", "\n", "averageRELrecall", "=", "0", "\n", "\n", "averageRELprecision", "=", "0", "\n", "\n", "for", "label", "in", "self", ".", "RELset", ":", "\n", "\n", "            ", "if", "label", "!=", "\"N\"", ":", "\n", "                ", "self", ".", "tpsRELMacro", "+=", "self", ".", "tpsClassesREL", "[", "label", "]", "\n", "\n", "self", ".", "fnsRELMacro", "+=", "self", ".", "fnsClassesREL", "[", "label", "]", "\n", "self", ".", "fpsRELMacro", "+=", "self", ".", "fpsClassesREL", "[", "label", "]", "\n", "\n", "f1_class", "=", "self", ".", "getF1", "(", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fpsClassesREL", "[", "label", "]", ",", "self", ".", "fnsClassesREL", "[", "label", "]", ")", "\n", "precision_class", "=", "self", ".", "getPrecision", "(", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fpsClassesREL", "[", "label", "]", ")", "\n", "recall_class", "=", "self", ".", "getRecall", "(", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fnsClassesREL", "[", "label", "]", ")", "\n", "\n", "averageRELF1", "+=", "f1_class", "\n", "averageRELrecall", "+=", "recall_class", "\n", "averageRELprecision", "+=", "precision_class", "\n", "\n", "printer", ".", "add", "(", "label", ",", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fpsClassesREL", "[", "label", "]", ",", "self", ".", "fnsClassesREL", "[", "label", "]", ",", "\n", "precision_class", ",", "\n", "recall_class", ",", "\n", "f1_class", ")", "\n", "\n", "\n", "\n", "# print('%s TP: %d  FP: %d  FN: %d TN: %d precision: %f recall: %f F1: %f' % (label,self.tpsClasses[label],self.fpsClasses[label],self.fnsClasses[label],self.tnsClasses[label], self.precision[label], self.recall[label], self.f1[label]))", "\n", "", "", "printer", ".", "add", "(", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ")", "\n", "\n", "\n", "averageRELrecall", "=", "averageRELrecall", "/", "(", "len", "(", "self", ".", "RELset", ")", "-", "1", ")", "\n", "averageRELprecision", "=", "averageRELprecision", "/", "(", "len", "(", "self", ".", "RELset", ")", "-", "1", ")", "\n", "averageRELF1", "=", "averageRELF1", "/", "(", "len", "(", "self", ".", "RELset", ")", "-", "1", ")", "\n", "\n", "\n", "\n", "\n", "printer", ".", "add", "(", "\"Macro REL chunk RELAXED\"", ",", "self", ".", "tpsRELMacro", ",", "self", ".", "fpsRELMacro", ",", "self", ".", "fnsRELMacro", ",", "\n", "averageRELprecision", ",", "averageRELrecall", ",", "\n", "averageRELF1", ")", "\n", "\n", "if", "printScores", "==", "True", ":", "\n", "            ", "printer", ".", "print", "(", ")", "\n", "\n", "", "over_avg_f1", "=", "(", "averageNERF1", "+", "averageRELF1", ")", "/", "2", "\n", "over_avg_f1_no_other", "=", "(", "averageNERF1_no_Other", "+", "averageRELF1", ")", "/", "2", "\n", "\n", "t", "=", "PrettyTable", "(", "[", "'Type'", ",", "'NER_F1'", ",", "'REL_F1'", ",", "'AVG_F1'", "]", ")", "\n", "\n", "t", ".", "add_row", "(", "[", "'Overall'", ",", "averageNERF1", ",", "averageRELF1", ",", "over_avg_f1", "]", ")", "\n", "if", "\"other\"", "in", "[", "x", ".", "lower", "(", ")", "for", "x", "in", "self", ".", "NERset", "]", ":", "\n", "            ", "t", ".", "add_row", "(", "[", "'Overall ^Other'", ",", "averageNERF1_no_Other", ",", "averageRELF1", ",", "over_avg_f1_no_other", "]", ")", "\n", "\n", "", "if", "printScores", "==", "True", ":", "\n", "            ", "print", "(", "t", ")", "\n", "\n", "", "self", ".", "NERF1Macro", "=", "averageNERF1", "\n", "self", ".", "NERF1Macro_no_other", "=", "averageNERF1_no_Other", "\n", "self", ".", "RELF1Macro", "=", "averageRELF1", "\n", "self", ".", "OverallF1Macro", "=", "over_avg_f1", "\n", "self", ".", "OverallF1Macro_no_other", "=", "over_avg_f1_no_other", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.printInfoMicro": [[1004, 1058], ["eval.printClasses", "eval.printClasses.add", "eval.printClasses.add", "eval.printClasses.print", "eval.printClasses", "eval.printClasses.add", "eval.printClasses.add", "eval.printClasses.print", "eval.printClasses.add", "eval.relaxedChunkEvaluator.getPrecision", "eval.relaxedChunkEvaluator.getRecall", "eval.relaxedChunkEvaluator.getF1", "eval.relaxedChunkEvaluator.getPrecision", "eval.relaxedChunkEvaluator.getRecall", "eval.relaxedChunkEvaluator.getF1", "eval.relaxedChunkEvaluator.getPrecision", "eval.relaxedChunkEvaluator.getRecall", "eval.relaxedChunkEvaluator.getF1", "eval.printClasses.add", "eval.relaxedChunkEvaluator.getPrecision", "eval.relaxedChunkEvaluator.getRecall", "eval.relaxedChunkEvaluator.getF1"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.add", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getPrecision", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getRecall", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relaxedChunkEvaluator.getF1"], ["", "def", "printInfoMicro", "(", "self", ")", ":", "\n", "\n", "            ", "printer", "=", "printClasses", "(", ")", "\n", "\n", "for", "label", "in", "self", ".", "NERset", ":", "\n", "# if label != \"O\" :", "\n", "                ", "self", ".", "tpsNER", "+=", "self", ".", "tpsClassesNER", "[", "label", "]", "\n", "\n", "self", ".", "fnsNER", "+=", "self", ".", "fnsClassesNER", "[", "label", "]", "\n", "self", ".", "fpsNER", "+=", "self", ".", "fpsClassesNER", "[", "label", "]", "\n", "\n", "printer", ".", "add", "(", "label", ",", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fpsClassesNER", "[", "label", "]", ",", "self", ".", "fnsClassesNER", "[", "label", "]", ",", "\n", "self", ".", "getPrecision", "(", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fpsClassesNER", "[", "label", "]", ")", ",", "\n", "self", ".", "getRecall", "(", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fnsClassesNER", "[", "label", "]", ")", ",", "\n", "self", ".", "getF1", "(", "self", ".", "tpsClassesNER", "[", "label", "]", ",", "self", ".", "fpsClassesNER", "[", "label", "]", ",", "self", ".", "fnsClassesNER", "[", "label", "]", ")", ")", "\n", "\n", "\n", "\n", "# print('%s TP: %d  FP: %d  FN: %d TN: %d precision: %f recall: %f F1: %f' % (label,self.tpsClasses[label],self.fpsClasses[label],self.fnsClasses[label],self.tnsClasses[label], self.precision[label], self.recall[label], self.f1[label]))", "\n", "", "printer", ".", "add", "(", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ")", "\n", "printer", ".", "add", "(", "\"Micro NER chunk RELAXED\"", ",", "self", ".", "tpsNER", ",", "self", ".", "fpsNER", ",", "self", ".", "fnsNER", ",", "\n", "self", ".", "getPrecision", "(", "self", ".", "tpsNER", ",", "self", ".", "fpsNER", ")", ",", "self", ".", "getRecall", "(", "self", ".", "tpsNER", ",", "self", ".", "fnsNER", ")", ",", "\n", "self", ".", "getF1", "(", "self", ".", "tpsNER", ",", "self", ".", "fpsNER", ",", "self", ".", "fnsNER", ")", ")", "\n", "\n", "printer", ".", "print", "(", ")", "\n", "\n", "printer", "=", "printClasses", "(", ")", "\n", "for", "label", "in", "self", ".", "RELset", ":", "\n", "\n", "                ", "if", "label", "!=", "\"N\"", ":", "\n", "                    ", "self", ".", "tpsREL", "+=", "self", ".", "tpsClassesREL", "[", "label", "]", "\n", "\n", "self", ".", "fnsREL", "+=", "self", ".", "fnsClassesREL", "[", "label", "]", "\n", "self", ".", "fpsREL", "+=", "self", ".", "fpsClassesREL", "[", "label", "]", "\n", "\n", "printer", ".", "add", "(", "label", ",", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fpsClassesREL", "[", "label", "]", ",", "self", ".", "fnsClassesREL", "[", "label", "]", ",", "\n", "self", ".", "getPrecision", "(", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fpsClassesREL", "[", "label", "]", ")", ",", "\n", "self", ".", "getRecall", "(", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fnsClassesREL", "[", "label", "]", ")", ",", "\n", "self", ".", "getF1", "(", "self", ".", "tpsClassesREL", "[", "label", "]", ",", "self", ".", "fpsClassesREL", "[", "label", "]", ",", "\n", "self", ".", "fnsClassesREL", "[", "label", "]", ")", ")", "\n", "\n", "\n", "\n", "# print('%s TP: %d  FP: %d  FN: %d TN: %d precision: %f recall: %f F1: %f' % (label,self.tpsClasses[label],self.fpsClasses[label],self.fnsClasses[label],self.tnsClasses[label], self.precision[label], self.recall[label], self.f1[label]))", "\n", "", "", "printer", ".", "add", "(", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ",", "\"-\"", ",", "\n", "\"-\"", ")", "\n", "printer", ".", "add", "(", "\"Micro REL chunk RELAXED\"", ",", "self", ".", "tpsREL", ",", "self", ".", "fpsREL", ",", "self", ".", "fnsREL", ",", "\n", "self", ".", "getPrecision", "(", "self", ".", "tpsREL", ",", "self", ".", "fpsREL", ")", ",", "self", ".", "getRecall", "(", "self", ".", "tpsREL", ",", "self", ".", "fnsREL", ")", ",", "\n", "self", ".", "getF1", "(", "self", ".", "tpsREL", ",", "self", ".", "fpsREL", ",", "self", ".", "fnsREL", ")", ")", "\n", "\n", "printer", ".", "print", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.get_chunk_type": [[23, 36], ["tag_name.split", "tag_name.split"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.HeadData.split", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.HeadData.split"], ["", "", "def", "get_chunk_type", "(", "tok", ",", "idx_to_tag", ")", ":", "\n", "# method implemented in https://github.com/guillaumegenthial/sequence_tagging/blob/master/model/data_utils.py", "\n", "    ", "\"\"\"\n    Args:\n        tok: id of token, ex 4\n        idx_to_tag: dictionary {4: \"B-PER\", ...}\n    Returns:\n        tuple: \"B\", \"PER\"\n    \"\"\"", "\n", "tag_name", "=", "idx_to_tag", "[", "tok", "]", "\n", "tag_class", "=", "tag_name", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "tag_type", "=", "tag_name", ".", "split", "(", "'-'", ")", "[", "-", "1", "]", "\n", "return", "tag_class", ",", "tag_type", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.get_chunks": [[38, 82], ["enumerate", "chunks.append", "tags.items", "chunks.append", "eval.get_chunk_type", "len", "chunks.append"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.get_chunk_type", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "get_chunks", "(", "seq", ",", "tags", ")", ":", "\n", "# method implemented in https://github.com/guillaumegenthial/sequence_tagging/blob/master/model/data_utils.py", "\n", "    ", "\"\"\"Given a sequence of tags, group entities and their position\n    Args:\n        seq: [4, 4, 0, 0, ...] sequence of labels\n        tags: dict[\"O\"] = 4\n    Returns:\n        list of (chunk_type, chunk_start, chunk_end)\n    Example:\n        seq = [4, 5, 0, 3]\n        tags = {\"B-PER\": 4, \"I-PER\": 5, \"B-LOC\": 3}\n        result = [(\"PER\", 0, 2), (\"LOC\", 3, 4)]\n    \"\"\"", "\n", "\n", "default", "=", "tags", "[", "'O'", "]", "\n", "idx_to_tag", "=", "{", "idx", ":", "tag", "for", "tag", ",", "idx", "in", "tags", ".", "items", "(", ")", "}", "\n", "chunks", "=", "[", "]", "\n", "chunk_type", ",", "chunk_start", "=", "None", ",", "None", "\n", "for", "i", ",", "tok", "in", "enumerate", "(", "seq", ")", ":", "\n", "# End of a chunk 1", "\n", "        ", "if", "tok", "==", "default", "and", "chunk_type", "is", "not", "None", ":", "\n", "# Add a chunk.", "\n", "            ", "chunk", "=", "(", "chunk_type", ",", "chunk_start", ",", "i", "-", "1", ")", "\n", "chunks", ".", "append", "(", "chunk", ")", "\n", "chunk_type", ",", "chunk_start", "=", "None", ",", "None", "\n", "\n", "# End of a chunk + start of a chunk!", "\n", "", "elif", "tok", "!=", "default", ":", "\n", "            ", "tok_chunk_class", ",", "tok_chunk_type", "=", "get_chunk_type", "(", "tok", ",", "idx_to_tag", ")", "\n", "if", "chunk_type", "is", "None", ":", "\n", "                ", "chunk_type", ",", "chunk_start", "=", "tok_chunk_type", ",", "i", "\n", "", "elif", "tok_chunk_type", "!=", "chunk_type", "or", "tok_chunk_class", "==", "\"B\"", ":", "\n", "                ", "chunk", "=", "(", "chunk_type", ",", "chunk_start", ",", "i", "-", "1", ")", "\n", "chunks", ".", "append", "(", "chunk", ")", "\n", "chunk_type", ",", "chunk_start", "=", "tok_chunk_type", ",", "i", "\n", "", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "# end condition", "\n", "", "", "if", "chunk_type", "is", "not", "None", ":", "\n", "        ", "chunk", "=", "(", "chunk_type", ",", "chunk_start", ",", "len", "(", "seq", ")", "-", "1", ")", "\n", "chunks", ".", "append", "(", "chunk", ")", "\n", "\n", "", "return", "chunks", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.relationChunks": [[85, 112], ["relationChunks.append"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "relationChunks", "(", "relations", ",", "ners", ",", "relationTuple", "=", "\"boundaries_type\"", ")", ":", "\n", "    ", "relationChunks", "=", "[", "]", "\n", "for", "rel", "in", "relations", ":", "\n", "\n", "        ", "relation", "=", "rel", "[", "1", "]", "\n", "left_chunk", "=", "\"\"", "\n", "right_chunk", "=", "\"\"", "\n", "for", "ner", "in", "ners", ":", "\n", "            ", "if", "rel", "[", "0", "]", ">=", "ner", "[", "1", "]", "and", "rel", "[", "0", "]", "<=", "ner", "[", "2", "]", ":", "\n", "# print (ner)", "\n", "                ", "if", "relationTuple", "==", "\"boundaries_type\"", ":", "\n", "                    ", "left_chunk", "=", "ner", "\n", "", "elif", "relationTuple", "==", "\"boundaries\"", ":", "\n", "                    ", "left_chunk", "=", "(", "ner", "[", "1", "]", ",", "ner", "[", "2", "]", ")", "\n", "", "elif", "relationTuple", "==", "\"type\"", ":", "\n", "                    ", "left_chunk", "=", "(", "ner", "[", "0", "]", ")", "\n", "", "", "if", "rel", "[", "2", "]", ">=", "ner", "[", "1", "]", "and", "rel", "[", "2", "]", "<=", "ner", "[", "2", "]", ":", "\n", "# print (ner)", "\n", "                ", "if", "relationTuple", "==", "\"boundaries_type\"", ":", "\n", "                    ", "right_chunk", "=", "ner", "\n", "", "elif", "relationTuple", "==", "\"boundaries\"", ":", "\n", "                    ", "right_chunk", "=", "(", "ner", "[", "1", "]", ",", "ner", "[", "2", "]", ")", "\n", "", "elif", "relationTuple", "==", "\"type\"", ":", "\n", "                    ", "right_chunk", "=", "(", "ner", "[", "0", "]", ")", "\n", "", "", "", "if", "(", "left_chunk", "!=", "\"\"", "and", "right_chunk", "!=", "\"\"", ")", ":", "\n", "            ", "relationChunks", ".", "append", "(", "(", "left_chunk", ",", "relation", ",", "right_chunk", ")", ")", "\n", "", "", "return", "relationChunks", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.getTokenRelations": [[113, 131], ["range", "len", "range", "len", "relations.append"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "getTokenRelations", "(", "label_names", ",", "head_ids", ",", "token_ids", ")", ":", "\n", "        ", "relations", "=", "[", "]", "\n", "for", "labelLIdx", "in", "range", "(", "len", "(", "label_names", ")", ")", ":", "\n", "# print (predLabel)", "\n", "            ", "labelL", "=", "label_names", "[", "labelLIdx", "]", "\n", "headL", "=", "head_ids", "[", "labelLIdx", "]", "\n", "tokenId", "=", "token_ids", "[", "labelLIdx", "]", "\n", "for", "labelIdx", "in", "range", "(", "len", "(", "labelL", ")", ")", ":", "\n", "\n", "                ", "label", "=", "labelL", "[", "labelIdx", "]", "\n", "head", "=", "headL", "[", "labelIdx", "]", "\n", "# print (label)", "\n", "# print ((tokenId)+\" \"+ label+ \" \" + head)", "\n", "if", "label", "!=", "\"N\"", ":", "\n", "# print (label)", "\n", "                    ", "relations", ".", "append", "(", "(", "tokenId", ",", "label", ",", "head", ")", ")", "\n", "# print (tokenId,label,head)", "\n", "", "", "", "return", "relations", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.keepOnlyChunkBoundaries": [[133, 141], ["list", "nersNoBounds.append"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "keepOnlyChunkBoundaries", "(", "ners", ")", ":", "\n", "    ", "nersNoBounds", "=", "[", "]", "\n", "ners", "=", "list", "(", "ners", ")", "\n", "for", "ner", "in", "ners", ":", "\n", "# ner[0]=None", "\n", "# print (ner)", "\n", "        ", "nersNoBounds", ".", "append", "(", "(", "None", ",", "ner", "[", "1", "]", ",", "ner", "[", "2", "]", ")", ")", "\n", "", "return", "nersNoBounds", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.getMaxOccurence": [[516, 520], ["Counter().most_common", "Counter"], "function", ["None"], ["", "", "def", "getMaxOccurence", "(", "lst", ")", ":", "\n", "    ", "from", "collections", "import", "Counter", "\n", "most_common", ",", "num_most_common", "=", "Counter", "(", "lst", ")", ".", "most_common", "(", "1", ")", "[", "0", "]", "# 4, 6 times", "\n", "return", "most_common", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.classesToChunks": [[522, 534], ["labeled_chunks.append", "labeled_chunks.append", "eval.getMaxOccurence"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.getMaxOccurence"], ["", "def", "classesToChunks", "(", "tokenClasses", ",", "chunks", ")", ":", "\n", "    ", "labeled_chunks", "=", "[", "]", "\n", "for", "chunk", "in", "chunks", ":", "\n", "\n", "        ", "class_list", "=", "(", "tokenClasses", "[", "chunk", "[", "1", "]", ":", "chunk", "[", "2", "]", "+", "1", "]", ")", "\n", "\n", "if", "chunk", "[", "0", "]", "in", "class_list", ":", "\n", "            ", "labeled_chunks", ".", "append", "(", "(", "chunk", "[", "0", "]", ",", "chunk", "[", "1", "]", ",", "chunk", "[", "2", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "labeled_chunks", ".", "append", "(", "(", "getMaxOccurence", "(", "class_list", ")", ",", "chunk", "[", "1", "]", ",", "chunk", "[", "2", "]", ")", ")", "\n", "# print (class_list)", "\n", "", "", "return", "labeled_chunks", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.listOfTagsToids": [[536, 542], ["lstids.append", "tags.index"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "listOfTagsToids", "(", "lstTags", ",", "tags", ")", ":", "\n", "    ", "lstids", "=", "[", "]", "\n", "for", "ner", "in", "lstTags", ":", "\n", "        ", "lstids", ".", "append", "(", "tags", ".", "index", "(", "ner", ")", ")", "\n", "\n", "", "return", "lstids", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.listOfIdsToTags": [[543, 548], ["lstTags.append"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "listOfIdsToTags", "(", "lst_ids", ",", "tags", ")", ":", "\n", "    ", "lstTags", "=", "[", "]", "\n", "for", "nerId", "in", "lst_ids", ":", "\n", "        ", "lstTags", ".", "append", "(", "tags", "[", "nerId", "]", ")", "\n", "", "return", "lstTags", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.train_eval.checkInputs": [[13, 25], ["ValueError", "os.path.isfile", "len", "os.path.isfile", "open", "int", "myfile.close", "myfile.read"], "function", ["None"], ["def", "checkInputs", "(", ")", ":", "\n", "    ", "if", "(", "len", "(", "sys", ".", "argv", ")", "<=", "3", ")", "or", "os", ".", "path", ".", "isfile", "(", "sys", ".", "argv", "[", "0", "]", ")", "==", "False", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "'The configuration file and the timestamp should be specified.'", ")", "\n", "\n", "", "es_file", "=", "sys", ".", "argv", "[", "3", "]", "+", "\"/es_\"", "+", "sys", ".", "argv", "[", "2", "]", "+", "\".txt\"", "\n", "es_epoch", "=", "sys", ".", "maxsize", "\n", "if", "os", ".", "path", ".", "isfile", "(", "es_file", ")", "==", "True", ":", "\n", "        ", "with", "open", "(", "es_file", ",", "'r'", ")", "as", "myfile", ":", "\n", "            ", "es_epoch", "=", "int", "(", "myfile", ".", "read", "(", ")", ")", "\n", "myfile", ".", "close", "(", ")", "\n", "", "", "return", "es_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.build_data.build_data.__init__": [[10, 93], ["parsers.read_properties", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.readHeadFile", "parsers.readHeadFile", "parsers.readHeadFile", "dataset_documents.extend", "dataset_documents.extend", "dataset_documents.extend", "utils.getCharsFromDocuments", "utils.getEntitiesFromDocuments", "utils.getRelationsFromDocuments", "parsers.preprocess", "parsers.preprocess", "parsers.preprocess", "int", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "float", "utils.strToBool", "int", "utils.strToBool", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "utils.strToBool", "utils.strToBool", "float", "float", "float", "float", "float", "int", "int", "int", "int", "int", "int", "float", "parsers.read_properties.getProperty", "utils.strToBool", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "utils.readWordvectorsNumpy", "utils.readIndices", "sklearn.externals.joblib.dump", "sklearn.externals.joblib.load", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "parsers.read_properties.getProperty", "build_data.build_data.filename_embeddings.endswith", "build_data.build_data.filename_embeddings.endswith"], "methods", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.readHeadFile", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.readHeadFile", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.readHeadFile", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.extend", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.extend", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.extend", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getCharsFromDocuments", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getEntitiesFromDocuments", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getRelationsFromDocuments", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.preprocess", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.preprocess", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.preprocess", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToBool", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToBool", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToBool", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToBool", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToBool", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.readWordvectorsNumpy", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.readIndices", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.read_properties.getProperty"], ["    ", "def", "__init__", "(", "self", ",", "fname", ")", ":", "\n", "\n", "\n", "        ", "config_file", "=", "parsers", ".", "read_properties", "(", "fname", ")", "\n", "#print(\"\\nConfiguration file {} loaded \\n\".format(fname))", "\n", "self", ".", "config_fname", "=", "fname", "\n", "\n", "# load data", "\n", "self", ".", "filename_embeddings", "=", "config_file", ".", "getProperty", "(", "\"filename_embeddings\"", ")", "\n", "self", ".", "filename_train", "=", "config_file", ".", "getProperty", "(", "\"filename_train\"", ")", "\n", "self", ".", "filename_test", "=", "config_file", ".", "getProperty", "(", "\"filename_test\"", ")", "\n", "self", ".", "filename_dev", "=", "config_file", ".", "getProperty", "(", "\"filename_dev\"", ")", "\n", "\n", "self", ".", "train_id_docs", "=", "parsers", ".", "readHeadFile", "(", "self", ".", "filename_train", ")", "\n", "self", ".", "dev_id_docs", "=", "parsers", ".", "readHeadFile", "(", "self", ".", "filename_dev", ")", "\n", "self", ".", "test_id_docs", "=", "parsers", ".", "readHeadFile", "(", "self", ".", "filename_test", ")", "\n", "\n", "# get labels for the whole collection", "\n", "dataset_documents", "=", "[", "]", "\n", "dataset_documents", ".", "extend", "(", "self", ".", "train_id_docs", ")", "\n", "dataset_documents", ".", "extend", "(", "self", ".", "dev_id_docs", ")", "\n", "dataset_documents", ".", "extend", "(", "self", ".", "test_id_docs", ")", "\n", "self", ".", "dataset_set_characters", "=", "utils", ".", "getCharsFromDocuments", "(", "dataset_documents", ")", "\n", "self", ".", "dataset_set_bio_tags", ",", "self", ".", "dataset_set_ec_tags", "=", "utils", ".", "getEntitiesFromDocuments", "(", "dataset_documents", ")", "\n", "self", ".", "dataset_set_relations", "=", "utils", ".", "getRelationsFromDocuments", "(", "dataset_documents", ")", "\n", "\n", "\n", "\n", "if", "os", ".", "path", ".", "isfile", "(", "self", ".", "filename_embeddings", "+", "\".pkl\"", ")", "==", "False", ":", "\n", "            ", "self", ".", "wordvectors", ",", "self", ".", "representationsize", ",", "self", ".", "words", "=", "utils", ".", "readWordvectorsNumpy", "(", "self", ".", "filename_embeddings", ",", "isBinary", "=", "True", "if", "self", ".", "filename_embeddings", ".", "endswith", "(", "\".bin\"", ")", "else", "False", ")", "\n", "self", ".", "wordindices", "=", "utils", ".", "readIndices", "(", "self", ".", "filename_embeddings", ",", "\n", "isBinary", "=", "True", "if", "self", ".", "filename_embeddings", ".", "endswith", "(", "\".bin\"", ")", "else", "False", ")", "\n", "joblib", ".", "dump", "(", "(", "self", ".", "wordvectors", ",", "self", ".", "representationsize", ",", "self", ".", "words", ",", "self", ".", "wordindices", ")", ",", "self", ".", "filename_embeddings", "+", "\".pkl\"", ")", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "wordvectors", ",", "self", ".", "representationsize", ",", "self", ".", "words", ",", "self", ".", "wordindices", "=", "joblib", ".", "load", "(", "self", ".", "filename_embeddings", "+", "\".pkl\"", ")", "# loading is faster", "\n", "\n", "\n", "\n", "", "parsers", ".", "preprocess", "(", "self", ".", "train_id_docs", ",", "self", ".", "wordindices", ",", "self", ".", "dataset_set_characters", ",", "\n", "self", ".", "dataset_set_bio_tags", ",", "self", ".", "dataset_set_ec_tags", ",", "self", ".", "dataset_set_relations", ")", "\n", "parsers", ".", "preprocess", "(", "self", ".", "dev_id_docs", ",", "self", ".", "wordindices", ",", "self", ".", "dataset_set_characters", ",", "\n", "self", ".", "dataset_set_bio_tags", ",", "self", ".", "dataset_set_ec_tags", ",", "self", ".", "dataset_set_relations", ")", "\n", "parsers", ".", "preprocess", "(", "self", ".", "test_id_docs", ",", "self", ".", "wordindices", ",", "self", ".", "dataset_set_characters", ",", "\n", "self", ".", "dataset_set_bio_tags", ",", "self", ".", "dataset_set_ec_tags", ",", "self", ".", "dataset_set_relations", ")", "\n", "\n", "\n", "\n", "# training", "\n", "self", ".", "nepochs", "=", "int", "(", "config_file", ".", "getProperty", "(", "\"nepochs\"", ")", ")", "\n", "self", ".", "optimizer", "=", "config_file", ".", "getProperty", "(", "\"optimizer\"", ")", "\n", "self", ".", "activation", "=", "config_file", ".", "getProperty", "(", "\"activation\"", ")", "\n", "self", ".", "learning_rate", "=", "float", "(", "config_file", ".", "getProperty", "(", "\"learning_rate\"", ")", ")", "\n", "self", ".", "gradientClipping", "=", "utils", ".", "strToBool", "(", "config_file", ".", "getProperty", "(", "\"gradientClipping\"", ")", ")", "\n", "self", ".", "nepoch_no_imprv", "=", "int", "(", "config_file", ".", "getProperty", "(", "\"nepoch_no_imprv\"", ")", ")", "\n", "self", ".", "use_dropout", "=", "utils", ".", "strToBool", "(", "config_file", ".", "getProperty", "(", "\"use_dropout\"", ")", ")", "\n", "self", ".", "ner_loss", "=", "config_file", ".", "getProperty", "(", "\"ner_loss\"", ")", "\n", "self", ".", "ner_classes", "=", "config_file", ".", "getProperty", "(", "\"ner_classes\"", ")", "\n", "self", ".", "use_chars", "=", "utils", ".", "strToBool", "(", "config_file", ".", "getProperty", "(", "\"use_chars\"", ")", ")", "\n", "self", ".", "use_adversarial", "=", "utils", ".", "strToBool", "(", "config_file", ".", "getProperty", "(", "\"use_adversarial\"", ")", ")", "\n", "\n", "\n", "# hyperparameters", "\n", "self", ".", "dropout_embedding", "=", "float", "(", "config_file", ".", "getProperty", "(", "\"dropout_embedding\"", ")", ")", "\n", "self", ".", "dropout_lstm", "=", "float", "(", "config_file", ".", "getProperty", "(", "\"dropout_lstm\"", ")", ")", "\n", "self", ".", "dropout_lstm_output", "=", "float", "(", "config_file", ".", "getProperty", "(", "\"dropout_lstm_output\"", ")", ")", "\n", "self", ".", "dropout_fcl_ner", "=", "float", "(", "config_file", ".", "getProperty", "(", "\"dropout_fcl_ner\"", ")", ")", "\n", "self", ".", "dropout_fcl_rel", "=", "float", "(", "config_file", ".", "getProperty", "(", "\"dropout_fcl_rel\"", ")", ")", "\n", "self", ".", "hidden_size_lstm", "=", "int", "(", "config_file", ".", "getProperty", "(", "\"hidden_size_lstm\"", ")", ")", "\n", "self", ".", "hidden_size_n1", "=", "int", "(", "config_file", ".", "getProperty", "(", "\"hidden_size_n1\"", ")", ")", "\n", "#self.hidden_size_n2 = config_file.getProperty(\"hidden_size_n2\")", "\n", "self", ".", "num_lstm_layers", "=", "int", "(", "config_file", ".", "getProperty", "(", "\"num_lstm_layers\"", ")", ")", "\n", "self", ".", "char_embeddings_size", "=", "int", "(", "config_file", ".", "getProperty", "(", "\"char_embeddings_size\"", ")", ")", "\n", "self", ".", "hidden_size_char", "=", "int", "(", "config_file", ".", "getProperty", "(", "\"hidden_size_char\"", ")", ")", "\n", "self", ".", "label_embeddings_size", "=", "int", "(", "config_file", ".", "getProperty", "(", "\"label_embeddings_size\"", ")", ")", "\n", "self", ".", "alpha", "=", "float", "(", "config_file", ".", "getProperty", "(", "\"alpha\"", ")", ")", "\n", "\n", "# evaluation", "\n", "self", ".", "evaluation_method", "=", "config_file", ".", "getProperty", "(", "\"evaluation_method\"", ")", "\n", "self", ".", "root_node", "=", "utils", ".", "strToBool", "(", "config_file", ".", "getProperty", "(", "\"root_node\"", ")", ")", "\n", "\n", "self", ".", "shuffle", "=", "False", "\n", "self", ".", "batchsize", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.HeadData.__init__": [[22, 25], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "indices", ")", ":", "\n", "        ", "self", ".", "data", "=", "data", "\n", "self", ".", "indices", "=", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.HeadData.split": [[26, 35], ["sklearn.model_selection.train_test_split", "utils.HeadData", "utils.HeadData"], "methods", ["None"], ["", "def", "split", "(", "self", ",", "fraction", ")", ":", "\n", "\n", "        ", "data_train", ",", "data_test", ",", "idx_train", ",", "idx_test", "=", "train_test_split", "(", "self", ".", "data", ",", "self", ".", "indices", ",", "test_size", "=", "fraction", ",", "\n", "random_state", "=", "42", ")", "\n", "\n", "train", "=", "HeadData", "(", "data_train", ",", "idx_train", ")", "\n", "\n", "test", "=", "HeadData", "(", "data_test", ",", "idx_test", ")", "\n", "return", "train", ",", "test", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToLst": [[17, 19], ["ast.literal_eval"], "function", ["None"], ["def", "strToLst", "(", "string", ")", ":", "\n", "    ", "return", "ast", ".", "literal_eval", "(", "string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.transformToInitialInput": [[36, 68], ["numpy.nonzero", "range", "range", "len", "tokens_ids.append", "heads_ids.append", "labels_ids.append", "head_labels_ids.append", "labels_name.append", "len", "int", "heads_ids[].append", "labels_ids[].append", "head_labels_ids[].append", "labels_name[].append", "len", "len"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "", "def", "transformToInitialInput", "(", "matrix", ",", "tags", ")", ":", "\n", "        ", "active_relations", "=", "np", ".", "nonzero", "(", "matrix", ")", "\n", "active_relations_iidx", "=", "active_relations", "[", "0", "]", "\n", "active_relations_jidx", "=", "active_relations", "[", "1", "]", "\n", "\n", "tokens_ids", "=", "[", "]", "\n", "heads_ids", "=", "[", "]", "\n", "labels_ids", "=", "[", "]", "\n", "head_labels_ids", "=", "[", "]", "\n", "labels_name", "=", "[", "]", "\n", "\n", "for", "m_idx", "in", "range", "(", "len", "(", "matrix", ")", ")", ":", "\n", "            ", "tokens_ids", ".", "append", "(", "m_idx", ")", "\n", "heads_ids", ".", "append", "(", "[", "]", ")", "\n", "labels_ids", ".", "append", "(", "[", "]", ")", "\n", "head_labels_ids", ".", "append", "(", "[", "]", ")", "\n", "labels_name", ".", "append", "(", "[", "]", ")", "\n", "\n", "", "for", "i_idx", "in", "range", "(", "len", "(", "active_relations_iidx", ")", ")", ":", "\n", "            ", "head_id", "=", "int", "(", "active_relations_jidx", "[", "i_idx", "]", "/", "len", "(", "tags", ")", ")", "\n", "label_id", "=", "active_relations_jidx", "[", "i_idx", "]", "%", "len", "(", "tags", ")", "\n", "token_id", "=", "active_relations_iidx", "[", "i_idx", "]", "\n", "head_label_id", "=", "active_relations_jidx", "[", "i_idx", "]", "\n", "\n", "# idx=tokens_ids.index(token_id)", "\n", "heads_ids", "[", "token_id", "]", ".", "append", "(", "head_id", ")", "\n", "labels_ids", "[", "token_id", "]", ".", "append", "(", "label_id", ")", "\n", "head_labels_ids", "[", "token_id", "]", ".", "append", "(", "head_label_id", ")", "\n", "labels_name", "[", "token_id", "]", ".", "append", "(", "tags", "[", "label_id", "]", ")", "\n", "\n", "# print (str(token_id) + \" \" +str(head_label_id)+ \" \" +str(head)+ \" \" +str(label))", "\n", "", "return", "tokens_ids", ",", "head_labels_ids", ",", "labels_ids", ",", "heads_ids", ",", "labels_name", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getCharsFromDocuments": [[71, 81], ["list", "list.sort", "set", "list.append"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "getCharsFromDocuments", "(", "documents", ")", ":", "\n", "    ", "chars", "=", "[", "]", "\n", "for", "doc", "in", "documents", ":", "\n", "        ", "for", "tokens", "in", "doc", ".", "tokens", ":", "\n", "            ", "for", "char", "in", "tokens", ":", "\n", "# print (token)", "\n", "                ", "chars", ".", "append", "(", "char", ")", "\n", "", "", "", "chars", "=", "list", "(", "set", "(", "chars", ")", ")", "\n", "chars", ".", "sort", "(", ")", "\n", "return", "chars", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getEntitiesFromDocuments": [[84, 100], ["list", "list.sort", "list", "list.sort", "set", "set", "list.append", "tag.startswith", "tag.startswith", "list.append", "list.append"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "getEntitiesFromDocuments", "(", "documents", ")", ":", "\n", "    ", "BIOtags", "=", "[", "]", "\n", "ECtags", "=", "[", "]", "\n", "for", "doc", "in", "documents", ":", "\n", "        ", "for", "tag", "in", "doc", ".", "BIOs", ":", "\n", "            ", "BIOtags", ".", "append", "(", "tag", ")", "\n", "if", "tag", ".", "startswith", "(", "\"B-\"", ")", "or", "tag", ".", "startswith", "(", "\"I-\"", ")", ":", "\n", "                ", "ECtags", ".", "append", "(", "tag", "[", "2", ":", "]", ")", "\n", "", "else", ":", "\n", "                ", "ECtags", ".", "append", "(", "tag", ")", "\n", "\n", "", "", "", "BIOtags", "=", "list", "(", "set", "(", "BIOtags", ")", ")", "\n", "BIOtags", ".", "sort", "(", ")", "\n", "ECtags", "=", "list", "(", "set", "(", "ECtags", ")", ")", "\n", "ECtags", ".", "sort", "(", ")", "\n", "return", "BIOtags", ",", "ECtags", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getECfromBIO": [[102, 107], ["BIO_tag.startswith", "BIO_tag.startswith"], "function", ["None"], ["", "def", "getECfromBIO", "(", "BIO_tag", ")", ":", "\n", "    ", "if", "BIO_tag", ".", "startswith", "(", "\"B-\"", ")", "or", "BIO_tag", ".", "startswith", "(", "\"I-\"", ")", ":", "\n", "        ", "return", "(", "BIO_tag", "[", "2", ":", "]", ")", "\n", "", "else", ":", "\n", "        ", "return", "(", "BIO_tag", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getRelationsFromDocuments": [[110, 120], ["list", "list.sort", "set", "list.append"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "", "def", "getRelationsFromDocuments", "(", "documents", ")", ":", "\n", "    ", "relations", "=", "[", "]", "\n", "for", "doc", "in", "documents", ":", "\n", "        ", "for", "relation_list", "in", "doc", ".", "relations", ":", "\n", "            ", "for", "relation", "in", "relation_list", ":", "\n", "                ", "relations", ".", "append", "(", "relation", ")", "\n", "\n", "", "", "", "relations", "=", "list", "(", "set", "(", "relations", ")", ")", "\n", "relations", ".", "sort", "(", ")", "\n", "return", "relations", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.tokenToCharIds": [[122, 127], ["charIds.append", "characters.index"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "tokenToCharIds", "(", "token", ",", "characters", ")", ":", "\n", "    ", "charIds", "=", "[", "]", "\n", "for", "char", "in", "token", ":", "\n", "        ", "charIds", ".", "append", "(", "characters", ".", "index", "(", "char", ")", ")", "\n", "", "return", "charIds", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.labelsListToIds": [[129, 135], ["labelIds.append", "setofLabels.index"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "labelsListToIds", "(", "listofLabels", ",", "setofLabels", ")", ":", "\n", "    ", "labelIds", "=", "[", "]", "\n", "for", "label", "in", "listofLabels", ":", "\n", "        ", "labelIds", ".", "append", "(", "setofLabels", ".", "index", "(", "label", ")", ")", "\n", "\n", "", "return", "labelIds", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getScoringMatrixHeads": [[137, 146], ["utils.labelsListToIds", "range", "len", "scoringMatrixHeads.append", "len"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.labelsListToIds", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "getScoringMatrixHeads", "(", "listofRelations", ",", "setofLabels", ",", "heads", ")", ":", "\n", "    ", "scoringMatrixHeads", "=", "[", "]", "\n", "relationIds", "=", "labelsListToIds", "(", "listofRelations", ",", "setofLabels", ")", "\n", "\n", "\n", "for", "relIdx", "in", "range", "(", "len", "(", "relationIds", ")", ")", ":", "\n", "# print (rels[relIdx]*getNumberOfClasses()+labelJointIds[relIdx])", "\n", "        ", "scoringMatrixHeads", ".", "append", "(", "heads", "[", "relIdx", "]", "*", "len", "(", "setofLabels", ")", "+", "relationIds", "[", "relIdx", "]", ")", "\n", "", "return", "scoringMatrixHeads", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getLabelId": [[148, 150], ["setofLabels.index"], "function", ["None"], ["", "def", "getLabelId", "(", "label", ",", "setofLabels", ")", ":", "\n", "    ", "return", "setofLabels", ".", "index", "(", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.strToBool": [[151, 155], ["str.lower"], "function", ["None"], ["", "def", "strToBool", "(", "str", ")", ":", "\n", "    ", "if", "str", ".", "lower", "(", ")", "in", "[", "'true'", ",", "'1'", "]", ":", "\n", "        ", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getEmbeddingId": [[158, 172], ["re.search", "word.lower.islower", "word.lower.title", "word.lower.lower"], "function", ["None"], ["", "def", "getEmbeddingId", "(", "word", ",", "embeddingsList", ")", ":", "\n", "# modified method from http://cistern.cis.lmu.de/globalNormalization/globalNormalization_all.zip", "\n", "    ", "if", "word", "!=", "\"<empty>\"", ":", "\n", "        ", "if", "not", "word", "in", "embeddingsList", ":", "\n", "            ", "if", "re", ".", "search", "(", "r'^\\d+$'", ",", "word", ")", ":", "\n", "                ", "word", "=", "\"0\"", "\n", "", "if", "word", ".", "islower", "(", ")", ":", "\n", "                ", "word", "=", "word", ".", "title", "(", ")", "\n", "", "else", ":", "\n", "                ", "word", "=", "word", ".", "lower", "(", ")", "\n", "", "", "if", "not", "word", "in", "embeddingsList", ":", "\n", "            ", "word", "=", "\"<unk>\"", "\n", "", "curIndex", "=", "embeddingsList", "[", "word", "]", "\n", "return", "curIndex", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.readWordvectorsNumpy": [[174, 198], ["gensim.models.KeyedVectors.load_word2vec_format", "list", "random.seed", "wordvectors.insert", "words.insert", "wordvectors.insert", "words.insert", "numpy.array", "gensim.models.KeyedVectors.load_word2vec_format.vocab.keys", "wordvectors.append", "words.append", "random.uniform", "range", "numpy.sqrt", "range", "numpy.sqrt", "len", "len"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "", "def", "readWordvectorsNumpy", "(", "wordvectorfile", ",", "isBinary", "=", "False", ")", ":", "\n", "\n", "# modified method from http://cistern.cis.lmu.de/globalNormalization/globalNormalization_all.zip", "\n", "    ", "wordvectors", "=", "[", "]", "\n", "words", "=", "[", "]", "\n", "model", "=", "gensim", ".", "models", ".", "KeyedVectors", ".", "load_word2vec_format", "(", "wordvectorfile", ",", "binary", "=", "isBinary", ",", "unicode_errors", "=", "'ignore'", ")", "\n", "\n", "vectorsize", "=", "model", ".", "vector_size", "\n", "\n", "for", "key", "in", "list", "(", "model", ".", "vocab", ".", "keys", "(", ")", ")", ":", "\n", "        ", "wordvectors", ".", "append", "(", "model", ".", "wv", "[", "key", "]", ")", "\n", "words", ".", "append", "(", "key", ")", "\n", "\n", "", "zeroVec", "=", "[", "0", "for", "i", "in", "range", "(", "vectorsize", ")", "]", "\n", "random", ".", "seed", "(", "123456", ")", "\n", "randomVec", "=", "[", "random", ".", "uniform", "(", "-", "np", ".", "sqrt", "(", "1.", "/", "len", "(", "wordvectors", ")", ")", ",", "np", ".", "sqrt", "(", "1.", "/", "len", "(", "wordvectors", ")", ")", ")", "for", "i", "in", "\n", "range", "(", "vectorsize", ")", "]", "\n", "wordvectors", ".", "insert", "(", "0", ",", "randomVec", ")", "\n", "words", ".", "insert", "(", "0", ",", "\"<unk>\"", ")", "\n", "wordvectors", ".", "insert", "(", "0", ",", "zeroVec", ")", "\n", "words", ".", "insert", "(", "0", ",", "\"<empty>\"", ")", "\n", "\n", "wordvectorsNumpy", "=", "np", ".", "array", "(", "wordvectors", ")", "\n", "return", "wordvectorsNumpy", ",", "vectorsize", ",", "words", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.readIndices": [[200, 218], ["gensim.models.KeyedVectors.load_word2vec_format", "list", "gensim.models.KeyedVectors.load_word2vec_format.vocab.keys"], "function", ["None"], ["", "def", "readIndices", "(", "wordvectorfile", ",", "isBinary", "=", "False", ")", ":", "\n", "# modified method from http://cistern.cis.lmu.de/globalNormalization/globalNormalization_all.zip", "\n", "    ", "indices", "=", "{", "}", "\n", "curIndex", "=", "0", "\n", "indices", "[", "\"<empty>\"", "]", "=", "curIndex", "\n", "curIndex", "+=", "1", "\n", "indices", "[", "\"<unk>\"", "]", "=", "curIndex", "\n", "curIndex", "+=", "1", "\n", "\n", "model", "=", "gensim", ".", "models", ".", "KeyedVectors", ".", "load_word2vec_format", "(", "wordvectorfile", ",", "binary", "=", "isBinary", ",", "unicode_errors", "=", "'ignore'", ")", "\n", "\n", "count", "=", "0", "\n", "# c=0", "\n", "for", "key", "in", "list", "(", "model", ".", "vocab", ".", "keys", "(", ")", ")", ":", "\n", "        ", "indices", "[", "key", "]", "=", "curIndex", "\n", "curIndex", "+=", "1", "\n", "\n", "", "return", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.printParameters": [[221, 266], ["prettytable.PrettyTable", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "prettytable.PrettyTable.add_row", "print"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.eval.printClasses.print"], ["", "def", "printParameters", "(", "config", ")", ":", "\n", "\n", "    ", "t", "=", "PrettyTable", "(", "[", "'Params'", ",", "'Value'", "]", ")", "\n", "\n", "#dataset", "\n", "t", ".", "add_row", "(", "[", "'Config'", ",", "config", ".", "config_fname", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Embeddings'", ",", "config", ".", "filename_embeddings", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Embeddings size '", ",", "config", ".", "representationsize", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Train'", ",", "config", ".", "filename_train", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Dev'", ",", "config", ".", "filename_dev", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Test'", ",", "config", ".", "filename_test", "]", ")", "\n", "\n", "#training", "\n", "t", ".", "add_row", "(", "[", "'Epochs '", ",", "config", ".", "nepochs", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Optimizer '", ",", "config", ".", "optimizer", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Activation '", ",", "config", ".", "activation", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Learning rate '", ",", "config", ".", "learning_rate", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Gradient clipping '", ",", "config", ".", "gradientClipping", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Patience '", ",", "config", ".", "nepoch_no_imprv", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Use dropout'", ",", "config", ".", "use_dropout", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Ner loss '", ",", "config", ".", "ner_loss", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Ner classes '", ",", "config", ".", "ner_classes", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Use char embeddings '", ",", "config", ".", "use_chars", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Use adversarial'", ",", "config", ".", "use_adversarial", "]", ")", "\n", "\n", "# hyperparameters", "\n", "t", ".", "add_row", "(", "[", "'Dropout embedding '", ",", "config", ".", "dropout_embedding", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Dropout lstm '", ",", "config", ".", "dropout_lstm", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Dropout lstm output '", ",", "config", ".", "dropout_lstm_output", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Dropout fcl ner '", ",", "config", ".", "dropout_fcl_ner", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Dropout fcl rel '", ",", "config", ".", "dropout_fcl_rel", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Hidden lstm size '", ",", "config", ".", "hidden_size_lstm", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'LSTM layers '", ",", "config", ".", "num_lstm_layers", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Hidden nn size '", ",", "config", ".", "hidden_size_n1", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Char embeddings size '", ",", "config", ".", "char_embeddings_size", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Hidden size char '", ",", "config", ".", "hidden_size_char", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Label embeddings size '", ",", "config", ".", "label_embeddings_size", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Alpha '", ",", "config", ".", "alpha", "]", ")", "\n", "t", ".", "add_row", "(", "[", "'Root node '", ",", "config", ".", "root_node", "]", ")", "\n", "\n", "#evaluation", "\n", "t", ".", "add_row", "(", "[", "'Evaluation method '", ",", "config", ".", "evaluation_method", "]", ")", "\n", "\n", "\n", "print", "(", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.getSegmentationDict": [[267, 269], ["enumerate"], "function", ["None"], ["", "def", "getSegmentationDict", "(", "lst", ")", ":", "\n", "    ", "return", "{", "k", ":", "v", "for", "v", ",", "k", "in", "enumerate", "(", "lst", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.utils.generator": [[270, 557], ["copy.deepcopy", "range", "range", "range", "sklearn.model_selection.train_test_split", "utils.HeadData", "utils.HeadData", "len", "max", "len", "docs_batch_embeddingIds.append", "docs_batch_charIds.append", "docs_batch_scoringMatrixHeadIds.append", "numpy.zeros", "range", "docs_batch_scoringMatrix.append", "docs_batch_tokens.append", "docs_batch_BIO.append", "docs_batch_tokenIds.append", "docs_batch_doc_ids.append", "len", "range", "lenBatchesDoc.append", "lenBatchesChars.append", "len", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "batches_embeddingIds.append", "batches_charIds.append", "batches_scoringMatrixHeadIds.append", "batches_scoringMatrix.append", "batches_entity_tags.append", "batches_entity_tags_ids.append", "batches_tokens.append", "batches_BIO.append", "batches_tokenIds.append", "batches_doc_ids.append", "maxDocLenList.append", "maxWordLenList.append", "wordLenList.append", "len", "len", "len", "len", "len", "len", "docs_batch_entity_tags.append", "docs_batch_entity_tags_ids.append", "batches_embeddingIds.append", "batches_charIds.append", "batches_scoringMatrixHeadIds.append", "batches_scoringMatrix.append", "batches_entity_tags.append", "batches_entity_tags_ids.append", "batches_tokens.append", "batches_BIO.append", "batches_tokenIds.append", "batches_doc_ids.append", "maxDocLenList.append", "maxWordLenList.append", "wordLenList.append", "len", "lenEmbeddingssDoc.append", "lenCharsDoc.append", "range", "len", "docs_batch_entity_tags.append", "docs_batch_entity_tags_ids.append", "len", "len", "len", "len", "len", "numpy.arange", "len", "len", "numpy.arange", "embeddingId_doc.append", "charIds_doc.append", "scoringMatrixHeadId_doc.append", "token_doc.append", "ner_doc.append", "token_id_doc.append", "charIds_doc[].append", "len"], "function", ["home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append", "home.repos.pwc.inspect_result.bekou_multihead_joint_entity_relation_extraction.None.parsers.headIdDoc.append"], ["", "def", "generator", "(", "data", ",", "m", ",", "config", ",", "train", "=", "False", ")", ":", "\n", "# generate the data", "\n", "    ", "embeddingIds", "=", "m", "[", "'embeddingIds'", "]", "\n", "isTrain", "=", "m", "[", "'isTrain'", "]", "\n", "\n", "scoringMatrixGold", "=", "m", "[", "'scoringMatrixGold'", "]", "\n", "BIO", "=", "m", "[", "'BIO'", "]", "# always the BIO tags", "\n", "entity_tags", "=", "m", "[", "'entity_tags'", "]", "# either the BIO tags or the EC tags - depends on the NER target values", "\n", "entity_tags_ids", "=", "m", "[", "'entity_tags_ids'", "]", "\n", "tokens", "=", "m", "[", "'tokens'", "]", "\n", "tokenIds", "=", "m", "[", "'tokenIds'", "]", "\n", "charIds", "=", "m", "[", "'charIds'", "]", "\n", "tokensLens", "=", "m", "[", "'tokensLens'", "]", "\n", "\n", "seqlen", "=", "m", "[", "'seqlen'", "]", "\n", "doc_ids", "=", "m", "[", "'doc_ids'", "]", "\n", "\n", "\n", "dropout_embedding_keep", "=", "m", "[", "'dropout_embedding'", "]", "\n", "dropout_lstm_keep", "=", "m", "[", "'dropout_lstm'", "]", "\n", "dropout_lstm_output_keep", "=", "m", "[", "'dropout_lstm_output'", "]", "\n", "dropout_fcl_ner_keep", "=", "m", "[", "'dropout_fcl_ner'", "]", "\n", "dropout_fcl_rel_keep", "=", "m", "[", "'dropout_fcl_rel'", "]", "\n", "\n", "\n", "dropout_embedding_prob", "=", "1", "\n", "dropout_lstm_prob", "=", "1", "\n", "dropout_lstm_output_prob", "=", "1", "\n", "dropout_fcl_ner_prob", "=", "1", "\n", "dropout_fcl_rel_prob", "=", "1", "\n", "\n", "if", "config", ".", "use_dropout", "==", "True", "and", "train", "==", "True", ":", "\n", "\n", "        ", "dropout_embedding_prob", "=", "config", ".", "dropout_embedding", "\n", "dropout_lstm_prob", "=", "config", ".", "dropout_lstm", "\n", "dropout_lstm_output_prob", "=", "config", ".", "dropout_lstm_output", "\n", "dropout_fcl_ner_prob", "=", "config", ".", "dropout_fcl_ner", "\n", "dropout_fcl_rel_prob", "=", "config", ".", "dropout_fcl_rel", "\n", "\n", "", "data_copy", "=", "copy", ".", "deepcopy", "(", "data", ")", "\n", "# train_ind=np.arange(len(train.data))", "\n", "if", "config", ".", "shuffle", "==", "True", ":", "\n", "        ", "shuffled_data", ",", "_", ",", "shuffled_data_idx", ",", "_", "=", "train_test_split", "(", "data_copy", ".", "data", ",", "data_copy", ".", "indices", ",", "test_size", "=", "0", ",", "\n", "random_state", "=", "42", ")", "\n", "# shuffled_data, _, shuffled_data_idx, _ = train_test_split(data_copy.data, data_copy.indices, test_size=0,random_state=42)", "\n", "\n", "data_copy", "=", "HeadData", "(", "shuffled_data", ",", "shuffled_data_idx", ")", "\n", "# print (\"shuffle:\"+ str(shuffle) )", "\n", "# print(data_copy.indices)", "\n", "", "else", ":", "\n", "\n", "        ", "data_copy", "=", "HeadData", "(", "data_copy", ".", "data", ",", "data_copy", ".", "indices", ")", "\n", "# data_copy = HeadData(data_copy.data, data_copy.indices)", "\n", "\n", "# print(\"shuffle:\" + str(shuffle))", "\n", "# print(data_copy.indices)", "\n", "\n", "# batchsize=16 # number of documents per batch", "\n", "", "batches_embeddingIds", "=", "[", "]", "# e.g., 131 batches", "\n", "batches_charIds", "=", "[", "]", "# e.g., 131 batches", "\n", "batches_scoringMatrixHeadIds", "=", "[", "]", "# e.g., 131 batches", "\n", "batches_scoringMatrix", "=", "[", "]", "# e.g., 131 batches", "\n", "batches_tokens", "=", "[", "]", "\n", "\n", "batches_entity_tags", "=", "[", "]", "\n", "batches_entity_tags_ids", "=", "[", "]", "\n", "batches_BIO", "=", "[", "]", "\n", "batches_tokenIds", "=", "[", "]", "\n", "batches_doc_ids", "=", "[", "]", "\n", "\n", "docs_batch_embeddingIds", "=", "[", "]", "# e.g., 587 max doc length - complete with -1 when the size of the doc is smaller", "\n", "docs_batch_charIds", "=", "[", "]", "# e.g., 587 max doc length - complete with -1 when the size of the doc is smaller", "\n", "docs_batch_scoringMatrixHeadIds", "=", "[", "]", "\n", "docs_batch_scoringMatrix", "=", "[", "]", "\n", "\n", "docs_batch_entity_tags", "=", "[", "]", "\n", "docs_batch_entity_tags_ids", "=", "[", "]", "\n", "\n", "docs_batch_tokens", "=", "[", "]", "\n", "\n", "docs_batch_BIO", "=", "[", "]", "\n", "docs_batch_tokenIds", "=", "[", "]", "\n", "docs_batch_doc_ids", "=", "[", "]", "\n", "\n", "maxDocLenList", "=", "[", "]", "\n", "maxSentenceLen", "=", "-", "1", "\n", "\n", "maxWordLenList", "=", "[", "]", "\n", "maxWordLen", "=", "-", "1", "\n", "\n", "wordLenList", "=", "[", "]", "\n", "wordLens", "=", "[", "]", "\n", "\n", "lenBatchesDoc", "=", "[", "]", "\n", "lenEmbeddingssDoc", "=", "[", "]", "\n", "\n", "lenBatchesChars", "=", "[", "]", "\n", "lenCharsDoc", "=", "[", "]", "\n", "\n", "sumLen", "=", "0", "\n", "for", "docIdx", "in", "range", "(", "len", "(", "data_copy", ".", "data", ")", ")", ":", "\n", "        ", "doc", "=", "data_copy", ".", "data", "[", "docIdx", "]", "\n", "# print (doc)", "\n", "if", "docIdx", "%", "config", ".", "batchsize", "==", "0", "and", "docIdx", ">", "0", ":", "\n", "# print (docIdx)", "\n", "# print (\"new batch\")", "\n", "            ", "batches_embeddingIds", ".", "append", "(", "docs_batch_embeddingIds", ")", "\n", "batches_charIds", ".", "append", "(", "docs_batch_charIds", ")", "\n", "\n", "batches_scoringMatrixHeadIds", ".", "append", "(", "docs_batch_scoringMatrixHeadIds", ")", "\n", "batches_scoringMatrix", ".", "append", "(", "docs_batch_scoringMatrix", ")", "\n", "batches_entity_tags", ".", "append", "(", "docs_batch_entity_tags", ")", "\n", "batches_entity_tags_ids", ".", "append", "(", "docs_batch_entity_tags_ids", ")", "\n", "\n", "batches_tokens", ".", "append", "(", "docs_batch_tokens", ")", "\n", "\n", "batches_BIO", ".", "append", "(", "docs_batch_BIO", ")", "\n", "batches_tokenIds", ".", "append", "(", "docs_batch_tokenIds", ")", "\n", "batches_doc_ids", ".", "append", "(", "docs_batch_doc_ids", ")", "\n", "\n", "docs_batch_embeddingIds", "=", "[", "]", "# e.g., 587 max doc length - complete with -1 when the size of the doc is smaller", "\n", "docs_batch_charIds", "=", "[", "]", "# e.g., 587 max doc length - complete with -1 when the size of the doc is smaller", "\n", "docs_batch_scoringMatrixHeadIds", "=", "[", "]", "\n", "docs_batch_scoringMatrix", "=", "[", "]", "\n", "\n", "docs_batch_tokens", "=", "[", "]", "\n", "\n", "docs_batch_entity_tags", "=", "[", "]", "\n", "docs_batch_entity_tags_ids", "=", "[", "]", "\n", "docs_batch_BIO", "=", "[", "]", "\n", "docs_batch_tokenIds", "=", "[", "]", "\n", "docs_batch_doc_ids", "=", "[", "]", "\n", "\n", "maxDocLenList", ".", "append", "(", "maxSentenceLen", ")", "\n", "maxSentenceLen", "=", "-", "1", "\n", "\n", "maxWordLenList", ".", "append", "(", "maxWordLen", ")", "\n", "maxWordLen", "=", "-", "1", "\n", "\n", "wordLenList", ".", "append", "(", "wordLens", ")", "\n", "\n", "\n", "\n", "", "if", "len", "(", "doc", ".", "token_ids", ")", ">", "maxSentenceLen", ":", "\n", "            ", "maxSentenceLen", "=", "len", "(", "doc", ".", "token_ids", ")", "\n", "\n", "", "longest_token_list", "=", "max", "(", "doc", ".", "char_ids", ",", "key", "=", "len", ")", "\n", "if", "len", "(", "longest_token_list", ")", ">", "maxWordLen", ":", "\n", "            ", "maxWordLen", "=", "len", "(", "longest_token_list", ")", "\n", "\n", "", "wordLens", "=", "[", "len", "(", "token", ")", "for", "token", "in", "doc", ".", "char_ids", "]", "\n", "\n", "\n", "sumLen", "+=", "len", "(", "doc", ".", "token_ids", ")", "\n", "docs_batch_embeddingIds", ".", "append", "(", "doc", ".", "embedding_ids", ")", "\n", "docs_batch_charIds", ".", "append", "(", "doc", ".", "char_ids", ")", "\n", "docs_batch_scoringMatrixHeadIds", ".", "append", "(", "doc", ".", "joint_ids", ")", "\n", "\n", "scoringMatrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "doc", ".", "joint_ids", ")", ",", "len", "(", "doc", ".", "joint_ids", ")", "*", "len", "(", "config", ".", "dataset_set_relations", ")", ")", ")", "\n", "\n", "for", "tokenIdx", "in", "range", "(", "len", "(", "doc", ".", "joint_ids", ")", ")", ":", "\n", "            ", "tokenHeads", "=", "doc", ".", "joint_ids", "[", "tokenIdx", "]", "\n", "for", "head", "in", "tokenHeads", ":", "\n", "# print (str(tokenIdx)+ \" \"+ str(head))", "\n", "                ", "scoringMatrix", "[", "tokenIdx", ",", "head", "]", "=", "1", "\n", "\n", "", "", "docs_batch_scoringMatrix", ".", "append", "(", "scoringMatrix", ")", "\n", "# print (scoringMatrix)", "\n", "\n", "#print (doc.jlabel_names)", "\n", "if", "config", ".", "ner_classes", "==", "\"BIO\"", ":", "\n", "            ", "docs_batch_entity_tags", ".", "append", "(", "doc", ".", "BIOs", ")", "##to do", "\n", "docs_batch_entity_tags_ids", ".", "append", "(", "doc", ".", "BIO_ids", ")", "\n", "\n", "", "elif", "config", ".", "ner_classes", "==", "\"EC\"", ":", "\n", "            ", "docs_batch_entity_tags", ".", "append", "(", "doc", ".", "ecs", ")", "##to do", "\n", "docs_batch_entity_tags_ids", ".", "append", "(", "doc", ".", "ec_ids", ")", "\n", "\n", "", "docs_batch_tokens", ".", "append", "(", "doc", ".", "tokens", ")", "\n", "\n", "docs_batch_BIO", ".", "append", "(", "doc", ".", "BIOs", ")", "##to do", "\n", "docs_batch_tokenIds", ".", "append", "(", "doc", ".", "token_ids", ")", "\n", "docs_batch_doc_ids", ".", "append", "(", "doc", ".", "docId", ")", "\n", "if", "docIdx", "==", "len", "(", "\n", "data_copy", ".", "data", ")", "-", "1", ":", "## if there are no documents left - append the batch - usually it is shorter batch", "\n", "            ", "batches_embeddingIds", ".", "append", "(", "docs_batch_embeddingIds", ")", "\n", "batches_charIds", ".", "append", "(", "docs_batch_charIds", ")", "\n", "batches_scoringMatrixHeadIds", ".", "append", "(", "docs_batch_scoringMatrixHeadIds", ")", "\n", "batches_scoringMatrix", ".", "append", "(", "docs_batch_scoringMatrix", ")", "\n", "\n", "batches_entity_tags", ".", "append", "(", "docs_batch_entity_tags", ")", "\n", "batches_entity_tags_ids", ".", "append", "(", "docs_batch_entity_tags_ids", ")", "\n", "batches_tokens", ".", "append", "(", "docs_batch_tokens", ")", "\n", "\n", "batches_BIO", ".", "append", "(", "docs_batch_BIO", ")", "\n", "batches_tokenIds", ".", "append", "(", "docs_batch_tokenIds", ")", "\n", "batches_doc_ids", ".", "append", "(", "docs_batch_doc_ids", ")", "\n", "maxDocLenList", ".", "append", "(", "maxSentenceLen", ")", "\n", "maxWordLenList", ".", "append", "(", "maxWordLen", ")", "\n", "wordLenList", ".", "append", "(", "wordLens", ")", "\n", "# maxDocLen.append(maxWordLen)", "\n", "\n", "# print(maxDocLen)", "\n", "", "", "for", "bIdx", "in", "range", "(", "len", "(", "batches_embeddingIds", ")", ")", ":", "\n", "\n", "        ", "batch_embeddingIds", "=", "batches_embeddingIds", "[", "bIdx", "]", "\n", "batch_charIds", "=", "batches_charIds", "[", "bIdx", "]", "\n", "batch_scoringMatrixHeadIds", "=", "batches_scoringMatrixHeadIds", "[", "bIdx", "]", "\n", "\n", "batch_entity_tags", "=", "batches_entity_tags", "[", "bIdx", "]", "\n", "batch_tokens", "=", "batches_tokens", "[", "bIdx", "]", "\n", "\n", "batch_tokenIds", "=", "batches_tokenIds", "[", "bIdx", "]", "\n", "\n", "for", "dIdx", "in", "range", "(", "len", "(", "batch_embeddingIds", ")", ")", ":", "\n", "            ", "embeddingId_doc", "=", "batch_embeddingIds", "[", "dIdx", "]", "\n", "charIds_doc", "=", "batch_charIds", "[", "dIdx", "]", "\n", "scoringMatrixHeadId_doc", "=", "batch_scoringMatrixHeadIds", "[", "dIdx", "]", "\n", "\n", "ner_doc", "=", "batch_entity_tags", "[", "dIdx", "]", "\n", "token_doc", "=", "batch_tokens", "[", "dIdx", "]", "\n", "\n", "token_id_doc", "=", "batch_tokenIds", "[", "dIdx", "]", "\n", "\n", "lenEmbeddingssDoc", ".", "append", "(", "len", "(", "embeddingId_doc", ")", ")", "\n", "tokensLen", "=", "[", "len", "(", "token", ")", "for", "token", "in", "charIds_doc", "]", "\n", "lenCharsDoc", ".", "append", "(", "tokensLen", ")", "\n", "\n", "\n", "for", "tokenIdx", "in", "range", "(", "len", "(", "tokensLen", ")", ")", ":", "\n", "                ", "tokenLen", "=", "tokensLen", "[", "tokenIdx", "]", "\n", "\n", "if", "tokenLen", "<", "maxWordLenList", "[", "bIdx", "]", ":", "\n", "\n", "                    ", "for", "i", "in", "np", ".", "arange", "(", "maxWordLenList", "[", "bIdx", "]", "-", "tokenLen", ")", ":", "\n", "#print (charIds_doc)", "\n", "                        ", "charIds_doc", "[", "tokenIdx", "]", ".", "append", "(", "0", ")", "\n", "\n", "\n", "", "", "", "if", "len", "(", "embeddingId_doc", ")", "<", "maxDocLenList", "[", "bIdx", "]", ":", "\n", "# print  (maxWordLen-len(word_doc))", "\n", "# print ('here')", "\n", "                ", "for", "i", "in", "np", ".", "arange", "(", "maxDocLenList", "[", "bIdx", "]", "-", "len", "(", "embeddingId_doc", ")", ")", ":", "\n", "# pass", "\n", "                    ", "embeddingId_doc", ".", "append", "(", "0", ")", "\n", "charIds_doc", ".", "append", "(", "[", "]", ")", "\n", "\n", "\n", "scoringMatrixHeadId_doc", ".", "append", "(", "[", "maxDocLenList", "[", "bIdx", "]", "-", "1", "]", ")", "\n", "token_doc", ".", "append", "(", "\"ZERO\"", ")", "\n", "\n", "ner_doc", ".", "append", "(", "\"ZERO\"", ")", "\n", "token_id_doc", ".", "append", "(", "maxDocLenList", "[", "bIdx", "]", "-", "1", ")", "\n", "\n", "", "", "", "lenBatchesDoc", ".", "append", "(", "lenEmbeddingssDoc", ")", "\n", "\n", "lenBatchesChars", ".", "append", "(", "lenCharsDoc", ")", "\n", "\n", "lenEmbeddingssDoc", "=", "[", "]", "\n", "lenCharsDoc", "=", "[", "]", "\n", "\n", "# return batches_words,batches_heads", "\n", "", "for", "bIdx", "in", "range", "(", "len", "(", "batches_embeddingIds", ")", ")", ":", "# 131", "\n", "# print (bIdx)", "\n", "        ", "batch_embeddingIds", "=", "np", ".", "asarray", "(", "batches_embeddingIds", "[", "bIdx", "]", ")", "\n", "batch_charIds", "=", "np", ".", "asarray", "(", "batches_charIds", "[", "bIdx", "]", ")", "\n", "batch_scoringMatrix", "=", "np", ".", "asarray", "(", "batches_scoringMatrix", "[", "bIdx", "]", ")", "\n", "\n", "batch_ner", "=", "np", ".", "asarray", "(", "batches_entity_tags", "[", "bIdx", "]", ")", "\n", "batch_ner_ids", "=", "np", ".", "asarray", "(", "batches_entity_tags_ids", "[", "bIdx", "]", ")", "\n", "batch_token", "=", "np", ".", "asarray", "(", "batches_tokens", "[", "bIdx", "]", ")", "\n", "\n", "batch_bio", "=", "np", ".", "asarray", "(", "batches_BIO", "[", "bIdx", "]", ")", "\n", "batch_tokenId", "=", "np", ".", "asarray", "(", "batches_tokenIds", "[", "bIdx", "]", ")", "\n", "\n", "batch_doc_id", "=", "np", ".", "asarray", "(", "batches_doc_ids", "[", "bIdx", "]", ")", "\n", "\n", "docs_length", "=", "np", ".", "asarray", "(", "lenBatchesDoc", "[", "bIdx", "]", ")", "\n", "tokenslength", "=", "np", ".", "asarray", "(", "lenBatchesChars", "[", "bIdx", "]", ")", "\n", "\n", "\n", "\n", "\n", "yield", "{", "dropout_embedding_keep", ":", "dropout_embedding_prob", ",", "dropout_lstm_keep", ":", "dropout_lstm_prob", ",", "dropout_lstm_output_keep", ":", "dropout_lstm_output_prob", ",", "\n", "dropout_fcl_ner_keep", ":", "dropout_fcl_ner_prob", ",", "dropout_fcl_rel_keep", ":", "dropout_fcl_rel_prob", ",", "isTrain", ":", "train", ",", "charIds", ":", "batch_charIds", ",", "\n", "tokensLens", ":", "tokenslength", ",", "embeddingIds", ":", "batch_embeddingIds", ",", "entity_tags_ids", ":", "batch_ner_ids", ",", "entity_tags", ":", "batch_ner", ",", "\n", "tokens", ":", "batch_token", ",", "BIO", ":", "batch_bio", ",", "tokenIds", ":", "batch_tokenId", ",", "scoringMatrixGold", ":", "batch_scoringMatrix", ",", "seqlen", ":", "docs_length", ",", "doc_ids", ":", "batch_doc_id", "}", "\n", "\n"]]}