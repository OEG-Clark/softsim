{"home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.projector.noise_regularize": [[18, 39], ["noise.mean.reshape", "noise.mean.mean", "torch.roll", "torch.roll"], "function", ["None"], ["def", "noise_regularize", "(", "noises", ")", ":", "\n", "    ", "loss", "=", "0", "\n", "\n", "for", "noise", "in", "noises", ":", "\n", "        ", "size", "=", "noise", ".", "shape", "[", "2", "]", "\n", "\n", "while", "True", ":", "\n", "            ", "loss", "=", "(", "\n", "loss", "\n", "+", "(", "noise", "*", "torch", ".", "roll", "(", "noise", ",", "shifts", "=", "1", ",", "dims", "=", "3", ")", ")", ".", "mean", "(", ")", ".", "pow", "(", "2", ")", "\n", "+", "(", "noise", "*", "torch", ".", "roll", "(", "noise", ",", "shifts", "=", "1", ",", "dims", "=", "2", ")", ")", ".", "mean", "(", ")", ".", "pow", "(", "2", ")", "\n", ")", "\n", "\n", "if", "size", "<=", "8", ":", "\n", "                ", "break", "\n", "\n", "", "noise", "=", "noise", ".", "reshape", "(", "[", "-", "1", ",", "1", ",", "size", "//", "2", ",", "2", ",", "size", "//", "2", ",", "2", "]", ")", "\n", "noise", "=", "noise", ".", "mean", "(", "[", "3", ",", "5", "]", ")", "\n", "size", "//=", "2", "\n", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.projector.noise_normalize_": [[41, 47], ["noise.mean", "noise.std", "noise.data.add_().div_", "noise.data.add_"], "function", ["None"], ["", "def", "noise_normalize_", "(", "noises", ")", ":", "\n", "    ", "for", "noise", "in", "noises", ":", "\n", "        ", "mean", "=", "noise", ".", "mean", "(", ")", "\n", "std", "=", "noise", ".", "std", "(", ")", "\n", "\n", "noise", ".", "data", ".", "add_", "(", "-", "mean", ")", ".", "div_", "(", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.projector.get_lr": [[49, 55], ["min", "min", "math.cos", "math.cos"], "function", ["None"], ["", "", "def", "get_lr", "(", "t", ",", "initial_lr", ",", "rampdown", "=", "0.25", ",", "rampup", "=", "0.05", ")", ":", "\n", "    ", "lr_ramp", "=", "min", "(", "1", ",", "(", "1", "-", "t", ")", "/", "rampdown", ")", "\n", "lr_ramp", "=", "0.5", "-", "0.5", "*", "math", ".", "cos", "(", "lr_ramp", "*", "math", ".", "pi", ")", "\n", "lr_ramp", "=", "lr_ramp", "*", "min", "(", "1", ",", "t", "/", "rampup", ")", "\n", "\n", "return", "initial_lr", "*", "lr_ramp", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.projector.latent_noise": [[57, 61], ["torch.randn_like"], "function", ["None"], ["", "def", "latent_noise", "(", "latent", ",", "strength", ")", ":", "\n", "    ", "noise", "=", "torch", ".", "randn_like", "(", "latent", ")", "*", "strength", "\n", "\n", "return", "latent", "+", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.projector.make_image": [[63, 73], ["tensor.detach().clamp_().add().div_().mul().type().permute().to().numpy", "tensor.detach().clamp_().add().div_().mul().type().permute().to", "tensor.detach().clamp_().add().div_().mul().type().permute", "tensor.detach().clamp_().add().div_().mul().type", "tensor.detach().clamp_().add().div_().mul", "tensor.detach().clamp_().add().div_", "tensor.detach().clamp_().add", "tensor.detach().clamp_", "tensor.detach"], "function", ["None"], ["", "def", "make_image", "(", "tensor", ")", ":", "\n", "    ", "return", "(", "\n", "tensor", ".", "detach", "(", ")", "\n", ".", "clamp_", "(", "min", "=", "-", "1", ",", "max", "=", "1", ")", "\n", ".", "add", "(", "1", ")", "\n", ".", "div_", "(", "2", ")", "\n", ".", "mul", "(", "255", ")", "\n", ".", "type", "(", "torch", ".", "uint8", ")", "\n", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", ".", "to", "(", "\"cpu\"", ")", "\n", ".", "numpy", "(", ")", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.AdaptiveAugment.__init__": [[13, 22], ["torch.tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ada_aug_target", ",", "ada_aug_len", ",", "update_every", ",", "device", ")", ":", "\n", "        ", "self", ".", "ada_aug_target", "=", "ada_aug_target", "\n", "self", ".", "ada_aug_len", "=", "ada_aug_len", "\n", "self", ".", "update_every", "=", "update_every", "\n", "\n", "self", ".", "ada_update", "=", "0", "\n", "self", ".", "ada_aug_buf", "=", "torch", ".", "tensor", "(", "[", "0.0", ",", "0.0", "]", ",", "device", "=", "device", ")", "\n", "self", ".", "r_t_stat", "=", "0", "\n", "self", ".", "ada_aug_p", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.AdaptiveAugment.tune": [[23, 49], ["torch.no_grad", "torch.tensor", "distributed.reduce_sum", "non_leaking.AdaptiveAugment.ada_aug_buf.tolist", "min", "non_leaking.AdaptiveAugment.ada_aug_buf.mul_", "torch.sign().sum().item", "max", "torch.sign().sum", "torch.sign"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.reduce_sum"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "tune", "(", "self", ",", "real_pred", ")", ":", "\n", "        ", "self", ".", "ada_aug_buf", "+=", "torch", ".", "tensor", "(", "\n", "(", "torch", ".", "sign", "(", "real_pred", ")", ".", "sum", "(", ")", ".", "item", "(", ")", ",", "real_pred", ".", "shape", "[", "0", "]", ")", ",", "\n", "device", "=", "real_pred", ".", "device", ",", "\n", ")", "\n", "self", ".", "ada_update", "+=", "1", "\n", "\n", "if", "self", ".", "ada_update", "%", "self", ".", "update_every", "==", "0", ":", "\n", "            ", "self", ".", "ada_aug_buf", "=", "reduce_sum", "(", "self", ".", "ada_aug_buf", ")", "\n", "pred_signs", ",", "n_pred", "=", "self", ".", "ada_aug_buf", ".", "tolist", "(", ")", "\n", "\n", "self", ".", "r_t_stat", "=", "pred_signs", "/", "n_pred", "\n", "\n", "if", "self", ".", "r_t_stat", ">", "self", ".", "ada_aug_target", ":", "\n", "                ", "sign", "=", "1", "\n", "\n", "", "else", ":", "\n", "                ", "sign", "=", "-", "1", "\n", "\n", "", "self", ".", "ada_aug_p", "+=", "sign", "*", "n_pred", "/", "self", ".", "ada_aug_len", "\n", "self", ".", "ada_aug_p", "=", "min", "(", "1", ",", "max", "(", "0", ",", "self", ".", "ada_aug_p", ")", ")", "\n", "self", ".", "ada_aug_buf", ".", "mul_", "(", "0", ")", "\n", "self", ".", "ada_update", "=", "0", "\n", "\n", "", "return", "self", ".", "ada_aug_p", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.GridSampleForward.forward": [[340, 348], ["torch.nn.functional.grid_sample", "ctx.save_for_backward"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ",", "grid", ")", ":", "\n", "        ", "out", "=", "F", ".", "grid_sample", "(", "\n", "input", ",", "grid", ",", "mode", "=", "\"bilinear\"", ",", "padding_mode", "=", "\"zeros\"", ",", "align_corners", "=", "False", "\n", ")", "\n", "ctx", ".", "save_for_backward", "(", "input", ",", "grid", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.GridSampleForward.backward": [[349, 355], ["GridSampleBackward.apply"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "input", ",", "grid", "=", "ctx", ".", "saved_tensors", "\n", "grad_input", ",", "grad_grid", "=", "GridSampleBackward", ".", "apply", "(", "grad_output", ",", "input", ",", "grid", ")", "\n", "\n", "return", "grad_input", ",", "grad_grid", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.GridSampleBackward.forward": [[358, 365], ["torch._C._jit_get_operation", "torch._C._jit_get_operation.", "ctx.save_for_backward"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "grad_output", ",", "input", ",", "grid", ")", ":", "\n", "        ", "op", "=", "torch", ".", "_C", ".", "_jit_get_operation", "(", "\"aten::grid_sampler_2d_backward\"", ")", "\n", "grad_input", ",", "grad_grid", "=", "op", "(", "grad_output", ",", "input", ",", "grid", ",", "0", ",", "0", ",", "False", ")", "\n", "ctx", ".", "save_for_backward", "(", "grid", ")", "\n", "\n", "return", "grad_input", ",", "grad_grid", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.GridSampleBackward.backward": [[366, 375], ["GridSampleForward.apply"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_grad_input", ",", "grad_grad_grid", ")", ":", "\n", "        ", "grid", ",", "=", "ctx", ".", "saved_tensors", "\n", "grad_grad_output", "=", "None", "\n", "\n", "if", "ctx", ".", "needs_input_grad", "[", "0", "]", ":", "\n", "            ", "grad_grad_output", "=", "GridSampleForward", ".", "apply", "(", "grad_grad_input", ",", "grid", ")", "\n", "\n", "", "return", "grad_grad_output", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.translate_mat": [[67, 75], ["torch.eye().unsqueeze().repeat", "torch.stack", "torch.eye().unsqueeze", "torch.eye"], "function", ["None"], ["def", "translate_mat", "(", "t_x", ",", "t_y", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "    ", "batch", "=", "t_x", ".", "shape", "[", "0", "]", "\n", "\n", "mat", "=", "torch", ".", "eye", "(", "3", ",", "device", "=", "device", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "batch", ",", "1", ",", "1", ")", "\n", "translate", "=", "torch", ".", "stack", "(", "(", "t_x", ",", "t_y", ")", ",", "1", ")", "\n", "mat", "[", ":", ",", ":", "2", ",", "2", "]", "=", "translate", "\n", "\n", "return", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.rotate_mat": [[77, 87], ["torch.eye().unsqueeze().repeat", "torch.sin", "torch.cos", "torch.stack().view", "torch.eye().unsqueeze", "torch.stack", "torch.eye"], "function", ["None"], ["", "def", "rotate_mat", "(", "theta", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "    ", "batch", "=", "theta", ".", "shape", "[", "0", "]", "\n", "\n", "mat", "=", "torch", ".", "eye", "(", "3", ",", "device", "=", "device", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "batch", ",", "1", ",", "1", ")", "\n", "sin_t", "=", "torch", ".", "sin", "(", "theta", ")", "\n", "cos_t", "=", "torch", ".", "cos", "(", "theta", ")", "\n", "rot", "=", "torch", ".", "stack", "(", "(", "cos_t", ",", "-", "sin_t", ",", "sin_t", ",", "cos_t", ")", ",", "1", ")", ".", "view", "(", "batch", ",", "2", ",", "2", ")", "\n", "mat", "[", ":", ",", ":", "2", ",", ":", "2", "]", "=", "rot", "\n", "\n", "return", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale_mat": [[89, 97], ["torch.eye().unsqueeze().repeat", "torch.eye().unsqueeze", "torch.eye"], "function", ["None"], ["", "def", "scale_mat", "(", "s_x", ",", "s_y", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "    ", "batch", "=", "s_x", ".", "shape", "[", "0", "]", "\n", "\n", "mat", "=", "torch", ".", "eye", "(", "3", ",", "device", "=", "device", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "batch", ",", "1", ",", "1", ")", "\n", "mat", "[", ":", ",", "0", ",", "0", "]", "=", "s_x", "\n", "mat", "[", ":", ",", "1", ",", "1", "]", "=", "s_y", "\n", "\n", "return", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.translate3d_mat": [[99, 107], ["torch.eye().unsqueeze().repeat", "torch.stack", "torch.eye().unsqueeze", "torch.eye"], "function", ["None"], ["", "def", "translate3d_mat", "(", "t_x", ",", "t_y", ",", "t_z", ")", ":", "\n", "    ", "batch", "=", "t_x", ".", "shape", "[", "0", "]", "\n", "\n", "mat", "=", "torch", ".", "eye", "(", "4", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "batch", ",", "1", ",", "1", ")", "\n", "translate", "=", "torch", ".", "stack", "(", "(", "t_x", ",", "t_y", ",", "t_z", ")", ",", "1", ")", "\n", "mat", "[", ":", ",", ":", "3", ",", "3", "]", "=", "translate", "\n", "\n", "return", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.rotate3d_mat": [[109, 128], ["torch.eye().unsqueeze", "torch.tensor().unsqueeze", "torch.tensor", "torch.sin().view", "torch.cos().view", "torch.eye().unsqueeze().repeat", "torch.eye", "torch.tensor", "torch.sin", "torch.cos", "torch.eye().unsqueeze", "torch.tensor.unsqueeze", "torch.eye"], "function", ["None"], ["", "def", "rotate3d_mat", "(", "axis", ",", "theta", ")", ":", "\n", "    ", "batch", "=", "theta", ".", "shape", "[", "0", "]", "\n", "\n", "u_x", ",", "u_y", ",", "u_z", "=", "axis", "\n", "\n", "eye", "=", "torch", ".", "eye", "(", "3", ")", ".", "unsqueeze", "(", "0", ")", "\n", "cross", "=", "torch", ".", "tensor", "(", "[", "(", "0", ",", "-", "u_z", ",", "u_y", ")", ",", "(", "u_z", ",", "0", ",", "-", "u_x", ")", ",", "(", "-", "u_y", ",", "u_x", ",", "0", ")", "]", ")", ".", "unsqueeze", "(", "0", ")", "\n", "outer", "=", "torch", ".", "tensor", "(", "axis", ")", "\n", "outer", "=", "(", "outer", ".", "unsqueeze", "(", "1", ")", "*", "outer", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "sin_t", "=", "torch", ".", "sin", "(", "theta", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "cos_t", "=", "torch", ".", "cos", "(", "theta", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "\n", "rot", "=", "cos_t", "*", "eye", "+", "sin_t", "*", "cross", "+", "(", "1", "-", "cos_t", ")", "*", "outer", "\n", "\n", "eye_4", "=", "torch", ".", "eye", "(", "4", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "batch", ",", "1", ",", "1", ")", "\n", "eye_4", "[", ":", ",", ":", "3", ",", ":", "3", "]", "=", "rot", "\n", "\n", "return", "eye_4", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale3d_mat": [[130, 139], ["torch.eye().unsqueeze().repeat", "torch.eye().unsqueeze", "torch.eye"], "function", ["None"], ["", "def", "scale3d_mat", "(", "s_x", ",", "s_y", ",", "s_z", ")", ":", "\n", "    ", "batch", "=", "s_x", ".", "shape", "[", "0", "]", "\n", "\n", "mat", "=", "torch", ".", "eye", "(", "4", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "batch", ",", "1", ",", "1", ")", "\n", "mat", "[", ":", ",", "0", ",", "0", "]", "=", "s_x", "\n", "mat", "[", ":", ",", "1", ",", "1", "]", "=", "s_y", "\n", "mat", "[", ":", ",", "2", ",", "2", "]", "=", "s_z", "\n", "\n", "return", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.luma_flip_mat": [[141, 149], ["torch.eye().unsqueeze().repeat", "torch.tensor", "i.view", "torch.eye().unsqueeze", "torch.ger", "torch.eye"], "function", ["None"], ["", "def", "luma_flip_mat", "(", "axis", ",", "i", ")", ":", "\n", "    ", "batch", "=", "i", ".", "shape", "[", "0", "]", "\n", "\n", "eye", "=", "torch", ".", "eye", "(", "4", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "batch", ",", "1", ",", "1", ")", "\n", "axis", "=", "torch", ".", "tensor", "(", "axis", "+", "(", "0", ",", ")", ")", "\n", "flip", "=", "2", "*", "torch", ".", "ger", "(", "axis", ",", "axis", ")", "*", "i", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "\n", "return", "eye", "-", "flip", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.saturation_mat": [[151, 160], ["torch.eye().unsqueeze().repeat", "torch.tensor", "torch.ger", "torch.eye().unsqueeze", "i.view", "torch.eye"], "function", ["None"], ["", "def", "saturation_mat", "(", "axis", ",", "i", ")", ":", "\n", "    ", "batch", "=", "i", ".", "shape", "[", "0", "]", "\n", "\n", "eye", "=", "torch", ".", "eye", "(", "4", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "batch", ",", "1", ",", "1", ")", "\n", "axis", "=", "torch", ".", "tensor", "(", "axis", "+", "(", "0", ",", ")", ")", "\n", "axis", "=", "torch", ".", "ger", "(", "axis", ",", "axis", ")", "\n", "saturate", "=", "axis", "+", "(", "eye", "-", "axis", ")", "*", "i", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "\n", "return", "saturate", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.lognormal_sample": [[162, 164], ["torch.empty().log_normal_", "torch.empty"], "function", ["None"], ["", "def", "lognormal_sample", "(", "size", ",", "mean", "=", "0", ",", "std", "=", "1", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "    ", "return", "torch", ".", "empty", "(", "size", ",", "device", "=", "device", ")", ".", "log_normal_", "(", "mean", "=", "mean", ",", "std", "=", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.category_sample": [[166, 171], ["torch.tensor", "torch.randint", "len"], "function", ["None"], ["", "def", "category_sample", "(", "size", ",", "categories", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "    ", "category", "=", "torch", ".", "tensor", "(", "categories", ",", "device", "=", "device", ")", "\n", "sample", "=", "torch", ".", "randint", "(", "high", "=", "len", "(", "categories", ")", ",", "size", "=", "(", "size", ",", ")", ",", "device", "=", "device", ")", "\n", "\n", "return", "category", "[", "sample", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.uniform_sample": [[173, 175], ["torch.empty().uniform_", "torch.empty", "math.pi", "math.pi", "math.pi"], "function", ["None"], ["", "def", "uniform_sample", "(", "size", ",", "low", ",", "high", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "    ", "return", "torch", ".", "empty", "(", "size", ",", "device", "=", "device", ")", ".", "uniform_", "(", "low", ",", "high", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.normal_sample": [[177, 179], ["torch.empty().normal_", "torch.empty"], "function", ["None"], ["", "def", "normal_sample", "(", "size", ",", "mean", "=", "0", ",", "std", "=", "1", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "    ", "return", "torch", ".", "empty", "(", "size", ",", "device", "=", "device", ")", ".", "normal_", "(", "mean", ",", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.bernoulli_sample": [[181, 183], ["torch.empty().bernoulli_", "torch.empty"], "function", ["None"], ["", "def", "bernoulli_sample", "(", "size", ",", "p", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "    ", "return", "torch", ".", "empty", "(", "size", ",", "device", "=", "device", ")", ".", "bernoulli_", "(", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply": [[185, 191], ["bernoulli_sample().view", "non_leaking.bernoulli_sample"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.bernoulli_sample"], ["", "def", "random_mat_apply", "(", "p", ",", "transform", ",", "prev", ",", "eye", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "    ", "size", "=", "transform", ".", "shape", "[", "0", "]", "\n", "select", "=", "bernoulli_sample", "(", "size", ",", "p", ",", "device", "=", "device", ")", ".", "view", "(", "size", ",", "1", ",", "1", ")", "\n", "select_transform", "=", "select", "*", "transform", "+", "(", "1", "-", "select", ")", "*", "eye", "\n", "\n", "return", "select_transform", "@", "prev", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.sample_affine": [[193, 250], ["torch.eye().unsqueeze().repeat", "non_leaking.category_sample", "non_leaking.scale_mat", "non_leaking.random_mat_apply", "non_leaking.category_sample", "non_leaking.rotate_mat", "non_leaking.random_mat_apply", "non_leaking.uniform_sample", "non_leaking.translate_mat", "non_leaking.random_mat_apply", "non_leaking.lognormal_sample", "non_leaking.scale_mat", "non_leaking.random_mat_apply", "non_leaking.uniform_sample", "non_leaking.rotate_mat", "non_leaking.random_mat_apply", "non_leaking.lognormal_sample", "non_leaking.scale_mat", "non_leaking.random_mat_apply", "non_leaking.uniform_sample", "non_leaking.rotate_mat", "non_leaking.random_mat_apply", "non_leaking.normal_sample", "non_leaking.translate_mat", "non_leaking.random_mat_apply", "torch.ones", "torch.round", "torch.round", "math.sqrt", "torch.eye().unsqueeze", "math.log", "math.log", "torch.eye"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.category_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.category_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.rotate_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.uniform_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.translate_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.lognormal_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.uniform_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.rotate_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.lognormal_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.uniform_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.rotate_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.normal_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.translate_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply"], ["", "def", "sample_affine", "(", "p", ",", "size", ",", "height", ",", "width", ",", "device", "=", "\"cpu\"", ")", ":", "\n", "    ", "G", "=", "torch", ".", "eye", "(", "3", ",", "device", "=", "device", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "size", ",", "1", ",", "1", ")", "\n", "eye", "=", "G", "\n", "\n", "# flip", "\n", "param", "=", "category_sample", "(", "size", ",", "(", "0", ",", "1", ")", ")", "\n", "Gc", "=", "scale_mat", "(", "1", "-", "2.0", "*", "param", ",", "torch", ".", "ones", "(", "size", ")", ",", "device", "=", "device", ")", "\n", "G", "=", "random_mat_apply", "(", "p", ",", "Gc", ",", "G", ",", "eye", ",", "device", "=", "device", ")", "\n", "# print('flip', G, scale_mat(1 - 2.0 * param, torch.ones(size)), sep='\\n')", "\n", "\n", "# 90 rotate", "\n", "param", "=", "category_sample", "(", "size", ",", "(", "0", ",", "3", ")", ")", "\n", "Gc", "=", "rotate_mat", "(", "-", "math", ".", "pi", "/", "2", "*", "param", ",", "device", "=", "device", ")", "\n", "G", "=", "random_mat_apply", "(", "p", ",", "Gc", ",", "G", ",", "eye", ",", "device", "=", "device", ")", "\n", "# print('90 rotate', G, rotate_mat(-math.pi / 2 * param), sep='\\n')", "\n", "\n", "# integer translate", "\n", "param", "=", "uniform_sample", "(", "size", ",", "-", "0.125", ",", "0.125", ")", "\n", "param_height", "=", "torch", ".", "round", "(", "param", "*", "height", ")", "/", "height", "\n", "param_width", "=", "torch", ".", "round", "(", "param", "*", "width", ")", "/", "width", "\n", "Gc", "=", "translate_mat", "(", "param_width", ",", "param_height", ",", "device", "=", "device", ")", "\n", "G", "=", "random_mat_apply", "(", "p", ",", "Gc", ",", "G", ",", "eye", ",", "device", "=", "device", ")", "\n", "# print('integer translate', G, translate_mat(param_width, param_height), sep='\\n')", "\n", "\n", "# isotropic scale", "\n", "param", "=", "lognormal_sample", "(", "size", ",", "std", "=", "0.2", "*", "math", ".", "log", "(", "2", ")", ")", "\n", "Gc", "=", "scale_mat", "(", "param", ",", "param", ",", "device", "=", "device", ")", "\n", "G", "=", "random_mat_apply", "(", "p", ",", "Gc", ",", "G", ",", "eye", ",", "device", "=", "device", ")", "\n", "# print('isotropic scale', G, scale_mat(param, param), sep='\\n')", "\n", "\n", "p_rot", "=", "1", "-", "math", ".", "sqrt", "(", "1", "-", "p", ")", "\n", "\n", "# pre-rotate", "\n", "param", "=", "uniform_sample", "(", "size", ",", "-", "math", ".", "pi", ",", "math", ".", "pi", ")", "\n", "Gc", "=", "rotate_mat", "(", "-", "param", ",", "device", "=", "device", ")", "\n", "G", "=", "random_mat_apply", "(", "p_rot", ",", "Gc", ",", "G", ",", "eye", ",", "device", "=", "device", ")", "\n", "# print('pre-rotate', G, rotate_mat(-param), sep='\\n')", "\n", "\n", "# anisotropic scale", "\n", "param", "=", "lognormal_sample", "(", "size", ",", "std", "=", "0.2", "*", "math", ".", "log", "(", "2", ")", ")", "\n", "Gc", "=", "scale_mat", "(", "param", ",", "1", "/", "param", ",", "device", "=", "device", ")", "\n", "G", "=", "random_mat_apply", "(", "p", ",", "Gc", ",", "G", ",", "eye", ",", "device", "=", "device", ")", "\n", "# print('anisotropic scale', G, scale_mat(param, 1 / param), sep='\\n')", "\n", "\n", "# post-rotate", "\n", "param", "=", "uniform_sample", "(", "size", ",", "-", "math", ".", "pi", ",", "math", ".", "pi", ")", "\n", "Gc", "=", "rotate_mat", "(", "-", "param", ",", "device", "=", "device", ")", "\n", "G", "=", "random_mat_apply", "(", "p_rot", ",", "Gc", ",", "G", ",", "eye", ",", "device", "=", "device", ")", "\n", "# print('post-rotate', G, rotate_mat(-param), sep='\\n')", "\n", "\n", "# fractional translate", "\n", "param", "=", "normal_sample", "(", "size", ",", "std", "=", "0.125", ")", "\n", "Gc", "=", "translate_mat", "(", "param", ",", "param", ",", "device", "=", "device", ")", "\n", "G", "=", "random_mat_apply", "(", "p", ",", "Gc", ",", "G", ",", "eye", ",", "device", "=", "device", ")", "\n", "# print('fractional translate', G, translate_mat(param, param), sep='\\n')", "\n", "\n", "return", "G", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.sample_color": [[252, 284], ["torch.eye().unsqueeze().repeat", "non_leaking.normal_sample", "non_leaking.translate3d_mat", "non_leaking.random_mat_apply", "non_leaking.lognormal_sample", "non_leaking.scale3d_mat", "non_leaking.random_mat_apply", "non_leaking.category_sample", "non_leaking.luma_flip_mat", "non_leaking.random_mat_apply", "non_leaking.uniform_sample", "non_leaking.rotate3d_mat", "non_leaking.random_mat_apply", "non_leaking.lognormal_sample", "non_leaking.saturation_mat", "non_leaking.random_mat_apply", "math.sqrt", "torch.eye().unsqueeze", "math.log", "math.log", "torch.eye"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.normal_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.translate3d_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.lognormal_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale3d_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.category_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.luma_flip_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.uniform_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.rotate3d_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.lognormal_sample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.saturation_mat", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_mat_apply"], ["", "def", "sample_color", "(", "p", ",", "size", ")", ":", "\n", "    ", "C", "=", "torch", ".", "eye", "(", "4", ")", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "size", ",", "1", ",", "1", ")", "\n", "eye", "=", "C", "\n", "axis_val", "=", "1", "/", "math", ".", "sqrt", "(", "3", ")", "\n", "axis", "=", "(", "axis_val", ",", "axis_val", ",", "axis_val", ")", "\n", "\n", "# brightness", "\n", "param", "=", "normal_sample", "(", "size", ",", "std", "=", "0.2", ")", "\n", "Cc", "=", "translate3d_mat", "(", "param", ",", "param", ",", "param", ")", "\n", "C", "=", "random_mat_apply", "(", "p", ",", "Cc", ",", "C", ",", "eye", ")", "\n", "\n", "# contrast", "\n", "param", "=", "lognormal_sample", "(", "size", ",", "std", "=", "0.5", "*", "math", ".", "log", "(", "2", ")", ")", "\n", "Cc", "=", "scale3d_mat", "(", "param", ",", "param", ",", "param", ")", "\n", "C", "=", "random_mat_apply", "(", "p", ",", "Cc", ",", "C", ",", "eye", ")", "\n", "\n", "# luma flip", "\n", "param", "=", "category_sample", "(", "size", ",", "(", "0", ",", "1", ")", ")", "\n", "Cc", "=", "luma_flip_mat", "(", "axis", ",", "param", ")", "\n", "C", "=", "random_mat_apply", "(", "p", ",", "Cc", ",", "C", ",", "eye", ")", "\n", "\n", "# hue rotation", "\n", "param", "=", "uniform_sample", "(", "size", ",", "-", "math", ".", "pi", ",", "math", ".", "pi", ")", "\n", "Cc", "=", "rotate3d_mat", "(", "axis", ",", "param", ")", "\n", "C", "=", "random_mat_apply", "(", "p", ",", "Cc", ",", "C", ",", "eye", ")", "\n", "\n", "# saturation", "\n", "param", "=", "lognormal_sample", "(", "size", ",", "std", "=", "1", "*", "math", ".", "log", "(", "2", ")", ")", "\n", "Cc", "=", "saturation_mat", "(", "axis", ",", "param", ")", "\n", "C", "=", "random_mat_apply", "(", "p", ",", "Cc", ",", "C", ",", "eye", ")", "\n", "\n", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.make_grid": [[286, 294], ["torch.empty", "torch.linspace", "torch.linspace().unsqueeze", "torch.linspace"], "function", ["None"], ["", "def", "make_grid", "(", "shape", ",", "x0", ",", "x1", ",", "y0", ",", "y1", ",", "device", ")", ":", "\n", "    ", "n", ",", "c", ",", "h", ",", "w", "=", "shape", "\n", "grid", "=", "torch", ".", "empty", "(", "n", ",", "h", ",", "w", ",", "3", ",", "device", "=", "device", ")", "\n", "grid", "[", ":", ",", ":", ",", ":", ",", "0", "]", "=", "torch", ".", "linspace", "(", "x0", ",", "x1", ",", "w", ",", "device", "=", "device", ")", "\n", "grid", "[", ":", ",", ":", ",", ":", ",", "1", "]", "=", "torch", ".", "linspace", "(", "y0", ",", "y1", ",", "h", ",", "device", "=", "device", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "grid", "[", ":", ",", ":", ",", ":", ",", "2", "]", "=", "1", "\n", "\n", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.affine_grid": [[296, 299], ["grid.view", "mat.transpose"], "function", ["None"], ["", "def", "affine_grid", "(", "grid", ",", "mat", ")", ":", "\n", "    ", "n", ",", "h", ",", "w", ",", "_", "=", "grid", ".", "shape", "\n", "return", "(", "grid", ".", "view", "(", "n", ",", "h", "*", "w", ",", "3", ")", "@", "mat", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "view", "(", "n", ",", "h", ",", "w", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.get_padding": [[301, 322], ["torch.tensor", "cp[].permute().flatten", "pad.min.max", "pad.min.min", "pad.min.ceil().to", "torch.cat().max", "torch.tensor", "torch.tensor", "torch.tensor", "cp[].permute", "pad.min.ceil", "torch.cat"], "function", ["None"], ["", "def", "get_padding", "(", "G", ",", "height", ",", "width", ",", "kernel_size", ")", ":", "\n", "    ", "device", "=", "G", ".", "device", "\n", "\n", "cx", "=", "(", "width", "-", "1", ")", "/", "2", "\n", "cy", "=", "(", "height", "-", "1", ")", "/", "2", "\n", "cp", "=", "torch", ".", "tensor", "(", "\n", "[", "(", "-", "cx", ",", "-", "cy", ",", "1", ")", ",", "(", "cx", ",", "-", "cy", ",", "1", ")", ",", "(", "cx", ",", "cy", ",", "1", ")", ",", "(", "-", "cx", ",", "cy", ",", "1", ")", "]", ",", "device", "=", "device", "\n", ")", "\n", "cp", "=", "G", "@", "cp", ".", "T", "\n", "\n", "pad_k", "=", "kernel_size", "//", "4", "\n", "\n", "pad", "=", "cp", "[", ":", ",", ":", "2", ",", ":", "]", ".", "permute", "(", "1", ",", "0", ",", "2", ")", ".", "flatten", "(", "1", ")", "\n", "pad", "=", "torch", ".", "cat", "(", "(", "-", "pad", ",", "pad", ")", ")", ".", "max", "(", "1", ")", ".", "values", "\n", "pad", "=", "pad", "+", "torch", ".", "tensor", "(", "[", "pad_k", "*", "2", "-", "cx", ",", "pad_k", "*", "2", "-", "cy", "]", "*", "2", ",", "device", "=", "device", ")", "\n", "pad", "=", "pad", ".", "max", "(", "torch", ".", "tensor", "(", "[", "0", ",", "0", "]", "*", "2", ",", "device", "=", "device", ")", ")", "\n", "pad", "=", "pad", ".", "min", "(", "torch", ".", "tensor", "(", "[", "width", "-", "1", ",", "height", "-", "1", "]", "*", "2", ",", "device", "=", "device", ")", ")", "\n", "\n", "pad_x1", ",", "pad_y1", ",", "pad_x2", ",", "pad_y2", "=", "pad", ".", "ceil", "(", ")", ".", "to", "(", "torch", ".", "int32", ")", "\n", "\n", "return", "pad_x1", ",", "pad_x2", ",", "pad_y1", ",", "pad_y2", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.try_sample_affine_and_pad": [[324, 337], ["non_leaking.get_padding", "torch.nn.functional.pad", "torch.inverse", "non_leaking.sample_affine"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.get_padding", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.sample_affine"], ["", "def", "try_sample_affine_and_pad", "(", "img", ",", "p", ",", "kernel_size", ",", "G", "=", "None", ")", ":", "\n", "    ", "batch", ",", "_", ",", "height", ",", "width", "=", "img", ".", "shape", "\n", "\n", "G_try", "=", "G", "\n", "\n", "if", "G", "is", "None", ":", "\n", "        ", "G_try", "=", "torch", ".", "inverse", "(", "sample_affine", "(", "p", ",", "batch", ",", "height", ",", "width", ")", ")", "\n", "\n", "", "pad_x1", ",", "pad_x2", ",", "pad_y1", ",", "pad_y2", "=", "get_padding", "(", "G_try", ",", "height", ",", "width", ",", "kernel_size", ")", "\n", "\n", "img_pad", "=", "F", ".", "pad", "(", "img", ",", "(", "pad_x1", ",", "pad_x2", ",", "pad_y1", ",", "pad_y2", ")", ",", "mode", "=", "\"reflect\"", ")", "\n", "\n", "return", "img_pad", ",", "G_try", ",", "(", "pad_x1", ",", "pad_x2", ",", "pad_y1", ",", "pad_y2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale_mat_single": [[380, 382], ["torch.tensor"], "function", ["None"], ["def", "scale_mat_single", "(", "s_x", ",", "s_y", ")", ":", "\n", "    ", "return", "torch", ".", "tensor", "(", "(", "(", "s_x", ",", "0", ",", "0", ")", ",", "(", "0", ",", "s_y", ",", "0", ")", ",", "(", "0", ",", "0", ",", "1", ")", ")", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.translate_mat_single": [[384, 386], ["torch.tensor"], "function", ["None"], ["", "def", "translate_mat_single", "(", "t_x", ",", "t_y", ")", ":", "\n", "    ", "return", "torch", ".", "tensor", "(", "(", "(", "1", ",", "0", ",", "t_x", ")", ",", "(", "0", ",", "1", ",", "t_y", ")", ",", "(", "0", ",", "0", ",", "1", ")", ")", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_apply_affine": [[388, 439], ["len", "torch.as_tensor().to", "torch.flip", "non_leaking.try_sample_affine_and_pad", "op.upfirdn2d", "op.upfirdn2d", "torch.nn.functional.affine_grid", "grid_sample", "op.upfirdn2d", "op.upfirdn2d", "non_leaking.translate_mat_single", "torch.as_tensor().to.unsqueeze", "torch.as_tensor().to.unsqueeze", "non_leaking.scale_mat_single", "non_leaking.translate_mat_single", "non_leaking.scale_mat_single", "G_inv[].to", "torch.flip.unsqueeze", "torch.flip.unsqueeze", "torch.as_tensor", "non_leaking.scale_mat_single", "non_leaking.translate_mat_single", "non_leaking.scale_mat_single"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.try_sample_affine_and_pad", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.affine_grid", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.translate_mat_single", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale_mat_single", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.translate_mat_single", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale_mat_single", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale_mat_single", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.translate_mat_single", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.scale_mat_single"], ["", "def", "random_apply_affine", "(", "img", ",", "p", ",", "G", "=", "None", ",", "antialiasing_kernel", "=", "SYM6", ")", ":", "\n", "    ", "kernel", "=", "antialiasing_kernel", "\n", "len_k", "=", "len", "(", "kernel", ")", "\n", "\n", "kernel", "=", "torch", ".", "as_tensor", "(", "kernel", ")", ".", "to", "(", "img", ")", "\n", "# kernel = torch.ger(kernel, kernel).to(img)", "\n", "kernel_flip", "=", "torch", ".", "flip", "(", "kernel", ",", "(", "0", ",", ")", ")", "\n", "\n", "img_pad", ",", "G", ",", "(", "pad_x1", ",", "pad_x2", ",", "pad_y1", ",", "pad_y2", ")", "=", "try_sample_affine_and_pad", "(", "\n", "img", ",", "p", ",", "len_k", ",", "G", "\n", ")", "\n", "\n", "G_inv", "=", "(", "\n", "translate_mat_single", "(", "(", "pad_x1", "-", "pad_x2", ")", ".", "item", "(", ")", "/", "2", ",", "(", "pad_y1", "-", "pad_y2", ")", ".", "item", "(", ")", "/", "2", ")", "\n", "@", "G", "\n", ")", "\n", "up_pad", "=", "(", "\n", "(", "len_k", "+", "2", "-", "1", ")", "//", "2", ",", "\n", "(", "len_k", "-", "2", ")", "//", "2", ",", "\n", "(", "len_k", "+", "2", "-", "1", ")", "//", "2", ",", "\n", "(", "len_k", "-", "2", ")", "//", "2", ",", "\n", ")", "\n", "img_2x", "=", "upfirdn2d", "(", "img_pad", ",", "kernel", ".", "unsqueeze", "(", "0", ")", ",", "up", "=", "(", "2", ",", "1", ")", ",", "pad", "=", "(", "*", "up_pad", "[", ":", "2", "]", ",", "0", ",", "0", ")", ")", "\n", "img_2x", "=", "upfirdn2d", "(", "img_2x", ",", "kernel", ".", "unsqueeze", "(", "1", ")", ",", "up", "=", "(", "1", ",", "2", ")", ",", "pad", "=", "(", "0", ",", "0", ",", "*", "up_pad", "[", "2", ":", "]", ")", ")", "\n", "G_inv", "=", "scale_mat_single", "(", "2", ",", "2", ")", "@", "G_inv", "@", "scale_mat_single", "(", "1", "/", "2", ",", "1", "/", "2", ")", "\n", "G_inv", "=", "translate_mat_single", "(", "-", "0.5", ",", "-", "0.5", ")", "@", "G_inv", "@", "translate_mat_single", "(", "0.5", ",", "0.5", ")", "\n", "batch_size", ",", "channel", ",", "height", ",", "width", "=", "img", ".", "shape", "\n", "pad_k", "=", "len_k", "//", "4", "\n", "shape", "=", "(", "batch_size", ",", "channel", ",", "(", "height", "+", "pad_k", "*", "2", ")", "*", "2", ",", "(", "width", "+", "pad_k", "*", "2", ")", "*", "2", ")", "\n", "G_inv", "=", "(", "\n", "scale_mat_single", "(", "2", "/", "img_2x", ".", "shape", "[", "3", "]", ",", "2", "/", "img_2x", ".", "shape", "[", "2", "]", ")", "\n", "@", "G_inv", "\n", "@", "scale_mat_single", "(", "1", "/", "(", "2", "/", "shape", "[", "3", "]", ")", ",", "1", "/", "(", "2", "/", "shape", "[", "2", "]", ")", ")", "\n", ")", "\n", "grid", "=", "F", ".", "affine_grid", "(", "G_inv", "[", ":", ",", ":", "2", ",", ":", "]", ".", "to", "(", "img_2x", ")", ",", "shape", ",", "align_corners", "=", "False", ")", "\n", "img_affine", "=", "grid_sample", "(", "img_2x", ",", "grid", ")", "\n", "d_p", "=", "-", "pad_k", "*", "2", "\n", "down_pad", "=", "(", "\n", "d_p", "+", "(", "len_k", "-", "2", "+", "1", ")", "//", "2", ",", "\n", "d_p", "+", "(", "len_k", "-", "2", ")", "//", "2", ",", "\n", "d_p", "+", "(", "len_k", "-", "2", "+", "1", ")", "//", "2", ",", "\n", "d_p", "+", "(", "len_k", "-", "2", ")", "//", "2", ",", "\n", ")", "\n", "img_down", "=", "upfirdn2d", "(", "\n", "img_affine", ",", "kernel_flip", ".", "unsqueeze", "(", "0", ")", ",", "down", "=", "(", "2", ",", "1", ")", ",", "pad", "=", "(", "*", "down_pad", "[", ":", "2", "]", ",", "0", ",", "0", ")", "\n", ")", "\n", "img_down", "=", "upfirdn2d", "(", "\n", "img_down", ",", "kernel_flip", ".", "unsqueeze", "(", "1", ")", ",", "down", "=", "(", "1", ",", "2", ")", ",", "pad", "=", "(", "0", ",", "0", ",", "*", "down_pad", "[", "2", ":", "]", ")", "\n", ")", "\n", "\n", "return", "img_down", ",", "G", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.apply_color": [[441, 450], ["img.permute.permute", "mat[].transpose().view", "mat[].view", "img.permute.permute", "mat[].transpose"], "function", ["None"], ["", "def", "apply_color", "(", "img", ",", "mat", ")", ":", "\n", "    ", "batch", "=", "img", ".", "shape", "[", "0", "]", "\n", "img", "=", "img", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "mat_mul", "=", "mat", "[", ":", ",", ":", "3", ",", ":", "3", "]", ".", "transpose", "(", "1", ",", "2", ")", ".", "view", "(", "batch", ",", "1", ",", "3", ",", "3", ")", "\n", "mat_add", "=", "mat", "[", ":", ",", ":", "3", ",", "3", "]", ".", "view", "(", "batch", ",", "1", ",", "1", ",", "3", ")", "\n", "img", "=", "img", "@", "mat_mul", "+", "mat_add", "\n", "img", "=", "img", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_apply_color": [[452, 459], ["non_leaking.apply_color", "non_leaking.sample_color", "sample_color.to"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.apply_color", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.sample_color"], ["", "def", "random_apply_color", "(", "img", ",", "p", ",", "C", "=", "None", ")", ":", "\n", "    ", "if", "C", "is", "None", ":", "\n", "        ", "C", "=", "sample_color", "(", "p", ",", "img", ".", "shape", "[", "0", "]", ")", "\n", "\n", "", "img", "=", "apply_color", "(", "img", ",", "C", ".", "to", "(", "img", ")", ")", "\n", "\n", "return", "img", ",", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.augment": [[461, 466], ["non_leaking.random_apply_affine", "non_leaking.random_apply_color"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_apply_affine", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.random_apply_color"], ["", "def", "augment", "(", "img", ",", "p", ",", "transform_matrix", "=", "(", "None", ",", "None", ")", ")", ":", "\n", "    ", "img", ",", "G", "=", "random_apply_affine", "(", "img", ",", "p", ",", "transform_matrix", "[", "0", "]", ")", "\n", "img", ",", "C", "=", "random_apply_color", "(", "img", ",", "p", ",", "transform_matrix", "[", "1", "]", ")", "\n", "\n", "return", "img", ",", "(", "G", ",", "C", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.generate.generate": [[10, 28], ["torch.no_grad", "g_ema.eval", "torch.randn", "tqdm.tqdm", "range", "g_ema", "range", "math.sin", "math.cos", "torchvision.utils.save_image", "sample[].unsqueeze", "str().zfill", "str().zfill", "str", "str"], "function", ["None"], ["def", "generate", "(", "args", ",", "g_ema", ",", "device", ",", "mean_latent", ")", ":", "\n", "    ", "radius", "=", "32", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "g_ema", ".", "eval", "(", ")", "\n", "sample_z", "=", "torch", ".", "randn", "(", "args", ".", "sample", ",", "args", ".", "latent", ",", "device", "=", "device", ")", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "args", ".", "pics", ")", ")", ":", "\n", "            ", "dh", "=", "math", ".", "sin", "(", "2", "*", "math", ".", "pi", "*", "(", "i", "/", "args", ".", "pics", ")", ")", "*", "radius", "\n", "dw", "=", "math", ".", "cos", "(", "2", "*", "math", ".", "pi", "*", "(", "i", "/", "args", ".", "pics", ")", ")", "*", "radius", "\n", "sample", ",", "_", "=", "g_ema", "(", "\n", "[", "sample_z", "]", ",", "truncation", "=", "args", ".", "truncation", ",", "truncation_latent", "=", "mean_latent", ",", "shift_h", "=", "dh", ",", "shift_w", "=", "dw", ")", "\n", "\n", "for", "j", "in", "range", "(", "args", ".", "sample", ")", ":", "\n", "                ", "utils", ".", "save_image", "(", "\n", "sample", "[", "j", "]", ".", "unsqueeze", "(", "0", ")", ",", "\n", "f\"generate/{args.name}/{str(j).zfill(3)}_{str(i).zfill(4)}.png\"", ",", "\n", "nrow", "=", "1", ",", "\n", "normalize", "=", "True", ",", "\n", "range", "=", "(", "-", "1", ",", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_rank": [[9, 17], ["torch.distributed.get_rank", "torch.distributed.is_available", "torch.distributed.is_initialized"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_rank"], ["def", "get_rank", "(", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "0", "\n", "\n", "", "if", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "0", "\n", "\n", "", "return", "dist", ".", "get_rank", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.synchronize": [[19, 32], ["torch.distributed.get_world_size", "torch.distributed.barrier", "torch.distributed.is_available", "torch.distributed.is_initialized"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_world_size"], ["", "def", "synchronize", "(", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "\n", "\n", "", "if", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "\n", "\n", "", "world_size", "=", "dist", ".", "get_world_size", "(", ")", "\n", "\n", "if", "world_size", "==", "1", ":", "\n", "        ", "return", "\n", "\n", "", "dist", ".", "barrier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_world_size": [[34, 42], ["torch.distributed.get_world_size", "torch.distributed.is_available", "torch.distributed.is_initialized"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_world_size"], ["", "def", "get_world_size", "(", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "1", "\n", "\n", "", "if", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "1", "\n", "\n", "", "return", "dist", ".", "get_world_size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.reduce_sum": [[44, 55], ["tensor.clone.clone", "torch.distributed.all_reduce", "torch.distributed.is_available", "torch.distributed.is_initialized"], "function", ["None"], ["", "def", "reduce_sum", "(", "tensor", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "tensor", "\n", "\n", "", "if", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "tensor", "\n", "\n", "", "tensor", "=", "tensor", ".", "clone", "(", ")", "\n", "dist", ".", "all_reduce", "(", "tensor", ",", "op", "=", "dist", ".", "ReduceOp", ".", "SUM", ")", "\n", "\n", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.gather_grad": [[57, 67], ["distributed.get_world_size", "torch.distributed.all_reduce", "param.grad.data.div_"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_world_size"], ["", "def", "gather_grad", "(", "params", ")", ":", "\n", "    ", "world_size", "=", "get_world_size", "(", ")", "\n", "\n", "if", "world_size", "==", "1", ":", "\n", "        ", "return", "\n", "\n", "", "for", "param", "in", "params", ":", "\n", "        ", "if", "param", ".", "grad", "is", "not", "None", ":", "\n", "            ", "dist", ".", "all_reduce", "(", "param", ".", "grad", ".", "data", ",", "op", "=", "dist", ".", "ReduceOp", ".", "SUM", ")", "\n", "param", ".", "grad", ".", "data", ".", "div_", "(", "world_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.all_gather": [[69, 102], ["distributed.get_world_size", "pickle.dumps", "torch.ByteStorage.from_buffer", "torch.ByteTensor().to", "torch.IntTensor().to", "torch.distributed.all_gather", "max", "torch.distributed.all_gather", "zip", "torch.IntTensor().to", "int", "tensor_list.append", "torch.ByteTensor().to", "torch.cat", "data_list.append", "torch.ByteTensor", "torch.IntTensor", "range", "size.item", "torch.ByteTensor().to", "torch.cat.cpu().numpy().tobytes", "pickle.loads", "torch.IntTensor", "torch.ByteTensor", "torch.cat.numel", "torch.ByteTensor", "torch.cat.cpu().numpy", "torch.cat.cpu"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_world_size", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.all_gather", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.all_gather"], ["", "", "", "def", "all_gather", "(", "data", ")", ":", "\n", "    ", "world_size", "=", "get_world_size", "(", ")", "\n", "\n", "if", "world_size", "==", "1", ":", "\n", "        ", "return", "[", "data", "]", "\n", "\n", "", "buffer", "=", "pickle", ".", "dumps", "(", "data", ")", "\n", "storage", "=", "torch", ".", "ByteStorage", ".", "from_buffer", "(", "buffer", ")", "\n", "tensor", "=", "torch", ".", "ByteTensor", "(", "storage", ")", ".", "to", "(", "'cuda'", ")", "\n", "\n", "local_size", "=", "torch", ".", "IntTensor", "(", "[", "tensor", ".", "numel", "(", ")", "]", ")", ".", "to", "(", "'cuda'", ")", "\n", "size_list", "=", "[", "torch", ".", "IntTensor", "(", "[", "0", "]", ")", ".", "to", "(", "'cuda'", ")", "for", "_", "in", "range", "(", "world_size", ")", "]", "\n", "dist", ".", "all_gather", "(", "size_list", ",", "local_size", ")", "\n", "size_list", "=", "[", "int", "(", "size", ".", "item", "(", ")", ")", "for", "size", "in", "size_list", "]", "\n", "max_size", "=", "max", "(", "size_list", ")", "\n", "\n", "tensor_list", "=", "[", "]", "\n", "for", "_", "in", "size_list", ":", "\n", "        ", "tensor_list", ".", "append", "(", "torch", ".", "ByteTensor", "(", "size", "=", "(", "max_size", ",", ")", ")", ".", "to", "(", "'cuda'", ")", ")", "\n", "\n", "", "if", "local_size", "!=", "max_size", ":", "\n", "        ", "padding", "=", "torch", ".", "ByteTensor", "(", "size", "=", "(", "max_size", "-", "local_size", ",", ")", ")", ".", "to", "(", "'cuda'", ")", "\n", "tensor", "=", "torch", ".", "cat", "(", "(", "tensor", ",", "padding", ")", ",", "0", ")", "\n", "\n", "", "dist", ".", "all_gather", "(", "tensor_list", ",", "tensor", ")", "\n", "\n", "data_list", "=", "[", "]", "\n", "\n", "for", "size", ",", "tensor", "in", "zip", "(", "size_list", ",", "tensor_list", ")", ":", "\n", "        ", "buffer", "=", "tensor", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tobytes", "(", ")", "[", ":", "size", "]", "\n", "data_list", ".", "append", "(", "pickle", ".", "loads", "(", "buffer", ")", ")", "\n", "\n", "", "return", "data_list", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.reduce_loss_dict": [[104, 127], ["distributed.get_world_size", "torch.no_grad", "sorted", "torch.stack", "torch.distributed.reduce", "loss_dict.keys", "keys.append", "torch.stack.append", "torch.distributed.get_rank", "zip"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_world_size", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_rank"], ["", "def", "reduce_loss_dict", "(", "loss_dict", ")", ":", "\n", "    ", "world_size", "=", "get_world_size", "(", ")", "\n", "\n", "if", "world_size", "<", "2", ":", "\n", "        ", "return", "loss_dict", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "keys", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "\n", "for", "k", "in", "sorted", "(", "loss_dict", ".", "keys", "(", ")", ")", ":", "\n", "            ", "keys", ".", "append", "(", "k", ")", "\n", "losses", ".", "append", "(", "loss_dict", "[", "k", "]", ")", "\n", "\n", "", "losses", "=", "torch", ".", "stack", "(", "losses", ",", "0", ")", "\n", "dist", ".", "reduce", "(", "losses", ",", "dst", "=", "0", ")", "\n", "\n", "if", "dist", ".", "get_rank", "(", ")", "==", "0", ":", "\n", "            ", "losses", "/=", "world_size", "\n", "\n", "", "reduced_losses", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "zip", "(", "keys", ",", "losses", ")", "}", "\n", "\n", "", "return", "reduced_losses", "\n", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.InceptionV3.__init__": [[31, 128], ["torch.Module.__init__", "sorted", "max", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "models.inception_v3.InceptionV3.blocks.append", "models.inception_v3.InceptionV3.parameters", "inception.fid_inception_v3", "torchvision.models.inception_v3", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "models.inception_v3.InceptionV3.blocks.append", "models.inception_v3.InceptionV3.blocks.append", "models.inception_v3.InceptionV3.blocks.append", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.fid_inception_v3"], ["def", "__init__", "(", "self", ",", "\n", "output_blocks", "=", "[", "DEFAULT_BLOCK_INDEX", "]", ",", "\n", "resize_input", "=", "True", ",", "\n", "normalize_input", "=", "True", ",", "\n", "requires_grad", "=", "False", ",", "\n", "use_fid_inception", "=", "True", ")", ":", "\n", "        ", "\"\"\"Build pretrained InceptionV3\n\n        Parameters\n        ----------\n        output_blocks : list of int\n            Indices of blocks to return features of. Possible values are:\n                - 0: corresponds to output of first max pooling\n                - 1: corresponds to output of second max pooling\n                - 2: corresponds to output which is fed to aux classifier\n                - 3: corresponds to output of final average pooling\n        resize_input : bool\n            If true, bilinearly resizes input to width and height 299 before\n            feeding input to model. As the network without fully connected\n            layers is fully convolutional, it should be able to handle inputs\n            of arbitrary size, so resizing might not be strictly needed\n        normalize_input : bool\n            If true, scales the input from range (0, 1) to the range the\n            pretrained Inception network expects, namely (-1, 1)\n        requires_grad : bool\n            If true, parameters of the model require gradients. Possibly useful\n            for finetuning the network\n        use_fid_inception : bool\n            If true, uses the pretrained Inception model used in Tensorflow's\n            FID implementation. If false, uses the pretrained Inception model\n            available in torchvision. The FID Inception model has different\n            weights and a slightly different structure from torchvision's\n            Inception model. If you want to compute FID scores, you are\n            strongly advised to set this parameter to true to get comparable\n            results.\n        \"\"\"", "\n", "super", "(", "InceptionV3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "resize_input", "=", "resize_input", "\n", "self", ".", "normalize_input", "=", "normalize_input", "\n", "self", ".", "output_blocks", "=", "sorted", "(", "output_blocks", ")", "\n", "self", ".", "last_needed_block", "=", "max", "(", "output_blocks", ")", "\n", "\n", "assert", "self", ".", "last_needed_block", "<=", "3", ",", "'Last possible output block index is 3'", "\n", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "if", "use_fid_inception", ":", "\n", "            ", "inception", "=", "fid_inception_v3", "(", ")", "\n", "", "else", ":", "\n", "            ", "inception", "=", "models", ".", "inception_v3", "(", "pretrained", "=", "True", ")", "\n", "\n", "# Block 0: input to maxpool1", "\n", "", "block0", "=", "[", "\n", "inception", ".", "Conv2d_1a_3x3", ",", "\n", "inception", ".", "Conv2d_2a_3x3", ",", "\n", "inception", ".", "Conv2d_2b_3x3", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block0", ")", ")", "\n", "\n", "# Block 1: maxpool1 to maxpool2", "\n", "if", "self", ".", "last_needed_block", ">=", "1", ":", "\n", "            ", "block1", "=", "[", "\n", "inception", ".", "Conv2d_3b_1x1", ",", "\n", "inception", ".", "Conv2d_4a_3x3", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block1", ")", ")", "\n", "\n", "# Block 2: maxpool2 to aux classifier", "\n", "", "if", "self", ".", "last_needed_block", ">=", "2", ":", "\n", "            ", "block2", "=", "[", "\n", "inception", ".", "Mixed_5b", ",", "\n", "inception", ".", "Mixed_5c", ",", "\n", "inception", ".", "Mixed_5d", ",", "\n", "inception", ".", "Mixed_6a", ",", "\n", "inception", ".", "Mixed_6b", ",", "\n", "inception", ".", "Mixed_6c", ",", "\n", "inception", ".", "Mixed_6d", ",", "\n", "inception", ".", "Mixed_6e", ",", "\n", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block2", ")", ")", "\n", "\n", "# Block 3: aux classifier to final avgpool", "\n", "", "if", "self", ".", "last_needed_block", ">=", "3", ":", "\n", "            ", "block3", "=", "[", "\n", "inception", ".", "Mixed_7a", ",", "\n", "inception", ".", "Mixed_7b", ",", "\n", "inception", ".", "Mixed_7c", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "(", "1", ",", "1", ")", ")", "\n", "]", "\n", "self", ".", "blocks", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "block3", ")", ")", "\n", "\n", "", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "requires_grad", "=", "requires_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.InceptionV3.forward": [[129, 164], ["enumerate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "block", "outp.append"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "\"\"\"Get Inception feature maps\n\n        Parameters\n        ----------\n        inp : torch.autograd.Variable\n            Input tensor of shape Bx3xHxW. Values are expected to be in\n            range (0, 1)\n\n        Returns\n        -------\n        List of torch.autograd.Variable, corresponding to the selected output\n        block, sorted ascending by index\n        \"\"\"", "\n", "outp", "=", "[", "]", "\n", "x", "=", "inp", "\n", "\n", "if", "self", ".", "resize_input", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "\n", "size", "=", "(", "299", ",", "299", ")", ",", "\n", "mode", "=", "'bilinear'", ",", "\n", "align_corners", "=", "False", ")", "\n", "\n", "", "if", "self", ".", "normalize_input", ":", "\n", "            ", "x", "=", "2", "*", "x", "-", "1", "# Scale from range (0, 1) to range (-1, 1)", "\n", "\n", "", "for", "idx", ",", "block", "in", "enumerate", "(", "self", ".", "blocks", ")", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "if", "idx", "in", "self", ".", "output_blocks", ":", "\n", "                ", "outp", ".", "append", "(", "x", ")", "\n", "\n", "", "if", "idx", "==", "self", ".", "last_needed_block", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "outp", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.FIDInceptionA.__init__": [[195, 197], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "pool_features", ")", ":", "\n", "        ", "super", "(", "FIDInceptionA", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "pool_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.FIDInceptionA.forward": [[198, 216], ["inception.FIDInceptionA.branch1x1", "inception.FIDInceptionA.branch5x5_1", "inception.FIDInceptionA.branch5x5_2", "inception.FIDInceptionA.branch3x3dbl_1", "inception.FIDInceptionA.branch3x3dbl_2", "inception.FIDInceptionA.branch3x3dbl_3", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "inception.FIDInceptionA.branch_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch5x5", "=", "self", ".", "branch5x5_1", "(", "x", ")", "\n", "branch5x5", "=", "self", ".", "branch5x5_2", "(", "branch5x5", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_3", "(", "branch3x3dbl", ")", "\n", "\n", "# Patch: Tensorflow's average pool does not use the padded zero's in", "\n", "# its average calculation", "\n", "branch_pool", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "count_include_pad", "=", "False", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch5x5", ",", "branch3x3dbl", ",", "branch_pool", "]", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.FIDInceptionC.__init__": [[220, 222], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "channels_7x7", ")", ":", "\n", "        ", "super", "(", "FIDInceptionC", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "channels_7x7", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.FIDInceptionC.forward": [[223, 244], ["inception.FIDInceptionC.branch1x1", "inception.FIDInceptionC.branch7x7_1", "inception.FIDInceptionC.branch7x7_2", "inception.FIDInceptionC.branch7x7_3", "inception.FIDInceptionC.branch7x7dbl_1", "inception.FIDInceptionC.branch7x7dbl_2", "inception.FIDInceptionC.branch7x7dbl_3", "inception.FIDInceptionC.branch7x7dbl_4", "inception.FIDInceptionC.branch7x7dbl_5", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "inception.FIDInceptionC.branch_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch7x7", "=", "self", ".", "branch7x7_1", "(", "x", ")", "\n", "branch7x7", "=", "self", ".", "branch7x7_2", "(", "branch7x7", ")", "\n", "branch7x7", "=", "self", ".", "branch7x7_3", "(", "branch7x7", ")", "\n", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_1", "(", "x", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_2", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_3", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_4", "(", "branch7x7dbl", ")", "\n", "branch7x7dbl", "=", "self", ".", "branch7x7dbl_5", "(", "branch7x7dbl", ")", "\n", "\n", "# Patch: Tensorflow's average pool does not use the padded zero's in", "\n", "# its average calculation", "\n", "branch_pool", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "count_include_pad", "=", "False", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch7x7", ",", "branch7x7dbl", ",", "branch_pool", "]", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.FIDInceptionE_1.__init__": [[248, 250], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", "FIDInceptionE_1", ",", "self", ")", ".", "__init__", "(", "in_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.FIDInceptionE_1.forward": [[251, 277], ["inception.FIDInceptionE_1.branch1x1", "inception.FIDInceptionE_1.branch3x3_1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inception.FIDInceptionE_1.branch3x3dbl_1", "inception.FIDInceptionE_1.branch3x3dbl_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "inception.FIDInceptionE_1.branch_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inception.FIDInceptionE_1.branch3x3_2a", "inception.FIDInceptionE_1.branch3x3_2b", "inception.FIDInceptionE_1.branch3x3dbl_3a", "inception.FIDInceptionE_1.branch3x3dbl_3b"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch3x3", "=", "self", ".", "branch3x3_1", "(", "x", ")", "\n", "branch3x3", "=", "[", "\n", "self", ".", "branch3x3_2a", "(", "branch3x3", ")", ",", "\n", "self", ".", "branch3x3_2b", "(", "branch3x3", ")", ",", "\n", "]", "\n", "branch3x3", "=", "torch", ".", "cat", "(", "branch3x3", ",", "1", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "[", "\n", "self", ".", "branch3x3dbl_3a", "(", "branch3x3dbl", ")", ",", "\n", "self", ".", "branch3x3dbl_3b", "(", "branch3x3dbl", ")", ",", "\n", "]", "\n", "branch3x3dbl", "=", "torch", ".", "cat", "(", "branch3x3dbl", ",", "1", ")", "\n", "\n", "# Patch: Tensorflow's average pool does not use the padded zero's in", "\n", "# its average calculation", "\n", "branch_pool", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "count_include_pad", "=", "False", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch3x3", ",", "branch3x3dbl", ",", "branch_pool", "]", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.FIDInceptionE_2.__init__": [[281, 283], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", "FIDInceptionE_2", ",", "self", ")", ".", "__init__", "(", "in_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.FIDInceptionE_2.forward": [[284, 311], ["inception.FIDInceptionE_2.branch1x1", "inception.FIDInceptionE_2.branch3x3_1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inception.FIDInceptionE_2.branch3x3dbl_1", "inception.FIDInceptionE_2.branch3x3dbl_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "inception.FIDInceptionE_2.branch_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inception.FIDInceptionE_2.branch3x3_2a", "inception.FIDInceptionE_2.branch3x3_2b", "inception.FIDInceptionE_2.branch3x3dbl_3a", "inception.FIDInceptionE_2.branch3x3dbl_3b"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "branch3x3", "=", "self", ".", "branch3x3_1", "(", "x", ")", "\n", "branch3x3", "=", "[", "\n", "self", ".", "branch3x3_2a", "(", "branch3x3", ")", ",", "\n", "self", ".", "branch3x3_2b", "(", "branch3x3", ")", ",", "\n", "]", "\n", "branch3x3", "=", "torch", ".", "cat", "(", "branch3x3", ",", "1", ")", "\n", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_1", "(", "x", ")", "\n", "branch3x3dbl", "=", "self", ".", "branch3x3dbl_2", "(", "branch3x3dbl", ")", "\n", "branch3x3dbl", "=", "[", "\n", "self", ".", "branch3x3dbl_3a", "(", "branch3x3dbl", ")", ",", "\n", "self", ".", "branch3x3dbl_3b", "(", "branch3x3dbl", ")", ",", "\n", "]", "\n", "branch3x3dbl", "=", "torch", ".", "cat", "(", "branch3x3dbl", ",", "1", ")", "\n", "\n", "# Patch: The FID Inception model uses max pooling instead of average", "\n", "# pooling. This is likely an error in this specific Inception", "\n", "# implementation, as other Inception models use average pooling here", "\n", "# (which matches the description in the paper).", "\n", "branch_pool", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "branch_pool", "=", "self", ".", "branch_pool", "(", "branch_pool", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch3x3", ",", "branch3x3dbl", ",", "branch_pool", "]", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.inception.fid_inception_v3": [[166, 191], ["torchvision.models.inception_v3", "inception.FIDInceptionA", "inception.FIDInceptionA", "inception.FIDInceptionA", "inception.FIDInceptionC", "inception.FIDInceptionC", "inception.FIDInceptionC", "inception.FIDInceptionC", "inception.FIDInceptionE_1", "inception.FIDInceptionE_2", "load_state_dict_from_url", "models.inception_v3.load_state_dict"], "function", ["None"], ["", "", "def", "fid_inception_v3", "(", ")", ":", "\n", "    ", "\"\"\"Build pretrained Inception model for FID computation\n\n    The Inception model for FID computation uses a different set of weights\n    and has a slightly different structure than torchvision's Inception.\n\n    This method first constructs torchvision's Inception and then patches the\n    necessary parts that are different in the FID Inception model.\n    \"\"\"", "\n", "inception", "=", "models", ".", "inception_v3", "(", "num_classes", "=", "1008", ",", "\n", "aux_logits", "=", "False", ",", "\n", "pretrained", "=", "False", ")", "\n", "inception", ".", "Mixed_5b", "=", "FIDInceptionA", "(", "192", ",", "pool_features", "=", "32", ")", "\n", "inception", ".", "Mixed_5c", "=", "FIDInceptionA", "(", "256", ",", "pool_features", "=", "64", ")", "\n", "inception", ".", "Mixed_5d", "=", "FIDInceptionA", "(", "288", ",", "pool_features", "=", "64", ")", "\n", "inception", ".", "Mixed_6b", "=", "FIDInceptionC", "(", "768", ",", "channels_7x7", "=", "128", ")", "\n", "inception", ".", "Mixed_6c", "=", "FIDInceptionC", "(", "768", ",", "channels_7x7", "=", "160", ")", "\n", "inception", ".", "Mixed_6d", "=", "FIDInceptionC", "(", "768", ",", "channels_7x7", "=", "160", ")", "\n", "inception", ".", "Mixed_6e", "=", "FIDInceptionC", "(", "768", ",", "channels_7x7", "=", "192", ")", "\n", "inception", ".", "Mixed_7b", "=", "FIDInceptionE_1", "(", "1280", ")", "\n", "inception", ".", "Mixed_7c", "=", "FIDInceptionE_2", "(", "2048", ")", "\n", "\n", "state_dict", "=", "load_state_dict_from_url", "(", "FID_WEIGHTS_URL", ",", "progress", "=", "True", ")", "\n", "inception", ".", "load_state_dict", "(", "state_dict", ")", "\n", "return", "inception", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.HaarTransform.__init__": [[28, 37], ["torch.nn.Module.__init__", "swagan.get_haar_wavelet", "swagan.HaarTransform.register_buffer", "swagan.HaarTransform.register_buffer", "swagan.HaarTransform.register_buffer", "swagan.HaarTransform.register_buffer"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.get_haar_wavelet"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "ll", ",", "lh", ",", "hl", ",", "hh", "=", "get_haar_wavelet", "(", "in_channels", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'ll'", ",", "ll", ")", "\n", "self", ".", "register_buffer", "(", "'lh'", ",", "lh", ")", "\n", "self", ".", "register_buffer", "(", "'hl'", ",", "hl", ")", "\n", "self", ".", "register_buffer", "(", "'hh'", ",", "hh", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.HaarTransform.forward": [[38, 45], ["op.upfirdn2d", "op.upfirdn2d", "op.upfirdn2d", "op.upfirdn2d", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "ll", "=", "upfirdn2d", "(", "input", ",", "self", ".", "ll", ",", "down", "=", "2", ")", "\n", "lh", "=", "upfirdn2d", "(", "input", ",", "self", ".", "lh", ",", "down", "=", "2", ")", "\n", "hl", "=", "upfirdn2d", "(", "input", ",", "self", ".", "hl", ",", "down", "=", "2", ")", "\n", "hh", "=", "upfirdn2d", "(", "input", ",", "self", ".", "hh", ",", "down", "=", "2", ")", "\n", "\n", "return", "torch", ".", "cat", "(", "(", "ll", ",", "lh", ",", "hl", ",", "hh", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.InverseHaarTransform.__init__": [[47, 56], ["torch.nn.Module.__init__", "swagan.get_haar_wavelet", "swagan.InverseHaarTransform.register_buffer", "swagan.InverseHaarTransform.register_buffer", "swagan.InverseHaarTransform.register_buffer", "swagan.InverseHaarTransform.register_buffer"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.get_haar_wavelet"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "ll", ",", "lh", ",", "hl", ",", "hh", "=", "get_haar_wavelet", "(", "in_channels", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'ll'", ",", "ll", ")", "\n", "self", ".", "register_buffer", "(", "'lh'", ",", "-", "lh", ")", "\n", "self", ".", "register_buffer", "(", "'hl'", ",", "-", "hl", ")", "\n", "self", ".", "register_buffer", "(", "'hh'", ",", "hh", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.InverseHaarTransform.forward": [[57, 65], ["input.chunk", "op.upfirdn2d", "op.upfirdn2d", "op.upfirdn2d", "op.upfirdn2d"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "ll", ",", "lh", ",", "hl", ",", "hh", "=", "input", ".", "chunk", "(", "4", ",", "1", ")", "\n", "ll", "=", "upfirdn2d", "(", "ll", ",", "self", ".", "ll", ",", "up", "=", "2", ",", "pad", "=", "(", "1", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "lh", "=", "upfirdn2d", "(", "lh", ",", "self", ".", "lh", ",", "up", "=", "2", ",", "pad", "=", "(", "1", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "hl", "=", "upfirdn2d", "(", "hl", ",", "self", ".", "hl", ",", "up", "=", "2", ",", "pad", "=", "(", "1", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "hh", "=", "upfirdn2d", "(", "hh", ",", "self", ".", "hh", ",", "up", "=", "2", ",", "pad", "=", "(", "1", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n", "return", "ll", "+", "lh", "+", "hl", "+", "hh", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.ToRGB.__init__": [[68, 78], ["torch.nn.Module.__init__", "model.ModulatedConv2d", "torch.nn.Parameter", "swagan.InverseHaarTransform", "model.Upsample", "swagan.HaarTransform", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "style_dim", ",", "upsample", "=", "True", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "upsample", ":", "\n", "            ", "self", ".", "iwt", "=", "InverseHaarTransform", "(", "3", ")", "\n", "self", ".", "upsample", "=", "Upsample", "(", "blur_kernel", ")", "\n", "self", ".", "dwt", "=", "HaarTransform", "(", "3", ")", "\n", "\n", "", "self", ".", "conv", "=", "ModulatedConv2d", "(", "in_channel", ",", "3", "*", "4", ",", "1", ",", "style_dim", ",", "demodulate", "=", "False", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "3", "*", "4", ",", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.ToRGB.forward": [[79, 91], ["swagan.ToRGB.conv", "swagan.ToRGB.iwt", "swagan.ToRGB.upsample", "swagan.ToRGB.dwt"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.upsample"], ["", "def", "forward", "(", "self", ",", "input", ",", "style", ",", "skip", "=", "None", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "input", ",", "style", ")", "\n", "out", "=", "out", "+", "self", ".", "bias", "\n", "\n", "if", "skip", "is", "not", "None", ":", "\n", "            ", "skip", "=", "self", ".", "iwt", "(", "skip", ")", "\n", "skip", "=", "self", ".", "upsample", "(", "skip", ")", "\n", "skip", "=", "self", ".", "dwt", "(", "skip", ")", "\n", "\n", "out", "=", "out", "+", "skip", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.Generator.__init__": [[94, 180], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "model.ConstantInput", "model.StyledConv", "swagan.ToRGB", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Module", "range", "range", "swagan.InverseHaarTransform", "model.PixelNorm", "layers.append", "int", "swagan.Generator.noises.register_buffer", "swagan.Generator.convs.append", "swagan.Generator.convs.append", "swagan.Generator.to_rgbs.append", "model.EqualLinear", "math.log", "torch.randn", "model.StyledConv", "model.StyledConv", "swagan.ToRGB"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "size", ",", "\n", "style_dim", ",", "\n", "n_mlp", ",", "\n", "channel_multiplier", "=", "2", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", "lr_mlp", "=", "0.01", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "size", "=", "size", "\n", "\n", "self", ".", "style_dim", "=", "style_dim", "\n", "\n", "layers", "=", "[", "PixelNorm", "(", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_mlp", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "EqualLinear", "(", "\n", "style_dim", ",", "style_dim", ",", "lr_mul", "=", "lr_mlp", ",", "activation", "=", "\"fused_lrelu\"", "\n", ")", "\n", ")", "\n", "\n", "", "self", ".", "style", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "self", ".", "channels", "=", "{", "\n", "4", ":", "512", ",", "\n", "8", ":", "512", ",", "\n", "16", ":", "512", ",", "\n", "32", ":", "512", ",", "\n", "64", ":", "256", "*", "channel_multiplier", ",", "\n", "128", ":", "128", "*", "channel_multiplier", ",", "\n", "256", ":", "64", "*", "channel_multiplier", ",", "\n", "512", ":", "32", "*", "channel_multiplier", ",", "\n", "1024", ":", "16", "*", "channel_multiplier", ",", "\n", "}", "\n", "\n", "self", ".", "input", "=", "ConstantInput", "(", "self", ".", "channels", "[", "4", "]", ")", "\n", "self", ".", "conv1", "=", "StyledConv", "(", "\n", "self", ".", "channels", "[", "4", "]", ",", "self", ".", "channels", "[", "4", "]", ",", "3", ",", "style_dim", ",", "blur_kernel", "=", "blur_kernel", "\n", ")", "\n", "self", ".", "to_rgb1", "=", "ToRGB", "(", "self", ".", "channels", "[", "4", "]", ",", "style_dim", ",", "upsample", "=", "False", ")", "\n", "\n", "self", ".", "log_size", "=", "int", "(", "math", ".", "log", "(", "size", ",", "2", ")", ")", "-", "1", "\n", "self", ".", "num_layers", "=", "(", "self", ".", "log_size", "-", "2", ")", "*", "2", "+", "1", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "upsamples", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "to_rgbs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "noises", "=", "nn", ".", "Module", "(", ")", "\n", "\n", "in_channel", "=", "self", ".", "channels", "[", "4", "]", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "res", "=", "(", "layer_idx", "+", "5", ")", "//", "2", "\n", "shape", "=", "[", "1", ",", "1", ",", "2", "**", "res", ",", "2", "**", "res", "]", "\n", "self", ".", "noises", ".", "register_buffer", "(", "f\"noise_{layer_idx}\"", ",", "torch", ".", "randn", "(", "*", "shape", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "3", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "            ", "out_channel", "=", "self", ".", "channels", "[", "2", "**", "i", "]", "\n", "\n", "self", ".", "convs", ".", "append", "(", "\n", "StyledConv", "(", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "3", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "True", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", ")", "\n", ")", "\n", "\n", "self", ".", "convs", ".", "append", "(", "\n", "StyledConv", "(", "\n", "out_channel", ",", "out_channel", ",", "3", ",", "style_dim", ",", "blur_kernel", "=", "blur_kernel", "\n", ")", "\n", ")", "\n", "\n", "self", ".", "to_rgbs", ".", "append", "(", "ToRGB", "(", "out_channel", ",", "style_dim", ")", ")", "\n", "\n", "in_channel", "=", "out_channel", "\n", "\n", "", "self", ".", "iwt", "=", "InverseHaarTransform", "(", "3", ")", "\n", "\n", "self", ".", "n_latent", "=", "self", ".", "log_size", "*", "2", "-", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.Generator.make_noise": [[181, 191], ["range", "torch.randn", "range", "noises.append", "torch.randn"], "methods", ["None"], ["", "def", "make_noise", "(", "self", ")", ":", "\n", "        ", "device", "=", "self", ".", "input", ".", "input", ".", "device", "\n", "\n", "noises", "=", "[", "torch", ".", "randn", "(", "1", ",", "1", ",", "2", "**", "2", ",", "2", "**", "2", ",", "device", "=", "device", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "3", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "            ", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "                ", "noises", ".", "append", "(", "torch", ".", "randn", "(", "1", ",", "1", ",", "2", "**", "i", ",", "2", "**", "i", ",", "device", "=", "device", ")", ")", "\n", "\n", "", "", "return", "noises", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.Generator.mean_latent": [[192, 199], ["torch.randn", "swagan.Generator.style().mean", "swagan.Generator.style"], "methods", ["None"], ["", "def", "mean_latent", "(", "self", ",", "n_latent", ")", ":", "\n", "        ", "latent_in", "=", "torch", ".", "randn", "(", "\n", "n_latent", ",", "self", ".", "style_dim", ",", "device", "=", "self", ".", "input", ".", "input", ".", "device", "\n", ")", "\n", "latent", "=", "self", ".", "style", "(", "latent_in", ")", ".", "mean", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "latent", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.Generator.get_latent": [[200, 202], ["swagan.Generator.style"], "methods", ["None"], ["", "def", "get_latent", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "style", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.Generator.forward": [[203, 275], ["swagan.Generator.input", "swagan.Generator.conv1", "swagan.Generator.to_rgb1", "zip", "swagan.Generator.iwt", "len", "styles[].unsqueeze().repeat", "styles[].unsqueeze().repeat", "torch.cat", "conv1", "conv2", "to_rgb", "swagan.Generator.style", "style_t.append", "styles[].unsqueeze().repeat", "random.randint", "getattr", "styles[].unsqueeze", "styles[].unsqueeze", "range", "styles[].unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "\n", "self", ",", "\n", "styles", ",", "\n", "return_latents", "=", "False", ",", "\n", "inject_index", "=", "None", ",", "\n", "truncation", "=", "1", ",", "\n", "truncation_latent", "=", "None", ",", "\n", "input_is_latent", "=", "False", ",", "\n", "noise", "=", "None", ",", "\n", "randomize_noise", "=", "True", ",", "\n", ")", ":", "\n", "        ", "if", "not", "input_is_latent", ":", "\n", "            ", "styles", "=", "[", "self", ".", "style", "(", "s", ")", "for", "s", "in", "styles", "]", "\n", "\n", "", "if", "noise", "is", "None", ":", "\n", "            ", "if", "randomize_noise", ":", "\n", "                ", "noise", "=", "[", "None", "]", "*", "self", ".", "num_layers", "\n", "", "else", ":", "\n", "                ", "noise", "=", "[", "\n", "getattr", "(", "self", ".", "noises", ",", "f\"noise_{i}\"", ")", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", "\n", "]", "\n", "\n", "", "", "if", "truncation", "<", "1", ":", "\n", "            ", "style_t", "=", "[", "]", "\n", "\n", "for", "style", "in", "styles", ":", "\n", "                ", "style_t", ".", "append", "(", "\n", "truncation_latent", "+", "truncation", "*", "(", "style", "-", "truncation_latent", ")", "\n", ")", "\n", "\n", "", "styles", "=", "style_t", "\n", "\n", "", "if", "len", "(", "styles", ")", "<", "2", ":", "\n", "            ", "inject_index", "=", "self", ".", "n_latent", "\n", "\n", "if", "styles", "[", "0", "]", ".", "ndim", "<", "3", ":", "\n", "                ", "latent", "=", "styles", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "inject_index", ",", "1", ")", "\n", "\n", "", "else", ":", "\n", "                ", "latent", "=", "styles", "[", "0", "]", "\n", "\n", "", "", "else", ":", "\n", "            ", "if", "inject_index", "is", "None", ":", "\n", "                ", "inject_index", "=", "random", ".", "randint", "(", "1", ",", "self", ".", "n_latent", "-", "1", ")", "\n", "\n", "", "latent", "=", "styles", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "inject_index", ",", "1", ")", "\n", "latent2", "=", "styles", "[", "1", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "n_latent", "-", "inject_index", ",", "1", ")", "\n", "\n", "latent", "=", "torch", ".", "cat", "(", "[", "latent", ",", "latent2", "]", ",", "1", ")", "\n", "\n", "", "out", "=", "self", ".", "input", "(", "latent", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ",", "latent", "[", ":", ",", "0", "]", ",", "noise", "=", "noise", "[", "0", "]", ")", "\n", "\n", "skip", "=", "self", ".", "to_rgb1", "(", "out", ",", "latent", "[", ":", ",", "1", "]", ")", "\n", "\n", "i", "=", "1", "\n", "for", "conv1", ",", "conv2", ",", "noise1", ",", "noise2", ",", "to_rgb", "in", "zip", "(", "\n", "self", ".", "convs", "[", ":", ":", "2", "]", ",", "self", ".", "convs", "[", "1", ":", ":", "2", "]", ",", "noise", "[", "1", ":", ":", "2", "]", ",", "noise", "[", "2", ":", ":", "2", "]", ",", "self", ".", "to_rgbs", "\n", ")", ":", "\n", "            ", "out", "=", "conv1", "(", "out", ",", "latent", "[", ":", ",", "i", "]", ",", "noise", "=", "noise1", ")", "\n", "out", "=", "conv2", "(", "out", ",", "latent", "[", ":", ",", "i", "+", "1", "]", ",", "noise", "=", "noise2", ")", "\n", "skip", "=", "to_rgb", "(", "out", ",", "latent", "[", ":", ",", "i", "+", "2", "]", ",", "skip", ")", "\n", "\n", "i", "+=", "2", "\n", "\n", "", "image", "=", "self", ".", "iwt", "(", "skip", ")", "\n", "\n", "if", "return_latents", ":", "\n", "            ", "return", "image", ",", "latent", "\n", "\n", "", "else", ":", "\n", "            ", "return", "image", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.ConvBlock.__init__": [[278, 283], ["torch.nn.Module.__init__", "model.ConvLayer", "model.ConvLayer"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "ConvLayer", "(", "in_channel", ",", "in_channel", ",", "3", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "in_channel", ",", "out_channel", ",", "3", ",", "downsample", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.ConvBlock.forward": [[284, 289], ["swagan.ConvBlock.conv1", "swagan.ConvBlock.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "input", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.FromRGB.__init__": [[292, 303], ["torch.nn.Module.__init__", "model.ConvLayer", "swagan.InverseHaarTransform", "model.Downsample", "swagan.HaarTransform"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_channel", ",", "downsample", "=", "True", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "if", "downsample", ":", "\n", "            ", "self", ".", "iwt", "=", "InverseHaarTransform", "(", "3", ")", "\n", "self", ".", "downsample", "=", "Downsample", "(", "blur_kernel", ")", "\n", "self", ".", "dwt", "=", "HaarTransform", "(", "3", ")", "\n", "\n", "", "self", ".", "conv", "=", "ConvLayer", "(", "3", "*", "4", ",", "out_channel", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.FromRGB.forward": [[304, 316], ["swagan.FromRGB.conv", "swagan.FromRGB.iwt", "swagan.FromRGB.downsample", "swagan.FromRGB.dwt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "skip", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "downsample", ":", "\n", "            ", "input", "=", "self", ".", "iwt", "(", "input", ")", "\n", "input", "=", "self", ".", "downsample", "(", "input", ")", "\n", "input", "=", "self", ".", "dwt", "(", "input", ")", "\n", "\n", "", "out", "=", "self", ".", "conv", "(", "input", ")", "\n", "\n", "if", "skip", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", "+", "skip", "\n", "\n", "", "return", "input", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.Discriminator.__init__": [[319, 360], ["torch.nn.Module.__init__", "swagan.HaarTransform", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "swagan.Discriminator.from_rgbs.append", "model.ConvLayer", "torch.nn.Sequential", "int", "swagan.Discriminator.from_rgbs.append", "swagan.Discriminator.convs.append", "swagan.FromRGB", "model.EqualLinear", "model.EqualLinear", "math.log", "swagan.FromRGB", "swagan.ConvBlock"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "channel_multiplier", "=", "2", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "channels", "=", "{", "\n", "4", ":", "512", ",", "\n", "8", ":", "512", ",", "\n", "16", ":", "512", ",", "\n", "32", ":", "512", ",", "\n", "64", ":", "256", "*", "channel_multiplier", ",", "\n", "128", ":", "128", "*", "channel_multiplier", ",", "\n", "256", ":", "64", "*", "channel_multiplier", ",", "\n", "512", ":", "32", "*", "channel_multiplier", ",", "\n", "1024", ":", "16", "*", "channel_multiplier", ",", "\n", "}", "\n", "\n", "self", ".", "dwt", "=", "HaarTransform", "(", "3", ")", "\n", "\n", "self", ".", "from_rgbs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "log_size", "=", "int", "(", "math", ".", "log", "(", "size", ",", "2", ")", ")", "-", "1", "\n", "\n", "in_channel", "=", "channels", "[", "size", "]", "\n", "\n", "for", "i", "in", "range", "(", "log_size", ",", "2", ",", "-", "1", ")", ":", "\n", "            ", "out_channel", "=", "channels", "[", "2", "**", "(", "i", "-", "1", ")", "]", "\n", "\n", "self", ".", "from_rgbs", ".", "append", "(", "FromRGB", "(", "in_channel", ",", "downsample", "=", "i", "!=", "log_size", ")", ")", "\n", "self", ".", "convs", ".", "append", "(", "ConvBlock", "(", "in_channel", ",", "out_channel", ",", "blur_kernel", ")", ")", "\n", "\n", "in_channel", "=", "out_channel", "\n", "\n", "", "self", ".", "from_rgbs", ".", "append", "(", "FromRGB", "(", "channels", "[", "4", "]", ")", ")", "\n", "\n", "self", ".", "stddev_group", "=", "4", "\n", "self", ".", "stddev_feat", "=", "1", "\n", "\n", "self", ".", "final_conv", "=", "ConvLayer", "(", "in_channel", "+", "1", ",", "channels", "[", "4", "]", ",", "3", ")", "\n", "self", ".", "final_linear", "=", "nn", ".", "Sequential", "(", "\n", "EqualLinear", "(", "channels", "[", "4", "]", "*", "4", "*", "4", ",", "channels", "[", "4", "]", ",", "activation", "=", "\"fused_lrelu\"", ")", ",", "\n", "EqualLinear", "(", "channels", "[", "4", "]", ",", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.Discriminator.forward": [[362, 388], ["swagan.Discriminator.dwt", "zip", "min", "conv.view", "torch.sqrt", "stddev.repeat.repeat.mean().squeeze", "stddev.repeat.repeat.repeat", "torch.cat", "swagan.Discriminator.final_conv", "conv.view", "swagan.Discriminator.final_linear", "from_rgb", "conv", "stddev.repeat.repeat.var", "stddev.repeat.repeat.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "input", "=", "self", ".", "dwt", "(", "input", ")", "\n", "out", "=", "None", "\n", "\n", "for", "from_rgb", ",", "conv", "in", "zip", "(", "self", ".", "from_rgbs", ",", "self", ".", "convs", ")", ":", "\n", "            ", "input", ",", "out", "=", "from_rgb", "(", "input", ",", "out", ")", "\n", "out", "=", "conv", "(", "out", ")", "\n", "\n", "", "_", ",", "out", "=", "self", ".", "from_rgbs", "[", "-", "1", "]", "(", "input", ",", "out", ")", "\n", "\n", "batch", ",", "channel", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "group", "=", "min", "(", "batch", ",", "self", ".", "stddev_group", ")", "\n", "stddev", "=", "out", ".", "view", "(", "\n", "group", ",", "-", "1", ",", "self", ".", "stddev_feat", ",", "channel", "//", "self", ".", "stddev_feat", ",", "height", ",", "width", "\n", ")", "\n", "stddev", "=", "torch", ".", "sqrt", "(", "stddev", ".", "var", "(", "0", ",", "unbiased", "=", "False", ")", "+", "1e-8", ")", "\n", "stddev", "=", "stddev", ".", "mean", "(", "[", "2", ",", "3", ",", "4", "]", ",", "keepdims", "=", "True", ")", ".", "squeeze", "(", "2", ")", "\n", "stddev", "=", "stddev", ".", "repeat", "(", "group", ",", "1", ",", "height", ",", "width", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "stddev", "]", ",", "1", ")", "\n", "\n", "out", "=", "self", ".", "final_conv", "(", "out", ")", "\n", "\n", "out", "=", "out", ".", "view", "(", "batch", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "final_linear", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.swagan.get_haar_wavelet": [[14, 25], ["torch.ones", "torch.ones"], "function", ["None"], ["def", "get_haar_wavelet", "(", "in_channels", ")", ":", "\n", "    ", "haar_wav_l", "=", "1", "/", "(", "2", "**", "0.5", ")", "*", "torch", ".", "ones", "(", "1", ",", "2", ")", "\n", "haar_wav_h", "=", "1", "/", "(", "2", "**", "0.5", ")", "*", "torch", ".", "ones", "(", "1", ",", "2", ")", "\n", "haar_wav_h", "[", "0", ",", "0", "]", "=", "-", "1", "*", "haar_wav_h", "[", "0", ",", "0", "]", "\n", "\n", "haar_wav_ll", "=", "haar_wav_l", ".", "T", "*", "haar_wav_l", "\n", "haar_wav_lh", "=", "haar_wav_h", ".", "T", "*", "haar_wav_l", "\n", "haar_wav_hl", "=", "haar_wav_l", ".", "T", "*", "haar_wav_h", "\n", "haar_wav_hh", "=", "haar_wav_h", ".", "T", "*", "haar_wav_h", "\n", "\n", "return", "haar_wav_ll", ",", "haar_wav_lh", ",", "haar_wav_hl", ",", "haar_wav_hh", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.ppl.normalize": [[12, 14], ["torch.sqrt", "x.pow().sum", "x.pow"], "function", ["None"], ["def", "normalize", "(", "x", ")", ":", "\n", "    ", "return", "x", "/", "torch", ".", "sqrt", "(", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.ppl.slerp": [[16, 25], ["ppl.normalize", "ppl.normalize", "ppl.normalize", "ppl.normalize", "torch.acos", "torch.cos", "torch.sin"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.ppl.normalize", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.ppl.normalize", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.ppl.normalize", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.ppl.normalize"], ["", "def", "slerp", "(", "a", ",", "b", ",", "t", ")", ":", "\n", "    ", "a", "=", "normalize", "(", "a", ")", "\n", "b", "=", "normalize", "(", "b", ")", "\n", "d", "=", "(", "a", "*", "b", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "p", "=", "t", "*", "torch", ".", "acos", "(", "d", ")", "\n", "c", "=", "normalize", "(", "b", "-", "d", "*", "a", ")", "\n", "d", "=", "a", "*", "torch", ".", "cos", "(", "p", ")", "+", "c", "*", "torch", ".", "sin", "(", "p", ")", "\n", "\n", "return", "normalize", "(", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.ppl.lerp": [[27, 29], ["None"], "function", ["None"], ["", "def", "lerp", "(", "a", ",", "b", ",", "t", ")", ":", "\n", "    ", "return", "a", "+", "(", "b", "-", "a", ")", "*", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.data_sampler": [[34, 43], ["torch.utils.data.distributed.DistributedSampler", "torch.utils.data.RandomSampler", "torch.utils.data.SequentialSampler"], "function", ["None"], ["def", "data_sampler", "(", "dataset", ",", "shuffle", ",", "distributed", ")", ":", "\n", "    ", "if", "distributed", ":", "\n", "        ", "return", "data", ".", "distributed", ".", "DistributedSampler", "(", "dataset", ",", "shuffle", "=", "shuffle", ")", "\n", "\n", "", "if", "shuffle", ":", "\n", "        ", "return", "data", ".", "RandomSampler", "(", "dataset", ")", "\n", "\n", "", "else", ":", "\n", "        ", "return", "data", ".", "SequentialSampler", "(", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.requires_grad": [[45, 48], ["model.parameters"], "function", ["None"], ["", "", "def", "requires_grad", "(", "model", ",", "flag", "=", "True", ")", ":", "\n", "    ", "for", "p", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "p", ".", "requires_grad", "=", "flag", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.accumulate": [[50, 56], ["dict", "dict", "dict.keys", "model1.named_parameters", "model2.named_parameters", "par1[].data.mul_().add_", "par1[].data.mul_"], "function", ["None"], ["", "", "def", "accumulate", "(", "model1", ",", "model2", ",", "decay", "=", "0.999", ")", ":", "\n", "    ", "par1", "=", "dict", "(", "model1", ".", "named_parameters", "(", ")", ")", "\n", "par2", "=", "dict", "(", "model2", ".", "named_parameters", "(", ")", ")", "\n", "\n", "for", "k", "in", "par1", ".", "keys", "(", ")", ":", "\n", "        ", "par1", "[", "k", "]", ".", "data", ".", "mul_", "(", "decay", ")", ".", "add_", "(", "par2", "[", "k", "]", ".", "data", ",", "alpha", "=", "1", "-", "decay", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.sample_data": [[58, 62], ["None"], "function", ["None"], ["", "", "def", "sample_data", "(", "loader", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "for", "batch", "in", "loader", ":", "\n", "            ", "yield", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.d_logistic_loss": [[64, 69], ["torch.nn.functional.softplus", "torch.nn.functional.softplus", "F.softplus.mean", "F.softplus.mean"], "function", ["None"], ["", "", "", "def", "d_logistic_loss", "(", "real_pred", ",", "fake_pred", ")", ":", "\n", "    ", "real_loss", "=", "F", ".", "softplus", "(", "-", "real_pred", ")", "\n", "fake_loss", "=", "F", ".", "softplus", "(", "fake_pred", ")", "\n", "\n", "return", "real_loss", ".", "mean", "(", ")", "+", "fake_loss", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.d_r1_loss": [[71, 79], ["grad_real.pow().reshape().sum().mean", "op.conv2d_gradfix.no_weight_gradients", "torch.autograd.grad", "grad_real.pow().reshape().sum", "real_pred.sum", "grad_real.pow().reshape", "grad_real.pow"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.no_weight_gradients"], ["", "def", "d_r1_loss", "(", "real_pred", ",", "real_img", ")", ":", "\n", "    ", "with", "conv2d_gradfix", ".", "no_weight_gradients", "(", ")", ":", "\n", "        ", "grad_real", ",", "=", "autograd", ".", "grad", "(", "\n", "outputs", "=", "real_pred", ".", "sum", "(", ")", ",", "inputs", "=", "real_img", ",", "create_graph", "=", "True", "\n", ")", "\n", "", "grad_penalty", "=", "grad_real", ".", "pow", "(", "2", ")", ".", "reshape", "(", "grad_real", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "sum", "(", "1", ")", ".", "mean", "(", ")", "\n", "\n", "return", "grad_penalty", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.g_nonsaturating_loss": [[81, 85], ["torch.nn.functional.softplus().mean", "torch.nn.functional.softplus"], "function", ["None"], ["", "def", "g_nonsaturating_loss", "(", "fake_pred", ")", ":", "\n", "    ", "loss", "=", "F", ".", "softplus", "(", "-", "fake_pred", ")", ".", "mean", "(", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.g_path_regularize": [[87, 101], ["torch.autograd.grad", "torch.sqrt", "torch.sqrt", "torch.randn_like", "torch.randn_like", "math.sqrt", "grad.pow().sum().mean", "path_mean.detach", "grad.pow().sum", "torch.sqrt.mean", "grad.pow"], "function", ["None"], ["", "def", "g_path_regularize", "(", "fake_img", ",", "latents", ",", "mean_path_length", ",", "decay", "=", "0.01", ")", ":", "\n", "    ", "noise", "=", "torch", ".", "randn_like", "(", "fake_img", ")", "/", "math", ".", "sqrt", "(", "\n", "fake_img", ".", "shape", "[", "2", "]", "*", "fake_img", ".", "shape", "[", "3", "]", "\n", ")", "\n", "grad", ",", "=", "autograd", ".", "grad", "(", "\n", "outputs", "=", "(", "fake_img", "*", "noise", ")", ".", "sum", "(", ")", ",", "inputs", "=", "latents", ",", "create_graph", "=", "True", "\n", ")", "\n", "path_lengths", "=", "torch", ".", "sqrt", "(", "grad", ".", "pow", "(", "2", ")", ".", "sum", "(", "2", ")", ".", "mean", "(", "1", ")", ")", "\n", "\n", "path_mean", "=", "mean_path_length", "+", "decay", "*", "(", "path_lengths", ".", "mean", "(", ")", "-", "mean_path_length", ")", "\n", "\n", "path_penalty", "=", "(", "path_lengths", "-", "path_mean", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n", "return", "path_penalty", ",", "path_mean", ".", "detach", "(", ")", ",", "path_lengths", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.make_noise": [[103, 110], ["torch.randn().unbind", "torch.randn().unbind", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "function", ["None"], ["", "def", "make_noise", "(", "batch", ",", "latent_dim", ",", "n_noise", ",", "device", ")", ":", "\n", "    ", "if", "n_noise", "==", "1", ":", "\n", "        ", "return", "torch", ".", "randn", "(", "batch", ",", "latent_dim", ",", "device", "=", "device", ")", "\n", "\n", "", "noises", "=", "torch", ".", "randn", "(", "n_noise", ",", "batch", ",", "latent_dim", ",", "device", "=", "device", ")", ".", "unbind", "(", "0", ")", "\n", "\n", "return", "noises", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.mixing_noise": [[112, 118], ["train.make_noise", "random.random", "train.make_noise"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Generator.make_noise", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Generator.make_noise"], ["", "def", "mixing_noise", "(", "batch", ",", "latent_dim", ",", "prob", ",", "device", ")", ":", "\n", "    ", "if", "prob", ">", "0", "and", "random", ".", "random", "(", ")", "<", "prob", ":", "\n", "        ", "return", "make_noise", "(", "batch", ",", "latent_dim", ",", "2", ",", "device", ")", "\n", "\n", "", "else", ":", "\n", "        ", "return", "[", "make_noise", "(", "batch", ",", "latent_dim", ",", "1", ",", "device", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.set_grad_none": [[120, 124], ["model.named_parameters"], "function", ["None"], ["", "", "def", "set_grad_none", "(", "model", ",", "targets", ")", ":", "\n", "    ", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "        ", "if", "n", "in", "targets", ":", "\n", "            ", "p", ".", "grad", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.train": [[126, 330], ["train.sample_data", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.randn", "torch.randn", "distributed.get_rank", "tqdm.tqdm", "non_leaking.AdaptiveAugment", "next", "real_img.to.to", "train.requires_grad", "train.requires_grad", "train.mixing_noise", "generator", "discriminator", "discriminator", "train.d_logistic_loss", "discriminator.mean", "discriminator.mean", "discriminator.zero_grad", "d_logistic_loss.backward", "d_optim.step", "train.requires_grad", "train.requires_grad", "train.mixing_noise", "generator", "discriminator", "train.g_nonsaturating_loss", "generator.zero_grad", "g_nonsaturating_loss.backward", "g_optim.step", "torch.tensor.mean", "train.accumulate", "distributed.reduce_loss_dict", "loss_reduced[].mean().item", "loss_reduced[].mean().item", "loss_reduced[].mean().item", "loss_reduced[].mean().item", "loss_reduced[].mean().item", "loss_reduced[].mean().item", "loss_reduced[].mean().item", "print", "non_leaking.augment", "non_leaking.augment", "non_leaking.AdaptiveAugment.tune", "discriminator", "train.d_r1_loss", "discriminator.zero_grad", "d_optim.step", "non_leaking.augment", "max", "train.mixing_noise", "generator", "train.g_path_regularize", "generator.zero_grad", "weighted_path_loss.backward", "g_optim.step", "distributed.get_rank", "tqdm.tqdm.set_description", "non_leaking.augment", "distributed.reduce_sum().item", "distributed.get_world_size", "loss_reduced[].mean", "loss_reduced[].mean", "loss_reduced[].mean", "loss_reduced[].mean", "loss_reduced[].mean", "loss_reduced[].mean", "loss_reduced[].mean", "wandb.log", "torch.save", "torch.save", "torch.no_grad", "torch.no_grad", "g_ema.eval", "g_ema", "torchvision.utils.save_image", "distributed.reduce_sum", "g_module.state_dict", "d_module.state_dict", "g_ema.state_dict", "g_optim.state_dict", "d_optim.state_dict", "int", "str().zfill", "str().zfill", "str", "str"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.sample_data", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_rank", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.requires_grad", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.requires_grad", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.mixing_noise", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.d_logistic_loss", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.backward", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.requires_grad", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.requires_grad", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.mixing_noise", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.g_nonsaturating_loss", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.backward", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.accumulate", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.reduce_loss_dict", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.augment", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.augment", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.AdaptiveAugment.tune", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.d_r1_loss", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.augment", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.mixing_noise", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.train.g_path_regularize", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.backward", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_rank", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.non_leaking.augment", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.get_world_size", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.distributed.reduce_sum"], ["", "", "", "def", "train", "(", "args", ",", "loader", ",", "generator", ",", "discriminator", ",", "g_optim", ",", "d_optim", ",", "g_ema", ",", "device", ")", ":", "\n", "    ", "loader", "=", "sample_data", "(", "loader", ")", "\n", "\n", "pbar", "=", "range", "(", "args", ".", "iter", ")", "\n", "\n", "if", "get_rank", "(", ")", "==", "0", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "pbar", ",", "initial", "=", "args", ".", "start_iter", ",", "dynamic_ncols", "=", "True", ",", "smoothing", "=", "0.01", ")", "\n", "\n", "", "mean_path_length", "=", "0", "\n", "\n", "d_loss_val", "=", "0", "\n", "r1_loss", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "device", ")", "\n", "g_loss_val", "=", "0", "\n", "path_loss", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "device", ")", "\n", "path_lengths", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "device", ")", "\n", "mean_path_length_avg", "=", "0", "\n", "loss_dict", "=", "{", "}", "\n", "\n", "if", "args", ".", "distributed", ":", "\n", "        ", "g_module", "=", "generator", ".", "module", "\n", "d_module", "=", "discriminator", ".", "module", "\n", "\n", "", "else", ":", "\n", "        ", "g_module", "=", "generator", "\n", "d_module", "=", "discriminator", "\n", "\n", "", "accum", "=", "0.5", "**", "(", "32", "/", "(", "10", "*", "1000", ")", ")", "\n", "ada_aug_p", "=", "args", ".", "augment_p", "if", "args", ".", "augment_p", ">", "0", "else", "0.0", "\n", "r_t_stat", "=", "0", "\n", "\n", "if", "args", ".", "augment", "and", "args", ".", "augment_p", "==", "0", ":", "\n", "        ", "ada_augment", "=", "AdaptiveAugment", "(", "args", ".", "ada_target", ",", "args", ".", "ada_length", ",", "8", ",", "device", ")", "\n", "\n", "", "sample_z", "=", "torch", ".", "randn", "(", "args", ".", "n_sample", ",", "args", ".", "latent", ",", "device", "=", "device", ")", "\n", "\n", "for", "idx", "in", "pbar", ":", "\n", "        ", "i", "=", "idx", "+", "args", ".", "start_iter", "\n", "\n", "if", "i", ">", "args", ".", "iter", ":", "\n", "            ", "print", "(", "\"Done!\"", ")", "\n", "\n", "break", "\n", "\n", "", "real_img", "=", "next", "(", "loader", ")", "\n", "real_img", "=", "real_img", ".", "to", "(", "device", ")", "\n", "\n", "requires_grad", "(", "generator", ",", "False", ")", "\n", "requires_grad", "(", "discriminator", ",", "True", ")", "\n", "\n", "noise", "=", "mixing_noise", "(", "args", ".", "batch", ",", "args", ".", "latent", ",", "args", ".", "mixing", ",", "device", ")", "\n", "fake_img", ",", "_", "=", "generator", "(", "noise", ")", "\n", "\n", "if", "args", ".", "augment", ":", "\n", "            ", "real_img_aug", ",", "_", "=", "augment", "(", "real_img", ",", "ada_aug_p", ")", "\n", "fake_img", ",", "_", "=", "augment", "(", "fake_img", ",", "ada_aug_p", ")", "\n", "\n", "", "else", ":", "\n", "            ", "real_img_aug", "=", "real_img", "\n", "\n", "", "fake_pred", "=", "discriminator", "(", "fake_img", ")", "\n", "real_pred", "=", "discriminator", "(", "real_img_aug", ")", "\n", "d_loss", "=", "d_logistic_loss", "(", "real_pred", ",", "fake_pred", ")", "\n", "\n", "loss_dict", "[", "\"d\"", "]", "=", "d_loss", "\n", "loss_dict", "[", "\"real_score\"", "]", "=", "real_pred", ".", "mean", "(", ")", "\n", "loss_dict", "[", "\"fake_score\"", "]", "=", "fake_pred", ".", "mean", "(", ")", "\n", "\n", "discriminator", ".", "zero_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optim", ".", "step", "(", ")", "\n", "\n", "if", "args", ".", "augment", "and", "args", ".", "augment_p", "==", "0", ":", "\n", "            ", "ada_aug_p", "=", "ada_augment", ".", "tune", "(", "real_pred", ")", "\n", "r_t_stat", "=", "ada_augment", ".", "r_t_stat", "\n", "\n", "", "d_regularize", "=", "i", "%", "args", ".", "d_reg_every", "==", "0", "\n", "\n", "if", "d_regularize", ":", "\n", "            ", "real_img", ".", "requires_grad", "=", "True", "\n", "\n", "if", "args", ".", "augment", ":", "\n", "                ", "real_img_aug", ",", "_", "=", "augment", "(", "real_img", ",", "ada_aug_p", ")", "\n", "\n", "", "else", ":", "\n", "                ", "real_img_aug", "=", "real_img", "\n", "\n", "", "real_pred", "=", "discriminator", "(", "real_img_aug", ")", "\n", "r1_loss", "=", "d_r1_loss", "(", "real_pred", ",", "real_img", ")", "\n", "\n", "discriminator", ".", "zero_grad", "(", ")", "\n", "(", "args", ".", "r1", "/", "2", "*", "r1_loss", "*", "args", ".", "d_reg_every", "+", "0", "*", "real_pred", "[", "0", "]", ")", ".", "backward", "(", ")", "\n", "\n", "d_optim", ".", "step", "(", ")", "\n", "\n", "", "loss_dict", "[", "\"r1\"", "]", "=", "r1_loss", "\n", "\n", "requires_grad", "(", "generator", ",", "True", ")", "\n", "requires_grad", "(", "discriminator", ",", "False", ")", "\n", "\n", "noise", "=", "mixing_noise", "(", "args", ".", "batch", ",", "args", ".", "latent", ",", "args", ".", "mixing", ",", "device", ")", "\n", "fake_img", ",", "_", "=", "generator", "(", "noise", ")", "\n", "\n", "if", "args", ".", "augment", ":", "\n", "            ", "fake_img", ",", "_", "=", "augment", "(", "fake_img", ",", "ada_aug_p", ")", "\n", "\n", "", "fake_pred", "=", "discriminator", "(", "fake_img", ")", "\n", "g_loss", "=", "g_nonsaturating_loss", "(", "fake_pred", ")", "\n", "\n", "loss_dict", "[", "\"g\"", "]", "=", "g_loss", "\n", "\n", "generator", ".", "zero_grad", "(", ")", "\n", "g_loss", ".", "backward", "(", ")", "\n", "g_optim", ".", "step", "(", ")", "\n", "\n", "#g_regularize = i % args.g_reg_every == 0", "\n", "g_regularize", "=", "False", "\n", "\n", "if", "g_regularize", ":", "\n", "            ", "path_batch_size", "=", "max", "(", "1", ",", "args", ".", "batch", "//", "args", ".", "path_batch_shrink", ")", "\n", "noise", "=", "mixing_noise", "(", "path_batch_size", ",", "args", ".", "latent", ",", "args", ".", "mixing", ",", "device", ")", "\n", "fake_img", ",", "latents", "=", "generator", "(", "noise", ",", "return_latents", "=", "True", ")", "\n", "\n", "path_loss", ",", "mean_path_length", ",", "path_lengths", "=", "g_path_regularize", "(", "\n", "fake_img", ",", "latents", ",", "mean_path_length", "\n", ")", "\n", "\n", "generator", ".", "zero_grad", "(", ")", "\n", "weighted_path_loss", "=", "args", ".", "path_regularize", "*", "args", ".", "g_reg_every", "*", "path_loss", "\n", "\n", "if", "args", ".", "path_batch_shrink", ":", "\n", "                ", "weighted_path_loss", "+=", "0", "*", "fake_img", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "\n", "", "weighted_path_loss", ".", "backward", "(", ")", "\n", "\n", "g_optim", ".", "step", "(", ")", "\n", "\n", "mean_path_length_avg", "=", "(", "\n", "reduce_sum", "(", "mean_path_length", ")", ".", "item", "(", ")", "/", "get_world_size", "(", ")", "\n", ")", "\n", "\n", "", "loss_dict", "[", "\"path\"", "]", "=", "path_loss", "\n", "loss_dict", "[", "\"path_length\"", "]", "=", "path_lengths", ".", "mean", "(", ")", "\n", "\n", "accumulate", "(", "g_ema", ",", "g_module", ",", "accum", ")", "\n", "\n", "loss_reduced", "=", "reduce_loss_dict", "(", "loss_dict", ")", "\n", "\n", "d_loss_val", "=", "loss_reduced", "[", "\"d\"", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "g_loss_val", "=", "loss_reduced", "[", "\"g\"", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "r1_val", "=", "loss_reduced", "[", "\"r1\"", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "path_loss_val", "=", "loss_reduced", "[", "\"path\"", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "real_score_val", "=", "loss_reduced", "[", "\"real_score\"", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "fake_score_val", "=", "loss_reduced", "[", "\"fake_score\"", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "path_length_val", "=", "loss_reduced", "[", "\"path_length\"", "]", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n", "if", "get_rank", "(", ")", "==", "0", ":", "\n", "            ", "pbar", ".", "set_description", "(", "\n", "(", "\n", "f\"d: {d_loss_val:.4f}; g: {g_loss_val:.4f}; r1: {r1_val:.4f}; \"", "\n", "f\"path: {path_loss_val:.4f}; mean path: {mean_path_length_avg:.4f}; \"", "\n", "f\"augment: {ada_aug_p:.4f}\"", "\n", ")", "\n", ")", "\n", "\n", "if", "wandb", "and", "args", ".", "wandb", ":", "\n", "                ", "wandb", ".", "log", "(", "\n", "{", "\n", "\"Generator\"", ":", "g_loss_val", ",", "\n", "\"Discriminator\"", ":", "d_loss_val", ",", "\n", "\"Augment\"", ":", "ada_aug_p", ",", "\n", "\"Rt\"", ":", "r_t_stat", ",", "\n", "\"R1\"", ":", "r1_val", ",", "\n", "\"Path Length Regularization\"", ":", "path_loss_val", ",", "\n", "\"Mean Path Length\"", ":", "mean_path_length", ",", "\n", "\"Real Score\"", ":", "real_score_val", ",", "\n", "\"Fake Score\"", ":", "fake_score_val", ",", "\n", "\"Path Length\"", ":", "path_length_val", ",", "\n", "}", "\n", ")", "\n", "\n", "", "if", "i", "%", "10000", "==", "0", ":", "\n", "                ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "g_ema", ".", "eval", "(", ")", "\n", "sample", ",", "_", "=", "g_ema", "(", "[", "sample_z", "]", ")", "\n", "utils", ".", "save_image", "(", "\n", "sample", ",", "\n", "f\"sample/{args.name}/{str(i).zfill(6)}.png\"", ",", "\n", "nrow", "=", "int", "(", "args", ".", "n_sample", "**", "0.5", ")", ",", "\n", "normalize", "=", "True", ",", "\n", "range", "=", "(", "-", "1", ",", "1", ")", ",", "\n", ")", "\n", "\n", "", "", "if", "i", "%", "50000", "==", "0", ":", "\n", "                ", "torch", ".", "save", "(", "\n", "{", "\n", "\"g\"", ":", "g_module", ".", "state_dict", "(", ")", ",", "\n", "\"d\"", ":", "d_module", ".", "state_dict", "(", ")", ",", "\n", "\"g_ema\"", ":", "g_ema", ".", "state_dict", "(", ")", ",", "\n", "\"g_optim\"", ":", "g_optim", ".", "state_dict", "(", ")", ",", "\n", "\"d_optim\"", ":", "d_optim", ".", "state_dict", "(", ")", ",", "\n", "\"args\"", ":", "args", ",", "\n", "\"ada_aug_p\"", ":", "ada_aug_p", ",", "\n", "}", ",", "\n", "f\"checkpoint/{args.name}/{str(i).zfill(6)}.pt\"", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.dataset.MultiResolutionDataset.__init__": [[9, 27], ["lmdb.open", "IOError", "dataset.MultiResolutionDataset.env.begin", "int", "txn.get().decode", "txn.get"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "transform", ",", "resolution", "=", "256", ")", ":", "\n", "        ", "self", ".", "env", "=", "lmdb", ".", "open", "(", "\n", "path", ",", "\n", "max_readers", "=", "32", ",", "\n", "readonly", "=", "True", ",", "\n", "lock", "=", "False", ",", "\n", "readahead", "=", "False", ",", "\n", "meminit", "=", "False", ",", "\n", ")", "\n", "\n", "if", "not", "self", ".", "env", ":", "\n", "            ", "raise", "IOError", "(", "'Cannot open lmdb dataset'", ",", "path", ")", "\n", "\n", "", "with", "self", ".", "env", ".", "begin", "(", "write", "=", "False", ")", "as", "txn", ":", "\n", "            ", "self", ".", "length", "=", "int", "(", "txn", ".", "get", "(", "'length'", ".", "encode", "(", "'utf-8'", ")", ")", ".", "decode", "(", "'utf-8'", ")", ")", "\n", "\n", "", "self", ".", "resolution", "=", "resolution", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.dataset.MultiResolutionDataset.__len__": [[28, 30], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.dataset.MultiResolutionDataset.__getitem__": [[31, 41], ["io.BytesIO", "PIL.Image.open", "dataset.MultiResolutionDataset.transform", "dataset.MultiResolutionDataset.env.begin", "txn.get", "str().zfill", "str"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "with", "self", ".", "env", ".", "begin", "(", "write", "=", "False", ")", "as", "txn", ":", "\n", "            ", "key", "=", "f'{self.resolution}-{str(index).zfill(5)}'", ".", "encode", "(", "'utf-8'", ")", "\n", "img_bytes", "=", "txn", ".", "get", "(", "key", ")", "\n", "\n", "", "buffer", "=", "BytesIO", "(", "img_bytes", ")", "\n", "img", "=", "Image", ".", "open", "(", "buffer", ")", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "return", "img", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.calc_inception.Inception3Feature.forward": [[19, 49], ["calc_inception.Inception3Feature.Conv2d_1a_3x3", "calc_inception.Inception3Feature.Conv2d_2a_3x3", "calc_inception.Inception3Feature.Conv2d_2b_3x3", "torch.nn.functional.max_pool2d", "calc_inception.Inception3Feature.Conv2d_3b_1x1", "calc_inception.Inception3Feature.Conv2d_4a_3x3", "torch.nn.functional.max_pool2d", "calc_inception.Inception3Feature.Mixed_5b", "calc_inception.Inception3Feature.Mixed_5c", "calc_inception.Inception3Feature.Mixed_5d", "calc_inception.Inception3Feature.Mixed_6a", "calc_inception.Inception3Feature.Mixed_6b", "calc_inception.Inception3Feature.Mixed_6c", "calc_inception.Inception3Feature.Mixed_6d", "calc_inception.Inception3Feature.Mixed_6e", "calc_inception.Inception3Feature.Mixed_7a", "calc_inception.Inception3Feature.Mixed_7b", "calc_inception.Inception3Feature.Mixed_7c", "torch.nn.functional.avg_pool2d", "torch.nn.functional.interpolate.view", "torch.nn.functional.interpolate"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "x", ".", "shape", "[", "2", "]", "!=", "299", "or", "x", ".", "shape", "[", "3", "]", "!=", "299", ":", "\n", "            ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "size", "=", "(", "299", ",", "299", ")", ",", "mode", "=", "\"bilinear\"", ",", "align_corners", "=", "True", ")", "\n", "\n", "", "x", "=", "self", ".", "Conv2d_1a_3x3", "(", "x", ")", "# 299 x 299 x 3", "\n", "x", "=", "self", ".", "Conv2d_2a_3x3", "(", "x", ")", "# 149 x 149 x 32", "\n", "x", "=", "self", ".", "Conv2d_2b_3x3", "(", "x", ")", "# 147 x 147 x 32", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "# 147 x 147 x 64", "\n", "\n", "x", "=", "self", ".", "Conv2d_3b_1x1", "(", "x", ")", "# 73 x 73 x 64", "\n", "x", "=", "self", ".", "Conv2d_4a_3x3", "(", "x", ")", "# 73 x 73 x 80", "\n", "x", "=", "F", ".", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "# 71 x 71 x 192", "\n", "\n", "x", "=", "self", ".", "Mixed_5b", "(", "x", ")", "# 35 x 35 x 192", "\n", "x", "=", "self", ".", "Mixed_5c", "(", "x", ")", "# 35 x 35 x 256", "\n", "x", "=", "self", ".", "Mixed_5d", "(", "x", ")", "# 35 x 35 x 288", "\n", "\n", "x", "=", "self", ".", "Mixed_6a", "(", "x", ")", "# 35 x 35 x 288", "\n", "x", "=", "self", ".", "Mixed_6b", "(", "x", ")", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_6c", "(", "x", ")", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_6d", "(", "x", ")", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_6e", "(", "x", ")", "# 17 x 17 x 768", "\n", "\n", "x", "=", "self", ".", "Mixed_7a", "(", "x", ")", "# 17 x 17 x 768", "\n", "x", "=", "self", ".", "Mixed_7b", "(", "x", ")", "# 8 x 8 x 1280", "\n", "x", "=", "self", ".", "Mixed_7c", "(", "x", ")", "# 8 x 8 x 2048", "\n", "\n", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "8", ")", "# 8 x 8 x 2048", "\n", "\n", "return", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ")", "# 1 x 1 x 2048", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.calc_inception.load_patched_inception_v3": [[51, 58], ["inception.InceptionV3"], "function", ["None"], ["", "", "def", "load_patched_inception_v3", "(", ")", ":", "\n", "# inception = inception_v3(pretrained=True)", "\n", "# inception_feat = Inception3Feature()", "\n", "# inception_feat.load_state_dict(inception.state_dict())", "\n", "    ", "inception_feat", "=", "InceptionV3", "(", "[", "3", "]", ",", "normalize_input", "=", "False", ")", "\n", "\n", "return", "inception_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.calc_inception.extract_features": [[60, 74], ["torch.no_grad", "tqdm.tqdm", "torch.cat", "img.to.to", "[].view", "feature_list.append", "[].view.to", "inception"], "function", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "extract_features", "(", "loader", ",", "inception", ",", "device", ")", ":", "\n", "    ", "pbar", "=", "tqdm", "(", "loader", ")", "\n", "\n", "feature_list", "=", "[", "]", "\n", "\n", "for", "img", "in", "pbar", ":", "\n", "        ", "img", "=", "img", ".", "to", "(", "device", ")", "\n", "feature", "=", "inception", "(", "img", ")", "[", "0", "]", ".", "view", "(", "img", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "feature_list", ".", "append", "(", "feature", ".", "to", "(", "\"cpu\"", ")", ")", "\n", "\n", "", "features", "=", "torch", ".", "cat", "(", "feature_list", ",", "0", ")", "\n", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.PixelNorm.__init__": [[15, 17], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.PixelNorm.forward": [[18, 20], ["torch.rsqrt", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", "*", "torch", ".", "rsqrt", "(", "torch", ".", "mean", "(", "input", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "+", "1e-8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Upsample.__init__": [[34, 47], ["torch.nn.Module.__init__", "model.Upsample.register_buffer", "model.make_kernel"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.make_kernel"], ["    ", "def", "__init__", "(", "self", ",", "kernel", ",", "factor", "=", "2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "factor", "=", "factor", "\n", "kernel", "=", "make_kernel", "(", "kernel", ")", "*", "(", "factor", "**", "2", ")", "\n", "self", ".", "register_buffer", "(", "\"kernel\"", ",", "kernel", ")", "\n", "\n", "p", "=", "kernel", ".", "shape", "[", "0", "]", "-", "factor", "\n", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "+", "factor", "-", "1", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "self", ".", "pad", "=", "(", "pad0", ",", "pad1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Upsample.forward": [[48, 52], ["op.upfirdn2d"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "upfirdn2d", "(", "input", ",", "self", ".", "kernel", ",", "up", "=", "self", ".", "factor", ",", "down", "=", "1", ",", "pad", "=", "self", ".", "pad", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Downsample.__init__": [[55, 68], ["torch.nn.Module.__init__", "model.make_kernel", "model.Downsample.register_buffer"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.make_kernel"], ["    ", "def", "__init__", "(", "self", ",", "kernel", ",", "factor", "=", "2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "factor", "=", "factor", "\n", "kernel", "=", "make_kernel", "(", "kernel", ")", "\n", "self", ".", "register_buffer", "(", "\"kernel\"", ",", "kernel", ")", "\n", "\n", "p", "=", "kernel", ".", "shape", "[", "0", "]", "-", "factor", "\n", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "self", ".", "pad", "=", "(", "pad0", ",", "pad1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Downsample.forward": [[69, 73], ["op.upfirdn2d"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "upfirdn2d", "(", "input", ",", "self", ".", "kernel", ",", "up", "=", "1", ",", "down", "=", "self", ".", "factor", ",", "pad", "=", "self", ".", "pad", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Blur.__init__": [[76, 87], ["torch.nn.Module.__init__", "model.make_kernel", "model.Blur.register_buffer"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.make_kernel"], ["    ", "def", "__init__", "(", "self", ",", "kernel", ",", "pad", ",", "upsample_factor", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "kernel", "=", "make_kernel", "(", "kernel", ")", "\n", "\n", "if", "upsample_factor", ">", "1", ":", "\n", "            ", "kernel", "=", "kernel", "*", "(", "upsample_factor", "**", "2", ")", "\n", "\n", "", "self", ".", "register_buffer", "(", "\"kernel\"", ",", "kernel", ")", "\n", "\n", "self", ".", "pad", "=", "pad", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Blur.forward": [[88, 92], ["op.upfirdn2d"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "upfirdn2d", "(", "input", ",", "self", ".", "kernel", ",", "pad", "=", "self", ".", "pad", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.EqualConv2d.__init__": [[95, 113], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.randn", "math.sqrt", "torch.nn.Parameter", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "in_channel", ",", "out_channel", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "randn", "(", "out_channel", ",", "in_channel", ",", "kernel_size", ",", "kernel_size", ")", "\n", ")", "\n", "self", ".", "scale", "=", "1", "/", "math", ".", "sqrt", "(", "in_channel", "*", "kernel_size", "**", "2", ")", "\n", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "padding", "=", "padding", "\n", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "out_channel", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.EqualConv2d.forward": [[114, 124], ["op.conv2d_gradfix.conv2d"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "conv2d_gradfix", ".", "conv2d", "(", "\n", "input", ",", "\n", "self", ".", "weight", "*", "self", ".", "scale", ",", "\n", "bias", "=", "self", ".", "bias", ",", "\n", "stride", "=", "self", ".", "stride", ",", "\n", "padding", "=", "self", ".", "padding", ",", "\n", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.EqualConv2d.__repr__": [[125, 128], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "f\"{self.__class__.__name__}({self.weight.shape[1]}, {self.weight.shape[0]},\"", "\n", "f\" {self.weight.shape[2]}, stride={self.stride}, padding={self.padding})\"", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.EqualLinear.__init__": [[133, 150], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.randn().div_", "torch.nn.Parameter", "torch.zeros().fill_", "math.sqrt", "torch.randn", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "in_dim", ",", "out_dim", ",", "bias", "=", "True", ",", "bias_init", "=", "0", ",", "lr_mul", "=", "1", ",", "activation", "=", "None", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "out_dim", ",", "in_dim", ")", ".", "div_", "(", "lr_mul", ")", ")", "\n", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "out_dim", ")", ".", "fill_", "(", "bias_init", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "None", "\n", "\n", "", "self", ".", "activation", "=", "activation", "\n", "\n", "self", ".", "scale", "=", "(", "1", "/", "math", ".", "sqrt", "(", "in_dim", ")", ")", "*", "lr_mul", "\n", "self", ".", "lr_mul", "=", "lr_mul", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.EqualLinear.forward": [[151, 162], ["torch.nn.functional.linear", "op.fused_leaky_relu", "torch.nn.functional.linear"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.fused_leaky_relu"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "self", ".", "activation", ":", "\n", "            ", "out", "=", "F", ".", "linear", "(", "input", ",", "self", ".", "weight", "*", "self", ".", "scale", ")", "\n", "out", "=", "fused_leaky_relu", "(", "out", ",", "self", ".", "bias", "*", "self", ".", "lr_mul", ")", "\n", "\n", "", "else", ":", "\n", "            ", "out", "=", "F", ".", "linear", "(", "\n", "input", ",", "self", ".", "weight", "*", "self", ".", "scale", ",", "bias", "=", "self", ".", "bias", "*", "self", ".", "lr_mul", "\n", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.EqualLinear.__repr__": [[163, 166], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "f\"{self.__class__.__name__}({self.weight.shape[1]}, {self.weight.shape[0]})\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.ModulatedConv2d.__init__": [[170, 219], ["torch.nn.Module.__init__", "torch.nn.Parameter", "model.EqualLinear", "model.Blur", "model.Blur", "math.sqrt", "torch.randn", "len", "len"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "style_dim", ",", "\n", "demodulate", "=", "True", ",", "\n", "upsample", "=", "False", ",", "\n", "downsample", "=", "False", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", "fused", "=", "True", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "eps", "=", "1e-8", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "in_channel", "=", "in_channel", "\n", "self", ".", "out_channel", "=", "out_channel", "\n", "self", ".", "upsample", "=", "upsample", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "if", "upsample", ":", "\n", "            ", "factor", "=", "2", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "-", "(", "kernel_size", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "+", "factor", "-", "1", "\n", "pad1", "=", "p", "//", "2", "+", "1", "\n", "\n", "self", ".", "blur", "=", "Blur", "(", "blur_kernel", ",", "pad", "=", "(", "pad0", ",", "pad1", ")", ",", "upsample_factor", "=", "factor", ")", "\n", "\n", "", "if", "downsample", ":", "\n", "            ", "factor", "=", "2", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "+", "(", "kernel_size", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "self", ".", "blur", "=", "Blur", "(", "blur_kernel", ",", "pad", "=", "(", "pad0", ",", "pad1", ")", ")", "\n", "\n", "", "fan_in", "=", "in_channel", "*", "kernel_size", "**", "2", "\n", "self", ".", "scale", "=", "1", "/", "math", ".", "sqrt", "(", "fan_in", ")", "\n", "self", ".", "padding", "=", "kernel_size", "//", "2", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "\n", "torch", ".", "randn", "(", "1", ",", "out_channel", ",", "in_channel", ",", "kernel_size", ",", "kernel_size", ")", "\n", ")", "\n", "\n", "self", ".", "modulation", "=", "EqualLinear", "(", "style_dim", ",", "in_channel", ",", "bias_init", "=", "1", ")", "\n", "\n", "self", ".", "demodulate", "=", "demodulate", "\n", "self", ".", "fused", "=", "fused", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.ModulatedConv2d.__repr__": [[220, 223], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "f\"{self.__class__.__name__}({self.in_channel}, {self.out_channel}, {self.kernel_size}, \"", "\n", "f\"upsample={self.upsample}, downsample={self.downsample})\"", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.ModulatedConv2d.forward": [[226, 303], ["model.ModulatedConv2d.modulation().view", "weight.transpose.transpose.view", "model.ModulatedConv2d.modulation", "torch.rsqrt", "model.ModulatedConv2d.view", "weight.transpose.transpose.view", "weight.transpose.transpose.transpose().reshape", "op.conv2d_gradfix.conv_transpose2d", "op.conv2d_gradfix.conv2d.view", "model.ModulatedConv2d.blur", "model.ModulatedConv2d.weight.squeeze", "model.ModulatedConv2d.reshape", "weight.transpose.transpose.transpose", "op.conv2d_gradfix.conv_transpose2d", "model.ModulatedConv2d.blur", "model.ModulatedConv2d.modulation", "torch.rsqrt.view", "model.ModulatedConv2d.blur", "model.ModulatedConv2d.view", "op.conv2d_gradfix.conv2d", "op.conv2d_gradfix.conv2d.view", "model.ModulatedConv2d.view", "op.conv2d_gradfix.conv2d", "op.conv2d_gradfix.conv2d.view", "weight.transpose.transpose.unsqueeze", "model.ModulatedConv2d.view", "model.ModulatedConv2d.blur", "op.conv2d_gradfix.conv2d", "op.conv2d_gradfix.conv2d", "dcoefs.view", "weight.transpose.transpose.pow().sum", "weight.transpose.transpose.transpose", "w.square().sum", "weight.transpose.transpose.pow", "w.square"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv_transpose2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv_transpose2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d"], ["", "def", "forward", "(", "self", ",", "input", ",", "style", ")", ":", "\n", "        ", "batch", ",", "in_channel", ",", "height", ",", "width", "=", "input", ".", "shape", "\n", "\n", "if", "not", "self", ".", "fused", ":", "\n", "            ", "weight", "=", "self", ".", "scale", "*", "self", ".", "weight", ".", "squeeze", "(", "0", ")", "\n", "style", "=", "self", ".", "modulation", "(", "style", ")", "\n", "\n", "if", "self", ".", "demodulate", ":", "\n", "                ", "w", "=", "weight", ".", "unsqueeze", "(", "0", ")", "*", "style", ".", "view", "(", "batch", ",", "1", ",", "in_channel", ",", "1", ",", "1", ")", "\n", "dcoefs", "=", "(", "w", ".", "square", "(", ")", ".", "sum", "(", "(", "2", ",", "3", ",", "4", ")", ")", "+", "1e-8", ")", ".", "rsqrt", "(", ")", "\n", "\n", "", "input", "=", "input", "*", "style", ".", "reshape", "(", "batch", ",", "in_channel", ",", "1", ",", "1", ")", "\n", "\n", "if", "self", ".", "upsample", ":", "\n", "                ", "weight", "=", "weight", ".", "transpose", "(", "0", ",", "1", ")", "\n", "out", "=", "conv2d_gradfix", ".", "conv_transpose2d", "(", "\n", "input", ",", "weight", ",", "padding", "=", "0", ",", "stride", "=", "2", "\n", ")", "\n", "out", "=", "self", ".", "blur", "(", "out", ")", "\n", "\n", "", "elif", "self", ".", "downsample", ":", "\n", "                ", "input", "=", "self", ".", "blur", "(", "input", ")", "\n", "out", "=", "conv2d_gradfix", ".", "conv2d", "(", "input", ",", "weight", ",", "padding", "=", "0", ",", "stride", "=", "2", ")", "\n", "\n", "", "else", ":", "\n", "                ", "out", "=", "conv2d_gradfix", ".", "conv2d", "(", "input", ",", "weight", ",", "padding", "=", "self", ".", "padding", ")", "\n", "\n", "", "if", "self", ".", "demodulate", ":", "\n", "                ", "out", "=", "out", "*", "dcoefs", ".", "view", "(", "batch", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "\n", "", "return", "out", "\n", "\n", "", "style", "=", "self", ".", "modulation", "(", "style", ")", ".", "view", "(", "batch", ",", "1", ",", "in_channel", ",", "1", ",", "1", ")", "\n", "weight", "=", "self", ".", "scale", "*", "self", ".", "weight", "*", "style", "\n", "\n", "if", "self", ".", "demodulate", ":", "\n", "            ", "demod", "=", "torch", ".", "rsqrt", "(", "weight", ".", "pow", "(", "2", ")", ".", "sum", "(", "[", "2", ",", "3", ",", "4", "]", ")", "+", "1e-8", ")", "\n", "weight", "=", "weight", "*", "demod", ".", "view", "(", "batch", ",", "self", ".", "out_channel", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "", "weight", "=", "weight", ".", "view", "(", "\n", "batch", "*", "self", ".", "out_channel", ",", "in_channel", ",", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", "\n", ")", "\n", "\n", "if", "self", ".", "upsample", ":", "\n", "            ", "input", "=", "input", ".", "view", "(", "1", ",", "batch", "*", "in_channel", ",", "height", ",", "width", ")", "\n", "weight", "=", "weight", ".", "view", "(", "\n", "batch", ",", "self", ".", "out_channel", ",", "in_channel", ",", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", "\n", ")", "\n", "weight", "=", "weight", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "\n", "batch", "*", "in_channel", ",", "self", ".", "out_channel", ",", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", "\n", ")", "\n", "out", "=", "conv2d_gradfix", ".", "conv_transpose2d", "(", "\n", "input", ",", "weight", ",", "padding", "=", "0", ",", "stride", "=", "2", ",", "groups", "=", "batch", "\n", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "out", "=", "out", ".", "view", "(", "batch", ",", "self", ".", "out_channel", ",", "height", ",", "width", ")", "\n", "out", "=", "self", ".", "blur", "(", "out", ")", "\n", "\n", "", "elif", "self", ".", "downsample", ":", "\n", "            ", "input", "=", "self", ".", "blur", "(", "input", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "input", ".", "shape", "\n", "input", "=", "input", ".", "view", "(", "1", ",", "batch", "*", "in_channel", ",", "height", ",", "width", ")", "\n", "out", "=", "conv2d_gradfix", ".", "conv2d", "(", "\n", "input", ",", "weight", ",", "padding", "=", "0", ",", "stride", "=", "2", ",", "groups", "=", "batch", "\n", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "out", "=", "out", ".", "view", "(", "batch", ",", "self", ".", "out_channel", ",", "height", ",", "width", ")", "\n", "\n", "", "else", ":", "\n", "            ", "input", "=", "input", ".", "view", "(", "1", ",", "batch", "*", "in_channel", ",", "height", ",", "width", ")", "\n", "out", "=", "conv2d_gradfix", ".", "conv2d", "(", "\n", "input", ",", "weight", ",", "padding", "=", "self", ".", "padding", ",", "groups", "=", "batch", "\n", ")", "\n", "_", ",", "_", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "out", "=", "out", ".", "view", "(", "batch", ",", "self", ".", "out_channel", ",", "height", ",", "width", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.NoiseInjection.__init__": [[306, 310], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.NoiseInjection.forward": [[311, 317], ["image.new_empty().normal_", "image.new_empty"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "image", ",", "noise", "=", "None", ")", ":", "\n", "        ", "if", "noise", "is", "None", ":", "\n", "            ", "batch", ",", "_", ",", "height", ",", "width", "=", "image", ".", "shape", "\n", "noise", "=", "image", ".", "new_empty", "(", "batch", ",", "1", ",", "height", ",", "width", ")", ".", "normal_", "(", ")", "\n", "\n", "", "return", "image", "+", "self", ".", "weight", "*", "noise", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.ConstantInput.__init__": [[320, 324], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "size", "=", "4", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "input", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "1", ",", "channel", ",", "size", ",", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.ConstantInput.forward": [[325, 335], ["model.ConstantInput.input.repeat", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "shift_h", "=", "0", ",", "shift_w", "=", "0", ",", "transform", "=", "None", ")", ":", "\n", "        ", "batch", "=", "input", ".", "shape", "[", "0", "]", "\n", "out", "=", "self", ".", "input", ".", "repeat", "(", "batch", ",", "1", ",", "1", ",", "1", ")", "\n", "# shift. details in appendix", "\n", "out", "=", "torch", ".", "roll", "(", "out", ",", "int", "(", "shift_h", ")", ",", "2", ")", "*", "(", "1", "-", "shift_h", "+", "int", "(", "shift_h", ")", ")", "+", "torch", ".", "roll", "(", "out", ",", "int", "(", "shift_h", ")", "+", "1", ",", "2", ")", "*", "(", "\n", "shift_h", "-", "int", "(", "shift_h", ")", ")", "\n", "out", "=", "torch", ".", "roll", "(", "out", ",", "int", "(", "shift_w", ")", ",", "3", ")", "*", "(", "1", "-", "shift_w", "+", "int", "(", "shift_w", ")", ")", "+", "torch", ".", "roll", "(", "out", ",", "int", "(", "shift_w", ")", "+", "1", ",", "3", ")", "*", "(", "\n", "shift_w", "-", "int", "(", "shift_w", ")", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.StyledConv.__init__": [[338, 364], ["torch.nn.Module.__init__", "model.ModulatedConv2d", "model.NoiseInjection", "op.FusedLeakyReLU"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "False", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", "demodulate", "=", "True", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "ModulatedConv2d", "(", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "upsample", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", "demodulate", "=", "demodulate", ",", "\n", ")", "\n", "\n", "self", ".", "noise", "=", "NoiseInjection", "(", ")", "\n", "# self.bias = nn.Parameter(torch.zeros(1, out_channel, 1, 1))", "\n", "# self.activate = ScaledLeakyReLU(0.2)", "\n", "self", ".", "activate", "=", "FusedLeakyReLU", "(", "out_channel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.StyledConv.forward": [[365, 372], ["model.StyledConv.conv", "model.StyledConv.noise", "model.StyledConv.activate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "style", ",", "noise", "=", "None", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "input", ",", "style", ")", "\n", "out", "=", "self", ".", "noise", "(", "out", ",", "noise", "=", "noise", ")", "\n", "# out = out + self.bias", "\n", "out", "=", "self", ".", "activate", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.ToRGB.__init__": [[375, 383], ["torch.nn.Module.__init__", "model.ModulatedConv2d", "torch.nn.Parameter", "model.Upsample", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "style_dim", ",", "upsample", "=", "True", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "upsample", ":", "\n", "            ", "self", ".", "upsample", "=", "Upsample", "(", "blur_kernel", ")", "\n", "\n", "", "self", ".", "conv", "=", "ModulatedConv2d", "(", "in_channel", ",", "3", ",", "1", ",", "style_dim", ",", "demodulate", "=", "False", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.ToRGB.forward": [[384, 394], ["model.ToRGB.conv", "model.ToRGB.upsample"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.upsample"], ["", "def", "forward", "(", "self", ",", "input", ",", "style", ",", "skip", "=", "None", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "input", ",", "style", ")", "\n", "out", "=", "out", "+", "self", ".", "bias", "\n", "\n", "if", "skip", "is", "not", "None", ":", "\n", "            ", "skip", "=", "self", ".", "upsample", "(", "skip", ")", "\n", "\n", "out", "=", "out", "+", "skip", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Generator.__init__": [[397, 510], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "model.StyledConv", "model.ToRGB", "int", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Module", "range", "range", "range", "model.PixelNorm", "layers.append", "model.PE2dStart", "model.ConstantInput", "model.EqualLinear", "model.Generator.affine_fourier.weight.detach().zero_", "model.Generator.affine_fourier.bias.detach().copy_", "math.log", "torch.nn.ModuleList", "model.Generator.noises.register_buffer", "model.Generator.convs.append", "model.Generator.convs.append", "model.Generator.to_rgbs.append", "model.EqualLinear", "torch.tensor", "torch.randn", "model.StyledConv", "model.Generator.pes.append", "model.StyledConv", "model.ToRGB", "model.Generator.affine_fourier.weight.detach", "model.Generator.affine_fourier.bias.detach", "model.PE2d"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "size", ",", "\n", "style_dim", ",", "\n", "n_mlp", ",", "\n", "channel_multiplier", "=", "2", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", "lr_mlp", "=", "0.01", ",", "\n", "position", "=", "'none'", ",", "\n", "kernel_size", "=", "3", ",", "\n", "affine", "=", "False", ",", "\n", "scale", "=", "1.0", ",", "\n", "device", "=", "\"cuda\"", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "size", "=", "size", "\n", "\n", "self", ".", "style_dim", "=", "style_dim", "\n", "\n", "self", ".", "position", "=", "position", "\n", "self", ".", "affine", "=", "affine", "\n", "self", ".", "device", "=", "device", "\n", "\n", "layers", "=", "[", "PixelNorm", "(", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "n_mlp", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "EqualLinear", "(", "\n", "style_dim", ",", "style_dim", ",", "lr_mul", "=", "lr_mlp", ",", "activation", "=", "\"fused_lrelu\"", "\n", ")", "\n", ")", "\n", "\n", "", "self", ".", "style", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "self", ".", "channels", "=", "{", "\n", "4", ":", "512", ",", "\n", "8", ":", "512", ",", "\n", "16", ":", "512", ",", "\n", "32", ":", "512", ",", "\n", "64", ":", "256", "*", "channel_multiplier", ",", "\n", "128", ":", "128", "*", "channel_multiplier", ",", "\n", "256", ":", "64", "*", "channel_multiplier", ",", "\n", "512", ":", "32", "*", "channel_multiplier", ",", "\n", "1024", ":", "16", "*", "channel_multiplier", ",", "\n", "}", "\n", "if", "'pe'", "in", "self", ".", "position", ":", "\n", "            ", "self", ".", "input", "=", "PE2dStart", "(", "512", ",", "4", ",", "4", ",", "scale", "=", "scale", ",", "device", "=", "device", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "input", "=", "ConstantInput", "(", "self", ".", "channels", "[", "4", "]", ")", "\n", "", "self", ".", "shift_h_dict", "=", "{", "4", ":", "0", "}", "\n", "self", ".", "shift_w_dict", "=", "{", "4", ":", "0", "}", "\n", "\n", "if", "self", ".", "affine", ":", "\n", "            ", "self", ".", "affine_fourier", "=", "EqualLinear", "(", "style_dim", ",", "4", ")", "\n", "self", ".", "affine_fourier", ".", "weight", ".", "detach", "(", ")", ".", "zero_", "(", ")", "\n", "self", ".", "affine_fourier", ".", "bias", ".", "detach", "(", ")", ".", "copy_", "(", "\n", "torch", ".", "tensor", "(", "[", "1", ",", "0", ",", "0", ",", "0", "]", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", ")", "\n", "\n", "", "self", ".", "conv1", "=", "StyledConv", "(", "\n", "self", ".", "channels", "[", "4", "]", ",", "self", ".", "channels", "[", "4", "]", ",", "kernel_size", ",", "style_dim", ",", "blur_kernel", "=", "blur_kernel", "\n", ")", "\n", "self", ".", "to_rgb1", "=", "ToRGB", "(", "self", ".", "channels", "[", "4", "]", ",", "style_dim", ",", "upsample", "=", "False", ")", "\n", "\n", "self", ".", "log_size", "=", "int", "(", "math", ".", "log", "(", "size", ",", "2", ")", ")", "\n", "self", ".", "num_layers", "=", "(", "self", ".", "log_size", "-", "2", ")", "*", "2", "+", "1", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "upsamples", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "to_rgbs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "noises", "=", "nn", ".", "Module", "(", ")", "\n", "if", "'mspe'", "in", "self", ".", "position", ":", "\n", "            ", "self", ".", "pes", "=", "nn", ".", "ModuleList", "(", ")", "\n", "", "for", "i", "in", "range", "(", "3", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "            ", "self", ".", "shift_h_dict", "[", "2", "**", "i", "]", "=", "0", "\n", "self", ".", "shift_w_dict", "[", "2", "**", "i", "]", "=", "0", "\n", "\n", "", "in_channel", "=", "self", ".", "channels", "[", "4", "]", "\n", "\n", "for", "layer_idx", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "            ", "res", "=", "(", "layer_idx", "+", "5", ")", "//", "2", "\n", "shape", "=", "[", "1", ",", "1", ",", "2", "**", "res", ",", "2", "**", "res", "]", "\n", "self", ".", "noises", ".", "register_buffer", "(", "f\"noise_{layer_idx}\"", ",", "torch", ".", "randn", "(", "*", "shape", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "3", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "            ", "out_channel", "=", "self", ".", "channels", "[", "2", "**", "i", "]", "\n", "\n", "self", ".", "convs", ".", "append", "(", "\n", "StyledConv", "(", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "style_dim", ",", "\n", "upsample", "=", "True", ",", "\n", "blur_kernel", "=", "blur_kernel", ",", "\n", ")", "\n", ")", "\n", "###### positional encoding ######", "\n", "if", "'mspe'", "in", "self", ".", "position", ":", "\n", "                ", "self", ".", "pes", ".", "append", "(", "PE2d", "(", "out_channel", ",", "2", "**", "i", ",", "2", "**", "i", ",", "scale", ",", "device", "=", "device", ")", ")", "\n", "\n", "", "self", ".", "convs", ".", "append", "(", "\n", "StyledConv", "(", "\n", "out_channel", ",", "out_channel", ",", "kernel_size", ",", "style_dim", ",", "blur_kernel", "=", "blur_kernel", "\n", ")", "\n", ")", "\n", "\n", "self", ".", "to_rgbs", ".", "append", "(", "ToRGB", "(", "out_channel", ",", "style_dim", ")", ")", "\n", "\n", "in_channel", "=", "out_channel", "\n", "\n", "", "self", ".", "n_latent", "=", "self", ".", "log_size", "*", "2", "-", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Generator.make_noise": [[511, 521], ["range", "torch.randn", "range", "noises.append", "torch.randn"], "methods", ["None"], ["", "def", "make_noise", "(", "self", ")", ":", "\n", "        ", "device", "=", "self", ".", "device", "\n", "\n", "noises", "=", "[", "torch", ".", "randn", "(", "1", ",", "1", ",", "2", "**", "2", ",", "2", "**", "2", ",", "device", "=", "device", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "3", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "            ", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "                ", "noises", ".", "append", "(", "torch", ".", "randn", "(", "1", ",", "1", ",", "2", "**", "i", ",", "2", "**", "i", ",", "device", "=", "device", ")", ")", "\n", "\n", "", "", "return", "noises", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Generator.mean_latent": [[522, 529], ["torch.randn", "model.Generator.style().mean", "model.Generator.style"], "methods", ["None"], ["", "def", "mean_latent", "(", "self", ",", "n_latent", ")", ":", "\n", "        ", "latent_in", "=", "torch", ".", "randn", "(", "\n", "n_latent", ",", "self", ".", "style_dim", ",", "device", "=", "self", ".", "device", "\n", ")", "\n", "latent", "=", "self", ".", "style", "(", "latent_in", ")", ".", "mean", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "latent", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Generator.get_latent": [[530, 532], ["model.Generator.style"], "methods", ["None"], ["", "def", "get_latent", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "style", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Generator.forward": [[533, 628], ["model.Generator.input", "model.Generator.conv1", "model.Generator.to_rgb1", "zip", "range", "range", "len", "styles[].unsqueeze().repeat", "styles[].unsqueeze().repeat", "torch.cat", "model.Generator.affine_fourier", "conv1", "conv2", "to_rgb", "model.Generator.style", "style_t.append", "styles[].unsqueeze().repeat", "random.randint", "getattr", "styles[].unsqueeze", "styles[].unsqueeze", "range", "styles[].unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "\n", "self", ",", "\n", "styles", ",", "\n", "return_latents", "=", "False", ",", "\n", "inject_index", "=", "None", ",", "\n", "truncation", "=", "1", ",", "\n", "truncation_latent", "=", "None", ",", "\n", "input_is_latent", "=", "False", ",", "\n", "noise", "=", "None", ",", "\n", "randomize_noise", "=", "True", ",", "\n", "shift_h", "=", "0", ",", "\n", "shift_w", "=", "0", ",", "\n", "transform", "=", "None", ",", "\n", ")", ":", "\n", "##### positional encoding #####", "\n", "# continuous roll", "\n", "        ", "if", "shift_h", ":", "\n", "            ", "for", "i", "in", "range", "(", "2", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "                ", "self", ".", "shift_h_dict", "[", "2", "**", "i", "]", "=", "shift_h", "/", "(", "self", ".", "size", "//", "(", "2", "**", "i", ")", ")", "\n", "", "", "if", "shift_w", ":", "\n", "            ", "for", "i", "in", "range", "(", "2", ",", "self", ".", "log_size", "+", "1", ")", ":", "\n", "                ", "self", ".", "shift_w_dict", "[", "2", "**", "i", "]", "=", "shift_w", "/", "(", "self", ".", "size", "//", "(", "2", "**", "i", ")", ")", "\n", "\n", "", "", "if", "not", "input_is_latent", ":", "\n", "            ", "styles", "=", "[", "self", ".", "style", "(", "s", ")", "for", "s", "in", "styles", "]", "\n", "\n", "", "if", "noise", "is", "None", ":", "\n", "            ", "if", "randomize_noise", ":", "\n", "                ", "noise", "=", "[", "None", "]", "*", "self", ".", "num_layers", "\n", "", "else", ":", "\n", "                ", "noise", "=", "[", "\n", "getattr", "(", "self", ".", "noises", ",", "f\"noise_{i}\"", ")", "for", "i", "in", "range", "(", "self", ".", "num_layers", ")", "\n", "]", "\n", "\n", "", "", "if", "truncation", "<", "1", ":", "\n", "            ", "style_t", "=", "[", "]", "\n", "\n", "for", "style", "in", "styles", ":", "\n", "                ", "style_t", ".", "append", "(", "\n", "truncation_latent", "+", "truncation", "*", "(", "style", "-", "truncation_latent", ")", "\n", ")", "\n", "\n", "", "styles", "=", "style_t", "\n", "\n", "", "if", "len", "(", "styles", ")", "<", "2", ":", "\n", "            ", "inject_index", "=", "self", ".", "n_latent", "\n", "\n", "if", "styles", "[", "0", "]", ".", "ndim", "<", "3", ":", "\n", "                ", "latent", "=", "styles", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "inject_index", ",", "1", ")", "\n", "\n", "", "else", ":", "\n", "                ", "latent", "=", "styles", "[", "0", "]", "\n", "\n", "", "", "else", ":", "\n", "            ", "if", "inject_index", "is", "None", ":", "\n", "                ", "inject_index", "=", "random", ".", "randint", "(", "1", ",", "self", ".", "n_latent", "-", "1", ")", "\n", "\n", "", "latent", "=", "styles", "[", "0", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "inject_index", ",", "1", ")", "\n", "latent2", "=", "styles", "[", "1", "]", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "n_latent", "-", "inject_index", ",", "1", ")", "\n", "\n", "latent", "=", "torch", ".", "cat", "(", "[", "latent", ",", "latent2", "]", ",", "1", ")", "\n", "\n", "", "if", "self", ".", "affine", "and", "transform", "is", "None", ":", "\n", "            ", "transform", "=", "self", ".", "affine_fourier", "(", "latent", ")", "\n", "\n", "#if 'pe' in self.position:", "\n", "", "out", "=", "self", ".", "input", "(", "latent", ",", "self", ".", "shift_h_dict", "[", "4", "]", ",", "self", ".", "shift_w_dict", "[", "4", "]", ",", "transform", "=", "transform", ")", "\n", "#else:", "\n", "#    out = self.input(latent)", "\n", "out", "=", "self", ".", "conv1", "(", "out", ",", "latent", "[", ":", ",", "0", "]", ",", "noise", "=", "noise", "[", "0", "]", ")", "\n", "\n", "skip", "=", "self", ".", "to_rgb1", "(", "out", ",", "latent", "[", ":", ",", "1", "]", ")", "\n", "\n", "i", "=", "1", "\n", "for", "conv1", ",", "conv2", ",", "noise1", ",", "noise2", ",", "to_rgb", "in", "zip", "(", "\n", "self", ".", "convs", "[", ":", ":", "2", "]", ",", "self", ".", "convs", "[", "1", ":", ":", "2", "]", ",", "noise", "[", "1", ":", ":", "2", "]", ",", "noise", "[", "2", ":", ":", "2", "]", ",", "self", ".", "to_rgbs", "\n", ")", ":", "\n", "            ", "out", "=", "conv1", "(", "out", ",", "latent", "[", ":", ",", "i", "]", ",", "noise", "=", "noise1", ")", "\n", "\n", "if", "'mspe'", "in", "self", ".", "position", ":", "\n", "                ", "res", "=", "8", "*", "(", "2", "**", "(", "(", "i", "-", "1", ")", "//", "2", ")", ")", "\n", "out", "=", "self", ".", "pes", "[", "(", "i", "-", "1", ")", "//", "2", "]", "(", "out", ",", "shift_h", "=", "self", ".", "shift_h_dict", "[", "res", "]", ",", "shift_w", "=", "self", ".", "shift_w_dict", "[", "res", "]", ")", "\n", "\n", "", "out", "=", "conv2", "(", "out", ",", "latent", "[", ":", ",", "i", "+", "1", "]", ",", "noise", "=", "noise2", ")", "\n", "skip", "=", "to_rgb", "(", "out", ",", "latent", "[", ":", ",", "i", "+", "2", "]", ",", "skip", ")", "\n", "\n", "i", "+=", "2", "\n", "\n", "", "image", "=", "skip", "\n", "\n", "if", "return_latents", ":", "\n", "            ", "return", "image", ",", "latent", "\n", "\n", "", "else", ":", "\n", "            ", "return", "image", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.ConvLayer.__init__": [[631, 673], ["layers.append", "torch.nn.Sequential.__init__", "layers.append", "model.EqualConv2d", "layers.append", "model.Blur", "op.FusedLeakyReLU", "len"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "downsample", "=", "False", ",", "\n", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ",", "\n", "bias", "=", "True", ",", "\n", "activate", "=", "True", ",", "\n", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "\n", "if", "downsample", ":", "\n", "            ", "factor", "=", "2", "\n", "p", "=", "(", "len", "(", "blur_kernel", ")", "-", "factor", ")", "+", "(", "kernel_size", "-", "1", ")", "\n", "pad0", "=", "(", "p", "+", "1", ")", "//", "2", "\n", "pad1", "=", "p", "//", "2", "\n", "\n", "layers", ".", "append", "(", "Blur", "(", "blur_kernel", ",", "pad", "=", "(", "pad0", ",", "pad1", ")", ")", ")", "\n", "\n", "stride", "=", "2", "\n", "self", ".", "padding", "=", "0", "\n", "\n", "", "else", ":", "\n", "            ", "stride", "=", "1", "\n", "self", ".", "padding", "=", "kernel_size", "//", "2", "\n", "\n", "", "layers", ".", "append", "(", "\n", "EqualConv2d", "(", "\n", "in_channel", ",", "\n", "out_channel", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "self", ".", "padding", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "bias", "and", "not", "activate", ",", "\n", ")", "\n", ")", "\n", "\n", "if", "activate", ":", "\n", "            ", "layers", ".", "append", "(", "FusedLeakyReLU", "(", "out_channel", ",", "bias", "=", "bias", ")", ")", "\n", "\n", "", "super", "(", ")", ".", "__init__", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.ResBlock.__init__": [[676, 684], ["torch.nn.Module.__init__", "model.ConvLayer", "model.ConvLayer", "model.ConvLayer"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "out_channel", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "ConvLayer", "(", "in_channel", ",", "in_channel", ",", "3", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "in_channel", ",", "out_channel", ",", "3", ",", "downsample", "=", "True", ")", "\n", "\n", "self", ".", "skip", "=", "ConvLayer", "(", "\n", "in_channel", ",", "out_channel", ",", "1", ",", "downsample", "=", "True", ",", "activate", "=", "False", ",", "bias", "=", "False", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.ResBlock.forward": [[686, 694], ["model.ResBlock.conv1", "model.ResBlock.conv2", "model.ResBlock.skip", "math.sqrt"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "input", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "skip", "=", "self", ".", "skip", "(", "input", ")", "\n", "out", "=", "(", "out", "+", "skip", ")", "/", "math", ".", "sqrt", "(", "2", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Discriminator.__init__": [[697, 734], ["torch.nn.Module.__init__", "int", "range", "torch.nn.Sequential", "model.ConvLayer", "torch.nn.Sequential", "model.ConvLayer", "math.log", "convs.append", "model.EqualLinear", "model.EqualLinear", "model.ResBlock"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "channel_multiplier", "=", "2", ",", "blur_kernel", "=", "[", "1", ",", "3", ",", "3", ",", "1", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "channels", "=", "{", "\n", "4", ":", "512", ",", "\n", "8", ":", "512", ",", "\n", "16", ":", "512", ",", "\n", "32", ":", "512", ",", "\n", "64", ":", "256", "*", "channel_multiplier", ",", "\n", "128", ":", "128", "*", "channel_multiplier", ",", "\n", "256", ":", "64", "*", "channel_multiplier", ",", "\n", "512", ":", "32", "*", "channel_multiplier", ",", "\n", "1024", ":", "16", "*", "channel_multiplier", ",", "\n", "}", "\n", "\n", "convs", "=", "[", "ConvLayer", "(", "3", ",", "channels", "[", "size", "]", ",", "1", ")", "]", "\n", "\n", "log_size", "=", "int", "(", "math", ".", "log", "(", "size", ",", "2", ")", ")", "\n", "\n", "in_channel", "=", "channels", "[", "size", "]", "\n", "\n", "for", "i", "in", "range", "(", "log_size", ",", "2", ",", "-", "1", ")", ":", "\n", "            ", "out_channel", "=", "channels", "[", "2", "**", "(", "i", "-", "1", ")", "]", "\n", "\n", "convs", ".", "append", "(", "ResBlock", "(", "in_channel", ",", "out_channel", ",", "blur_kernel", ")", ")", "\n", "\n", "in_channel", "=", "out_channel", "\n", "\n", "", "self", ".", "convs", "=", "nn", ".", "Sequential", "(", "*", "convs", ")", "\n", "\n", "self", ".", "stddev_group", "=", "4", "\n", "self", ".", "stddev_feat", "=", "1", "\n", "\n", "self", ".", "final_conv", "=", "ConvLayer", "(", "in_channel", "+", "1", ",", "channels", "[", "4", "]", ",", "3", ")", "\n", "self", ".", "final_linear", "=", "nn", ".", "Sequential", "(", "\n", "EqualLinear", "(", "channels", "[", "4", "]", "*", "4", "*", "4", ",", "channels", "[", "4", "]", ",", "activation", "=", "\"fused_lrelu\"", ")", ",", "\n", "EqualLinear", "(", "channels", "[", "4", "]", ",", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.Discriminator.forward": [[736, 755], ["model.Discriminator.convs", "min", "model.Discriminator.view", "torch.sqrt", "stddev.repeat.repeat.mean().squeeze", "stddev.repeat.repeat.repeat", "torch.cat", "model.Discriminator.final_conv", "model.Discriminator.view", "model.Discriminator.final_linear", "stddev.repeat.repeat.var", "stddev.repeat.repeat.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "out", "=", "self", ".", "convs", "(", "input", ")", "\n", "\n", "batch", ",", "channel", ",", "height", ",", "width", "=", "out", ".", "shape", "\n", "group", "=", "min", "(", "batch", ",", "self", ".", "stddev_group", ")", "\n", "stddev", "=", "out", ".", "view", "(", "\n", "group", ",", "-", "1", ",", "self", ".", "stddev_feat", ",", "channel", "//", "self", ".", "stddev_feat", ",", "height", ",", "width", "\n", ")", "\n", "stddev", "=", "torch", ".", "sqrt", "(", "stddev", ".", "var", "(", "0", ",", "unbiased", "=", "False", ")", "+", "1e-8", ")", "\n", "stddev", "=", "stddev", ".", "mean", "(", "[", "2", ",", "3", ",", "4", "]", ",", "keepdims", "=", "True", ")", ".", "squeeze", "(", "2", ")", "\n", "stddev", "=", "stddev", ".", "repeat", "(", "group", ",", "1", ",", "height", ",", "width", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "stddev", "]", ",", "1", ")", "\n", "\n", "out", "=", "self", ".", "final_conv", "(", "out", ")", "\n", "\n", "out", "=", "out", ".", "view", "(", "batch", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "final_linear", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.PE2d.__init__": [[758, 774], ["torch.nn.Module.__init__", "int", "int", "torch.zeros", "int", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.nn.Parameter", "ValueError", "torch.exp", "torch.ones", "torch.arange", "torch.arange", "torch.arange", "math.log"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "height", ",", "width", ",", "scale", "=", "1.0", ",", "device", "=", "\"cuda\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "channel", "%", "4", "!=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Cannot use sin/cos positional encoding with \"", "\n", "\"odd dimension (got dim={:d})\"", ".", "format", "(", "channel", ")", ")", "\n", "", "height", "=", "int", "(", "height", "*", "scale", ")", "\n", "width", "=", "int", "(", "width", "*", "scale", ")", "\n", "self", ".", "pe", "=", "torch", ".", "zeros", "(", "channel", ",", "height", ",", "width", ",", "device", "=", "device", ")", "\n", "\n", "# Each dimension use half of d_model", "\n", "self", ".", "d_model", "=", "int", "(", "channel", "/", "2", ")", "\n", "self", ".", "div_term", "=", "torch", ".", "exp", "(", "torch", ".", "arange", "(", "0.", ",", "self", ".", "d_model", ",", "2", ")", "*", "-", "(", "math", ".", "log", "(", "10000.0", ")", "/", "self", ".", "d_model", ")", ")", "/", "scale", "\n", "self", ".", "pos_h", "=", "torch", ".", "arange", "(", "0.", ",", "height", ")", ".", "unsqueeze", "(", "1", ")", "\n", "self", ".", "pos_w", "=", "torch", ".", "arange", "(", "0.", ",", "width", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.PE2d.forward": [[775, 787], ["torch.sin().transpose().unsqueeze().repeat", "torch.cos().transpose().unsqueeze().repeat", "torch.sin().transpose().unsqueeze().repeat", "torch.cos().transpose().unsqueeze().repeat", "torch.roll", "torch.roll", "round", "round", "round", "round", "torch.sin().transpose().unsqueeze", "torch.cos().transpose().unsqueeze", "torch.sin().transpose().unsqueeze", "torch.cos().transpose().unsqueeze", "model.PE2d.pe.unsqueeze", "torch.sin().transpose", "torch.cos().transpose", "torch.sin().transpose", "torch.cos().transpose", "torch.sin", "torch.cos", "torch.sin", "torch.cos"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "shift_h", "=", "0", ",", "shift_w", "=", "0", ")", ":", "\n", "# continuous roll", "\n", "        ", "pos_h", "=", "torch", ".", "roll", "(", "self", ".", "pos_h", ",", "round", "(", "shift_h", ")", ",", "0", ")", "+", "(", "round", "(", "shift_h", ")", "-", "shift_h", ")", "\n", "pos_w", "=", "torch", ".", "roll", "(", "self", ".", "pos_w", ",", "round", "(", "shift_w", ")", ",", "0", ")", "+", "(", "round", "(", "shift_w", ")", "-", "shift_w", ")", "\n", "\n", "self", ".", "pe", "[", "0", ":", "self", ".", "d_model", ":", "2", ",", ":", ",", ":", "]", "=", "torch", ".", "sin", "(", "pos_w", "*", "self", ".", "div_term", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "pos_h", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "self", ".", "pe", "[", "1", ":", "self", ".", "d_model", ":", "2", ",", ":", ",", ":", "]", "=", "torch", ".", "cos", "(", "pos_w", "*", "self", ".", "div_term", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "pos_h", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "\n", "self", ".", "pe", "[", "self", ".", "d_model", ":", ":", "2", ",", ":", ",", ":", "]", "=", "torch", ".", "sin", "(", "pos_h", "*", "self", ".", "div_term", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "pos_w", ".", "shape", "[", "0", "]", ")", "\n", "self", ".", "pe", "[", "self", ".", "d_model", "+", "1", ":", ":", "2", ",", ":", ",", ":", "]", "=", "torch", ".", "cos", "(", "pos_h", "*", "self", ".", "div_term", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "pos_w", ".", "shape", "[", "0", "]", ")", "\n", "\n", "return", "x", "+", "self", ".", "gamma", "*", "self", ".", "pe", ".", "unsqueeze", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.PE2dStart.__init__": [[789, 803], ["torch.nn.Module.__init__", "int", "int", "torch.zeros", "int", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "ValueError", "torch.exp", "torch.arange", "torch.arange", "torch.arange", "math.log"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "height", ",", "width", ",", "scale", "=", "1.0", ",", "device", "=", "\"cuda\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "channel", "%", "4", "!=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Cannot use sin/cos positional encoding with \"", "\n", "\"odd dimension (got dim={:d})\"", ".", "format", "(", "channel", ")", ")", "\n", "", "height", "=", "int", "(", "height", "*", "scale", ")", "\n", "width", "=", "int", "(", "width", "*", "scale", ")", "\n", "self", ".", "pe", "=", "torch", ".", "zeros", "(", "channel", ",", "height", ",", "width", ",", "device", "=", "device", ")", "\n", "\n", "# Each dimension use half of d_model", "\n", "self", ".", "d_model", "=", "int", "(", "channel", "/", "2", ")", "\n", "self", ".", "div_term", "=", "torch", ".", "exp", "(", "torch", ".", "arange", "(", "0.", ",", "self", ".", "d_model", ",", "2", ")", "*", "-", "(", "math", ".", "log", "(", "10000.0", ")", "/", "self", ".", "d_model", ")", ")", "/", "scale", "\n", "self", ".", "pos_h", "=", "torch", ".", "arange", "(", "0.", ",", "height", ")", ".", "unsqueeze", "(", "1", ")", "\n", "self", ".", "pos_w", "=", "torch", ".", "arange", "(", "0.", ",", "width", ")", ".", "unsqueeze", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.PE2dStart.forward": [[804, 828], ["torch.sin().transpose().unsqueeze().repeat", "torch.cos().transpose().unsqueeze().repeat", "torch.sin().transpose().unsqueeze().repeat", "torch.cos().transpose().unsqueeze().repeat", "model.PE2dStart.pe.unsqueeze().repeat", "torch.norm", "affine.view().unbind", "torch.roll", "torch.roll", "torch.sin().transpose().unsqueeze", "torch.cos().transpose().unsqueeze", "torch.sin().transpose().unsqueeze", "torch.cos().transpose().unsqueeze", "model.PE2dStart.pe.unsqueeze", "affine.view", "round", "round", "round", "round", "torch.sin().transpose", "torch.cos().transpose", "torch.sin().transpose", "torch.cos().transpose", "torch.sin", "torch.cos", "torch.sin", "torch.cos"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "shift_h", "=", "0", ",", "shift_w", "=", "0", ",", "transform", "=", "None", ")", ":", "\n", "# TODO", "\n", "        ", "if", "transform", "is", "not", "None", ":", "# from alias-free gan, not implemented yet", "\n", "            ", "norm", "=", "torch", ".", "norm", "(", "transform", "[", ":", ",", ":", "2", "]", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "affine", "=", "transform", "/", "(", "norm", "+", "1e-8", ")", "\n", "\n", "r_c", ",", "r_s", ",", "t_x", ",", "t_y", "=", "affine", ".", "view", "(", "\n", "affine", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ",", "affine", ".", "shape", "[", "-", "1", "]", "\n", ")", ".", "unbind", "(", "-", "1", ")", "\n", "\n", "pos_h", "=", "-", "r_s", "*", "self", ".", "pos_w", "+", "r_c", "*", "self", ".", "pos_h", "-", "t_y", "\n", "pos_w", "=", "r_c", "*", "self", ".", "pos_w", "+", "r_s", "*", "self", ".", "pos_h", "-", "t_x", "\n", "", "else", ":", "# our method", "\n", "# continuous roll", "\n", "            ", "pos_h", "=", "torch", ".", "roll", "(", "self", ".", "pos_h", ",", "round", "(", "shift_h", ")", ",", "0", ")", "+", "(", "round", "(", "shift_h", ")", "-", "shift_h", ")", "\n", "pos_w", "=", "torch", ".", "roll", "(", "self", ".", "pos_w", ",", "round", "(", "shift_w", ")", ",", "0", ")", "+", "(", "round", "(", "shift_w", ")", "-", "shift_w", ")", "\n", "\n", "", "self", ".", "pe", "[", "0", ":", "self", ".", "d_model", ":", "2", ",", ":", ",", ":", "]", "=", "torch", ".", "sin", "(", "pos_w", "*", "self", ".", "div_term", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "pos_h", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "self", ".", "pe", "[", "1", ":", "self", ".", "d_model", ":", "2", ",", ":", ",", ":", "]", "=", "torch", ".", "cos", "(", "pos_w", "*", "self", ".", "div_term", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "pos_h", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "\n", "self", ".", "pe", "[", "self", ".", "d_model", ":", ":", "2", ",", ":", ",", ":", "]", "=", "torch", ".", "sin", "(", "pos_h", "*", "self", ".", "div_term", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "pos_w", ".", "shape", "[", "0", "]", ")", "\n", "self", ".", "pe", "[", "self", ".", "d_model", "+", "1", ":", ":", "2", ",", ":", ",", ":", "]", "=", "torch", ".", "cos", "(", "pos_h", "*", "self", ".", "div_term", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "pos_w", ".", "shape", "[", "0", "]", ")", "\n", "\n", "return", "self", ".", "pe", ".", "unsqueeze", "(", "0", ")", ".", "repeat", "(", "x", ".", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.model.make_kernel": [[22, 31], ["torch.tensor", "torch.tensor.sum"], "function", ["None"], ["", "", "def", "make_kernel", "(", "k", ")", ":", "\n", "    ", "k", "=", "torch", ".", "tensor", "(", "k", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "\n", "if", "k", ".", "ndim", "==", "1", ":", "\n", "        ", "k", "=", "k", "[", "None", ",", ":", "]", "*", "k", "[", ":", ",", "None", "]", "\n", "\n", "", "k", "/=", "k", ".", "sum", "(", ")", "\n", "\n", "return", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.prepare_data.resize_and_convert": [[13, 21], ["torchvision.transforms.functional.resize", "torchvision.transforms.functional.center_crop", "io.BytesIO", "trans_fn.center_crop.save", "io.BytesIO.getvalue"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save"], ["def", "resize_and_convert", "(", "img", ",", "size", ",", "resample", ",", "quality", "=", "100", ")", ":", "\n", "    ", "img", "=", "trans_fn", ".", "resize", "(", "img", ",", "size", ",", "resample", ")", "\n", "img", "=", "trans_fn", ".", "center_crop", "(", "img", ",", "size", ")", "\n", "buffer", "=", "BytesIO", "(", ")", "\n", "img", ".", "save", "(", "buffer", ",", "format", "=", "\"jpeg\"", ",", "quality", "=", "quality", ")", "\n", "val", "=", "buffer", ".", "getvalue", "(", ")", "\n", "\n", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.prepare_data.resize_multiple": [[23, 32], ["imgs.append", "prepare_data.resize_and_convert"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.prepare_data.resize_and_convert"], ["", "def", "resize_multiple", "(", "\n", "img", ",", "sizes", "=", "(", "128", ",", "256", ",", "512", ",", "1024", ")", ",", "resample", "=", "Image", ".", "LANCZOS", ",", "quality", "=", "100", "\n", ")", ":", "\n", "    ", "imgs", "=", "[", "]", "\n", "\n", "for", "size", "in", "sizes", ":", "\n", "        ", "imgs", ".", "append", "(", "resize_and_convert", "(", "img", ",", "size", ",", "resample", ",", "quality", ")", ")", "\n", "\n", "", "return", "imgs", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.prepare_data.resize_worker": [[34, 41], ["PIL.Image.open", "img.convert.convert", "prepare_data.resize_multiple"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.prepare_data.resize_multiple"], ["", "def", "resize_worker", "(", "img_file", ",", "sizes", ",", "resample", ")", ":", "\n", "    ", "i", ",", "file", "=", "img_file", "\n", "img", "=", "Image", ".", "open", "(", "file", ")", "\n", "img", "=", "img", ".", "convert", "(", "\"RGB\"", ")", "\n", "out", "=", "resize_multiple", "(", "img", ",", "sizes", "=", "sizes", ",", "resample", "=", "resample", ")", "\n", "\n", "return", "i", ",", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.prepare_data.prepare": [[43, 64], ["functools.partial", "sorted", "multiprocessing.Pool", "tqdm.tqdm", "enumerate", "pool.imap_unordered", "zip", "env.begin", "txn.put", "str().encode", "env.begin", "txn.put", "str", "str().zfill", "str"], "function", ["None"], ["", "def", "prepare", "(", "\n", "env", ",", "dataset", ",", "n_worker", ",", "sizes", "=", "(", "128", ",", "256", ",", "512", ",", "1024", ")", ",", "resample", "=", "Image", ".", "LANCZOS", "\n", ")", ":", "\n", "    ", "resize_fn", "=", "partial", "(", "resize_worker", ",", "sizes", "=", "sizes", ",", "resample", "=", "resample", ")", "\n", "\n", "files", "=", "sorted", "(", "dataset", ".", "imgs", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", ")", "\n", "files", "=", "[", "(", "i", ",", "file", ")", "for", "i", ",", "(", "file", ",", "label", ")", "in", "enumerate", "(", "files", ")", "]", "\n", "total", "=", "0", "\n", "\n", "with", "multiprocessing", ".", "Pool", "(", "n_worker", ")", "as", "pool", ":", "\n", "        ", "for", "i", ",", "imgs", "in", "tqdm", "(", "pool", ".", "imap_unordered", "(", "resize_fn", ",", "files", ")", ")", ":", "\n", "            ", "for", "size", ",", "img", "in", "zip", "(", "sizes", ",", "imgs", ")", ":", "\n", "                ", "key", "=", "f\"{size}-{str(i).zfill(5)}\"", ".", "encode", "(", "\"utf-8\"", ")", "\n", "\n", "with", "env", ".", "begin", "(", "write", "=", "True", ")", "as", "txn", ":", "\n", "                    ", "txn", ".", "put", "(", "key", ",", "img", ")", "\n", "\n", "", "", "total", "+=", "1", "\n", "\n", "", "with", "env", ".", "begin", "(", "write", "=", "True", ")", "as", "txn", ":", "\n", "            ", "txn", ".", "put", "(", "\"length\"", ".", "encode", "(", "\"utf-8\"", ")", ",", "str", "(", "total", ")", ".", "encode", "(", "\"utf-8\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.fid.extract_feature_from_samples": [[14, 32], ["torch.no_grad", "tqdm.tqdm", "torch.cat", "torch.randn", "g", "[].view", "torch.cat.append", "[].view.to", "inception"], "function", ["None"], ["@", "torch", ".", "no_grad", "(", ")", "\n", "def", "extract_feature_from_samples", "(", "\n", "generator", ",", "inception", ",", "truncation", ",", "truncation_latent", ",", "batch_size", ",", "n_sample", ",", "device", "\n", ")", ":", "\n", "    ", "n_batch", "=", "n_sample", "//", "batch_size", "\n", "resid", "=", "n_sample", "-", "(", "n_batch", "*", "batch_size", ")", "\n", "batch_sizes", "=", "[", "batch_size", "]", "*", "n_batch", "+", "[", "resid", "]", "\n", "features", "=", "[", "]", "\n", "\n", "for", "batch", "in", "tqdm", "(", "batch_sizes", ")", ":", "\n", "        ", "latent", "=", "torch", ".", "randn", "(", "batch", ",", "512", ",", "device", "=", "device", ")", "\n", "img", ",", "_", "=", "g", "(", "[", "latent", "]", ",", "truncation", "=", "truncation", ",", "truncation_latent", "=", "truncation_latent", ")", "\n", "feat", "=", "inception", "(", "img", ")", "[", "0", "]", ".", "view", "(", "img", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "features", ".", "append", "(", "feat", ".", "to", "(", "\"cpu\"", ")", ")", "\n", "\n", "", "features", "=", "torch", ".", "cat", "(", "features", ",", "0", ")", "\n", "\n", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.None.fid.calc_fid": [[34, 58], ["scipy.linalg.sqrtm", "numpy.iscomplexobj", "numpy.isfinite().all", "print", "scipy.linalg.sqrtm", "numpy.eye", "numpy.allclose", "numpy.max", "ValueError", "numpy.trace", "numpy.trace", "numpy.trace", "numpy.isfinite", "numpy.abs", "numpy.diagonal"], "function", ["None"], ["", "def", "calc_fid", "(", "sample_mean", ",", "sample_cov", ",", "real_mean", ",", "real_cov", ",", "eps", "=", "1e-6", ")", ":", "\n", "    ", "cov_sqrt", ",", "_", "=", "linalg", ".", "sqrtm", "(", "sample_cov", "@", "real_cov", ",", "disp", "=", "False", ")", "\n", "\n", "if", "not", "np", ".", "isfinite", "(", "cov_sqrt", ")", ".", "all", "(", ")", ":", "\n", "        ", "print", "(", "\"product of cov matrices is singular\"", ")", "\n", "offset", "=", "np", ".", "eye", "(", "sample_cov", ".", "shape", "[", "0", "]", ")", "*", "eps", "\n", "cov_sqrt", "=", "linalg", ".", "sqrtm", "(", "(", "sample_cov", "+", "offset", ")", "@", "(", "real_cov", "+", "offset", ")", ")", "\n", "\n", "", "if", "np", ".", "iscomplexobj", "(", "cov_sqrt", ")", ":", "\n", "        ", "if", "not", "np", ".", "allclose", "(", "np", ".", "diagonal", "(", "cov_sqrt", ")", ".", "imag", ",", "0", ",", "atol", "=", "1e-3", ")", ":", "\n", "            ", "m", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "cov_sqrt", ".", "imag", ")", ")", "\n", "\n", "raise", "ValueError", "(", "f\"Imaginary component {m}\"", ")", "\n", "\n", "", "cov_sqrt", "=", "cov_sqrt", ".", "real", "\n", "\n", "", "mean_diff", "=", "sample_mean", "-", "real_mean", "\n", "mean_norm", "=", "mean_diff", "@", "mean_diff", "\n", "\n", "trace", "=", "np", ".", "trace", "(", "sample_cov", ")", "+", "np", ".", "trace", "(", "real_cov", ")", "-", "2", "*", "np", ".", "trace", "(", "cov_sqrt", ")", "\n", "\n", "fid", "=", "mean_norm", "+", "trace", "\n", "\n", "return", "fid", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.PNetLin.__init__": [[28, 63], ["torch.Module.__init__", "networks_basic.ScalingLayer", "len", "net_type", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer", "networks_basic.NetLinLayer"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pnet_type", "=", "'vgg'", ",", "pnet_rand", "=", "False", ",", "pnet_tune", "=", "False", ",", "use_dropout", "=", "True", ",", "spatial", "=", "False", ",", "version", "=", "'0.1'", ",", "lpips", "=", "True", ")", ":", "\n", "        ", "super", "(", "PNetLin", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "pnet_type", "=", "pnet_type", "\n", "self", ".", "pnet_tune", "=", "pnet_tune", "\n", "self", ".", "pnet_rand", "=", "pnet_rand", "\n", "self", ".", "spatial", "=", "spatial", "\n", "self", ".", "lpips", "=", "lpips", "\n", "self", ".", "version", "=", "version", "\n", "self", ".", "scaling_layer", "=", "ScalingLayer", "(", ")", "\n", "\n", "if", "(", "self", ".", "pnet_type", "in", "[", "'vgg'", ",", "'vgg16'", "]", ")", ":", "\n", "            ", "net_type", "=", "pn", ".", "vgg16", "\n", "self", ".", "chns", "=", "[", "64", ",", "128", ",", "256", ",", "512", ",", "512", "]", "\n", "", "elif", "(", "self", ".", "pnet_type", "==", "'alex'", ")", ":", "\n", "            ", "net_type", "=", "pn", ".", "alexnet", "\n", "self", ".", "chns", "=", "[", "64", ",", "192", ",", "384", ",", "256", ",", "256", "]", "\n", "", "elif", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "\n", "            ", "net_type", "=", "pn", ".", "squeezenet", "\n", "self", ".", "chns", "=", "[", "64", ",", "128", ",", "256", ",", "384", ",", "384", ",", "512", ",", "512", "]", "\n", "", "self", ".", "L", "=", "len", "(", "self", ".", "chns", ")", "\n", "\n", "self", ".", "net", "=", "net_type", "(", "pretrained", "=", "not", "self", ".", "pnet_rand", ",", "requires_grad", "=", "self", ".", "pnet_tune", ")", "\n", "\n", "if", "(", "lpips", ")", ":", "\n", "            ", "self", ".", "lin0", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "0", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin1", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "1", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin2", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "2", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin3", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "3", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin4", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "4", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lins", "=", "[", "self", ".", "lin0", ",", "self", ".", "lin1", ",", "self", ".", "lin2", ",", "self", ".", "lin3", ",", "self", ".", "lin4", "]", "\n", "if", "(", "self", ".", "pnet_type", "==", "'squeeze'", ")", ":", "# 7 layers for squeezenet", "\n", "                ", "self", ".", "lin5", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "5", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lin6", "=", "NetLinLayer", "(", "self", ".", "chns", "[", "6", "]", ",", "use_dropout", "=", "use_dropout", ")", "\n", "self", ".", "lins", "+=", "[", "self", ".", "lin5", ",", "self", ".", "lin6", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.PNetLin.forward": [[64, 93], ["range", "range", "networks_basic.PNetLin.net.forward", "networks_basic.PNetLin.net.forward", "networks_basic.PNetLin.scaling_layer", "networks_basic.PNetLin.scaling_layer", "lpips.normalize_tensor", "lpips.normalize_tensor", "networks_basic.upsample", "networks_basic.spatial_average", "networks_basic.upsample", "networks_basic.spatial_average", "networks_basic.PNetLin.lins[].model", "range", "networks_basic.PNetLin.lins[].model", "range", "diffs[].sum", "range", "diffs[].sum", "range"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.forward", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.forward", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.normalize_tensor", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.normalize_tensor", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.upsample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.spatial_average", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.upsample", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.spatial_average"], ["", "", "", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retPerLayer", "=", "False", ")", ":", "\n", "# v0.0 - original release had a bug, where input was not scaled", "\n", "        ", "in0_input", ",", "in1_input", "=", "(", "self", ".", "scaling_layer", "(", "in0", ")", ",", "self", ".", "scaling_layer", "(", "in1", ")", ")", "if", "self", ".", "version", "==", "'0.1'", "else", "(", "in0", ",", "in1", ")", "\n", "outs0", ",", "outs1", "=", "self", ".", "net", ".", "forward", "(", "in0_input", ")", ",", "self", ".", "net", ".", "forward", "(", "in1_input", ")", "\n", "feats0", ",", "feats1", ",", "diffs", "=", "{", "}", ",", "{", "}", ",", "{", "}", "\n", "\n", "for", "kk", "in", "range", "(", "self", ".", "L", ")", ":", "\n", "            ", "feats0", "[", "kk", "]", ",", "feats1", "[", "kk", "]", "=", "util", ".", "normalize_tensor", "(", "outs0", "[", "kk", "]", ")", ",", "util", ".", "normalize_tensor", "(", "outs1", "[", "kk", "]", ")", "\n", "diffs", "[", "kk", "]", "=", "(", "feats0", "[", "kk", "]", "-", "feats1", "[", "kk", "]", ")", "**", "2", "\n", "\n", "", "if", "(", "self", ".", "lpips", ")", ":", "\n", "            ", "if", "(", "self", ".", "spatial", ")", ":", "\n", "                ", "res", "=", "[", "upsample", "(", "self", ".", "lins", "[", "kk", "]", ".", "model", "(", "diffs", "[", "kk", "]", ")", ",", "out_H", "=", "in0", ".", "shape", "[", "2", "]", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "]", "\n", "", "else", ":", "\n", "                ", "res", "=", "[", "spatial_average", "(", "self", ".", "lins", "[", "kk", "]", ".", "model", "(", "diffs", "[", "kk", "]", ")", ",", "keepdim", "=", "True", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "]", "\n", "", "", "else", ":", "\n", "            ", "if", "(", "self", ".", "spatial", ")", ":", "\n", "                ", "res", "=", "[", "upsample", "(", "diffs", "[", "kk", "]", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ",", "out_H", "=", "in0", ".", "shape", "[", "2", "]", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "]", "\n", "", "else", ":", "\n", "                ", "res", "=", "[", "spatial_average", "(", "diffs", "[", "kk", "]", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ",", "keepdim", "=", "True", ")", "for", "kk", "in", "range", "(", "self", ".", "L", ")", "]", "\n", "\n", "", "", "val", "=", "res", "[", "0", "]", "\n", "for", "l", "in", "range", "(", "1", ",", "self", ".", "L", ")", ":", "\n", "            ", "val", "+=", "res", "[", "l", "]", "\n", "\n", "", "if", "(", "retPerLayer", ")", ":", "\n", "            ", "return", "(", "val", ",", "res", ")", "\n", "", "else", ":", "\n", "            ", "return", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.ScalingLayer.__init__": [[95, 99], ["torch.Module.__init__", "networks_basic.ScalingLayer.register_buffer", "networks_basic.ScalingLayer.register_buffer", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ScalingLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "register_buffer", "(", "'shift'", ",", "torch", ".", "Tensor", "(", "[", "-", ".030", ",", "-", ".088", ",", "-", ".188", "]", ")", "[", "None", ",", ":", ",", "None", ",", "None", "]", ")", "\n", "self", ".", "register_buffer", "(", "'scale'", ",", "torch", ".", "Tensor", "(", "[", ".458", ",", ".448", ",", ".450", "]", ")", "[", "None", ",", ":", ",", "None", ",", "None", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.ScalingLayer.forward": [[100, 102], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "return", "(", "inp", "-", "self", ".", "shift", ")", "/", "self", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.NetLinLayer.__init__": [[106, 112], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["def", "__init__", "(", "self", ",", "chn_in", ",", "chn_out", "=", "1", ",", "use_dropout", "=", "False", ")", ":", "\n", "        ", "super", "(", "NetLinLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "nn", ".", "Dropout", "(", ")", ",", "]", "if", "(", "use_dropout", ")", "else", "[", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "chn_in", ",", "chn_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "]", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.Dist2LogitLayer.__init__": [[116, 127], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["def", "__init__", "(", "self", ",", "chn_mid", "=", "32", ",", "use_sigmoid", "=", "True", ")", ":", "\n", "        ", "super", "(", "Dist2LogitLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "nn", ".", "Conv2d", "(", "5", ",", "chn_mid", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "chn_mid", ",", "chn_mid", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "LeakyReLU", "(", "0.2", ",", "True", ")", ",", "]", "\n", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "chn_mid", ",", "1", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "]", "\n", "if", "(", "use_sigmoid", ")", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "Sigmoid", "(", ")", ",", "]", "\n", "", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.Dist2LogitLayer.forward": [[128, 130], ["networks_basic.Dist2LogitLayer.model.forward", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.forward"], ["", "def", "forward", "(", "self", ",", "d0", ",", "d1", ",", "eps", "=", "0.1", ")", ":", "\n", "        ", "return", "self", ".", "model", ".", "forward", "(", "torch", ".", "cat", "(", "(", "d0", ",", "d1", ",", "d0", "-", "d1", ",", "d0", "/", "(", "d1", "+", "eps", ")", ",", "d1", "/", "(", "d0", "+", "eps", ")", ")", ",", "dim", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.BCERankingLoss.__init__": [[132, 137], ["torch.Module.__init__", "networks_basic.Dist2LogitLayer", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss", "torch.nn.BCELoss"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "chn_mid", "=", "32", ")", ":", "\n", "        ", "super", "(", "BCERankingLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "Dist2LogitLayer", "(", "chn_mid", "=", "chn_mid", ")", "\n", "# self.parameters = list(self.net.parameters())", "\n", "self", ".", "loss", "=", "torch", ".", "nn", ".", "BCELoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.BCERankingLoss.forward": [[138, 142], ["networks_basic.BCERankingLoss.net.forward", "networks_basic.BCERankingLoss.loss"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.forward"], ["", "def", "forward", "(", "self", ",", "d0", ",", "d1", ",", "judge", ")", ":", "\n", "        ", "per", "=", "(", "judge", "+", "1.", ")", "/", "2.", "\n", "self", ".", "logit", "=", "self", ".", "net", ".", "forward", "(", "d0", ",", "d1", ")", "\n", "return", "self", ".", "loss", "(", "self", ".", "logit", ",", "per", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.FakeNet.__init__": [[145, 149], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_gpu", "=", "True", ",", "colorspace", "=", "'Lab'", ")", ":", "\n", "        ", "super", "(", "FakeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "colorspace", "=", "colorspace", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.L2.forward": [[152, 166], ["in0.size", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "in0.size", "lpips.l2().astype", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "ret_var.cuda.cuda.cuda", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "lpips.l2", "lpips.tensor2np", "lpips.tensor2np", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "lpips.tensor2tensorlab", "lpips.tensor2tensorlab", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.l2", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2np", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2np", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2tensorlab", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2tensorlab"], ["    ", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retPerLayer", "=", "None", ")", ":", "\n", "        ", "assert", "(", "in0", ".", "size", "(", ")", "[", "0", "]", "==", "1", ")", "# currently only supports batchSize 1", "\n", "\n", "if", "(", "self", ".", "colorspace", "==", "'RGB'", ")", ":", "\n", "            ", "(", "N", ",", "C", ",", "X", ",", "Y", ")", "=", "in0", ".", "size", "(", ")", "\n", "value", "=", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "torch", ".", "mean", "(", "(", "in0", "-", "in1", ")", "**", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "N", ",", "1", ",", "X", ",", "Y", ")", ",", "dim", "=", "2", ")", ".", "view", "(", "N", ",", "1", ",", "1", ",", "Y", ")", ",", "dim", "=", "3", ")", ".", "view", "(", "N", ")", "\n", "return", "value", "\n", "", "elif", "(", "self", ".", "colorspace", "==", "'Lab'", ")", ":", "\n", "            ", "value", "=", "util", ".", "l2", "(", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in0", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "\n", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in1", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "range", "=", "100.", ")", ".", "astype", "(", "'float'", ")", "\n", "ret_var", "=", "Variable", "(", "torch", ".", "Tensor", "(", "(", "value", ",", ")", ")", ")", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "                ", "ret_var", "=", "ret_var", ".", "cuda", "(", ")", "\n", "", "return", "ret_var", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.DSSIM.forward": [[169, 181], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "lpips.dssim().astype", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "ret_var.cuda.cuda.cuda", "in0.size", "lpips.dssim().astype", "lpips.dssim", "lpips.dssim", "lpips.tensor2im", "lpips.tensor2im", "lpips.tensor2np", "lpips.tensor2np", "lpips.tensor2tensorlab", "lpips.tensor2tensorlab"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.dssim", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.dssim", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2im", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2im", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2np", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2np", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2tensorlab", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2tensorlab"], ["    ", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retPerLayer", "=", "None", ")", ":", "\n", "        ", "assert", "(", "in0", ".", "size", "(", ")", "[", "0", "]", "==", "1", ")", "# currently only supports batchSize 1", "\n", "\n", "if", "(", "self", ".", "colorspace", "==", "'RGB'", ")", ":", "\n", "            ", "value", "=", "util", ".", "dssim", "(", "1.", "*", "util", ".", "tensor2im", "(", "in0", ".", "data", ")", ",", "1.", "*", "util", ".", "tensor2im", "(", "in1", ".", "data", ")", ",", "range", "=", "255.", ")", ".", "astype", "(", "'float'", ")", "\n", "", "elif", "(", "self", ".", "colorspace", "==", "'Lab'", ")", ":", "\n", "            ", "value", "=", "util", ".", "dssim", "(", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in0", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "\n", "util", ".", "tensor2np", "(", "util", ".", "tensor2tensorlab", "(", "in1", ".", "data", ",", "to_norm", "=", "False", ")", ")", ",", "range", "=", "100.", ")", ".", "astype", "(", "'float'", ")", "\n", "", "ret_var", "=", "Variable", "(", "torch", ".", "Tensor", "(", "(", "value", ",", ")", ")", ")", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "ret_var", "=", "ret_var", ".", "cuda", "(", ")", "\n", "", "return", "ret_var", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.spatial_average": [[17, 19], ["in_tens.mean"], "function", ["None"], ["def", "spatial_average", "(", "in_tens", ",", "keepdim", "=", "True", ")", ":", "\n", "    ", "return", "in_tens", ".", "mean", "(", "[", "2", ",", "3", "]", ",", "keepdim", "=", "keepdim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.upsample": [[20, 25], ["torch.Upsample"], "function", ["None"], ["", "def", "upsample", "(", "in_tens", ",", "out_H", "=", "64", ")", ":", "# assumes scale factor is same for H and W", "\n", "    ", "in_H", "=", "in_tens", ".", "shape", "[", "2", "]", "\n", "scale_factor", "=", "1.", "*", "out_H", "/", "in_H", "\n", "\n", "return", "nn", ".", "Upsample", "(", "scale_factor", "=", "scale_factor", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "(", "in_tens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.print_network": [[182, 188], ["net.parameters", "print", "print", "param.numel"], "function", ["None"], ["", "", "def", "print_network", "(", "net", ")", ":", "\n", "    ", "num_params", "=", "0", "\n", "for", "param", "in", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "num_params", "+=", "param", ".", "numel", "(", ")", "\n", "", "print", "(", "'Network'", ",", "net", ")", "\n", "print", "(", "'Total number of parameters: %d'", "%", "num_params", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.name": [[25, 27], ["None"], "methods", ["None"], ["    ", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "model_name", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.initialize": [[28, 108], ["base_model.BaseModel.initialize", "list", "networks_basic.PNetLin", "dist_model.DistModel.net.parameters", "networks_basic.BCERankingLoss", "list", "torch.optim.Adam", "dist_model.DistModel.net.eval", "dist_model.DistModel.net.to", "torch.nn.DataParallel", "print", "networks_basic.print_network", "print", "os.path.abspath", "print", "dist_model.DistModel.net.load_state_dict", "networks_basic.PNetLin", "dist_model.DistModel.rankLoss.net.parameters", "dist_model.DistModel.rankLoss.to", "os.path.join", "torch.load", "networks_basic.L2", "inspect.getfile", "networks_basic.DSSIM", "ValueError"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.initialize", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.networks_basic.print_network"], ["", "def", "initialize", "(", "self", ",", "model", "=", "'net-lin'", ",", "net", "=", "'alex'", ",", "colorspace", "=", "'Lab'", ",", "pnet_rand", "=", "False", ",", "pnet_tune", "=", "False", ",", "model_path", "=", "None", ",", "\n", "use_gpu", "=", "True", ",", "printNet", "=", "False", ",", "spatial", "=", "False", ",", "\n", "is_train", "=", "False", ",", "lr", "=", ".0001", ",", "beta1", "=", "0.5", ",", "version", "=", "'0.1'", ",", "gpu_ids", "=", "[", "0", "]", ")", ":", "\n", "        ", "'''\n        INPUTS\n            model - ['net-lin'] for linearly calibrated network\n                    ['net'] for off-the-shelf network\n                    ['L2'] for L2 distance in Lab colorspace\n                    ['SSIM'] for ssim in RGB colorspace\n            net - ['squeeze','alex','vgg']\n            model_path - if None, will look in weights/[NET_NAME].pth\n            colorspace - ['Lab','RGB'] colorspace to use for L2 and SSIM\n            use_gpu - bool - whether or not to use a GPU\n            printNet - bool - whether or not to print network architecture out\n            spatial - bool - whether to output an array containing varying distances across spatial dimensions\n            spatial_shape - if given, output spatial shape. if None then spatial shape is determined automatically via spatial_factor (see below).\n            spatial_factor - if given, specifies upsampling factor relative to the largest spatial extent of a convolutional layer. if None then resized to size of input images.\n            spatial_order - spline order of filter for upsampling in spatial mode, by default 1 (bilinear).\n            is_train - bool - [True] for training mode\n            lr - float - initial learning rate\n            beta1 - float - initial momentum term for adam\n            version - 0.1 for latest, 0.0 was original (with a bug)\n            gpu_ids - int array - [0] by default, gpus to use\n        '''", "\n", "BaseModel", ".", "initialize", "(", "self", ",", "use_gpu", "=", "use_gpu", ",", "gpu_ids", "=", "gpu_ids", ")", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "is_train", "=", "is_train", "\n", "self", ".", "spatial", "=", "spatial", "\n", "self", ".", "gpu_ids", "=", "gpu_ids", "\n", "self", ".", "model_name", "=", "'%s [%s]'", "%", "(", "model", ",", "net", ")", "\n", "\n", "if", "(", "self", ".", "model", "==", "'net-lin'", ")", ":", "# pretrained net + linear layer", "\n", "            ", "self", ".", "net", "=", "networks", ".", "PNetLin", "(", "pnet_rand", "=", "pnet_rand", ",", "pnet_tune", "=", "pnet_tune", ",", "pnet_type", "=", "net", ",", "\n", "use_dropout", "=", "True", ",", "spatial", "=", "spatial", ",", "version", "=", "version", ",", "lpips", "=", "True", ")", "\n", "kw", "=", "{", "}", "\n", "if", "not", "use_gpu", ":", "\n", "                ", "kw", "[", "'map_location'", "]", "=", "'cpu'", "\n", "", "if", "(", "model_path", "is", "None", ")", ":", "\n", "                ", "import", "inspect", "\n", "model_path", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "inspect", ".", "getfile", "(", "self", ".", "initialize", ")", ",", "'..'", ",", "'weights/v%s/%s.pth'", "%", "(", "version", ",", "net", ")", ")", ")", "\n", "\n", "", "if", "(", "not", "is_train", ")", ":", "\n", "                ", "print", "(", "'Loading model from: %s'", "%", "model_path", ")", "\n", "self", ".", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_path", ",", "**", "kw", ")", ",", "strict", "=", "False", ")", "\n", "\n", "", "", "elif", "(", "self", ".", "model", "==", "'net'", ")", ":", "# pretrained network", "\n", "            ", "self", ".", "net", "=", "networks", ".", "PNetLin", "(", "pnet_rand", "=", "pnet_rand", ",", "pnet_type", "=", "net", ",", "lpips", "=", "False", ")", "\n", "", "elif", "(", "self", ".", "model", "in", "[", "'L2'", ",", "'l2'", "]", ")", ":", "\n", "            ", "self", ".", "net", "=", "networks", ".", "L2", "(", "use_gpu", "=", "use_gpu", ",", "colorspace", "=", "colorspace", ")", "# not really a network, only for testing", "\n", "self", ".", "model_name", "=", "'L2'", "\n", "", "elif", "(", "self", ".", "model", "in", "[", "'DSSIM'", ",", "'dssim'", ",", "'SSIM'", ",", "'ssim'", "]", ")", ":", "\n", "            ", "self", ".", "net", "=", "networks", ".", "DSSIM", "(", "use_gpu", "=", "use_gpu", ",", "colorspace", "=", "colorspace", ")", "\n", "self", ".", "model_name", "=", "'SSIM'", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Model [%s] not recognized.\"", "%", "self", ".", "model", ")", "\n", "\n", "", "self", ".", "parameters", "=", "list", "(", "self", ".", "net", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "self", ".", "is_train", ":", "# training mode", "\n", "# extra network on top to go from distances (d0,d1) => predicted human judgment (h*)", "\n", "            ", "self", ".", "rankLoss", "=", "networks", ".", "BCERankingLoss", "(", ")", "\n", "self", ".", "parameters", "+=", "list", "(", "self", ".", "rankLoss", ".", "net", ".", "parameters", "(", ")", ")", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "old_lr", "=", "lr", "\n", "self", ".", "optimizer_net", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "parameters", ",", "lr", "=", "lr", ",", "betas", "=", "(", "beta1", ",", "0.999", ")", ")", "\n", "", "else", ":", "# test mode", "\n", "            ", "self", ".", "net", ".", "eval", "(", ")", "\n", "\n", "", "if", "(", "use_gpu", ")", ":", "\n", "            ", "self", ".", "net", ".", "to", "(", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "net", "=", "torch", ".", "nn", ".", "DataParallel", "(", "self", ".", "net", ",", "device_ids", "=", "gpu_ids", ")", "\n", "if", "(", "self", ".", "is_train", ")", ":", "\n", "                ", "self", ".", "rankLoss", "=", "self", ".", "rankLoss", ".", "to", "(", "device", "=", "gpu_ids", "[", "0", "]", ")", "# just put this on GPU0", "\n", "\n", "", "", "if", "(", "printNet", ")", ":", "\n", "            ", "print", "(", "'---------- Networks initialized -------------'", ")", "\n", "networks", ".", "print_network", "(", "self", ".", "net", ")", "\n", "print", "(", "'-----------------------------------------------'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.forward": [[109, 118], ["dist_model.DistModel.net.forward"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.forward"], ["", "", "def", "forward", "(", "self", ",", "in0", ",", "in1", ",", "retPerLayer", "=", "False", ")", ":", "\n", "        ", "''' Function computes the distance between image patches in0 and in1\n        INPUTS\n            in0, in1 - torch.Tensor object of shape Nx3xXxY - image patch scaled to [-1,1]\n        OUTPUT\n            computed distances between in0 and in1\n        '''", "\n", "\n", "return", "self", ".", "net", ".", "forward", "(", "in0", ",", "in1", ",", "retPerLayer", "=", "retPerLayer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.optimize_parameters": [[120, 126], ["dist_model.DistModel.forward_train", "dist_model.DistModel.optimizer_net.zero_grad", "dist_model.DistModel.backward_train", "dist_model.DistModel.optimizer_net.step", "dist_model.DistModel.clamp_weights"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.forward_train", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.backward_train", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.clamp_weights"], ["", "def", "optimize_parameters", "(", "self", ")", ":", "\n", "        ", "self", ".", "forward_train", "(", ")", "\n", "self", ".", "optimizer_net", ".", "zero_grad", "(", ")", "\n", "self", ".", "backward_train", "(", ")", "\n", "self", ".", "optimizer_net", ".", "step", "(", ")", "\n", "self", ".", "clamp_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.clamp_weights": [[127, 131], ["dist_model.DistModel.net.modules", "hasattr", "torch.clamp"], "methods", ["None"], ["", "def", "clamp_weights", "(", "self", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "net", ".", "modules", "(", ")", ":", "\n", "            ", "if", "(", "hasattr", "(", "module", ",", "'weight'", ")", "and", "module", ".", "kernel_size", "==", "(", "1", ",", "1", ")", ")", ":", "\n", "                ", "module", ".", "weight", ".", "data", "=", "torch", ".", "clamp", "(", "module", ".", "weight", ".", "data", ",", "min", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.set_input": [[132, 147], ["torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "dist_model.DistModel.input_ref.to", "dist_model.DistModel.input_p0.to", "dist_model.DistModel.input_p1.to", "dist_model.DistModel.input_judge.to"], "methods", ["None"], ["", "", "", "def", "set_input", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "input_ref", "=", "data", "[", "'ref'", "]", "\n", "self", ".", "input_p0", "=", "data", "[", "'p0'", "]", "\n", "self", ".", "input_p1", "=", "data", "[", "'p1'", "]", "\n", "self", ".", "input_judge", "=", "data", "[", "'judge'", "]", "\n", "\n", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "self", ".", "input_ref", "=", "self", ".", "input_ref", ".", "to", "(", "device", "=", "self", ".", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "input_p0", "=", "self", ".", "input_p0", ".", "to", "(", "device", "=", "self", ".", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "input_p1", "=", "self", ".", "input_p1", ".", "to", "(", "device", "=", "self", ".", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "input_judge", "=", "self", ".", "input_judge", ".", "to", "(", "device", "=", "self", ".", "gpu_ids", "[", "0", "]", ")", "\n", "\n", "", "self", ".", "var_ref", "=", "Variable", "(", "self", ".", "input_ref", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "var_p0", "=", "Variable", "(", "self", ".", "input_p0", ",", "requires_grad", "=", "True", ")", "\n", "self", ".", "var_p1", "=", "Variable", "(", "self", ".", "input_p1", ",", "requires_grad", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.forward_train": [[148, 161], ["dist_model.DistModel.forward", "dist_model.DistModel.forward", "dist_model.DistModel.compute_accuracy", "torch.autograd.Variable().view", "dist_model.DistModel.rankLoss.forward", "dist_model.DistModel.d0.size", "torch.autograd.Variable"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.forward", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.forward", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.compute_accuracy", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.forward"], ["", "def", "forward_train", "(", "self", ")", ":", "# run forward pass", "\n", "# print(self.net.module.scaling_layer.shift)", "\n", "# print(torch.norm(self.net.module.net.slice1[0].weight).item(), torch.norm(self.net.module.lin0.model[1].weight).item())", "\n", "\n", "        ", "self", ".", "d0", "=", "self", ".", "forward", "(", "self", ".", "var_ref", ",", "self", ".", "var_p0", ")", "\n", "self", ".", "d1", "=", "self", ".", "forward", "(", "self", ".", "var_ref", ",", "self", ".", "var_p1", ")", "\n", "self", ".", "acc_r", "=", "self", ".", "compute_accuracy", "(", "self", ".", "d0", ",", "self", ".", "d1", ",", "self", ".", "input_judge", ")", "\n", "\n", "self", ".", "var_judge", "=", "Variable", "(", "1.", "*", "self", ".", "input_judge", ")", ".", "view", "(", "self", ".", "d0", ".", "size", "(", ")", ")", "\n", "\n", "self", ".", "loss_total", "=", "self", ".", "rankLoss", ".", "forward", "(", "self", ".", "d0", ",", "self", ".", "d1", ",", "self", ".", "var_judge", "*", "2.", "-", "1.", ")", "\n", "\n", "return", "self", ".", "loss_total", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.backward_train": [[162, 164], ["torch.mean().backward", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.backward"], ["", "def", "backward_train", "(", "self", ")", ":", "\n", "        ", "torch", ".", "mean", "(", "self", ".", "loss_total", ")", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.compute_accuracy": [[165, 170], ["judge.cpu().numpy().flatten", "judge.cpu().numpy", "judge.cpu"], "methods", ["None"], ["", "def", "compute_accuracy", "(", "self", ",", "d0", ",", "d1", ",", "judge", ")", ":", "\n", "        ", "''' d0, d1 are Variables, judge is a Tensor '''", "\n", "d1_lt_d0", "=", "(", "d1", "<", "d0", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ".", "flatten", "(", ")", "\n", "judge_per", "=", "judge", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", "\n", "return", "d1_lt_d0", "*", "judge_per", "+", "(", "1", "-", "d1_lt_d0", ")", "*", "(", "1", "-", "judge_per", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.get_current_errors": [[171, 179], ["collections.OrderedDict", "collections.OrderedDict.keys", "numpy.mean", "dist_model.DistModel.loss_total.data.cpu().numpy", "dist_model.DistModel.loss_total.data.cpu"], "methods", ["None"], ["", "def", "get_current_errors", "(", "self", ")", ":", "\n", "        ", "retDict", "=", "OrderedDict", "(", "[", "(", "'loss_total'", ",", "self", ".", "loss_total", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "\n", "(", "'acc_r'", ",", "self", ".", "acc_r", ")", "]", ")", "\n", "\n", "for", "key", "in", "retDict", ".", "keys", "(", ")", ":", "\n", "            ", "retDict", "[", "key", "]", "=", "np", ".", "mean", "(", "retDict", "[", "key", "]", ")", "\n", "\n", "", "return", "retDict", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.get_current_visuals": [[180, 194], ["lpips.tensor2im", "lpips.tensor2im", "lpips.tensor2im", "scipy.ndimage.zoom", "scipy.ndimage.zoom", "scipy.ndimage.zoom", "collections.OrderedDict", "dist_model.DistModel.var_ref.data.size"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2im", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2im", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2im"], ["", "def", "get_current_visuals", "(", "self", ")", ":", "\n", "        ", "zoom_factor", "=", "256", "/", "self", ".", "var_ref", ".", "data", ".", "size", "(", ")", "[", "2", "]", "\n", "\n", "ref_img", "=", "util", ".", "tensor2im", "(", "self", ".", "var_ref", ".", "data", ")", "\n", "p0_img", "=", "util", ".", "tensor2im", "(", "self", ".", "var_p0", ".", "data", ")", "\n", "p1_img", "=", "util", ".", "tensor2im", "(", "self", ".", "var_p1", ".", "data", ")", "\n", "\n", "ref_img_vis", "=", "zoom", "(", "ref_img", ",", "[", "zoom_factor", ",", "zoom_factor", ",", "1", "]", ",", "order", "=", "0", ")", "\n", "p0_img_vis", "=", "zoom", "(", "p0_img", ",", "[", "zoom_factor", ",", "zoom_factor", ",", "1", "]", ",", "order", "=", "0", ")", "\n", "p1_img_vis", "=", "zoom", "(", "p1_img", ",", "[", "zoom_factor", ",", "zoom_factor", ",", "1", "]", ",", "order", "=", "0", ")", "\n", "\n", "return", "OrderedDict", "(", "[", "(", "'ref'", ",", "ref_img_vis", ")", ",", "\n", "(", "'p0'", ",", "p0_img_vis", ")", ",", "\n", "(", "'p1'", ",", "p1_img_vis", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.save": [[195, 201], ["dist_model.DistModel.save_network", "dist_model.DistModel.save_network", "dist_model.DistModel.save_network"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save_network", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save_network", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save_network"], ["", "def", "save", "(", "self", ",", "path", ",", "label", ")", ":", "\n", "        ", "if", "(", "self", ".", "use_gpu", ")", ":", "\n", "            ", "self", ".", "save_network", "(", "self", ".", "net", ".", "module", ",", "path", ",", "''", ",", "label", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "save_network", "(", "self", ".", "net", ",", "path", ",", "''", ",", "label", ")", "\n", "", "self", ".", "save_network", "(", "self", ".", "rankLoss", ".", "net", ",", "path", ",", "'rank'", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.DistModel.update_learning_rate": [[202, 211], ["print"], "methods", ["None"], ["", "def", "update_learning_rate", "(", "self", ",", "nepoch_decay", ")", ":", "\n", "        ", "lrd", "=", "self", ".", "lr", "/", "nepoch_decay", "\n", "lr", "=", "self", ".", "old_lr", "-", "lrd", "\n", "\n", "for", "param_group", "in", "self", ".", "optimizer_net", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n", "", "print", "(", "'update lr [%s] decay: %f -> %f'", "%", "(", "type", ",", "self", ".", "old_lr", ",", "lr", ")", ")", "\n", "self", ".", "old_lr", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.score_2afc_dataset": [[212, 246], ["tqdm.tqdm", "numpy.array", "numpy.array", "numpy.array", "data_loader.load_data", "func().data.cpu().numpy().flatten().tolist", "func().data.cpu().numpy().flatten().tolist", "data[].cpu().numpy().flatten().tolist", "numpy.mean", "dict", "func().data.cpu().numpy().flatten", "func().data.cpu().numpy().flatten", "data[].cpu().numpy().flatten", "func().data.cpu().numpy", "func().data.cpu().numpy", "data[].cpu().numpy", "func().data.cpu", "func().data.cpu", "data[].cpu", "func", "func"], "function", ["None"], ["", "", "def", "score_2afc_dataset", "(", "data_loader", ",", "func", ",", "name", "=", "''", ")", ":", "\n", "    ", "''' Function computes Two Alternative Forced Choice (2AFC) score using\n        distance function 'func' in dataset 'data_loader'\n    INPUTS\n        data_loader - CustomDatasetDataLoader object - contains a TwoAFCDataset inside\n        func - callable distance function - calling d=func(in0,in1) should take 2\n            pytorch tensors with shape Nx3xXxY, and return numpy array of length N\n    OUTPUTS\n        [0] - 2AFC score in [0,1], fraction of time func agrees with human evaluators\n        [1] - dictionary with following elements\n            d0s,d1s - N arrays containing distances between reference patch to perturbed patches \n            gts - N array in [0,1], preferred patch selected by human evaluators\n                (closer to \"0\" for left patch p0, \"1\" for right patch p1,\n                \"0.6\" means 60pct people preferred right patch, 40pct preferred left)\n            scores - N array in [0,1], corresponding to what percentage function agreed with humans\n    CONSTS\n        N - number of test triplets in data_loader\n    '''", "\n", "\n", "d0s", "=", "[", "]", "\n", "d1s", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "\n", "for", "data", "in", "tqdm", "(", "data_loader", ".", "load_data", "(", ")", ",", "desc", "=", "name", ")", ":", "\n", "        ", "d0s", "+=", "func", "(", "data", "[", "'ref'", "]", ",", "data", "[", "'p0'", "]", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "d1s", "+=", "func", "(", "data", "[", "'ref'", "]", ",", "data", "[", "'p1'", "]", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "gts", "+=", "data", "[", "'judge'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "", "d0s", "=", "np", ".", "array", "(", "d0s", ")", "\n", "d1s", "=", "np", ".", "array", "(", "d1s", ")", "\n", "gts", "=", "np", ".", "array", "(", "gts", ")", "\n", "scores", "=", "(", "d0s", "<", "d1s", ")", "*", "(", "1.", "-", "gts", ")", "+", "(", "d1s", "<", "d0s", ")", "*", "gts", "+", "(", "d1s", "==", "d0s", ")", "*", ".5", "\n", "\n", "return", "(", "np", ".", "mean", "(", "scores", ")", ",", "dict", "(", "d0s", "=", "d0s", ",", "d1s", "=", "d1s", ",", "gts", "=", "gts", ",", "scores", "=", "scores", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.dist_model.score_jnd_dataset": [[247, 285], ["tqdm.tqdm", "numpy.array", "numpy.array", "numpy.argsort", "numpy.cumsum", "numpy.cumsum", "lpips.voc_ap", "data_loader.load_data", "func().data.cpu().numpy().tolist", "data[].cpu().numpy().flatten().tolist", "numpy.sum", "dict", "func().data.cpu().numpy", "data[].cpu().numpy().flatten", "func().data.cpu", "data[].cpu().numpy", "data[].cpu", "func"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.voc_ap"], ["", "def", "score_jnd_dataset", "(", "data_loader", ",", "func", ",", "name", "=", "''", ")", ":", "\n", "    ", "''' Function computes JND score using distance function 'func' in dataset 'data_loader'\n    INPUTS\n        data_loader - CustomDatasetDataLoader object - contains a JNDDataset inside\n        func - callable distance function - calling d=func(in0,in1) should take 2\n            pytorch tensors with shape Nx3xXxY, and return pytorch array of length N\n    OUTPUTS\n        [0] - JND score in [0,1], mAP score (area under precision-recall curve)\n        [1] - dictionary with following elements\n            ds - N array containing distances between two patches shown to human evaluator\n            sames - N array containing fraction of people who thought the two patches were identical\n    CONSTS\n        N - number of test triplets in data_loader\n    '''", "\n", "\n", "ds", "=", "[", "]", "\n", "gts", "=", "[", "]", "\n", "\n", "for", "data", "in", "tqdm", "(", "data_loader", ".", "load_data", "(", ")", ",", "desc", "=", "name", ")", ":", "\n", "        ", "ds", "+=", "func", "(", "data", "[", "'p0'", "]", ",", "data", "[", "'p1'", "]", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", "\n", "gts", "+=", "data", "[", "'same'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "flatten", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "", "sames", "=", "np", ".", "array", "(", "gts", ")", "\n", "ds", "=", "np", ".", "array", "(", "ds", ")", "\n", "\n", "sorted_inds", "=", "np", ".", "argsort", "(", "ds", ")", "\n", "ds_sorted", "=", "ds", "[", "sorted_inds", "]", "\n", "sames_sorted", "=", "sames", "[", "sorted_inds", "]", "\n", "\n", "TPs", "=", "np", ".", "cumsum", "(", "sames_sorted", ")", "\n", "FPs", "=", "np", ".", "cumsum", "(", "1", "-", "sames_sorted", ")", "\n", "FNs", "=", "np", ".", "sum", "(", "sames_sorted", ")", "-", "TPs", "\n", "\n", "precs", "=", "TPs", "/", "(", "TPs", "+", "FPs", ")", "\n", "recs", "=", "TPs", "/", "(", "TPs", "+", "FNs", ")", "\n", "score", "=", "util", ".", "voc_ap", "(", "recs", ",", "precs", ")", "\n", "\n", "return", "(", "score", ",", "dict", "(", "ds", "=", "ds", ",", "sames", "=", "sames", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.pretrained_networks.squeezenet.__init__": [[7, 35], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "range", "range", "range", "torchvision.models.squeezenet1_1", "pretrained_networks.squeezenet.slice1.add_module", "pretrained_networks.squeezenet.slice2.add_module", "pretrained_networks.squeezenet.slice3.add_module", "pretrained_networks.squeezenet.slice4.add_module", "pretrained_networks.squeezenet.slice5.add_module", "pretrained_networks.squeezenet.slice6.add_module", "pretrained_networks.squeezenet.slice7.add_module", "pretrained_networks.squeezenet.parameters", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "squeezenet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "pretrained_features", "=", "tv", ".", "squeezenet1_1", "(", "pretrained", "=", "pretrained", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice6", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice7", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "N_slices", "=", "7", "\n", "for", "x", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "2", ",", "5", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "5", ",", "8", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "8", ",", "10", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "10", ",", "11", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "11", ",", "12", ")", ":", "\n", "            ", "self", ".", "slice6", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "12", ",", "13", ")", ":", "\n", "            ", "self", ".", "slice7", ".", "add_module", "(", "str", "(", "x", ")", ",", "pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.pretrained_networks.squeezenet.forward": [[36, 55], ["pretrained_networks.squeezenet.slice1", "pretrained_networks.squeezenet.slice2", "pretrained_networks.squeezenet.slice3", "pretrained_networks.squeezenet.slice4", "pretrained_networks.squeezenet.slice5", "pretrained_networks.squeezenet.slice6", "pretrained_networks.squeezenet.slice7", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu1", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4", "=", "h", "\n", "h", "=", "self", ".", "slice5", "(", "h", ")", "\n", "h_relu5", "=", "h", "\n", "h", "=", "self", ".", "slice6", "(", "h", ")", "\n", "h_relu6", "=", "h", "\n", "h", "=", "self", ".", "slice7", "(", "h", ")", "\n", "h_relu7", "=", "h", "\n", "vgg_outputs", "=", "namedtuple", "(", "\"SqueezeOutputs\"", ",", "[", "'relu1'", ",", "'relu2'", ",", "'relu3'", ",", "'relu4'", ",", "'relu5'", ",", "'relu6'", ",", "'relu7'", "]", ")", "\n", "out", "=", "vgg_outputs", "(", "h_relu1", ",", "h_relu2", ",", "h_relu3", ",", "h_relu4", ",", "h_relu5", ",", "h_relu6", ",", "h_relu7", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.pretrained_networks.alexnet.__init__": [[58, 80], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "range", "torchvision.models.alexnet", "pretrained_networks.alexnet.slice1.add_module", "pretrained_networks.alexnet.slice2.add_module", "pretrained_networks.alexnet.slice3.add_module", "pretrained_networks.alexnet.slice4.add_module", "pretrained_networks.alexnet.slice5.add_module", "pretrained_networks.alexnet.parameters", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "alexnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "alexnet_pretrained_features", "=", "tv", ".", "alexnet", "(", "pretrained", "=", "pretrained", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "N_slices", "=", "5", "\n", "for", "x", "in", "range", "(", "2", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "2", ",", "5", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "5", ",", "8", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "8", ",", "10", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "10", ",", "12", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_module", "(", "str", "(", "x", ")", ",", "alexnet_pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.pretrained_networks.alexnet.forward": [[81, 96], ["pretrained_networks.alexnet.slice1", "pretrained_networks.alexnet.slice2", "pretrained_networks.alexnet.slice3", "pretrained_networks.alexnet.slice4", "pretrained_networks.alexnet.slice5", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu1", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4", "=", "h", "\n", "h", "=", "self", ".", "slice5", "(", "h", ")", "\n", "h_relu5", "=", "h", "\n", "alexnet_outputs", "=", "namedtuple", "(", "\"AlexnetOutputs\"", ",", "[", "'relu1'", ",", "'relu2'", ",", "'relu3'", ",", "'relu4'", ",", "'relu5'", "]", ")", "\n", "out", "=", "alexnet_outputs", "(", "h_relu1", ",", "h_relu2", ",", "h_relu3", ",", "h_relu4", ",", "h_relu5", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.pretrained_networks.vgg16.__init__": [[98, 120], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "range", "range", "range", "range", "range", "torchvision.models.vgg16", "pretrained_networks.vgg16.slice1.add_module", "pretrained_networks.vgg16.slice2.add_module", "pretrained_networks.vgg16.slice3.add_module", "pretrained_networks.vgg16.slice4.add_module", "pretrained_networks.vgg16.slice5.add_module", "pretrained_networks.vgg16.parameters", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "vgg16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_pretrained_features", "=", "tv", ".", "vgg16", "(", "pretrained", "=", "pretrained", ")", ".", "features", "\n", "self", ".", "slice1", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice2", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice3", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice4", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "slice5", "=", "torch", ".", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "N_slices", "=", "5", "\n", "for", "x", "in", "range", "(", "4", ")", ":", "\n", "            ", "self", ".", "slice1", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "4", ",", "9", ")", ":", "\n", "            ", "self", ".", "slice2", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "9", ",", "16", ")", ":", "\n", "            ", "self", ".", "slice3", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "16", ",", "23", ")", ":", "\n", "            ", "self", ".", "slice4", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "for", "x", "in", "range", "(", "23", ",", "30", ")", ":", "\n", "            ", "self", ".", "slice5", ".", "add_module", "(", "str", "(", "x", ")", ",", "vgg_pretrained_features", "[", "x", "]", ")", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "self", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.pretrained_networks.vgg16.forward": [[121, 136], ["pretrained_networks.vgg16.slice1", "pretrained_networks.vgg16.slice2", "pretrained_networks.vgg16.slice3", "pretrained_networks.vgg16.slice4", "pretrained_networks.vgg16.slice5", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "slice1", "(", "X", ")", "\n", "h_relu1_2", "=", "h", "\n", "h", "=", "self", ".", "slice2", "(", "h", ")", "\n", "h_relu2_2", "=", "h", "\n", "h", "=", "self", ".", "slice3", "(", "h", ")", "\n", "h_relu3_3", "=", "h", "\n", "h", "=", "self", ".", "slice4", "(", "h", ")", "\n", "h_relu4_3", "=", "h", "\n", "h", "=", "self", ".", "slice5", "(", "h", ")", "\n", "h_relu5_3", "=", "h", "\n", "vgg_outputs", "=", "namedtuple", "(", "\"VggOutputs\"", ",", "[", "'relu1_2'", ",", "'relu2_2'", ",", "'relu3_3'", ",", "'relu4_3'", ",", "'relu5_3'", "]", ")", "\n", "out", "=", "vgg_outputs", "(", "h_relu1_2", ",", "h_relu2_2", ",", "h_relu3_3", ",", "h_relu4_3", ",", "h_relu5_3", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.pretrained_networks.resnet.__init__": [[140, 162], ["super().__init__", "torchvision.models.resnet18", "torchvision.models.resnet34", "torchvision.models.resnet50", "torchvision.models.resnet101", "torchvision.models.resnet152"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "False", ",", "pretrained", "=", "True", ",", "num", "=", "18", ")", ":", "\n", "        ", "super", "(", "resnet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "(", "num", "==", "18", ")", ":", "\n", "            ", "self", ".", "net", "=", "tv", ".", "resnet18", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "34", ")", ":", "\n", "            ", "self", ".", "net", "=", "tv", ".", "resnet34", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "50", ")", ":", "\n", "            ", "self", ".", "net", "=", "tv", ".", "resnet50", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "101", ")", ":", "\n", "            ", "self", ".", "net", "=", "tv", ".", "resnet101", "(", "pretrained", "=", "pretrained", ")", "\n", "", "elif", "(", "num", "==", "152", ")", ":", "\n", "            ", "self", ".", "net", "=", "tv", ".", "resnet152", "(", "pretrained", "=", "pretrained", ")", "\n", "", "self", ".", "N_slices", "=", "5", "\n", "\n", "self", ".", "conv1", "=", "self", ".", "net", ".", "conv1", "\n", "self", ".", "bn1", "=", "self", ".", "net", ".", "bn1", "\n", "self", ".", "relu", "=", "self", ".", "net", ".", "relu", "\n", "self", ".", "maxpool", "=", "self", ".", "net", ".", "maxpool", "\n", "self", ".", "layer1", "=", "self", ".", "net", ".", "layer1", "\n", "self", ".", "layer2", "=", "self", ".", "net", ".", "layer2", "\n", "self", ".", "layer3", "=", "self", ".", "net", ".", "layer3", "\n", "self", ".", "layer4", "=", "self", ".", "net", ".", "layer4", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.pretrained_networks.resnet.forward": [[163, 182], ["pretrained_networks.resnet.conv1", "pretrained_networks.resnet.bn1", "pretrained_networks.resnet.relu", "pretrained_networks.resnet.maxpool", "pretrained_networks.resnet.layer1", "pretrained_networks.resnet.layer2", "pretrained_networks.resnet.layer3", "pretrained_networks.resnet.layer4", "collections.namedtuple", "collections.namedtuple."], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "h", "=", "self", ".", "conv1", "(", "X", ")", "\n", "h", "=", "self", ".", "bn1", "(", "h", ")", "\n", "h", "=", "self", ".", "relu", "(", "h", ")", "\n", "h_relu1", "=", "h", "\n", "h", "=", "self", ".", "maxpool", "(", "h", ")", "\n", "h", "=", "self", ".", "layer1", "(", "h", ")", "\n", "h_conv2", "=", "h", "\n", "h", "=", "self", ".", "layer2", "(", "h", ")", "\n", "h_conv3", "=", "h", "\n", "h", "=", "self", ".", "layer3", "(", "h", ")", "\n", "h_conv4", "=", "h", "\n", "h", "=", "self", ".", "layer4", "(", "h", ")", "\n", "h_conv5", "=", "h", "\n", "\n", "outputs", "=", "namedtuple", "(", "\"Outputs\"", ",", "[", "'relu1'", ",", "'conv2'", ",", "'conv3'", ",", "'conv4'", ",", "'conv5'", "]", ")", "\n", "out", "=", "outputs", "(", "h_relu1", ",", "h_conv2", ",", "h_conv3", ",", "h_conv4", ",", "h_conv5", ")", "\n", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.PerceptualLoss.__init__": [[15, 26], ["super().__init__", "print", "lpips.dist_model.DistModel", "__init__.PerceptualLoss.model.initialize", "print", "print", "__init__.PerceptualLoss.model.name"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.initialize", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.name"], ["    ", "def", "__init__", "(", "self", ",", "model", "=", "'net-lin'", ",", "net", "=", "'alex'", ",", "colorspace", "=", "'rgb'", ",", "spatial", "=", "False", ",", "use_gpu", "=", "True", ",", "gpu_ids", "=", "[", "0", "]", ")", ":", "# VGG using our perceptually-learned weights (LPIPS metric)", "\n", "# def __init__(self, model='net', net='vgg', use_gpu=True): # \"default\" way of using VGG as a perceptual loss", "\n", "        ", "super", "(", "PerceptualLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'Setting up Perceptual loss...'", ")", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "spatial", "=", "spatial", "\n", "self", ".", "gpu_ids", "=", "gpu_ids", "\n", "self", ".", "model", "=", "dist_model", ".", "DistModel", "(", ")", "\n", "self", ".", "model", ".", "initialize", "(", "model", "=", "model", ",", "net", "=", "net", ",", "use_gpu", "=", "use_gpu", ",", "colorspace", "=", "colorspace", ",", "spatial", "=", "self", ".", "spatial", ",", "gpu_ids", "=", "gpu_ids", ")", "\n", "print", "(", "'...[%s] initialized'", "%", "self", ".", "model", ".", "name", "(", ")", ")", "\n", "print", "(", "'...Done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.PerceptualLoss.forward": [[27, 42], ["__init__.PerceptualLoss.model.forward"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.forward"], ["", "def", "forward", "(", "self", ",", "pred", ",", "target", ",", "normalize", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Pred and target are Variables.\n        If normalize is True, assumes the images are between [0,1] and then scales them between [-1,+1]\n        If normalize is False, assumes the images are already between [-1,+1]\n\n        Inputs pred and target are Nx3xHxW\n        Output pytorch Variable N long\n        \"\"\"", "\n", "\n", "if", "normalize", ":", "\n", "            ", "target", "=", "2", "*", "target", "-", "1", "\n", "pred", "=", "2", "*", "pred", "-", "1", "\n", "\n", "", "return", "self", ".", "model", ".", "forward", "(", "target", ",", "pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.normalize_tensor": [[43, 46], ["torch.sqrt", "torch.sum"], "function", ["None"], ["", "", "def", "normalize_tensor", "(", "in_feat", ",", "eps", "=", "1e-10", ")", ":", "\n", "    ", "norm_factor", "=", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "in_feat", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ")", "\n", "return", "in_feat", "/", "(", "norm_factor", "+", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.l2": [[47, 49], ["numpy.mean"], "function", ["None"], ["", "def", "l2", "(", "p0", ",", "p1", ",", "range", "=", "255.", ")", ":", "\n", "    ", "return", ".5", "*", "np", ".", "mean", "(", "(", "p0", "/", "range", "-", "p1", "/", "range", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.psnr": [[50, 52], ["numpy.log10", "numpy.mean"], "function", ["None"], ["", "def", "psnr", "(", "p0", ",", "p1", ",", "peak", "=", "255.", ")", ":", "\n", "    ", "return", "10", "*", "np", ".", "log10", "(", "peak", "**", "2", "/", "np", ".", "mean", "(", "(", "1.", "*", "p0", "-", "1.", "*", "p1", ")", "**", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.dssim": [[53, 55], ["skimage.metrics.structural_similarity"], "function", ["None"], ["", "def", "dssim", "(", "p0", ",", "p1", ",", "range", "=", "255.", ")", ":", "\n", "    ", "return", "(", "1", "-", "compare_ssim", "(", "p0", ",", "p1", ",", "data_range", "=", "range", ",", "multichannel", "=", "True", ")", ")", "/", "2.", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.rgb2lab": [[103, 106], ["color.rgb2lab"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.rgb2lab"], ["", "", "def", "rgb2lab", "(", "input", ")", ":", "\n", "    ", "from", "skimage", "import", "color", "\n", "return", "color", ".", "rgb2lab", "(", "input", "/", "255.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2np": [[63, 66], ["tensor_obj[].cpu().float().numpy().transpose", "tensor_obj[].cpu().float().numpy", "tensor_obj[].cpu().float", "tensor_obj[].cpu"], "function", ["None"], ["", "def", "tensor2np", "(", "tensor_obj", ")", ":", "\n", "# change dimension of a tensor object into a numpy array", "\n", "    ", "return", "tensor_obj", "[", "0", "]", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.np2tensor": [[67, 70], ["torch.Tensor", "np_obj[].transpose"], "function", ["None"], ["", "def", "np2tensor", "(", "np_obj", ")", ":", "\n", "# change dimenion of np array into tensor array", "\n", "    ", "return", "torch", ".", "Tensor", "(", "np_obj", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ".", "transpose", "(", "(", "3", ",", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2tensorlab": [[71, 84], ["__init__.tensor2im", "color.rgb2lab", "__init__.np2tensor"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2im", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.rgb2lab", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.np2tensor"], ["", "def", "tensor2tensorlab", "(", "image_tensor", ",", "to_norm", "=", "True", ",", "mc_only", "=", "False", ")", ":", "\n", "# image tensor to lab tensor", "\n", "    ", "from", "skimage", "import", "color", "\n", "\n", "img", "=", "tensor2im", "(", "image_tensor", ")", "\n", "img_lab", "=", "color", ".", "rgb2lab", "(", "img", ")", "\n", "if", "(", "mc_only", ")", ":", "\n", "        ", "img_lab", "[", ":", ",", ":", ",", "0", "]", "=", "img_lab", "[", ":", ",", ":", ",", "0", "]", "-", "50", "\n", "", "if", "(", "to_norm", "and", "not", "mc_only", ")", ":", "\n", "        ", "img_lab", "[", ":", ",", ":", ",", "0", "]", "=", "img_lab", "[", ":", ",", ":", ",", "0", "]", "-", "50", "\n", "img_lab", "=", "img_lab", "/", "100.", "\n", "\n", "", "return", "np2tensor", "(", "img_lab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensorlab2tensor": [[85, 102], ["warnings.filterwarnings", "__init__.tensor2np", "numpy.clip", "color.rgb2lab", "__init__.np2tensor", "__init__.im2tensor", "color.lab2rgb", "rgb_back.astype", "numpy.isclose", "__init__.im2tensor", "lab.astype", "numpy.prod"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2np", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.rgb2lab", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.np2tensor", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.im2tensor", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.im2tensor"], ["", "def", "tensorlab2tensor", "(", "lab_tensor", ",", "return_inbnd", "=", "False", ")", ":", "\n", "    ", "from", "skimage", "import", "color", "\n", "import", "warnings", "\n", "warnings", ".", "filterwarnings", "(", "\"ignore\"", ")", "\n", "\n", "lab", "=", "tensor2np", "(", "lab_tensor", ")", "*", "100.", "\n", "lab", "[", ":", ",", ":", ",", "0", "]", "=", "lab", "[", ":", ",", ":", ",", "0", "]", "+", "50", "\n", "\n", "rgb_back", "=", "255.", "*", "np", ".", "clip", "(", "color", ".", "lab2rgb", "(", "lab", ".", "astype", "(", "'float'", ")", ")", ",", "0", ",", "1", ")", "\n", "if", "(", "return_inbnd", ")", ":", "\n", "# convert back to lab, see if we match", "\n", "        ", "lab_back", "=", "color", ".", "rgb2lab", "(", "rgb_back", ".", "astype", "(", "'uint8'", ")", ")", "\n", "mask", "=", "1.", "*", "np", ".", "isclose", "(", "lab_back", ",", "lab", ",", "atol", "=", "2.", ")", "\n", "mask", "=", "np2tensor", "(", "np", ".", "prod", "(", "mask", ",", "axis", "=", "2", ")", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", "\n", "return", "(", "im2tensor", "(", "rgb_back", ")", ",", "mask", ")", "\n", "", "else", ":", "\n", "        ", "return", "im2tensor", "(", "rgb_back", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2im": [[152, 157], ["image_tensor[].cpu().float().numpy", "image_tensor[].cpu().float().numpy.astype", "image_tensor[].cpu().float", "numpy.transpose", "image_tensor[].cpu"], "function", ["None"], ["", "def", "tensor2im", "(", "image_tensor", ",", "imtype", "=", "np", ".", "uint8", ",", "cent", "=", "1.", ",", "factor", "=", "255.", "/", "2.", ")", ":", "\n", "# def tensor2im(image_tensor, imtype=np.uint8, cent=1., factor=1.):", "\n", "    ", "image_numpy", "=", "image_tensor", "[", "0", "]", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "numpy", "(", ")", "\n", "image_numpy", "=", "(", "np", ".", "transpose", "(", "image_numpy", ",", "(", "1", ",", "2", ",", "0", ")", ")", "+", "cent", ")", "*", "factor", "\n", "return", "image_numpy", ".", "astype", "(", "imtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.im2tensor": [[158, 162], ["torch.Tensor", "[].transpose"], "function", ["None"], ["", "def", "im2tensor", "(", "image", ",", "imtype", "=", "np", ".", "uint8", ",", "cent", "=", "1.", ",", "factor", "=", "255.", "/", "2.", ")", ":", "\n", "# def im2tensor(image, imtype=np.uint8, cent=1., factor=1.):", "\n", "    ", "return", "torch", ".", "Tensor", "(", "(", "image", "/", "factor", "-", "cent", ")", "\n", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ".", "transpose", "(", "(", "3", ",", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.tensor2vec": [[116, 118], ["vector_tensor.data.cpu().numpy", "vector_tensor.data.cpu"], "function", ["None"], ["", "def", "tensor2vec", "(", "vector_tensor", ")", ":", "\n", "    ", "return", "vector_tensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", ":", ",", "0", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.__init__.voc_ap": [[119, 151], ["numpy.arange", "numpy.concatenate", "numpy.concatenate", "range", "numpy.sum", "numpy.maximum", "numpy.where", "numpy.sum", "numpy.max"], "function", ["None"], ["", "def", "voc_ap", "(", "rec", ",", "prec", ",", "use_07_metric", "=", "False", ")", ":", "\n", "    ", "\"\"\" ap = voc_ap(rec, prec, [use_07_metric])\n    Compute VOC AP given precision and recall.\n    If use_07_metric is true, uses the\n    VOC 07 11 point method (default:False).\n    \"\"\"", "\n", "if", "use_07_metric", ":", "\n", "# 11 point metric", "\n", "        ", "ap", "=", "0.", "\n", "for", "t", "in", "np", ".", "arange", "(", "0.", ",", "1.1", ",", "0.1", ")", ":", "\n", "            ", "if", "np", ".", "sum", "(", "rec", ">=", "t", ")", "==", "0", ":", "\n", "                ", "p", "=", "0", "\n", "", "else", ":", "\n", "                ", "p", "=", "np", ".", "max", "(", "prec", "[", "rec", ">=", "t", "]", ")", "\n", "", "ap", "=", "ap", "+", "p", "/", "11.", "\n", "", "", "else", ":", "\n", "# correct AP calculation", "\n", "# first append sentinel values at the end", "\n", "        ", "mrec", "=", "np", ".", "concatenate", "(", "(", "[", "0.", "]", ",", "rec", ",", "[", "1.", "]", ")", ")", "\n", "mpre", "=", "np", ".", "concatenate", "(", "(", "[", "0.", "]", ",", "prec", ",", "[", "0.", "]", ")", ")", "\n", "\n", "# compute the precision envelope", "\n", "for", "i", "in", "range", "(", "mpre", ".", "size", "-", "1", ",", "0", ",", "-", "1", ")", ":", "\n", "            ", "mpre", "[", "i", "-", "1", "]", "=", "np", ".", "maximum", "(", "mpre", "[", "i", "-", "1", "]", ",", "mpre", "[", "i", "]", ")", "\n", "\n", "# to calculate area under PR curve, look for points", "\n", "# where X axis (recall) changes value", "\n", "", "i", "=", "np", ".", "where", "(", "mrec", "[", "1", ":", "]", "!=", "mrec", "[", ":", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "# and sum (\\Delta recall) * prec", "\n", "ap", "=", "np", ".", "sum", "(", "(", "mrec", "[", "i", "+", "1", "]", "-", "mrec", "[", "i", "]", ")", "*", "mpre", "[", "i", "+", "1", "]", ")", "\n", "", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.__init__": [[9, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", ";", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.name": [[12, 14], ["None"], "methods", ["None"], ["", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "'BaseModel'", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.initialize": [[15, 18], ["None"], "methods", ["None"], ["", "def", "initialize", "(", "self", ",", "use_gpu", "=", "True", ",", "gpu_ids", "=", "[", "0", "]", ")", ":", "\n", "        ", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "gpu_ids", "=", "gpu_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.forward": [[19, 21], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.get_image_paths": [[53, 55], ["None"], "methods", ["None"], ["", "def", "get_image_paths", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "image_paths", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.optimize_parameters": [[25, 27], ["None"], "methods", ["None"], ["", "def", "optimize_parameters", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.get_current_visuals": [[28, 30], ["None"], "methods", ["None"], ["", "def", "get_current_visuals", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.get_current_errors": [[31, 33], ["None"], "methods", ["None"], ["", "def", "get_current_errors", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save": [[34, 36], ["None"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "label", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save_network": [[38, 42], ["os.path.join", "torch.save", "network.state_dict"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save"], ["", "def", "save_network", "(", "self", ",", "network", ",", "path", ",", "network_label", ",", "epoch_label", ")", ":", "\n", "        ", "save_filename", "=", "'%s_net_%s.pth'", "%", "(", "epoch_label", ",", "network_label", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "save_filename", ")", "\n", "torch", ".", "save", "(", "network", ".", "state_dict", "(", ")", ",", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.load_network": [[44, 49], ["os.path.join", "print", "network.load_state_dict", "torch.load"], "methods", ["None"], ["", "def", "load_network", "(", "self", ",", "network", ",", "network_label", ",", "epoch_label", ")", ":", "\n", "        ", "save_filename", "=", "'%s_net_%s.pth'", "%", "(", "epoch_label", ",", "network_label", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "save_filename", ")", "\n", "print", "(", "'Loading network from %s'", "%", "save_path", ")", "\n", "network", ".", "load_state_dict", "(", "torch", ".", "load", "(", "save_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.update_learning_rate": [[50, 52], ["None"], "methods", ["None"], ["", "def", "update_learning_rate", "(", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save_done": [[56, 59], ["numpy.save", "numpy.savetxt", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.lpips.base_model.BaseModel.save"], ["", "def", "save_done", "(", "self", ",", "flag", "=", "False", ")", ":", "\n", "        ", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'done_flag'", ")", ",", "flag", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "self", ".", "save_dir", ",", "'done_flag'", ")", ",", "[", "flag", ",", "]", ",", "fmt", "=", "'%i'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLUFunctionBackward.forward": [[21, 45], ["ctx.save_for_backward", "grad_output.new_empty", "fused.fused_bias_act", "grad_output.contiguous", "list", "fused.fused_bias_act.sum().detach", "range", "fused.fused_bias_act.sum"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "grad_output", ",", "out", ",", "bias", ",", "negative_slope", ",", "scale", ")", ":", "\n", "        ", "ctx", ".", "save_for_backward", "(", "out", ")", "\n", "ctx", ".", "negative_slope", "=", "negative_slope", "\n", "ctx", ".", "scale", "=", "scale", "\n", "\n", "empty", "=", "grad_output", ".", "new_empty", "(", "0", ")", "\n", "\n", "grad_input", "=", "fused", ".", "fused_bias_act", "(", "\n", "grad_output", ".", "contiguous", "(", ")", ",", "empty", ",", "out", ",", "3", ",", "1", ",", "negative_slope", ",", "scale", "\n", ")", "\n", "\n", "dim", "=", "[", "0", "]", "\n", "\n", "if", "grad_input", ".", "ndim", ">", "2", ":", "\n", "            ", "dim", "+=", "list", "(", "range", "(", "2", ",", "grad_input", ".", "ndim", ")", ")", "\n", "\n", "", "if", "bias", ":", "\n", "            ", "grad_bias", "=", "grad_input", ".", "sum", "(", "dim", ")", ".", "detach", "(", ")", "\n", "\n", "", "else", ":", "\n", "            ", "grad_bias", "=", "empty", "\n", "\n", "", "return", "grad_input", ",", "grad_bias", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLUFunctionBackward.backward": [[46, 54], ["fused.fused_bias_act"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "gradgrad_input", ",", "gradgrad_bias", ")", ":", "\n", "        ", "out", ",", "=", "ctx", ".", "saved_tensors", "\n", "gradgrad_out", "=", "fused", ".", "fused_bias_act", "(", "\n", "gradgrad_input", ",", "gradgrad_bias", ",", "out", ",", "3", ",", "1", ",", "ctx", ".", "negative_slope", ",", "ctx", ".", "scale", "\n", ")", "\n", "\n", "return", "gradgrad_out", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLUFunction.forward": [[57, 72], ["input.new_empty", "fused.fused_bias_act", "ctx.save_for_backward"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ",", "bias", ",", "negative_slope", ",", "scale", ")", ":", "\n", "        ", "empty", "=", "input", ".", "new_empty", "(", "0", ")", "\n", "\n", "ctx", ".", "bias", "=", "bias", "is", "not", "None", "\n", "\n", "if", "bias", "is", "None", ":", "\n", "            ", "bias", "=", "empty", "\n", "\n", "", "out", "=", "fused", ".", "fused_bias_act", "(", "input", ",", "bias", ",", "empty", ",", "3", ",", "0", ",", "negative_slope", ",", "scale", ")", "\n", "ctx", ".", "save_for_backward", "(", "out", ")", "\n", "ctx", ".", "negative_slope", "=", "negative_slope", "\n", "ctx", ".", "scale", "=", "scale", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLUFunction.backward": [[73, 85], ["FusedLeakyReLUFunctionBackward.apply"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "out", ",", "=", "ctx", ".", "saved_tensors", "\n", "\n", "grad_input", ",", "grad_bias", "=", "FusedLeakyReLUFunctionBackward", ".", "apply", "(", "\n", "grad_output", ",", "out", ",", "ctx", ".", "bias", ",", "ctx", ".", "negative_slope", ",", "ctx", ".", "scale", "\n", ")", "\n", "\n", "if", "not", "ctx", ".", "bias", ":", "\n", "            ", "grad_bias", "=", "None", "\n", "\n", "", "return", "grad_input", ",", "grad_bias", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__": [[88, 99], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "bias", "=", "True", ",", "negative_slope", "=", "0.2", ",", "scale", "=", "2", "**", "0.5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "channel", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "self", ".", "bias", "=", "None", "\n", "\n", "", "self", ".", "negative_slope", "=", "negative_slope", "\n", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.FusedLeakyReLU.forward": [[100, 102], ["fused_act.fused_leaky_relu"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.fused_leaky_relu"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "fused_leaky_relu", "(", "input", ",", "self", ".", "bias", ",", "self", ".", "negative_slope", ",", "self", ".", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.fused_act.fused_leaky_relu": [[104, 120], ["FusedLeakyReLUFunction.apply", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu", "bias.view"], "function", ["None"], ["", "", "def", "fused_leaky_relu", "(", "input", ",", "bias", "=", "None", ",", "negative_slope", "=", "0.2", ",", "scale", "=", "2", "**", "0.5", ")", ":", "\n", "    ", "if", "input", ".", "device", ".", "type", "==", "\"cpu\"", ":", "\n", "        ", "if", "bias", "is", "not", "None", ":", "\n", "            ", "rest_dim", "=", "[", "1", "]", "*", "(", "input", ".", "ndim", "-", "bias", ".", "ndim", "-", "1", ")", "\n", "return", "(", "\n", "F", ".", "leaky_relu", "(", "\n", "input", "+", "bias", ".", "view", "(", "1", ",", "bias", ".", "shape", "[", "0", "]", ",", "*", "rest_dim", ")", ",", "negative_slope", "=", "0.2", "\n", ")", "\n", "*", "scale", "\n", ")", "\n", "\n", "", "else", ":", "\n", "            ", "return", "F", ".", "leaky_relu", "(", "input", ",", "negative_slope", "=", "0.2", ")", "*", "scale", "\n", "\n", "", "", "else", ":", "\n", "        ", "return", "FusedLeakyReLUFunction", ".", "apply", "(", "input", ",", "bias", ",", "negative_slope", ",", "scale", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.no_weight_gradients": [[12, 20], ["None"], "function", ["None"], ["@", "contextlib", ".", "contextmanager", "\n", "def", "no_weight_gradients", "(", ")", ":", "\n", "    ", "global", "weight_gradients_disabled", "\n", "\n", "old", "=", "weight_gradients_disabled", "\n", "weight_gradients_disabled", "=", "True", "\n", "yield", "\n", "weight_gradients_disabled", "=", "old", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d": [[22, 42], ["conv2d_gradfix.could_use_op", "torch.nn.functional.conv2d", "conv2d_gradfix().apply", "conv2d_gradfix.conv2d_gradfix"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.could_use_op", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d_gradfix"], ["", "def", "conv2d", "(", "input", ",", "weight", ",", "bias", "=", "None", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ")", ":", "\n", "    ", "if", "could_use_op", "(", "input", ")", ":", "\n", "        ", "return", "conv2d_gradfix", "(", "\n", "transpose", "=", "False", ",", "\n", "weight_shape", "=", "weight", ".", "shape", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "output_padding", "=", "0", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "groups", ",", "\n", ")", ".", "apply", "(", "input", ",", "weight", ",", "bias", ")", "\n", "\n", "", "return", "F", ".", "conv2d", "(", "\n", "input", "=", "input", ",", "\n", "weight", "=", "weight", ",", "\n", "bias", "=", "bias", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "groups", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv_transpose2d": [[45, 75], ["conv2d_gradfix.could_use_op", "torch.nn.functional.conv_transpose2d", "conv2d_gradfix().apply", "conv2d_gradfix.conv2d_gradfix"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.could_use_op", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv_transpose2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d_gradfix"], ["", "def", "conv_transpose2d", "(", "\n", "input", ",", "\n", "weight", ",", "\n", "bias", "=", "None", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "output_padding", "=", "0", ",", "\n", "groups", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", ")", ":", "\n", "    ", "if", "could_use_op", "(", "input", ")", ":", "\n", "        ", "return", "conv2d_gradfix", "(", "\n", "transpose", "=", "True", ",", "\n", "weight_shape", "=", "weight", ".", "shape", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "output_padding", "=", "output_padding", ",", "\n", "groups", "=", "groups", ",", "\n", "dilation", "=", "dilation", ",", "\n", ")", ".", "apply", "(", "input", ",", "weight", ",", "bias", ")", "\n", "\n", "", "return", "F", ".", "conv_transpose2d", "(", "\n", "input", "=", "input", ",", "\n", "weight", "=", "weight", ",", "\n", "bias", "=", "bias", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "output_padding", "=", "output_padding", ",", "\n", "dilation", "=", "dilation", ",", "\n", "groups", "=", "groups", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.could_use_op": [[78, 93], ["any", "warnings.warn", "torch.__version__.startswith"], "function", ["None"], ["", "def", "could_use_op", "(", "input", ")", ":", "\n", "    ", "if", "(", "not", "enabled", ")", "or", "(", "not", "torch", ".", "backends", ".", "cudnn", ".", "enabled", ")", ":", "\n", "        ", "return", "False", "\n", "\n", "", "if", "input", ".", "device", ".", "type", "!=", "\"cuda\"", ":", "\n", "        ", "return", "False", "\n", "\n", "", "if", "any", "(", "torch", ".", "__version__", ".", "startswith", "(", "x", ")", "for", "x", "in", "[", "\"1.7.\"", ",", "\"1.8.\"", "]", ")", ":", "\n", "        ", "return", "True", "\n", "\n", "", "warnings", ".", "warn", "(", "\n", "f\"conv2d_gradfix not supported on PyTorch {torch.__version__}. Falling back to torch.nn.functional.conv2d().\"", "\n", ")", "\n", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.ensure_tuple": [[95, 99], ["isinstance", "tuple"], "function", ["None"], ["", "def", "ensure_tuple", "(", "xs", ",", "ndim", ")", ":", "\n", "    ", "xs", "=", "tuple", "(", "xs", ")", "if", "isinstance", "(", "xs", ",", "(", "tuple", ",", "list", ")", ")", "else", "(", "xs", ",", ")", "*", "ndim", "\n", "\n", "return", "xs", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d_gradfix": [[104, 228], ["tuple", "conv2d_gradfix.ensure_tuple", "conv2d_gradfix.ensure_tuple", "conv2d_gradfix.ensure_tuple", "conv2d_gradfix.ensure_tuple", "dict", "ctx.save_for_backward", "torch._C._jit_get_operation", "torch._C._jit_get_operation.", "ctx.save_for_backward", "range", "torch.nn.functional.conv2d", "torch.nn.functional.conv_transpose2d", "conv2d_gradfix.conv2d_gradfix.calc_output_padding"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.ensure_tuple", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.ensure_tuple", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.ensure_tuple", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.ensure_tuple", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d", "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv_transpose2d"], ["def", "conv2d_gradfix", "(", "\n", "transpose", ",", "weight_shape", ",", "stride", ",", "padding", ",", "output_padding", ",", "dilation", ",", "groups", "\n", ")", ":", "\n", "    ", "ndim", "=", "2", "\n", "weight_shape", "=", "tuple", "(", "weight_shape", ")", "\n", "stride", "=", "ensure_tuple", "(", "stride", ",", "ndim", ")", "\n", "padding", "=", "ensure_tuple", "(", "padding", ",", "ndim", ")", "\n", "output_padding", "=", "ensure_tuple", "(", "output_padding", ",", "ndim", ")", "\n", "dilation", "=", "ensure_tuple", "(", "dilation", ",", "ndim", ")", "\n", "\n", "key", "=", "(", "transpose", ",", "weight_shape", ",", "stride", ",", "padding", ",", "output_padding", ",", "dilation", ",", "groups", ")", "\n", "if", "key", "in", "conv2d_gradfix_cache", ":", "\n", "        ", "return", "conv2d_gradfix_cache", "[", "key", "]", "\n", "\n", "", "common_kwargs", "=", "dict", "(", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", "\n", ")", "\n", "\n", "def", "calc_output_padding", "(", "input_shape", ",", "output_shape", ")", ":", "\n", "        ", "if", "transpose", ":", "\n", "            ", "return", "[", "0", ",", "0", "]", "\n", "\n", "", "return", "[", "\n", "input_shape", "[", "i", "+", "2", "]", "\n", "-", "(", "output_shape", "[", "i", "+", "2", "]", "-", "1", ")", "*", "stride", "[", "i", "]", "\n", "-", "(", "1", "-", "2", "*", "padding", "[", "i", "]", ")", "\n", "-", "dilation", "[", "i", "]", "*", "(", "weight_shape", "[", "i", "+", "2", "]", "-", "1", ")", "\n", "for", "i", "in", "range", "(", "ndim", ")", "\n", "]", "\n", "\n", "", "class", "Conv2d", "(", "autograd", ".", "Function", ")", ":", "\n", "        ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ",", "weight", ",", "bias", ")", ":", "\n", "            ", "if", "not", "transpose", ":", "\n", "                ", "out", "=", "F", ".", "conv2d", "(", "input", "=", "input", ",", "weight", "=", "weight", ",", "bias", "=", "bias", ",", "**", "common_kwargs", ")", "\n", "\n", "", "else", ":", "\n", "                ", "out", "=", "F", ".", "conv_transpose2d", "(", "\n", "input", "=", "input", ",", "\n", "weight", "=", "weight", ",", "\n", "bias", "=", "bias", ",", "\n", "output_padding", "=", "output_padding", ",", "\n", "**", "common_kwargs", ",", "\n", ")", "\n", "\n", "", "ctx", ".", "save_for_backward", "(", "input", ",", "weight", ")", "\n", "\n", "return", "out", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "            ", "input", ",", "weight", "=", "ctx", ".", "saved_tensors", "\n", "grad_input", ",", "grad_weight", ",", "grad_bias", "=", "None", ",", "None", ",", "None", "\n", "\n", "if", "ctx", ".", "needs_input_grad", "[", "0", "]", ":", "\n", "                ", "p", "=", "calc_output_padding", "(", "\n", "input_shape", "=", "input", ".", "shape", ",", "output_shape", "=", "grad_output", ".", "shape", "\n", ")", "\n", "grad_input", "=", "conv2d_gradfix", "(", "\n", "transpose", "=", "(", "not", "transpose", ")", ",", "\n", "weight_shape", "=", "weight_shape", ",", "\n", "output_padding", "=", "p", ",", "\n", "**", "common_kwargs", ",", "\n", ")", ".", "apply", "(", "grad_output", ",", "weight", ",", "None", ")", "\n", "\n", "", "if", "ctx", ".", "needs_input_grad", "[", "1", "]", "and", "not", "weight_gradients_disabled", ":", "\n", "                ", "grad_weight", "=", "Conv2dGradWeight", ".", "apply", "(", "grad_output", ",", "input", ")", "\n", "\n", "", "if", "ctx", ".", "needs_input_grad", "[", "2", "]", ":", "\n", "                ", "grad_bias", "=", "grad_output", ".", "sum", "(", "(", "0", ",", "2", ",", "3", ")", ")", "\n", "\n", "", "return", "grad_input", ",", "grad_weight", ",", "grad_bias", "\n", "\n", "", "", "class", "Conv2dGradWeight", "(", "autograd", ".", "Function", ")", ":", "\n", "        ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "grad_output", ",", "input", ")", ":", "\n", "            ", "op", "=", "torch", ".", "_C", ".", "_jit_get_operation", "(", "\n", "\"aten::cudnn_convolution_backward_weight\"", "\n", "if", "not", "transpose", "\n", "else", "\"aten::cudnn_convolution_transpose_backward_weight\"", "\n", ")", "\n", "flags", "=", "[", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", ",", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", ",", "\n", "torch", ".", "backends", ".", "cudnn", ".", "allow_tf32", ",", "\n", "]", "\n", "grad_weight", "=", "op", "(", "\n", "weight_shape", ",", "\n", "grad_output", ",", "\n", "input", ",", "\n", "padding", ",", "\n", "stride", ",", "\n", "dilation", ",", "\n", "groups", ",", "\n", "*", "flags", ",", "\n", ")", "\n", "ctx", ".", "save_for_backward", "(", "grad_output", ",", "input", ")", "\n", "\n", "return", "grad_weight", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_grad_weight", ")", ":", "\n", "            ", "grad_output", ",", "input", "=", "ctx", ".", "saved_tensors", "\n", "grad_grad_output", ",", "grad_grad_input", "=", "None", ",", "None", "\n", "\n", "if", "ctx", ".", "needs_input_grad", "[", "0", "]", ":", "\n", "                ", "grad_grad_output", "=", "Conv2d", ".", "apply", "(", "input", ",", "grad_grad_weight", ",", "None", ")", "\n", "\n", "", "if", "ctx", ".", "needs_input_grad", "[", "1", "]", ":", "\n", "                ", "p", "=", "calc_output_padding", "(", "\n", "input_shape", "=", "input", ".", "shape", ",", "output_shape", "=", "grad_output", ".", "shape", "\n", ")", "\n", "grad_grad_input", "=", "conv2d_gradfix", "(", "\n", "transpose", "=", "(", "not", "transpose", ")", ",", "\n", "weight_shape", "=", "weight_shape", ",", "\n", "output_padding", "=", "p", ",", "\n", "**", "common_kwargs", ",", "\n", ")", ".", "apply", "(", "grad_output", ",", "grad_grad_weight", ",", "None", ")", "\n", "\n", "", "return", "grad_grad_output", ",", "grad_grad_input", "\n", "\n", "", "", "conv2d_gradfix_cache", "[", "key", "]", "=", "Conv2d", "\n", "\n", "return", "Conv2d", "\n", "", ""]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2dBackward.forward": [[21, 62], ["grad_output.reshape.reshape.reshape", "upfirdn2d_op.upfirdn2d", "grad_input.view.view.view", "ctx.save_for_backward"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "\n", "ctx", ",", "grad_output", ",", "kernel", ",", "grad_kernel", ",", "up", ",", "down", ",", "pad", ",", "g_pad", ",", "in_size", ",", "out_size", "\n", ")", ":", "\n", "\n", "        ", "up_x", ",", "up_y", "=", "up", "\n", "down_x", ",", "down_y", "=", "down", "\n", "g_pad_x0", ",", "g_pad_x1", ",", "g_pad_y0", ",", "g_pad_y1", "=", "g_pad", "\n", "\n", "grad_output", "=", "grad_output", ".", "reshape", "(", "-", "1", ",", "out_size", "[", "0", "]", ",", "out_size", "[", "1", "]", ",", "1", ")", "\n", "\n", "grad_input", "=", "upfirdn2d_op", ".", "upfirdn2d", "(", "\n", "grad_output", ",", "\n", "grad_kernel", ",", "\n", "down_x", ",", "\n", "down_y", ",", "\n", "up_x", ",", "\n", "up_y", ",", "\n", "g_pad_x0", ",", "\n", "g_pad_x1", ",", "\n", "g_pad_y0", ",", "\n", "g_pad_y1", ",", "\n", ")", "\n", "grad_input", "=", "grad_input", ".", "view", "(", "in_size", "[", "0", "]", ",", "in_size", "[", "1", "]", ",", "in_size", "[", "2", "]", ",", "in_size", "[", "3", "]", ")", "\n", "\n", "ctx", ".", "save_for_backward", "(", "kernel", ")", "\n", "\n", "pad_x0", ",", "pad_x1", ",", "pad_y0", ",", "pad_y1", "=", "pad", "\n", "\n", "ctx", ".", "up_x", "=", "up_x", "\n", "ctx", ".", "up_y", "=", "up_y", "\n", "ctx", ".", "down_x", "=", "down_x", "\n", "ctx", ".", "down_y", "=", "down_y", "\n", "ctx", ".", "pad_x0", "=", "pad_x0", "\n", "ctx", ".", "pad_x1", "=", "pad_x1", "\n", "ctx", ".", "pad_y0", "=", "pad_y0", "\n", "ctx", ".", "pad_y1", "=", "pad_y1", "\n", "ctx", ".", "in_size", "=", "in_size", "\n", "ctx", ".", "out_size", "=", "out_size", "\n", "\n", "return", "grad_input", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2dBackward.backward": [[63, 87], ["gradgrad_input.reshape.reshape.reshape", "upfirdn2d_op.upfirdn2d", "gradgrad_out.view.view.view"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "gradgrad_input", ")", ":", "\n", "        ", "kernel", ",", "=", "ctx", ".", "saved_tensors", "\n", "\n", "gradgrad_input", "=", "gradgrad_input", ".", "reshape", "(", "-", "1", ",", "ctx", ".", "in_size", "[", "2", "]", ",", "ctx", ".", "in_size", "[", "3", "]", ",", "1", ")", "\n", "\n", "gradgrad_out", "=", "upfirdn2d_op", ".", "upfirdn2d", "(", "\n", "gradgrad_input", ",", "\n", "kernel", ",", "\n", "ctx", ".", "up_x", ",", "\n", "ctx", ".", "up_y", ",", "\n", "ctx", ".", "down_x", ",", "\n", "ctx", ".", "down_y", ",", "\n", "ctx", ".", "pad_x0", ",", "\n", "ctx", ".", "pad_x1", ",", "\n", "ctx", ".", "pad_y0", ",", "\n", "ctx", ".", "pad_y1", ",", "\n", ")", "\n", "# gradgrad_out = gradgrad_out.view(ctx.in_size[0], ctx.out_size[0], ctx.out_size[1], ctx.in_size[3])", "\n", "gradgrad_out", "=", "gradgrad_out", ".", "view", "(", "\n", "ctx", ".", "in_size", "[", "0", "]", ",", "ctx", ".", "in_size", "[", "1", "]", ",", "ctx", ".", "out_size", "[", "0", "]", ",", "ctx", ".", "out_size", "[", "1", "]", "\n", ")", "\n", "\n", "return", "gradgrad_out", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.forward": [[90, 126], ["input.reshape.reshape.reshape", "ctx.save_for_backward", "upfirdn2d_op.upfirdn2d", "out.view.view.view", "torch.flip"], "methods", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ",", "kernel", ",", "up", ",", "down", ",", "pad", ")", ":", "\n", "        ", "up_x", ",", "up_y", "=", "up", "\n", "down_x", ",", "down_y", "=", "down", "\n", "pad_x0", ",", "pad_x1", ",", "pad_y0", ",", "pad_y1", "=", "pad", "\n", "\n", "kernel_h", ",", "kernel_w", "=", "kernel", ".", "shape", "\n", "batch", ",", "channel", ",", "in_h", ",", "in_w", "=", "input", ".", "shape", "\n", "ctx", ".", "in_size", "=", "input", ".", "shape", "\n", "\n", "input", "=", "input", ".", "reshape", "(", "-", "1", ",", "in_h", ",", "in_w", ",", "1", ")", "\n", "\n", "ctx", ".", "save_for_backward", "(", "kernel", ",", "torch", ".", "flip", "(", "kernel", ",", "[", "0", ",", "1", "]", ")", ")", "\n", "\n", "out_h", "=", "(", "in_h", "*", "up_y", "+", "pad_y0", "+", "pad_y1", "-", "kernel_h", "+", "down_y", ")", "//", "down_y", "\n", "out_w", "=", "(", "in_w", "*", "up_x", "+", "pad_x0", "+", "pad_x1", "-", "kernel_w", "+", "down_x", ")", "//", "down_x", "\n", "ctx", ".", "out_size", "=", "(", "out_h", ",", "out_w", ")", "\n", "\n", "ctx", ".", "up", "=", "(", "up_x", ",", "up_y", ")", "\n", "ctx", ".", "down", "=", "(", "down_x", ",", "down_y", ")", "\n", "ctx", ".", "pad", "=", "(", "pad_x0", ",", "pad_x1", ",", "pad_y0", ",", "pad_y1", ")", "\n", "\n", "g_pad_x0", "=", "kernel_w", "-", "pad_x0", "-", "1", "\n", "g_pad_y0", "=", "kernel_h", "-", "pad_y0", "-", "1", "\n", "g_pad_x1", "=", "in_w", "*", "up_x", "-", "out_w", "*", "down_x", "+", "pad_x0", "-", "up_x", "+", "1", "\n", "g_pad_y1", "=", "in_h", "*", "up_y", "-", "out_h", "*", "down_y", "+", "pad_y0", "-", "up_y", "+", "1", "\n", "\n", "ctx", ".", "g_pad", "=", "(", "g_pad_x0", ",", "g_pad_x1", ",", "g_pad_y0", ",", "g_pad_y1", ")", "\n", "\n", "out", "=", "upfirdn2d_op", ".", "upfirdn2d", "(", "\n", "input", ",", "kernel", ",", "up_x", ",", "up_y", ",", "down_x", ",", "down_y", ",", "pad_x0", ",", "pad_x1", ",", "pad_y0", ",", "pad_y1", "\n", ")", "\n", "# out = out.view(major, out_h, out_w, minor)", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "channel", ",", "out_h", ",", "out_w", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.UpFirDn2d.backward": [[127, 147], ["UpFirDn2dBackward.apply"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "kernel", ",", "grad_kernel", "=", "ctx", ".", "saved_tensors", "\n", "\n", "grad_input", "=", "None", "\n", "\n", "if", "ctx", ".", "needs_input_grad", "[", "0", "]", ":", "\n", "            ", "grad_input", "=", "UpFirDn2dBackward", ".", "apply", "(", "\n", "grad_output", ",", "\n", "kernel", ",", "\n", "grad_kernel", ",", "\n", "ctx", ".", "up", ",", "\n", "ctx", ".", "down", ",", "\n", "ctx", ".", "pad", ",", "\n", "ctx", ".", "g_pad", ",", "\n", "ctx", ".", "in_size", ",", "\n", "ctx", ".", "out_size", ",", "\n", ")", "\n", "\n", "", "return", "grad_input", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d": [[149, 166], ["isinstance", "isinstance", "len", "upfirdn2d.upfirdn2d_native", "UpFirDn2d.apply"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d_native"], ["", "", "def", "upfirdn2d", "(", "input", ",", "kernel", ",", "up", "=", "1", ",", "down", "=", "1", ",", "pad", "=", "(", "0", ",", "0", ")", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "up", ",", "abc", ".", "Iterable", ")", ":", "\n", "        ", "up", "=", "(", "up", ",", "up", ")", "\n", "\n", "", "if", "not", "isinstance", "(", "down", ",", "abc", ".", "Iterable", ")", ":", "\n", "        ", "down", "=", "(", "down", ",", "down", ")", "\n", "\n", "", "if", "len", "(", "pad", ")", "==", "2", ":", "\n", "        ", "pad", "=", "(", "pad", "[", "0", "]", ",", "pad", "[", "1", "]", ",", "pad", "[", "0", "]", ",", "pad", "[", "1", "]", ")", "\n", "\n", "", "if", "input", ".", "device", ".", "type", "==", "\"cpu\"", ":", "\n", "        ", "out", "=", "upfirdn2d_native", "(", "input", ",", "kernel", ",", "*", "up", ",", "*", "down", ",", "*", "pad", ")", "\n", "\n", "", "else", ":", "\n", "        ", "out", "=", "UpFirDn2d", ".", "apply", "(", "input", ",", "kernel", ",", "up", ",", "down", ",", "pad", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.upfirdn2d.upfirdn2d_native": [[168, 210], ["input.reshape.reshape", "input.reshape.view", "torch.nn.functional.pad", "out.permute.view", "torch.nn.functional.pad", "out.permute.permute", "out.permute.reshape", "torch.flip().view", "torch.nn.functional.conv2d", "out.permute.reshape", "out.permute.permute", "out.permute.view", "max", "max", "max", "max", "torch.flip", "max", "max", "max", "max"], "function", ["home.repos.pwc.inspect_result.jychoi118_toward_spatial_unbiased.op.conv2d_gradfix.conv2d"], ["", "def", "upfirdn2d_native", "(", "\n", "input", ",", "kernel", ",", "up_x", ",", "up_y", ",", "down_x", ",", "down_y", ",", "pad_x0", ",", "pad_x1", ",", "pad_y0", ",", "pad_y1", "\n", ")", ":", "\n", "    ", "_", ",", "channel", ",", "in_h", ",", "in_w", "=", "input", ".", "shape", "\n", "input", "=", "input", ".", "reshape", "(", "-", "1", ",", "in_h", ",", "in_w", ",", "1", ")", "\n", "\n", "_", ",", "in_h", ",", "in_w", ",", "minor", "=", "input", ".", "shape", "\n", "kernel_h", ",", "kernel_w", "=", "kernel", ".", "shape", "\n", "\n", "out", "=", "input", ".", "view", "(", "-", "1", ",", "in_h", ",", "1", ",", "in_w", ",", "1", ",", "minor", ")", "\n", "out", "=", "F", ".", "pad", "(", "out", ",", "[", "0", ",", "0", ",", "0", ",", "up_x", "-", "1", ",", "0", ",", "0", ",", "0", ",", "up_y", "-", "1", "]", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "in_h", "*", "up_y", ",", "in_w", "*", "up_x", ",", "minor", ")", "\n", "\n", "out", "=", "F", ".", "pad", "(", "\n", "out", ",", "[", "0", ",", "0", ",", "max", "(", "pad_x0", ",", "0", ")", ",", "max", "(", "pad_x1", ",", "0", ")", ",", "max", "(", "pad_y0", ",", "0", ")", ",", "max", "(", "pad_y1", ",", "0", ")", "]", "\n", ")", "\n", "out", "=", "out", "[", "\n", ":", ",", "\n", "max", "(", "-", "pad_y0", ",", "0", ")", ":", "out", ".", "shape", "[", "1", "]", "-", "max", "(", "-", "pad_y1", ",", "0", ")", ",", "\n", "max", "(", "-", "pad_x0", ",", "0", ")", ":", "out", ".", "shape", "[", "2", "]", "-", "max", "(", "-", "pad_x1", ",", "0", ")", ",", "\n", ":", ",", "\n", "]", "\n", "\n", "out", "=", "out", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "out", "=", "out", ".", "reshape", "(", "\n", "[", "-", "1", ",", "1", ",", "in_h", "*", "up_y", "+", "pad_y0", "+", "pad_y1", ",", "in_w", "*", "up_x", "+", "pad_x0", "+", "pad_x1", "]", "\n", ")", "\n", "w", "=", "torch", ".", "flip", "(", "kernel", ",", "[", "0", ",", "1", "]", ")", ".", "view", "(", "1", ",", "1", ",", "kernel_h", ",", "kernel_w", ")", "\n", "out", "=", "F", ".", "conv2d", "(", "out", ",", "w", ")", "\n", "out", "=", "out", ".", "reshape", "(", "\n", "-", "1", ",", "\n", "minor", ",", "\n", "in_h", "*", "up_y", "+", "pad_y0", "+", "pad_y1", "-", "kernel_h", "+", "1", ",", "\n", "in_w", "*", "up_x", "+", "pad_x0", "+", "pad_x1", "-", "kernel_w", "+", "1", ",", "\n", ")", "\n", "out", "=", "out", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "out", "=", "out", "[", ":", ",", ":", ":", "down_y", ",", ":", ":", "down_x", ",", ":", "]", "\n", "\n", "out_h", "=", "(", "in_h", "*", "up_y", "+", "pad_y0", "+", "pad_y1", "-", "kernel_h", "+", "down_y", ")", "//", "down_y", "\n", "out_w", "=", "(", "in_w", "*", "up_x", "+", "pad_x0", "+", "pad_x1", "-", "kernel_w", "+", "down_x", ")", "//", "down_x", "\n", "\n", "return", "out", ".", "view", "(", "-", "1", ",", "channel", ",", "out_h", ",", "out_w", ")", "\n", "", ""]]}