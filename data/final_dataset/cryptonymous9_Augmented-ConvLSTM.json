{"home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.preprocess_data.get_list_from_config": [[8, 11], ["int", "strr.split"], "function", ["None"], ["def", "get_list_from_config", "(", "strr", ")", ":", "\n", "    ", "req_list", "=", "[", "int", "(", "i", ")", "for", "i", "in", "strr", ".", "split", "(", "','", ")", "]", "\n", "return", "req_list", "\n", "\n"]], "home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.preprocess_data.load_from_numpy": [[40, 54], ["numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load", "numpy.load"], "function", ["None"], ["def", "load_from_numpy", "(", ")", ":", "\n", "    ", "\"\"\"\n    Loading Numpy arrays pf each Climate Variable\n\n    \"\"\"", "\n", "X", "=", "np", ".", "load", "(", "DIR_gcm", "+", "'xdata.npy'", ")", "\n", "y", "=", "np", ".", "load", "(", "DIR_observed", "+", "'ydata.npy'", ")", "\n", "omega", "=", "np", ".", "load", "(", "DIR_omega", "+", "'omega.npy'", ")", "\n", "pressure", "=", "np", ".", "load", "(", "DIR_pressure", "+", "'pressure.npy'", ")", "\n", "rhum", "=", "np", ".", "load", "(", "DIR_humidity", "+", "'rhum.npy'", ")", "\n", "uwnd", "=", "np", ".", "load", "(", "DIR_uwind", "+", "'uwnd.npy'", ")", "\n", "vwnd", "=", "np", ".", "load", "(", "DIR_vwind", "+", "'vwnd.npy'", ")", "\n", "elev", "=", "np", ".", "load", "(", "DIR_elevation", "+", "'elevation.npy'", ")", "\n", "return", "X", ",", "y", ",", "omega", ",", "pressure", ",", "rhum", ",", "uwnd", ",", "vwnd", ",", "elev", "\n", "\n"]], "home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.preprocess_data.adjust_data": [[56, 73], ["None"], "function", ["None"], ["", "def", "adjust_data", "(", "X", ",", "y", ",", "omega", ",", "pressure", ",", "rhum", ",", "uwnd", ",", "vwnd", ")", ":", "\n", "    ", "'''\n    Default set for India:\n        GCM and Observed prjections data:\n            1920-2005 -> 1948-2005 (10220:)\n        \n        Auxilliary Climatic Variables: \n            1948-2018 -> 1948-2005 (: 21170)\n    '''", "\n", "X", "=", "X", "[", "gcm_start_index", ":", "]", "\n", "y", "=", "y", "[", "observed_start_index", ":", "]", "\n", "omega", "=", "omega", "[", ":", "omega_end_index", "]", "\n", "pressure", "=", "pressure", "[", ":", "pressure_end_index", "]", "\n", "rhum", "=", "rhum", "[", ":", "rhum_end_index", "]", "\n", "uwnd", "=", "uwnd", "[", ":", "uwind_end_index", "]", "\n", "vwnd", "=", "vwnd", "[", ":", "vwind_end_index", "]", "\n", "return", "X", ",", "y", ",", "omega", ",", "pressure", ",", "rhum", ",", "uwnd", ",", "vwnd", "\n", "\n"]], "home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.preprocess_data.combine_data": [[75, 88], ["numpy.zeros", "numpy.max"], "function", ["None"], ["", "def", "combine_data", "(", "X", ",", "y", ",", "omega", ",", "pressure", ",", "rhum", ",", "uwnd", ",", "vwnd", ")", ":", "\n", "    ", "\"\"\"\n    Stacking each Climate Variable across the individual channels.\n    \"\"\"", "\n", "X_final", "=", "np", ".", "zeros", "(", "(", "channels", ",", "np", ".", "max", "(", "X", ".", "shape", ")", ",", "projection_dimensions", "[", "0", "]", ",", "projection_dimensions", "[", "1", "]", ")", ")", "\n", "X_final", "[", "0", ",", "]", "=", "X", "\n", "X_final", "[", "1", ",", "]", "=", "elev", "\n", "X_final", "[", "2", ",", "]", "=", "rhum", "\n", "X_final", "[", "3", ",", "]", "=", "pressure", "\n", "X_final", "[", "4", ",", "]", "=", "omega", "\n", "X_final", "[", "5", ",", "]", "=", "uwnd", "\n", "X_final", "[", "6", ",", "]", "=", "vwnd", "\n", "return", "X_final", "\n", "\n"]], "home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.preprocess_data.split_for_monsoon": [[90, 118], ["range", "print", "print", "print", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "X_low.transpose", "X_high.transpose", "X_high.append", "y_high.append", "X_low.append", "y_low.append"], "function", ["None"], ["", "def", "split_for_monsoon", "(", "X", ",", "X_full_ch_last", ")", ":", "\n", "    ", "'''\n    Default set for India:\n        Non-Monsoon months -> Jan-April, Nov, Dec\n        Monsoon months -> May-Oct\n\n    '''", "\n", "X_low", ",", "y_low", "=", "[", "]", ",", "[", "]", "\n", "X_high", ",", "y_high", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "X", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "day", "=", "i", "%", "365", "\n", "if", "day", ">", "120", "and", "day", "<", "304", ":", "\n", "            ", "X_high", ".", "append", "(", "X_full_ch_last", "[", "i", "]", ")", "\n", "y_high", ".", "append", "(", "y", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "            ", "X_low", ".", "append", "(", "X_full_ch_last", "[", "i", "]", ")", "\n", "y_low", ".", "append", "(", "y", "[", "i", "]", ")", "\n", "\n", "", "", "X_low", ",", "y_low", "=", "np", ".", "asarray", "(", "X_low", ")", ",", "np", ".", "asarray", "(", "y_low", ")", "\n", "X_high", ",", "y_high", "=", "np", ".", "asarray", "(", "X_high", ")", ",", "np", ".", "asarray", "(", "y_high", ")", "\n", "\n", "X_low", ",", "X_high", "=", "X_low", ".", "transpose", "(", "3", ",", "0", ",", "1", ",", "2", ")", ",", "X_high", ".", "transpose", "(", "3", ",", "0", ",", "1", ",", "2", ")", "\n", "\n", "print", "(", "\"Shape Low Precipitation X: \"", ",", "X_low", ".", "shape", ",", "\" Y: \"", ",", "y_low", ".", "shape", ")", "\n", "print", "(", "\"Shape High Precipitation X: \"", ",", "X_high", ".", "shape", ",", "\" Y: \"", ",", "y_high", ".", "shape", ")", "\n", "print", "(", "'------------'", ")", "\n", "return", "X_low", ",", "y_low", ",", "X_high", ",", "y_high", "\n", "\n"]], "home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.preprocess_data.split_save_to_numpy": [[120, 132], ["numpy.save", "numpy.save", "print", "numpy.save", "numpy.save", "print"], "function", ["None"], ["", "def", "split_save_to_numpy", "(", "X_low", ",", "y_low", ",", "X_high", ",", "y_high", ")", ":", "\n", "    ", "\"\"\"\n    Save the processed numpy data to respective folder.\n    \"\"\"", "\n", "np", ".", "save", "(", "DIR_monsoon_gcm", "+", "'X_low.npy'", ",", "X_low", ")", "\n", "np", ".", "save", "(", "DIR_monsoon_observed", "+", "'Y_low.npy'", ",", "y_low", ")", "\n", "print", "(", "\"Low Precipitation Data Saved!\"", ")", "\n", "\n", "np", ".", "save", "(", "DIR_non_monsoon_gcm", "+", "'X_high.npy'", ",", "X_high", ")", "\n", "np", ".", "save", "(", "DIR_non_monsoon_observed", "+", "'Y_high.npy'", ",", "y_high", ")", "\n", "print", "(", "\"High Precipitation Data Saved!\"", ")", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.model.AugementedConvLSTM.__init__": [[13, 31], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "channels", "=", "7", ",", "projection_height", "=", "129", ",", "projection_width", "=", "135", ",", "timesteps", "=", "5", ")", ":", "\n", "        ", "\"\"\"\n        Initialize:\n\n            channels: no. of climate variables involved (default:  7)\n\n            projection_height: Height of the interpolated ESM projection (default for India:  129)\n            \n            projection_width: Width of the interpolated ESM projection (default for India:  135)\n            \n            timesteps: Number of consecutive days allowed for generating a single projections. \n\n        \"\"\"", "\n", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "projection_height", "=", "projection_height", "\n", "self", ".", "projection_width", "=", "projection_width", "\n", "self", ".", "timesteps", "=", "timesteps", "\n", "\n"]], "home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.model.AugementedConvLSTM.SR_block": [[32, 56], ["tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Add"], "methods", ["None"], ["", "def", "SR_block", "(", "self", ",", "x_in", ",", "sr_block_kernels", "=", "[", "128", ",", "64", ",", "1", "]", ",", "sr_block_kernel_sizes", "=", "[", "9", ",", "3", ",", "5", "]", ")", ":", "\n", "        ", "\"\"\"\n        Super-Resolution Block\n        \n            x_in: Input Image\n            \n            sr_block_kernels: (List)No. of Kernels for each Conv2D layer\n                     Default: [128, 64, 1]\n            \n            sr_block_kernel_sizes: (List)Kernel Sized for each Conv2D layer\n                     Default: [9, 5, 3]\n        \"\"\"", "\n", "\n", "x", "=", "keras", ".", "layers", ".", "Conv2D", "(", "filters", "=", "sr_block_kernels", "[", "0", "]", ",", "kernel_size", "=", "sr_block_kernel_sizes", "[", "0", "]", ",", "\n", "padding", "=", "'same'", ",", "activation", "=", "'relu'", ")", "(", "x_in", ")", "\n", "\n", "x", "=", "keras", ".", "layers", ".", "Conv2D", "(", "filters", "=", "sr_block_kernels", "[", "1", "]", ",", "kernel_size", "=", "sr_block_kernel_sizes", "[", "1", "]", ",", "\n", "padding", "=", "'same'", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "\n", "x", "=", "keras", ".", "layers", ".", "Conv2D", "(", "filters", "=", "sr_block_kernels", "[", "2", "]", ",", "kernel_size", "=", "sr_block_kernel_sizes", "[", "2", "]", ",", "\n", "padding", "=", "'same'", ",", "activation", "=", "'relu'", ")", "(", "x", ")", "\n", "output", "=", "keras", ".", "layers", ".", "Add", "(", ")", "(", "[", "x_in", ",", "x", "]", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.model.AugementedConvLSTM.model": [[57, 112], ["tensorflow.keras.layers.Input", "range", "tensorflow.keras.models.Model", "tensorflow.keras.layers.ConvLSTM2D", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.ConvLSTM2D", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.ConvLSTM2D", "model.AugementedConvLSTM.SR_block", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Add", "tensorflow.keras.layers.Conv2D"], "methods", ["home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.model.AugementedConvLSTM.SR_block"], ["", "def", "model", "(", "self", ",", "convlstm_kernels", "=", "[", "32", ",", "16", ",", "16", "]", ",", "convlstm_kernel_sizes", "=", "[", "9", ",", "5", ",", "3", "]", ",", "\n", "sr_block_kernels", "=", "[", "128", ",", "64", ",", "1", "]", ",", "sr_block_kernel_sizes", "=", "[", "9", ",", "3", ",", "5", "]", ",", "sr_block_depth", "=", "2", ")", ":", "\n", "        ", "\"\"\"\n        Main Model:\n        \n        Input Dimension: (timesteps, projection_height, projection_width, channels)\n        \n            convlstm_kernels: (List length 3) Number of kernels for each ConvLSTM layer\n                    Default:  [32,16,16]\n\n            convlstm_kernel_sizes: (List length 3) Kernel sizes for each ConvLSTM layer\n                    Default:  [9,5,3]\n            \n            sr_block_kernels: (List length 3) Number of kernels for each Conv2D layer in SR-Block\n                    Default:  [129,64,1]\n            \n            sr_block_kernel_sizes: (List length 3) Kernel sizes for each Conv2D layer in SR-Block\n                    Default:  [9,5,3]\n\n            sr_block_depth: (int) No. of SR-blocks        \n                    Default:  2\n\n        Output Dimension: (projection_height, projection_width)\n\n        \"\"\"", "\n", "\n", "x_in", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "self", ".", "timesteps", ",", "self", ".", "projection_height", ",", "\n", "self", ".", "projection_width", ",", "self", ".", "channels", ")", ")", "\n", "\n", "x", "=", "keras", ".", "layers", ".", "ConvLSTM2D", "(", "filters", "=", "convlstm_kernels", "[", "0", "]", ",", "kernel_size", "=", "convlstm_kernel_sizes", "[", "0", "]", ",", "\n", "padding", "=", "'same'", ",", "return_sequences", "=", "True", ")", "(", "x_in", ")", "\n", "\n", "x", "=", "keras", ".", "layers", ".", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "\n", "x", "=", "b", "=", "keras", ".", "layers", ".", "ConvLSTM2D", "(", "filters", "=", "convlstm_kernels", "[", "1", "]", ",", "kernel_size", "=", "convlstm_kernel_sizes", "[", "1", "]", ",", "\n", "padding", "=", "'same'", ",", "return_sequences", "=", "True", ")", "(", "x", ")", "\n", "\n", "x", "=", "keras", ".", "layers", ".", "BatchNormalization", "(", ")", "(", "x", ")", "\n", "\n", "x", "=", "b", "=", "keras", ".", "layers", ".", "ConvLSTM2D", "(", "filters", "=", "convlstm_kernels", "[", "2", "]", ",", "kernel_size", "=", "convlstm_kernel_sizes", "[", "2", "]", ",", "\n", "padding", "=", "'same'", ",", "return_sequences", "=", "False", ")", "(", "x", ")", "\n", "\n", "for", "i", "in", "range", "(", "sr_block_depth", ")", ":", "\n", "            ", "b", "=", "self", ".", "SR_block", "(", "b", ")", "\n", "\n", "", "b", "=", "keras", ".", "layers", ".", "Conv2D", "(", "filters", "=", "convlstm_kernels", "[", "-", "1", "]", ",", "kernel_size", "=", "convlstm_kernel_sizes", "[", "-", "1", "]", ",", "\n", "padding", "=", "'same'", ",", "activation", "=", "'relu'", ")", "(", "b", ")", "\n", "\n", "x", "=", "keras", ".", "layers", ".", "Add", "(", ")", "(", "[", "x", ",", "b", "]", ")", "\n", "\n", "x", "=", "keras", ".", "layers", ".", "Conv2D", "(", "filters", "=", "1", ",", "kernel_size", "=", "convlstm_kernel_sizes", "[", "-", "2", "]", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "\n", "return", "keras", ".", "models", ".", "Model", "(", "x_in", ",", "x", ")", "\n", "\n", "return", "model", "", "", "", ""]], "home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.sample_test.get_list_from_config": [[22, 25], ["int", "strr.split"], "function", ["None"], ["def", "get_list_from_config", "(", "strr", ")", ":", "\n", "    ", "req_list", "=", "[", "int", "(", "i", ")", "for", "i", "in", "strr", ".", "split", "(", "','", ")", "]", "\n", "return", "req_list", "\n", "\n"]], "home.repos.pwc.inspect_result.cryptonymous9_Augmented-ConvLSTM.None.sample_test.load_dataset": [[32, 36], ["numpy.load", "numpy.load"], "function", ["None"], ["def", "load_dataset", "(", "X_", "=", "DIR", "+", "'X_low.npy'", ",", "Y_", "=", "DIR", "+", "'Y_low.npy'", ")", ":", "\n", "    ", "X", "=", "np", ".", "load", "(", "X_", ")", "\n", "Y", "=", "np", ".", "load", "(", "Y_", ")", "\n", "return", "X", ",", "Y", "\n", "\n"]]}