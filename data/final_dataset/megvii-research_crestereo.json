{"home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.parse_yaml": [[21, 27], ["open", "yaml.safe_load", "collections.namedtuple", "cfg.keys", "cfg.values"], "function", ["None"], ["def", "parse_yaml", "(", "file_path", ":", "str", ")", "->", "namedtuple", ":", "\n", "    ", "\"\"\"Parse yaml configuration file and return the object in `namedtuple`.\"\"\"", "\n", "with", "open", "(", "file_path", ",", "\"rb\"", ")", "as", "f", ":", "\n", "        ", "cfg", ":", "dict", "=", "yaml", ".", "safe_load", "(", "f", ")", "\n", "", "args", "=", "namedtuple", "(", "\"train_args\"", ",", "cfg", ".", "keys", "(", ")", ")", "(", "*", "cfg", ".", "values", "(", ")", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.format_time": [[29, 35], ["int"], "function", ["None"], ["", "def", "format_time", "(", "elapse", ")", ":", "\n", "    ", "elapse", "=", "int", "(", "elapse", ")", "\n", "hour", "=", "elapse", "//", "3600", "\n", "minute", "=", "elapse", "%", "3600", "//", "60", "\n", "seconds", "=", "elapse", "%", "60", "\n", "return", "\"{:02d}:{:02d}:{:02d}\"", ".", "format", "(", "hour", ",", "minute", ",", "seconds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.ensure_dir": [[37, 40], ["os.path.exists", "os.makedirs"], "function", ["None"], ["", "def", "ensure_dir", "(", "path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ",", "exist_ok", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.adjust_learning_rate": [[42, 60], ["None"], "function", ["None"], ["", "", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "\n", "    ", "warm_up", "=", "0.02", "\n", "const_range", "=", "0.6", "\n", "min_lr_rate", "=", "0.05", "\n", "\n", "if", "epoch", "<=", "args", ".", "n_total_epoch", "*", "warm_up", ":", "\n", "        ", "lr", "=", "(", "1", "-", "min_lr_rate", ")", "*", "args", ".", "base_lr", "/", "(", "\n", "args", ".", "n_total_epoch", "*", "warm_up", "\n", ")", "*", "epoch", "+", "min_lr_rate", "*", "args", ".", "base_lr", "\n", "", "elif", "args", ".", "n_total_epoch", "*", "warm_up", "<", "epoch", "<=", "args", ".", "n_total_epoch", "*", "const_range", ":", "\n", "        ", "lr", "=", "args", ".", "base_lr", "\n", "", "else", ":", "\n", "        ", "lr", "=", "(", "min_lr_rate", "-", "1", ")", "*", "args", ".", "base_lr", "/", "(", "\n", "(", "1", "-", "const_range", ")", "*", "args", ".", "n_total_epoch", "\n", ")", "*", "epoch", "+", "(", "1", "-", "min_lr_rate", "*", "const_range", ")", "/", "(", "1", "-", "const_range", ")", "*", "args", ".", "base_lr", "\n", "\n", "", "optimizer", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.sequence_loss": [[62, 73], ["len", "range", "megengine.abs", "megengine.expand_dims"], "function", ["None"], ["", "def", "sequence_loss", "(", "flow_preds", ",", "flow_gt", ",", "valid", ",", "gamma", "=", "0.8", ")", ":", "\n", "\n", "    ", "n_predictions", "=", "len", "(", "flow_preds", ")", "\n", "flow_loss", "=", "0.0", "\n", "\n", "for", "i", "in", "range", "(", "n_predictions", ")", ":", "\n", "        ", "i_weight", "=", "gamma", "**", "(", "n_predictions", "-", "i", "-", "1", ")", "\n", "i_loss", "=", "F", ".", "abs", "(", "flow_preds", "[", "i", "]", "-", "flow_gt", ")", "\n", "flow_loss", "+=", "i_weight", "*", "(", "F", ".", "expand_dims", "(", "valid", ",", "axis", "=", "1", ")", "*", "i_loss", ")", ".", "mean", "(", ")", "\n", "\n", "", "return", "flow_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.main": [[75, 297], ["megengine.random.seed", "megengine.dtr.enable", "os.path.join", "train.ensure_dir", "nets.Model", "megengine.Adam", "megengine.GradManager().attach", "os.path.join", "dataset.CREStereoDataset", "megengine.data.Infinite", "megengine.data.DataLoader", "time.perf_counter", "range", "megengine.get_rank", "megengine.get_world_size", "nets.Model.parameters", "nets.Model.parameters", "megengine.amp.GradScaler", "tensorboardX.SummaryWriter", "logging.basicConfig", "logging.getLogger", "logging.FileHandler", "logging.Formatter", "logging.FileHandler.setFormatter", "logging.StreamHandler", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger.info", "logging.getLogger.info", "megengine.load", "nets.Model.load_state_dict", "optim.Adam.load_state_dict", "megengine.bcast_list_", "logging.getLogger.info", "megengine.data.RandomSampler", "train.adjust_learning_rate", "nets.Model.train", "time.perf_counter", "logging.getLogger.info", "megengine.make_allreduce_cb", "megengine.GradManager", "os.path.join", "os.path.join", "os.path.exists", "logging.getLogger.info", "nets.Model.tensors", "time.perf_counter", "sequence_loss.item", "time.perf_counter", "time.perf_counter", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.flush", "megengine.save", "eval", "sum", "nets.Model.state_dict", "optim.Adam.state_dict", "os.path.join", "os.path.join", "logging.getLogger.info", "megengine.save", "len", "megengine.amp.autocast", "megengine.tensor", "megengine.tensor", "megengine.tensor", "megengine.tensor", "megengine.expand_dims", "megengine.concat", "nets.Model.", "train.sequence_loss", "optim.Adam.step().clear_grad", "list", "list.append", "list.append", "list.append", "list.append", "list.append", "list.append", "logging.getLogger.info", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.flush", "scaler.backward", "autodiff.GradManager().attach.backward", "nets.Model.parameters", "optim.Adam.step", "max", "train.format_time", "train.format_time"], "function", ["home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.ensure_dir", "home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.adjust_learning_rate", "home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.sequence_loss", "home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.format_time", "home.repos.pwc.inspect_result.megvii-research_crestereo.None.train.format_time"], ["", "def", "main", "(", "args", ")", ":", "\n", "# initial info", "\n", "    ", "mge", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "rank", ",", "world_size", "=", "dist", ".", "get_rank", "(", ")", ",", "dist", ".", "get_world_size", "(", ")", "\n", "mge", ".", "dtr", ".", "enable", "(", ")", "# Dynamic tensor rematerialization for memory optimization", "\n", "\n", "# directory check", "\n", "log_model_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "log_dir", ",", "\"models\"", ")", "\n", "ensure_dir", "(", "log_model_dir", ")", "\n", "\n", "# model / optimizer", "\n", "model", "=", "Model", "(", "\n", "max_disp", "=", "args", ".", "max_disp", ",", "mixed_precision", "=", "args", ".", "mixed_precision", ",", "test_mode", "=", "False", "\n", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "0.1", ",", "betas", "=", "(", "0.9", ",", "0.999", ")", ")", "\n", "dist_callbacks", "=", "None", "if", "world_size", "==", "1", "else", "[", "dist", ".", "make_allreduce_cb", "(", "\"mean\"", ")", "]", "\n", "gm", "=", "autodiff", ".", "GradManager", "(", ")", ".", "attach", "(", "model", ".", "parameters", "(", ")", ",", "callbacks", "=", "dist_callbacks", ")", "\n", "scaler", "=", "mge", ".", "amp", ".", "GradScaler", "(", ")", "if", "args", ".", "mixed_precision", "else", "None", "\n", "\n", "if", "rank", "==", "0", ":", "\n", "# tensorboard", "\n", "        ", "tb_log", "=", "SummaryWriter", "(", "os", ".", "path", ".", "join", "(", "args", ".", "log_dir", ",", "\"train.events\"", ")", ")", "\n", "\n", "# worklog", "\n", "logging", ".", "basicConfig", "(", "level", "=", "eval", "(", "args", ".", "log_level", ")", ")", "\n", "worklog", "=", "logging", ".", "getLogger", "(", "\"train_logger\"", ")", "\n", "worklog", ".", "propagate", "=", "False", "\n", "fileHandler", "=", "logging", ".", "FileHandler", "(", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "log_dir", ",", "\"worklog.txt\"", ")", ",", "mode", "=", "\"a\"", ",", "encoding", "=", "\"utf8\"", "\n", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "\n", "fmt", "=", "\"%(asctime)s %(message)s\"", ",", "datefmt", "=", "\"%Y/%m/%d %H:%M:%S\"", "\n", ")", "\n", "fileHandler", ".", "setFormatter", "(", "formatter", ")", "\n", "consoleHandler", "=", "logging", ".", "StreamHandler", "(", "sys", ".", "stdout", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "\n", "fmt", "=", "\"\\x1b[32m%(asctime)s\\x1b[0m %(message)s\"", ",", "datefmt", "=", "\"%Y/%m/%d %H:%M:%S\"", "\n", ")", "\n", "consoleHandler", ".", "setFormatter", "(", "formatter", ")", "\n", "worklog", ".", "handlers", "=", "[", "fileHandler", ",", "consoleHandler", "]", "\n", "\n", "# params stat", "\n", "worklog", ".", "info", "(", "f\"Use {world_size} GPU(s)\"", ")", "\n", "worklog", ".", "info", "(", "\"Params: %s\"", "%", "sum", "(", "[", "p", ".", "size", "for", "p", "in", "model", ".", "parameters", "(", ")", "]", ")", ")", "\n", "\n", "# load pretrained model if exist", "\n", "", "chk_path", "=", "os", ".", "path", ".", "join", "(", "log_model_dir", ",", "\"latest.mge\"", ")", "\n", "if", "args", ".", "loadmodel", "is", "not", "None", ":", "\n", "        ", "chk_path", "=", "args", ".", "loadmodel", "\n", "", "elif", "not", "os", ".", "path", ".", "exists", "(", "chk_path", ")", ":", "\n", "        ", "chk_path", "=", "None", "\n", "\n", "", "if", "chk_path", "is", "not", "None", ":", "\n", "        ", "if", "rank", "==", "0", ":", "\n", "            ", "worklog", ".", "info", "(", "f\"loading model: {chk_path}\"", ")", "\n", "\n", "", "pretrained_dict", "=", "mge", ".", "load", "(", "chk_path", ",", "map_location", "=", "\"cpu\"", ")", "\n", "resume_epoch_idx", "=", "pretrained_dict", "[", "\"epoch\"", "]", "\n", "resume_iters", "=", "pretrained_dict", "[", "\"iters\"", "]", "\n", "model", ".", "load_state_dict", "(", "pretrained_dict", "[", "\"state_dict\"", "]", ",", "strict", "=", "True", ")", "\n", "optimizer", ".", "load_state_dict", "(", "pretrained_dict", "[", "\"optim_state_dict\"", "]", ")", "\n", "start_epoch_idx", "=", "resume_epoch_idx", "+", "1", "\n", "start_iters", "=", "resume_iters", "\n", "", "else", ":", "\n", "        ", "start_epoch_idx", "=", "1", "\n", "start_iters", "=", "0", "\n", "\n", "# auxiliary", "\n", "", "if", "world_size", ">", "1", ":", "\n", "        ", "dist", ".", "bcast_list_", "(", "model", ".", "tensors", "(", ")", ")", "\n", "\n", "# datasets", "\n", "", "dataset", "=", "CREStereoDataset", "(", "args", ".", "training_data_path", ")", "\n", "if", "rank", "==", "0", ":", "\n", "        ", "worklog", ".", "info", "(", "f\"Dataset size: {len(dataset)}\"", ")", "\n", "", "inf_sampler", "=", "Infinite", "(", "\n", "RandomSampler", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "args", ".", "batch_size_single", ",", "\n", "drop_last", "=", "False", ",", "\n", "world_size", "=", "world_size", ",", "\n", "rank", "=", "rank", ",", "\n", "seed", "=", "args", ".", "seed", ",", "\n", ")", "\n", ")", "\n", "dataloader", "=", "DataLoader", "(", "\n", "dataset", ",", "sampler", "=", "inf_sampler", ",", "num_workers", "=", "0", ",", "divide", "=", "False", ",", "preload", "=", "True", "\n", ")", "\n", "\n", "# counter", "\n", "cur_iters", "=", "start_iters", "\n", "total_iters", "=", "args", ".", "minibatch_per_epoch", "*", "args", ".", "n_total_epoch", "\n", "t0", "=", "time", ".", "perf_counter", "(", ")", "\n", "for", "epoch_idx", "in", "range", "(", "start_epoch_idx", ",", "args", ".", "n_total_epoch", "+", "1", ")", ":", "\n", "\n", "# adjust learning rate", "\n", "        ", "epoch_total_train_loss", "=", "0", "\n", "adjust_learning_rate", "(", "optimizer", ",", "epoch_idx", ")", "\n", "model", ".", "train", "(", ")", "\n", "\n", "t1", "=", "time", ".", "perf_counter", "(", ")", "\n", "batch_idx", "=", "0", "\n", "\n", "for", "mini_batch_data", "in", "dataloader", ":", "\n", "\n", "            ", "if", "batch_idx", "%", "args", ".", "minibatch_per_epoch", "==", "0", "and", "batch_idx", "!=", "0", ":", "\n", "                ", "break", "\n", "", "batch_idx", "+=", "1", "\n", "cur_iters", "+=", "1", "\n", "\n", "# parse data", "\n", "left", ",", "right", ",", "gt_disp", ",", "valid_mask", "=", "(", "\n", "mini_batch_data", "[", "\"left\"", "]", ",", "\n", "mini_batch_data", "[", "\"right\"", "]", ",", "\n", "mini_batch_data", "[", "\"disparity\"", "]", ",", "\n", "mini_batch_data", "[", "\"mask\"", "]", ",", "\n", ")", "\n", "\n", "t2", "=", "time", ".", "perf_counter", "(", ")", "\n", "\n", "with", "gm", ":", "# GradManager", "\n", "                ", "with", "mge", ".", "amp", ".", "autocast", "(", "enabled", "=", "args", ".", "mixed_precision", ")", ":", "\n", "\n", "# pre-process", "\n", "                    ", "left", "=", "mge", ".", "tensor", "(", "left", ")", "\n", "right", "=", "mge", ".", "tensor", "(", "right", ")", "\n", "gt_disp", "=", "mge", ".", "tensor", "(", "gt_disp", ")", "\n", "valid_mask", "=", "mge", ".", "tensor", "(", "valid_mask", ")", "\n", "gt_disp", "=", "F", ".", "expand_dims", "(", "gt_disp", ",", "axis", "=", "1", ")", "\n", "gt_flow", "=", "F", ".", "concat", "(", "[", "gt_disp", ",", "gt_disp", "*", "0", "]", ",", "axis", "=", "1", ")", "\n", "\n", "# forward", "\n", "flow_predictions", "=", "model", "(", "left", ",", "right", ")", "\n", "\n", "# loss & backword", "\n", "loss", "=", "sequence_loss", "(", "\n", "flow_predictions", ",", "gt_flow", ",", "valid_mask", ",", "gamma", "=", "0.8", "\n", ")", "\n", "if", "args", ".", "mixed_precision", ":", "\n", "                        ", "scaler", ".", "backward", "(", "gm", ",", "loss", ")", "\n", "", "else", ":", "\n", "                        ", "gm", ".", "backward", "(", "loss", ")", "\n", "", "optimizer", ".", "step", "(", ")", ".", "clear_grad", "(", ")", "\n", "\n", "# loss stats", "\n", "", "", "loss_item", "=", "loss", ".", "item", "(", ")", "\n", "epoch_total_train_loss", "+=", "loss_item", "\n", "t3", "=", "time", ".", "perf_counter", "(", ")", "\n", "\n", "# terminal print log", "\n", "if", "rank", "==", "0", ":", "\n", "                ", "if", "cur_iters", "%", "5", "==", "0", ":", "\n", "                    ", "tdata", "=", "t2", "-", "t1", "\n", "time_train_passed", "=", "t3", "-", "t0", "\n", "time_iter_passed", "=", "t3", "-", "t1", "\n", "step_passed", "=", "cur_iters", "-", "start_iters", "\n", "eta", "=", "(", "\n", "(", "total_iters", "-", "cur_iters", ")", "\n", "/", "max", "(", "step_passed", ",", "1e-7", ")", "\n", "*", "time_train_passed", "\n", ")", "\n", "\n", "meta_info", "=", "list", "(", ")", "\n", "meta_info", ".", "append", "(", "\"{:.2g} b/s\"", ".", "format", "(", "1.0", "/", "time_iter_passed", ")", ")", "\n", "meta_info", ".", "append", "(", "\"passed:{}\"", ".", "format", "(", "format_time", "(", "time_train_passed", ")", ")", ")", "\n", "meta_info", ".", "append", "(", "\"eta:{}\"", ".", "format", "(", "format_time", "(", "eta", ")", ")", ")", "\n", "meta_info", ".", "append", "(", "\n", "\"data_time:{:.2g}\"", ".", "format", "(", "tdata", "/", "time_iter_passed", ")", "\n", ")", "\n", "meta_info", ".", "append", "(", "\n", "\"lr:{:.5g}\"", ".", "format", "(", "optimizer", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", ")", "\n", ")", "\n", "meta_info", ".", "append", "(", "\n", "\"[{}/{}:{}/{}]\"", ".", "format", "(", "\n", "epoch_idx", ",", "\n", "args", ".", "n_total_epoch", ",", "\n", "batch_idx", ",", "\n", "args", ".", "minibatch_per_epoch", ",", "\n", ")", "\n", ")", "\n", "loss_info", "=", "[", "\" ==> {}:{:.4g}\"", ".", "format", "(", "\"loss\"", ",", "loss_item", ")", "]", "\n", "# exp_name = ['\\n' + os.path.basename(os.getcwd())]", "\n", "\n", "info", "=", "[", "\",\"", ".", "join", "(", "meta_info", ")", "]", "+", "loss_info", "\n", "worklog", ".", "info", "(", "\"\"", ".", "join", "(", "info", ")", ")", "\n", "\n", "# minibatch loss", "\n", "tb_log", ".", "add_scalar", "(", "\"train/loss_batch\"", ",", "loss_item", ",", "cur_iters", ")", "\n", "tb_log", ".", "add_scalar", "(", "\n", "\"train/lr\"", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", ",", "cur_iters", "\n", ")", "\n", "tb_log", ".", "flush", "(", ")", "\n", "\n", "", "", "t1", "=", "time", ".", "perf_counter", "(", ")", "\n", "\n", "", "if", "rank", "==", "0", ":", "\n", "# epoch loss", "\n", "            ", "tb_log", ".", "add_scalar", "(", "\n", "\"train/loss\"", ",", "\n", "epoch_total_train_loss", "/", "args", ".", "minibatch_per_epoch", ",", "\n", "epoch_idx", ",", "\n", ")", "\n", "tb_log", ".", "flush", "(", ")", "\n", "\n", "# save model params", "\n", "ckp_data", "=", "{", "\n", "\"epoch\"", ":", "epoch_idx", ",", "\n", "\"iters\"", ":", "cur_iters", ",", "\n", "\"batch_size\"", ":", "args", ".", "batch_size_single", "*", "args", ".", "nr_gpus", ",", "\n", "\"epoch_size\"", ":", "args", ".", "minibatch_per_epoch", ",", "\n", "\"train_loss\"", ":", "epoch_total_train_loss", "/", "args", ".", "minibatch_per_epoch", ",", "\n", "\"state_dict\"", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "\"optim_state_dict\"", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", "\n", "mge", ".", "save", "(", "ckp_data", ",", "os", ".", "path", ".", "join", "(", "log_model_dir", ",", "\"latest.mge\"", ")", ")", "\n", "if", "epoch_idx", "%", "args", ".", "model_save_freq_epoch", "==", "0", ":", "\n", "                ", "save_path", "=", "os", ".", "path", ".", "join", "(", "log_model_dir", ",", "\"epoch-%d.mge\"", "%", "epoch_idx", ")", "\n", "worklog", ".", "info", "(", "f\"Model params saved: {save_path}\"", ")", "\n", "mge", ".", "save", "(", "ckp_data", ",", "save_path", ")", "\n", "\n", "", "", "", "if", "rank", "==", "0", ":", "\n", "        ", "worklog", ".", "info", "(", "\"Training is done, exit.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.Augmentor.__init__": [[11, 27], ["super().__init__", "numpy.random.RandomState"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "image_height", "=", "384", ",", "\n", "image_width", "=", "512", ",", "\n", "max_disp", "=", "256", ",", "\n", "scale_min", "=", "0.6", ",", "\n", "scale_max", "=", "1.0", ",", "\n", "seed", "=", "0", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "image_height", "=", "image_height", "\n", "self", ".", "image_width", "=", "image_width", "\n", "self", ".", "max_disp", "=", "max_disp", "\n", "self", ".", "scale_min", "=", "scale_min", "\n", "self", ".", "scale_max", "=", "scale_max", "\n", "self", ".", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.Augmentor.chromatic_augmentation": [[28, 48], ["numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "PIL.Image.fromarray", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Contrast.enhance", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Contrast.enhance", "img.point.point.point", "numpy.array", "pow", "range"], "methods", ["None"], ["", "def", "chromatic_augmentation", "(", "self", ",", "img", ")", ":", "\n", "        ", "random_brightness", "=", "np", ".", "random", ".", "uniform", "(", "0.8", ",", "1.2", ")", "\n", "random_contrast", "=", "np", ".", "random", ".", "uniform", "(", "0.8", ",", "1.2", ")", "\n", "random_gamma", "=", "np", ".", "random", ".", "uniform", "(", "0.8", ",", "1.2", ")", "\n", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n", "enhancer", "=", "ImageEnhance", ".", "Brightness", "(", "img", ")", "\n", "img", "=", "enhancer", ".", "enhance", "(", "random_brightness", ")", "\n", "enhancer", "=", "ImageEnhance", ".", "Contrast", "(", "img", ")", "\n", "img", "=", "enhancer", ".", "enhance", "(", "random_contrast", ")", "\n", "\n", "gamma_map", "=", "[", "\n", "255", "*", "1.0", "*", "pow", "(", "ele", "/", "255.0", ",", "random_gamma", ")", "for", "ele", "in", "range", "(", "256", ")", "\n", "]", "*", "3", "\n", "img", "=", "img", ".", "point", "(", "gamma_map", ")", "# use PIL's point-function to accelerate this part", "\n", "\n", "img_", "=", "np", ".", "array", "(", "img", ")", "\n", "\n", "return", "img_", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.Augmentor.__call__": [[49, 160], ["dataset.Augmentor.chromatic_augmentation", "dataset.Augmentor.chromatic_augmentation", "dataset.Augmentor.rng.binomial", "dataset.Augmentor.rng.uniform", "cv2.resize", "cv2.resize", "cv2.warpAffine.astype", "cv2.resize", "dataset.Augmentor.rng.randint", "dataset.Augmentor.rng.randint", "numpy.float32", "cv2.warpAffine", "cv2.warpAffine", "cv2.warpAffine", "cv2.warpAffine", "dataset.Augmentor.rng.binomial", "dataset.Augmentor.rng.uniform", "dataset.Augmentor.rng.uniform", "cv2.getRotationMatrix2D", "cv2.warpAffine", "numpy.float32", "cv2.warpAffine", "cv2.resize", "min", "min", "int", "int", "int", "int", "dataset.Augmentor.rng.uniform", "dataset.Augmentor.rng.uniform", "float", "max", "max", "dataset.Augmentor.rng.uniform", "dataset.Augmentor.rng.uniform", "dataset.Augmentor.rng.uniform", "dataset.Augmentor.rng.uniform", "numpy.mean", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.Augmentor.chromatic_augmentation", "home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.Augmentor.chromatic_augmentation"], ["", "def", "__call__", "(", "self", ",", "left_img", ",", "right_img", ",", "left_disp", ")", ":", "\n", "# 1. chromatic augmentation", "\n", "        ", "left_img", "=", "self", ".", "chromatic_augmentation", "(", "left_img", ")", "\n", "right_img", "=", "self", ".", "chromatic_augmentation", "(", "right_img", ")", "\n", "\n", "# 2. spatial augmentation", "\n", "# 2.1) rotate & vertical shift for right image", "\n", "if", "self", ".", "rng", ".", "binomial", "(", "1", ",", "0.5", ")", ":", "\n", "            ", "angle", ",", "pixel", "=", "0.1", ",", "2", "\n", "px", "=", "self", ".", "rng", ".", "uniform", "(", "-", "pixel", ",", "pixel", ")", "\n", "ag", "=", "self", ".", "rng", ".", "uniform", "(", "-", "angle", ",", "angle", ")", "\n", "image_center", "=", "(", "\n", "self", ".", "rng", ".", "uniform", "(", "0", ",", "right_img", ".", "shape", "[", "0", "]", ")", ",", "\n", "self", ".", "rng", ".", "uniform", "(", "0", ",", "right_img", ".", "shape", "[", "1", "]", ")", ",", "\n", ")", "\n", "rot_mat", "=", "cv2", ".", "getRotationMatrix2D", "(", "image_center", ",", "ag", ",", "1.0", ")", "\n", "right_img", "=", "cv2", ".", "warpAffine", "(", "\n", "right_img", ",", "rot_mat", ",", "right_img", ".", "shape", "[", "1", ":", ":", "-", "1", "]", ",", "flags", "=", "cv2", ".", "INTER_LINEAR", "\n", ")", "\n", "trans_mat", "=", "np", ".", "float32", "(", "[", "[", "1", ",", "0", ",", "0", "]", ",", "[", "0", ",", "1", ",", "px", "]", "]", ")", "\n", "right_img", "=", "cv2", ".", "warpAffine", "(", "\n", "right_img", ",", "trans_mat", ",", "right_img", ".", "shape", "[", "1", ":", ":", "-", "1", "]", ",", "flags", "=", "cv2", ".", "INTER_LINEAR", "\n", ")", "\n", "\n", "# 2.2) random resize", "\n", "", "resize_scale", "=", "self", ".", "rng", ".", "uniform", "(", "self", ".", "scale_min", ",", "self", ".", "scale_max", ")", "\n", "\n", "left_img", "=", "cv2", ".", "resize", "(", "\n", "left_img", ",", "\n", "None", ",", "\n", "fx", "=", "resize_scale", ",", "\n", "fy", "=", "resize_scale", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", ")", "\n", "right_img", "=", "cv2", ".", "resize", "(", "\n", "right_img", ",", "\n", "None", ",", "\n", "fx", "=", "resize_scale", ",", "\n", "fy", "=", "resize_scale", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", ")", "\n", "\n", "disp_mask", "=", "(", "left_disp", "<", "float", "(", "self", ".", "max_disp", "/", "resize_scale", ")", ")", "&", "(", "left_disp", ">", "0", ")", "\n", "disp_mask", "=", "disp_mask", ".", "astype", "(", "\"float32\"", ")", "\n", "disp_mask", "=", "cv2", ".", "resize", "(", "\n", "disp_mask", ",", "\n", "None", ",", "\n", "fx", "=", "resize_scale", ",", "\n", "fy", "=", "resize_scale", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", ")", "\n", "\n", "left_disp", "=", "(", "\n", "cv2", ".", "resize", "(", "\n", "left_disp", ",", "\n", "None", ",", "\n", "fx", "=", "resize_scale", ",", "\n", "fy", "=", "resize_scale", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", ")", "\n", "*", "resize_scale", "\n", ")", "\n", "\n", "# 2.3) random crop", "\n", "h", ",", "w", ",", "c", "=", "left_img", ".", "shape", "\n", "dx", "=", "w", "-", "self", ".", "image_width", "\n", "dy", "=", "h", "-", "self", ".", "image_height", "\n", "dy", "=", "self", ".", "rng", ".", "randint", "(", "min", "(", "0", ",", "dy", ")", ",", "max", "(", "0", ",", "dy", ")", "+", "1", ")", "\n", "dx", "=", "self", ".", "rng", ".", "randint", "(", "min", "(", "0", ",", "dx", ")", ",", "max", "(", "0", ",", "dx", ")", "+", "1", ")", "\n", "\n", "M", "=", "np", ".", "float32", "(", "[", "[", "1.0", ",", "0.0", ",", "-", "dx", "]", ",", "[", "0.0", ",", "1.0", ",", "-", "dy", "]", "]", ")", "\n", "left_img", "=", "cv2", ".", "warpAffine", "(", "\n", "left_img", ",", "\n", "M", ",", "\n", "(", "self", ".", "image_width", ",", "self", ".", "image_height", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", "borderValue", "=", "0", ",", "\n", ")", "\n", "right_img", "=", "cv2", ".", "warpAffine", "(", "\n", "right_img", ",", "\n", "M", ",", "\n", "(", "self", ".", "image_width", ",", "self", ".", "image_height", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", "borderValue", "=", "0", ",", "\n", ")", "\n", "left_disp", "=", "cv2", ".", "warpAffine", "(", "\n", "left_disp", ",", "\n", "M", ",", "\n", "(", "self", ".", "image_width", ",", "self", ".", "image_height", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", "borderValue", "=", "0", ",", "\n", ")", "\n", "disp_mask", "=", "cv2", ".", "warpAffine", "(", "\n", "disp_mask", ",", "\n", "M", ",", "\n", "(", "self", ".", "image_width", ",", "self", ".", "image_height", ")", ",", "\n", "flags", "=", "cv2", ".", "INTER_LINEAR", ",", "\n", "borderValue", "=", "0", ",", "\n", ")", "\n", "\n", "# 3. add random occlusion to right image", "\n", "if", "self", ".", "rng", ".", "binomial", "(", "1", ",", "0.5", ")", ":", "\n", "            ", "sx", "=", "int", "(", "self", ".", "rng", ".", "uniform", "(", "50", ",", "100", ")", ")", "\n", "sy", "=", "int", "(", "self", ".", "rng", ".", "uniform", "(", "50", ",", "100", ")", ")", "\n", "cx", "=", "int", "(", "self", ".", "rng", ".", "uniform", "(", "sx", ",", "right_img", ".", "shape", "[", "0", "]", "-", "sx", ")", ")", "\n", "cy", "=", "int", "(", "self", ".", "rng", ".", "uniform", "(", "sy", ",", "right_img", ".", "shape", "[", "1", "]", "-", "sy", ")", ")", "\n", "right_img", "[", "cx", "-", "sx", ":", "cx", "+", "sx", ",", "cy", "-", "sy", ":", "cy", "+", "sy", "]", "=", "np", ".", "mean", "(", "\n", "np", ".", "mean", "(", "right_img", ",", "0", ")", ",", "0", "\n", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", "]", "\n", "\n", "", "return", "left_img", ",", "right_img", ",", "left_disp", ",", "disp_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.CREStereoDataset.__init__": [[163, 175], ["megengine.data.dataset.Dataset.__init__", "glob.glob", "dataset.Augmentor", "numpy.random.RandomState", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "imgs", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", "\"**/*_left.jpg\"", ")", ",", "recursive", "=", "True", ")", "\n", "self", ".", "augmentor", "=", "Augmentor", "(", "\n", "image_height", "=", "384", ",", "\n", "image_width", "=", "512", ",", "\n", "max_disp", "=", "256", ",", "\n", "scale_min", "=", "0.6", ",", "\n", "scale_max", "=", "1.0", ",", "\n", "seed", "=", "0", ",", "\n", ")", "\n", "self", ".", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.CREStereoDataset.get_disp": [[176, 179], ["cv2.imread", "cv2.imread.astype"], "methods", ["None"], ["", "def", "get_disp", "(", "self", ",", "path", ")", ":", "\n", "        ", "disp", "=", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_UNCHANGED", ")", "\n", "return", "disp", ".", "astype", "(", "np", ".", "float32", ")", "/", "32", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.CREStereoDataset.__getitem__": [[180, 212], ["cv2.imread", "cv2.imread", "dataset.CREStereoDataset.get_disp", "dataset.CREStereoDataset.get_disp", "dataset.CREStereoDataset.rng.binomial", "dataset.CREStereoDataset.augmentor", "left_img.transpose().astype.transpose().astype.transpose().astype", "right_img.transpose().astype.transpose().astype.transpose().astype", "left_path.rfind", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "numpy.fliplr", "left_img.transpose().astype.transpose().astype.transpose", "right_img.transpose().astype.transpose().astype.transpose"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.CREStereoDataset.get_disp", "home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.CREStereoDataset.get_disp"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "# find path", "\n", "        ", "left_path", "=", "self", ".", "imgs", "[", "index", "]", "\n", "prefix", "=", "left_path", "[", ":", "left_path", ".", "rfind", "(", "\"_\"", ")", "]", "\n", "right_path", "=", "prefix", "+", "\"_right.jpg\"", "\n", "left_disp_path", "=", "prefix", "+", "\"_left.disp.png\"", "\n", "right_disp_path", "=", "prefix", "+", "\"_right.disp.png\"", "\n", "\n", "# read img, disp", "\n", "left_img", "=", "cv2", ".", "imread", "(", "left_path", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "right_img", "=", "cv2", ".", "imread", "(", "right_path", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "left_disp", "=", "self", ".", "get_disp", "(", "left_disp_path", ")", "\n", "right_disp", "=", "self", ".", "get_disp", "(", "right_disp_path", ")", "\n", "\n", "if", "self", ".", "rng", ".", "binomial", "(", "1", ",", "0.5", ")", ":", "\n", "            ", "left_img", ",", "right_img", "=", "np", ".", "fliplr", "(", "right_img", ")", ",", "np", ".", "fliplr", "(", "left_img", ")", "\n", "left_disp", ",", "right_disp", "=", "np", ".", "fliplr", "(", "right_disp", ")", ",", "np", ".", "fliplr", "(", "left_disp", ")", "\n", "", "left_disp", "[", "left_disp", "==", "np", ".", "inf", "]", "=", "0", "\n", "\n", "# augmentaion", "\n", "left_img", ",", "right_img", ",", "left_disp", ",", "disp_mask", "=", "self", ".", "augmentor", "(", "\n", "left_img", ",", "right_img", ",", "left_disp", "\n", ")", "\n", "\n", "left_img", "=", "left_img", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ".", "astype", "(", "\"uint8\"", ")", "\n", "right_img", "=", "right_img", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ".", "astype", "(", "\"uint8\"", ")", "\n", "\n", "return", "{", "\n", "\"left\"", ":", "left_img", ",", "\n", "\"right\"", ":", "right_img", ",", "\n", "\"disparity\"", ":", "left_disp", ",", "\n", "\"mask\"", ":", "disp_mask", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.dataset.CREStereoDataset.__len__": [[214, 216], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.test.load_model": [[12, 21], ["print", "megengine.load", "nets.Model", "nets.Model.load_state_dict", "nets.Model.eval", "os.path.abspath"], "function", ["None"], ["def", "load_model", "(", "model_path", ")", ":", "\n", "    ", "print", "(", "\"Loading model:\"", ",", "os", ".", "path", ".", "abspath", "(", "model_path", ")", ")", "\n", "pretrained_dict", "=", "mge", ".", "load", "(", "model_path", ")", "\n", "model", "=", "Model", "(", "max_disp", "=", "256", ",", "mixed_precision", "=", "False", ",", "test_mode", "=", "True", ")", "\n", "\n", "model", ".", "load_state_dict", "(", "pretrained_dict", "[", "\"state_dict\"", "]", ",", "strict", "=", "True", ")", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.None.test.inference": [[23, 51], ["print", "left.transpose", "right.transpose", "numpy.ascontiguousarray", "numpy.ascontiguousarray", "megengine.tensor().astype", "megengine.tensor().astype", "megengine.nn.interpolate", "megengine.nn.interpolate", "model", "model", "megengine.squeeze().numpy", "megengine.tensor", "megengine.tensor", "megengine.squeeze"], "function", ["None"], ["", "def", "inference", "(", "left", ",", "right", ",", "model", ",", "n_iter", "=", "20", ")", ":", "\n", "    ", "print", "(", "\"Model Forwarding...\"", ")", "\n", "imgL", "=", "left", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "imgR", "=", "right", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "imgL", "=", "np", ".", "ascontiguousarray", "(", "imgL", "[", "None", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "imgR", "=", "np", ".", "ascontiguousarray", "(", "imgR", "[", "None", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "imgL", "=", "mge", ".", "tensor", "(", "imgL", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "imgR", "=", "mge", ".", "tensor", "(", "imgR", ")", ".", "astype", "(", "\"float32\"", ")", "\n", "\n", "imgL_dw2", "=", "F", ".", "nn", ".", "interpolate", "(", "\n", "imgL", ",", "\n", "size", "=", "(", "imgL", ".", "shape", "[", "2", "]", "//", "2", ",", "imgL", ".", "shape", "[", "3", "]", "//", "2", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", "\n", ")", "\n", "imgR_dw2", "=", "F", ".", "nn", ".", "interpolate", "(", "\n", "imgR", ",", "\n", "size", "=", "(", "imgL", ".", "shape", "[", "2", "]", "//", "2", ",", "imgL", ".", "shape", "[", "3", "]", "//", "2", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", "\n", ")", "\n", "pred_flow_dw2", "=", "model", "(", "imgL_dw2", ",", "imgR_dw2", ",", "iters", "=", "n_iter", ",", "flow_init", "=", "None", ")", "\n", "\n", "pred_flow", "=", "model", "(", "imgL", ",", "imgR", ",", "iters", "=", "n_iter", ",", "flow_init", "=", "pred_flow_dw2", ")", "\n", "pred_disp", "=", "F", ".", "squeeze", "(", "pred_flow", "[", ":", ",", "0", ",", ":", ",", ":", "]", ")", ".", "numpy", "(", ")", "\n", "\n", "return", "pred_disp", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.update.FlowHead.__init__": [[6, 11], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.ReLU", "megengine.ReLU"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", "=", "128", ",", "hidden_dim", "=", "256", ")", ":", "\n", "        ", "super", "(", "FlowHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "M", ".", "Conv2d", "(", "input_dim", ",", "hidden_dim", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2", "=", "M", ".", "Conv2d", "(", "hidden_dim", ",", "2", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu", "=", "M", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.update.FlowHead.forward": [[12, 14], ["update.FlowHead.conv2", "update.FlowHead.relu", "update.FlowHead.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "conv2", "(", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.update.SepConvGRU.__init__": [[17, 37], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_dim", "=", "128", ",", "input_dim", "=", "192", "+", "128", ")", ":", "\n", "        ", "super", "(", "SepConvGRU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "convz1", "=", "M", ".", "Conv2d", "(", "\n", "hidden_dim", "+", "input_dim", ",", "hidden_dim", ",", "(", "1", ",", "5", ")", ",", "padding", "=", "(", "0", ",", "2", ")", "\n", ")", "\n", "self", ".", "convr1", "=", "M", ".", "Conv2d", "(", "\n", "hidden_dim", "+", "input_dim", ",", "hidden_dim", ",", "(", "1", ",", "5", ")", ",", "padding", "=", "(", "0", ",", "2", ")", "\n", ")", "\n", "self", ".", "convq1", "=", "M", ".", "Conv2d", "(", "\n", "hidden_dim", "+", "input_dim", ",", "hidden_dim", ",", "(", "1", ",", "5", ")", ",", "padding", "=", "(", "0", ",", "2", ")", "\n", ")", "\n", "\n", "self", ".", "convz2", "=", "M", ".", "Conv2d", "(", "\n", "hidden_dim", "+", "input_dim", ",", "hidden_dim", ",", "(", "5", ",", "1", ")", ",", "padding", "=", "(", "2", ",", "0", ")", "\n", ")", "\n", "self", ".", "convr2", "=", "M", ".", "Conv2d", "(", "\n", "hidden_dim", "+", "input_dim", ",", "hidden_dim", ",", "(", "5", ",", "1", ")", ",", "padding", "=", "(", "2", ",", "0", ")", "\n", ")", "\n", "self", ".", "convq2", "=", "M", ".", "Conv2d", "(", "\n", "hidden_dim", "+", "input_dim", ",", "hidden_dim", ",", "(", "5", ",", "1", ")", ",", "padding", "=", "(", "2", ",", "0", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.update.SepConvGRU.forward": [[39, 55], ["megengine.concat", "megengine.concat", "megengine.sigmoid", "megengine.sigmoid", "megengine.sigmoid", "megengine.sigmoid", "megengine.tanh", "megengine.tanh", "megengine.concat", "megengine.concat", "megengine.sigmoid", "megengine.sigmoid", "megengine.sigmoid", "megengine.sigmoid", "megengine.tanh", "megengine.tanh", "update.SepConvGRU.convz1", "update.SepConvGRU.convr1", "update.SepConvGRU.convq1", "update.SepConvGRU.convz2", "update.SepConvGRU.convr2", "update.SepConvGRU.convq2", "megengine.concat", "megengine.concat", "megengine.concat", "megengine.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "h", ",", "x", ")", ":", "\n", "# horizontal", "\n", "        ", "hx", "=", "F", ".", "concat", "(", "[", "h", ",", "x", "]", ",", "axis", "=", "1", ")", "\n", "z", "=", "F", ".", "sigmoid", "(", "self", ".", "convz1", "(", "hx", ")", ")", "\n", "r", "=", "F", ".", "sigmoid", "(", "self", ".", "convr1", "(", "hx", ")", ")", "\n", "q", "=", "F", ".", "tanh", "(", "self", ".", "convq1", "(", "F", ".", "concat", "(", "[", "r", "*", "h", ",", "x", "]", ",", "axis", "=", "1", ")", ")", ")", "\n", "h", "=", "(", "1", "-", "z", ")", "*", "h", "+", "z", "*", "q", "\n", "\n", "# vertical", "\n", "hx", "=", "F", ".", "concat", "(", "[", "h", ",", "x", "]", ",", "axis", "=", "1", ")", "\n", "z", "=", "F", ".", "sigmoid", "(", "self", ".", "convz2", "(", "hx", ")", ")", "\n", "r", "=", "F", ".", "sigmoid", "(", "self", ".", "convr2", "(", "hx", ")", ")", "\n", "q", "=", "F", ".", "tanh", "(", "self", ".", "convq2", "(", "F", ".", "concat", "(", "[", "r", "*", "h", ",", "x", "]", ",", "axis", "=", "1", ")", ")", ")", "\n", "h", "=", "(", "1", "-", "z", ")", "*", "h", "+", "z", "*", "q", "\n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.update.BasicMotionEncoder.__init__": [[58, 66], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cor_planes", ")", ":", "\n", "        ", "super", "(", "BasicMotionEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "convc1", "=", "M", ".", "Conv2d", "(", "cor_planes", ",", "256", ",", "1", ",", "padding", "=", "0", ")", "\n", "self", ".", "convc2", "=", "M", ".", "Conv2d", "(", "256", ",", "192", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "convf1", "=", "M", ".", "Conv2d", "(", "2", ",", "128", ",", "7", ",", "padding", "=", "3", ")", "\n", "self", ".", "convf2", "=", "M", ".", "Conv2d", "(", "128", ",", "64", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv", "=", "M", ".", "Conv2d", "(", "64", "+", "192", ",", "128", "-", "2", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.update.BasicMotionEncoder.forward": [[67, 76], ["megengine.relu", "megengine.relu", "megengine.relu", "megengine.relu", "megengine.relu", "megengine.relu", "megengine.relu", "megengine.relu", "megengine.concat", "megengine.concat", "megengine.relu", "megengine.relu", "megengine.concat", "megengine.concat", "update.BasicMotionEncoder.convc1", "update.BasicMotionEncoder.convc2", "update.BasicMotionEncoder.convf1", "update.BasicMotionEncoder.convf2", "update.BasicMotionEncoder.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "flow", ",", "corr", ")", ":", "\n", "        ", "cor", "=", "F", ".", "relu", "(", "self", ".", "convc1", "(", "corr", ")", ")", "\n", "cor", "=", "F", ".", "relu", "(", "self", ".", "convc2", "(", "cor", ")", ")", "\n", "flo", "=", "F", ".", "relu", "(", "self", ".", "convf1", "(", "flow", ")", ")", "\n", "flo", "=", "F", ".", "relu", "(", "self", ".", "convf2", "(", "flo", ")", ")", "\n", "\n", "cor_flo", "=", "F", ".", "concat", "(", "[", "cor", ",", "flo", "]", ",", "axis", "=", "1", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "conv", "(", "cor_flo", ")", ")", "\n", "return", "F", ".", "concat", "(", "[", "out", ",", "flow", "]", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.update.BasicUpdateBlock.__init__": [[79, 89], ["megengine.Module.__init__", "update.BasicMotionEncoder", "update.SepConvGRU", "update.FlowHead", "megengine.Sequential", "megengine.Sequential", "megengine.Conv2d", "megengine.Conv2d", "megengine.ReLU", "megengine.ReLU", "megengine.Conv2d", "megengine.Conv2d"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_dim", ",", "cor_planes", ",", "mask_size", "=", "8", ")", ":", "\n", "        ", "super", "(", "BasicUpdateBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "BasicMotionEncoder", "(", "cor_planes", ")", "\n", "self", ".", "gru", "=", "SepConvGRU", "(", "hidden_dim", "=", "hidden_dim", ",", "input_dim", "=", "128", "+", "hidden_dim", ")", "\n", "self", ".", "flow_head", "=", "FlowHead", "(", "hidden_dim", ",", "hidden_dim", "=", "256", ")", "\n", "\n", "self", ".", "mask", "=", "M", ".", "Sequential", "(", "\n", "M", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "M", ".", "ReLU", "(", ")", ",", "\n", "M", ".", "Conv2d", "(", "256", ",", "mask_size", "**", "2", "*", "9", ",", "1", ",", "padding", "=", "0", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.update.BasicUpdateBlock.forward": [[91, 101], ["update.BasicUpdateBlock.encoder", "megengine.concat", "megengine.concat", "update.BasicUpdateBlock.gru", "update.BasicUpdateBlock.flow_head", "update.BasicUpdateBlock.mask"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "net", ",", "inp", ",", "corr", ",", "flow", ",", "upsample", "=", "True", ")", ":", "\n", "        ", "motion_features", "=", "self", ".", "encoder", "(", "flow", ",", "corr", ")", "\n", "inp", "=", "F", ".", "concat", "(", "[", "inp", ",", "motion_features", "]", ",", "axis", "=", "1", ")", "\n", "\n", "net", "=", "self", ".", "gru", "(", "net", ",", "inp", ")", "\n", "delta_flow", "=", "self", ".", "flow_head", "(", "net", ")", "\n", "\n", "# scale mask to balence gradients", "\n", "mask", "=", "0.25", "*", "self", ".", "mask", "(", "net", ")", "\n", "return", "net", ",", "mask", ",", "delta_flow", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.corr.AGCL.__init__": [[13, 21], ["utils.utils.coords_grid().to", "utils.utils.coords_grid"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.utils.utils.coords_grid"], ["def", "__init__", "(", "self", ",", "fmap1", ",", "fmap2", ",", "att", "=", "None", ")", ":", "\n", "        ", "self", ".", "fmap1", "=", "fmap1", "\n", "self", ".", "fmap2", "=", "fmap2", "\n", "\n", "self", ".", "att", "=", "att", "\n", "\n", "self", ".", "coords", "=", "coords_grid", "(", "fmap1", ".", "shape", "[", "0", "]", ",", "fmap1", ".", "shape", "[", "2", "]", ",", "fmap1", ".", "shape", "[", "3", "]", ")", ".", "to", "(", "\n", "fmap1", ".", "device", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.corr.AGCL.__call__": [[23, 31], ["corr.AGCL.AGCL.corr_iter", "corr.AGCL.AGCL.corr_att_offset"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.nets.corr.AGCL.corr_iter", "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.corr.AGCL.corr_att_offset"], ["", "def", "__call__", "(", "self", ",", "flow", ",", "extra_offset", ",", "small_patch", "=", "False", ",", "iter_mode", "=", "False", ")", ":", "\n", "        ", "if", "iter_mode", ":", "\n", "            ", "corr", "=", "self", ".", "corr_iter", "(", "self", ".", "fmap1", ",", "self", ".", "fmap2", ",", "flow", ",", "small_patch", ")", "\n", "", "else", ":", "\n", "            ", "corr", "=", "self", ".", "corr_att_offset", "(", "\n", "self", ".", "fmap1", ",", "self", ".", "fmap2", ",", "flow", ",", "extra_offset", ",", "small_patch", "\n", ")", "\n", "", "return", "corr", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.corr.AGCL.get_correlation": [[32, 52], ["megengine.pad", "megengine.pad", "megengine.pad", "megengine.sliding_window", "megengine.sliding_window", "megengine.sliding_window", "right_slid.reshape.reshape.reshape", "megengine.transpose", "megengine.transpose", "megengine.transpose", "right_slid.reshape.reshape.reshape", "megengine.mean", "megengine.mean", "megengine.mean", "megengine.mean.reshape"], "methods", ["None"], ["", "def", "get_correlation", "(", "self", ",", "left_feature", ",", "right_feature", ",", "psize", "=", "(", "3", ",", "3", ")", ",", "dilate", "=", "(", "1", ",", "1", ")", ")", ":", "\n", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "left_feature", ".", "shape", "\n", "\n", "di_y", ",", "di_x", "=", "dilate", "[", "0", "]", ",", "dilate", "[", "1", "]", "\n", "pady", ",", "padx", "=", "psize", "[", "0", "]", "//", "2", "*", "di_y", ",", "psize", "[", "1", "]", "//", "2", "*", "di_x", "\n", "\n", "right_pad", "=", "F", ".", "pad", "(", "right_feature", ",", "pad_witdth", "=", "(", "\n", "(", "0", ",", "0", ")", ",", "(", "0", ",", "0", ")", ",", "(", "pady", ",", "pady", ")", ",", "(", "padx", ",", "padx", ")", ")", ",", "mode", "=", "\"replicate\"", ")", "\n", "\n", "right_slid", "=", "F", ".", "sliding_window", "(", "\n", "right_pad", ",", "kernel_size", "=", "(", "H", ",", "W", ")", ",", "stride", "=", "(", "di_y", ",", "di_x", ")", ")", "\n", "right_slid", "=", "right_slid", ".", "reshape", "(", "N", ",", "C", ",", "-", "1", ",", "H", ",", "W", ")", "\n", "right_slid", "=", "F", ".", "transpose", "(", "right_slid", ",", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ")", "\n", "right_slid", "=", "right_slid", ".", "reshape", "(", "-", "1", ",", "C", ",", "H", ",", "W", ")", "\n", "\n", "corr_mean", "=", "F", ".", "mean", "(", "left_feature", "*", "right_slid", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "corr_final", "=", "corr_mean", ".", "reshape", "(", "1", ",", "-", "1", ",", "H", ",", "W", ")", "\n", "\n", "return", "corr_final", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.corr.AGCL.corr_iter": [[53, 80], ["megengine.transpose", "megengine.transpose", "megengine.transpose", "utils.utils.bilinear_sampler", "megengine.split", "megengine.split", "megengine.split", "megengine.split", "megengine.split", "megengine.split", "range", "megengine.concat", "megengine.concat", "megengine.concat", "len", "corr.AGCL.AGCL.get_correlation", "corrs.append"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.utils.utils.bilinear_sampler", "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.corr.AGCL.get_correlation"], ["", "def", "corr_iter", "(", "self", ",", "left_feature", ",", "right_feature", ",", "flow", ",", "small_patch", ")", ":", "\n", "\n", "        ", "coords", "=", "self", ".", "coords", "+", "flow", "\n", "coords", "=", "F", ".", "transpose", "(", "coords", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "right_feature", "=", "bilinear_sampler", "(", "right_feature", ",", "coords", ")", "\n", "\n", "if", "small_patch", ":", "\n", "            ", "psize_list", "=", "[", "(", "3", ",", "3", ")", ",", "(", "3", ",", "3", ")", ",", "(", "3", ",", "3", ")", ",", "(", "3", ",", "3", ")", "]", "\n", "dilate_list", "=", "[", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", "]", "\n", "", "else", ":", "\n", "            ", "psize_list", "=", "[", "(", "1", ",", "9", ")", ",", "(", "1", ",", "9", ")", ",", "(", "1", ",", "9", ")", ",", "(", "1", ",", "9", ")", "]", "\n", "dilate_list", "=", "[", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", "]", "\n", "\n", "", "N", ",", "C", ",", "H", ",", "W", "=", "left_feature", ".", "shape", "\n", "lefts", "=", "F", ".", "split", "(", "left_feature", ",", "4", ",", "axis", "=", "1", ")", "\n", "rights", "=", "F", ".", "split", "(", "right_feature", ",", "4", ",", "axis", "=", "1", ")", "\n", "\n", "corrs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "psize_list", ")", ")", ":", "\n", "            ", "corr", "=", "self", ".", "get_correlation", "(", "\n", "lefts", "[", "i", "]", ",", "rights", "[", "i", "]", ",", "psize_list", "[", "i", "]", ",", "dilate_list", "[", "i", "]", "\n", ")", "\n", "corrs", ".", "append", "(", "corr", ")", "\n", "\n", "", "final_corr", "=", "F", ".", "concat", "(", "corrs", ",", "axis", "=", "1", ")", "\n", "\n", "return", "final_corr", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.corr.AGCL.corr_att_offset": [[81, 161], ["megengine.split", "megengine.split", "megengine.split", "megengine.split", "megengine.split", "megengine.split", "megengine.transpose", "megengine.transpose", "megengine.transpose", "range", "megengine.concat", "megengine.concat", "megengine.concat", "megengine.reshape", "megengine.reshape", "megengine.reshape", "megengine.reshape", "megengine.reshape", "megengine.reshape", "F.mean.AGCL.att", "megengine.reshape", "megengine.reshape", "megengine.reshape", "len", "numpy.meshgrid", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.reshape", "megengine.reshape", "megengine.reshape", "utils.utils.bilinear_sampler", "megengine.reshape", "megengine.reshape", "megengine.reshape", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.mean", "megengine.mean", "megengine.mean", "corrs.append", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.transpose", "numpy.arange", "numpy.arange", "megengine.tensor", "megengine.tensor", "megengine.tensor", "megengine.tensor", "megengine.tensor", "megengine.tensor", "megengine.reshape", "megengine.reshape", "megengine.reshape", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.reshape", "megengine.reshape", "megengine.reshape", "megengine.stack", "megengine.stack", "megengine.stack"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.utils.utils.bilinear_sampler"], ["", "def", "corr_att_offset", "(", "\n", "self", ",", "left_feature", ",", "right_feature", ",", "flow", ",", "extra_offset", ",", "small_patch", "\n", ")", ":", "\n", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "left_feature", ".", "shape", "\n", "\n", "if", "self", ".", "att", "is", "not", "None", ":", "\n", "            ", "left_feature", "=", "F", ".", "reshape", "(", "\n", "F", ".", "transpose", "(", "left_feature", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ",", "(", "N", ",", "H", "*", "W", ",", "C", ")", "\n", ")", "# 'n c h w -> n (h w) c'", "\n", "right_feature", "=", "F", ".", "reshape", "(", "\n", "F", ".", "transpose", "(", "right_feature", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ",", "(", "N", ",", "H", "*", "W", ",", "C", ")", "\n", ")", "# 'n c h w -> n (h w) c'", "\n", "left_feature", ",", "right_feature", "=", "self", ".", "att", "(", "left_feature", ",", "right_feature", ")", "\n", "# 'n (h w) c -> n c h w'", "\n", "left_feature", ",", "right_feature", "=", "[", "\n", "F", ".", "transpose", "(", "F", ".", "reshape", "(", "x", ",", "(", "N", ",", "H", ",", "W", ",", "C", ")", ")", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "for", "x", "in", "[", "left_feature", ",", "right_feature", "]", "\n", "]", "\n", "\n", "", "lefts", "=", "F", ".", "split", "(", "left_feature", ",", "4", ",", "axis", "=", "1", ")", "\n", "rights", "=", "F", ".", "split", "(", "right_feature", ",", "4", ",", "axis", "=", "1", ")", "\n", "\n", "C", "=", "C", "//", "4", "\n", "\n", "if", "small_patch", ":", "\n", "            ", "psize_list", "=", "[", "(", "3", ",", "3", ")", ",", "(", "3", ",", "3", ")", ",", "(", "3", ",", "3", ")", ",", "(", "3", ",", "3", ")", "]", "\n", "dilate_list", "=", "[", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", "]", "\n", "", "else", ":", "\n", "            ", "psize_list", "=", "[", "(", "1", ",", "9", ")", ",", "(", "1", ",", "9", ")", ",", "(", "1", ",", "9", ")", ",", "(", "1", ",", "9", ")", "]", "\n", "dilate_list", "=", "[", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", "]", "\n", "\n", "", "search_num", "=", "9", "\n", "extra_offset", "=", "F", ".", "transpose", "(", "\n", "F", ".", "reshape", "(", "extra_offset", ",", "(", "N", ",", "search_num", ",", "2", ",", "H", ",", "W", ")", ")", ",", "(", "0", ",", "1", ",", "3", ",", "4", ",", "2", ")", "\n", ")", "# [N, search_num, 1, 1, 2]", "\n", "\n", "corrs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "psize_list", ")", ")", ":", "\n", "            ", "left_feature", ",", "right_feature", "=", "lefts", "[", "i", "]", ",", "rights", "[", "i", "]", "\n", "psize", ",", "dilate", "=", "psize_list", "[", "i", "]", ",", "dilate_list", "[", "i", "]", "\n", "\n", "psizey", ",", "psizex", "=", "psize", "[", "0", "]", ",", "psize", "[", "1", "]", "\n", "dilatey", ",", "dilatex", "=", "dilate", "[", "0", "]", ",", "dilate", "[", "1", "]", "\n", "\n", "ry", "=", "psizey", "//", "2", "*", "dilatey", "\n", "rx", "=", "psizex", "//", "2", "*", "dilatex", "\n", "\n", "x_grid", ",", "y_grid", "=", "np", ".", "meshgrid", "(", "\n", "np", ".", "arange", "(", "-", "rx", ",", "rx", "+", "1", ",", "dilatex", ")", ",", "np", ".", "arange", "(", "-", "ry", ",", "ry", "+", "1", ",", "dilatey", ")", "\n", ")", "\n", "y_grid", ",", "x_grid", "=", "mge", ".", "tensor", "(", "y_grid", ",", "device", "=", "self", ".", "fmap1", ".", "device", ")", ",", "mge", ".", "tensor", "(", "\n", "x_grid", ",", "device", "=", "self", ".", "fmap1", ".", "device", "\n", ")", "\n", "offsets", "=", "F", ".", "transpose", "(", "\n", "F", ".", "reshape", "(", "F", ".", "stack", "(", "(", "x_grid", ",", "y_grid", ")", ")", ",", "(", "2", ",", "-", "1", ")", ")", ",", "(", "1", ",", "0", ")", "\n", ")", "# [search_num, 2]", "\n", "offsets", "=", "F", ".", "expand_dims", "(", "offsets", ",", "(", "0", ",", "2", ",", "3", ")", ")", "\n", "offsets", "=", "offsets", "+", "extra_offset", "\n", "\n", "coords", "=", "self", ".", "coords", "+", "flow", "# [N, 2, H, W]", "\n", "coords", "=", "F", ".", "transpose", "(", "coords", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "# [N, H, W, 2]", "\n", "coords", "=", "F", ".", "expand_dims", "(", "coords", ",", "1", ")", "+", "offsets", "\n", "coords", "=", "F", ".", "reshape", "(", "coords", ",", "(", "N", ",", "-", "1", ",", "W", ",", "2", ")", ")", "# [N, search_num*H, W, 2]", "\n", "\n", "right_feature", "=", "bilinear_sampler", "(", "\n", "right_feature", ",", "coords", "\n", ")", "# [N, C, search_num*H, W]", "\n", "right_feature", "=", "F", ".", "reshape", "(", "\n", "right_feature", ",", "(", "N", ",", "C", ",", "-", "1", ",", "H", ",", "W", ")", "\n", ")", "# [N, C, search_num, H, W]", "\n", "\n", "left_feature", "=", "F", ".", "expand_dims", "(", "left_feature", ",", "2", ")", "\n", "corr", "=", "F", ".", "mean", "(", "left_feature", "*", "right_feature", ",", "axis", "=", "1", ")", "\n", "\n", "corrs", ".", "append", "(", "corr", ")", "\n", "\n", "", "final_corr", "=", "F", ".", "concat", "(", "corrs", ",", "axis", "=", "1", ")", "\n", "\n", "return", "final_corr", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.extractor.ResidualBlock.__init__": [[12, 45], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.ReLU", "megengine.ReLU", "megengine.Sequential", "megengine.Sequential", "megengine.GroupNorm", "megengine.GroupNorm", "megengine.GroupNorm", "megengine.GroupNorm", "megengine.GroupNorm", "megengine.GroupNorm", "megengine.Conv2d", "megengine.Conv2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.InstanceNorm", "megengine.InstanceNorm", "megengine.InstanceNorm", "megengine.InstanceNorm", "megengine.InstanceNorm", "megengine.InstanceNorm", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "norm_fn", "=", "\"group\"", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "M", ".", "Conv2d", "(", "\n", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "stride", "\n", ")", "\n", "self", ".", "conv2", "=", "M", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "relu", "=", "M", ".", "ReLU", "(", ")", "\n", "\n", "num_groups", "=", "planes", "//", "8", "\n", "\n", "if", "norm_fn", "==", "\"group\"", ":", "\n", "            ", "self", ".", "norm1", "=", "M", ".", "GroupNorm", "(", "num_groups", "=", "num_groups", ",", "num_channels", "=", "planes", ")", "\n", "self", ".", "norm2", "=", "M", ".", "GroupNorm", "(", "num_groups", "=", "num_groups", ",", "num_channels", "=", "planes", ")", "\n", "norm3", "=", "M", ".", "GroupNorm", "(", "num_groups", "=", "num_groups", ",", "num_channels", "=", "planes", ")", "\n", "\n", "", "elif", "norm_fn", "==", "\"batch\"", ":", "\n", "            ", "self", ".", "norm1", "=", "M", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "norm2", "=", "M", ".", "BatchNorm2d", "(", "planes", ")", "\n", "norm3", "=", "M", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "", "elif", "norm_fn", "==", "\"instance\"", ":", "\n", "            ", "self", ".", "norm1", "=", "M", ".", "InstanceNorm", "(", "planes", ",", "affine", "=", "False", ")", "\n", "self", ".", "norm2", "=", "M", ".", "InstanceNorm", "(", "planes", ",", "affine", "=", "False", ")", "\n", "norm3", "=", "M", ".", "InstanceNorm", "(", "planes", ",", "affine", "=", "False", ")", "\n", "\n", "", "elif", "norm_fn", "==", "\"none\"", ":", "\n", "            ", "self", ".", "norm1", "=", "M", ".", "Sequential", "(", ")", "\n", "self", ".", "norm2", "=", "M", ".", "Sequential", "(", ")", "\n", "norm3", "=", "M", ".", "Sequential", "(", ")", "\n", "\n", "", "self", ".", "downsample", "=", "M", ".", "Sequential", "(", "\n", "M", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ")", ",", "norm3", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.extractor.ResidualBlock.forward": [[47, 55], ["extractor.ResidualBlock.relu", "extractor.ResidualBlock.relu", "extractor.ResidualBlock.downsample", "extractor.ResidualBlock.relu", "extractor.ResidualBlock.norm1", "extractor.ResidualBlock.norm2", "extractor.ResidualBlock.conv1", "extractor.ResidualBlock.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "x", "\n", "y", "=", "self", ".", "relu", "(", "self", ".", "norm1", "(", "self", ".", "conv1", "(", "y", ")", ")", ")", "\n", "y", "=", "self", ".", "relu", "(", "self", ".", "norm2", "(", "self", ".", "conv2", "(", "y", ")", ")", ")", "\n", "\n", "x", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "return", "self", ".", "relu", "(", "x", "+", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.extractor.BasicEncoder.__init__": [[58, 96], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.ReLU", "megengine.ReLU", "extractor.BasicEncoder._make_layer", "extractor.BasicEncoder._make_layer", "extractor.BasicEncoder._make_layer", "megengine.Conv2d", "megengine.Conv2d", "extractor.BasicEncoder.modules", "megengine.GroupNorm", "megengine.GroupNorm", "megengine.Dropout", "megengine.Dropout", "isinstance", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.init.msra_normal_", "megengine.init.msra_normal_", "isinstance", "megengine.InstanceNorm", "megengine.InstanceNorm", "megengine.Sequential", "megengine.Sequential", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__", "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.extractor.BasicEncoder._make_layer", "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.extractor.BasicEncoder._make_layer", "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.extractor.BasicEncoder._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "output_dim", "=", "128", ",", "norm_fn", "=", "\"batch\"", ",", "dropout", "=", "0.0", ")", ":", "\n", "        ", "super", "(", "BasicEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm_fn", "=", "norm_fn", "\n", "\n", "if", "self", ".", "norm_fn", "==", "\"group\"", ":", "\n", "            ", "self", ".", "norm1", "=", "M", ".", "GroupNorm", "(", "num_groups", "=", "8", ",", "num_channels", "=", "64", ")", "\n", "\n", "", "elif", "self", ".", "norm_fn", "==", "\"batch\"", ":", "\n", "            ", "self", ".", "norm1", "=", "M", ".", "BatchNorm2d", "(", "64", ")", "\n", "\n", "", "elif", "self", ".", "norm_fn", "==", "\"instance\"", ":", "\n", "            ", "self", ".", "norm1", "=", "M", ".", "InstanceNorm", "(", "64", ",", "affine", "=", "False", ")", "\n", "\n", "", "elif", "self", ".", "norm_fn", "==", "\"none\"", ":", "\n", "            ", "self", ".", "norm1", "=", "M", ".", "Sequential", "(", ")", "\n", "\n", "", "self", ".", "conv1", "=", "M", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ")", "\n", "self", ".", "relu1", "=", "M", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "64", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "96", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "128", ",", "stride", "=", "1", ")", "\n", "\n", "self", ".", "conv2", "=", "M", ".", "Conv2d", "(", "128", ",", "output_dim", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "dropout", "=", "None", "\n", "if", "dropout", ">", "0", ":", "\n", "            ", "self", ".", "dropout", "=", "M", ".", "Dropout", "(", "drop_prob", "=", "dropout", ")", "\n", "\n", "", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "M", ".", "Conv2d", ")", ":", "\n", "                ", "M", ".", "init", ".", "msra_normal_", "(", "m", ".", "weight", ",", "mode", "=", "\"fan_out\"", ",", "nonlinearity", "=", "\"relu\"", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "M", ".", "BatchNorm2d", ",", "M", ".", "InstanceNorm", ",", "M", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "if", "m", ".", "weight", "is", "not", "None", ":", "\n", "                    ", "M", ".", "init", ".", "fill_", "(", "m", ".", "weight", ",", "1", ")", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "M", ".", "init", ".", "fill_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.extractor.BasicEncoder._make_layer": [[97, 104], ["extractor.ResidualBlock", "extractor.ResidualBlock", "megengine.Sequential", "megengine.Sequential"], "methods", ["None"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "dim", ",", "stride", "=", "1", ")", ":", "\n", "        ", "layer1", "=", "ResidualBlock", "(", "self", ".", "in_planes", ",", "dim", ",", "self", ".", "norm_fn", ",", "stride", "=", "stride", ")", "\n", "layer2", "=", "ResidualBlock", "(", "dim", ",", "dim", ",", "self", ".", "norm_fn", ",", "stride", "=", "1", ")", "\n", "layers", "=", "(", "layer1", ",", "layer2", ")", "\n", "\n", "self", ".", "in_planes", "=", "dim", "\n", "return", "M", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.extractor.BasicEncoder.forward": [[105, 129], ["extractor.BasicEncoder.conv1", "extractor.BasicEncoder.norm1", "extractor.BasicEncoder.relu1", "extractor.BasicEncoder.layer1", "extractor.BasicEncoder.layer2", "extractor.BasicEncoder.layer3", "extractor.BasicEncoder.conv2", "isinstance", "isinstance", "megengine.concat", "megengine.concat", "extractor.BasicEncoder.dropout", "megengine.split", "megengine.split"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "is_list", "=", "isinstance", "(", "x", ",", "tuple", ")", "or", "isinstance", "(", "x", ",", "list", ")", "\n", "if", "is_list", ":", "\n", "            ", "batch_dim", "=", "x", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "x", "=", "F", ".", "concat", "(", "x", ",", "axis", "=", "0", ")", "\n", "\n", "", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "norm1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu1", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "\n", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "\n", "", "if", "is_list", ":", "\n", "            ", "x", "=", "F", ".", "split", "(", "x", ",", "2", ",", "axis", "=", "0", ")", "\n", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.__init__": [[13, 50], ["megengine.Module.__init__", "extractor.BasicEncoder", "update.BasicUpdateBlock", "attention.LocalFeatureTransformer", "attention.LocalFeatureTransformer", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "self", ",", "max_disp", "=", "192", ",", "mixed_precision", "=", "False", ",", "test_mode", "=", "False", ")", ":", "\n", "        ", "super", "(", "CREStereo", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "max_flow", "=", "max_disp", "\n", "self", ".", "mixed_precision", "=", "mixed_precision", "\n", "self", ".", "test_mode", "=", "test_mode", "\n", "\n", "self", ".", "hidden_dim", "=", "128", "\n", "self", ".", "context_dim", "=", "128", "\n", "self", ".", "dropout", "=", "0", "\n", "\n", "# feature network and update block", "\n", "self", ".", "fnet", "=", "BasicEncoder", "(", "\n", "output_dim", "=", "256", ",", "norm_fn", "=", "\"instance\"", ",", "dropout", "=", "self", ".", "dropout", "\n", ")", "\n", "self", ".", "update_block", "=", "BasicUpdateBlock", "(", "\n", "hidden_dim", "=", "self", ".", "hidden_dim", ",", "cor_planes", "=", "4", "*", "9", ",", "mask_size", "=", "4", "\n", ")", "\n", "\n", "# loftr", "\n", "self", ".", "self_att_fn", "=", "LocalFeatureTransformer", "(", "\n", "d_model", "=", "256", ",", "nhead", "=", "8", ",", "layer_names", "=", "[", "\"self\"", "]", "*", "1", ",", "attention", "=", "\"linear\"", "\n", ")", "\n", "self", ".", "cross_att_fn", "=", "LocalFeatureTransformer", "(", "\n", "d_model", "=", "256", ",", "nhead", "=", "8", ",", "layer_names", "=", "[", "\"cross\"", "]", "*", "1", ",", "attention", "=", "\"linear\"", "\n", ")", "\n", "\n", "# adaptive search", "\n", "self", ".", "search_num", "=", "9", "\n", "self", ".", "conv_offset_16", "=", "M", ".", "Conv2d", "(", "\n", "256", ",", "self", ".", "search_num", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", "\n", ")", "\n", "self", ".", "conv_offset_8", "=", "M", ".", "Conv2d", "(", "\n", "256", ",", "self", ".", "search_num", "*", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", "\n", ")", "\n", "self", ".", "range_16", "=", "1", "\n", "self", ".", "range_8", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.freeze_bn": [[51, 55], ["crestereo.CREStereo.modules", "isinstance", "m.eval"], "methods", ["None"], ["", "def", "freeze_bn", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "M", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.unfold": [[56, 75], ["megengine.sliding_window", "megengine.sliding_window", "megengine.reshape", "megengine.reshape", "megengine.transpose", "megengine.transpose", "megengine.reshape", "megengine.reshape", "isinstance", "isinstance", "isinstance", "len"], "methods", ["None"], ["", "", "", "def", "unfold", "(", "self", ",", "x", ",", "kernel_size", ",", "dilation", "=", "1", ",", "padding", "=", "0", ",", "stride", "=", "1", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "if", "isinstance", "(", "kernel_size", ",", "tuple", ")", "or", "isinstance", "(", "kernel_size", ",", "list", ")", ":", "\n", "            ", "assert", "len", "(", "kernel_size", ")", "==", "2", "\n", "k1", ",", "k2", "=", "kernel_size", "\n", "", "else", ":", "\n", "            ", "assert", "isinstance", "(", "kernel_size", ",", "int", ")", "\n", "k1", "=", "k2", "=", "kernel_size", "\n", "", "x", "=", "F", ".", "sliding_window", "(", "\n", "x", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "dilation", "=", "dilation", ",", "\n", "padding", "=", "padding", ",", "\n", "stride", "=", "stride", ",", "\n", ")", "\n", "x", "=", "F", ".", "reshape", "(", "x", ",", "(", "n", ",", "c", ",", "-", "1", ",", "k1", "*", "k2", ")", ")", "\n", "x", "=", "F", ".", "transpose", "(", "x", ",", "(", "0", ",", "1", ",", "3", ",", "2", ")", ")", "\n", "x", "=", "F", ".", "reshape", "(", "x", ",", "(", "n", ",", "c", "*", "k1", "*", "k2", ",", "-", "1", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.convex_upsample": [[76, 88], ["megengine.reshape", "megengine.reshape", "megengine.softmax", "megengine.softmax", "crestereo.CREStereo.unfold", "megengine.reshape", "megengine.reshape", "megengine.sum", "megengine.sum", "megengine.transpose", "megengine.transpose", "megengine.reshape", "megengine.reshape"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.unfold"], ["", "def", "convex_upsample", "(", "self", ",", "flow", ",", "mask", ",", "rate", "=", "4", ")", ":", "\n", "        ", "\"\"\"[H/rate, W/rate, 2] -> [H, W, 2]\"\"\"", "\n", "N", ",", "_", ",", "H", ",", "W", "=", "flow", ".", "shape", "\n", "mask", "=", "F", ".", "reshape", "(", "mask", ",", "(", "N", ",", "1", ",", "9", ",", "rate", ",", "rate", ",", "H", ",", "W", ")", ")", "\n", "mask", "=", "F", ".", "softmax", "(", "mask", ",", "axis", "=", "2", ")", "\n", "\n", "up_flow", "=", "self", ".", "unfold", "(", "rate", "*", "flow", ",", "[", "3", ",", "3", "]", ",", "padding", "=", "1", ")", "\n", "up_flow", "=", "F", ".", "reshape", "(", "up_flow", ",", "(", "N", ",", "2", ",", "9", ",", "1", ",", "1", ",", "H", ",", "W", ")", ")", "\n", "\n", "up_flow", "=", "F", ".", "sum", "(", "mask", "*", "up_flow", ",", "axis", "=", "2", ")", "\n", "up_flow", "=", "F", ".", "transpose", "(", "up_flow", ",", "(", "0", ",", "1", ",", "4", ",", "2", ",", "5", ",", "3", ")", ")", "\n", "return", "F", ".", "reshape", "(", "up_flow", ",", "(", "N", ",", "2", ",", "rate", "*", "H", ",", "rate", "*", "W", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.zero_init": [[89, 95], ["megengine.zeros", "megengine.zeros", "megengine.zeros", "megengine.zeros", "megengine.concat().to", "megengine.concat().to", "megengine.concat", "megengine.concat"], "methods", ["None"], ["", "def", "zero_init", "(", "self", ",", "fmap", ")", ":", "\n", "        ", "N", ",", "C", ",", "H", ",", "W", "=", "fmap", ".", "shape", "\n", "_x", "=", "F", ".", "zeros", "(", "[", "N", ",", "1", ",", "H", ",", "W", "]", ",", "dtype", "=", "\"float32\"", ")", "\n", "_y", "=", "F", ".", "zeros", "(", "[", "N", ",", "1", ",", "H", ",", "W", "]", ",", "dtype", "=", "\"float32\"", ")", "\n", "zero_flow", "=", "F", ".", "concat", "(", "[", "_x", ",", "_y", "]", ",", "axis", "=", "1", ")", ".", "to", "(", "fmap", ".", "device", ")", "\n", "return", "zero_flow", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.forward": [[96, 276], ["fmap1.astype.astype.astype", "fmap2.astype.astype.astype", "corr.AGCL", "corr.AGCL", "corr.AGCL", "range", "megengine.amp.autocast", "megengine.amp.autocast", "crestereo.CREStereo.fnet", "megengine.amp.autocast", "megengine.amp.autocast", "megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "crestereo.CREStereo.conv_offset_8", "megengine.split", "megengine.split", "megengine.tanh", "megengine.tanh", "megengine.relu", "megengine.relu", "megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "crestereo.CREStereo.conv_offset_16", "megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "attention.PositionEncodingSine", "attention.PositionEncodingSine.", "megengine.reshape", "megengine.reshape", "attention.PositionEncodingSine.", "megengine.reshape", "megengine.reshape", "crestereo.CREStereo.self_att_fn", "crestereo.CREStereo.zero_init", "range", "range", "crestereo.CREStereo.detach", "corr.AGCL.", "predictions.append", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.transpose", "megengine.nn.interpolate", "megengine.nn.interpolate", "flow_dw16.detach.detach.detach", "corr.AGCL.", "crestereo.CREStereo.convex_upsample", "predictions.append", "megengine.nn.interpolate", "megengine.nn.interpolate", "flow_dw8.detach.detach.detach", "corr.AGCL.", "crestereo.CREStereo.convex_upsample", "predictions.append", "megengine.nn.interpolate", "megengine.nn.interpolate", "megengine.amp.autocast", "megengine.amp.autocast", "crestereo.CREStereo.update_block", "crestereo.CREStereo.convex_upsample", "megengine.reshape", "megengine.reshape", "megengine.amp.autocast", "megengine.amp.autocast", "crestereo.CREStereo.update_block", "megengine.nn.interpolate", "megengine.nn.interpolate", "megengine.amp.autocast", "megengine.amp.autocast", "crestereo.CREStereo.update_block", "megengine.nn.interpolate", "megengine.nn.interpolate", "megengine.sigmoid", "megengine.sigmoid", "megengine.sigmoid", "megengine.sigmoid"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.zero_init", "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.convex_upsample", "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.convex_upsample", "home.repos.pwc.inspect_result.megvii-research_crestereo.nets.crestereo.CREStereo.convex_upsample"], ["", "def", "forward", "(", "self", ",", "image1", ",", "image2", ",", "iters", "=", "10", ",", "flow_init", "=", "None", ")", ":", "\n", "\n", "        ", "image1", "=", "2", "*", "(", "image1", "/", "255.0", ")", "-", "1.0", "\n", "image2", "=", "2", "*", "(", "image2", "/", "255.0", ")", "-", "1.0", "\n", "\n", "hdim", "=", "self", ".", "hidden_dim", "\n", "cdim", "=", "self", ".", "context_dim", "\n", "\n", "# feature network", "\n", "with", "amp", ".", "autocast", "(", "enabled", "=", "self", ".", "mixed_precision", ")", ":", "\n", "            ", "fmap1", ",", "fmap2", "=", "self", ".", "fnet", "(", "[", "image1", ",", "image2", "]", ")", "\n", "\n", "", "fmap1", "=", "fmap1", ".", "astype", "(", "\"float32\"", ")", "\n", "fmap2", "=", "fmap2", ".", "astype", "(", "\"float32\"", ")", "\n", "\n", "with", "amp", ".", "autocast", "(", "enabled", "=", "self", ".", "mixed_precision", ")", ":", "\n", "\n", "# 1/4 -> 1/8", "\n", "# feature", "\n", "            ", "fmap1_dw8", "=", "F", ".", "avg_pool2d", "(", "fmap1", ",", "2", ",", "stride", "=", "2", ")", "\n", "fmap2_dw8", "=", "F", ".", "avg_pool2d", "(", "fmap2", ",", "2", ",", "stride", "=", "2", ")", "\n", "\n", "# offset", "\n", "offset_dw8", "=", "self", ".", "conv_offset_8", "(", "fmap1_dw8", ")", "\n", "offset_dw8", "=", "self", ".", "range_8", "*", "(", "F", ".", "sigmoid", "(", "offset_dw8", ")", "-", "0.5", ")", "*", "2.0", "\n", "\n", "# context", "\n", "net", ",", "inp", "=", "F", ".", "split", "(", "fmap1", ",", "[", "hdim", "]", ",", "axis", "=", "1", ")", "\n", "net", "=", "F", ".", "tanh", "(", "net", ")", "\n", "inp", "=", "F", ".", "relu", "(", "inp", ")", "\n", "net_dw8", "=", "F", ".", "avg_pool2d", "(", "net", ",", "2", ",", "stride", "=", "2", ")", "\n", "inp_dw8", "=", "F", ".", "avg_pool2d", "(", "inp", ",", "2", ",", "stride", "=", "2", ")", "\n", "\n", "# 1/4 -> 1/16", "\n", "# feature", "\n", "fmap1_dw16", "=", "F", ".", "avg_pool2d", "(", "fmap1", ",", "4", ",", "stride", "=", "4", ")", "\n", "fmap2_dw16", "=", "F", ".", "avg_pool2d", "(", "fmap2", ",", "4", ",", "stride", "=", "4", ")", "\n", "offset_dw16", "=", "self", ".", "conv_offset_16", "(", "fmap1_dw16", ")", "\n", "offset_dw16", "=", "self", ".", "range_16", "*", "(", "F", ".", "sigmoid", "(", "offset_dw16", ")", "-", "0.5", ")", "*", "2.0", "\n", "\n", "# context", "\n", "net_dw16", "=", "F", ".", "avg_pool2d", "(", "net", ",", "4", ",", "stride", "=", "4", ")", "\n", "inp_dw16", "=", "F", ".", "avg_pool2d", "(", "inp", ",", "4", ",", "stride", "=", "4", ")", "\n", "\n", "# positional encoding and self-attention", "\n", "pos_encoding_fn_small", "=", "PositionEncodingSine", "(", "\n", "d_model", "=", "256", ",", "max_shape", "=", "(", "image1", ".", "shape", "[", "2", "]", "//", "16", ",", "image1", ".", "shape", "[", "3", "]", "//", "16", ")", "\n", ")", "\n", "# 'n c h w -> n (h w) c'", "\n", "x_tmp", "=", "pos_encoding_fn_small", "(", "fmap1_dw16", ")", "\n", "fmap1_dw16", "=", "F", ".", "reshape", "(", "\n", "F", ".", "transpose", "(", "x_tmp", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ",", "\n", "(", "x_tmp", ".", "shape", "[", "0", "]", ",", "x_tmp", ".", "shape", "[", "2", "]", "*", "x_tmp", ".", "shape", "[", "3", "]", ",", "x_tmp", ".", "shape", "[", "1", "]", ")", ",", "\n", ")", "\n", "# 'n c h w -> n (h w) c'", "\n", "x_tmp", "=", "pos_encoding_fn_small", "(", "fmap2_dw16", ")", "\n", "fmap2_dw16", "=", "F", ".", "reshape", "(", "\n", "F", ".", "transpose", "(", "x_tmp", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", ",", "\n", "(", "x_tmp", ".", "shape", "[", "0", "]", ",", "x_tmp", ".", "shape", "[", "2", "]", "*", "x_tmp", ".", "shape", "[", "3", "]", ",", "x_tmp", ".", "shape", "[", "1", "]", ")", ",", "\n", ")", "\n", "\n", "fmap1_dw16", ",", "fmap2_dw16", "=", "self", ".", "self_att_fn", "(", "fmap1_dw16", ",", "fmap2_dw16", ")", "\n", "fmap1_dw16", ",", "fmap2_dw16", "=", "[", "\n", "F", ".", "transpose", "(", "\n", "F", ".", "reshape", "(", "x", ",", "(", "x", ".", "shape", "[", "0", "]", ",", "image1", ".", "shape", "[", "2", "]", "//", "16", ",", "-", "1", ",", "x", ".", "shape", "[", "2", "]", ")", ")", ",", "\n", "(", "0", ",", "3", ",", "1", ",", "2", ")", ",", "\n", ")", "\n", "for", "x", "in", "[", "fmap1_dw16", ",", "fmap2_dw16", "]", "\n", "]", "\n", "\n", "", "corr_fn", "=", "AGCL", "(", "fmap1", ",", "fmap2", ")", "\n", "corr_fn_dw8", "=", "AGCL", "(", "fmap1_dw8", ",", "fmap2_dw8", ")", "\n", "corr_fn_att_dw16", "=", "AGCL", "(", "fmap1_dw16", ",", "fmap2_dw16", ",", "att", "=", "self", ".", "cross_att_fn", ")", "\n", "\n", "# Cascaded refinement (1/16 + 1/8 + 1/4)", "\n", "predictions", "=", "[", "]", "\n", "flow", "=", "None", "\n", "flow_up", "=", "None", "\n", "if", "flow_init", "is", "not", "None", ":", "\n", "            ", "scale", "=", "fmap1", ".", "shape", "[", "2", "]", "/", "flow_init", ".", "shape", "[", "2", "]", "\n", "flow", "=", "-", "scale", "*", "F", ".", "nn", ".", "interpolate", "(", "\n", "flow_init", ",", "\n", "size", "=", "(", "fmap1", ".", "shape", "[", "2", "]", ",", "fmap1", ".", "shape", "[", "3", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", "\n", ")", "\n", "", "else", ":", "\n", "# zero initialization", "\n", "            ", "flow_dw16", "=", "self", ".", "zero_init", "(", "fmap1_dw16", ")", "\n", "\n", "# Recurrent Update Module", "\n", "# RUM: 1/16", "\n", "for", "itr", "in", "range", "(", "iters", "//", "2", ")", ":", "\n", "                ", "if", "itr", "%", "2", "==", "0", ":", "\n", "                    ", "small_patch", "=", "False", "\n", "", "else", ":", "\n", "                    ", "small_patch", "=", "True", "\n", "\n", "", "flow_dw16", "=", "flow_dw16", ".", "detach", "(", ")", "\n", "out_corrs", "=", "corr_fn_att_dw16", "(", "\n", "flow_dw16", ",", "offset_dw16", ",", "small_patch", "=", "small_patch", "\n", ")", "\n", "\n", "with", "amp", ".", "autocast", "(", "enabled", "=", "self", ".", "mixed_precision", ")", ":", "\n", "                    ", "net_dw16", ",", "up_mask", ",", "delta_flow", "=", "self", ".", "update_block", "(", "\n", "net_dw16", ",", "inp_dw16", ",", "out_corrs", ",", "flow_dw16", "\n", ")", "\n", "\n", "", "flow_dw16", "=", "flow_dw16", "+", "delta_flow", "\n", "flow", "=", "self", ".", "convex_upsample", "(", "flow_dw16", ",", "up_mask", ",", "rate", "=", "4", ")", "\n", "flow_up", "=", "-", "4", "*", "F", ".", "nn", ".", "interpolate", "(", "\n", "flow", ",", "\n", "size", "=", "(", "4", "*", "flow", ".", "shape", "[", "2", "]", ",", "4", "*", "flow", ".", "shape", "[", "3", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", "\n", ")", "\n", "predictions", ".", "append", "(", "flow_up", ")", "\n", "\n", "", "scale", "=", "fmap1_dw8", ".", "shape", "[", "2", "]", "/", "flow", ".", "shape", "[", "2", "]", "\n", "flow_dw8", "=", "-", "scale", "*", "F", ".", "nn", ".", "interpolate", "(", "\n", "flow", ",", "\n", "size", "=", "(", "fmap1_dw8", ".", "shape", "[", "2", "]", ",", "fmap1_dw8", ".", "shape", "[", "3", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", "\n", ")", "\n", "\n", "# RUM: 1/8", "\n", "for", "itr", "in", "range", "(", "iters", "//", "2", ")", ":", "\n", "                ", "if", "itr", "%", "2", "==", "0", ":", "\n", "                    ", "small_patch", "=", "False", "\n", "", "else", ":", "\n", "                    ", "small_patch", "=", "True", "\n", "\n", "", "flow_dw8", "=", "flow_dw8", ".", "detach", "(", ")", "\n", "out_corrs", "=", "corr_fn_dw8", "(", "flow_dw8", ",", "offset_dw8", ",", "small_patch", "=", "small_patch", ")", "\n", "\n", "with", "amp", ".", "autocast", "(", "enabled", "=", "self", ".", "mixed_precision", ")", ":", "\n", "                    ", "net_dw8", ",", "up_mask", ",", "delta_flow", "=", "self", ".", "update_block", "(", "\n", "net_dw8", ",", "inp_dw8", ",", "out_corrs", ",", "flow_dw8", "\n", ")", "\n", "\n", "", "flow_dw8", "=", "flow_dw8", "+", "delta_flow", "\n", "flow", "=", "self", ".", "convex_upsample", "(", "flow_dw8", ",", "up_mask", ",", "rate", "=", "4", ")", "\n", "flow_up", "=", "-", "2", "*", "F", ".", "nn", ".", "interpolate", "(", "\n", "flow", ",", "\n", "size", "=", "(", "2", "*", "flow", ".", "shape", "[", "2", "]", ",", "2", "*", "flow", ".", "shape", "[", "3", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", "\n", ")", "\n", "predictions", ".", "append", "(", "flow_up", ")", "\n", "\n", "", "scale", "=", "fmap1", ".", "shape", "[", "2", "]", "/", "flow", ".", "shape", "[", "2", "]", "\n", "flow", "=", "-", "scale", "*", "F", ".", "nn", ".", "interpolate", "(", "\n", "flow", ",", "\n", "size", "=", "(", "fmap1", ".", "shape", "[", "2", "]", ",", "fmap1", ".", "shape", "[", "3", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "align_corners", "=", "True", ",", "\n", ")", "\n", "\n", "# RUM: 1/4", "\n", "", "for", "itr", "in", "range", "(", "iters", ")", ":", "\n", "            ", "if", "itr", "%", "2", "==", "0", ":", "\n", "                ", "small_patch", "=", "False", "\n", "", "else", ":", "\n", "                ", "small_patch", "=", "True", "\n", "\n", "", "flow", "=", "flow", ".", "detach", "(", ")", "\n", "out_corrs", "=", "corr_fn", "(", "flow", ",", "None", ",", "small_patch", "=", "small_patch", ",", "iter_mode", "=", "True", ")", "\n", "\n", "with", "amp", ".", "autocast", "(", "enabled", "=", "self", ".", "mixed_precision", ")", ":", "\n", "                ", "net", ",", "up_mask", ",", "delta_flow", "=", "self", ".", "update_block", "(", "net", ",", "inp", ",", "out_corrs", ",", "flow", ")", "\n", "\n", "", "flow", "=", "flow", "+", "delta_flow", "\n", "flow_up", "=", "-", "self", ".", "convex_upsample", "(", "flow", ",", "up_mask", ",", "rate", "=", "4", ")", "\n", "predictions", ".", "append", "(", "flow_up", ")", "\n", "\n", "", "if", "self", ".", "test_mode", ":", "\n", "            ", "return", "flow_up", "\n", "\n", "", "return", "predictions", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_crestereo.utils.utils.bilinear_sampler": [[6, 23], ["megengine.remap", "megengine.logical_not", "F.logical_not.astype"], "function", ["None"], ["def", "bilinear_sampler", "(", "img", ",", "coords", ",", "mode", "=", "\"bilinear\"", ",", "mask", "=", "False", ")", ":", "\n", "    ", "\"\"\"Wrapper for grid_sample, uses pixel coordinates\"\"\"", "\n", "H", ",", "W", "=", "img", ".", "shape", "[", "-", "2", ":", "]", "\n", "\n", "img", "=", "F", ".", "remap", "(", "img", ",", "coords", ",", "border_mode", "=", "\"constant\"", ")", "\n", "\n", "if", "mask", ":", "\n", "        ", "mask", "=", "(", "\n", "(", "coords", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "<", "0", ")", "\n", "|", "(", "coords", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", ">", "W", "-", "1", ")", "\n", "|", "(", "coords", "[", ":", ",", ":", ",", ":", ",", "1", ":", "2", "]", "<", "0", ")", "\n", "|", "(", "coords", "[", ":", ",", ":", ",", ":", ",", "1", ":", "2", "]", ">", "H", "-", "1", ")", "\n", ")", "\n", "mask", "=", "F", ".", "logical_not", "(", "mask", ")", "\n", "return", "img", ",", "mask", ".", "astype", "(", "\"float32\"", ")", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.utils.utils.coords_grid": [[25, 33], ["numpy.meshgrid", "megengine.stack", "megengine.repeat", "numpy.arange", "numpy.arange", "megengine.tensor", "megengine.tensor", "megengine.expand_dims"], "function", ["None"], ["", "def", "coords_grid", "(", "batch", ",", "ht", ",", "wd", ")", ":", "\n", "    ", "x_grid", ",", "y_grid", "=", "np", ".", "meshgrid", "(", "np", ".", "arange", "(", "wd", ")", ",", "np", ".", "arange", "(", "ht", ")", ")", "\n", "y_grid", ",", "x_grid", "=", "mge", ".", "tensor", "(", "y_grid", ",", "dtype", "=", "\"float32\"", ")", ",", "mge", ".", "tensor", "(", "\n", "x_grid", ",", "dtype", "=", "\"float32\"", "\n", ")", "\n", "coords", "=", "F", ".", "stack", "(", "[", "x_grid", ",", "y_grid", "]", ",", "axis", "=", "0", ")", "\n", "coords", "=", "F", ".", "repeat", "(", "F", ".", "expand_dims", "(", "coords", ",", "axis", "=", "0", ")", ",", "batch", ",", "axis", "=", "0", ")", "\n", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.utils.utils.manual_pad": [[35, 45], ["megengine.repeat", "megengine.repeat", "megengine.concat", "megengine.repeat", "megengine.repeat", "megengine.concat"], "function", ["None"], ["", "def", "manual_pad", "(", "x", ",", "pady", ",", "padx", ")", ":", "\n", "    ", "if", "pady", ">", "0", ":", "\n", "        ", "u", "=", "F", ".", "repeat", "(", "x", "[", ":", ",", ":", ",", "0", ":", "1", ",", ":", "]", ",", "pady", ",", "axis", "=", "2", ")", "\n", "d", "=", "F", ".", "repeat", "(", "x", "[", ":", ",", ":", ",", "-", "1", ":", ",", ":", "]", ",", "pady", ",", "axis", "=", "2", ")", "\n", "x", "=", "F", ".", "concat", "(", "[", "u", ",", "x", ",", "d", "]", ",", "axis", "=", "2", ")", "\n", "", "if", "padx", ">", "0", ":", "\n", "        ", "l", "=", "F", ".", "repeat", "(", "x", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", ",", "padx", ",", "axis", "=", "3", ")", "\n", "r", "=", "F", ".", "repeat", "(", "x", "[", ":", ",", ":", ",", ":", ",", "-", "1", ":", "]", ",", "padx", ",", "axis", "=", "3", ")", "\n", "x", "=", "F", ".", "concat", "(", "[", "l", ",", "x", ",", "r", "]", ",", "axis", "=", "3", ")", "\n", "", "return", "x", "\n", "", ""]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.linear_attention.LinearAttention.__init__": [[20, 24], ["megengine.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "self", ",", "eps", "=", "1e-6", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feature_map", "=", "elu_feature_map", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.linear_attention.LinearAttention.forward": [[25, 59], ["linear_attention.LinearAttention.feature_map", "linear_attention.LinearAttention.feature_map", "megengine.sum", "megengine.sum", "megengine.sum", "megengine.sum", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.sum", "megengine.sum", "megengine.expand_dims", "megengine.expand_dims", "megengine.sum", "megengine.sum", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "queries", ",", "keys", ",", "values", ",", "q_mask", "=", "None", ",", "kv_mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"Multi-Head linear attention proposed in \"Transformers are RNNs\"\n        Args:\n            queries: [N, L, H, D]\n            keys: [N, S, H, D]\n            values: [N, S, H, D]\n            q_mask: [N, L]\n            kv_mask: [N, S]\n        Returns:\n            queried_values: (N, L, H, D)\n        \"\"\"", "\n", "Q", "=", "self", ".", "feature_map", "(", "queries", ")", "\n", "K", "=", "self", ".", "feature_map", "(", "keys", ")", "\n", "\n", "# set padded position to zero", "\n", "if", "q_mask", "is", "not", "None", ":", "\n", "            ", "Q", "=", "Q", "*", "F", ".", "expand_dims", "(", "q_mask", ",", "(", "2", ",", "3", ")", ")", "# [:, :, None, None]", "\n", "", "if", "kv_mask", "is", "not", "None", ":", "\n", "            ", "K", "=", "K", "*", "F", ".", "expand_dims", "(", "kv_mask", ",", "(", "2", ",", "3", ")", ")", "# [:, :, None, None]", "\n", "values", "=", "values", "*", "F", ".", "expand_dims", "(", "kv_mask", ",", "(", "2", ",", "3", ")", ")", "# [:, :, None, None]", "\n", "\n", "", "v_length", "=", "values", ".", "shape", "[", "1", "]", "\n", "values", "=", "values", "/", "v_length", "# prevent fp16 overflow", "\n", "KV", "=", "F", ".", "sum", "(", "F", ".", "expand_dims", "(", "K", ",", "-", "1", ")", "*", "F", ".", "expand_dims", "(", "values", ",", "3", ")", ",", "axis", "=", "1", ")", "\n", "Z", "=", "1", "/", "(", "F", ".", "sum", "(", "Q", "*", "F", ".", "sum", "(", "K", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ",", "axis", "=", "-", "1", ")", "+", "self", ".", "eps", ")", "\n", "queried_values", "=", "(", "\n", "F", ".", "sum", "(", "\n", "F", ".", "expand_dims", "(", "Q", ",", "-", "1", ")", "*", "F", ".", "expand_dims", "(", "KV", ",", "1", ")", "*", "F", ".", "expand_dims", "(", "Z", ",", "(", "3", ",", "4", ")", ")", ",", "\n", "axis", "=", "3", ",", "\n", ")", "\n", "*", "v_length", "\n", ")", "\n", "\n", "return", "queried_values", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.linear_attention.FullAttention.__init__": [[62, 66], ["megengine.Module.__init__", "megengine.Dropout", "megengine.Dropout"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_dropout", "=", "False", ",", "attention_dropout", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_dropout", "=", "use_dropout", "\n", "self", ".", "dropout", "=", "M", ".", "Dropout", "(", "drop_prob", "=", "attention_dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.linear_attention.FullAttention.forward": [[67, 97], ["megengine.sum", "megengine.sum", "megengine.softmax", "megengine.softmax", "megengine.sum", "megengine.sum", "float", "linear_attention.FullAttention.dropout", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "queries", ",", "keys", ",", "values", ",", "q_mask", "=", "None", ",", "kv_mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"Multi-head scaled dot-product attention, a.k.a full attention.\n        Args:\n            queries: [N, L, H, D]\n            keys: [N, S, H, D]\n            values: [N, S, H, D]\n            q_mask: [N, L]\n            kv_mask: [N, S]\n        Returns:\n            queried_values: (N, L, H, D)\n        \"\"\"", "\n", "\n", "# Compute the unnormalized attention and apply the masks", "\n", "QK", "=", "F", ".", "sum", "(", "F", ".", "expand_dims", "(", "queries", ",", "2", ")", "*", "F", ".", "expand_dims", "(", "keys", ",", "1", ")", ",", "axis", "=", "-", "1", ")", "\n", "if", "kv_mask", "is", "not", "None", ":", "\n", "            ", "assert", "q_mask", ".", "dtype", "==", "np", ".", "bool_", "\n", "assert", "kv_mask", ".", "dtype", "==", "np", ".", "bool_", "\n", "QK", "[", "\n", "~", "(", "F", ".", "expand_dims", "(", "q_mask", ",", "(", "2", ",", "3", ")", ")", "&", "F", ".", "expand_dims", "(", "kv_mask", ",", "(", "1", ",", "3", ")", ")", ")", "\n", "]", "=", "float", "(", "\"-inf\"", ")", "\n", "\n", "# Compute the attention and the weighted average", "\n", "", "softmax_temp", "=", "1.0", "/", "queries", ".", "shape", "[", "3", "]", "**", "0.5", "# sqrt(D)", "\n", "A", "=", "F", ".", "softmax", "(", "softmax_temp", "*", "QK", ",", "axis", "=", "2", ")", "\n", "if", "self", ".", "use_dropout", ":", "\n", "            ", "A", "=", "self", ".", "dropout", "(", "A", ")", "\n", "\n", "", "queried_values", "=", "F", ".", "sum", "(", "F", ".", "expand_dims", "(", "A", ",", "-", "1", ")", "*", "F", ".", "expand_dims", "(", "values", ",", "1", ")", ",", "axis", "=", "2", ")", "\n", "\n", "return", "queried_values", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.linear_attention.elu": [[11, 13], ["megengine.maximum", "megengine.minimum", "megengine.exp"], "function", ["None"], ["def", "elu", "(", "x", ",", "alpha", "=", "1.0", ")", ":", "\n", "    ", "return", "F", ".", "maximum", "(", "0", ",", "x", ")", "+", "F", ".", "minimum", "(", "0", ",", "alpha", "*", "(", "F", ".", "exp", "(", "x", ")", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.linear_attention.elu_feature_map": [[15, 17], ["linear_attention.elu"], "function", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.linear_attention.elu"], ["", "def", "elu_feature_map", "(", "x", ")", ":", "\n", "    ", "return", "elu", "(", "x", ")", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.transformer.LoFTREncoderLayer.__init__": [[13, 36], ["megengine.Module.__init__", "megengine.Linear", "megengine.Linear", "megengine.Linear", "megengine.Linear", "megengine.Linear", "megengine.Linear", "megengine.Linear", "megengine.Linear", "megengine.Sequential", "megengine.Sequential", "megengine.LayerNorm", "megengine.LayerNorm", "megengine.LayerNorm", "megengine.LayerNorm", "linear_attention.LinearAttention", "linear_attention.FullAttention", "megengine.Linear", "megengine.Linear", "megengine.ReLU", "megengine.ReLU", "megengine.Linear", "megengine.Linear"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["    ", "def", "__init__", "(", "self", ",", "d_model", ",", "nhead", ",", "attention", "=", "\"linear\"", ")", ":", "\n", "        ", "super", "(", "LoFTREncoderLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dim", "=", "d_model", "//", "nhead", "\n", "self", ".", "nhead", "=", "nhead", "\n", "\n", "# multi-head attention", "\n", "self", ".", "q_proj", "=", "M", ".", "Linear", "(", "d_model", ",", "d_model", ",", "bias", "=", "False", ")", "\n", "self", ".", "k_proj", "=", "M", ".", "Linear", "(", "d_model", ",", "d_model", ",", "bias", "=", "False", ")", "\n", "self", ".", "v_proj", "=", "M", ".", "Linear", "(", "d_model", ",", "d_model", ",", "bias", "=", "False", ")", "\n", "self", ".", "attention", "=", "LinearAttention", "(", ")", "if", "attention", "==", "\"linear\"", "else", "FullAttention", "(", ")", "\n", "self", ".", "merge", "=", "M", ".", "Linear", "(", "d_model", ",", "d_model", ",", "bias", "=", "False", ")", "\n", "\n", "# feed-forward network", "\n", "self", ".", "mlp", "=", "M", ".", "Sequential", "(", "\n", "M", ".", "Linear", "(", "d_model", "*", "2", ",", "d_model", "*", "2", ",", "bias", "=", "False", ")", ",", "\n", "M", ".", "ReLU", "(", ")", ",", "\n", "M", ".", "Linear", "(", "d_model", "*", "2", ",", "d_model", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "\n", "# norm and dropout", "\n", "self", ".", "norm1", "=", "M", ".", "LayerNorm", "(", "d_model", ")", "\n", "self", ".", "norm2", "=", "M", ".", "LayerNorm", "(", "d_model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.transformer.LoFTREncoderLayer.forward": [[37, 69], ["megengine.reshape", "megengine.reshape", "megengine.reshape", "megengine.reshape", "megengine.reshape", "megengine.reshape", "transformer.LoFTREncoderLayer.attention", "transformer.LoFTREncoderLayer.merge", "transformer.LoFTREncoderLayer.norm1", "transformer.LoFTREncoderLayer.mlp", "transformer.LoFTREncoderLayer.norm2", "transformer.LoFTREncoderLayer.q_proj", "transformer.LoFTREncoderLayer.k_proj", "transformer.LoFTREncoderLayer.v_proj", "megengine.reshape", "megengine.reshape", "megengine.concat", "megengine.concat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "source", ",", "x_mask", "=", "None", ",", "source_mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x (torch.Tensor): [N, L, C]\n            source (torch.Tensor): [N, S, C]\n            x_mask (torch.Tensor): [N, L] (optional)\n            source_mask (torch.Tensor): [N, S] (optional)\n        \"\"\"", "\n", "bs", "=", "x", ".", "shape", "[", "0", "]", "\n", "query", ",", "key", ",", "value", "=", "x", ",", "source", ",", "source", "\n", "\n", "# multi-head attention", "\n", "query", "=", "F", ".", "reshape", "(", "\n", "self", ".", "q_proj", "(", "query", ")", ",", "(", "bs", ",", "-", "1", ",", "self", ".", "nhead", ",", "self", ".", "dim", ")", "\n", ")", "# [N, L, (H, D)] (H=8, D=256//8)", "\n", "key", "=", "F", ".", "reshape", "(", "\n", "self", ".", "k_proj", "(", "key", ")", ",", "(", "bs", ",", "-", "1", ",", "self", ".", "nhead", ",", "self", ".", "dim", ")", "\n", ")", "# [N, S, (H, D)]", "\n", "value", "=", "F", ".", "reshape", "(", "self", ".", "v_proj", "(", "value", ")", ",", "(", "bs", ",", "-", "1", ",", "self", ".", "nhead", ",", "self", ".", "dim", ")", ")", "\n", "message", "=", "self", ".", "attention", "(", "\n", "query", ",", "key", ",", "value", ",", "q_mask", "=", "x_mask", ",", "kv_mask", "=", "source_mask", "\n", ")", "# [N, L, (H, D)]", "\n", "message", "=", "self", ".", "merge", "(", "\n", "F", ".", "reshape", "(", "message", ",", "(", "bs", ",", "-", "1", ",", "self", ".", "nhead", "*", "self", ".", "dim", ")", ")", "\n", ")", "# [N, L, C]", "\n", "message", "=", "self", ".", "norm1", "(", "message", ")", "\n", "\n", "# feed-forward network", "\n", "message", "=", "self", ".", "mlp", "(", "F", ".", "concat", "(", "[", "x", ",", "message", "]", ",", "axis", "=", "2", ")", ")", "\n", "message", "=", "self", ".", "norm2", "(", "message", ")", "\n", "\n", "return", "x", "+", "message", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.transformer.LocalFeatureTransformer.__init__": [[74, 85], ["megengine.Module.__init__", "transformer.LoFTREncoderLayer", "transformer.LocalFeatureTransformer._reset_parameters", "copy.deepcopy", "range", "len"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__", "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.transformer.LocalFeatureTransformer._reset_parameters"], ["def", "__init__", "(", "self", ",", "d_model", ",", "nhead", ",", "layer_names", ",", "attention", ")", ":", "\n", "        ", "super", "(", "LocalFeatureTransformer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "d_model", "=", "d_model", "\n", "self", ".", "nhead", "=", "nhead", "\n", "self", ".", "layer_names", "=", "layer_names", "\n", "encoder_layer", "=", "LoFTREncoderLayer", "(", "d_model", ",", "nhead", ",", "attention", ")", "\n", "self", ".", "layers", "=", "[", "\n", "copy", ".", "deepcopy", "(", "encoder_layer", ")", "for", "_", "in", "range", "(", "len", "(", "self", ".", "layer_names", ")", ")", "\n", "]", "\n", "self", ".", "_reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.transformer.LocalFeatureTransformer._reset_parameters": [[86, 90], ["transformer.LocalFeatureTransformer.parameters", "megengine.init.xavier_uniform_", "megengine.init.xavier_uniform_"], "methods", ["None"], ["", "def", "_reset_parameters", "(", "self", ")", ":", "\n", "        ", "for", "p", "in", "self", ".", "parameters", "(", ")", ":", "\n", "            ", "if", "p", ".", "ndim", ">", "1", ":", "\n", "                ", "M", ".", "init", ".", "xavier_uniform_", "(", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.transformer.LocalFeatureTransformer.forward": [[91, 115], ["zip", "layer", "layer", "layer", "layer"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "feat0", ",", "feat1", ",", "mask0", "=", "None", ",", "mask1", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            feat0 (torch.Tensor): [N, L, C]\n            feat1 (torch.Tensor): [N, S, C]\n            mask0 (torch.Tensor): [N, L] (optional)\n            mask1 (torch.Tensor): [N, S] (optional)\n        \"\"\"", "\n", "\n", "assert", "(", "\n", "self", ".", "d_model", "==", "feat0", ".", "shape", "[", "2", "]", "\n", ")", ",", "\"the feature number of src and transformer must be equal\"", "\n", "\n", "for", "layer", ",", "name", "in", "zip", "(", "self", ".", "layers", ",", "self", ".", "layer_names", ")", ":", "\n", "            ", "if", "name", "==", "\"self\"", ":", "\n", "                ", "feat0", "=", "layer", "(", "feat0", ",", "feat0", ",", "mask0", ",", "mask0", ")", "\n", "feat1", "=", "layer", "(", "feat1", ",", "feat1", ",", "mask1", ",", "mask1", ")", "\n", "", "elif", "name", "==", "\"cross\"", ":", "\n", "                ", "feat0", "=", "layer", "(", "feat0", ",", "feat1", ",", "mask0", ",", "mask1", ")", "\n", "feat1", "=", "layer", "(", "feat1", ",", "feat0", ",", "mask1", ",", "mask0", ")", "\n", "", "else", ":", "\n", "                ", "raise", "KeyError", "\n", "\n", "", "", "return", "feat0", ",", "feat1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__": [[11, 31], ["megengine.Module.__init__", "megengine.zeros", "megengine.zeros", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.expand_dims", "megengine.exp", "megengine.exp", "megengine.expand_dims", "megengine.expand_dims", "megengine.sin", "megengine.sin", "megengine.cos", "megengine.cos", "megengine.sin", "megengine.sin", "megengine.cos", "megengine.cos", "megengine.expand_dims", "megengine.expand_dims", "megengine.cumsum", "megengine.cumsum", "megengine.cumsum", "megengine.cumsum", "megengine.ones", "megengine.ones", "megengine.ones", "megengine.ones", "megengine.arange", "megengine.arange", "math.log"], "methods", ["home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.__init__"], ["def", "__init__", "(", "self", ",", "d_model", ",", "max_shape", "=", "(", "256", ",", "256", ")", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            max_shape (tuple): for 1/8 featmap, the max length of 256 corresponds to 2048 pixels\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "pe", "=", "F", ".", "zeros", "(", "(", "d_model", ",", "*", "max_shape", ")", ")", "\n", "y_position", "=", "F", ".", "expand_dims", "(", "F", ".", "cumsum", "(", "F", ".", "ones", "(", "max_shape", ")", ",", "0", ")", ",", "0", ")", "\n", "x_position", "=", "F", ".", "expand_dims", "(", "F", ".", "cumsum", "(", "F", ".", "ones", "(", "max_shape", ")", ",", "1", ")", ",", "0", ")", "\n", "div_term", "=", "F", ".", "exp", "(", "\n", "F", ".", "arange", "(", "0", ",", "d_model", "//", "2", ",", "2", ")", "*", "(", "-", "math", ".", "log", "(", "10000.0", ")", "/", "d_model", "//", "2", ")", "\n", ")", "\n", "div_term", "=", "F", ".", "expand_dims", "(", "div_term", ",", "(", "1", ",", "2", ")", ")", "# [C//4, 1, 1]", "\n", "pe", "[", "0", ":", ":", "4", ",", ":", ",", ":", "]", "=", "F", ".", "sin", "(", "x_position", "*", "div_term", ")", "\n", "pe", "[", "1", ":", ":", "4", ",", ":", ",", ":", "]", "=", "F", ".", "cos", "(", "x_position", "*", "div_term", ")", "\n", "pe", "[", "2", ":", ":", "4", ",", ":", ",", ":", "]", "=", "F", ".", "sin", "(", "y_position", "*", "div_term", ")", "\n", "pe", "[", "3", ":", ":", "4", ",", ":", ",", ":", "]", "=", "F", ".", "cos", "(", "y_position", "*", "div_term", ")", "\n", "\n", "self", ".", "pe", "=", "F", ".", "expand_dims", "(", "pe", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-research_crestereo.attention.position_encoding.PositionEncodingSine.forward": [[32, 38], ["position_encoding.PositionEncodingSine.pe[].to"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x: [N, C, H, W]\n        \"\"\"", "\n", "return", "x", "+", "self", ".", "pe", "[", ":", ",", ":", ",", ":", "x", ".", "shape", "[", "2", "]", ",", ":", "x", ".", "shape", "[", "3", "]", "]", ".", "to", "(", "x", ".", "device", ")", "\n", "", "", ""]]}