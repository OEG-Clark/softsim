{"home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.file_initialize.__init__": [[349, 353], ["super().__init__", "FireCommander.file_initialize.init_ui"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "scenario_num", ")", ":", "\n", "        ", "super", "(", "file_initialize", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scenario_num", "=", "scenario_num", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.file_initialize.init_ui": [[354, 365], ["range", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "str", "str", "str", "str"], "methods", ["None"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "global", "username", "\n", "for", "i", "in", "range", "(", "self", ".", "scenario_num", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "i", "+", "1", ")", "+", "\"/\"", "+", "username", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "i", "+", "1", ")", "+", "\"/\"", "+", "username", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "i", "+", "1", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images'", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "i", "+", "1", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images'", ")", "\n", "", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'Dependencies/Open_World_Data/'", "+", "username", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "'Dependencies/Open_World_Data/'", "+", "username", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images'", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.welcome.__init__": [[368, 371], ["QMainWindow.__init__", "FireCommander.welcome.init_ui"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "welcome", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.welcome.init_ui": [[372, 412], ["QFont", "QFont.setPointSize", "FireCommander.welcome.resize", "QPalette", "QPalette.setBrush", "FireCommander.welcome.setPalette", "FireCommander.welcome.setWindowTitle", "QPushButton", "FireCommander.welcome.open_world_mode.setGeometry", "FireCommander.welcome.open_world_mode.setStyleSheet", "FireCommander.welcome.open_world_mode.setFont", "FireCommander.welcome.open_world_mode.setText", "FireCommander.welcome.open_world_mode.clicked.connect", "QPushButton", "FireCommander.welcome.version.setGeometry", "FireCommander.welcome.version.setStyleSheet", "FireCommander.welcome.version.setFont", "FireCommander.welcome.version.setText", "FireCommander.welcome.version.clicked.connect", "QPushButton", "FireCommander.welcome.tutorial.setGeometry", "FireCommander.welcome.tutorial.setStyleSheet", "FireCommander.welcome.tutorial.setFont", "FireCommander.welcome.tutorial.setText", "FireCommander.welcome.tutorial.clicked.connect", "QPushButton", "FireCommander.welcome.scenario_mode.setGeometry", "FireCommander.welcome.scenario_mode.setStyleSheet", "FireCommander.welcome.scenario_mode.setFont", "FireCommander.welcome.scenario_mode.setText", "FireCommander.welcome.scenario_mode.clicked.connect", "QBrush", "QPixmap"], "methods", ["None"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "global", "simulated_flag", "\n", "simulated_flag", "=", "0", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "28", ")", "\n", "\n", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background_Screen1.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Welcome'", ")", "\n", "\n", "self", ".", "open_world_mode", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "open_world_mode", ".", "setGeometry", "(", "250", ",", "650", ",", "300", ",", "150", ")", "\n", "self", ".", "open_world_mode", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_150.png)}\"", ")", "\n", "self", ".", "open_world_mode", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "open_world_mode", ".", "setText", "(", "\"Open-world \\n Mode\"", ")", "\n", "self", ".", "open_world_mode", ".", "clicked", ".", "connect", "(", "self", ".", "open_world_mode_function", ")", "\n", "\n", "self", ".", "version", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "version", ".", "setGeometry", "(", "650", ",", "650", ",", "300", ",", "75", ")", "\n", "self", ".", "version", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "version", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "version", ".", "setText", "(", "\"Version 1.1\"", ")", "\n", "self", ".", "version", ".", "clicked", ".", "connect", "(", "self", ".", "version_function", ")", "\n", "\n", "self", ".", "tutorial", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "tutorial", ".", "setGeometry", "(", "650", ",", "750", ",", "300", ",", "75", ")", "\n", "self", ".", "tutorial", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "tutorial", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "tutorial", ".", "setText", "(", "\"TUTORIAL\"", ")", "\n", "self", ".", "tutorial", ".", "clicked", ".", "connect", "(", "self", ".", "tutorial_function", ")", "\n", "\n", "self", ".", "scenario_mode", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "scenario_mode", ".", "setGeometry", "(", "1050", ",", "650", ",", "300", ",", "150", ")", "\n", "self", ".", "scenario_mode", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_150.png)}\"", ")", "\n", "self", ".", "scenario_mode", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "scenario_mode", ".", "setText", "(", "\"Scenario Mode\"", ")", "\n", "self", ".", "scenario_mode", ".", "clicked", ".", "connect", "(", "self", ".", "scenario_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.welcome.open_world_mode_function": [[413, 417], ["FireCommander.welcome.hide", "FireCommander.open_world_mode", "FireCommander.welcome.screen.show"], "methods", ["None"], ["", "def", "open_world_mode_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "open_world_mode", "(", "[", "1200", ",", "180", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.welcome.scenario_function": [[418, 422], ["FireCommander.welcome.hide", "FireCommander.scenario_mode", "FireCommander.welcome.screen.show"], "methods", ["None"], ["", "def", "scenario_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "scenario_mode", "(", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.welcome.tutorial_function": [[423, 427], ["FireCommander.welcome.hide", "FireCommander.tutorial", "FireCommander.welcome.screen.show"], "methods", ["None"], ["", "def", "tutorial_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "tutorial", "(", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "-", "1", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.welcome.version_function": [[428, 430], ["FireCommander.welcome.show"], "methods", ["None"], ["", "def", "version_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "show", "(", ")", "\n", "# Load the scenario parameters", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.scenario_mode.__init__": [[435, 442], ["QWidget.__init__", "FireCommander.scenario_mode.init_ui"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "scenario_mode", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_scenarios", "=", "24", "\n", "self", ".", "row", "=", "0", "\n", "self", ".", "col", "=", "0", "\n", "self", ".", "idx_selected", "=", "-", "1", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.scenario_mode.init_ui": [[443, 498], ["FireCommander.scenario_mode.resize", "QPalette", "QPalette.setBrush", "FireCommander.scenario_mode.setPalette", "FireCommander.scenario_mode.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QLabel", "FireCommander.scenario_mode.setting_init.setGeometry", "FireCommander.scenario_mode.setting_init.setFont", "FireCommander.scenario_mode.setting_init.setObjectName", "FireCommander.scenario_mode.setting_init.setText", "QLabel", "FireCommander.scenario_mode.setting_init.setGeometry", "FireCommander.scenario_mode.setting_init.setFont", "FireCommander.scenario_mode.setting_init.setObjectName", "FireCommander.scenario_mode.setting_init.setText", "QLabel", "FireCommander.scenario_mode.setting_init.setGeometry", "FireCommander.scenario_mode.setting_init.setFont", "FireCommander.scenario_mode.setting_init.setObjectName", "FireCommander.scenario_mode.setting_init.setText", "QPushButton", "FireCommander.scenario_mode.back.setGeometry", "FireCommander.scenario_mode.back.setFont", "FireCommander.scenario_mode.back.setText", "FireCommander.scenario_mode.back.setStyleSheet", "FireCommander.scenario_mode.back.clicked.connect", "QPushButton", "FireCommander.scenario_mode.practice.setGeometry", "FireCommander.scenario_mode.practice.setFont", "FireCommander.scenario_mode.practice.setText", "FireCommander.scenario_mode.practice.setStyleSheet", "FireCommander.scenario_mode.practice.clicked.connect", "range", "QBrush", "QPushButton", "FireCommander.scenario_mode.scenario_button.setGeometry", "FireCommander.scenario_mode.scenario_button.setStyleSheet", "FireCommander.scenario_mode.scenario_button.setFont", "FireCommander.scenario_mode.scenario_button.setObjectName", "FireCommander.scenario_mode.scenario_button.clicked.connect", "FireCommander.scenario_mode.scenario_button.setText", "QPixmap", "str", "FireCommander.scenario_mode.scenario_button_function", "str", "FireCommander.scenario_mode.sender().text", "FireCommander.scenario_mode.sender"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.scenario_mode.scenario_button_function"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Scenario Mode'", ")", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "28", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "26", ")", "\n", "\n", "self", ".", "setting_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "setting_init", ".", "setGeometry", "(", "140", ",", "110", ",", "300", ",", "40", ")", "\n", "self", ".", "setting_init", ".", "setFont", "(", "font", ")", "\n", "self", ".", "setting_init", ".", "setObjectName", "(", "\"Easy\"", ")", "\n", "self", ".", "setting_init", ".", "setText", "(", "\"Easy Scenarios\"", ")", "\n", "\n", "self", ".", "setting_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "setting_init", ".", "setGeometry", "(", "645", ",", "110", ",", "330", ",", "40", ")", "\n", "self", ".", "setting_init", ".", "setFont", "(", "font", ")", "\n", "self", ".", "setting_init", ".", "setObjectName", "(", "\"Moderate\"", ")", "\n", "self", ".", "setting_init", ".", "setText", "(", "\"Moderate Scenarios\"", ")", "\n", "\n", "self", ".", "setting_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "setting_init", ".", "setGeometry", "(", "1225", ",", "110", ",", "300", ",", "40", ")", "\n", "self", ".", "setting_init", ".", "setFont", "(", "font", ")", "\n", "self", ".", "setting_init", ".", "setObjectName", "(", "\"Hard\"", ")", "\n", "self", ".", "setting_init", ".", "setText", "(", "\"Hard Scenarios\"", ")", "\n", "\n", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "350", ",", "810", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "practice", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "practice", ".", "setGeometry", "(", "950", ",", "810", ",", "300", ",", "75", ")", "\n", "self", ".", "practice", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "practice", ".", "setText", "(", "'Practice'", ")", "\n", "self", ".", "practice", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "practice", ".", "clicked", ".", "connect", "(", "self", ".", "practice_mode", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "num_scenarios", ")", ":", "\n", "            ", "self", ".", "col", "=", "i", "%", "6", "\n", "self", ".", "row", "=", "i", "//", "6", "\n", "self", ".", "scenario_button", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "scenario_button", ".", "setGeometry", "(", "120", "+", "self", ".", "row", "*", "360", ",", "180", "+", "self", ".", "col", "*", "100", ",", "300", ",", "75", ")", "\n", "self", ".", "scenario_button", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "scenario_button", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "scenario_button", ".", "setObjectName", "(", "\"Scenario_\"", "+", "str", "(", "i", "+", "1", ")", ")", "\n", "self", ".", "scenario_button", ".", "clicked", ".", "connect", "(", "lambda", ":", "self", ".", "scenario_button_function", "(", "self", ".", "sender", "(", ")", ".", "text", "(", ")", ")", ")", "\n", "self", ".", "scenario_button", ".", "setText", "(", "\"Scenario #\"", "+", "str", "(", "i", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.scenario_mode.paintEvent": [[499, 514], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPen", "QBrush", "QPen", "QBrush", "QColor", "QColor", "QColor", "QColor"], "methods", ["None"], ["", "", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter", "=", "QPainter", "(", "self", ")", "\n", "painter", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "210", ",", "255", ",", "210", ")", ")", ")", "\n", "painter", ".", "drawRect", "(", "100", ",", "90", ",", "340", ",", "700", ")", "\n", "\n", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "178", ",", "222", ",", "252", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "460", ",", "90", ",", "700", ",", "700", ")", "\n", "\n", "painter3", "=", "QPainter", "(", "self", ")", "\n", "painter3", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter3", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "210", ",", "210", ")", ")", ")", "\n", "painter3", ".", "drawRect", "(", "1180", ",", "90", ",", "340", ",", "700", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.scenario_mode.scenario_button_function": [[515, 523], ["FireCommander.scenario_mode.hide", "FireCommander.tutorial", "FireCommander.scenario_mode.screen.show", "len", "int", "int"], "methods", ["None"], ["", "def", "scenario_button_function", "(", "self", ",", "text", ")", ":", "\n", "        ", "if", "len", "(", "text", ")", "==", "11", ":", "\n", "            ", "i", "=", "int", "(", "text", "[", "10", "]", ")", "-", "1", "\n", "", "else", ":", "\n", "            ", "i", "=", "int", "(", "text", "[", "10", "]", "+", "text", "[", "11", "]", ")", "-", "1", "\n", "", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "tutorial", "(", "scenario", ".", "scenario_para", "[", "i", "]", "[", "0", "]", ",", "scenario", ".", "scenario_para", "[", "i", "]", "[", "1", "]", ",", "scenario", ".", "scenario_para", "[", "i", "]", "[", "2", "]", ",", "scenario", ".", "scenario_para", "[", "i", "]", "[", "3", "]", ",", "i", "+", "1", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.scenario_mode.practice_mode": [[524, 528], ["FireCommander.scenario_mode.hide", "FireCommander.tutorial", "FireCommander.scenario_mode.screen.show"], "methods", ["None"], ["", "def", "practice_mode", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "tutorial", "(", "scenario", ".", "scenario_para", "[", "24", "]", "[", "0", "]", ",", "scenario", ".", "scenario_para", "[", "24", "]", "[", "1", "]", ",", "scenario", ".", "scenario_para", "[", "24", "]", "[", "2", "]", ",", "scenario", ".", "scenario_para", "[", "24", "]", "[", "3", "]", ",", "-", "1", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.scenario_mode.back_function": [[529, 533], ["FireCommander.scenario_mode.hide", "FireCommander.welcome", "FireCommander.scenario_mode.screen.show"], "methods", ["None"], ["", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "welcome", "(", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.tutorial.__init__": [[536, 544], ["QWidget.__init__", "FireCommander.tutorial.init_ui"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_loci", ",", "adv_setting_list", ",", "scenario_idx", ")", ":", "\n", "        ", "super", "(", "tutorial", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_loci", "=", "set_loci", "\n", "self", ".", "adv_setting_list", "=", "adv_setting_list", "\n", "self", ".", "scenario_idx", "=", "scenario_idx", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.tutorial.init_ui": [[545, 579], ["FireCommander.tutorial.resize", "QPalette", "QPalette.setBrush", "FireCommander.tutorial.setPalette", "FireCommander.tutorial.setWindowTitle", "QFont", "QFont.setPointSize", "QLabel", "QLabel.setPixmap", "QLabel.setGeometry", "QLabel", "QLabel.setGeometry", "QPushButton", "FireCommander.tutorial.menu.setGeometry", "FireCommander.tutorial.menu.setStyleSheet", "FireCommander.tutorial.menu.setFont", "FireCommander.tutorial.menu.setText", "FireCommander.tutorial.menu.clicked.connect", "QPushButton", "FireCommander.tutorial.start.setGeometry", "FireCommander.tutorial.start.setStyleSheet", "FireCommander.tutorial.start.setFont", "FireCommander.tutorial.start.setText", "FireCommander.tutorial.start.clicked.connect", "QBrush", "QPixmap", "QLabel.setPixmap", "QLabel.setPixmap", "QPixmap", "QPixmap", "QPixmap"], "methods", ["None"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Tutorial'", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "28", ")", "\n", "\n", "tutorial1", "=", "QLabel", "(", "self", ")", "\n", "tutorial1", ".", "setPixmap", "(", "QPixmap", "(", "'./Dependencies/Images/Tutorial1_3.png'", ")", ")", "\n", "tutorial1", ".", "setGeometry", "(", "60", ",", "70", ",", "1000", ",", "800", ")", "\n", "\n", "tutorial2", "=", "QLabel", "(", "self", ")", "\n", "tutorial2", ".", "setGeometry", "(", "1065", ",", "50", ",", "500", ",", "744", ")", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "tutorial2", ".", "setPixmap", "(", "QPixmap", "(", "'./Dependencies/Images/Tutorial2.png'", ")", ")", "\n", "", "else", ":", "\n", "            ", "tutorial2", ".", "setPixmap", "(", "QPixmap", "(", "'./Dependencies/Images/Tutorial2_2.png'", ")", ")", "\n", "\n", "", "self", ".", "menu", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "menu", ".", "setGeometry", "(", "1075", ",", "795", ",", "200", ",", "100", ")", "\n", "self", ".", "menu", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_200_100.png)}\"", ")", "\n", "self", ".", "menu", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "menu", ".", "setText", "(", "'Menu'", ")", "\n", "self", ".", "menu", ".", "clicked", ".", "connect", "(", "self", ".", "menu_function", ")", "\n", "\n", "self", ".", "start", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "start", ".", "setGeometry", "(", "1325", ",", "795", ",", "200", ",", "100", ")", "\n", "self", ".", "start", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_200_100.png)}\"", ")", "\n", "self", ".", "start", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "start", ".", "setText", "(", "'Start'", ")", "\n", "self", ".", "start", ".", "clicked", ".", "connect", "(", "self", ".", "start_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.tutorial.menu_function": [[580, 584], ["FireCommander.tutorial.hide", "FireCommander.welcome", "FireCommander.tutorial.screen.show"], "methods", ["None"], ["", "def", "menu_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "welcome", "(", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.tutorial.start_function": [[585, 602], ["QMessageBox.warning", "FireCommander.tutorial.hide", "FireCommander.environment_ctl", "len", "len", "len", "len", "FireCommander.tutorial.hide", "FireCommander.scenario_mode", "FireCommander.tutorial.screen.show", "FireCommander.tutorial.hide", "FireCommander.game_over", "FireCommander.tutorial.screen.show"], "methods", ["None"], ["", "def", "start_function", "(", "self", ")", ":", "\n", "        ", "global", "simulated_flag", "\n", "if", "(", "len", "(", "self", ".", "environment_para", ")", "==", "0", ")", "or", "(", "len", "(", "self", ".", "robo_team_para", ")", "==", "0", ")", "or", "(", "len", "(", "self", ".", "set_loci", ")", "==", "0", ")", "or", "(", "len", "(", "self", ".", "adv_setting_list", ")", "==", "0", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Please finish the environment setting or select a default one first'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "environment_ctl", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ",", "self", ".", "scenario_idx", ")", "\n", "if", "self", ".", "scenario_idx", "==", "-", "1", ":", "\n", "                ", "simulated_flag", "=", "0", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "scenario_mode", "(", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "", "else", ":", "\n", "                ", "if", "simulated_flag", "==", "1", ":", "\n", "                    ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "game_over", "(", "self", ".", "scenario_idx", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.__init__": [[605, 610], ["QWidget.__init__", "FireCommander.open_world_mode.init_ui"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ")", ":", "\n", "        ", "super", "(", "open_world_mode", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.init_ui": [[611, 917], ["FireCommander.open_world_mode.resize", "QPalette", "QPalette.setBrush", "FireCommander.open_world_mode.setPalette", "FireCommander.open_world_mode.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont", "QLabel", "FireCommander.open_world_mode.environment_setup.setGeometry", "FireCommander.open_world_mode.environment_setup.setFont", "FireCommander.open_world_mode.environment_setup.setObjectName", "FireCommander.open_world_mode.environment_setup.setText", "QLabel", "FireCommander.open_world_mode.world_size_index.setGeometry", "FireCommander.open_world_mode.world_size_index.setFont", "FireCommander.open_world_mode.world_size_index.setObjectName", "FireCommander.open_world_mode.world_size_index.setText", "QLabel", "FireCommander.open_world_mode.world_size.setGeometry", "FireCommander.open_world_mode.world_size.setFont", "FireCommander.open_world_mode.world_size.setObjectName", "FireCommander.open_world_mode.world_size.setText", "QRadioButton", "FireCommander.open_world_mode.world_size_800.setGeometry", "FireCommander.open_world_mode.world_size_800.setFont", "FireCommander.open_world_mode.world_size_800.setObjectName", "QRadioButton", "FireCommander.open_world_mode.world_size_1000.setGeometry", "FireCommander.open_world_mode.world_size_1000.setFont", "FireCommander.open_world_mode.world_size_1000.setObjectName", "QRadioButton", "FireCommander.open_world_mode.world_size_1200.setGeometry", "FireCommander.open_world_mode.world_size_1200.setFont", "FireCommander.open_world_mode.world_size_1200.setObjectName", "QButtonGroup", "FireCommander.open_world_mode.world_size_group.addButton", "FireCommander.open_world_mode.world_size_group.addButton", "FireCommander.open_world_mode.world_size_group.addButton", "FireCommander.open_world_mode.world_size_group.buttonClicked.connect", "QLabel", "FireCommander.open_world_mode.duration_index.setGeometry", "FireCommander.open_world_mode.duration_index.setFont", "FireCommander.open_world_mode.duration_index.setObjectName", "FireCommander.open_world_mode.duration_index.setText", "QLabel", "FireCommander.open_world_mode.duration.setGeometry", "FireCommander.open_world_mode.duration.setFont", "FireCommander.open_world_mode.duration.setObjectName", "FireCommander.open_world_mode.duration.setText", "QRadioButton", "FireCommander.open_world_mode.duration_60.setGeometry", "FireCommander.open_world_mode.duration_60.setFont", "FireCommander.open_world_mode.duration_60.setObjectName", "QRadioButton", "FireCommander.open_world_mode.duration_120.setGeometry", "FireCommander.open_world_mode.duration_120.setFont", "FireCommander.open_world_mode.duration_120.setObjectName", "QRadioButton", "FireCommander.open_world_mode.duration_180.setGeometry", "FireCommander.open_world_mode.duration_180.setFont", "FireCommander.open_world_mode.duration_180.setObjectName", "QButtonGroup", "FireCommander.open_world_mode.duration_group.addButton", "FireCommander.open_world_mode.duration_group.addButton", "FireCommander.open_world_mode.duration_group.addButton", "FireCommander.open_world_mode.duration_group.buttonClicked.connect", "FireCommander.parameter_Input_Ctl", "FireCommander.open_world_mode.num_fire_area_Edit.textChanged.connect", "FireCommander.open_world_mode.num_fire_area_Edit.setValidator", "FireCommander.open_world_mode.num_fire_area_Edit.setText", "FireCommander.parameter_Input_Ctl", "FireCommander.open_world_mode.num_houses_Edit.textChanged.connect", "FireCommander.open_world_mode.num_houses_Edit.setValidator", "FireCommander.open_world_mode.num_houses_Edit.setText", "FireCommander.parameter_Input_Ctl", "FireCommander.open_world_mode.num_hospitals_Edit.textChanged.connect", "FireCommander.open_world_mode.num_hospitals_Edit.setValidator", "FireCommander.open_world_mode.num_hospitals_Edit.setText", "FireCommander.parameter_Input_Ctl", "FireCommander.open_world_mode.num_Power_Station_Edit.textChanged.connect", "FireCommander.open_world_mode.num_Power_Station_Edit.setValidator", "FireCommander.open_world_mode.num_Power_Station_Edit.setText", "FireCommander.parameter_Input_Ctl", "FireCommander.open_world_mode.num_Lakes_Edit.textChanged.connect", "FireCommander.open_world_mode.num_Lakes_Edit.setValidator", "FireCommander.open_world_mode.num_Lakes_Edit.setText", "QLabel", "FireCommander.open_world_mode.environment_setup.setGeometry", "FireCommander.open_world_mode.environment_setup.setFont", "FireCommander.open_world_mode.environment_setup.setObjectName", "FireCommander.open_world_mode.environment_setup.setText", "FireCommander.parameter_Input_Ctl", "FireCommander.open_world_mode.num_Perception_Agent_Edit.textChanged.connect", "FireCommander.open_world_mode.num_Perception_Agent_Edit.setValidator", "FireCommander.open_world_mode.num_Perception_Agent_Edit.setText", "FireCommander.parameter_Input_Ctl", "FireCommander.open_world_mode.num_Action_Agent_Edit.textChanged.connect", "FireCommander.open_world_mode.num_Action_Agent_Edit.setValidator", "FireCommander.open_world_mode.num_Action_Agent_Edit.setText", "FireCommander.parameter_Input_Ctl", "FireCommander.open_world_mode.num_Hybrid_Agent_Edit.textChanged.connect", "FireCommander.open_world_mode.num_Hybrid_Agent_Edit.setValidator", "FireCommander.open_world_mode.num_Hybrid_Agent_Edit.setText", "QLabel", "FireCommander.open_world_mode.team_mode.setGeometry", "FireCommander.open_world_mode.team_mode.setFont", "FireCommander.open_world_mode.team_mode.setObjectName", "FireCommander.open_world_mode.team_mode.setText", "QRadioButton", "FireCommander.open_world_mode.homo_team.setGeometry", "FireCommander.open_world_mode.homo_team.setFont", "FireCommander.open_world_mode.homo_team.setObjectName", "QRadioButton", "FireCommander.open_world_mode.hetero_team.setGeometry", "FireCommander.open_world_mode.hetero_team.setFont", "FireCommander.open_world_mode.hetero_team.setObjectName", "QButtonGroup", "FireCommander.open_world_mode.team_mode_group.addButton", "FireCommander.open_world_mode.team_mode_group.addButton", "FireCommander.open_world_mode.team_mode_group.buttonClicked.connect", "QPushButton", "FireCommander.open_world_mode.back.setGeometry", "FireCommander.open_world_mode.back.setFont", "FireCommander.open_world_mode.back.setText", "FireCommander.open_world_mode.back.setStyleSheet", "FireCommander.open_world_mode.back.clicked.connect", "QPushButton", "FireCommander.open_world_mode.reset.setGeometry", "FireCommander.open_world_mode.reset.setFont", "FireCommander.open_world_mode.reset.setText", "FireCommander.open_world_mode.reset.setStyleSheet", "FireCommander.open_world_mode.reset.clicked.connect", "QPushButton", "FireCommander.open_world_mode.next.setGeometry", "FireCommander.open_world_mode.next.setFont", "FireCommander.open_world_mode.next.setText", "FireCommander.open_world_mode.next.setStyleSheet", "FireCommander.open_world_mode.next.clicked.connect", "QLabel", "FireCommander.open_world_mode.instruction.setGeometry", "FireCommander.open_world_mode.instruction.setFont", "FireCommander.open_world_mode.instruction.setObjectName", "FireCommander.open_world_mode.instruction.setText", "QLabel", "FireCommander.open_world_mode.instruction1_index.setGeometry", "FireCommander.open_world_mode.instruction1_index.setFont", "FireCommander.open_world_mode.instruction1_index.setObjectName", "FireCommander.open_world_mode.instruction1_index.setText", "QLabel", "FireCommander.open_world_mode.instruction1.setGeometry", "FireCommander.open_world_mode.instruction1.setFont", "FireCommander.open_world_mode.instruction1.setObjectName", "FireCommander.open_world_mode.instruction1.setText", "QLabel", "FireCommander.open_world_mode.instruction2_index.setGeometry", "FireCommander.open_world_mode.instruction2_index.setFont", "FireCommander.open_world_mode.instruction2_index.setObjectName", "FireCommander.open_world_mode.instruction2_index.setText", "QLabel", "FireCommander.open_world_mode.instruction2.setGeometry", "FireCommander.open_world_mode.instruction2.setFont", "FireCommander.open_world_mode.instruction2.setObjectName", "FireCommander.open_world_mode.instruction2.setText", "QLabel", "FireCommander.open_world_mode.instruction3_index.setGeometry", "FireCommander.open_world_mode.instruction3_index.setFont", "FireCommander.open_world_mode.instruction3_index.setObjectName", "FireCommander.open_world_mode.instruction3_index.setText", "QLabel", "FireCommander.open_world_mode.instruction3.setGeometry", "FireCommander.open_world_mode.instruction3.setFont", "FireCommander.open_world_mode.instruction3.setObjectName", "FireCommander.open_world_mode.instruction3.setText", "QLabel", "FireCommander.open_world_mode.instruction4_index.setGeometry", "FireCommander.open_world_mode.instruction4_index.setFont", "FireCommander.open_world_mode.instruction4_index.setObjectName", "FireCommander.open_world_mode.instruction4_index.setText", "QLabel", "FireCommander.open_world_mode.instruction4.setGeometry", "FireCommander.open_world_mode.instruction4.setFont", "FireCommander.open_world_mode.instruction4.setObjectName", "FireCommander.open_world_mode.instruction4.setText", "QLabel", "FireCommander.open_world_mode.instruction5_index.setGeometry", "FireCommander.open_world_mode.instruction5_index.setFont", "FireCommander.open_world_mode.instruction5_index.setObjectName", "FireCommander.open_world_mode.instruction5_index.setText", "QLabel", "FireCommander.open_world_mode.instruction5.setGeometry", "FireCommander.open_world_mode.instruction5.setFont", "FireCommander.open_world_mode.instruction5.setObjectName", "FireCommander.open_world_mode.instruction5.setText", "QBrush", "FireCommander.open_world_mode.world_size_800.setChecked", "FireCommander.open_world_mode.world_size_1000.setChecked", "FireCommander.open_world_mode.world_size_1200.setChecked", "FireCommander.open_world_mode.duration_60.setChecked", "FireCommander.open_world_mode.duration_120.setChecked", "FireCommander.open_world_mode.duration_180.setChecked", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "str", "FireCommander.open_world_mode.homo_team.setChecked", "FireCommander.open_world_mode.hetero_team.setChecked", "FireCommander.open_world_mode.homo_team.setChecked", "FireCommander.open_world_mode.hetero_team.setChecked", "QPixmap", "FireCommander.open_world_mode.world_size_800.setChecked", "FireCommander.open_world_mode.world_size_1000.setChecked", "FireCommander.open_world_mode.world_size_1200.setChecked", "FireCommander.open_world_mode.world_size_800.setChecked", "FireCommander.open_world_mode.world_size_1000.setChecked", "FireCommander.open_world_mode.world_size_1200.setChecked", "FireCommander.open_world_mode.duration_60.setChecked", "FireCommander.open_world_mode.duration_120.setChecked", "FireCommander.open_world_mode.duration_180.setChecked", "FireCommander.open_world_mode.duration_60.setChecked", "FireCommander.open_world_mode.duration_120.setChecked", "FireCommander.open_world_mode.duration_180.setChecked", "FireCommander.open_world_mode.num_fire_area_function", "FireCommander.open_world_mode.num_houses_function", "FireCommander.open_world_mode.num_hospitals_function", "FireCommander.open_world_mode.num_Power_Station_function", "FireCommander.open_world_mode.num_Lakes_function", "FireCommander.open_world_mode.num_Perception_Agent_function", "FireCommander.open_world_mode.num_Action_Agent_function", "FireCommander.open_world_mode.num_Hybrid_Agent_function", "FireCommander.open_world_mode.num_fire_area_Edit.text", "FireCommander.open_world_mode.num_houses_Edit.text", "FireCommander.open_world_mode.num_hospitals_Edit.text", "FireCommander.open_world_mode.num_Power_Station_Edit.text", "FireCommander.open_world_mode.num_Lakes_Edit.text", "FireCommander.open_world_mode.num_Perception_Agent_Edit.text", "FireCommander.open_world_mode.num_Action_Agent_Edit.text", "FireCommander.open_world_mode.num_Hybrid_Agent_Edit.text"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Input_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Input_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Input_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Input_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Input_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Input_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Input_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Input_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_fire_area_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_houses_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_hospitals_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_Power_Station_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_Lakes_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_Perception_Agent_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_Action_Agent_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_Hybrid_Agent_function"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Open World Mode'", ")", "\n", "\n", "self", ".", "left_upper_x", "=", "120", "\n", "self", ".", "left_upper_y", "=", "100", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "300", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font2", "=", "QFont", "(", "'arial'", ")", "\n", "font2", ".", "setPointSize", "(", "18", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_button_small", "=", "QFont", "(", "'arial'", ")", "\n", "font_button_small", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "font_Bold", "=", "QFont", "(", "'arial'", ",", "18", ",", "75", ")", "\n", "\n", "self", ".", "environment_setup", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "environment_setup", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "environment_setup", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "environment_setup", ".", "setObjectName", "(", "\"environment_setup\"", ")", "\n", "self", ".", "environment_setup", ".", "setText", "(", "\"Environment Setup:\"", ")", "\n", "\n", "self", ".", "world_size_index", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "world_size_index", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "self", ".", "left_y_interval", ",", "20", ",", "30", ")", "\n", "self", ".", "world_size_index", ".", "setFont", "(", "font", ")", "\n", "self", ".", "world_size_index", ".", "setObjectName", "(", "'world_size_index'", ")", "\n", "self", ".", "world_size_index", ".", "setText", "(", "'1. '", ")", "\n", "\n", "self", ".", "world_size", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "world_size", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "20", ",", "self", ".", "left_upper_y", "+", "self", ".", "left_y_interval", ",", "100", ",", "30", ")", "\n", "self", ".", "world_size", ".", "setFont", "(", "font", ")", "\n", "self", ".", "world_size", ".", "setObjectName", "(", "'World Size'", ")", "\n", "self", ".", "world_size", ".", "setText", "(", "'World Size: '", ")", "\n", "\n", "self", ".", "world_size_800", "=", "QRadioButton", "(", "'800'", ",", "self", ")", "\n", "self", ".", "world_size_800", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "140", ",", "self", ".", "left_upper_y", "+", "self", ".", "left_y_interval", ",", "70", ",", "30", ")", "\n", "self", ".", "world_size_800", ".", "setFont", "(", "font", ")", "\n", "self", ".", "world_size_800", ".", "setObjectName", "(", "\"World_Size_800\"", ")", "\n", "\n", "self", ".", "world_size_1000", "=", "QRadioButton", "(", "'1000'", ",", "self", ")", "\n", "self", ".", "world_size_1000", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "230", ",", "self", ".", "left_upper_y", "+", "self", ".", "left_y_interval", ",", "70", ",", "30", ")", "\n", "self", ".", "world_size_1000", ".", "setFont", "(", "font", ")", "\n", "self", ".", "world_size_1000", ".", "setObjectName", "(", "\"World_Size_1000\"", ")", "\n", "\n", "self", ".", "world_size_1200", "=", "QRadioButton", "(", "'1200'", ",", "self", ")", "\n", "self", ".", "world_size_1200", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "320", ",", "self", ".", "left_upper_y", "+", "self", ".", "left_y_interval", ",", "70", ",", "30", ")", "\n", "self", ".", "world_size_1200", ".", "setFont", "(", "font", ")", "\n", "self", ".", "world_size_1200", ".", "setObjectName", "(", "\"World_Size_1200\"", ")", "\n", "\n", "self", ".", "world_size_group", "=", "QButtonGroup", "(", "self", ")", "\n", "self", ".", "world_size_group", ".", "addButton", "(", "self", ".", "world_size_800", ",", "11", ")", "\n", "self", ".", "world_size_group", ".", "addButton", "(", "self", ".", "world_size_1000", ",", "12", ")", "\n", "self", ".", "world_size_group", ".", "addButton", "(", "self", ".", "world_size_1200", ",", "13", ")", "\n", "self", ".", "world_size_group", ".", "buttonClicked", ".", "connect", "(", "self", ".", "world_size_group_clicked", ")", "\n", "\n", "if", "self", ".", "environment_para", "[", "0", "]", "==", "1200", ":", "\n", "            ", "self", ".", "world_size_800", ".", "setChecked", "(", "False", ")", "\n", "self", ".", "world_size_1000", ".", "setChecked", "(", "False", ")", "\n", "self", ".", "world_size_1200", ".", "setChecked", "(", "True", ")", "\n", "", "elif", "self", ".", "environment_para", "[", "0", "]", "==", "1000", ":", "\n", "            ", "self", ".", "world_size_800", ".", "setChecked", "(", "False", ")", "\n", "self", ".", "world_size_1000", ".", "setChecked", "(", "True", ")", "\n", "self", ".", "world_size_1200", ".", "setChecked", "(", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "world_size_800", ".", "setChecked", "(", "True", ")", "\n", "self", ".", "world_size_1000", ".", "setChecked", "(", "False", ")", "\n", "self", ".", "world_size_1200", ".", "setChecked", "(", "False", ")", "\n", "\n", "", "self", ".", "duration_index", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "duration_index", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "2", "*", "self", ".", "left_y_interval", ",", "20", ",", "30", ")", "\n", "self", ".", "duration_index", ".", "setFont", "(", "font", ")", "\n", "self", ".", "duration_index", ".", "setObjectName", "(", "'duration_index'", ")", "\n", "self", ".", "duration_index", ".", "setText", "(", "'2. '", ")", "\n", "\n", "self", ".", "duration", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "duration", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "20", ",", "self", ".", "left_upper_y", "+", "2", "*", "self", ".", "left_y_interval", ",", "100", ",", "30", ")", "\n", "self", ".", "duration", ".", "setFont", "(", "font", ")", "\n", "self", ".", "duration", ".", "setObjectName", "(", "'Duration'", ")", "\n", "self", ".", "duration", ".", "setText", "(", "'Duration: '", ")", "\n", "\n", "self", ".", "duration_60", "=", "QRadioButton", "(", "'60'", ",", "self", ")", "\n", "self", ".", "duration_60", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "140", ",", "self", ".", "left_upper_y", "+", "2", "*", "self", ".", "left_y_interval", ",", "70", ",", "30", ")", "\n", "self", ".", "duration_60", ".", "setFont", "(", "font", ")", "\n", "self", ".", "duration_60", ".", "setObjectName", "(", "\"Duration_60\"", ")", "\n", "\n", "self", ".", "duration_120", "=", "QRadioButton", "(", "'120'", ",", "self", ")", "\n", "self", ".", "duration_120", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "230", ",", "self", ".", "left_upper_y", "+", "2", "*", "self", ".", "left_y_interval", ",", "70", ",", "30", ")", "\n", "self", ".", "duration_120", ".", "setFont", "(", "font", ")", "\n", "self", ".", "duration_120", ".", "setObjectName", "(", "\"Duration_120\"", ")", "\n", "\n", "self", ".", "duration_180", "=", "QRadioButton", "(", "'180'", ",", "self", ")", "\n", "self", ".", "duration_180", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "320", ",", "self", ".", "left_upper_y", "+", "2", "*", "self", ".", "left_y_interval", ",", "70", ",", "30", ")", "\n", "self", ".", "duration_180", ".", "setFont", "(", "font", ")", "\n", "self", ".", "duration_180", ".", "setObjectName", "(", "\"Duration_180\"", ")", "\n", "\n", "self", ".", "duration_group", "=", "QButtonGroup", "(", "self", ")", "\n", "self", ".", "duration_group", ".", "addButton", "(", "self", ".", "duration_60", ",", "11", ")", "\n", "self", ".", "duration_group", ".", "addButton", "(", "self", ".", "duration_120", ",", "12", ")", "\n", "self", ".", "duration_group", ".", "addButton", "(", "self", ".", "duration_180", ",", "13", ")", "\n", "self", ".", "duration_group", ".", "buttonClicked", ".", "connect", "(", "self", ".", "duration_group_clicked", ")", "\n", "\n", "if", "self", ".", "environment_para", "[", "1", "]", "==", "180", ":", "\n", "            ", "self", ".", "duration_60", ".", "setChecked", "(", "False", ")", "\n", "self", ".", "duration_120", ".", "setChecked", "(", "False", ")", "\n", "self", ".", "duration_180", ".", "setChecked", "(", "True", ")", "\n", "", "elif", "self", ".", "environment_para", "[", "1", "]", "==", "120", ":", "\n", "            ", "self", ".", "duration_60", ".", "setChecked", "(", "False", ")", "\n", "self", ".", "duration_120", ".", "setChecked", "(", "True", ")", "\n", "self", ".", "duration_180", ".", "setChecked", "(", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "duration_60", ".", "setChecked", "(", "True", ")", "\n", "self", ".", "duration_120", ".", "setChecked", "(", "False", ")", "\n", "self", ".", "duration_180", ".", "setChecked", "(", "False", ")", "\n", "\n", "# Fire area number input controller", "\n", "", "parameter_Input_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Fire Areas:\"", ",", "\"num_fire_area\"", ")", ",", "3", ")", "\n", "self", ".", "num_fire_area_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "num_fire_area_function", "(", "(", "self", ".", "num_fire_area_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "num_fire_area_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "num_fire_area_Edit", ".", "setText", "(", "str", "(", "self", ".", "environment_para", "[", "2", "]", ")", ")", "\n", "\n", "# House number input controller", "\n", "parameter_Input_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "4", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Houses:\"", ",", "\"num_houses\"", ")", ",", "4", ")", "\n", "self", ".", "num_houses_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "num_houses_function", "(", "(", "self", ".", "num_houses_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "num_houses_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "num_houses_Edit", ".", "setText", "(", "str", "(", "self", ".", "environment_para", "[", "3", "]", ")", ")", "\n", "\n", "# Hospital number input controller", "\n", "parameter_Input_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Hospitals:\"", ",", "\"num_hospitals\"", ")", ",", "5", ")", "\n", "self", ".", "num_hospitals_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "num_hospitals_function", "(", "(", "self", ".", "num_hospitals_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "num_hospitals_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "num_hospitals_Edit", ".", "setText", "(", "str", "(", "self", ".", "environment_para", "[", "4", "]", ")", ")", "\n", "\n", "# Power station number input controller", "\n", "parameter_Input_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "6", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Power Station:\"", ",", "\"num_Power_Station\"", ")", ",", "6", ")", "\n", "self", ".", "num_Power_Station_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "num_Power_Station_function", "(", "(", "self", ".", "num_Power_Station_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "num_Power_Station_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "num_Power_Station_Edit", ".", "setText", "(", "str", "(", "self", ".", "environment_para", "[", "5", "]", ")", ")", "\n", "\n", "# Lakes number input controller", "\n", "parameter_Input_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "7", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Lakes:\"", ",", "\"num_Lakes\"", ")", ",", "7", ")", "\n", "self", ".", "num_Lakes_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "num_Lakes_function", "(", "(", "self", ".", "num_Lakes_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "num_Lakes_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "num_Lakes_Edit", ".", "setText", "(", "str", "(", "self", ".", "environment_para", "[", "6", "]", ")", ")", "\n", "\n", "self", ".", "environment_setup", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "environment_setup", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "9", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "environment_setup", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "environment_setup", ".", "setObjectName", "(", "\"robot_team_setup\"", ")", "\n", "self", ".", "environment_setup", ".", "setText", "(", "\"Robot Team Setup:\"", ")", "\n", "\n", "# Perception Agent number input controller", "\n", "parameter_Input_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "10", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Perception Agents:\"", ",", "\"num_Perception_Agent\"", ")", ",", "1", ")", "\n", "self", ".", "num_Perception_Agent_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "num_Perception_Agent_function", "(", "(", "self", ".", "num_Perception_Agent_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "num_Perception_Agent_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "num_Perception_Agent_Edit", ".", "setText", "(", "str", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", ")", "\n", "\n", "# Action agent number input controller", "\n", "parameter_Input_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "11", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Action Agents:\"", ",", "\"num_Action_Agent\"", ")", ",", "2", ")", "\n", "self", ".", "num_Action_Agent_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "num_Action_Agent_function", "(", "(", "self", ".", "num_Action_Agent_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "num_Action_Agent_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "num_Action_Agent_Edit", ".", "setText", "(", "str", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", ")", "\n", "\n", "# Hybrid agent number input controller", "\n", "parameter_Input_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "12", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Hybrid Agents:\"", ",", "\"num_Hybrid_Agent\"", ")", ",", "3", ")", "\n", "self", ".", "num_Hybrid_Agent_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "num_Hybrid_Agent_function", "(", "(", "self", ".", "num_Hybrid_Agent_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "num_Hybrid_Agent_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "num_Hybrid_Agent_Edit", ".", "setText", "(", "str", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", ")", "\n", "\n", "# Tag for homogeneous team input controller", "\n", "self", ".", "team_mode", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "team_mode", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "13", "*", "self", ".", "left_y_interval", ",", "300", ",", "30", ")", "\n", "self", ".", "team_mode", ".", "setFont", "(", "font", ")", "\n", "self", ".", "team_mode", ".", "setObjectName", "(", "\"team_mode\"", ")", "\n", "self", ".", "team_mode", ".", "setText", "(", "\"4. Team Mode:\"", ")", "\n", "\n", "self", ".", "homo_team", "=", "QRadioButton", "(", "'Homogenous: Agents have the same setting'", ",", "self", ")", "\n", "self", ".", "homo_team", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "14", "*", "self", ".", "left_y_interval", ",", "400", ",", "30", ")", "\n", "self", ".", "homo_team", ".", "setFont", "(", "font", ")", "\n", "self", ".", "homo_team", ".", "setObjectName", "(", "\"homo_team\"", ")", "\n", "\n", "self", ".", "hetero_team", "=", "QRadioButton", "(", "'Heterogenous: Agents have different settings'", ",", "self", ")", "\n", "self", ".", "hetero_team", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "15", "*", "self", ".", "left_y_interval", ",", "400", ",", "30", ")", "\n", "self", ".", "hetero_team", ".", "setFont", "(", "font", ")", "\n", "self", ".", "hetero_team", ".", "setObjectName", "(", "\"hetero_team\"", ")", "\n", "\n", "self", ".", "team_mode_group", "=", "QButtonGroup", "(", "self", ")", "\n", "self", ".", "team_mode_group", ".", "addButton", "(", "self", ".", "homo_team", ",", "11", ")", "\n", "self", ".", "team_mode_group", ".", "addButton", "(", "self", ".", "hetero_team", ",", "12", ")", "\n", "self", ".", "team_mode_group", ".", "buttonClicked", ".", "connect", "(", "self", ".", "team_mode_group_clicked", ")", "\n", "\n", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "1", ":", "\n", "            ", "self", ".", "homo_team", ".", "setChecked", "(", "False", ")", "\n", "self", ".", "hetero_team", ".", "setChecked", "(", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "homo_team", ".", "setChecked", "(", "True", ")", "\n", "self", ".", "hetero_team", ".", "setChecked", "(", "False", ")", "\n", "\n", "", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "170", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "reset", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "reset", ".", "setGeometry", "(", "700", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "reset", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "reset", ".", "setText", "(", "'Reset'", ")", "\n", "self", ".", "reset", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "reset", ".", "clicked", ".", "connect", "(", "self", ".", "reset_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1100", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n", "self", ".", "instruction", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction", ".", "setGeometry", "(", "620", ",", "120", ",", "920", ",", "40", ")", "\n", "self", ".", "instruction", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "instruction", ".", "setObjectName", "(", "\"instruction\"", ")", "\n", "self", ".", "instruction", ".", "setText", "(", "\"Instruction: \"", ")", "\n", "\n", "self", ".", "instruction1_index", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction1_index", ".", "setGeometry", "(", "620", ",", "160", ",", "40", ",", "40", ")", "\n", "self", ".", "instruction1_index", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "instruction1_index", ".", "setObjectName", "(", "'Index_1'", ")", "\n", "self", ".", "instruction1_index", ".", "setText", "(", "'  1. '", ")", "\n", "\n", "self", ".", "instruction1", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction1", ".", "setGeometry", "(", "620", ",", "160", ",", "920", ",", "70", ")", "\n", "self", ".", "instruction1", ".", "setFont", "(", "font2", ")", "\n", "self", ".", "instruction1", ".", "setObjectName", "(", "\"instruction1\"", ")", "\n", "self", ".", "instruction1", ".", "setText", "(", "\"      The environment setup and robot team setup on the left of the screen \\n \\r\"", "+", "\n", "\"define the number of each object group. All the inputs are required.\"", ")", "\n", "\n", "self", ".", "instruction2_index", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction2_index", ".", "setGeometry", "(", "620", ",", "235", ",", "40", ",", "30", ")", "\n", "self", ".", "instruction2_index", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "instruction2_index", ".", "setObjectName", "(", "'Index_2'", ")", "\n", "self", ".", "instruction2_index", ".", "setText", "(", "'  2. '", ")", "\n", "\n", "self", ".", "instruction2", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction2", ".", "setGeometry", "(", "620", ",", "240", ",", "920", ",", "105", ")", "\n", "self", ".", "instruction2", ".", "setFont", "(", "font2", ")", "\n", "self", ".", "instruction2", ".", "setObjectName", "(", "\"instruction2\"", ")", "\n", "self", ".", "instruction2", ".", "setText", "(", "\"      The set location pages specify the location of each object. Each pages \\n \\r\"", "+", "\n", "\"contains the location setting for a specific object. The user must press 'Apply'\\n \\r\"", "+", "\n", "\"first to view the approximate position then the 'Next >>' is allowed. All the \\n \\r\"", "+", "\n", "\"inputs are required.\"", ")", "\n", "\n", "self", ".", "instruction3_index", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction3_index", ".", "setGeometry", "(", "620", ",", "362", ",", "40", ",", "40", ")", "\n", "self", ".", "instruction3_index", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "instruction3_index", ".", "setObjectName", "(", "'Index_3'", ")", "\n", "self", ".", "instruction3_index", ".", "setText", "(", "'  3. '", ")", "\n", "\n", "self", ".", "instruction3", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction3", ".", "setGeometry", "(", "620", ",", "355", ",", "920", ",", "140", ")", "\n", "self", ".", "instruction3", ".", "setFont", "(", "font2", ")", "\n", "self", ".", "instruction3", ".", "setObjectName", "(", "\"instruction3\"", ")", "\n", "self", ".", "instruction3", ".", "setText", "(", "\"      The advanced setting specifies the information of the robot team. The \\n \\r\"", "+", "\n", "\"choice is specified in the robot team setup section, though the choice could \\n \\r\"", "+", "\n", "\"be changed through the button below. This section is an optional one, while \\n \\r\"", "+", "\n", "\"the default setting is the homogeneous value.\"", ")", "\n", "\n", "self", ".", "instruction4_index", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction4_index", ".", "setGeometry", "(", "620", ",", "495", ",", "40", ",", "40", ")", "\n", "self", ".", "instruction4_index", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "instruction4_index", ".", "setObjectName", "(", "'Index_4'", ")", "\n", "self", ".", "instruction4_index", ".", "setText", "(", "'  4. '", ")", "\n", "\n", "self", ".", "instruction4", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction4", ".", "setGeometry", "(", "620", ",", "495", ",", "920", ",", "70", ")", "\n", "self", ".", "instruction4", ".", "setFont", "(", "font2", ")", "\n", "self", ".", "instruction4", ".", "setObjectName", "(", "\"instruction4\"", ")", "\n", "self", ".", "instruction4", ".", "setText", "(", "\"      The homogeneous setting assumes all the robots share the same setting.\\n \\r\"", "+", "\n", "\"Only one input is required for all robots.\"", ")", "\n", "\n", "self", ".", "instruction5_index", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction5_index", ".", "setGeometry", "(", "620", ",", "574", ",", "40", ",", "40", ")", "\n", "self", ".", "instruction5_index", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "instruction5_index", ".", "setObjectName", "(", "'Index_5'", ")", "\n", "self", ".", "instruction5_index", ".", "setText", "(", "'  5. '", ")", "\n", "\n", "self", ".", "instruction5", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "instruction5", ".", "setGeometry", "(", "620", ",", "580", ",", "920", ",", "140", ")", "\n", "self", ".", "instruction5", ".", "setFont", "(", "font2", ")", "\n", "self", ".", "instruction5", ".", "setObjectName", "(", "\"instruction5\"", ")", "\n", "self", ".", "instruction5", ".", "setText", "(", "\"      The heterogenous setting assumes all the robots have different settings.\\n \\r\"", "+", "\n", "\"A specific input value is required for each robot in the teams. An error will be \\n \\r\"", "+", "\n", "\"sent if the input length does not match the robot number mention in the robot\\n \\r\"", "+", "\n", "\"setup section. If the setting is not specified, a default value will be assigned.\\n \\r\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.paintEvent": [[918, 934], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPen", "QBrush", "QPen", "QBrush", "QColor", "QColor", "QColor"], "methods", ["None"], ["", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter", "=", "QPainter", "(", "self", ")", "\n", "painter", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter", ".", "drawRect", "(", "110", ",", "90", ",", "420", ",", "340", ")", "\n", "painter", ".", "drawRect", "(", "110", ",", "450", ",", "420", ",", "300", ")", "\n", "\n", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "560", ",", "90", ",", "950", ",", "800", ")", "\n", "\n", "painter3", "=", "QPainter", "(", "self", ")", "\n", "painter3", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter3", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter3", ".", "drawRect", "(", "600", ",", "110", ",", "870", ",", "640", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.world_size_group_clicked": [[935, 942], ["FireCommander.open_world_mode.world_size_group.checkedId", "FireCommander.open_world_mode.world_size_group.checkedId"], "methods", ["None"], ["", "def", "world_size_group_clicked", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "world_size_group", ".", "checkedId", "(", ")", "==", "11", ":", "\n", "            ", "self", ".", "environment_para", "[", "0", "]", "=", "800", "\n", "", "elif", "self", ".", "world_size_group", ".", "checkedId", "(", ")", "==", "12", ":", "\n", "            ", "self", ".", "environment_para", "[", "0", "]", "=", "1000", "\n", "", "else", ":", "\n", "            ", "self", ".", "environment_para", "[", "0", "]", "=", "1200", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.duration_group_clicked": [[943, 950], ["FireCommander.open_world_mode.duration_group.checkedId", "FireCommander.open_world_mode.duration_group.checkedId"], "methods", ["None"], ["", "", "def", "duration_group_clicked", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "duration_group", ".", "checkedId", "(", ")", "==", "11", ":", "\n", "            ", "self", ".", "environment_para", "[", "1", "]", "=", "60", "\n", "", "elif", "self", ".", "duration_group", ".", "checkedId", "(", ")", "==", "12", ":", "\n", "            ", "self", ".", "environment_para", "[", "1", "]", "=", "120", "\n", "", "else", ":", "\n", "            ", "self", ".", "environment_para", "[", "1", "]", "=", "180", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_fire_area_function": [[951, 956], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "num_fire_area_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "environment_para", "[", "2", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "environment_para", "[", "2", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_houses_function": [[957, 962], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "num_houses_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "environment_para", "[", "3", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "environment_para", "[", "3", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_hospitals_function": [[963, 968], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "num_hospitals_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "environment_para", "[", "4", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "environment_para", "[", "4", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_Power_Station_function": [[969, 974], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "num_Power_Station_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "environment_para", "[", "5", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "environment_para", "[", "5", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_Lakes_function": [[975, 980], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "num_Lakes_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "environment_para", "[", "6", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "environment_para", "[", "6", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_Perception_Agent_function": [[981, 986], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "num_Perception_Agent_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "robo_team_para", "[", "0", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "robo_team_para", "[", "0", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_Action_Agent_function": [[987, 992], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "num_Action_Agent_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "robo_team_para", "[", "1", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "robo_team_para", "[", "1", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_Hybrid_Agent_function": [[993, 998], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "num_Hybrid_Agent_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "robo_team_para", "[", "2", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "robo_team_para", "[", "2", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.team_mode_group_clicked": [[999, 1004], ["FireCommander.open_world_mode.team_mode_group.checkedId"], "methods", ["None"], ["", "", "def", "team_mode_group_clicked", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "team_mode_group", ".", "checkedId", "(", ")", "==", "11", ":", "\n", "            ", "self", ".", "robo_team_para", "[", "3", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "robo_team_para", "[", "3", "]", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.back_function": [[1005, 1009], ["FireCommander.open_world_mode.hide", "FireCommander.welcome", "FireCommander.open_world_mode.screen.show"], "methods", ["None"], ["", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "welcome", "(", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.reset_function": [[1010, 1014], ["FireCommander.open_world_mode.hide", "FireCommander.open_world_mode", "FireCommander.open_world_mode.screen.show"], "methods", ["None"], ["", "def", "reset_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "open_world_mode", "(", "[", "1200", ",", "180", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_fire_determination": [[1015, 1024], ["QMessageBox.warning", "QMessageBox.warning"], "methods", ["None"], ["", "def", "num_fire_determination", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "2", "]", ">", "5", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The number of fire regions could not exceed 5'", ")", "\n", "return", "False", "\n", "", "elif", "self", ".", "environment_para", "[", "2", "]", "==", "0", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The number of fire regions could not be 0'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "            ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_house_determination": [[1025, 1031], ["QMessageBox.warning"], "methods", ["None"], ["", "", "def", "num_house_determination", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "3", "]", ">", "5", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The number of houses could not exceed 5'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "            ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_hospital_determination": [[1032, 1038], ["QMessageBox.warning"], "methods", ["None"], ["", "", "def", "num_hospital_determination", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "4", "]", ">", "5", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The number of hospitals could not exceed 5'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "            ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_power_determination": [[1039, 1045], ["QMessageBox.warning"], "methods", ["None"], ["", "", "def", "num_power_determination", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "5", "]", ">", "5", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The number of power stations could not exceed 5'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "            ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_lake_determination": [[1046, 1052], ["QMessageBox.warning"], "methods", ["None"], ["", "", "def", "num_lake_determination", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "6", "]", ">", "5", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The number of lakes could not exceed 5'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "            ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_agent_determination": [[1053, 1069], ["QMessageBox.warning", "QMessageBox.warning", "QMessageBox.warning"], "methods", ["None"], ["", "", "def", "num_agent_determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "0", "]", "==", "0", ")", "or", "(", "self", ".", "robo_team_para", "[", "1", "]", "==", "0", ")", "or", "(", "self", ".", "robo_team_para", "[", "2", "]", "==", "0", ")", ":", "\n", "            ", "if", "(", "self", ".", "robo_team_para", "[", "0", "]", "==", "0", ")", "and", "(", "self", ".", "robo_team_para", "[", "2", "]", "==", "0", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The number of the perception and hybrid agents could not be 0 at the same time'", ")", "\n", "return", "False", "\n", "", "elif", "(", "self", ".", "robo_team_para", "[", "1", "]", "==", "0", ")", "and", "(", "self", ".", "robo_team_para", "[", "2", "]", "==", "0", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The number of the action and hybrid agents could not be 0 at the same time'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "return", "True", "\n", "", "", "else", ":", "\n", "            ", "if", "(", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "+", "self", ".", "robo_team_para", "[", "2", "]", ")", ">", "9", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The total number of agents could not exceed 9'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.constraint_check": [[1070, 1080], ["FireCommander.open_world_mode.num_fire_determination", "FireCommander.open_world_mode.num_house_determination", "FireCommander.open_world_mode.num_hospital_determination", "FireCommander.open_world_mode.num_power_determination", "FireCommander.open_world_mode.num_lake_determination", "FireCommander.open_world_mode.num_agent_determination"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_fire_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_house_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_hospital_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_power_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_lake_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.num_agent_determination"], ["", "", "", "def", "constraint_check", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "num_fire_determination", "(", ")", ":", "\n", "            ", "if", "self", ".", "num_house_determination", "(", ")", ":", "\n", "                ", "if", "self", ".", "num_hospital_determination", "(", ")", ":", "\n", "                    ", "if", "self", ".", "num_power_determination", "(", ")", ":", "\n", "                        ", "if", "self", ".", "num_lake_determination", "(", ")", ":", "\n", "                            ", "if", "self", ".", "num_agent_determination", "(", ")", ":", "\n", "                                ", "default", "=", "True", "\n", "", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.next_function": [[1081, 1088], ["FireCommander.open_world_mode.constraint_check", "list", "FireCommander.open_world_mode.hide", "FireCommander.fire_location_define", "FireCommander.open_world_mode.screen.show", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.open_world_mode.constraint_check"], ["", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "constraint_check", "(", ")", ":", "\n", "            ", "applied_flag", "=", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "current_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "12", ",", "12", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "fire_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "[", "[", "]", ",", "[", "5", ",", "0", ",", "10", ",", "5", ",", "45", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "0", "]", ",", "[", "[", "]", ",", "1", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", ",", "current_grid", ",", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.__init__": [[1091, 1105], ["QWidget.__init__", "round", "list", "FireCommander.fire_location_define.init_ui", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_Loci", ",", "current_grid", ",", "applied_flag", ")", ":", "\n", "        ", "super", "(", "fire_location_define", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_Loci", "=", "set_Loci", "\n", "self", ".", "out_list", "=", "set_Loci", "[", "0", "]", "\n", "self", ".", "current_grid", "=", "current_grid", "\n", "self", ".", "grid_size", "=", "round", "(", "self", ".", "environment_para", "[", "0", "]", "//", "100", ")", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "self", ".", "global_applied_flag", "=", "applied_flag", "\n", "\n", "self", ".", "x_coord_list", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", ",", "'K'", ",", "'L'", ",", "'M'", ",", "'N'", ",", "'O'", "]", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.init_ui": [[1106, 1229], ["FireCommander.fire_location_define.resize", "QPalette", "QPalette.setBrush", "FireCommander.fire_location_define.setPalette", "FireCommander.fire_location_define.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont", "range", "FireCommander.fire_location_define.transmit_value", "QPalette", "QLabel", "FireCommander.fire_location_define.applied_display.setFont", "FireCommander.fire_location_define.applied_display.setObjectName", "QLabel", "FireCommander.fire_location_define.setting_init.setGeometry", "FireCommander.fire_location_define.setting_init.setFont", "FireCommander.fire_location_define.setting_init.setObjectName", "FireCommander.fire_location_define.setting_init.setText", "FireCommander.parameter_Display_Ctl", "QLabel", "FireCommander.fire_location_define.size_note.setGeometry", "FireCommander.fire_location_define.size_note.setFont", "FireCommander.fire_location_define.size_note.setObjectName", "FireCommander.fire_location_define.size_note.setText", "QLabel", "FireCommander.fire_location_define.fire_size.setGeometry", "FireCommander.fire_location_define.fire_size.setFont", "FireCommander.fire_location_define.fire_size.setObjectName", "FireCommander.fire_location_define.fire_size.setText", "FireCommander.fire_location_define.word_plot", "FireCommander.fire_location_define.set_initial_value_function", "FireCommander.fire_location_define.applied_display.setPalette", "QPushButton", "FireCommander.fire_location_define.reset.setGeometry", "FireCommander.fire_location_define.reset.setFont", "FireCommander.fire_location_define.reset.setText", "FireCommander.fire_location_define.reset.setStyleSheet", "FireCommander.fire_location_define.reset.clicked.connect", "QPushButton", "FireCommander.fire_location_define.apply.setGeometry", "FireCommander.fire_location_define.apply.setFont", "FireCommander.fire_location_define.apply.setText", "FireCommander.fire_location_define.apply.setStyleSheet", "FireCommander.fire_location_define.apply.clicked.connect", "QPushButton", "FireCommander.fire_location_define.back.setGeometry", "FireCommander.fire_location_define.back.setFont", "FireCommander.fire_location_define.back.setText", "FireCommander.fire_location_define.back.setStyleSheet", "FireCommander.fire_location_define.back.clicked.connect", "QPushButton", "FireCommander.fire_location_define.next.setGeometry", "FireCommander.fire_location_define.next.setFont", "FireCommander.fire_location_define.next.setText", "FireCommander.fire_location_define.next.setStyleSheet", "FireCommander.fire_location_define.next.clicked.connect", "QBrush", "FireCommander.fire_location_define.raw_list.append", "str", "QLabel", "FireCommander.fire_location_define.location_init.setGeometry", "FireCommander.fire_location_define.location_init.setFont", "FireCommander.fire_location_define.location_init.setObjectName", "FireCommander.fire_location_define.location_init.setText", "QLabel", "FireCommander.fire_location_define.location_init.setGeometry", "FireCommander.fire_location_define.location_init.setFont", "FireCommander.fire_location_define.location_init.setObjectName", "FireCommander.fire_location_define.location_init.setText", "range", "FireCommander.fire_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.fire_location_define.applied_display.setText", "FireCommander.fire_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.fire_location_define.applied_display.setText", "QPixmap", "FireCommander.environment_Setting_Ctl", "QColor", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transmit_value", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.word_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.set_initial_value_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Fire Region Location'", ")", "\n", "\n", "self", ".", "left_upper_x", "=", "120", "\n", "self", ".", "left_upper_y", "=", "100", "\n", "self", ".", "right_upper_x", "=", "640", "\n", "self", ".", "right_upper_y", "=", "120", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "400", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_grid", "=", "QFont", "(", "'arial'", ")", "\n", "font_grid", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_button_small", "=", "QFont", "(", "'arial'", ")", "\n", "font_button_small", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "font_Bold", "=", "QFont", "(", "'arial'", ",", "14", ",", "75", ")", "\n", "\n", "self", ".", "raw_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "            ", "self", ".", "raw_list", ".", "append", "(", "''", ")", "\n", "", "self", ".", "transmit_value", "(", ")", "\n", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "applied_display", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "applied_display", ".", "setObjectName", "(", "\"Applied_Display\"", ")", "\n", "\n", "self", ".", "setting_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "setting_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "setting_init", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "setting_init", ".", "setObjectName", "(", "\"Fire_Region_Setting\"", ")", "\n", "self", ".", "setting_init", ".", "setText", "(", "\"Fire Region Setting:\"", ")", "\n", "\n", "# House number input controller", "\n", "parameter_Display_Ctl", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "1.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Fire Regions:\"", ",", "\"num_fires\"", ")", ",", "str", "(", "self", ".", "environment_para", "[", "2", "]", ")", ")", "\n", "\n", "self", ".", "size_note", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "size_note", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "60", ",", "30", ")", "\n", "self", ".", "size_note", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "size_note", ".", "setObjectName", "(", "'Fire Region Size Note'", ")", "\n", "self", ".", "size_note", ".", "setText", "(", "'Note: '", ")", "\n", "\n", "self", ".", "fire_size", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "fire_size", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "60", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "380", ",", "30", ")", "\n", "self", ".", "fire_size", ".", "setFont", "(", "font", ")", "\n", "self", ".", "fire_size", ".", "setObjectName", "(", "'Fire Region Size'", ")", "\n", "self", ".", "fire_size", ".", "setText", "(", "'A 1 \u00d7 1 Grid will be Marked'", ")", "\n", "\n", "if", "self", ".", "environment_para", "[", "2", "]", "==", "0", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "\n", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"No_Fire\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"No Fire Region in this Environment\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"Fire_location\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"Fire Region Locations:\"", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "# Initialize fire center input controller", "\n", "                ", "environment_Setting_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "(", "4.5", "+", "i", ")", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Fire Region #\"", "+", "str", "(", "i", "+", "1", ")", "+", "\": \"", ",", "\"fire\"", "+", "str", "(", "i", "+", "1", ")", "+", "\"_center\"", ")", ",", "i", ")", "\n", "", "", "self", ".", "word_plot", "(", "font_grid", ")", "\n", "self", ".", "set_initial_value_function", "(", ")", "\n", "\n", "self", ".", "applied_flag", "=", "self", ".", "global_applied_flag", "[", "0", "]", "\n", "\n", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "\n", "", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n", "self", ".", "reset", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "reset", ".", "setGeometry", "(", "220", ",", "730", ",", "200", ",", "50", ")", "\n", "self", ".", "reset", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "reset", ".", "setText", "(", "'Reset'", ")", "\n", "self", ".", "reset", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "reset", ".", "clicked", ".", "connect", "(", "self", ".", "reset_function", ")", "\n", "\n", "self", ".", "apply", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "apply", ".", "setGeometry", "(", "220", ",", "800", ",", "200", ",", "50", ")", "\n", "self", ".", "apply", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "apply", ".", "setText", "(", "'Apply'", ")", "\n", "self", ".", "apply", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "apply", ".", "clicked", ".", "connect", "(", "self", ".", "apply_function", ")", "\n", "\n", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "690", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1070", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.word_plot": [[1230, 1239], ["range", "range", "QLabel", "FireCommander.fire_location_define.grid_word.setGeometry", "FireCommander.fire_location_define.grid_word.setFont", "FireCommander.fire_location_define.grid_word.setObjectName", "FireCommander.fire_location_define.grid_word.setText", "str", "str", "round", "round"], "methods", ["None"], ["", "def", "word_plot", "(", "self", ",", "font", ")", ":", "\n", "# Display the coordinate within the grid", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "self", ".", "grid_word", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "grid_word", ".", "setGeometry", "(", "1040", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "self", ".", "grid_word", ".", "setFont", "(", "font", ")", "\n", "self", ".", "grid_word", ".", "setObjectName", "(", "\"Grid_Word\"", ")", "\n", "self", ".", "grid_word", ".", "setText", "(", "self", ".", "x_coord_list", "[", "i", "]", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "//", "10", ")", ")", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "%", "10", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.paintEvent": [[1240, 1294], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "range", "QPen", "QBrush", "QPen", "QBrush", "range", "QPainter", "range", "list", "QColor", "QColor", "range", "numpy.zeros", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QColor"], "methods", ["None"], ["", "", "", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter", "=", "QPainter", "(", "self", ")", "\n", "painter", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter", ".", "drawRect", "(", "110", ",", "90", ",", "420", ",", "600", ")", "\n", "\n", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "560", ",", "90", ",", "950", ",", "800", ")", "\n", "\n", "# Paint the grid (Previous)", "\n", "paint_grid", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "0", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "0", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "2", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "225", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "3", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "165", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "4", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "255", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "5", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "65", ",", "105", ",", "225", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "6", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "0", ",", "191", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "\n", "", "", "", "if", "self", ".", "update_flag", "==", "1", ":", "\n", "            ", "paint_grid2", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                    ", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                        ", "paint_grid2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "0", ",", "0", ")", ")", ")", "\n", "paint_grid2", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "", "", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.fire_location_determination": [[1295, 1314], ["FireCommander.fire_location_define.raw_list[].split", "QMessageBox.warning", "len", "QMessageBox.warning", "QMessageBox.warning", "int", "int", "FireCommander.fire_location_define.x_coord_list.index", "int", "FireCommander.fire_location_define.overlap_check", "QMessageBox.warning", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.overlap_check"], ["", "", "def", "fire_location_determination", "(", "self", ",", "index", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "environment_para", "[", "2", "]", ">", "0", ":", "\n", "            ", "raw_coord_init", "=", "self", ".", "raw_list", "[", "index", "]", ".", "split", "(", "'-'", ")", "\n", "if", "(", "raw_coord_init", "[", "0", "]", "==", "''", ")", "or", "(", "raw_coord_init", "[", "1", "]", "==", "''", ")", "or", "(", "len", "(", "raw_coord_init", "[", "1", "]", ")", "!=", "2", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Please enter the full coordinates'", ")", "\n", "", "else", ":", "\n", "                ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "'Z'", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "'A'", ")", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should be capital letter'", ")", "\n", "", "else", ":", "\n", "                    ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "self", ".", "x_coord_list", "[", "self", ".", "grid_size", "]", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "self", ".", "x_coord_list", "[", "0", "]", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", ">", "self", ".", "grid_size", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", "<", "1", ")", ":", "\n", "                        ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should locate within the grid range (Now is '", "+", "str", "(", "self", ".", "grid_size", ")", "+", "')'", ")", "\n", "", "else", ":", "\n", "                        ", "raw_coord", "=", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord_init", "[", "0", "]", ")", ",", "int", "(", "raw_coord_init", "[", "1", "]", ")", "]", "\n", "if", "not", "self", ".", "overlap_check", "(", "raw_coord", "[", "0", "]", ",", "raw_coord", "[", "1", "]", "-", "1", ")", ":", "\n", "                            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Fire region '", "+", "str", "(", "index", "+", "1", ")", "+", "' overlaps with existing objects'", ")", "\n", "", "else", ":", "\n", "                            ", "default", "=", "True", "\n", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.array_to_string": [[1315, 1319], ["round", "str", "round", "str", "str"], "methods", ["None"], ["", "def", "array_to_string", "(", "self", ",", "list", ")", ":", "\n", "        ", "raw_list", "=", "[", "round", "(", "(", "list", "[", "0", "]", "+", "50", ")", "//", "100", ")", "-", "1", ",", "round", "(", "(", "list", "[", "1", "]", "+", "50", ")", "//", "100", ")", "]", "\n", "out_str", "=", "str", "(", "self", ".", "x_coord_list", "[", "raw_list", "[", "0", "]", "]", ")", "+", "'-'", "+", "str", "(", "raw_list", "[", "1", "]", "//", "10", ")", "+", "str", "(", "raw_list", "[", "1", "]", "%", "10", ")", "\n", "return", "out_str", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.transmit_value": [[1320, 1326], ["range", "len", "len", "FireCommander.fire_location_define.array_to_string"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string"], ["", "def", "transmit_value", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "raw_list", ")", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "out_list", ")", "==", "0", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "''", "\n", "", "else", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "self", ".", "array_to_string", "(", "self", ".", "out_list", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.set_initial_value_function": [[1327, 1338], ["FireCommander.fire_location_define.fire1_center_Edit.setText", "FireCommander.fire_location_define.fire2_center_Edit.setText", "FireCommander.fire_location_define.fire3_center_Edit.setText", "FireCommander.fire_location_define.fire4_center_Edit.setText", "FireCommander.fire_location_define.fire5_center_Edit.setText"], "methods", ["None"], ["", "", "", "def", "set_initial_value_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "2", "]", ">", "0", ":", "\n", "            ", "self", ".", "fire1_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "0", "]", ")", "\n", "if", "self", ".", "environment_para", "[", "2", "]", ">", "1", ":", "\n", "                ", "self", ".", "fire2_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "1", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "2", "]", ">", "2", ":", "\n", "                ", "self", ".", "fire3_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "2", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "2", "]", ">", "3", ":", "\n", "                ", "self", ".", "fire4_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "3", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "2", "]", ">", "4", ":", "\n", "                ", "self", ".", "fire5_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "4", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.reset_function": [[1339, 1358], ["list", "FireCommander.fire_location_define.update", "numpy.zeros", "FireCommander.fire_location_define.fire1_center_Edit.clear", "FireCommander.fire_location_define.fire2_center_Edit.clear", "FireCommander.fire_location_define.fire3_center_Edit.clear", "FireCommander.fire_location_define.fire4_center_Edit.clear", "FireCommander.fire_location_define.fire5_center_Edit.clear"], "methods", ["None"], ["", "", "", "def", "reset_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "if", "self", ".", "environment_para", "[", "2", "]", ">", "0", ":", "\n", "            ", "self", ".", "fire1_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "0", "]", "=", "''", "\n", "if", "self", ".", "environment_para", "[", "2", "]", ">", "1", ":", "\n", "                ", "self", ".", "fire2_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "1", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "2", "]", ">", "2", ":", "\n", "                ", "self", ".", "fire3_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "2", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "2", "]", ">", "3", ":", "\n", "                ", "self", ".", "fire4_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "3", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "2", "]", ">", "4", ":", "\n", "                ", "self", ".", "fire5_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "4", "]", "=", "''", "\n", "", "", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.overlap_check": [[1359, 1365], ["None"], "methods", ["None"], ["", "def", "overlap_check", "(", "self", ",", "pos_x", ",", "pos_y", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "or", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "1", ")", ":", "\n", "            ", "if", "(", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "or", "(", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "1", ")", ":", "\n", "                ", "default", "=", "True", "\n", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.apply_function": [[1366, 1401], ["range", "range", "range", "QPalette", "FireCommander.fire_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.fire_location_define.applied_display.setText", "FireCommander.fire_location_define.applied_display.setPalette", "FireCommander.fire_location_define.update", "QPalette", "FireCommander.fire_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.fire_location_define.applied_display.setText", "FireCommander.fire_location_define.applied_display.setPalette", "list", "FireCommander.fire_location_define.raw_list[].split", "QColor", "FireCommander.fire_location_define.fire_location_determination", "numpy.zeros", "FireCommander.fire_location_define.x_coord_list.index", "int"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.fire_location_determination"], ["", "def", "apply_function", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                    ", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "\n", "", "", "", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "            ", "if", "(", "self", ".", "environment_para", "[", "2", "]", ">", "i", ")", "and", "(", "not", "self", ".", "fire_location_determination", "(", "i", ")", ")", ":", "\n", "                ", "determine_flag", "=", "False", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "break", "\n", "\n", "", "if", "determine_flag", ":", "\n", "                ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "1", "\n", "\n", "", "", "if", "determine_flag", ":", "\n", "            ", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "applied_flag", "=", "1", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "self", ".", "update", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_flag", "=", "0", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.back_function": [[1402, 1412], ["range", "FireCommander.fire_location_define.hide", "FireCommander.open_world_mode", "FireCommander.fire_location_define.screen.show", "range"], "methods", ["None"], ["", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_Loci", "[", "0", "]", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "", "", "self", ".", "global_applied_flag", "[", "0", "]", "=", "0", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "open_world_mode", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.next_function": [[1413, 1438], ["QMessageBox.warning", "range", "range", "FireCommander.fire_location_define.hide", "FireCommander.fire_location_define.screen.show", "list", "FireCommander.fire_location_define.raw_list[].split", "new_list.append", "FireCommander.fire_setting_spec", "FireCommander.fire_setting_uni", "FireCommander.fire_location_define.fire_location_determination", "numpy.zeros", "FireCommander.fire_location_define.x_coord_list.index", "int", "int", "FireCommander.fire_location_define.x_coord_list.index"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_location_define.fire_location_determination"], ["", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Please view the location of each fire region first'", ")", "\n", "", "else", ":", "\n", "            ", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "if", "(", "self", ".", "environment_para", "[", "2", "]", ">", "i", ")", "and", "(", "not", "self", ".", "fire_location_determination", "(", "i", ")", ")", ":", "\n", "                    ", "determine_flag", "=", "False", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "break", "\n", "\n", "", "", "if", "determine_flag", ":", "\n", "                ", "new_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                    ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "new_list", ".", "append", "(", "[", "(", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", ")", "*", "100", "-", "50", ",", "int", "(", "raw_coord", "[", "1", "]", ")", "*", "100", "-", "50", "]", ")", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "1", "\n", "", "self", ".", "set_Loci", "[", "0", "]", "=", "new_list", "\n", "self", ".", "global_applied_flag", "[", "0", "]", "=", "self", ".", "applied_flag", "\n", "self", ".", "hide", "(", ")", "\n", "if", "self", ".", "set_Loci", "[", "1", "]", "[", "9", "]", "==", "1", ":", "\n", "                    ", "self", ".", "screen", "=", "fire_setting_spec", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "screen", "=", "fire_setting_uni", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.__init__": [[1441, 1450], ["QWidget.__init__", "FireCommander.fire_setting_uni.init_ui"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_Loci", ",", "current_grid", ",", "applied_flag", ")", ":", "\n", "        ", "super", "(", "fire_setting_uni", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_loci", "=", "set_Loci", "\n", "self", ".", "out_list", "=", "set_Loci", "[", "1", "]", "\n", "self", ".", "applied_flag", "=", "applied_flag", "\n", "self", ".", "current_grid", "=", "current_grid", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.init_ui": [[1451, 1599], ["FireCommander.fire_setting_uni.resize", "QPalette", "QPalette.setBrush", "FireCommander.fire_setting_uni.setPalette", "FireCommander.fire_setting_uni.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont", "QLabel", "FireCommander.fire_setting_uni.environment_setup.setGeometry", "FireCommander.fire_setting_uni.environment_setup.setFont", "FireCommander.fire_setting_uni.environment_setup.setObjectName", "FireCommander.fire_setting_uni.environment_setup.setText", "FireCommander.parameter_Display_Ctl_Extended", "QPushButton", "FireCommander.fire_setting_uni.back.setGeometry", "FireCommander.fire_setting_uni.back.setFont", "FireCommander.fire_setting_uni.back.setText", "FireCommander.fire_setting_uni.back.setStyleSheet", "FireCommander.fire_setting_uni.back.clicked.connect", "QPushButton", "FireCommander.fire_setting_uni.transfer.setGeometry", "FireCommander.fire_setting_uni.transfer.setFont", "FireCommander.fire_setting_uni.transfer.setText", "FireCommander.fire_setting_uni.transfer.setStyleSheet", "FireCommander.fire_setting_uni.transfer.clicked.connect", "QPushButton", "FireCommander.fire_setting_uni.skip.setGeometry", "FireCommander.fire_setting_uni.skip.setFont", "FireCommander.fire_setting_uni.skip.setText", "FireCommander.fire_setting_uni.skip.setStyleSheet", "FireCommander.fire_setting_uni.skip.clicked.connect", "QPushButton", "FireCommander.fire_setting_uni.next.setGeometry", "FireCommander.fire_setting_uni.next.setFont", "FireCommander.fire_setting_uni.next.setText", "FireCommander.fire_setting_uni.next.setStyleSheet", "FireCommander.fire_setting_uni.next.clicked.connect", "QBrush", "str", "QLabel", "FireCommander.fire_setting_uni.location_init.setGeometry", "FireCommander.fire_setting_uni.location_init.setFont", "FireCommander.fire_setting_uni.location_init.setObjectName", "FireCommander.fire_setting_uni.location_init.setText", "QLabel", "FireCommander.fire_setting_uni.fire_region.setGeometry", "FireCommander.fire_setting_uni.fire_region.setFont", "FireCommander.fire_setting_uni.fire_region.setObjectName", "FireCommander.fire_setting_uni.fire_region.setText", "range", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.fire_setting_uni.num_fire_spot_Edit.textChanged.connect", "FireCommander.fire_setting_uni.num_fire_spot_Edit.setValidator", "FireCommander.fire_setting_uni.num_fire_spot_Edit.setText", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.fire_setting_uni.fire_delay_Edit.textChanged.connect", "FireCommander.fire_setting_uni.fire_delay_Edit.setValidator", "FireCommander.fire_setting_uni.fire_delay_Edit.setText", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.fire_setting_uni.fuel_coef_Edit.textChanged.connect", "FireCommander.fire_setting_uni.fuel_coef_Edit.setValidator", "FireCommander.fire_setting_uni.fuel_coef_Edit.setText", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.fire_setting_uni.wind_speed_Edit.textChanged.connect", "FireCommander.fire_setting_uni.wind_speed_Edit.setValidator", "FireCommander.fire_setting_uni.wind_speed_Edit.setText", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.fire_setting_uni.wind_direction_Edit.textChanged.connect", "FireCommander.fire_setting_uni.wind_direction_Edit.setValidator", "FireCommander.fire_setting_uni.wind_direction_Edit.setText", "FireCommander.environment_Setting_Ctl_Float", "FireCommander.fire_setting_uni.temporal_penalty_coef_Edit1.textChanged.connect", "FireCommander.fire_setting_uni.temporal_penalty_coef_Edit1.setValidator", "FireCommander.fire_setting_uni.temporal_penalty_coef_Edit1.setText", "FireCommander.fire_setting_uni.temporal_penalty_coef_Edit2.textChanged.connect", "FireCommander.fire_setting_uni.temporal_penalty_coef_Edit2.setValidator", "FireCommander.fire_setting_uni.temporal_penalty_coef_Edit2.setText", "FireCommander.environment_Setting_Ctl_Float", "FireCommander.fire_setting_uni.fire_propagation_weight_Edit1.textChanged.connect", "FireCommander.fire_setting_uni.fire_propagation_weight_Edit1.setValidator", "FireCommander.fire_setting_uni.fire_propagation_weight_Edit1.setText", "FireCommander.fire_setting_uni.fire_propagation_weight_Edit2.textChanged.connect", "FireCommander.fire_setting_uni.fire_propagation_weight_Edit2.setValidator", "FireCommander.fire_setting_uni.fire_propagation_weight_Edit2.setText", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.fire_setting_uni.action_confidence_level_Edit.textChanged.connect", "FireCommander.fire_setting_uni.action_confidence_level_Edit.setValidator", "FireCommander.fire_setting_uni.action_confidence_level_Edit.setText", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.fire_setting_uni.hybrid_confidence_level_Edit.textChanged.connect", "FireCommander.fire_setting_uni.hybrid_confidence_level_Edit.setValidator", "FireCommander.fire_setting_uni.hybrid_confidence_level_Edit.setText", "QPixmap", "FireCommander.fire_coord_display_multi", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "str", "QIntValidator", "QIntValidator", "str", "QIntValidator", "QIntValidator", "str", "QIntValidator", "str", "FireCommander.fire_setting_uni.num_fire_spot_function", "FireCommander.fire_setting_uni.fire_delay_function", "FireCommander.fire_setting_uni.fuel_coef_function", "FireCommander.fire_setting_uni.wind_speed_function", "FireCommander.fire_setting_uni.wind_direction_function", "FireCommander.fire_setting_uni.temporal_penalty_coef_function1", "int", "FireCommander.fire_setting_uni.temporal_penalty_coef_function2", "str().split", "FireCommander.fire_setting_uni.fire_propagation_weight_function1", "int", "FireCommander.fire_setting_uni.fire_propagation_weight_function2", "str().split", "FireCommander.fire_setting_uni.action_confidence_level_function", "FireCommander.fire_setting_uni.hybrid_confidence_level_function", "FireCommander.fire_setting_uni.num_fire_spot_Edit.text", "FireCommander.fire_setting_uni.fire_delay_Edit.text", "FireCommander.fire_setting_uni.fuel_coef_Edit.text", "FireCommander.fire_setting_uni.wind_speed_Edit.text", "FireCommander.fire_setting_uni.wind_direction_Edit.text", "FireCommander.fire_setting_uni.temporal_penalty_coef_Edit1.text", "numpy.floor", "FireCommander.fire_setting_uni.temporal_penalty_coef_Edit2.text", "FireCommander.fire_setting_uni.fire_propagation_weight_Edit1.text", "numpy.floor", "FireCommander.fire_setting_uni.fire_propagation_weight_Edit2.text", "FireCommander.fire_setting_uni.action_confidence_level_Edit.text", "FireCommander.fire_setting_uni.hybrid_confidence_level_Edit.text", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Ctl_Extended", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_Float", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_Float", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_coord_display_multi", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.num_fire_spot_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.fire_delay_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.fuel_coef_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.wind_speed_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.wind_direction_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.temporal_penalty_coef_function1", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.temporal_penalty_coef_function2", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_propagation_weight_function1", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_propagation_weight_function2", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.action_confidence_level_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.hybrid_confidence_level_function"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Fire Setting (Uniform)'", ")", "\n", "\n", "self", ".", "right_upper_x", "=", "160", "\n", "self", ".", "right_upper_y", "=", "120", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "500", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "self", ".", "raw_list", "=", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "0", ",", "0", ",", "0", "]", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_button2", "=", "QFont", "(", "'arial'", ")", "\n", "font_button2", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "font_Bold", "=", "QFont", "(", "'arial'", ",", "14", ",", "75", ")", "\n", "\n", "self", ".", "environment_setup", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "environment_setup", ".", "setGeometry", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "environment_setup", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "environment_setup", ".", "setObjectName", "(", "\"fire_setting_uni\"", ")", "\n", "self", ".", "environment_setup", ".", "setText", "(", "\"Fire Setting (Uniform):\"", ")", "\n", "\n", "# House number input controller", "\n", "parameter_Display_Ctl_Extended", "(", "self", ",", "font", ",", "font_Bold", ",", "\n", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "1.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Number of Fire Regions:\"", ",", "\"num_fires\"", ")", ",", "str", "(", "self", ".", "environment_para", "[", "2", "]", ")", ")", "\n", "\n", "if", "self", ".", "environment_para", "[", "2", "]", "==", "0", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "\n", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"No_Fire\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"No Fire Region in this Environment\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fire_region", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "fire_region", ".", "setGeometry", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "320", ",", "\n", "self", ".", "text_height", ")", "\n", "self", ".", "fire_region", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "fire_region", ".", "setObjectName", "(", "\"fire_region\"", ")", "\n", "self", ".", "fire_region", ".", "setText", "(", "\"Current Fire Regions:\"", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "fire_coord_display_multi", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"fire_region_name\"", ",", "\"fire_region_name\"", ")", ",", "i", ",", "self", ".", "set_loci", "[", "0", "]", "[", "i", "]", ")", "\n", "\n", "\n", "", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Number of Fire Fronts in each Region: \"", ",", "\"num_fire_spot\"", ")", ",", "1", ")", "\n", "self", ".", "num_fire_spot_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "num_fire_spot_function", "(", "(", "self", ".", "num_fire_spot_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "num_fire_spot_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "num_fire_spot_Edit", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "0", "]", ")", ")", "\n", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "4.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Fire Delay Time (Min: 0, Max: 180):\"", ",", "\"fire_delay\"", ")", ",", "2", ")", "\n", "self", ".", "fire_delay_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "fire_delay_function", "(", "(", "self", ".", "fire_delay_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "fire_delay_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "fire_delay_Edit", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "1", "]", ")", ")", "\n", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "5.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Fuel Coefficient (Min: 2, Max: 20):\"", ",", "\"fuel_coef\"", ")", ",", "3", ")", "\n", "self", ".", "fuel_coef_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "fuel_coef_function", "(", "(", "self", ".", "fuel_coef_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "fuel_coef_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "fuel_coef_Edit", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "2", "]", ")", ")", "\n", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "6.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Wind Speed (Min: 2, Max: 10):\"", ",", "\"wind_speed\"", ")", ",", "4", ")", "\n", "self", ".", "wind_speed_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "wind_speed_function", "(", "(", "self", ".", "wind_speed_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "wind_speed_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "wind_speed_Edit", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "3", "]", ")", ")", "\n", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "7.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Wind Direction (0 - 360 Degrees):\"", ",", "\"wind_direction\"", ")", ",", "5", ")", "\n", "self", ".", "wind_direction_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "wind_direction_function", "(", "(", "self", ".", "wind_direction_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "wind_direction_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "wind_direction_Edit", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "4", "]", ")", ")", "\n", "\n", "environment_Setting_Ctl_Float", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "8.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Temporal Penalty Coefficient (Min: 0, Max: 2):\"", ",", "\"temporal_penalty_coef\"", ")", ",", "6", ")", "\n", "self", ".", "temporal_penalty_coef_Edit1", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "temporal_penalty_coef_function1", "(", "(", "self", ".", "temporal_penalty_coef_Edit1", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "temporal_penalty_coef_Edit1", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "temporal_penalty_coef_Edit1", ".", "setText", "(", "str", "(", "int", "(", "np", ".", "floor", "(", "self", ".", "out_list", "[", "5", "]", ")", ")", ")", ")", "\n", "\n", "self", ".", "temporal_penalty_coef_Edit2", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "temporal_penalty_coef_function2", "(", "(", "self", ".", "temporal_penalty_coef_Edit2", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "temporal_penalty_coef_Edit2", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "temporal_penalty_coef_Edit2", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "5", "]", ")", ".", "split", "(", "\".\"", ")", "[", "1", "]", ")", "\n", "\n", "environment_Setting_Ctl_Float", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "9.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Fire Propagation Weight (Min: 0, Max: 1):\"", ",", "\"fire_propagation_weight\"", ")", ",", "7", ")", "\n", "self", ".", "fire_propagation_weight_Edit1", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "fire_propagation_weight_function1", "(", "(", "self", ".", "fire_propagation_weight_Edit1", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "fire_propagation_weight_Edit1", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "fire_propagation_weight_Edit1", ".", "setText", "(", "str", "(", "int", "(", "np", ".", "floor", "(", "self", ".", "out_list", "[", "6", "]", ")", ")", ")", ")", "\n", "\n", "self", ".", "fire_propagation_weight_Edit2", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "fire_propagation_weight_function2", "(", "(", "self", ".", "fire_propagation_weight_Edit2", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "fire_propagation_weight_Edit2", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "fire_propagation_weight_Edit2", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "6", "]", ")", ".", "split", "(", "\".\"", ")", "[", "1", "]", ")", "\n", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "10.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Action Pruning Confidence Level (10% - 100%):\"", ",", "\"action_confidence_level\"", ")", ",", "8", ")", "\n", "self", ".", "action_confidence_level_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "action_confidence_level_function", "(", "(", "self", ".", "action_confidence_level_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "action_confidence_level_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "action_confidence_level_Edit", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "7", "]", ")", ")", "\n", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "11.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Hybrid Pruning Confidence Level (10% - 100%):\"", ",", "\"hybrid_confidence_level\"", ")", ",", "9", ")", "\n", "self", ".", "hybrid_confidence_level_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "hybrid_confidence_level_function", "(", "(", "self", ".", "hybrid_confidence_level_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "hybrid_confidence_level_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "hybrid_confidence_level_Edit", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "8", "]", ")", ")", "\n", "\n", "", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "125", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "transfer", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "transfer", ".", "setGeometry", "(", "475", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "transfer", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "transfer", ".", "setText", "(", "'Transfer to \\nSpecific Setting'", ")", "\n", "self", ".", "transfer", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "transfer", ".", "clicked", ".", "connect", "(", "self", ".", "transfer_function", ")", "\n", "\n", "self", ".", "skip", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "skip", ".", "setGeometry", "(", "825", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "skip", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "skip", ".", "setText", "(", "'Skip'", ")", "\n", "self", ".", "skip", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "skip", ".", "clicked", ".", "connect", "(", "self", ".", "skip_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1174", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.paintEvent": [[1600, 1610], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPen", "QBrush", "QColor", "QColor"], "methods", ["None"], ["", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "110", ",", "90", ",", "1400", ",", "800", ")", "\n", "\n", "painter3", "=", "QPainter", "(", "self", ")", "\n", "painter3", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter3", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter3", ".", "drawRect", "(", "140", ",", "110", ",", "1340", ",", "640", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.num_fire_spot_function": [[1611, 1616], ["len", "int", "str", "str"], "methods", ["None"], ["", "def", "num_fire_spot_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "0", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "0", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.fire_delay_function": [[1617, 1622], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "fire_delay_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "1", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "1", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.fuel_coef_function": [[1623, 1628], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "fuel_coef_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "2", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "2", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.wind_speed_function": [[1629, 1634], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "wind_speed_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "3", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "3", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.wind_direction_function": [[1635, 1640], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "wind_direction_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "4", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "4", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.temporal_penalty_coef_function1": [[1641, 1646], ["len", "float", "str", "str"], "methods", ["None"], ["", "", "def", "temporal_penalty_coef_function1", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "5", "]", "[", "0", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "5", "]", "[", "0", "]", "=", "float", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.temporal_penalty_coef_function2": [[1647, 1652], ["len", "str", "float", "str", "len"], "methods", ["None"], ["", "", "def", "temporal_penalty_coef_function2", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "5", "]", "[", "1", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "5", "]", "[", "1", "]", "=", "float", "(", "str", "(", "edit_str", ")", ")", "/", "(", "10", "**", "len", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.fire_propagation_weight_function1": [[1653, 1658], ["len", "float", "str", "str"], "methods", ["None"], ["", "", "def", "fire_propagation_weight_function1", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "6", "]", "[", "0", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "6", "]", "[", "0", "]", "=", "float", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.fire_propagation_weight_function2": [[1659, 1664], ["len", "str", "float", "str", "len"], "methods", ["None"], ["", "", "def", "fire_propagation_weight_function2", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "6", "]", "[", "1", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "6", "]", "[", "1", "]", "=", "float", "(", "str", "(", "edit_str", ")", ")", "/", "(", "10", "**", "len", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.action_confidence_level_function": [[1665, 1670], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "action_confidence_level_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "7", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "7", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.hybrid_confidence_level_function": [[1671, 1676], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "hybrid_confidence_level_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "8", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "8", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.fire_spot_determination": [[1677, 1686], ["QMessageBox.warning", "QMessageBox.warning"], "methods", ["None"], ["", "", "def", "fire_spot_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "raw_list", "[", "0", "]", "<", "1", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The number of fire spots in each region should be larger than 1'", ")", "\n", "", "elif", "(", "(", "self", ".", "environment_para", "[", "2", "]", "*", "self", ".", "raw_list", "[", "0", "]", ")", ">", "30", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The total number of fire spots should not exceed 30'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.fire_delay_determination": [[1687, 1696], ["QMessageBox.warning", "QMessageBox.warning"], "methods", ["None"], ["", "def", "fire_delay_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "raw_list", "[", "1", "]", "<", "0", ")", "or", "(", "self", ".", "raw_list", "[", "1", "]", ">", "180", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The fire delay time should be between 0 and 180 seconds'", ")", "\n", "", "elif", "self", ".", "raw_list", "[", "1", "]", ">", "self", ".", "environment_para", "[", "1", "]", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The fire delay time should not exceed the simulation range'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.fuel_coef_determination": [[1697, 1704], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "fuel_coef_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "raw_list", "[", "2", "]", "<", "2", ")", "or", "(", "self", ".", "raw_list", "[", "2", "]", ">", "20", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The fuel coefficient should be between 2 and 20'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.wind_speed_determination": [[1705, 1712], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "wind_speed_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "raw_list", "[", "3", "]", "<", "2", ")", "or", "(", "self", ".", "raw_list", "[", "3", "]", ">", "10", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The wind speed should be between 2 and 10'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.wind_direction_determination": [[1713, 1720], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "wind_direction_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "raw_list", "[", "4", "]", "<", "0", ")", "or", "(", "self", ".", "raw_list", "[", "4", "]", ">", "360", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The wind direction should be between 0 and 360'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.temporal_penalty_coef_determination": [[1721, 1729], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "temporal_penalty_coef_determination", "(", "self", ")", ":", "\n", "        ", "raw_num", "=", "self", ".", "raw_list", "[", "5", "]", "[", "0", "]", "+", "self", ".", "raw_list", "[", "5", "]", "[", "1", "]", "\n", "default", "=", "False", "\n", "if", "(", "raw_num", "<", "0", ")", "or", "(", "raw_num", ">", "2", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The temporal penalty coefficient should be between 0 and 2'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.fire_propagation_weight_determination": [[1730, 1738], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "fire_propagation_weight_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "raw_num", "=", "self", ".", "raw_list", "[", "6", "]", "[", "0", "]", "+", "self", ".", "raw_list", "[", "6", "]", "[", "1", "]", "\n", "if", "(", "raw_num", "<", "0", ")", "or", "(", "raw_num", ">", "1", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The fire propagation weight should be between 0 and 1'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.action_confidence_level_determination": [[1739, 1746], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "action_confidence_level_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "raw_list", "[", "7", "]", "<", "10", ")", "or", "(", "self", ".", "raw_list", "[", "7", "]", ">", "100", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The action confidence level should be between 10 and 100'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.hybrid_confidence_level_determination": [[1747, 1754], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "hybrid_confidence_level_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "raw_list", "[", "8", "]", "<", "10", ")", "or", "(", "self", ".", "raw_list", "[", "8", "]", ">", "100", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The hybrid confidence level should be between 10 and 100'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.condition_check": [[1755, 1768], ["FireCommander.fire_setting_uni.fire_spot_determination", "FireCommander.fire_setting_uni.fire_delay_determination", "FireCommander.fire_setting_uni.fuel_coef_determination", "FireCommander.fire_setting_uni.wind_speed_determination", "FireCommander.fire_setting_uni.wind_direction_determination", "FireCommander.fire_setting_uni.temporal_penalty_coef_determination", "FireCommander.fire_setting_uni.fire_propagation_weight_determination", "FireCommander.fire_setting_uni.action_confidence_level_determination", "FireCommander.fire_setting_uni.hybrid_confidence_level_determination"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_spot_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_delay_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fuel_coef_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.wind_speed_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.wind_direction_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.temporal_penalty_coef_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_propagation_weight_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.action_confidence_level_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.hybrid_confidence_level_determination"], ["", "def", "condition_check", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "fire_spot_determination", "(", ")", ":", "\n", "            ", "if", "self", ".", "fire_delay_determination", "(", ")", ":", "\n", "                ", "if", "self", ".", "fuel_coef_determination", "(", ")", ":", "\n", "                    ", "if", "self", ".", "wind_speed_determination", "(", ")", ":", "\n", "                        ", "if", "self", ".", "wind_direction_determination", "(", ")", ":", "\n", "                            ", "if", "self", ".", "temporal_penalty_coef_determination", "(", ")", ":", "\n", "                                ", "if", "self", ".", "fire_propagation_weight_determination", "(", ")", ":", "\n", "                                    ", "if", "self", ".", "action_confidence_level_determination", "(", ")", ":", "\n", "                                        ", "if", "self", ".", "hybrid_confidence_level_determination", "(", ")", ":", "\n", "                                            ", "default", "=", "True", "\n", "", "", "", "", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.transmit_value": [[1769, 1775], ["range", "len", "len", "str"], "methods", ["None"], ["", "def", "transmit_value", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "out_list", ")", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "out_list", ")", "==", "0", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "0", "\n", "", "else", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "str", "(", "self", ".", "out_list", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.back_function": [[1776, 1780], ["FireCommander.fire_setting_uni.hide", "FireCommander.fire_location_define", "FireCommander.fire_setting_uni.screen.show"], "methods", ["None"], ["", "", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "fire_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.transfer_function": [[1781, 1799], ["range", "FireCommander.fire_setting_uni.hide", "FireCommander.fire_setting_spec", "FireCommander.fire_setting_uni.screen.show", "num_fire_front_list.append", "fire_delay_list.append", "fuel_coef_list.append", "wind_speed_list.append", "wind_direction_list.append"], "methods", ["None"], ["", "def", "transfer_function", "(", "self", ")", ":", "\n", "        ", "num_fire_front_list", "=", "[", "]", "\n", "fire_delay_list", "=", "[", "]", "\n", "fuel_coef_list", "=", "[", "]", "\n", "wind_speed_list", "=", "[", "]", "\n", "wind_direction_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "            ", "num_fire_front_list", ".", "append", "(", "5", ")", "\n", "fire_delay_list", ".", "append", "(", "0", ")", "\n", "fuel_coef_list", ".", "append", "(", "10", ")", "\n", "wind_speed_list", ".", "append", "(", "5", ")", "\n", "wind_direction_list", ".", "append", "(", "45", ")", "\n", "\n", "", "self", ".", "set_loci", "[", "1", "]", "=", "[", "num_fire_front_list", ",", "fire_delay_list", ",", "fuel_coef_list", ",", "wind_speed_list", ",", "wind_direction_list", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "fire_setting_spec", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.skip_function": [[1800, 1805], ["FireCommander.fire_setting_uni.hide", "FireCommander.agent_base_location_define", "FireCommander.fire_setting_uni.screen.show"], "methods", ["None"], ["", "def", "skip_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_loci", "[", "1", "]", "=", "[", "5", ",", "0", ",", "10", ",", "5", ",", "45", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "0", "]", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "agent_base_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_uni.next_function": [[1806, 1814], ["FireCommander.fire_setting_uni.condition_check", "FireCommander.fire_setting_uni.hide", "FireCommander.agent_base_location_define", "FireCommander.fire_setting_uni.screen.show"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.condition_check"], ["", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "condition_check", "(", ")", ":", "\n", "            ", "self", ".", "set_loci", "[", "1", "]", "=", "self", ".", "raw_list", "\n", "self", ".", "set_loci", "[", "1", "]", "[", "5", "]", "=", "self", ".", "raw_list", "[", "5", "]", "[", "0", "]", "+", "self", ".", "raw_list", "[", "5", "]", "[", "1", "]", "\n", "self", ".", "set_loci", "[", "1", "]", "[", "6", "]", "=", "self", ".", "raw_list", "[", "6", "]", "[", "0", "]", "+", "self", ".", "raw_list", "[", "6", "]", "[", "1", "]", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "agent_base_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.__init__": [[1817, 1826], ["QWidget.__init__", "FireCommander.fire_setting_spec.init_ui"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_Loci", ",", "current_grid", ",", "applied_flag", ")", ":", "\n", "        ", "super", "(", "fire_setting_spec", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_loci", "=", "set_Loci", "\n", "self", ".", "out_list", "=", "set_Loci", "[", "1", "]", "\n", "self", ".", "applied_flag", "=", "applied_flag", "\n", "self", ".", "current_grid", "=", "current_grid", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.init_ui": [[1827, 1978], ["FireCommander.fire_setting_spec.resize", "QPalette", "QPalette.setBrush", "FireCommander.fire_setting_spec.setPalette", "FireCommander.fire_setting_spec.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont", "QLabel", "FireCommander.fire_setting_spec.environment_setup.setGeometry", "FireCommander.fire_setting_spec.environment_setup.setFont", "FireCommander.fire_setting_spec.environment_setup.setObjectName", "FireCommander.fire_setting_spec.environment_setup.setText", "FireCommander.parameter_Display_Ctl_Extended", "FireCommander.fire_setting_spec.transmit_value", "FireCommander.fire_setting_spec.set_initial_value_function", "QPushButton", "FireCommander.fire_setting_spec.back.setGeometry", "FireCommander.fire_setting_spec.back.setFont", "FireCommander.fire_setting_spec.back.setText", "FireCommander.fire_setting_spec.back.setStyleSheet", "FireCommander.fire_setting_spec.back.clicked.connect", "QPushButton", "FireCommander.fire_setting_spec.transfer.setGeometry", "FireCommander.fire_setting_spec.transfer.setFont", "FireCommander.fire_setting_spec.transfer.setText", "FireCommander.fire_setting_spec.transfer.setStyleSheet", "FireCommander.fire_setting_spec.transfer.clicked.connect", "QPushButton", "FireCommander.fire_setting_spec.skip.setGeometry", "FireCommander.fire_setting_spec.skip.setFont", "FireCommander.fire_setting_spec.skip.setText", "FireCommander.fire_setting_spec.skip.setStyleSheet", "FireCommander.fire_setting_spec.skip.clicked.connect", "QPushButton", "FireCommander.fire_setting_spec.next.setGeometry", "FireCommander.fire_setting_spec.next.setFont", "FireCommander.fire_setting_spec.next.setText", "FireCommander.fire_setting_spec.next.setStyleSheet", "FireCommander.fire_setting_spec.next.clicked.connect", "QBrush", "str", "QLabel", "FireCommander.fire_setting_spec.location_init.setGeometry", "FireCommander.fire_setting_spec.location_init.setFont", "FireCommander.fire_setting_spec.location_init.setObjectName", "FireCommander.fire_setting_spec.location_init.setText", "QLabel", "FireCommander.fire_setting_spec.fire_region.setGeometry", "FireCommander.fire_setting_spec.fire_region.setFont", "FireCommander.fire_setting_spec.fire_region.setObjectName", "FireCommander.fire_setting_spec.fire_region.setText", "range", "FireCommander.environment_Setting_Ctl_multi", "range", "FireCommander.environment_Setting_Ctl_multi", "range", "FireCommander.environment_Setting_Ctl_multi", "range", "FireCommander.environment_Setting_Ctl_multi", "range", "FireCommander.environment_Setting_Ctl_multi", "range", "FireCommander.environment_Setting_Ctl_Float", "FireCommander.fire_setting_spec.temporal_penalty_coef_Edit1.textChanged.connect", "FireCommander.fire_setting_spec.temporal_penalty_coef_Edit1.setValidator", "FireCommander.fire_setting_spec.temporal_penalty_coef_Edit1.setText", "FireCommander.fire_setting_spec.temporal_penalty_coef_Edit2.textChanged.connect", "FireCommander.fire_setting_spec.temporal_penalty_coef_Edit2.setValidator", "FireCommander.fire_setting_spec.temporal_penalty_coef_Edit2.setText", "FireCommander.environment_Setting_Ctl_Float", "FireCommander.fire_setting_spec.fire_propagation_weight_Edit1.textChanged.connect", "FireCommander.fire_setting_spec.fire_propagation_weight_Edit1.setValidator", "FireCommander.fire_setting_spec.fire_propagation_weight_Edit1.setText", "FireCommander.fire_setting_spec.fire_propagation_weight_Edit2.textChanged.connect", "FireCommander.fire_setting_spec.fire_propagation_weight_Edit2.setValidator", "FireCommander.fire_setting_spec.fire_propagation_weight_Edit2.setText", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.fire_setting_spec.action_confidence_level_Edit.textChanged.connect", "FireCommander.fire_setting_spec.action_confidence_level_Edit.setValidator", "FireCommander.fire_setting_spec.action_confidence_level_Edit.setText", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.fire_setting_spec.hybrid_confidence_level_Edit.textChanged.connect", "FireCommander.fire_setting_spec.hybrid_confidence_level_Edit.setValidator", "FireCommander.fire_setting_spec.hybrid_confidence_level_Edit.setText", "QPixmap", "FireCommander.fire_coord_display_multi", "FireCommander.environment_Setting_Ctl_multi_input", "FireCommander.environment_Setting_Ctl_multi_input", "FireCommander.environment_Setting_Ctl_multi_input", "FireCommander.environment_Setting_Ctl_multi_input", "FireCommander.environment_Setting_Ctl_multi_input", "QIntValidator", "str", "QIntValidator", "QIntValidator", "str", "QIntValidator", "QIntValidator", "str", "QIntValidator", "str", "FireCommander.fire_setting_spec.temporal_penalty_coef_function1", "int", "FireCommander.fire_setting_spec.temporal_penalty_coef_function2", "str().split", "FireCommander.fire_setting_spec.fire_propagation_weight_function1", "int", "FireCommander.fire_setting_spec.fire_propagation_weight_function2", "str().split", "FireCommander.fire_setting_spec.action_confidence_level_function", "FireCommander.fire_setting_spec.hybrid_confidence_level_function", "FireCommander.fire_setting_spec.temporal_penalty_coef_Edit1.text", "numpy.floor", "FireCommander.fire_setting_spec.temporal_penalty_coef_Edit2.text", "FireCommander.fire_setting_spec.fire_propagation_weight_Edit1.text", "numpy.floor", "FireCommander.fire_setting_spec.fire_propagation_weight_Edit2.text", "FireCommander.fire_setting_spec.action_confidence_level_Edit.text", "FireCommander.fire_setting_spec.hybrid_confidence_level_Edit.text", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Ctl_Extended", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transmit_value", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.set_initial_value_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_Float", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_Float", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_coord_display_multi", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi_input", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi_input", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi_input", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi_input", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi_input", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.temporal_penalty_coef_function1", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.temporal_penalty_coef_function2", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_propagation_weight_function1", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_propagation_weight_function2", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.action_confidence_level_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.hybrid_confidence_level_function"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Fire Setting (Specific)'", ")", "\n", "\n", "self", ".", "right_upper_x", "=", "160", "\n", "self", ".", "right_upper_y", "=", "120", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "500", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "self", ".", "raw_list", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "0", ",", "0", ",", "1", "]", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_button2", "=", "QFont", "(", "'arial'", ")", "\n", "font_button2", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "font_Bold", "=", "QFont", "(", "'arial'", ",", "14", ",", "75", ")", "\n", "\n", "self", ".", "environment_setup", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "environment_setup", ".", "setGeometry", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "environment_setup", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "environment_setup", ".", "setObjectName", "(", "\"fire_setting_spec\"", ")", "\n", "self", ".", "environment_setup", ".", "setText", "(", "\"Fire Setting (Specific):\"", ")", "\n", "\n", "# House number input controller", "\n", "parameter_Display_Ctl_Extended", "(", "self", ",", "font", ",", "font_Bold", ",", "\n", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "1.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Number of Fire Regions:\"", ",", "\"num_fires\"", ")", ",", "str", "(", "self", ".", "environment_para", "[", "2", "]", ")", ")", "\n", "\n", "if", "self", ".", "environment_para", "[", "2", "]", "==", "0", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "\n", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"No_Fire\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"No Fire Region in this Environment\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fire_region", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "fire_region", ".", "setGeometry", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "320", ",", "\n", "self", ".", "text_height", ")", "\n", "self", ".", "fire_region", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "fire_region", ".", "setObjectName", "(", "\"fire_region\"", ")", "\n", "self", ".", "fire_region", ".", "setText", "(", "\"Current Fire Regions:\"", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "fire_coord_display_multi", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"fire_region_name\"", ",", "\"fire_region_name\"", ")", ",", "i", ",", "self", ".", "set_loci", "[", "0", "]", "[", "i", "]", ")", "\n", "\n", "", "environment_Setting_Ctl_multi", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Number of Fire Fronts in each Region: \"", ",", "\"num_fire_spot\"", ")", ",", "1", ",", "self", ".", "environment_para", "[", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "environment_Setting_Ctl_multi_input", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Number of Fire Fronts in each Region: \"", ",", "\"num_fire_spot\"", ")", ",", "1", ",", "i", ")", "\n", "\n", "", "environment_Setting_Ctl_multi", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "4.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Fire Delay Time (Min: 0, Max: 180):\"", ",", "\"fire_delay\"", ")", ",", "2", ",", "self", ".", "environment_para", "[", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "environment_Setting_Ctl_multi_input", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "4.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Fire Delay Time (Min: 0, Max: 180):\"", ",", "\"fire_delay\"", ")", ",", "2", ",", "i", ")", "\n", "\n", "", "environment_Setting_Ctl_multi", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "5.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Fuel Coefficient (Min: 2, Max: 20):\"", ",", "\"fuel_coef\"", ")", ",", "3", ",", "self", ".", "environment_para", "[", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "environment_Setting_Ctl_multi_input", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "5.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Fuel Coefficient (Min: 2, Max: 20):\"", ",", "\"fuel_coef\"", ")", ",", "3", ",", "i", ")", "\n", "\n", "", "environment_Setting_Ctl_multi", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "6.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Wind Speed (Min: 2, Max: 10):\"", ",", "\"wind_speed\"", ")", ",", "4", ",", "self", ".", "environment_para", "[", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "environment_Setting_Ctl_multi_input", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "6.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Wind Speed (Min: 2, Max: 10):\"", ",", "\"wind_speed\"", ")", ",", "4", ",", "i", ")", "\n", "\n", "", "environment_Setting_Ctl_multi", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "7.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Wind Direction (0 - 360 Degrees):\"", ",", "\"wind_direction\"", ")", ",", "5", ",", "self", ".", "environment_para", "[", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "environment_Setting_Ctl_multi_input", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "7.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Wind Direction (0 - 360 Degrees):\"", ",", "\"wind_direction\"", ")", ",", "5", ",", "i", ")", "\n", "\n", "", "environment_Setting_Ctl_Float", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "8.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Temporal Penalty Coefficient (Min: 0, Max: 2):\"", ",", "\"temporal_penalty_coef\"", ")", ",", "6", ")", "\n", "self", ".", "temporal_penalty_coef_Edit1", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "temporal_penalty_coef_function1", "(", "(", "self", ".", "temporal_penalty_coef_Edit1", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "temporal_penalty_coef_Edit1", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "temporal_penalty_coef_Edit1", ".", "setText", "(", "str", "(", "int", "(", "np", ".", "floor", "(", "self", ".", "out_list", "[", "5", "]", ")", ")", ")", ")", "\n", "\n", "self", ".", "temporal_penalty_coef_Edit2", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "temporal_penalty_coef_function2", "(", "(", "self", ".", "temporal_penalty_coef_Edit2", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "temporal_penalty_coef_Edit2", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "temporal_penalty_coef_Edit2", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "5", "]", ")", ".", "split", "(", "\".\"", ")", "[", "1", "]", ")", "\n", "\n", "environment_Setting_Ctl_Float", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "9.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Fire Propagation Weight (Min: 0, Max: 1):\"", ",", "\"fire_propagation_weight\"", ")", ",", "7", ")", "\n", "self", ".", "fire_propagation_weight_Edit1", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "fire_propagation_weight_function1", "(", "(", "self", ".", "fire_propagation_weight_Edit1", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "fire_propagation_weight_Edit1", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "fire_propagation_weight_Edit1", ".", "setText", "(", "str", "(", "int", "(", "np", ".", "floor", "(", "self", ".", "out_list", "[", "6", "]", ")", ")", ")", ")", "\n", "\n", "self", ".", "fire_propagation_weight_Edit2", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "fire_propagation_weight_function2", "(", "(", "self", ".", "fire_propagation_weight_Edit2", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "fire_propagation_weight_Edit2", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "fire_propagation_weight_Edit2", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "6", "]", ")", ".", "split", "(", "\".\"", ")", "[", "1", "]", ")", "\n", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "10.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Action Pruning Confidence Level (10% - 100%):\"", ",", "\"action_confidence_level\"", ")", ",", "8", ")", "\n", "self", ".", "action_confidence_level_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "action_confidence_level_function", "(", "(", "self", ".", "action_confidence_level_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "action_confidence_level_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "action_confidence_level_Edit", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "7", "]", ")", ")", "\n", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "11.5", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Hybrid Pruning Confidence Level (10% - 100%):\"", ",", "\"hybrid_confidence_level\"", ")", ",", "9", ")", "\n", "self", ".", "hybrid_confidence_level_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "hybrid_confidence_level_function", "(", "(", "self", ".", "hybrid_confidence_level_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "self", ".", "hybrid_confidence_level_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "self", ".", "hybrid_confidence_level_Edit", ".", "setText", "(", "str", "(", "self", ".", "out_list", "[", "8", "]", ")", ")", "\n", "\n", "\n", "", "self", ".", "transmit_value", "(", ")", "\n", "self", ".", "set_initial_value_function", "(", ")", "\n", "\n", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "125", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "transfer", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "transfer", ".", "setGeometry", "(", "475", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "transfer", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "transfer", ".", "setText", "(", "'Transfer to \\nUniform Setting'", ")", "\n", "self", ".", "transfer", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "transfer", ".", "clicked", ".", "connect", "(", "self", ".", "transfer_function", ")", "\n", "\n", "self", ".", "skip", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "skip", ".", "setGeometry", "(", "825", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "skip", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "skip", ".", "setText", "(", "'Skip'", ")", "\n", "self", ".", "skip", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "skip", ".", "clicked", ".", "connect", "(", "self", ".", "skip_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1174", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.paintEvent": [[1979, 1989], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPen", "QBrush", "QColor", "QColor"], "methods", ["None"], ["", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "110", ",", "90", ",", "1400", ",", "800", ")", "\n", "\n", "painter3", "=", "QPainter", "(", "self", ")", "\n", "painter3", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter3", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter3", ".", "drawRect", "(", "140", ",", "110", ",", "1340", ",", "640", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.temporal_penalty_coef_function1": [[1990, 1995], ["len", "float", "str", "str"], "methods", ["None"], ["", "def", "temporal_penalty_coef_function1", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "5", "]", "[", "0", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "5", "]", "[", "0", "]", "=", "float", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.temporal_penalty_coef_function2": [[1996, 2001], ["len", "str", "float", "str", "len"], "methods", ["None"], ["", "", "def", "temporal_penalty_coef_function2", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "5", "]", "[", "1", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "5", "]", "[", "1", "]", "=", "float", "(", "str", "(", "edit_str", ")", ")", "/", "(", "10", "**", "len", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_propagation_weight_function1": [[2002, 2007], ["len", "float", "str", "str"], "methods", ["None"], ["", "", "def", "fire_propagation_weight_function1", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "6", "]", "[", "0", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "6", "]", "[", "0", "]", "=", "float", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_propagation_weight_function2": [[2008, 2013], ["len", "str", "float", "str", "len"], "methods", ["None"], ["", "", "def", "fire_propagation_weight_function2", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "6", "]", "[", "1", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "6", "]", "[", "1", "]", "=", "float", "(", "str", "(", "edit_str", ")", ")", "/", "(", "10", "**", "len", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.action_confidence_level_function": [[2014, 2019], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "action_confidence_level_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "7", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "7", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.hybrid_confidence_level_function": [[2020, 2025], ["len", "int", "str", "str"], "methods", ["None"], ["", "", "def", "hybrid_confidence_level_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "if", "(", "len", "(", "str", "(", "edit_str", ")", ")", "==", "0", ")", ":", "\n", "            ", "self", ".", "raw_list", "[", "8", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "8", "]", "=", "int", "(", "str", "(", "edit_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_spot_determination": [[2026, 2040], ["range", "QMessageBox.warning", "QMessageBox.warning"], "methods", ["None"], ["", "", "def", "fire_spot_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "True", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "            ", "if", "(", "self", ".", "raw_list", "[", "0", "]", "[", "i", "]", "<", "1", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The number of fire spots in each region should be larger than 1'", ")", "\n", "default", "=", "False", "\n", "break", "\n", "", "else", ":", "\n", "                ", "count", "+=", "self", ".", "raw_list", "[", "0", "]", "[", "i", "]", "\n", "", "", "if", "count", ">", "30", ":", "\n", "             ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The total number of fire spots should not exceed 30'", ")", "\n", "default", "=", "False", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_delay_determination": [[2041, 2055], ["range", "QMessageBox.warning", "QMessageBox.warning"], "methods", ["None"], ["", "def", "fire_delay_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "            ", "if", "(", "self", ".", "raw_list", "[", "1", "]", "[", "i", "]", "<", "0", ")", "or", "(", "self", ".", "raw_list", "[", "1", "]", "[", "i", "]", ">", "180", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The fire delay time should be between 0 and 180 seconds'", ")", "\n", "default", "=", "False", "\n", "break", "\n", "", "elif", "(", "self", ".", "raw_list", "[", "1", "]", "[", "i", "]", ">", "self", ".", "environment_para", "[", "1", "]", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The fire delay time should not exceed the simulation range'", ")", "\n", "default", "=", "False", "\n", "break", "\n", "", "else", ":", "\n", "                ", "default", "=", "True", "\n", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fuel_coef_determination": [[2056, 2064], ["range", "QMessageBox.warning"], "methods", ["None"], ["", "def", "fuel_coef_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "            ", "if", "(", "self", ".", "raw_list", "[", "2", "]", "[", "i", "]", "<", "2", ")", "or", "(", "self", ".", "raw_list", "[", "2", "]", "[", "i", "]", ">", "20", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The fuel coefficient should be between 2 and 20'", ")", "\n", "default", "=", "False", "\n", "break", "\n", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.wind_speed_determination": [[2065, 2073], ["range", "QMessageBox.warning"], "methods", ["None"], ["", "def", "wind_speed_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "            ", "if", "(", "self", ".", "raw_list", "[", "3", "]", "[", "i", "]", "<", "2", ")", "or", "(", "self", ".", "raw_list", "[", "3", "]", "[", "i", "]", ">", "10", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The wind speed should be between 2 and 10'", ")", "\n", "default", "=", "False", "\n", "break", "\n", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.wind_direction_determination": [[2074, 2082], ["range", "QMessageBox.warning"], "methods", ["None"], ["", "def", "wind_direction_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "            ", "if", "(", "self", ".", "raw_list", "[", "4", "]", "[", "i", "]", "<", "0", ")", "or", "(", "self", ".", "raw_list", "[", "4", "]", "[", "i", "]", ">", "360", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The wind direction should be between 0 and 360'", ")", "\n", "default", "=", "False", "\n", "break", "\n", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.temporal_penalty_coef_determination": [[2083, 2091], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "temporal_penalty_coef_determination", "(", "self", ")", ":", "\n", "        ", "raw_num", "=", "self", ".", "raw_list", "[", "5", "]", "[", "0", "]", "+", "self", ".", "raw_list", "[", "5", "]", "[", "1", "]", "\n", "default", "=", "False", "\n", "if", "(", "raw_num", "<", "0", ")", "or", "(", "raw_num", ">", "2", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The temporal penalty coefficient should be between 0 and 2'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_propagation_weight_determination": [[2092, 2100], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "fire_propagation_weight_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "raw_num", "=", "self", ".", "raw_list", "[", "6", "]", "[", "0", "]", "+", "self", ".", "raw_list", "[", "6", "]", "[", "1", "]", "\n", "if", "(", "raw_num", "<", "0", ")", "or", "(", "raw_num", ">", "1", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The fire propagation weight should be between 0 and 1'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.action_confidence_level_determination": [[2101, 2108], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "action_confidence_level_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "raw_list", "[", "7", "]", "<", "10", ")", "or", "(", "self", ".", "raw_list", "[", "7", "]", ">", "100", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The action confidence level should be between 10 and 100'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.hybrid_confidence_level_determination": [[2109, 2116], ["QMessageBox.warning"], "methods", ["None"], ["", "def", "hybrid_confidence_level_determination", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "raw_list", "[", "8", "]", "<", "10", ")", "or", "(", "self", ".", "raw_list", "[", "8", "]", ">", "100", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: The hybrid confidence level should be between 10 and 100'", ")", "\n", "", "else", ":", "\n", "            ", "default", "=", "True", "\n", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.set_initial_value_function": [[2117, 2148], ["FireCommander.fire_setting_spec.num_fire_spot_Edit1.setText", "FireCommander.fire_setting_spec.fire_delay_Edit1.setText", "FireCommander.fire_setting_spec.fuel_coef_Edit1.setText", "FireCommander.fire_setting_spec.wind_speed_Edit1.setText", "FireCommander.fire_setting_spec.wind_direction_Edit1.setText", "str", "str", "str", "str", "str", "FireCommander.fire_setting_spec.num_fire_spot_Edit2.setText", "FireCommander.fire_setting_spec.fire_delay_Edit2.setText", "FireCommander.fire_setting_spec.fuel_coef_Edit2.setText", "FireCommander.fire_setting_spec.wind_speed_Edit2.setText", "FireCommander.fire_setting_spec.wind_direction_Edit2.setText", "FireCommander.fire_setting_spec.num_fire_spot_Edit3.setText", "FireCommander.fire_setting_spec.fire_delay_Edit3.setText", "FireCommander.fire_setting_spec.fuel_coef_Edit3.setText", "FireCommander.fire_setting_spec.wind_speed_Edit3.setText", "FireCommander.fire_setting_spec.wind_direction_Edit3.setText", "FireCommander.fire_setting_spec.num_fire_spot_Edit4.setText", "FireCommander.fire_setting_spec.fire_delay_Edit4.setText", "FireCommander.fire_setting_spec.fuel_coef_Edit4.setText", "FireCommander.fire_setting_spec.wind_speed_Edit4.setText", "FireCommander.fire_setting_spec.wind_direction_Edit4.setText", "FireCommander.fire_setting_spec.num_fire_spot_Edit5.setText", "FireCommander.fire_setting_spec.fire_delay_Edit5.setText", "FireCommander.fire_setting_spec.fuel_coef_Edit5.setText", "FireCommander.fire_setting_spec.wind_speed_Edit5.setText", "FireCommander.fire_setting_spec.wind_direction_Edit5.setText", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["None"], ["", "def", "set_initial_value_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "2", "]", ">", "0", ":", "\n", "            ", "self", ".", "num_fire_spot_Edit1", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "0", "]", "[", "0", "]", ")", ")", "\n", "self", ".", "fire_delay_Edit1", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "1", "]", "[", "0", "]", ")", ")", "\n", "self", ".", "fuel_coef_Edit1", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "2", "]", "[", "0", "]", ")", ")", "\n", "self", ".", "wind_speed_Edit1", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "3", "]", "[", "0", "]", ")", ")", "\n", "self", ".", "wind_direction_Edit1", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "4", "]", "[", "0", "]", ")", ")", "\n", "if", "self", ".", "environment_para", "[", "2", "]", ">", "1", ":", "\n", "                ", "self", ".", "num_fire_spot_Edit2", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "0", "]", "[", "1", "]", ")", ")", "\n", "self", ".", "fire_delay_Edit2", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "1", "]", "[", "1", "]", ")", ")", "\n", "self", ".", "fuel_coef_Edit2", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "2", "]", "[", "1", "]", ")", ")", "\n", "self", ".", "wind_speed_Edit2", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "3", "]", "[", "1", "]", ")", ")", "\n", "self", ".", "wind_direction_Edit2", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "4", "]", "[", "1", "]", ")", ")", "\n", "", "if", "self", ".", "environment_para", "[", "2", "]", ">", "2", ":", "\n", "                ", "self", ".", "num_fire_spot_Edit3", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "0", "]", "[", "2", "]", ")", ")", "\n", "self", ".", "fire_delay_Edit3", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "1", "]", "[", "2", "]", ")", ")", "\n", "self", ".", "fuel_coef_Edit3", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "2", "]", "[", "2", "]", ")", ")", "\n", "self", ".", "wind_speed_Edit3", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "3", "]", "[", "2", "]", ")", ")", "\n", "self", ".", "wind_direction_Edit3", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "4", "]", "[", "2", "]", ")", ")", "\n", "", "if", "self", ".", "environment_para", "[", "2", "]", ">", "3", ":", "\n", "                ", "self", ".", "num_fire_spot_Edit4", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "0", "]", "[", "3", "]", ")", ")", "\n", "self", ".", "fire_delay_Edit4", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "1", "]", "[", "3", "]", ")", ")", "\n", "self", ".", "fuel_coef_Edit4", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "2", "]", "[", "3", "]", ")", ")", "\n", "self", ".", "wind_speed_Edit4", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "3", "]", "[", "3", "]", ")", ")", "\n", "self", ".", "wind_direction_Edit4", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "4", "]", "[", "3", "]", ")", ")", "\n", "", "if", "self", ".", "environment_para", "[", "2", "]", ">", "4", ":", "\n", "                ", "self", ".", "num_fire_spot_Edit5", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "0", "]", "[", "4", "]", ")", ")", "\n", "self", ".", "fire_delay_Edit5", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "1", "]", "[", "4", "]", ")", ")", "\n", "self", ".", "fuel_coef_Edit5", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "2", "]", "[", "4", "]", ")", ")", "\n", "self", ".", "wind_speed_Edit5", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "3", "]", "[", "4", "]", ")", ")", "\n", "self", ".", "wind_direction_Edit5", ".", "setText", "(", "str", "(", "self", ".", "raw_list", "[", "4", "]", "[", "4", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.condition_check": [[2149, 2162], ["FireCommander.fire_setting_spec.fire_spot_determination", "FireCommander.fire_setting_spec.fire_delay_determination", "FireCommander.fire_setting_spec.fuel_coef_determination", "FireCommander.fire_setting_spec.wind_speed_determination", "FireCommander.fire_setting_spec.wind_direction_determination", "FireCommander.fire_setting_spec.temporal_penalty_coef_determination", "FireCommander.fire_setting_spec.fire_propagation_weight_determination", "FireCommander.fire_setting_spec.action_confidence_level_determination", "FireCommander.fire_setting_spec.hybrid_confidence_level_determination"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_spot_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_delay_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fuel_coef_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.wind_speed_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.wind_direction_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.temporal_penalty_coef_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.fire_propagation_weight_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.action_confidence_level_determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.hybrid_confidence_level_determination"], ["", "", "", "def", "condition_check", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "fire_spot_determination", "(", ")", ":", "\n", "            ", "if", "self", ".", "fire_delay_determination", "(", ")", ":", "\n", "                ", "if", "self", ".", "fuel_coef_determination", "(", ")", ":", "\n", "                    ", "if", "self", ".", "wind_speed_determination", "(", ")", ":", "\n", "                        ", "if", "self", ".", "wind_direction_determination", "(", ")", ":", "\n", "                            ", "if", "self", ".", "temporal_penalty_coef_determination", "(", ")", ":", "\n", "                                ", "if", "self", ".", "fire_propagation_weight_determination", "(", ")", ":", "\n", "                                    ", "if", "self", ".", "action_confidence_level_determination", "(", ")", ":", "\n", "                                        ", "if", "self", ".", "hybrid_confidence_level_determination", "(", ")", ":", "\n", "                                            ", "default", "=", "True", "\n", "", "", "", "", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.transmit_value": [[2163, 2170], ["range", "range", "len", "len", "len", "FireCommander.fire_setting_spec.raw_list[].append", "FireCommander.fire_setting_spec.raw_list[].append"], "methods", ["None"], ["", "def", "transmit_value", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "out_list", ")", "-", "5", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "out_list", "[", "i", "]", ")", ")", ":", "\n", "                ", "if", "len", "(", "self", ".", "out_list", ")", "==", "0", ":", "\n", "                    ", "self", ".", "raw_list", "[", "i", "]", ".", "append", "(", "'0'", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "raw_list", "[", "i", "]", ".", "append", "(", "self", ".", "out_list", "[", "i", "]", "[", "j", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.back_function": [[2171, 2175], ["FireCommander.fire_setting_spec.hide", "FireCommander.fire_location_define", "FireCommander.fire_setting_spec.screen.show"], "methods", ["None"], ["", "", "", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "fire_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.transfer_function": [[2176, 2181], ["FireCommander.fire_setting_spec.hide", "FireCommander.fire_setting_uni", "FireCommander.fire_setting_spec.screen.show"], "methods", ["None"], ["", "def", "transfer_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_loci", "[", "1", "]", "=", "[", "5", ",", "0", ",", "10", ",", "5", ",", "45", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "0", "]", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "fire_setting_uni", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.skip_function": [[2182, 2200], ["range", "FireCommander.fire_setting_spec.hide", "FireCommander.agent_base_location_define", "FireCommander.fire_setting_spec.screen.show", "num_fire_front_list.append", "fire_delay_list.append", "fuel_coef_list.append", "wind_speed_list.append", "wind_direction_list.append"], "methods", ["None"], ["", "def", "skip_function", "(", "self", ")", ":", "\n", "        ", "num_fire_front_list", "=", "[", "]", "\n", "fire_delay_list", "=", "[", "]", "\n", "fuel_coef_list", "=", "[", "]", "\n", "wind_speed_list", "=", "[", "]", "\n", "wind_direction_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "            ", "num_fire_front_list", ".", "append", "(", "5", ")", "\n", "fire_delay_list", ".", "append", "(", "0", ")", "\n", "fuel_coef_list", ".", "append", "(", "10", ")", "\n", "wind_speed_list", ".", "append", "(", "5", ")", "\n", "wind_direction_list", ".", "append", "(", "45", ")", "\n", "\n", "", "self", ".", "set_loci", "[", "1", "]", "=", "[", "num_fire_front_list", ",", "fire_delay_list", ",", "fuel_coef_list", ",", "wind_speed_list", ",", "wind_direction_list", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "agent_base_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.next_function": [[2201, 2209], ["FireCommander.fire_setting_spec.condition_check", "FireCommander.fire_setting_spec.hide", "FireCommander.agent_base_location_define", "FireCommander.fire_setting_spec.screen.show"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_setting_spec.condition_check"], ["", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "condition_check", "(", ")", ":", "\n", "            ", "self", ".", "set_loci", "[", "1", "]", "=", "self", ".", "raw_list", "\n", "self", ".", "set_loci", "[", "1", "]", "[", "5", "]", "=", "self", ".", "raw_list", "[", "5", "]", "[", "0", "]", "+", "self", ".", "raw_list", "[", "5", "]", "[", "1", "]", "\n", "self", ".", "set_loci", "[", "1", "]", "[", "6", "]", "=", "self", ".", "raw_list", "[", "6", "]", "[", "0", "]", "+", "self", ".", "raw_list", "[", "6", "]", "[", "1", "]", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "agent_base_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.__init__": [[2212, 2226], ["QWidget.__init__", "round", "list", "FireCommander.agent_base_location_define.init_ui", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_Loci", ",", "current_grid", ",", "applied_flag", ")", ":", "\n", "        ", "super", "(", "agent_base_location_define", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_Loci", "=", "set_Loci", "\n", "self", ".", "out_list", "=", "set_Loci", "[", "2", "]", "\n", "self", ".", "current_grid", "=", "current_grid", "\n", "self", ".", "grid_size", "=", "round", "(", "self", ".", "environment_para", "[", "0", "]", "//", "100", ")", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "self", ".", "global_applied_flag", "=", "applied_flag", "\n", "self", ".", "orient_flag", "=", "set_Loci", "[", "2", "]", "[", "1", "]", "\n", "self", ".", "x_coord_list", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", ",", "'K'", ",", "'L'", ",", "'M'", ",", "'N'", ",", "'O'", "]", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.init_ui": [[2227, 2401], ["FireCommander.agent_base_location_define.resize", "QPalette", "QPalette.setBrush", "FireCommander.agent_base_location_define.setPalette", "FireCommander.agent_base_location_define.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont", "FireCommander.agent_base_location_define.transmit_value", "QPalette", "QLabel", "FireCommander.agent_base_location_define.applied_display.setFont", "FireCommander.agent_base_location_define.applied_display.setObjectName", "QLabel", "FireCommander.agent_base_location_define.setting_init.setGeometry", "FireCommander.agent_base_location_define.setting_init.setFont", "FireCommander.agent_base_location_define.setting_init.setObjectName", "FireCommander.agent_base_location_define.setting_init.setText", "FireCommander.parameter_Display_Ctl", "QLabel", "FireCommander.agent_base_location_define.agent_base_orient.setGeometry", "FireCommander.agent_base_location_define.agent_base_orient.setFont", "FireCommander.agent_base_location_define.agent_base_orient.setObjectName", "FireCommander.agent_base_location_define.agent_base_orient.setText", "QRadioButton", "FireCommander.agent_base_location_define.agent_base_orient_horizon.setGeometry", "FireCommander.agent_base_location_define.agent_base_orient_horizon.setFont", "FireCommander.agent_base_location_define.agent_base_orient_horizon.setObjectName", "QRadioButton", "FireCommander.agent_base_location_define.agent_base_orient_vertical.setGeometry", "FireCommander.agent_base_location_define.agent_base_orient_vertical.setFont", "FireCommander.agent_base_location_define.agent_base_orient_vertical.setObjectName", "QButtonGroup", "FireCommander.agent_base_location_define.buttongroup.addButton", "FireCommander.agent_base_location_define.buttongroup.addButton", "FireCommander.agent_base_location_define.buttongroup.buttonClicked.connect", "QLabel", "FireCommander.agent_base_location_define.agent_base_orient.setGeometry", "FireCommander.agent_base_location_define.agent_base_orient.setFont", "FireCommander.agent_base_location_define.agent_base_orient.setObjectName", "FireCommander.agent_base_location_define.agent_base_orient.setText", "QLabel", "FireCommander.agent_base_location_define.location_init.setGeometry", "FireCommander.agent_base_location_define.location_init.setFont", "FireCommander.agent_base_location_define.location_init.setObjectName", "FireCommander.agent_base_location_define.location_init.setText", "range", "FireCommander.agent_base_location_define.word_plot", "FireCommander.agent_base_location_define.set_initial_value_function", "FireCommander.agent_base_location_define.applied_display.setPalette", "QPushButton", "FireCommander.agent_base_location_define.reset.setGeometry", "FireCommander.agent_base_location_define.reset.setFont", "FireCommander.agent_base_location_define.reset.setText", "FireCommander.agent_base_location_define.reset.setStyleSheet", "FireCommander.agent_base_location_define.reset.clicked.connect", "QPushButton", "FireCommander.agent_base_location_define.apply.setGeometry", "FireCommander.agent_base_location_define.apply.setFont", "FireCommander.agent_base_location_define.apply.setText", "FireCommander.agent_base_location_define.apply.setStyleSheet", "FireCommander.agent_base_location_define.apply.clicked.connect", "QPushButton", "FireCommander.agent_base_location_define.back.setGeometry", "FireCommander.agent_base_location_define.back.setFont", "FireCommander.agent_base_location_define.back.setText", "FireCommander.agent_base_location_define.back.setStyleSheet", "FireCommander.agent_base_location_define.back.clicked.connect", "QPushButton", "FireCommander.agent_base_location_define.next.setGeometry", "FireCommander.agent_base_location_define.next.setFont", "FireCommander.agent_base_location_define.next.setText", "FireCommander.agent_base_location_define.next.setStyleSheet", "FireCommander.agent_base_location_define.next.clicked.connect", "QBrush", "str", "FireCommander.agent_base_location_define.agent_base_orient_vertical.setChecked", "FireCommander.agent_base_location_define.agent_base_orient_horizon.setChecked", "FireCommander.agent_base_location_define.agent_base_orient_vertical.setChecked", "FireCommander.agent_base_location_define.agent_base_orient_horizon.setChecked", "QLabel", "FireCommander.agent_base_location_define.agent_base_orient_Display.setGeometry", "FireCommander.agent_base_location_define.agent_base_orient_Display.setFont", "FireCommander.agent_base_location_define.agent_base_orient_Display.setObjectName", "FireCommander.agent_base_location_define.agent_base_orient_Display.setText", "QLabel", "FireCommander.agent_base_location_define.size_note.setGeometry", "FireCommander.agent_base_location_define.size_note.setFont", "FireCommander.agent_base_location_define.size_note.setObjectName", "FireCommander.agent_base_location_define.size_note.setText", "QLabel", "FireCommander.agent_base_location_define.note.setGeometry", "FireCommander.agent_base_location_define.note.setFont", "FireCommander.agent_base_location_define.note.setObjectName", "FireCommander.agent_base_location_define.note.setText", "QLabel", "FireCommander.agent_base_location_define.agent_base_orient_Display.setGeometry", "FireCommander.agent_base_location_define.agent_base_orient_Display.setFont", "FireCommander.agent_base_location_define.agent_base_orient_Display.setObjectName", "FireCommander.agent_base_location_define.agent_base_orient_Display.setText", "QLabel", "FireCommander.agent_base_location_define.size_note.setGeometry", "FireCommander.agent_base_location_define.size_note.setFont", "FireCommander.agent_base_location_define.size_note.setObjectName", "FireCommander.agent_base_location_define.size_note.setText", "QLabel", "FireCommander.agent_base_location_define.note.setGeometry", "FireCommander.agent_base_location_define.note.setFont", "FireCommander.agent_base_location_define.note.setObjectName", "FireCommander.agent_base_location_define.note.setText", "FireCommander.environment_Setting_Ctl", "FireCommander.agent_base_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.agent_base_location_define.applied_display.setText", "FireCommander.agent_base_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.agent_base_location_define.applied_display.setText", "QPixmap", "QColor", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transmit_value", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.word_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.set_initial_value_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Agent Base Location'", ")", "\n", "\n", "self", ".", "left_upper_x", "=", "120", "\n", "self", ".", "left_upper_y", "=", "100", "\n", "self", ".", "right_upper_x", "=", "640", "\n", "self", ".", "right_upper_y", "=", "120", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "400", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_grid", "=", "QFont", "(", "'arial'", ")", "\n", "font_grid", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_button_small", "=", "QFont", "(", "'arial'", ")", "\n", "font_button_small", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "font_Bold", "=", "QFont", "(", "'arial'", ",", "14", ",", "75", ")", "\n", "\n", "self", ".", "raw_list", "=", "[", "''", "]", "\n", "self", ".", "transmit_value", "(", ")", "\n", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "applied_display", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "applied_display", ".", "setObjectName", "(", "\"Applied_Display\"", ")", "\n", "\n", "self", ".", "setting_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "setting_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "setting_init", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "setting_init", ".", "setObjectName", "(", "\"Agent_Base_Setting\"", ")", "\n", "self", ".", "setting_init", ".", "setText", "(", "\"Agent Base Setting:\"", ")", "\n", "\n", "# House number input controller", "\n", "parameter_Display_Ctl", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "1.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Agent Bases:\"", ",", "\"num_ageent_bases\"", ")", ",", "str", "(", "1", ")", ")", "\n", "\n", "self", ".", "agent_base_orient", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "agent_base_orient", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "380", ",", "30", ")", "\n", "self", ".", "agent_base_orient", ".", "setFont", "(", "font", ")", "\n", "self", ".", "agent_base_orient", ".", "setObjectName", "(", "'Agent Base Orientation'", ")", "\n", "self", ".", "agent_base_orient", ".", "setText", "(", "'The Agent Base Orientation: '", ")", "\n", "\n", "self", ".", "agent_base_orient_horizon", "=", "QRadioButton", "(", "'Horizontal, A 2 \u00d7 4 Grid will be Marked'", ",", "self", ")", "\n", "self", ".", "agent_base_orient_horizon", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "380", ",", "30", ")", "\n", "self", ".", "agent_base_orient_horizon", ".", "setFont", "(", "font", ")", "\n", "self", ".", "agent_base_orient_horizon", ".", "setObjectName", "(", "\"Agent_Base_Horizon\"", ")", "\n", "\n", "self", ".", "agent_base_orient_vertical", "=", "QRadioButton", "(", "'Vertical, A 4 \u00d7 2 Grid will be Marked'", ",", "self", ")", "\n", "self", ".", "agent_base_orient_vertical", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "4.5", "*", "self", ".", "left_y_interval", ",", "380", ",", "30", ")", "\n", "self", ".", "agent_base_orient_vertical", ".", "setFont", "(", "font", ")", "\n", "self", ".", "agent_base_orient_vertical", ".", "setObjectName", "(", "\"Agent_Base_Vertical\"", ")", "\n", "\n", "self", ".", "buttongroup", "=", "QButtonGroup", "(", "self", ")", "\n", "self", ".", "buttongroup", ".", "addButton", "(", "self", ".", "agent_base_orient_horizon", ",", "11", ")", "\n", "self", ".", "buttongroup", ".", "addButton", "(", "self", ".", "agent_base_orient_vertical", ",", "12", ")", "\n", "self", ".", "buttongroup", ".", "buttonClicked", ".", "connect", "(", "self", ".", "buttonclicked", ")", "\n", "if", "self", ".", "orient_flag", "==", "1", ":", "\n", "            ", "self", ".", "agent_base_orient_vertical", ".", "setChecked", "(", "True", ")", "\n", "self", ".", "agent_base_orient_horizon", ".", "setChecked", "(", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "agent_base_orient_vertical", ".", "setChecked", "(", "False", ")", "\n", "self", ".", "agent_base_orient_horizon", ".", "setChecked", "(", "True", ")", "\n", "\n", "", "self", ".", "agent_base_orient", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "agent_base_orient", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "5.5", "*", "self", ".", "left_y_interval", ",", "260", ",", "30", ")", "\n", "self", ".", "agent_base_orient", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "agent_base_orient", ".", "setObjectName", "(", "'Agent Base Orientation'", ")", "\n", "self", ".", "agent_base_orient", ".", "setText", "(", "'Current Orientation: '", ")", "\n", "\n", "if", "self", ".", "orient_flag", "==", "1", ":", "\n", "            ", "self", ".", "agent_base_orient_Display", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "agent_base_orient_Display", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "280", ",", "self", ".", "left_upper_y", "+", "5.5", "*", "self", ".", "left_y_interval", ",", "120", ",", "30", ")", "\n", "self", ".", "agent_base_orient_Display", ".", "setFont", "(", "font", ")", "\n", "self", ".", "agent_base_orient_Display", ".", "setObjectName", "(", "'Agent Base Orientation Display'", ")", "\n", "self", ".", "agent_base_orient_Display", ".", "setText", "(", "'Vertical'", ")", "\n", "\n", "self", ".", "size_note", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "size_note", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "6.5", "*", "self", ".", "left_y_interval", ",", "60", ",", "30", ")", "\n", "self", ".", "size_note", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "size_note", ".", "setObjectName", "(", "'Note1'", ")", "\n", "self", ".", "size_note", ".", "setText", "(", "'Note: '", ")", "\n", "\n", "self", ".", "note", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "note", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "60", ",", "self", ".", "left_upper_y", "+", "6.65", "*", "self", ".", "left_y_interval", ",", "\n", "400", ",", "self", ".", "text_height", ")", "\n", "self", ".", "note", ".", "setFont", "(", "font", ")", "\n", "self", ".", "note", ".", "setObjectName", "(", "\"Note2\"", ")", "\n", "self", ".", "note", ".", "setText", "(", "\"You can only pose the entire agent base \\nwithin A and \"", "+", "self", ".", "x_coord_list", "[", "self", ".", "grid_size", "-", "2", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "agent_base_orient_Display", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "agent_base_orient_Display", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "280", ",", "\n", "self", ".", "left_upper_y", "+", "5.5", "*", "self", ".", "left_y_interval", ",", "120", ",", "30", ")", "\n", "self", ".", "agent_base_orient_Display", ".", "setFont", "(", "font", ")", "\n", "self", ".", "agent_base_orient_Display", ".", "setObjectName", "(", "'Agent Base Orientation Display'", ")", "\n", "self", ".", "agent_base_orient_Display", ".", "setText", "(", "'Horizontal'", ")", "\n", "\n", "self", ".", "size_note", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "size_note", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "6.5", "*", "self", ".", "left_y_interval", ",", "60", ",", "30", ")", "\n", "self", ".", "size_note", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "size_note", ".", "setObjectName", "(", "'Note1'", ")", "\n", "self", ".", "size_note", ".", "setText", "(", "'Note: '", ")", "\n", "\n", "self", ".", "note", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "note", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "60", ",", "self", ".", "left_upper_y", "+", "6.65", "*", "self", ".", "left_y_interval", ",", "\n", "400", ",", "self", ".", "text_height", ")", "\n", "self", ".", "note", ".", "setFont", "(", "font", ")", "\n", "self", ".", "note", ".", "setObjectName", "(", "\"Note2\"", ")", "\n", "self", ".", "note", ".", "setText", "(", "\"You can only pose the entire agent base \\nwithin 1 and \"", "+", "str", "(", "self", ".", "grid_size", "-", "1", ")", ")", "\n", "\n", "", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "8", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"agent_base_location\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"Agent Base Locations:\"", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ")", ":", "\n", "# Initialize fire center input controller", "\n", "            ", "environment_Setting_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "(", "9", "+", "i", ")", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Agent Base #\"", "+", "str", "(", "i", "+", "1", ")", "+", "\": \"", ",", "\"agent_base\"", "+", "str", "(", "i", "+", "1", ")", "+", "\"_center\"", ")", ",", "i", ")", "\n", "\n", "", "self", ".", "word_plot", "(", "font_grid", ")", "\n", "self", ".", "set_initial_value_function", "(", ")", "\n", "self", ".", "applied_flag", "=", "self", ".", "global_applied_flag", "[", "2", "]", "\n", "\n", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "\n", "", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n", "self", ".", "reset", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "reset", ".", "setGeometry", "(", "220", ",", "730", ",", "200", ",", "50", ")", "\n", "self", ".", "reset", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "reset", ".", "setText", "(", "'Reset'", ")", "\n", "self", ".", "reset", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "reset", ".", "clicked", ".", "connect", "(", "self", ".", "reset_function", ")", "\n", "\n", "self", ".", "apply", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "apply", ".", "setGeometry", "(", "220", ",", "800", ",", "200", ",", "50", ")", "\n", "self", ".", "apply", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "apply", ".", "setText", "(", "'Apply'", ")", "\n", "self", ".", "apply", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "apply", ".", "clicked", ".", "connect", "(", "self", ".", "apply_function", ")", "\n", "\n", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "690", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1070", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.word_plot": [[2402, 2411], ["range", "range", "QLabel", "FireCommander.agent_base_location_define.grid_word.setGeometry", "FireCommander.agent_base_location_define.grid_word.setFont", "FireCommander.agent_base_location_define.grid_word.setObjectName", "FireCommander.agent_base_location_define.grid_word.setText", "str", "str", "round", "round"], "methods", ["None"], ["", "def", "word_plot", "(", "self", ",", "font", ")", ":", "\n", "# Display the coordinate within the grid", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "self", ".", "grid_word", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "grid_word", ".", "setGeometry", "(", "1040", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "self", ".", "grid_word", ".", "setFont", "(", "font", ")", "\n", "self", ".", "grid_word", ".", "setObjectName", "(", "\"Grid_Word\"", ")", "\n", "self", ".", "grid_word", ".", "setText", "(", "self", ".", "x_coord_list", "[", "i", "]", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "//", "10", ")", ")", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "%", "10", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.paintEvent": [[2412, 2466], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "range", "QPen", "QBrush", "QPen", "QBrush", "range", "QPainter", "range", "list", "QColor", "QColor", "range", "numpy.zeros", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QColor"], "methods", ["None"], ["", "", "", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter", "=", "QPainter", "(", "self", ")", "\n", "painter", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter", ".", "drawRect", "(", "110", ",", "90", ",", "420", ",", "600", ")", "\n", "\n", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "560", ",", "90", ",", "950", ",", "800", ")", "\n", "\n", "# Paint the grid (Previous)", "\n", "paint_grid", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "0", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "0", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "2", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "225", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "3", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "165", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "4", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "255", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "5", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "65", ",", "105", ",", "225", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "6", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "0", ",", "191", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "\n", "", "", "", "if", "self", ".", "update_flag", "==", "1", ":", "\n", "            ", "paint_grid2", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                    ", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "2", ":", "\n", "                        ", "paint_grid2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "225", ",", "0", ")", ")", ")", "\n", "paint_grid2", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "", "", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.buttonclicked": [[2467, 2495], ["QFont", "QFont.setPointSize", "FireCommander.agent_base_location_define.buttongroup.checkedId", "FireCommander.agent_base_location_define.agent_base_orient_Display.setText", "FireCommander.agent_base_location_define.note.setText", "QPalette", "FireCommander.agent_base_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.agent_base_location_define.applied_display.setText", "FireCommander.agent_base_location_define.applied_display.setPalette", "FireCommander.agent_base_location_define.agent_base_orient_Display.setText", "FireCommander.agent_base_location_define.note.setText", "QPalette", "FireCommander.agent_base_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.agent_base_location_define.applied_display.setText", "FireCommander.agent_base_location_define.applied_display.setPalette", "str"], "methods", ["None"], ["", "", "def", "buttonclicked", "(", "self", ")", ":", "\n", "        ", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "if", "self", ".", "buttongroup", ".", "checkedId", "(", ")", "==", "11", ":", "\n", "            ", "self", ".", "orient_flag", "=", "0", "\n", "self", ".", "agent_base_orient_Display", ".", "setText", "(", "'Horizontal'", ")", "\n", "\n", "self", ".", "note", ".", "setText", "(", "\n", "\"You can only pose the entire agent base \\nwithin 1 and \"", "+", "str", "(", "self", ".", "grid_size", "-", "1", ")", ")", "\n", "self", ".", "applied_flag", "=", "0", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "orient_flag", "=", "1", "\n", "self", ".", "agent_base_orient_Display", ".", "setText", "(", "'Vertical'", ")", "\n", "\n", "self", ".", "note", ".", "setText", "(", "\n", "\"You can only pose the entire agent base \\nwithin A and \"", "+", "self", ".", "x_coord_list", "[", "self", ".", "grid_size", "-", "2", "]", ")", "\n", "self", ".", "applied_flag", "=", "0", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.agent_base_location_determination": [[2496, 2527], ["FireCommander.agent_base_location_define.raw_list[].split", "QMessageBox.warning", "len", "QMessageBox.warning", "QMessageBox.warning", "int", "int", "FireCommander.agent_base_location_define.x_coord_list.index", "int", "QMessageBox.warning", "QMessageBox.warning", "str", "FireCommander.agent_base_location_define.overlap_check", "QMessageBox.warning", "QMessageBox.warning"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.overlap_check"], ["", "", "def", "agent_base_location_determination", "(", "self", ",", "index", ")", ":", "\n", "        ", "default", "=", "False", "\n", "raw_coord_init", "=", "self", ".", "raw_list", "[", "index", "]", ".", "split", "(", "'-'", ")", "\n", "if", "(", "raw_coord_init", "[", "0", "]", "==", "''", ")", "or", "(", "raw_coord_init", "[", "1", "]", "==", "''", ")", "or", "(", "len", "(", "raw_coord_init", "[", "1", "]", ")", "!=", "2", ")", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Please enter the full coordinates'", ")", "\n", "", "else", ":", "\n", "            ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "'Z'", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "'A'", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should be capital letter'", ")", "\n", "", "else", ":", "\n", "                ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "self", ".", "x_coord_list", "[", "self", ".", "grid_size", "-", "1", "]", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "self", ".", "x_coord_list", "[", "0", "]", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", ">", "self", ".", "grid_size", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", "<", "1", ")", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should locate within the grid range (Now is '", "+", "str", "(", "self", ".", "grid_size", ")", "+", "')'", ")", "\n", "", "else", ":", "\n", "                    ", "raw_coord", "=", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord_init", "[", "0", "]", ")", ",", "int", "(", "raw_coord_init", "[", "1", "]", ")", "]", "\n", "if", "(", "(", "(", "raw_coord", "[", "0", "]", "==", "(", "self", ".", "grid_size", "-", "1", ")", ")", "or", "(", "raw_coord", "[", "1", "]", ">=", "(", "self", ".", "grid_size", "-", "2", ")", ")", ")", "and", "(", "self", ".", "orient_flag", "==", "1", ")", ")", "or", "(", "(", "(", "raw_coord", "[", "1", "]", "==", "(", "self", ".", "grid_size", ")", ")", "or", "(", "raw_coord", "[", "0", "]", ">=", "self", ".", "grid_size", "-", "3", ")", ")", "and", "(", "self", ".", "orient_flag", "==", "0", ")", ")", ":", "\n", "                        ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Part of the agent base exceeds the world range'", ")", "\n", "", "elif", "not", "self", ".", "overlap_check", "(", "raw_coord", "[", "0", "]", ",", "raw_coord", "[", "1", "]", "-", "1", ")", "and", "self", ".", "applied_flag", "==", "0", ":", "\n", "                        ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Agent base overlaps with existing objects'", ")", "\n", "", "else", ":", "\n", "                        ", "if", "self", ".", "orient_flag", "==", "1", ":", "\n", "                            ", "if", "(", "raw_coord", "[", "0", "]", "!=", "0", ")", "and", "(", "raw_coord", "[", "0", "]", "!=", "(", "self", ".", "grid_size", "-", "2", ")", ")", ":", "\n", "                                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "\n", "'Invalid input: Please follow the instruction on the agent base position'", ")", "\n", "", "else", ":", "\n", "                                ", "default", "=", "True", "\n", "", "", "else", ":", "\n", "                            ", "if", "(", "raw_coord", "[", "1", "]", "!=", "1", ")", "and", "(", "raw_coord", "[", "1", "]", "!=", "(", "self", ".", "grid_size", "-", "1", ")", ")", ":", "\n", "                                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "\n", "'Invalid input: Please follow the instruction on the agent base position'", ")", "\n", "", "else", ":", "\n", "                                ", "default", "=", "True", "\n", "", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.array_to_string": [[2528, 2535], ["str", "round", "str", "round", "round", "round", "str"], "methods", ["None"], ["", "def", "array_to_string", "(", "self", ",", "list", ")", ":", "\n", "        ", "if", "self", ".", "orient_flag", "==", "1", ":", "\n", "            ", "raw_list", "=", "[", "round", "(", "list", "[", "0", "]", "//", "100", ")", "-", "1", ",", "round", "(", "list", "[", "1", "]", "//", "100", ")", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "raw_list", "=", "[", "round", "(", "list", "[", "0", "]", "//", "100", ")", "-", "2", ",", "round", "(", "list", "[", "1", "]", "//", "100", ")", "]", "\n", "", "out_str", "=", "str", "(", "self", ".", "x_coord_list", "[", "raw_list", "[", "0", "]", "]", ")", "+", "'-'", "+", "str", "(", "raw_list", "[", "1", "]", "//", "10", ")", "+", "str", "(", "raw_list", "[", "1", "]", "%", "10", ")", "\n", "return", "out_str", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.transmit_value": [[2536, 2541], ["len", "FireCommander.agent_base_location_define.array_to_string"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string"], ["", "def", "transmit_value", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "out_list", "[", "0", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "raw_list", "[", "0", "]", "=", "''", "\n", "", "else", ":", "\n", "            ", "self", ".", "raw_list", "[", "0", "]", "=", "self", ".", "array_to_string", "(", "self", ".", "out_list", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.set_initial_value_function": [[2542, 2544], ["FireCommander.agent_base_location_define.agent_base1_center_Edit.setText"], "methods", ["None"], ["", "", "def", "set_initial_value_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "agent_base1_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.reset_function": [[2545, 2551], ["list", "FireCommander.agent_base_location_define.agent_base1_center_Edit.clear", "FireCommander.agent_base_location_define.update", "numpy.zeros"], "methods", ["None"], ["", "def", "reset_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "agent_base1_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "0", "]", "=", "''", "\n", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.overlap_check": [[2552, 2568], ["None"], "methods", ["None"], ["", "def", "overlap_check", "(", "self", ",", "pos_x", ",", "pos_y", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "orient_flag", "==", "1", ":", "\n", "            ", "if", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "+", "2", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "2", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "+", "3", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "3", "]", "==", "0", ")", ":", "\n", "                ", "default", "=", "True", "\n", "", "", "else", ":", "\n", "            ", "if", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "2", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "3", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "2", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "3", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", ":", "\n", "                ", "default", "=", "True", "\n", "\n", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.apply_function": [[2569, 2612], ["range", "range", "range", "QPalette", "FireCommander.agent_base_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.agent_base_location_define.applied_display.setText", "FireCommander.agent_base_location_define.applied_display.setPalette", "FireCommander.agent_base_location_define.update", "QPalette", "FireCommander.agent_base_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.agent_base_location_define.applied_display.setText", "FireCommander.agent_base_location_define.applied_display.setPalette", "FireCommander.agent_base_location_define.agent_base_location_determination", "list", "FireCommander.agent_base_location_define.raw_list[].split", "QColor", "numpy.zeros", "range", "range", "range", "range", "FireCommander.agent_base_location_define.x_coord_list.index", "int", "FireCommander.agent_base_location_define.x_coord_list.index", "int"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.agent_base_location_determination"], ["", "def", "apply_function", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "2", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "2", ":", "\n", "                    ", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "\n", "", "", "", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "1", ")", ":", "\n", "            ", "if", "(", "not", "self", ".", "agent_base_location_determination", "(", "i", ")", ")", ":", "\n", "                ", "determine_flag", "=", "False", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "\n", "", "if", "determine_flag", ":", "\n", "                ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "if", "self", ".", "orient_flag", "==", "1", ":", "\n", "                    ", "for", "i1", "in", "range", "(", "2", ")", ":", "\n", "                        ", "for", "j1", "in", "range", "(", "4", ")", ":", "\n", "                            ", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "i1", "]", "[", "\n", "int", "(", "raw_coord", "[", "1", "]", ")", "+", "j1", "-", "1", "]", "=", "2", "\n", "", "", "", "else", ":", "\n", "                    ", "for", "i1", "in", "range", "(", "4", ")", ":", "\n", "                        ", "for", "j1", "in", "range", "(", "2", ")", ":", "\n", "                            ", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "i1", "]", "[", "\n", "int", "(", "raw_coord", "[", "1", "]", ")", "+", "j1", "-", "1", "]", "=", "2", "\n", "\n", "", "", "", "", "", "if", "determine_flag", ":", "\n", "            ", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "applied_flag", "=", "1", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "self", ".", "update", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_flag", "=", "0", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.back_function": [[2613, 2626], ["range", "FireCommander.agent_base_location_define.hide", "FireCommander.agent_base_location_define.screen.show", "range", "FireCommander.fire_setting_spec", "FireCommander.fire_setting_uni"], "methods", ["None"], ["", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_Loci", "[", "2", "]", "=", "[", "[", "]", ",", "1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "2", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "", "", "self", ".", "global_applied_flag", "[", "2", "]", "=", "0", "\n", "self", ".", "hide", "(", ")", "\n", "if", "self", ".", "set_Loci", "[", "1", "]", "[", "9", "]", "==", "1", ":", "\n", "            ", "self", ".", "screen", "=", "fire_setting_spec", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "screen", "=", "fire_setting_uni", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.next_function": [[2627, 2657], ["QMessageBox.warning", "range", "range", "FireCommander.agent_base_location_define.hide", "FireCommander.house_location_define", "FireCommander.agent_base_location_define.screen.show", "FireCommander.agent_base_location_define.agent_base_location_determination", "FireCommander.agent_base_location_define.raw_list[].split", "range", "range", "range", "range", "int", "FireCommander.agent_base_location_define.x_coord_list.index", "int", "FireCommander.agent_base_location_define.x_coord_list.index", "FireCommander.agent_base_location_define.x_coord_list.index", "int", "FireCommander.agent_base_location_define.x_coord_list.index", "int"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.agent_base_location_define.agent_base_location_determination"], ["", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Please view the location of each agent base first'", ")", "\n", "", "else", ":", "\n", "            ", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "1", ")", ":", "\n", "                ", "if", "(", "not", "self", ".", "agent_base_location_determination", "(", "i", ")", ")", ":", "\n", "                    ", "determine_flag", "=", "False", "\n", "\n", "", "", "if", "determine_flag", ":", "\n", "                ", "new_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ")", ":", "\n", "                    ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "\n", "if", "self", ".", "orient_flag", "==", "1", ":", "\n", "                        ", "new_list", "=", "[", "(", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", ")", "*", "100", ",", "(", "int", "(", "raw_coord", "[", "1", "]", ")", "+", "1", ")", "*", "100", "]", "\n", "for", "i1", "in", "range", "(", "2", ")", ":", "\n", "                            ", "for", "j1", "in", "range", "(", "4", ")", ":", "\n", "                                ", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "i1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "+", "j1", "-", "1", "]", "=", "2", "\n", "", "", "", "else", ":", "\n", "                        ", "new_list", "=", "[", "(", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "2", ")", "*", "100", ",", "(", "int", "(", "raw_coord", "[", "1", "]", ")", ")", "*", "100", "]", "\n", "for", "i1", "in", "range", "(", "4", ")", ":", "\n", "                            ", "for", "j1", "in", "range", "(", "2", ")", ":", "\n", "                                ", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "i1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "+", "j1", "-", "1", "]", "=", "2", "\n", "\n", "", "", "", "", "self", ".", "set_Loci", "[", "2", "]", "=", "[", "new_list", ",", "self", ".", "orient_flag", "]", "\n", "self", ".", "global_applied_flag", "[", "2", "]", "=", "self", ".", "applied_flag", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "house_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.__init__": [[2660, 2674], ["QWidget.__init__", "round", "list", "FireCommander.house_location_define.init_ui", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_Loci", ",", "current_grid", ",", "applied_flag", ")", ":", "\n", "        ", "super", "(", "house_location_define", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_Loci", "=", "set_Loci", "\n", "self", ".", "out_list", "=", "set_Loci", "[", "3", "]", "\n", "self", ".", "current_grid", "=", "current_grid", "\n", "self", ".", "grid_size", "=", "round", "(", "self", ".", "environment_para", "[", "0", "]", "//", "100", ")", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "self", ".", "global_applied_flag", "=", "applied_flag", "\n", "\n", "self", ".", "x_coord_list", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", ",", "'K'", ",", "'L'", ",", "'M'", ",", "'N'", ",", "'O'", "]", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.init_ui": [[2675, 2798], ["FireCommander.house_location_define.resize", "QPalette", "QPalette.setBrush", "FireCommander.house_location_define.setPalette", "FireCommander.house_location_define.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont", "range", "FireCommander.house_location_define.transmit_value", "QPalette", "QLabel", "FireCommander.house_location_define.applied_display.setFont", "FireCommander.house_location_define.applied_display.setObjectName", "QLabel", "FireCommander.house_location_define.setting_init.setGeometry", "FireCommander.house_location_define.setting_init.setFont", "FireCommander.house_location_define.setting_init.setObjectName", "FireCommander.house_location_define.setting_init.setText", "FireCommander.parameter_Display_Ctl", "QLabel", "FireCommander.house_location_define.size_note.setGeometry", "FireCommander.house_location_define.size_note.setFont", "FireCommander.house_location_define.size_note.setObjectName", "FireCommander.house_location_define.size_note.setText", "QLabel", "FireCommander.house_location_define.house_size.setGeometry", "FireCommander.house_location_define.house_size.setFont", "FireCommander.house_location_define.house_size.setObjectName", "FireCommander.house_location_define.house_size.setText", "FireCommander.house_location_define.word_plot", "FireCommander.house_location_define.set_initial_value_function", "FireCommander.house_location_define.applied_display.setPalette", "QPushButton", "FireCommander.house_location_define.reset.setGeometry", "FireCommander.house_location_define.reset.setFont", "FireCommander.house_location_define.reset.setText", "FireCommander.house_location_define.reset.setStyleSheet", "FireCommander.house_location_define.reset.clicked.connect", "QPushButton", "FireCommander.house_location_define.apply.setGeometry", "FireCommander.house_location_define.apply.setFont", "FireCommander.house_location_define.apply.setText", "FireCommander.house_location_define.apply.setStyleSheet", "FireCommander.house_location_define.apply.clicked.connect", "QPushButton", "FireCommander.house_location_define.back.setGeometry", "FireCommander.house_location_define.back.setFont", "FireCommander.house_location_define.back.setText", "FireCommander.house_location_define.back.setStyleSheet", "FireCommander.house_location_define.back.clicked.connect", "QPushButton", "FireCommander.house_location_define.next.setGeometry", "FireCommander.house_location_define.next.setFont", "FireCommander.house_location_define.next.setText", "FireCommander.house_location_define.next.setStyleSheet", "FireCommander.house_location_define.next.clicked.connect", "QBrush", "FireCommander.house_location_define.raw_list.append", "str", "QLabel", "FireCommander.house_location_define.location_init.setGeometry", "FireCommander.house_location_define.location_init.setFont", "FireCommander.house_location_define.location_init.setObjectName", "FireCommander.house_location_define.location_init.setText", "QLabel", "FireCommander.house_location_define.location_init.setGeometry", "FireCommander.house_location_define.location_init.setFont", "FireCommander.house_location_define.location_init.setObjectName", "FireCommander.house_location_define.location_init.setText", "range", "FireCommander.house_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.house_location_define.applied_display.setText", "FireCommander.house_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.house_location_define.applied_display.setText", "QPixmap", "FireCommander.environment_Setting_Ctl", "QColor", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transmit_value", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.word_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.set_initial_value_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'House Location'", ")", "\n", "\n", "self", ".", "left_upper_x", "=", "120", "\n", "self", ".", "left_upper_y", "=", "100", "\n", "self", ".", "right_upper_x", "=", "640", "\n", "self", ".", "right_upper_y", "=", "120", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "400", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_grid", "=", "QFont", "(", "'arial'", ")", "\n", "font_grid", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_button_small", "=", "QFont", "(", "'arial'", ")", "\n", "font_button_small", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "font_Bold", "=", "QFont", "(", "'arial'", ",", "14", ",", "75", ")", "\n", "\n", "self", ".", "raw_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "3", "]", ")", ":", "\n", "            ", "self", ".", "raw_list", ".", "append", "(", "''", ")", "\n", "", "self", ".", "transmit_value", "(", ")", "\n", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "applied_display", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "applied_display", ".", "setObjectName", "(", "\"Applied_Display\"", ")", "\n", "\n", "self", ".", "setting_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "setting_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "setting_init", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "setting_init", ".", "setObjectName", "(", "\"House_Setting\"", ")", "\n", "self", ".", "setting_init", ".", "setText", "(", "\"House Setting:\"", ")", "\n", "\n", "# House number input controller", "\n", "parameter_Display_Ctl", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "1.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Houses:\"", ",", "\"num_houses\"", ")", ",", "str", "(", "self", ".", "environment_para", "[", "3", "]", ")", ")", "\n", "\n", "self", ".", "size_note", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "size_note", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "60", ",", "30", ")", "\n", "self", ".", "size_note", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "size_note", ".", "setObjectName", "(", "'Note'", ")", "\n", "self", ".", "size_note", ".", "setText", "(", "'Note: '", ")", "\n", "\n", "self", ".", "house_size", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "house_size", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "60", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "380", ",", "30", ")", "\n", "self", ".", "house_size", ".", "setFont", "(", "font", ")", "\n", "self", ".", "house_size", ".", "setObjectName", "(", "'House Size'", ")", "\n", "self", ".", "house_size", ".", "setText", "(", "'A 2 \u00d7 2 Grid will be Marked'", ")", "\n", "\n", "if", "self", ".", "environment_para", "[", "3", "]", "==", "0", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "\n", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"No_house\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"No House in this Environment\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"house_location\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"House Locations:\"", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "3", "]", ")", ":", "\n", "# Initialize fire center input controller", "\n", "                ", "environment_Setting_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "(", "4.5", "+", "i", ")", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"House #\"", "+", "str", "(", "i", "+", "1", ")", "+", "\": \"", ",", "\"house\"", "+", "str", "(", "i", "+", "1", ")", "+", "\"_center\"", ")", ",", "i", ")", "\n", "", "", "self", ".", "word_plot", "(", "font_grid", ")", "\n", "self", ".", "set_initial_value_function", "(", ")", "\n", "\n", "self", ".", "applied_flag", "=", "self", ".", "global_applied_flag", "[", "3", "]", "\n", "\n", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "\n", "", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n", "self", ".", "reset", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "reset", ".", "setGeometry", "(", "220", ",", "730", ",", "200", ",", "50", ")", "\n", "self", ".", "reset", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "reset", ".", "setText", "(", "'Reset'", ")", "\n", "self", ".", "reset", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "reset", ".", "clicked", ".", "connect", "(", "self", ".", "reset_function", ")", "\n", "\n", "self", ".", "apply", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "apply", ".", "setGeometry", "(", "220", ",", "800", ",", "200", ",", "50", ")", "\n", "self", ".", "apply", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "apply", ".", "setText", "(", "'Apply'", ")", "\n", "self", ".", "apply", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "apply", ".", "clicked", ".", "connect", "(", "self", ".", "apply_function", ")", "\n", "\n", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "690", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1070", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.word_plot": [[2799, 2808], ["range", "range", "QLabel", "FireCommander.house_location_define.grid_word.setGeometry", "FireCommander.house_location_define.grid_word.setFont", "FireCommander.house_location_define.grid_word.setObjectName", "FireCommander.house_location_define.grid_word.setText", "str", "str", "round", "round"], "methods", ["None"], ["", "def", "word_plot", "(", "self", ",", "font", ")", ":", "\n", "# Display the coordinate within the grid", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "self", ".", "grid_word", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "grid_word", ".", "setGeometry", "(", "1040", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "self", ".", "grid_word", ".", "setFont", "(", "font", ")", "\n", "self", ".", "grid_word", ".", "setObjectName", "(", "\"Grid_Word\"", ")", "\n", "self", ".", "grid_word", ".", "setText", "(", "self", ".", "x_coord_list", "[", "i", "]", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "//", "10", ")", ")", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "%", "10", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.paintEvent": [[2809, 2863], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "range", "QPen", "QBrush", "QPen", "QBrush", "range", "QPainter", "range", "list", "QColor", "QColor", "range", "numpy.zeros", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QColor"], "methods", ["None"], ["", "", "", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter", "=", "QPainter", "(", "self", ")", "\n", "painter", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter", ".", "drawRect", "(", "110", ",", "90", ",", "420", ",", "600", ")", "\n", "\n", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "560", ",", "90", ",", "950", ",", "800", ")", "\n", "\n", "# Paint the grid (Previous)", "\n", "paint_grid", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "0", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "0", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "2", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "225", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "3", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "165", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "4", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "255", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "5", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "65", ",", "105", ",", "225", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "6", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "0", ",", "191", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "\n", "", "", "", "if", "self", ".", "update_flag", "==", "1", ":", "\n", "            ", "paint_grid2", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                    ", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "3", ":", "\n", "                        ", "paint_grid2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "165", ",", "0", ")", ")", ")", "\n", "paint_grid2", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "", "", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.house_location_determination": [[2864, 2885], ["FireCommander.house_location_define.raw_list[].split", "QMessageBox.warning", "len", "QMessageBox.warning", "QMessageBox.warning", "int", "int", "FireCommander.house_location_define.x_coord_list.index", "int", "QMessageBox.warning", "QMessageBox.warning", "str", "FireCommander.house_location_define.overlap_check", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.overlap_check"], ["", "", "def", "house_location_determination", "(", "self", ",", "index", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "environment_para", "[", "3", "]", ">", "0", ":", "\n", "            ", "raw_coord_init", "=", "self", ".", "raw_list", "[", "index", "]", ".", "split", "(", "'-'", ")", "\n", "if", "(", "raw_coord_init", "[", "0", "]", "==", "''", ")", "or", "(", "raw_coord_init", "[", "1", "]", "==", "''", ")", "or", "(", "len", "(", "raw_coord_init", "[", "1", "]", ")", "!=", "2", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Please enter the full coordinates'", ")", "\n", "", "else", ":", "\n", "                ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "'Z'", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "'A'", ")", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should be capital letter'", ")", "\n", "", "else", ":", "\n", "                    ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "self", ".", "x_coord_list", "[", "self", ".", "grid_size", "-", "1", "]", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "self", ".", "x_coord_list", "[", "0", "]", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", ">", "self", ".", "grid_size", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", "<", "1", ")", ":", "\n", "                        ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should locate within the grid range (Now is '", "+", "str", "(", "self", ".", "grid_size", ")", "+", "')'", ")", "\n", "", "else", ":", "\n", "                        ", "raw_coord", "=", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord_init", "[", "0", "]", ")", ",", "int", "(", "raw_coord_init", "[", "1", "]", ")", "]", "\n", "if", "(", "raw_coord", "[", "0", "]", "==", "(", "self", ".", "grid_size", "-", "1", ")", ")", "or", "(", "raw_coord", "[", "1", "]", "==", "self", ".", "grid_size", ")", ":", "\n", "                            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Part of the houses exceeds the world range'", ")", "\n", "", "elif", "not", "self", ".", "overlap_check", "(", "raw_coord", "[", "0", "]", ",", "raw_coord", "[", "1", "]", "-", "1", ")", "and", "self", ".", "applied_flag", "==", "0", ":", "\n", "                            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: House '", "+", "str", "(", "index", "+", "1", ")", "+", "' overlaps with existing objects'", ")", "\n", "", "else", ":", "\n", "                            ", "default", "=", "True", "\n", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.array_to_string": [[2886, 2890], ["round", "str", "round", "str", "str"], "methods", ["None"], ["", "def", "array_to_string", "(", "self", ",", "list", ")", ":", "\n", "        ", "raw_list", "=", "[", "round", "(", "list", "[", "0", "]", "//", "100", ")", "-", "1", ",", "round", "(", "list", "[", "1", "]", "//", "100", ")", "]", "\n", "out_str", "=", "str", "(", "self", ".", "x_coord_list", "[", "raw_list", "[", "0", "]", "]", ")", "+", "'-'", "+", "str", "(", "raw_list", "[", "1", "]", "//", "10", ")", "+", "str", "(", "raw_list", "[", "1", "]", "%", "10", ")", "\n", "return", "out_str", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.transmit_value": [[2891, 2897], ["range", "len", "len", "FireCommander.house_location_define.array_to_string"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string"], ["", "def", "transmit_value", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "raw_list", ")", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "out_list", ")", "==", "0", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "''", "\n", "", "else", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "self", ".", "array_to_string", "(", "self", ".", "out_list", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.set_initial_value_function": [[2898, 2909], ["FireCommander.house_location_define.house1_center_Edit.setText", "FireCommander.house_location_define.house2_center_Edit.setText", "FireCommander.house_location_define.house3_center_Edit.setText", "FireCommander.house_location_define.house4_center_Edit.setText", "FireCommander.house_location_define.house5_center_Edit.setText"], "methods", ["None"], ["", "", "", "def", "set_initial_value_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "3", "]", ">", "0", ":", "\n", "            ", "self", ".", "house1_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "0", "]", ")", "\n", "if", "self", ".", "environment_para", "[", "3", "]", ">", "1", ":", "\n", "                ", "self", ".", "house2_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "1", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "3", "]", ">", "2", ":", "\n", "                ", "self", ".", "house3_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "2", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "3", "]", ">", "3", ":", "\n", "                ", "self", ".", "house4_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "3", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "3", "]", ">", "4", ":", "\n", "                ", "self", ".", "house5_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "4", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.reset_function": [[2910, 2929], ["list", "FireCommander.house_location_define.update", "numpy.zeros", "FireCommander.house_location_define.house1_center_Edit.clear", "FireCommander.house_location_define.house2_center_Edit.clear", "FireCommander.house_location_define.house3_center_Edit.clear", "FireCommander.house_location_define.house4_center_Edit.clear", "FireCommander.house_location_define.house5_center_Edit.clear"], "methods", ["None"], ["", "", "", "def", "reset_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "if", "self", ".", "environment_para", "[", "3", "]", ">", "0", ":", "\n", "            ", "self", ".", "house1_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "0", "]", "=", "''", "\n", "if", "self", ".", "environment_para", "[", "3", "]", ">", "1", ":", "\n", "                ", "self", ".", "house2_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "1", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "3", "]", ">", "2", ":", "\n", "                ", "self", ".", "house3_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "2", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "3", "]", ">", "3", ":", "\n", "                ", "self", ".", "house4_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "3", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "3", "]", ">", "4", ":", "\n", "                ", "self", ".", "house5_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "4", "]", "=", "''", "\n", "", "", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.overlap_check": [[2930, 2938], ["None"], "methods", ["None"], ["", "def", "overlap_check", "(", "self", ",", "pos_x", ",", "pos_y", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "\n", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", ":", "\n", "            ", "if", "(", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "\n", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", ":", "\n", "                ", "default", "=", "True", "\n", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.apply_function": [[2939, 2977], ["range", "range", "range", "QPalette", "FireCommander.house_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.house_location_define.applied_display.setText", "FireCommander.house_location_define.applied_display.setPalette", "FireCommander.house_location_define.update", "QPalette", "FireCommander.house_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.house_location_define.applied_display.setText", "FireCommander.house_location_define.applied_display.setPalette", "list", "FireCommander.house_location_define.raw_list[].split", "QColor", "FireCommander.house_location_define.house_location_determination", "numpy.zeros", "int", "int", "FireCommander.house_location_define.x_coord_list.index", "int", "FireCommander.house_location_define.x_coord_list.index", "int", "FireCommander.house_location_define.x_coord_list.index", "FireCommander.house_location_define.x_coord_list.index"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.house_location_determination"], ["", "def", "apply_function", "(", "self", ")", ":", "\n", "        ", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "3", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "3", ":", "\n", "                    ", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "\n", "", "", "", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "3", "]", ")", ":", "\n", "            ", "if", "(", "self", ".", "environment_para", "[", "3", "]", ">", "i", ")", "and", "(", "not", "self", ".", "house_location_determination", "(", "i", ")", ")", ":", "\n", "                ", "determine_flag", "=", "False", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "break", "\n", "\n", "", "if", "determine_flag", ":", "\n", "                ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "3", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "3", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "3", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "3", "\n", "\n", "", "", "if", "determine_flag", ":", "\n", "            ", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "applied_flag", "=", "1", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "self", ".", "update", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_flag", "=", "0", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.back_function": [[2978, 2989], ["range", "FireCommander.house_location_define.hide", "FireCommander.agent_base_location_define", "FireCommander.house_location_define.screen.show", "range"], "methods", ["None"], ["", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_Loci", "[", "3", "]", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "3", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "", "", "self", ".", "global_applied_flag", "[", "3", "]", "=", "0", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "agent_base_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "\n", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.next_function": [[2990, 3016], ["QMessageBox.warning", "range", "range", "FireCommander.house_location_define.hide", "FireCommander.hospital_location_define", "FireCommander.house_location_define.screen.show", "list", "FireCommander.house_location_define.raw_list[].split", "new_list.append", "FireCommander.house_location_define.house_location_determination", "numpy.zeros", "int", "int", "int", "FireCommander.house_location_define.x_coord_list.index", "int", "FireCommander.house_location_define.x_coord_list.index", "int", "FireCommander.house_location_define.x_coord_list.index", "FireCommander.house_location_define.x_coord_list.index", "FireCommander.house_location_define.x_coord_list.index"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.house_location_define.house_location_determination"], ["", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Please view the location of each house first'", ")", "\n", "", "else", ":", "\n", "            ", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "3", "]", ")", ":", "\n", "                ", "if", "(", "self", ".", "environment_para", "[", "3", "]", ">", "i", ")", "and", "(", "not", "self", ".", "house_location_determination", "(", "i", ")", ")", ":", "\n", "                    ", "determine_flag", "=", "False", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "break", "\n", "", "", "if", "determine_flag", ":", "\n", "                ", "new_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "3", "]", ")", ":", "\n", "                    ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "new_list", ".", "append", "(", "[", "(", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", ")", "*", "100", ",", "int", "(", "raw_coord", "[", "1", "]", ")", "*", "100", "]", ")", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "3", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "3", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "3", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "3", "\n", "\n", "", "self", ".", "set_Loci", "[", "3", "]", "=", "new_list", "\n", "self", ".", "global_applied_flag", "[", "3", "]", "=", "self", ".", "applied_flag", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "hospital_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "\n", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.__init__": [[3019, 3033], ["QWidget.__init__", "round", "list", "FireCommander.hospital_location_define.init_ui", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_Loci", ",", "current_grid", ",", "applied_flag", ")", ":", "\n", "        ", "super", "(", "hospital_location_define", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_Loci", "=", "set_Loci", "\n", "self", ".", "out_list", "=", "set_Loci", "[", "4", "]", "\n", "self", ".", "current_grid", "=", "current_grid", "\n", "self", ".", "grid_size", "=", "round", "(", "self", ".", "environment_para", "[", "0", "]", "//", "100", ")", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "global_applied_flag", "=", "applied_flag", "\n", "#self.applied_flag = applied_flag[4]", "\n", "self", ".", "update_flag", "=", "0", "\n", "self", ".", "x_coord_list", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", ",", "'K'", ",", "'L'", ",", "'M'", ",", "'N'", ",", "'O'", "]", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.init_ui": [[3034, 3157], ["FireCommander.hospital_location_define.resize", "QPalette", "QPalette.setBrush", "FireCommander.hospital_location_define.setPalette", "FireCommander.hospital_location_define.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont", "range", "FireCommander.hospital_location_define.transmit_value", "QPalette", "QLabel", "FireCommander.hospital_location_define.applied_display.setFont", "FireCommander.hospital_location_define.applied_display.setObjectName", "QLabel", "FireCommander.hospital_location_define.setting_init.setGeometry", "FireCommander.hospital_location_define.setting_init.setFont", "FireCommander.hospital_location_define.setting_init.setObjectName", "FireCommander.hospital_location_define.setting_init.setText", "FireCommander.parameter_Display_Ctl", "QLabel", "FireCommander.hospital_location_define.size_note.setGeometry", "FireCommander.hospital_location_define.size_note.setFont", "FireCommander.hospital_location_define.size_note.setObjectName", "FireCommander.hospital_location_define.size_note.setText", "QLabel", "FireCommander.hospital_location_define.hospital_size.setGeometry", "FireCommander.hospital_location_define.hospital_size.setFont", "FireCommander.hospital_location_define.hospital_size.setObjectName", "FireCommander.hospital_location_define.hospital_size.setText", "FireCommander.hospital_location_define.word_plot", "FireCommander.hospital_location_define.set_initial_value_function", "FireCommander.hospital_location_define.applied_display.setPalette", "QPushButton", "FireCommander.hospital_location_define.reset.setGeometry", "FireCommander.hospital_location_define.reset.setFont", "FireCommander.hospital_location_define.reset.setText", "FireCommander.hospital_location_define.reset.setStyleSheet", "FireCommander.hospital_location_define.reset.clicked.connect", "QPushButton", "FireCommander.hospital_location_define.apply.setGeometry", "FireCommander.hospital_location_define.apply.setFont", "FireCommander.hospital_location_define.apply.setText", "FireCommander.hospital_location_define.apply.setStyleSheet", "FireCommander.hospital_location_define.apply.clicked.connect", "QPushButton", "FireCommander.hospital_location_define.back.setGeometry", "FireCommander.hospital_location_define.back.setFont", "FireCommander.hospital_location_define.back.setText", "FireCommander.hospital_location_define.back.setStyleSheet", "FireCommander.hospital_location_define.back.clicked.connect", "QPushButton", "FireCommander.hospital_location_define.next.setGeometry", "FireCommander.hospital_location_define.next.setFont", "FireCommander.hospital_location_define.next.setText", "FireCommander.hospital_location_define.next.setStyleSheet", "FireCommander.hospital_location_define.next.clicked.connect", "QBrush", "FireCommander.hospital_location_define.raw_list.append", "str", "QLabel", "FireCommander.hospital_location_define.location_init.setGeometry", "FireCommander.hospital_location_define.location_init.setFont", "FireCommander.hospital_location_define.location_init.setObjectName", "FireCommander.hospital_location_define.location_init.setText", "QLabel", "FireCommander.hospital_location_define.location_init.setGeometry", "FireCommander.hospital_location_define.location_init.setFont", "FireCommander.hospital_location_define.location_init.setObjectName", "FireCommander.hospital_location_define.location_init.setText", "range", "FireCommander.hospital_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.hospital_location_define.applied_display.setText", "FireCommander.hospital_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.hospital_location_define.applied_display.setText", "QPixmap", "FireCommander.environment_Setting_Ctl", "QColor", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transmit_value", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.word_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.set_initial_value_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Hospital Location'", ")", "\n", "\n", "self", ".", "left_upper_x", "=", "120", "\n", "self", ".", "left_upper_y", "=", "100", "\n", "self", ".", "right_upper_x", "=", "640", "\n", "self", ".", "right_upper_y", "=", "120", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "400", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_grid", "=", "QFont", "(", "'arial'", ")", "\n", "font_grid", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_button_small", "=", "QFont", "(", "'arial'", ")", "\n", "font_button_small", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "font_Bold", "=", "QFont", "(", "'arial'", ",", "14", ",", "75", ")", "\n", "\n", "self", ".", "raw_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "4", "]", ")", ":", "\n", "            ", "self", ".", "raw_list", ".", "append", "(", "''", ")", "\n", "", "self", ".", "transmit_value", "(", ")", "\n", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "applied_display", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "applied_display", ".", "setObjectName", "(", "\"Applied_Display\"", ")", "\n", "\n", "self", ".", "setting_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "setting_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "setting_init", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "setting_init", ".", "setObjectName", "(", "\"Hospital_Setting\"", ")", "\n", "self", ".", "setting_init", ".", "setText", "(", "\"Hospital Setting:\"", ")", "\n", "\n", "# House number input controller", "\n", "parameter_Display_Ctl", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "1.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Hosptials:\"", ",", "\"num_hospitals\"", ")", ",", "str", "(", "self", ".", "environment_para", "[", "4", "]", ")", ")", "\n", "\n", "self", ".", "size_note", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "size_note", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "60", ",", "30", ")", "\n", "self", ".", "size_note", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "size_note", ".", "setObjectName", "(", "'Note'", ")", "\n", "self", ".", "size_note", ".", "setText", "(", "'Note: '", ")", "\n", "\n", "self", ".", "hospital_size", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "hospital_size", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "60", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "380", ",", "30", ")", "\n", "self", ".", "hospital_size", ".", "setFont", "(", "font", ")", "\n", "self", ".", "hospital_size", ".", "setObjectName", "(", "'Hospital Size'", ")", "\n", "self", ".", "hospital_size", ".", "setText", "(", "'A 2 \u00d7 2 Grid will be Marked'", ")", "\n", "\n", "if", "self", ".", "environment_para", "[", "4", "]", "==", "0", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "\n", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"No_Hospital\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"No Hospital in this Environment\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"hospital_location\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"Hospital Locations:\"", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "4", "]", ")", ":", "\n", "# Initialize fire center input controller", "\n", "                ", "environment_Setting_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "(", "4.5", "+", "i", ")", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Hospital #\"", "+", "str", "(", "i", "+", "1", ")", "+", "\": \"", ",", "\"hospital\"", "+", "str", "(", "i", "+", "1", ")", "+", "\"_center\"", ")", ",", "i", ")", "\n", "\n", "", "", "self", ".", "word_plot", "(", "font_grid", ")", "\n", "self", ".", "set_initial_value_function", "(", ")", "\n", "self", ".", "applied_flag", "=", "self", ".", "global_applied_flag", "[", "4", "]", "\n", "\n", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "\n", "", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n", "self", ".", "reset", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "reset", ".", "setGeometry", "(", "220", ",", "730", ",", "200", ",", "50", ")", "\n", "self", ".", "reset", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "reset", ".", "setText", "(", "'Reset'", ")", "\n", "self", ".", "reset", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "reset", ".", "clicked", ".", "connect", "(", "self", ".", "reset_function", ")", "\n", "\n", "self", ".", "apply", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "apply", ".", "setGeometry", "(", "220", ",", "800", ",", "200", ",", "50", ")", "\n", "self", ".", "apply", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "apply", ".", "setText", "(", "'Apply'", ")", "\n", "self", ".", "apply", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "apply", ".", "clicked", ".", "connect", "(", "self", ".", "apply_function", ")", "\n", "\n", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "690", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1070", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.word_plot": [[3158, 3167], ["range", "range", "QLabel", "FireCommander.hospital_location_define.grid_word.setGeometry", "FireCommander.hospital_location_define.grid_word.setFont", "FireCommander.hospital_location_define.grid_word.setObjectName", "FireCommander.hospital_location_define.grid_word.setText", "str", "str", "round", "round"], "methods", ["None"], ["", "def", "word_plot", "(", "self", ",", "font", ")", ":", "\n", "# Display the coordinate within the grid", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "self", ".", "grid_word", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "grid_word", ".", "setGeometry", "(", "1040", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "self", ".", "grid_word", ".", "setFont", "(", "font", ")", "\n", "self", ".", "grid_word", ".", "setObjectName", "(", "\"Grid_Word\"", ")", "\n", "self", ".", "grid_word", ".", "setText", "(", "self", ".", "x_coord_list", "[", "i", "]", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "//", "10", ")", ")", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "%", "10", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.paintEvent": [[3168, 3222], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "range", "QPen", "QBrush", "QPen", "QBrush", "range", "QPainter", "range", "list", "QColor", "QColor", "range", "numpy.zeros", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QColor"], "methods", ["None"], ["", "", "", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter", "=", "QPainter", "(", "self", ")", "\n", "painter", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter", ".", "drawRect", "(", "110", ",", "90", ",", "420", ",", "600", ")", "\n", "\n", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "560", ",", "90", ",", "950", ",", "800", ")", "\n", "\n", "# Paint the grid (Previous)", "\n", "paint_grid", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "0", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "0", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "2", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "225", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "3", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "165", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "4", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "255", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "5", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "65", ",", "105", ",", "225", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "6", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "0", ",", "191", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "\n", "", "", "", "if", "self", ".", "update_flag", "==", "1", ":", "\n", "            ", "paint_grid2", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                    ", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "4", ":", "\n", "                        ", "paint_grid2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "255", ",", "255", ")", ")", ")", "\n", "paint_grid2", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "", "", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.hospital_location_determination": [[3223, 3244], ["FireCommander.hospital_location_define.raw_list[].split", "QMessageBox.warning", "len", "QMessageBox.warning", "QMessageBox.warning", "int", "int", "FireCommander.hospital_location_define.x_coord_list.index", "int", "QMessageBox.warning", "QMessageBox.warning", "str", "FireCommander.hospital_location_define.overlap_check", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.overlap_check"], ["", "", "def", "hospital_location_determination", "(", "self", ",", "index", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "environment_para", "[", "4", "]", ">", "0", ":", "\n", "            ", "raw_coord_init", "=", "self", ".", "raw_list", "[", "index", "]", ".", "split", "(", "'-'", ")", "\n", "if", "(", "raw_coord_init", "[", "0", "]", "==", "''", ")", "or", "(", "raw_coord_init", "[", "1", "]", "==", "''", ")", "or", "(", "len", "(", "raw_coord_init", "[", "1", "]", ")", "!=", "2", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Please enter the full coordinates'", ")", "\n", "", "else", ":", "\n", "                ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "'Z'", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "'A'", ")", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should be capital letter'", ")", "\n", "", "else", ":", "\n", "                    ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "self", ".", "x_coord_list", "[", "self", ".", "grid_size", "-", "1", "]", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "self", ".", "x_coord_list", "[", "0", "]", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", ">", "self", ".", "grid_size", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", "<", "1", ")", ":", "\n", "                        ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should locate within the grid range (Now is '", "+", "str", "(", "self", ".", "grid_size", ")", "+", "')'", ")", "\n", "", "else", ":", "\n", "                        ", "raw_coord", "=", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord_init", "[", "0", "]", ")", ",", "int", "(", "raw_coord_init", "[", "1", "]", ")", "]", "\n", "if", "(", "raw_coord", "[", "0", "]", "==", "(", "self", ".", "grid_size", "-", "1", ")", ")", "or", "(", "raw_coord", "[", "1", "]", "==", "self", ".", "grid_size", ")", ":", "\n", "                            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Part of the hospitals exceeds the world range'", ")", "\n", "", "elif", "not", "self", ".", "overlap_check", "(", "raw_coord", "[", "0", "]", ",", "raw_coord", "[", "1", "]", "-", "1", ")", "and", "self", ".", "applied_flag", "==", "0", ":", "\n", "                            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Hospital '", "+", "str", "(", "index", "+", "1", ")", "+", "' overlaps with existing objects'", ")", "\n", "", "else", ":", "\n", "                            ", "default", "=", "True", "\n", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.array_to_string": [[3245, 3249], ["round", "str", "round", "str", "str"], "methods", ["None"], ["", "def", "array_to_string", "(", "self", ",", "list", ")", ":", "\n", "        ", "raw_list", "=", "[", "round", "(", "list", "[", "0", "]", "//", "100", ")", "-", "1", ",", "round", "(", "list", "[", "1", "]", "//", "100", ")", "]", "\n", "out_str", "=", "str", "(", "self", ".", "x_coord_list", "[", "raw_list", "[", "0", "]", "]", ")", "+", "'-'", "+", "str", "(", "raw_list", "[", "1", "]", "//", "10", ")", "+", "str", "(", "raw_list", "[", "1", "]", "%", "10", ")", "\n", "return", "out_str", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.transmit_value": [[3250, 3256], ["range", "len", "len", "FireCommander.hospital_location_define.array_to_string"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string"], ["", "def", "transmit_value", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "raw_list", ")", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "out_list", ")", "==", "0", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "''", "\n", "", "else", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "self", ".", "array_to_string", "(", "self", ".", "out_list", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.set_initial_value_function": [[3257, 3268], ["FireCommander.hospital_location_define.hospital1_center_Edit.setText", "FireCommander.hospital_location_define.hospital2_center_Edit.setText", "FireCommander.hospital_location_define.hospital3_center_Edit.setText", "FireCommander.hospital_location_define.hospital4_center_Edit.setText", "FireCommander.hospital_location_define.hospital5_center_Edit.setText"], "methods", ["None"], ["", "", "", "def", "set_initial_value_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "4", "]", ">", "0", ":", "\n", "            ", "self", ".", "hospital1_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "0", "]", ")", "\n", "if", "self", ".", "environment_para", "[", "4", "]", ">", "1", ":", "\n", "                ", "self", ".", "hospital2_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "1", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "4", "]", ">", "2", ":", "\n", "                ", "self", ".", "hospital3_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "2", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "4", "]", ">", "3", ":", "\n", "                ", "self", ".", "hospital4_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "3", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "4", "]", ">", "4", ":", "\n", "                ", "self", ".", "hospital5_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "4", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.reset_function": [[3269, 3288], ["list", "FireCommander.hospital_location_define.update", "numpy.zeros", "FireCommander.hospital_location_define.hospital1_center_Edit.clear", "FireCommander.hospital_location_define.hospital2_center_Edit.clear", "FireCommander.hospital_location_define.hospital3_center_Edit.clear", "FireCommander.hospital_location_define.hospital4_center_Edit.clear", "FireCommander.hospital_location_define.hospital5_center_Edit.clear"], "methods", ["None"], ["", "", "", "def", "reset_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "if", "self", ".", "environment_para", "[", "4", "]", ">", "0", ":", "\n", "            ", "self", ".", "hospital1_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "0", "]", "=", "''", "\n", "if", "self", ".", "environment_para", "[", "4", "]", ">", "1", ":", "\n", "                ", "self", ".", "hospital2_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "1", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "4", "]", ">", "2", ":", "\n", "                ", "self", ".", "hospital3_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "2", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "4", "]", ">", "3", ":", "\n", "                ", "self", ".", "hospital4_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "3", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "4", "]", ">", "4", ":", "\n", "                ", "self", ".", "hospital5_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "4", "]", "=", "''", "\n", "", "", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.overlap_check": [[3289, 3297], ["None"], "methods", ["None"], ["", "def", "overlap_check", "(", "self", ",", "pos_x", ",", "pos_y", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "\n", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", ":", "\n", "            ", "if", "(", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "\n", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", ":", "\n", "                ", "default", "=", "True", "\n", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.apply_function": [[3298, 3336], ["range", "range", "range", "QPalette", "FireCommander.hospital_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.hospital_location_define.applied_display.setText", "FireCommander.hospital_location_define.applied_display.setPalette", "FireCommander.hospital_location_define.update", "QPalette", "FireCommander.hospital_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.hospital_location_define.applied_display.setText", "FireCommander.hospital_location_define.applied_display.setPalette", "list", "FireCommander.hospital_location_define.raw_list[].split", "QColor", "FireCommander.hospital_location_define.hospital_location_determination", "numpy.zeros", "int", "int", "FireCommander.hospital_location_define.x_coord_list.index", "int", "FireCommander.hospital_location_define.x_coord_list.index", "int", "FireCommander.hospital_location_define.x_coord_list.index", "FireCommander.hospital_location_define.x_coord_list.index"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.hospital_location_determination"], ["", "def", "apply_function", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "4", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "4", ":", "\n", "                    ", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "\n", "", "", "", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "4", "]", ")", ":", "\n", "            ", "if", "(", "self", ".", "environment_para", "[", "4", "]", ">", "i", ")", "and", "(", "not", "self", ".", "hospital_location_determination", "(", "i", ")", ")", ":", "\n", "                ", "determine_flag", "=", "False", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "break", "\n", "\n", "", "if", "determine_flag", ":", "\n", "                ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "4", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "4", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "4", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "4", "\n", "\n", "", "", "if", "determine_flag", ":", "\n", "            ", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "applied_flag", "=", "1", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "self", ".", "update", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_flag", "=", "0", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.back_function": [[3337, 3347], ["range", "FireCommander.hospital_location_define.hide", "FireCommander.house_location_define", "FireCommander.hospital_location_define.screen.show", "range"], "methods", ["None"], ["", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_Loci", "[", "4", "]", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "4", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "", "", "self", ".", "global_applied_flag", "[", "4", "]", "=", "0", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "house_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.next_function": [[3348, 3373], ["QMessageBox.warning", "range", "range", "FireCommander.hospital_location_define.hide", "FireCommander.power_station_location_define", "FireCommander.hospital_location_define.screen.show", "FireCommander.hospital_location_define.raw_list[].split", "new_list.append", "FireCommander.hospital_location_define.hospital_location_determination", "int", "int", "int", "FireCommander.hospital_location_define.x_coord_list.index", "int", "FireCommander.hospital_location_define.x_coord_list.index", "int", "FireCommander.hospital_location_define.x_coord_list.index", "FireCommander.hospital_location_define.x_coord_list.index", "FireCommander.hospital_location_define.x_coord_list.index"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hospital_location_define.hospital_location_determination"], ["", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Please view the location of each hospital first'", ")", "\n", "", "else", ":", "\n", "            ", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "4", "]", ")", ":", "\n", "                ", "if", "(", "self", ".", "environment_para", "[", "4", "]", ">", "i", ")", "and", "(", "not", "self", ".", "hospital_location_determination", "(", "i", ")", ")", ":", "\n", "                    ", "determine_flag", "=", "False", "\n", "break", "\n", "\n", "", "", "if", "determine_flag", ":", "\n", "                ", "new_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "4", "]", ")", ":", "\n", "                    ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "new_list", ".", "append", "(", "[", "(", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", ")", "*", "100", ",", "int", "(", "raw_coord", "[", "1", "]", ")", "*", "100", "]", ")", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "4", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "4", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "4", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "4", "\n", "\n", "", "self", ".", "set_Loci", "[", "4", "]", "=", "new_list", "\n", "self", ".", "global_applied_flag", "[", "4", "]", "=", "self", ".", "applied_flag", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "power_station_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.__init__": [[3376, 3389], ["QWidget.__init__", "round", "list", "FireCommander.power_station_location_define.init_ui", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_Loci", ",", "current_grid", ",", "applied_flag", ")", ":", "\n", "        ", "super", "(", "power_station_location_define", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_Loci", "=", "set_Loci", "\n", "self", ".", "out_list", "=", "set_Loci", "[", "5", "]", "\n", "self", ".", "current_grid", "=", "current_grid", "\n", "self", ".", "grid_size", "=", "round", "(", "self", ".", "environment_para", "[", "0", "]", "//", "100", ")", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "self", ".", "global_applied_flag", "=", "applied_flag", "\n", "self", ".", "x_coord_list", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", ",", "'K'", ",", "'L'", ",", "'M'", ",", "'N'", ",", "'O'", "]", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.init_ui": [[3390, 3513], ["FireCommander.power_station_location_define.resize", "QPalette", "QPalette.setBrush", "FireCommander.power_station_location_define.setPalette", "FireCommander.power_station_location_define.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont", "range", "FireCommander.power_station_location_define.transmit_value", "QPalette", "QLabel", "FireCommander.power_station_location_define.applied_display.setFont", "FireCommander.power_station_location_define.applied_display.setObjectName", "QLabel", "FireCommander.power_station_location_define.setting_init.setGeometry", "FireCommander.power_station_location_define.setting_init.setFont", "FireCommander.power_station_location_define.setting_init.setObjectName", "FireCommander.power_station_location_define.setting_init.setText", "FireCommander.parameter_Display_Ctl", "QLabel", "FireCommander.power_station_location_define.size_note.setGeometry", "FireCommander.power_station_location_define.size_note.setFont", "FireCommander.power_station_location_define.size_note.setObjectName", "FireCommander.power_station_location_define.size_note.setText", "QLabel", "FireCommander.power_station_location_define.power_station_size.setGeometry", "FireCommander.power_station_location_define.power_station_size.setFont", "FireCommander.power_station_location_define.power_station_size.setObjectName", "FireCommander.power_station_location_define.power_station_size.setText", "FireCommander.power_station_location_define.word_plot", "FireCommander.power_station_location_define.set_initial_value_function", "FireCommander.power_station_location_define.applied_display.setPalette", "QPushButton", "FireCommander.power_station_location_define.reset.setGeometry", "FireCommander.power_station_location_define.reset.setFont", "FireCommander.power_station_location_define.reset.setText", "FireCommander.power_station_location_define.reset.setStyleSheet", "FireCommander.power_station_location_define.reset.clicked.connect", "QPushButton", "FireCommander.power_station_location_define.apply.setGeometry", "FireCommander.power_station_location_define.apply.setFont", "FireCommander.power_station_location_define.apply.setText", "FireCommander.power_station_location_define.apply.setStyleSheet", "FireCommander.power_station_location_define.apply.clicked.connect", "QPushButton", "FireCommander.power_station_location_define.back.setGeometry", "FireCommander.power_station_location_define.back.setFont", "FireCommander.power_station_location_define.back.setText", "FireCommander.power_station_location_define.back.setStyleSheet", "FireCommander.power_station_location_define.back.clicked.connect", "QPushButton", "FireCommander.power_station_location_define.next.setGeometry", "FireCommander.power_station_location_define.next.setFont", "FireCommander.power_station_location_define.next.setText", "FireCommander.power_station_location_define.next.setStyleSheet", "FireCommander.power_station_location_define.next.clicked.connect", "QBrush", "FireCommander.power_station_location_define.raw_list.append", "str", "QLabel", "FireCommander.power_station_location_define.location_init.setGeometry", "FireCommander.power_station_location_define.location_init.setFont", "FireCommander.power_station_location_define.location_init.setObjectName", "FireCommander.power_station_location_define.location_init.setText", "QLabel", "FireCommander.power_station_location_define.location_init.setGeometry", "FireCommander.power_station_location_define.location_init.setFont", "FireCommander.power_station_location_define.location_init.setObjectName", "FireCommander.power_station_location_define.location_init.setText", "range", "FireCommander.power_station_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.power_station_location_define.applied_display.setText", "FireCommander.power_station_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.power_station_location_define.applied_display.setText", "QPixmap", "FireCommander.environment_Setting_Ctl", "QColor", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transmit_value", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.word_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.set_initial_value_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Power Station Location'", ")", "\n", "\n", "self", ".", "left_upper_x", "=", "120", "\n", "self", ".", "left_upper_y", "=", "100", "\n", "self", ".", "right_upper_x", "=", "640", "\n", "self", ".", "right_upper_y", "=", "120", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "400", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_grid", "=", "QFont", "(", "'arial'", ")", "\n", "font_grid", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_button_small", "=", "QFont", "(", "'arial'", ")", "\n", "font_button_small", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "font_Bold", "=", "QFont", "(", "'arial'", ",", "14", ",", "75", ")", "\n", "\n", "self", ".", "raw_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "5", "]", ")", ":", "\n", "            ", "self", ".", "raw_list", ".", "append", "(", "''", ")", "\n", "", "self", ".", "transmit_value", "(", ")", "\n", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "applied_display", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "applied_display", ".", "setObjectName", "(", "\"Applied_Display\"", ")", "\n", "\n", "self", ".", "setting_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "setting_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "setting_init", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "setting_init", ".", "setObjectName", "(", "\"Power_Setting\"", ")", "\n", "self", ".", "setting_init", ".", "setText", "(", "\"Power Station Setting:\"", ")", "\n", "\n", "# House number input controller", "\n", "parameter_Display_Ctl", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "1.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Power Stations:\"", ",", "\"num_power_stations\"", ")", ",", "str", "(", "self", ".", "environment_para", "[", "5", "]", ")", ")", "\n", "\n", "self", ".", "size_note", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "size_note", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "60", ",", "30", ")", "\n", "self", ".", "size_note", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "size_note", ".", "setObjectName", "(", "'Note'", ")", "\n", "self", ".", "size_note", ".", "setText", "(", "'Note: '", ")", "\n", "\n", "self", ".", "power_station_size", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "power_station_size", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "60", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "380", ",", "30", ")", "\n", "self", ".", "power_station_size", ".", "setFont", "(", "font", ")", "\n", "self", ".", "power_station_size", ".", "setObjectName", "(", "'Power Station Size'", ")", "\n", "self", ".", "power_station_size", ".", "setText", "(", "'A 2 \u00d7 2 Grid will be Marked'", ")", "\n", "\n", "if", "self", ".", "environment_para", "[", "5", "]", "==", "0", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "\n", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"No_Power_Station\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"No Power Station in this Environment\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"power_station_location\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"Power Station Locations:\"", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "5", "]", ")", ":", "\n", "# Initialize fire center input controller", "\n", "                ", "environment_Setting_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "(", "4.5", "+", "i", ")", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Power Station #\"", "+", "str", "(", "i", "+", "1", ")", "+", "\": \"", ",", "\"power_station\"", "+", "str", "(", "i", "+", "1", ")", "+", "\"_center\"", ")", ",", "i", ")", "\n", "\n", "", "", "self", ".", "word_plot", "(", "font_grid", ")", "\n", "self", ".", "set_initial_value_function", "(", ")", "\n", "self", ".", "applied_flag", "=", "self", ".", "global_applied_flag", "[", "5", "]", "\n", "\n", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "\n", "", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n", "self", ".", "reset", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "reset", ".", "setGeometry", "(", "220", ",", "730", ",", "200", ",", "50", ")", "\n", "self", ".", "reset", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "reset", ".", "setText", "(", "'Reset'", ")", "\n", "self", ".", "reset", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "reset", ".", "clicked", ".", "connect", "(", "self", ".", "reset_function", ")", "\n", "\n", "self", ".", "apply", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "apply", ".", "setGeometry", "(", "220", ",", "800", ",", "200", ",", "50", ")", "\n", "self", ".", "apply", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "apply", ".", "setText", "(", "'Apply'", ")", "\n", "self", ".", "apply", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "apply", ".", "clicked", ".", "connect", "(", "self", ".", "apply_function", ")", "\n", "\n", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "690", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1070", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.word_plot": [[3514, 3523], ["range", "range", "QLabel", "FireCommander.power_station_location_define.grid_word.setGeometry", "FireCommander.power_station_location_define.grid_word.setFont", "FireCommander.power_station_location_define.grid_word.setObjectName", "FireCommander.power_station_location_define.grid_word.setText", "str", "str", "round", "round"], "methods", ["None"], ["", "def", "word_plot", "(", "self", ",", "font", ")", ":", "\n", "# Display the coordinate within the grid", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "self", ".", "grid_word", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "grid_word", ".", "setGeometry", "(", "1040", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "self", ".", "grid_word", ".", "setFont", "(", "font", ")", "\n", "self", ".", "grid_word", ".", "setObjectName", "(", "\"Grid_Word\"", ")", "\n", "self", ".", "grid_word", ".", "setText", "(", "self", ".", "x_coord_list", "[", "i", "]", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "//", "10", ")", ")", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "%", "10", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.paintEvent": [[3524, 3578], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "range", "QPen", "QBrush", "QPen", "QBrush", "range", "QPainter", "range", "list", "QColor", "QColor", "range", "numpy.zeros", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QColor"], "methods", ["None"], ["", "", "", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter", "=", "QPainter", "(", "self", ")", "\n", "painter", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter", ".", "drawRect", "(", "110", ",", "90", ",", "420", ",", "600", ")", "\n", "\n", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "560", ",", "90", ",", "950", ",", "800", ")", "\n", "\n", "# Paint the grid (Previous)", "\n", "paint_grid", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "0", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "0", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "2", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "225", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "3", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "165", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "4", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "255", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "5", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "65", ",", "105", ",", "225", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "6", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "0", ",", "191", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "\n", "", "", "", "if", "self", ".", "update_flag", "==", "1", ":", "\n", "            ", "paint_grid2", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                    ", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "5", ":", "\n", "                        ", "paint_grid2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "65", ",", "105", ",", "225", ")", ")", ")", "\n", "paint_grid2", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "", "", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.power_station_location_determination": [[3579, 3600], ["FireCommander.power_station_location_define.raw_list[].split", "QMessageBox.warning", "len", "QMessageBox.warning", "QMessageBox.warning", "int", "int", "FireCommander.power_station_location_define.x_coord_list.index", "int", "QMessageBox.warning", "QMessageBox.warning", "str", "FireCommander.power_station_location_define.overlap_check", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.overlap_check"], ["", "", "def", "power_station_location_determination", "(", "self", ",", "index", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "environment_para", "[", "5", "]", ">", "0", ":", "\n", "            ", "raw_coord_init", "=", "self", ".", "raw_list", "[", "index", "]", ".", "split", "(", "'-'", ")", "\n", "if", "(", "raw_coord_init", "[", "0", "]", "==", "''", ")", "or", "(", "raw_coord_init", "[", "1", "]", "==", "''", ")", "or", "(", "len", "(", "raw_coord_init", "[", "1", "]", ")", "!=", "2", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Please enter the full coordinates'", ")", "\n", "", "else", ":", "\n", "                ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "'Z'", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "'A'", ")", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should be capital letter'", ")", "\n", "", "else", ":", "\n", "                    ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "self", ".", "x_coord_list", "[", "self", ".", "grid_size", "-", "1", "]", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "self", ".", "x_coord_list", "[", "0", "]", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", ">", "self", ".", "grid_size", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", "<", "1", ")", ":", "\n", "                        ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should locate within the grid range (Now is '", "+", "str", "(", "self", ".", "grid_size", ")", "+", "')'", ")", "\n", "", "else", ":", "\n", "                        ", "raw_coord", "=", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord_init", "[", "0", "]", ")", ",", "int", "(", "raw_coord_init", "[", "1", "]", ")", "]", "\n", "if", "(", "raw_coord", "[", "0", "]", "==", "(", "self", ".", "grid_size", "-", "1", ")", ")", "or", "(", "raw_coord", "[", "1", "]", "==", "self", ".", "grid_size", ")", ":", "\n", "                            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Part of the power stations exceeds the world range'", ")", "\n", "", "elif", "not", "self", ".", "overlap_check", "(", "raw_coord", "[", "0", "]", ",", "raw_coord", "[", "1", "]", "-", "1", ")", "and", "self", ".", "applied_flag", "==", "0", ":", "\n", "                            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Power station '", "+", "str", "(", "index", "+", "1", ")", "+", "' overlaps with existing objects'", ")", "\n", "", "else", ":", "\n", "                            ", "default", "=", "True", "\n", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.array_to_string": [[3601, 3605], ["round", "str", "round", "str", "str"], "methods", ["None"], ["", "def", "array_to_string", "(", "self", ",", "list", ")", ":", "\n", "        ", "raw_list", "=", "[", "round", "(", "list", "[", "0", "]", "//", "100", ")", "-", "1", ",", "round", "(", "list", "[", "1", "]", "//", "100", ")", "]", "\n", "out_str", "=", "str", "(", "self", ".", "x_coord_list", "[", "raw_list", "[", "0", "]", "]", ")", "+", "'-'", "+", "str", "(", "raw_list", "[", "1", "]", "//", "10", ")", "+", "str", "(", "raw_list", "[", "1", "]", "%", "10", ")", "\n", "return", "out_str", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.transmit_value": [[3606, 3612], ["range", "len", "len", "FireCommander.power_station_location_define.array_to_string"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string"], ["", "def", "transmit_value", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "raw_list", ")", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "out_list", ")", "==", "0", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "''", "\n", "", "else", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "self", ".", "array_to_string", "(", "self", ".", "out_list", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.set_initial_value_function": [[3613, 3624], ["FireCommander.power_station_location_define.power_station1_center_Edit.setText", "FireCommander.power_station_location_define.power_station2_center_Edit.setText", "FireCommander.power_station_location_define.power_station3_center_Edit.setText", "FireCommander.power_station_location_define.power_station4_center_Edit.setText", "FireCommander.power_station_location_define.power_station5_center_Edit.setText"], "methods", ["None"], ["", "", "", "def", "set_initial_value_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "5", "]", ">", "0", ":", "\n", "            ", "self", ".", "power_station1_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "0", "]", ")", "\n", "if", "self", ".", "environment_para", "[", "5", "]", ">", "1", ":", "\n", "                ", "self", ".", "power_station2_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "1", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "5", "]", ">", "2", ":", "\n", "                ", "self", ".", "power_station3_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "2", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "5", "]", ">", "3", ":", "\n", "                ", "self", ".", "power_station4_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "3", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "5", "]", ">", "4", ":", "\n", "                ", "self", ".", "power_station5_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "4", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.reset_function": [[3625, 3644], ["list", "FireCommander.power_station_location_define.update", "numpy.zeros", "FireCommander.power_station_location_define.power_station1_center_Edit.clear", "FireCommander.power_station_location_define.power_station2_center_Edit.clear", "FireCommander.power_station_location_define.power_station3_center_Edit.clear", "FireCommander.power_station_location_define.power_station4_center_Edit.clear", "FireCommander.power_station_location_define.power_station5_center_Edit.clear"], "methods", ["None"], ["", "", "", "def", "reset_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "if", "self", ".", "environment_para", "[", "5", "]", ">", "0", ":", "\n", "            ", "self", ".", "power_station1_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "0", "]", "=", "''", "\n", "if", "self", ".", "environment_para", "[", "5", "]", ">", "1", ":", "\n", "                ", "self", ".", "power_station2_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "1", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "5", "]", ">", "2", ":", "\n", "                ", "self", ".", "power_station3_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "2", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "5", "]", ">", "3", ":", "\n", "                ", "self", ".", "power_station4_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "3", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "5", "]", ">", "4", ":", "\n", "                ", "self", ".", "power_station5_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "4", "]", "=", "''", "\n", "", "", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.overlap_check": [[3645, 3653], ["None"], "methods", ["None"], ["", "def", "overlap_check", "(", "self", ",", "pos_x", ",", "pos_y", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "\n", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", ":", "\n", "            ", "if", "(", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "\n", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", ":", "\n", "                ", "default", "=", "True", "\n", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.apply_function": [[3654, 3692], ["range", "range", "range", "QPalette", "FireCommander.power_station_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.power_station_location_define.applied_display.setText", "FireCommander.power_station_location_define.applied_display.setPalette", "FireCommander.power_station_location_define.update", "QPalette", "FireCommander.power_station_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.power_station_location_define.applied_display.setText", "FireCommander.power_station_location_define.applied_display.setPalette", "list", "FireCommander.power_station_location_define.raw_list[].split", "QColor", "FireCommander.power_station_location_define.power_station_location_determination", "numpy.zeros", "int", "int", "FireCommander.power_station_location_define.x_coord_list.index", "int", "FireCommander.power_station_location_define.x_coord_list.index", "int", "FireCommander.power_station_location_define.x_coord_list.index", "FireCommander.power_station_location_define.x_coord_list.index"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.power_station_location_determination"], ["", "def", "apply_function", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "5", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "5", ":", "\n", "                    ", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "\n", "", "", "", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "5", "]", ")", ":", "\n", "            ", "if", "(", "self", ".", "environment_para", "[", "5", "]", ">", "i", ")", "and", "(", "not", "self", ".", "power_station_location_determination", "(", "i", ")", ")", ":", "\n", "                ", "determine_flag", "=", "False", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "break", "\n", "\n", "", "if", "determine_flag", ":", "\n", "                ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "5", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "5", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "5", "\n", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "5", "\n", "\n", "", "", "if", "determine_flag", ":", "\n", "            ", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "applied_flag", "=", "1", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "self", ".", "update", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_flag", "=", "0", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.back_function": [[3693, 3703], ["range", "FireCommander.power_station_location_define.hide", "FireCommander.hospital_location_define", "FireCommander.power_station_location_define.screen.show", "range"], "methods", ["None"], ["", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_Loci", "[", "5", "]", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "5", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "", "", "self", ".", "global_applied_flag", "[", "5", "]", "=", "0", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "hospital_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.next_function": [[3704, 3729], ["QMessageBox.warning", "range", "range", "FireCommander.power_station_location_define.hide", "FireCommander.lake_location_define", "FireCommander.power_station_location_define.screen.show", "FireCommander.power_station_location_define.raw_list[].split", "new_list.append", "FireCommander.power_station_location_define.power_station_location_determination", "int", "int", "int", "FireCommander.power_station_location_define.x_coord_list.index", "int", "FireCommander.power_station_location_define.x_coord_list.index", "int", "FireCommander.power_station_location_define.x_coord_list.index", "FireCommander.power_station_location_define.x_coord_list.index", "FireCommander.power_station_location_define.x_coord_list.index"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.power_station_location_define.power_station_location_determination"], ["", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Please view the location of each power station first'", ")", "\n", "", "else", ":", "\n", "            ", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "5", "]", ")", ":", "\n", "                ", "if", "(", "self", ".", "environment_para", "[", "5", "]", ">", "i", ")", "and", "(", "not", "self", ".", "power_station_location_determination", "(", "i", ")", ")", ":", "\n", "                    ", "determine_flag", "=", "False", "\n", "break", "\n", "\n", "", "", "if", "determine_flag", ":", "\n", "                ", "new_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "5", "]", ")", ":", "\n", "                    ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "new_list", ".", "append", "(", "[", "(", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", ")", "*", "100", ",", "int", "(", "raw_coord", "[", "1", "]", ")", "*", "100", "]", ")", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "5", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "5", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "-", "1", "]", "=", "5", "\n", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "]", "=", "5", "\n", "\n", "", "self", ".", "set_Loci", "[", "5", "]", "=", "new_list", "\n", "self", ".", "global_applied_flag", "[", "5", "]", "=", "self", ".", "applied_flag", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "lake_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.__init__": [[3732, 3745], ["QWidget.__init__", "round", "list", "FireCommander.lake_location_define.init_ui", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_Loci", ",", "current_grid", ",", "applied_flag", ")", ":", "\n", "        ", "super", "(", "lake_location_define", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_Loci", "=", "set_Loci", "\n", "self", ".", "out_list", "=", "set_Loci", "[", "6", "]", "\n", "self", ".", "current_grid", "=", "current_grid", "\n", "self", ".", "grid_size", "=", "round", "(", "self", ".", "environment_para", "[", "0", "]", "//", "100", ")", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "self", ".", "global_applied_flag", "=", "applied_flag", "\n", "self", ".", "x_coord_list", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", ",", "'K'", ",", "'L'", ",", "'M'", ",", "'N'", ",", "'O'", "]", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.init_ui": [[3746, 3869], ["FireCommander.lake_location_define.resize", "QPalette", "QPalette.setBrush", "FireCommander.lake_location_define.setPalette", "FireCommander.lake_location_define.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont", "range", "FireCommander.lake_location_define.transmit_value", "QPalette", "QLabel", "FireCommander.lake_location_define.applied_display.setFont", "FireCommander.lake_location_define.applied_display.setObjectName", "QLabel", "FireCommander.lake_location_define.setting_init.setGeometry", "FireCommander.lake_location_define.setting_init.setFont", "FireCommander.lake_location_define.setting_init.setObjectName", "FireCommander.lake_location_define.setting_init.setText", "FireCommander.parameter_Display_Ctl", "QLabel", "FireCommander.lake_location_define.size_note.setGeometry", "FireCommander.lake_location_define.size_note.setFont", "FireCommander.lake_location_define.size_note.setObjectName", "FireCommander.lake_location_define.size_note.setText", "QLabel", "FireCommander.lake_location_define.lake_size.setGeometry", "FireCommander.lake_location_define.lake_size.setFont", "FireCommander.lake_location_define.lake_size.setObjectName", "FireCommander.lake_location_define.lake_size.setText", "FireCommander.lake_location_define.word_plot", "FireCommander.lake_location_define.set_initial_value_function", "FireCommander.lake_location_define.applied_display.setPalette", "QPushButton", "FireCommander.lake_location_define.reset.setGeometry", "FireCommander.lake_location_define.reset.setFont", "FireCommander.lake_location_define.reset.setText", "FireCommander.lake_location_define.reset.setStyleSheet", "FireCommander.lake_location_define.reset.clicked.connect", "QPushButton", "FireCommander.lake_location_define.apply.setGeometry", "FireCommander.lake_location_define.apply.setFont", "FireCommander.lake_location_define.apply.setText", "FireCommander.lake_location_define.apply.setStyleSheet", "FireCommander.lake_location_define.apply.clicked.connect", "QPushButton", "FireCommander.lake_location_define.back.setGeometry", "FireCommander.lake_location_define.back.setFont", "FireCommander.lake_location_define.back.setText", "FireCommander.lake_location_define.back.setStyleSheet", "FireCommander.lake_location_define.back.clicked.connect", "QPushButton", "FireCommander.lake_location_define.next.setGeometry", "FireCommander.lake_location_define.next.setFont", "FireCommander.lake_location_define.next.setText", "FireCommander.lake_location_define.next.setStyleSheet", "FireCommander.lake_location_define.next.clicked.connect", "QBrush", "FireCommander.lake_location_define.raw_list.append", "str", "QLabel", "FireCommander.lake_location_define.location_init.setGeometry", "FireCommander.lake_location_define.location_init.setFont", "FireCommander.lake_location_define.location_init.setObjectName", "FireCommander.lake_location_define.location_init.setText", "QLabel", "FireCommander.lake_location_define.location_init.setGeometry", "FireCommander.lake_location_define.location_init.setFont", "FireCommander.lake_location_define.location_init.setObjectName", "FireCommander.lake_location_define.location_init.setText", "range", "FireCommander.lake_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.lake_location_define.applied_display.setText", "FireCommander.lake_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.lake_location_define.applied_display.setText", "QPixmap", "FireCommander.environment_Setting_Ctl", "QColor", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transmit_value", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Ctl", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.word_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.set_initial_value_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Lake Location'", ")", "\n", "\n", "self", ".", "left_upper_x", "=", "120", "\n", "self", ".", "left_upper_y", "=", "100", "\n", "self", ".", "right_upper_x", "=", "640", "\n", "self", ".", "right_upper_y", "=", "120", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "400", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_grid", "=", "QFont", "(", "'arial'", ")", "\n", "font_grid", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_button_small", "=", "QFont", "(", "'arial'", ")", "\n", "font_button_small", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "font_Bold", "=", "QFont", "(", "'arial'", ",", "14", ",", "75", ")", "\n", "\n", "self", ".", "raw_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "6", "]", ")", ":", "\n", "            ", "self", ".", "raw_list", ".", "append", "(", "''", ")", "\n", "", "self", ".", "transmit_value", "(", ")", "\n", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "applied_display", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "applied_display", ".", "setObjectName", "(", "\"Applied_Display\"", ")", "\n", "\n", "self", ".", "setting_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "setting_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "setting_init", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "setting_init", ".", "setObjectName", "(", "\"Lake_Setting\"", ")", "\n", "self", ".", "setting_init", ".", "setText", "(", "\"Lake Setting:\"", ")", "\n", "\n", "# House number input controller", "\n", "parameter_Display_Ctl", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "1.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Number of Lakes:\"", ",", "\"num_lakes\"", ")", ",", "str", "(", "self", ".", "environment_para", "[", "6", "]", ")", ")", "\n", "\n", "self", ".", "size_note", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "size_note", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "60", ",", "30", ")", "\n", "self", ".", "size_note", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "size_note", ".", "setObjectName", "(", "'Note'", ")", "\n", "self", ".", "size_note", ".", "setText", "(", "'Note: '", ")", "\n", "\n", "self", ".", "lake_size", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "lake_size", ".", "setGeometry", "(", "self", ".", "left_upper_x", "+", "60", ",", "self", ".", "left_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ",", "380", ",", "30", ")", "\n", "self", ".", "lake_size", ".", "setFont", "(", "font", ")", "\n", "self", ".", "lake_size", ".", "setObjectName", "(", "'Lake Size'", ")", "\n", "self", ".", "lake_size", ".", "setText", "(", "'A 4 \u00d7 3 Grid will be Marked'", ")", "\n", "\n", "if", "self", ".", "environment_para", "[", "6", "]", "==", "0", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "\n", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"No_Lake\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"No Lake in this Environment\"", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "location_init", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "location_init", ".", "setGeometry", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "3.5", "*", "self", ".", "left_y_interval", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "location_init", ".", "setFont", "(", "font_Bold", ")", "\n", "self", ".", "location_init", ".", "setObjectName", "(", "\"lake_location\"", ")", "\n", "self", ".", "location_init", ".", "setText", "(", "\"Lake Locations:\"", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "6", "]", ")", ":", "\n", "# Initialize fire center input controller", "\n", "                ", "environment_Setting_Ctl", "(", "self", ",", "font", ",", "(", "self", ".", "left_upper_x", ",", "self", ".", "left_upper_y", "+", "(", "4.5", "+", "i", ")", "*", "self", ".", "left_y_interval", ")", ",", "\n", "(", "\"Lake #\"", "+", "str", "(", "i", "+", "1", ")", "+", "\": \"", ",", "\"lake\"", "+", "str", "(", "i", "+", "1", ")", "+", "\"_center\"", ")", ",", "i", ")", "\n", "\n", "", "", "self", ".", "word_plot", "(", "font_grid", ")", "\n", "self", ".", "set_initial_value_function", "(", ")", "\n", "self", ".", "applied_flag", "=", "self", ".", "global_applied_flag", "[", "6", "]", "\n", "\n", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "\n", "", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n", "self", ".", "reset", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "reset", ".", "setGeometry", "(", "220", ",", "730", ",", "200", ",", "50", ")", "\n", "self", ".", "reset", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "reset", ".", "setText", "(", "'Reset'", ")", "\n", "self", ".", "reset", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "reset", ".", "clicked", ".", "connect", "(", "self", ".", "reset_function", ")", "\n", "\n", "self", ".", "apply", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "apply", ".", "setGeometry", "(", "220", ",", "800", ",", "200", ",", "50", ")", "\n", "self", ".", "apply", ".", "setFont", "(", "font_button_small", ")", "\n", "self", ".", "apply", ".", "setText", "(", "'Apply'", ")", "\n", "self", ".", "apply", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "apply", ".", "clicked", ".", "connect", "(", "self", ".", "apply_function", ")", "\n", "\n", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "690", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1070", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.word_plot": [[3870, 3879], ["range", "range", "QLabel", "FireCommander.lake_location_define.grid_word.setGeometry", "FireCommander.lake_location_define.grid_word.setFont", "FireCommander.lake_location_define.grid_word.setObjectName", "FireCommander.lake_location_define.grid_word.setText", "str", "str", "round", "round"], "methods", ["None"], ["", "def", "word_plot", "(", "self", ",", "font", ")", ":", "\n", "# Display the coordinate within the grid", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "self", ".", "grid_word", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "grid_word", ".", "setGeometry", "(", "1040", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "self", ".", "grid_word", ".", "setFont", "(", "font", ")", "\n", "self", ".", "grid_word", ".", "setObjectName", "(", "\"Grid_Word\"", ")", "\n", "self", ".", "grid_word", ".", "setText", "(", "self", ".", "x_coord_list", "[", "i", "]", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "//", "10", ")", ")", "+", "str", "(", "round", "(", "(", "j", "+", "1", ")", "%", "10", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.paintEvent": [[3880, 3934], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "range", "QPen", "QBrush", "QPen", "QBrush", "range", "QPainter", "range", "list", "QColor", "QColor", "range", "numpy.zeros", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QColor", "QPen", "QBrush", "QColor"], "methods", ["None"], ["", "", "", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter", "=", "QPainter", "(", "self", ")", "\n", "painter", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter", ".", "drawRect", "(", "110", ",", "90", ",", "420", ",", "600", ")", "\n", "\n", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "560", ",", "90", ",", "950", ",", "800", ")", "\n", "\n", "# Paint the grid (Previous)", "\n", "paint_grid", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "0", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "1", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "0", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "2", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "225", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "3", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "165", ",", "0", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "4", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "255", ",", "255", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "5", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "65", ",", "105", ",", "225", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "elif", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "6", ":", "\n", "                    ", "paint_grid", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "0", ",", "191", ",", "255", ")", ")", ")", "\n", "paint_grid", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "\n", "", "", "", "if", "self", ".", "update_flag", "==", "1", ":", "\n", "            ", "paint_grid2", "=", "QPainter", "(", "self", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                    ", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "6", ":", "\n", "                        ", "paint_grid2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "1", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "paint_grid2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "0", ",", "191", ",", "255", ")", ")", ")", "\n", "paint_grid2", ".", "drawRect", "(", "1035", "+", "i", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "420", "+", "j", "*", "50", "-", "25", "*", "self", ".", "grid_size", ",", "50", ",", "50", ")", "\n", "", "", "", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "self", ".", "update_flag", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.lake_location_determination": [[3935, 3957], ["FireCommander.lake_location_define.raw_list[].split", "QMessageBox.warning", "len", "QMessageBox.warning", "QMessageBox.warning", "int", "int", "FireCommander.lake_location_define.x_coord_list.index", "int", "QMessageBox.warning", "QMessageBox.warning", "str", "FireCommander.lake_location_define.overlap_check", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.overlap_check"], ["", "", "def", "lake_location_determination", "(", "self", ",", "index", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "environment_para", "[", "6", "]", ">", "0", ":", "\n", "            ", "raw_coord_init", "=", "self", ".", "raw_list", "[", "index", "]", ".", "split", "(", "'-'", ")", "\n", "if", "(", "raw_coord_init", "[", "0", "]", "==", "''", ")", "or", "(", "raw_coord_init", "[", "1", "]", "==", "''", ")", "or", "(", "len", "(", "raw_coord_init", "[", "1", "]", ")", "!=", "2", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Please enter the full coordinates'", ")", "\n", "", "else", ":", "\n", "                ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "'Z'", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "'A'", ")", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should be capital letter'", ")", "\n", "", "else", ":", "\n", "                    ", "if", "(", "raw_coord_init", "[", "0", "]", ">", "self", ".", "x_coord_list", "[", "self", ".", "grid_size", "-", "3", "]", ")", "or", "(", "raw_coord_init", "[", "0", "]", "<", "self", ".", "x_coord_list", "[", "0", "]", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", ">", "self", ".", "grid_size", "-", "1", ")", "or", "(", "int", "(", "raw_coord_init", "[", "1", "]", ")", "<", "1", ")", ":", "\n", "                        ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Coordinates should locate within the grid range (Now is '", "+", "str", "(", "self", ".", "grid_size", ")", "+", "')'", ")", "\n", "", "else", ":", "\n", "                        ", "raw_coord", "=", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord_init", "[", "0", "]", ")", ",", "int", "(", "raw_coord_init", "[", "1", "]", ")", "]", "\n", "if", "(", "raw_coord", "[", "0", "]", ">=", "(", "self", ".", "grid_size", "-", "2", ")", ")", "or", "(", "raw_coord", "[", "1", "]", ">=", "(", "self", ".", "grid_size", "-", "2", ")", ")", ":", "\n", "                            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Part of the lakes exceeds the world range'", ")", "\n", "", "elif", "not", "self", ".", "overlap_check", "(", "raw_coord", "[", "0", "]", ",", "raw_coord", "[", "1", "]", "-", "1", ")", "and", "self", ".", "applied_flag", "==", "0", ":", "\n", "                            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Lake '", "+", "str", "(", "index", "+", "1", ")", "+", "' overlaps with existing objects'", ")", "\n", "", "else", ":", "\n", "                            ", "default", "=", "True", "\n", "\n", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.array_to_string": [[3958, 3962], ["str", "round", "round", "str", "str"], "methods", ["None"], ["", "def", "array_to_string", "(", "self", ",", "list", ")", ":", "\n", "        ", "raw_list", "=", "[", "round", "(", "(", "list", "[", "0", "]", "-", "50", ")", "//", "100", ")", "-", "1", ",", "round", "(", "list", "[", "1", "]", "//", "100", ")", "-", "1", "]", "\n", "out_str", "=", "str", "(", "self", ".", "x_coord_list", "[", "raw_list", "[", "0", "]", "]", ")", "+", "'-'", "+", "str", "(", "raw_list", "[", "1", "]", "//", "10", ")", "+", "str", "(", "raw_list", "[", "1", "]", "%", "10", ")", "\n", "return", "out_str", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.transmit_value": [[3963, 3969], ["range", "len", "len", "FireCommander.lake_location_define.array_to_string"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string"], ["", "def", "transmit_value", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "raw_list", ")", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "out_list", ")", "==", "0", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "''", "\n", "", "else", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "self", ".", "array_to_string", "(", "self", ".", "out_list", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.set_initial_value_function": [[3970, 3981], ["FireCommander.lake_location_define.lake1_center_Edit.setText", "FireCommander.lake_location_define.lake2_center_Edit.setText", "FireCommander.lake_location_define.lake3_center_Edit.setText", "FireCommander.lake_location_define.lake4_center_Edit.setText", "FireCommander.lake_location_define.lake5_center_Edit.setText"], "methods", ["None"], ["", "", "", "def", "set_initial_value_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "environment_para", "[", "6", "]", ">", "0", ":", "\n", "            ", "self", ".", "lake1_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "0", "]", ")", "\n", "if", "self", ".", "environment_para", "[", "6", "]", ">", "1", ":", "\n", "                ", "self", ".", "lake2_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "1", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "6", "]", ">", "2", ":", "\n", "                ", "self", ".", "lake3_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "2", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "6", "]", ">", "3", ":", "\n", "                ", "self", ".", "lake4_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "3", "]", ")", "\n", "", "if", "self", ".", "environment_para", "[", "6", "]", ">", "4", ":", "\n", "                ", "self", ".", "lake5_center_Edit", ".", "setText", "(", "self", ".", "raw_list", "[", "4", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.reset_function": [[3982, 4001], ["list", "FireCommander.lake_location_define.update", "numpy.zeros", "FireCommander.lake_location_define.lake1_center_Edit.clear", "FireCommander.lake_location_define.lake2_center_Edit.clear", "FireCommander.lake_location_define.lake3_center_Edit.clear", "FireCommander.lake_location_define.lake4_center_Edit.clear", "FireCommander.lake_location_define.lake5_center_Edit.clear"], "methods", ["None"], ["", "", "", "def", "reset_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "if", "self", ".", "environment_para", "[", "6", "]", ">", "0", ":", "\n", "            ", "self", ".", "lake1_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "0", "]", "=", "''", "\n", "if", "self", ".", "environment_para", "[", "6", "]", ">", "1", ":", "\n", "                ", "self", ".", "lake2_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "1", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "6", "]", ">", "2", ":", "\n", "                ", "self", ".", "lake3_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "2", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "6", "]", ">", "3", ":", "\n", "                ", "self", ".", "lake4_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "3", "]", "=", "''", "\n", "", "if", "self", ".", "environment_para", "[", "6", "]", ">", "4", ":", "\n", "                ", "self", ".", "lake5_center_Edit", ".", "clear", "(", ")", "\n", "self", ".", "raw_list", "[", "4", "]", "=", "''", "\n", "", "", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.overlap_check": [[4002, 4014], ["None"], "methods", ["None"], ["", "def", "overlap_check", "(", "self", ",", "pos_x", ",", "pos_y", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "2", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "2", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "+", "2", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "2", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "2", "]", "[", "pos_y", "+", "2", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "]", "[", "pos_y", "+", "3", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "3", "]", "==", "0", ")", "and", "(", "self", ".", "current_grid", "[", "pos_x", "+", "2", "]", "[", "pos_y", "+", "3", "]", "==", "0", ")", ":", "\n", "            ", "if", "(", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "2", "]", "[", "pos_y", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "2", "]", "[", "pos_y", "+", "1", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "+", "2", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "2", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "2", "]", "[", "pos_y", "+", "2", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "]", "[", "pos_y", "+", "3", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "1", "]", "[", "pos_y", "+", "3", "]", "==", "0", ")", "and", "(", "self", ".", "temp_grid", "[", "pos_x", "+", "2", "]", "[", "pos_y", "+", "3", "]", "==", "0", ")", ":", "\n", "                ", "default", "=", "True", "\n", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.apply_function": [[4015, 4052], ["range", "range", "range", "QPalette", "FireCommander.lake_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.lake_location_define.applied_display.setText", "FireCommander.lake_location_define.applied_display.setPalette", "FireCommander.lake_location_define.update", "QPalette", "FireCommander.lake_location_define.applied_display.setGeometry", "QPalette.setColor", "FireCommander.lake_location_define.applied_display.setText", "FireCommander.lake_location_define.applied_display.setPalette", "list", "FireCommander.lake_location_define.raw_list[].split", "range", "QColor", "FireCommander.lake_location_define.lake_location_determination", "numpy.zeros", "range", "FireCommander.lake_location_define.x_coord_list.index", "int"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.lake_location_determination"], ["", "def", "apply_function", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "6", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "if", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "==", "6", ":", "\n", "                    ", "self", ".", "temp_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "\n", "", "", "", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "6", "]", ")", ":", "\n", "            ", "if", "(", "self", ".", "environment_para", "[", "6", "]", ">", "i", ")", "and", "(", "not", "self", ".", "lake_location_determination", "(", "i", ")", ")", ":", "\n", "                ", "determine_flag", "=", "False", "\n", "self", ".", "temp_grid", "=", "list", "(", "np", ".", "zeros", "(", "(", "self", ".", "grid_size", ",", "self", ".", "grid_size", ")", ",", "dtype", "=", "float", ")", ")", "\n", "break", "\n", "\n", "", "if", "determine_flag", ":", "\n", "                ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "for", "i1", "in", "range", "(", "3", ")", ":", "\n", "                    ", "for", "j1", "in", "range", "(", "4", ")", ":", "\n", "                        ", "self", ".", "temp_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "i1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "+", "j1", "-", "1", "]", "=", "6", "\n", "\n", "", "", "", "", "if", "determine_flag", ":", "\n", "            ", "self", ".", "update_flag", "=", "1", "\n", "self", ".", "applied_flag", "=", "1", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "270", ",", "650", ",", "100", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "self", ".", "update", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "applied_flag", "=", "0", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "self", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "self", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "self", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.back_function": [[4053, 4063], ["range", "FireCommander.lake_location_define.hide", "FireCommander.power_station_location_define", "FireCommander.lake_location_define.screen.show", "range"], "methods", ["None"], ["", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_Loci", "[", "6", "]", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "grid_size", ")", ":", "\n", "                ", "if", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "==", "6", ":", "\n", "                    ", "self", ".", "current_grid", "[", "i", "]", "[", "j", "]", "=", "0", "\n", "", "", "", "self", ".", "global_applied_flag", "[", "6", "]", "=", "0", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "power_station_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.next_function": [[4064, 4091], ["QMessageBox.warning", "range", "range", "FireCommander.lake_location_define.hide", "FireCommander.lake_location_define.screen.show", "FireCommander.lake_location_define.raw_list[].split", "new_list.append", "range", "FireCommander.homo_adv_setting", "FireCommander.hetero_adv_setting", "FireCommander.lake_location_define.lake_location_determination", "range", "int", "FireCommander.lake_location_define.x_coord_list.index", "FireCommander.lake_location_define.x_coord_list.index", "int"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.lake_location_define.lake_location_determination"], ["", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "applied_flag", "==", "0", ":", "\n", "            ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Please view the location of each lake first'", ")", "\n", "", "else", ":", "\n", "            ", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "6", "]", ")", ":", "\n", "                ", "if", "(", "self", ".", "environment_para", "[", "6", "]", ">", "i", ")", "and", "(", "not", "self", ".", "lake_location_determination", "(", "i", ")", ")", ":", "\n", "                    ", "determine_flag", "=", "False", "\n", "\n", "", "", "if", "determine_flag", ":", "\n", "                ", "new_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "6", "]", ")", ":", "\n", "                    ", "raw_coord", "=", "self", ".", "raw_list", "[", "i", "]", ".", "split", "(", "'-'", ")", "\n", "new_list", ".", "append", "(", "[", "(", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "1", ")", "*", "100", "+", "50", ",", "(", "int", "(", "raw_coord", "[", "1", "]", ")", "+", "1", ")", "*", "100", "]", ")", "\n", "for", "i1", "in", "range", "(", "3", ")", ":", "\n", "                        ", "for", "j1", "in", "range", "(", "4", ")", ":", "\n", "                            ", "self", ".", "current_grid", "[", "self", ".", "x_coord_list", ".", "index", "(", "raw_coord", "[", "0", "]", ")", "+", "i1", "]", "[", "int", "(", "raw_coord", "[", "1", "]", ")", "+", "j1", "-", "1", "]", "=", "6", "\n", "\n", "", "", "", "self", ".", "set_Loci", "[", "6", "]", "=", "new_list", "\n", "self", ".", "global_applied_flag", "[", "6", "]", "=", "self", ".", "applied_flag", "\n", "self", ".", "hide", "(", ")", "\n", "adv_setting_list", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                    ", "self", ".", "screen", "=", "homo_adv_setting", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "adv_setting_list", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "screen", "=", "hetero_adv_setting", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_Loci", ",", "adv_setting_list", ",", "self", ".", "current_grid", ",", "self", ".", "global_applied_flag", ")", "\n", "", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.__init__": [[4094, 4103], ["QWidget.__init__", "FireCommander.homo_adv_setting.init_ui"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_loci", ",", "adv_setting_list", ",", "current_grid", ",", "applied_flag", ")", ":", "\n", "        ", "super", "(", "homo_adv_setting", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_loci", "=", "set_loci", "\n", "self", ".", "adv_setting_list", "=", "adv_setting_list", "\n", "self", ".", "current_grid", "=", "current_grid", "\n", "self", ".", "applied_flag", "=", "applied_flag", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.init_ui": [[4104, 4246], ["FireCommander.homo_adv_setting.resize", "QPalette", "QPalette.setBrush", "FireCommander.homo_adv_setting.setPalette", "FireCommander.homo_adv_setting.setWindowTitle", "FireCommander.homo_adv_setting.transmit_value", "FireCommander.homo_adv_setting.set_default", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QLabel", "FireCommander.homo_adv_setting.environment_setup.setGeometry", "FireCommander.homo_adv_setting.environment_setup.setFont", "FireCommander.homo_adv_setting.environment_setup.setObjectName", "FireCommander.homo_adv_setting.environment_setup.setText", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.homo_adv_setting.perception_agent_altitude_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.homo_adv_setting.hybrid_agent_altitude_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.homo_adv_setting.Perception_Agents_Battery_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.homo_adv_setting.Action_Agents_Battery_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.homo_adv_setting.Hybrid_Agents_Battery_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.homo_adv_setting.Perception_Agents_Velocity_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.homo_adv_setting.Action_Agents_Velocity_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.homo_adv_setting.Hybrid_Agents_Velocity_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.homo_adv_setting.Action_Agents_Tank_Capacity_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.homo_adv_setting.Hybrid_Agents_Tank_Capacity_Edit.textChanged.connect", "QPushButton", "FireCommander.homo_adv_setting.back.setGeometry", "FireCommander.homo_adv_setting.back.setFont", "FireCommander.homo_adv_setting.back.setText", "FireCommander.homo_adv_setting.back.setStyleSheet", "FireCommander.homo_adv_setting.back.clicked.connect", "QPushButton", "FireCommander.homo_adv_setting.transfer.setGeometry", "FireCommander.homo_adv_setting.transfer.setFont", "FireCommander.homo_adv_setting.transfer.setText", "FireCommander.homo_adv_setting.transfer.setStyleSheet", "FireCommander.homo_adv_setting.transfer.clicked.connect", "QPushButton", "FireCommander.homo_adv_setting.skip.setGeometry", "FireCommander.homo_adv_setting.skip.setFont", "FireCommander.homo_adv_setting.skip.setText", "FireCommander.homo_adv_setting.skip.setStyleSheet", "FireCommander.homo_adv_setting.skip.clicked.connect", "QPushButton", "FireCommander.homo_adv_setting.next.setGeometry", "FireCommander.homo_adv_setting.next.setFont", "FireCommander.homo_adv_setting.next.setText", "FireCommander.homo_adv_setting.next.setStyleSheet", "FireCommander.homo_adv_setting.next.clicked.connect", "QBrush", "len", "FireCommander.homo_adv_setting.perception_agent_altitude_Edit.setPlaceholderText", "FireCommander.homo_adv_setting.perception_agent_altitude_Edit.setText", "len", "FireCommander.homo_adv_setting.hybrid_agent_altitude_Edit.setPlaceholderText", "FireCommander.homo_adv_setting.hybrid_agent_altitude_Edit.setText", "len", "FireCommander.homo_adv_setting.Perception_Agents_Battery_Limit_Edit.setPlaceholderText", "FireCommander.homo_adv_setting.Perception_Agents_Battery_Limit_Edit.setText", "len", "FireCommander.homo_adv_setting.Action_Agents_Battery_Limit_Edit.setPlaceholderText", "FireCommander.homo_adv_setting.Action_Agents_Battery_Limit_Edit.setText", "len", "FireCommander.homo_adv_setting.Hybrid_Agents_Battery_Limit_Edit.setPlaceholderText", "FireCommander.homo_adv_setting.Hybrid_Agents_Battery_Limit_Edit.setText", "len", "FireCommander.homo_adv_setting.Perception_Agents_Velocity_Limit_Edit.setPlaceholderText", "FireCommander.homo_adv_setting.Perception_Agents_Velocity_Limit_Edit.setText", "len", "FireCommander.homo_adv_setting.Action_Agents_Velocity_Limit_Edit.setPlaceholderText", "FireCommander.homo_adv_setting.Action_Agents_Velocity_Limit_Edit.setText", "len", "FireCommander.homo_adv_setting.Hybrid_Agents_Velocity_Limit_Edit.setPlaceholderText", "FireCommander.homo_adv_setting.Hybrid_Agents_Velocity_Limit_Edit.setText", "len", "FireCommander.homo_adv_setting.Action_Agents_Tank_Capacity_Edit.setPlaceholderText", "FireCommander.homo_adv_setting.Action_Agents_Tank_Capacity_Edit.setText", "len", "FireCommander.homo_adv_setting.Hybrid_Agents_Tank_Capacity_Edit.setPlaceholderText", "FireCommander.homo_adv_setting.Hybrid_Agents_Tank_Capacity_Edit.setText", "QPixmap", "FireCommander.homo_adv_setting.array_to_string", "FireCommander.homo_adv_setting.perception_agent_altitude_function", "FireCommander.homo_adv_setting.array_to_string", "FireCommander.homo_adv_setting.hybrid_agent_altitude_function", "FireCommander.homo_adv_setting.array_to_string", "FireCommander.homo_adv_setting.Perception_Agents_Battery_Limit_function", "FireCommander.homo_adv_setting.array_to_string", "FireCommander.homo_adv_setting.Action_Agents_Battery_Limit_function", "FireCommander.homo_adv_setting.array_to_string", "FireCommander.homo_adv_setting.Hybrid_Agents_Battery_Limit_function", "FireCommander.homo_adv_setting.array_to_string", "FireCommander.homo_adv_setting.Perception_Agents_Velocity_Limit_function", "FireCommander.homo_adv_setting.array_to_string", "FireCommander.homo_adv_setting.Action_Agents_Velocity_Limit_function", "FireCommander.homo_adv_setting.array_to_string", "FireCommander.homo_adv_setting.Hybrid_Agents_Velocity_Limit_function", "FireCommander.homo_adv_setting.array_to_string", "FireCommander.homo_adv_setting.Action_Agents_Tank_Capacity_Limit_function", "FireCommander.homo_adv_setting.array_to_string", "FireCommander.homo_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_function", "FireCommander.homo_adv_setting.perception_agent_altitude_Edit.text", "FireCommander.homo_adv_setting.hybrid_agent_altitude_Edit.text", "FireCommander.homo_adv_setting.Perception_Agents_Battery_Limit_Edit.text", "FireCommander.homo_adv_setting.Action_Agents_Battery_Limit_Edit.text", "FireCommander.homo_adv_setting.Hybrid_Agents_Battery_Limit_Edit.text", "FireCommander.homo_adv_setting.Perception_Agents_Velocity_Limit_Edit.text", "FireCommander.homo_adv_setting.Action_Agents_Velocity_Limit_Edit.text", "FireCommander.homo_adv_setting.Hybrid_Agents_Velocity_Limit_Edit.text", "FireCommander.homo_adv_setting.Action_Agents_Tank_Capacity_Edit.text", "FireCommander.homo_adv_setting.Hybrid_Agents_Tank_Capacity_Edit.text"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transmit_value", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.set_default", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.perception_agent_altitude_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.hybrid_agent_altitude_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_function"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Advanced Setting (Homogeneous)'", ")", "\n", "\n", "self", ".", "right_upper_x", "=", "160", "\n", "self", ".", "right_upper_y", "=", "120", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "500", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "self", ".", "raw_list", "=", "[", "''", ",", "''", ",", "''", ",", "''", ",", "''", ",", "''", ",", "''", ",", "''", ",", "''", ",", "''", "]", "\n", "self", ".", "transmit_value", "(", ")", "\n", "self", ".", "set_default", "(", ")", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_button2", "=", "QFont", "(", "'arial'", ")", "\n", "font_button2", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "\n", "self", ".", "environment_setup", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "environment_setup", ".", "setGeometry", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "environment_setup", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "environment_setup", ".", "setObjectName", "(", "\"adv_setting_Homo\"", ")", "\n", "self", ".", "environment_setup", ".", "setText", "(", "\"Advanced Setting (Homogeneous):\"", ")", "\n", "\n", "# Perception Agent altitude input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "1.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Perception Agent Altitude Limitations:\"", ",", "\"perception_agent_altitude\"", ")", ",", "1", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "0", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "perception_agent_altitude_Edit", ".", "setPlaceholderText", "(", "'[\ud835\udc67_\ud835\udc5a\ud835\udc56\ud835\udc5b,\ud835\udc67_\ud835\udc5a\ud835\udc4e\ud835\udc65]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "perception_agent_altitude_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "0", "]", ")", ")", "\n", "", "self", ".", "perception_agent_altitude_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "perception_agent_altitude_function", "(", "(", "self", ".", "perception_agent_altitude_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Hybrid Agent altitude input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Hybrid Agent Altitude Limitations:\"", ",", "\"hybrid_agent_altitude\"", ")", ",", "2", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "1", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "hybrid_agent_altitude_Edit", ".", "setPlaceholderText", "(", "'[\ud835\udc67_\ud835\udc5a\ud835\udc56\ud835\udc5b,\ud835\udc67_\ud835\udc5a\ud835\udc4e\ud835\udc65]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "hybrid_agent_altitude_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "1", "]", ")", ")", "\n", "", "self", ".", "hybrid_agent_altitude_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "hybrid_agent_altitude_function", "(", "(", "self", ".", "hybrid_agent_altitude_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Perception Agents Battery Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "4", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Perception Agents Battery Limit:\"", ",", "\"Perception_Agents_Battery_Limit\"", ")", ",", "3", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "2", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Perception_Agents_Battery_Limit_Edit", ".", "setPlaceholderText", "(", "'\ud835\udc4f_\ud835\udc5a\ud835\udc4e\ud835\udc65'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Perception_Agents_Battery_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "2", "]", ")", ")", "\n", "", "self", ".", "Perception_Agents_Battery_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Perception_Agents_Battery_Limit_function", "(", "(", "self", ".", "Perception_Agents_Battery_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Action Agents Battery Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Action Agents Battery Limit:\"", ",", "\"Action_Agents_Battery_Limit\"", ")", ",", "4", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "3", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Action_Agents_Battery_Limit_Edit", ".", "setPlaceholderText", "(", "'\ud835\udc4f_\ud835\udc5a\ud835\udc4e\ud835\udc65'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Action_Agents_Battery_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "3", "]", ")", ")", "\n", "", "self", ".", "Action_Agents_Battery_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Action_Agents_Battery_Limit_function", "(", "(", "self", ".", "Action_Agents_Battery_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Hybrid Agents Battery Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "6", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Hybrid Agents Battery Limit:\"", ",", "\"Hybrid_Agents_Battery_Limit\"", ")", ",", "5", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "4", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Battery_Limit_Edit", ".", "setPlaceholderText", "(", "'\ud835\udc4f_\ud835\udc5a\ud835\udc4e\ud835\udc65'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Battery_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "4", "]", ")", ")", "\n", "", "self", ".", "Hybrid_Agents_Battery_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Hybrid_Agents_Battery_Limit_function", "(", "(", "self", ".", "Hybrid_Agents_Battery_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Perception Agents Velocity Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "7.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Perception Agents Velocity Limit:\"", ",", "\"Perception_Agents_Velocity_Limit\"", ")", ",", "6", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "5", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Perception_Agents_Velocity_Limit_Edit", ".", "setPlaceholderText", "(", "'\ud835\udc63_\ud835\udc5a\ud835\udc4e\ud835\udc65'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Perception_Agents_Velocity_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "5", "]", ")", ")", "\n", "", "self", ".", "Perception_Agents_Velocity_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Perception_Agents_Velocity_Limit_function", "(", "(", "self", ".", "Perception_Agents_Velocity_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Action Agents Velocity Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "8.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Action Agents Velocity Limit:\"", ",", "\"Action_Agents_Velocity_Limit\"", ")", ",", "7", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "6", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Action_Agents_Velocity_Limit_Edit", ".", "setPlaceholderText", "(", "'\ud835\udc63_\ud835\udc5a\ud835\udc4e\ud835\udc65'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Action_Agents_Velocity_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "6", "]", ")", ")", "\n", "", "self", ".", "Action_Agents_Velocity_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Action_Agents_Velocity_Limit_function", "(", "(", "self", ".", "Action_Agents_Velocity_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Hybrid Agents Velocity Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "9.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Hybrid Agents Velocity Limit:\"", ",", "\"Hybrid_Agents_Velocity_Limit\"", ")", ",", "8", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "7", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Velocity_Limit_Edit", ".", "setPlaceholderText", "(", "'\ud835\udc63_\ud835\udc5a\ud835\udc4e\ud835\udc65'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Velocity_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "7", "]", ")", ")", "\n", "", "self", ".", "Hybrid_Agents_Velocity_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Hybrid_Agents_Velocity_Limit_function", "(", "(", "self", ".", "Hybrid_Agents_Velocity_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Action Agents Tank Capacity input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "11", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Action Agents Tank Capacity:\"", ",", "\"Action_Agents_Tank_Capacity\"", ")", ",", "9", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "8", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Action_Agents_Tank_Capacity_Edit", ".", "setPlaceholderText", "(", "'\ud835\udc50_\ud835\udc5a\ud835\udc4e\ud835\udc65'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Action_Agents_Tank_Capacity_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "8", "]", ")", ")", "\n", "", "self", ".", "Action_Agents_Tank_Capacity_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Action_Agents_Tank_Capacity_Limit_function", "(", "(", "self", ".", "Action_Agents_Tank_Capacity_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Hybrid Agents Tank Capacity input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "12", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Hybrid Agents Tank Capacity:\"", ",", "\"Hybrid_Agents_Tank_Capacity\"", ")", ",", "10", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "9", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Tank_Capacity_Edit", ".", "setPlaceholderText", "(", "'\ud835\udc50_\ud835\udc5a\ud835\udc4e\ud835\udc65'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Tank_Capacity_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "9", "]", ")", ")", "\n", "", "self", ".", "Hybrid_Agents_Tank_Capacity_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Hybrid_Agents_Tank_Capacity_Limit_function", "(", "(", "self", ".", "Hybrid_Agents_Tank_Capacity_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "125", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "transfer", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "transfer", ".", "setGeometry", "(", "475", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "transfer", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "transfer", ".", "setText", "(", "'Transfer to \\nHeterogenous'", ")", "\n", "self", ".", "transfer", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "transfer", ".", "clicked", ".", "connect", "(", "self", ".", "transfer_function", ")", "\n", "\n", "self", ".", "skip", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "skip", ".", "setGeometry", "(", "825", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "skip", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "skip", ".", "setText", "(", "'Skip'", ")", "\n", "self", ".", "skip", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "skip", ".", "clicked", ".", "connect", "(", "self", ".", "skip_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1174", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.paintEvent": [[4247, 4257], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPen", "QBrush", "QColor", "QColor"], "methods", ["None"], ["", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "110", ",", "90", ",", "1400", ",", "800", ")", "\n", "\n", "painter3", "=", "QPainter", "(", "self", ")", "\n", "painter3", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter3", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter3", ".", "drawRect", "(", "140", ",", "110", ",", "1340", ",", "640", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.set_default": [[4258, 4260], ["None"], "methods", ["None"], ["", "def", "set_default", "(", "self", ")", ":", "\n", "        ", "self", ".", "default_list", "=", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.perception_agent_altitude_function": [[4261, 4263], ["str"], "methods", ["None"], ["", "def", "perception_agent_altitude_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "0", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.hybrid_agent_altitude_function": [[4264, 4266], ["str"], "methods", ["None"], ["", "def", "hybrid_agent_altitude_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "1", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Perception_Agents_Battery_Limit_function": [[4267, 4269], ["str"], "methods", ["None"], ["", "def", "Perception_Agents_Battery_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "2", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Action_Agents_Battery_Limit_function": [[4270, 4272], ["str"], "methods", ["None"], ["", "def", "Action_Agents_Battery_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "3", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Hybrid_Agents_Battery_Limit_function": [[4273, 4275], ["str"], "methods", ["None"], ["", "def", "Hybrid_Agents_Battery_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "4", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Perception_Agents_Velocity_Limit_function": [[4276, 4278], ["str"], "methods", ["None"], ["", "def", "Perception_Agents_Velocity_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "5", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Action_Agents_Velocity_Limit_function": [[4279, 4281], ["str"], "methods", ["None"], ["", "def", "Action_Agents_Velocity_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "6", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Hybrid_Agents_Velocity_Limit_function": [[4282, 4284], ["str"], "methods", ["None"], ["", "def", "Hybrid_Agents_Velocity_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "7", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Action_Agents_Tank_Capacity_Limit_function": [[4285, 4287], ["str"], "methods", ["None"], ["", "def", "Action_Agents_Tank_Capacity_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "8", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_function": [[4288, 4290], ["str"], "methods", ["None"], ["", "def", "Hybrid_Agents_Tank_Capacity_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "9", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.perception_agent_altitude_Determination": [[4291, 4321], ["FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.homo_adv_setting.split", "FireCommander.homo_adv_setting.replace().isdigit", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate_double", "FireCommander.homo_adv_setting.replace", "QMessageBox.warning", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace", "QMessageBox.warning", "FireCommander.list_division", "FireCommander.homo_adv_setting.raw_list[].replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate_double", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division"], ["", "def", "perception_agent_altitude_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "0", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "perception_agent_altitude_str", "=", "self", ".", "raw_list", "[", "0", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "perception_agent_altitude_list", "=", "perception_agent_altitude_str", ".", "split", "(", "','", ")", "\n", "if", "not", "perception_agent_altitude_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "perception_agent_altitude_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "0", "]", "=", "self", ".", "default_list", "[", "0", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Perception agent altitude must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "perception_agent_altitude_list", ")", "!=", "2", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the perception agent altitude must be 2 for homogeneous team'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "height_flag", "=", "digit_validate_double", "(", "perception_agent_altitude_list", ",", "10", ",", "-", "1", ",", "100", ",", "1", ")", "\n", "if", "height_flag", "==", "1", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "\n", "'The lower bound of the perception agent altitude must between 10 and 100, and lower than the upper bound'", ")", "\n", "return", "False", "\n", "", "elif", "height_flag", "==", "2", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "\n", "'The upper bound of the perception agent altitude must between 10 and 100, and higher than the lower bound'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "0", "]", "=", "list_division", "(", "perception_agent_altitude_list", ",", "1", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.hybrid_agent_altitude_Determination": [[4322, 4350], ["FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.homo_adv_setting.split", "FireCommander.homo_adv_setting.replace().isdigit", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate_double", "FireCommander.homo_adv_setting.replace", "QMessageBox.warning", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace", "QMessageBox.warning", "FireCommander.list_division", "FireCommander.homo_adv_setting.raw_list[].replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate_double", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division"], ["", "", "", "", "def", "hybrid_agent_altitude_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "1", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "hybrid_agent_altitude_str", "=", "self", ".", "raw_list", "[", "1", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "hybrid_agent_altitude_list", "=", "hybrid_agent_altitude_str", ".", "split", "(", "','", ")", "\n", "if", "not", "hybrid_agent_altitude_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "hybrid_agent_altitude_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "1", "]", "=", "self", ".", "default_list", "[", "1", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Hybrid agent altitude must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "hybrid_agent_altitude_list", ")", "!=", "2", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the hybrid agent altitude must be 2 for homogeneous team'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "height_flag", "=", "digit_validate_double", "(", "hybrid_agent_altitude_list", ",", "10", ",", "20", ",", "100", ",", "1", ")", "\n", "if", "height_flag", "==", "1", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The lower bound of the hybrid agent altitude must between 10 and 20'", ")", "\n", "return", "False", "\n", "", "elif", "height_flag", "==", "2", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The upper bound of the hybrid agent altitude must between 20 and 100'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "1", "]", "=", "list_division", "(", "hybrid_agent_altitude_list", ",", "1", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Perception_Agents_Battery_Limit_Determination": [[4351, 4376], ["FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.homo_adv_setting.split", "FireCommander.homo_adv_setting.replace().isdigit", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.homo_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Perception_Agents_Battery_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "2", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Perception_Agents_Battery_Limit_str", "=", "self", ".", "raw_list", "[", "2", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Perception_Agents_Battery_Limit_list", "=", "Perception_Agents_Battery_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Perception_Agents_Battery_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Perception_Agents_Battery_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "2", "]", "=", "self", ".", "default_list", "[", "2", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Perception agents battery limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Perception_Agents_Battery_Limit_list", ")", "!=", "1", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the perception agents battery limit must be 1 for homogeneous team'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "battery_flag", "=", "digit_validate", "(", "Perception_Agents_Battery_Limit_list", ",", "200", ",", "800", ",", "1", ")", "\n", "if", "not", "battery_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Perception agents battery limit must between 200 and 800'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "2", "]", "=", "list_division_single", "(", "Perception_Agents_Battery_Limit_list", ",", "1", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Action_Agents_Battery_Limit_Determination": [[4377, 4402], ["FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.homo_adv_setting.split", "FireCommander.homo_adv_setting.replace().isdigit", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.homo_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Action_Agents_Battery_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "3", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Action_Agents_Battery_Limit_str", "=", "self", ".", "raw_list", "[", "3", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Action_Agents_Battery_Limit_list", "=", "Action_Agents_Battery_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Action_Agents_Battery_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Action_Agents_Battery_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "3", "]", "=", "self", ".", "default_list", "[", "3", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Initial action agent battery limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Action_Agents_Battery_Limit_list", ")", "!=", "1", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the initial action agents battery limit must be 1 for homogeneous team'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "battery_flag", "=", "digit_validate", "(", "Action_Agents_Battery_Limit_list", ",", "200", ",", "800", ",", "1", ")", "\n", "if", "not", "battery_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Action agents battery limit must between 200 and 800'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "3", "]", "=", "list_division_single", "(", "Action_Agents_Battery_Limit_list", ",", "1", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Hybrid_Agents_Battery_Limit_Determination": [[4403, 4428], ["FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.homo_adv_setting.split", "FireCommander.homo_adv_setting.replace().isdigit", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.homo_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Hybrid_Agents_Battery_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "4", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Hybrid_Agents_Battery_Limit_str", "=", "self", ".", "raw_list", "[", "4", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Hybrid_Agents_Battery_Limit_list", "=", "Hybrid_Agents_Battery_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Hybrid_Agents_Battery_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Hybrid_Agents_Battery_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "4", "]", "=", "self", ".", "default_list", "[", "4", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Initial hybrid agents battery limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Hybrid_Agents_Battery_Limit_list", ")", "!=", "1", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the initial hybrid agents battery limit must be 1 for homogeneous team'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "battery_flag", "=", "digit_validate", "(", "Hybrid_Agents_Battery_Limit_list", ",", "200", ",", "800", ",", "1", ")", "\n", "if", "not", "battery_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Hybrid agents battery limit must between 200 and 800'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "4", "]", "=", "list_division_single", "(", "Hybrid_Agents_Battery_Limit_list", ",", "1", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Perception_Agents_Velocity_Limit_Determination": [[4429, 4454], ["FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.homo_adv_setting.split", "FireCommander.homo_adv_setting.replace().isdigit", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.homo_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Perception_Agents_Velocity_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "5", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Perception_Agents_Velocity_Limit_str", "=", "self", ".", "raw_list", "[", "5", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Perception_Agents_Velocity_Limit_list", "=", "Perception_Agents_Velocity_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Perception_Agents_Velocity_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Perception_Agents_Velocity_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "5", "]", "=", "self", ".", "default_list", "[", "5", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Perception agents velocity limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Perception_Agents_Velocity_Limit_list", ")", "!=", "1", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the perception agents velocity limit must be 1 for homogeneous team'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "velocity_flag", "=", "digit_validate", "(", "Perception_Agents_Velocity_Limit_list", ",", "10", ",", "30", ",", "1", ")", "\n", "if", "not", "velocity_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Perception agents velocity limit must between 10 and 30'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "5", "]", "=", "list_division_single", "(", "Perception_Agents_Velocity_Limit_list", ",", "1", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Action_Agents_Velocity_Limit_Determination": [[4455, 4480], ["FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.homo_adv_setting.split", "FireCommander.homo_adv_setting.replace().isdigit", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.homo_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Action_Agents_Velocity_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "6", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Action_Agents_Velocity_Limit_str", "=", "self", ".", "raw_list", "[", "6", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Action_Agents_Velocity_Limit_list", "=", "Action_Agents_Velocity_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Action_Agents_Velocity_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Action_Agents_Velocity_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "6", "]", "=", "self", ".", "default_list", "[", "6", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Action agents velocity limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Action_Agents_Velocity_Limit_list", ")", "!=", "1", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the action agents velocity limit must be 1 for homogeneous team'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "velocity_flag", "=", "digit_validate", "(", "Action_Agents_Velocity_Limit_list", ",", "10", ",", "30", ",", "1", ")", "\n", "if", "not", "velocity_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Action agents velocity limit must between 10 and 30'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "6", "]", "=", "list_division_single", "(", "Action_Agents_Velocity_Limit_list", ",", "1", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Hybrid_Agents_Velocity_Limit_Determination": [[4481, 4506], ["FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.homo_adv_setting.split", "FireCommander.homo_adv_setting.replace().isdigit", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.homo_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Hybrid_Agents_Velocity_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "7", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Hybrid_Agents_Velocity_Limit_str", "=", "self", ".", "raw_list", "[", "7", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Hybrid_Agents_Velocity_Limit_list", "=", "Hybrid_Agents_Velocity_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Hybrid_Agents_Velocity_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Hybrid_Agents_Velocity_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "7", "]", "=", "self", ".", "default_list", "[", "7", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Hybrid agents velocity limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Hybrid_Agents_Velocity_Limit_list", ")", "!=", "1", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the hybrid agents velocity limit must be 1 for homogeneous team'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "velocity_flag", "=", "digit_validate", "(", "Hybrid_Agents_Velocity_Limit_list", ",", "10", ",", "30", ",", "1", ")", "\n", "if", "not", "velocity_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Hybrid agents velocity limit must between 10 and 30'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "7", "]", "=", "list_division_single", "(", "Hybrid_Agents_Velocity_Limit_list", ",", "1", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Action_Agents_Tank_Capacity_Limit_Determination": [[4507, 4532], ["FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.homo_adv_setting.split", "FireCommander.homo_adv_setting.replace().isdigit", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.homo_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Action_Agents_Tank_Capacity_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "8", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Action_Agents_Tank_Capacity_Limit_str", "=", "self", ".", "raw_list", "[", "8", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Action_Agents_Tank_Capacity_Limit_list", "=", "Action_Agents_Tank_Capacity_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Action_Agents_Tank_Capacity_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Action_Agents_Tank_Capacity_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "8", "]", "=", "self", ".", "default_list", "[", "8", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Action agents water tank capacity limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Action_Agents_Tank_Capacity_Limit_list", ")", "!=", "1", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the action agents water tank capacity limit must be 1 for homogeneous team'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "water_capacity_flag", "=", "digit_validate", "(", "Action_Agents_Tank_Capacity_Limit_list", ",", "1", ",", "15", ",", "1", ")", "\n", "if", "not", "water_capacity_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Action agents water tank capacity limit must between 1 and 15'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "8", "]", "=", "list_division_single", "(", "Action_Agents_Tank_Capacity_Limit_list", ",", "1", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_Determination": [[4533, 4558], ["FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.homo_adv_setting.split", "FireCommander.homo_adv_setting.replace().isdigit", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.homo_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.homo_adv_setting.raw_list[].replace().replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace().replace", "FireCommander.homo_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Hybrid_Agents_Tank_Capacity_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "9", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Hybrid_Agents_Tank_Capacity_Limit_str", "=", "self", ".", "raw_list", "[", "9", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Hybrid_Agents_Tank_Capacity_Limit_list", "=", "Hybrid_Agents_Tank_Capacity_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Hybrid_Agents_Tank_Capacity_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Hybrid_Agents_Tank_Capacity_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "9", "]", "=", "self", ".", "default_list", "[", "9", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: hybrid agents tank capacity must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Hybrid_Agents_Tank_Capacity_Limit_list", ")", "!=", "1", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the hybrid agents tank capacity must be 1 for homogeneous team'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "water_capacity_flag", "=", "digit_validate", "(", "Hybrid_Agents_Tank_Capacity_Limit_list", ",", "1", ",", "15", ",", "1", ")", "\n", "if", "not", "water_capacity_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Hybrid agents water tank capacity limit must between 1 and 15'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "8", "]", "=", "list_division_single", "(", "Hybrid_Agents_Tank_Capacity_Limit_list", ",", "1", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.string_to_array": [[4559, 4573], ["FireCommander.homo_adv_setting.perception_agent_altitude_Determination", "FireCommander.homo_adv_setting.hybrid_agent_altitude_Determination", "FireCommander.homo_adv_setting.Perception_Agents_Battery_Limit_Determination", "FireCommander.homo_adv_setting.Action_Agents_Battery_Limit_Determination", "FireCommander.homo_adv_setting.Hybrid_Agents_Battery_Limit_Determination", "FireCommander.homo_adv_setting.Perception_Agents_Velocity_Limit_Determination", "FireCommander.homo_adv_setting.Action_Agents_Velocity_Limit_Determination", "FireCommander.homo_adv_setting.Hybrid_Agents_Velocity_Limit_Determination", "FireCommander.homo_adv_setting.Action_Agents_Tank_Capacity_Limit_Determination", "FireCommander.homo_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_Determination"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.perception_agent_altitude_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.hybrid_agent_altitude_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_Determination"], ["", "", "", "", "def", "string_to_array", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "perception_agent_altitude_Determination", "(", ")", ":", "\n", "            ", "if", "self", ".", "hybrid_agent_altitude_Determination", "(", ")", ":", "\n", "                ", "if", "self", ".", "Perception_Agents_Battery_Limit_Determination", "(", ")", ":", "\n", "                    ", "if", "self", ".", "Action_Agents_Battery_Limit_Determination", "(", ")", ":", "\n", "                        ", "if", "self", ".", "Hybrid_Agents_Battery_Limit_Determination", "(", ")", ":", "\n", "                            ", "if", "self", ".", "Perception_Agents_Velocity_Limit_Determination", "(", ")", ":", "\n", "                                ", "if", "self", ".", "Action_Agents_Velocity_Limit_Determination", "(", ")", ":", "\n", "                                    ", "if", "self", ".", "Hybrid_Agents_Velocity_Limit_Determination", "(", ")", ":", "\n", "                                        ", "if", "self", ".", "Action_Agents_Tank_Capacity_Limit_Determination", "(", ")", ":", "\n", "                                            ", "if", "self", ".", "Hybrid_Agents_Tank_Capacity_Limit_Determination", "(", ")", ":", "\n", "                                                ", "default", "=", "True", "\n", "", "", "", "", "", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.array_to_string": [[4574, 4585], ["range", "len", "len", "str", "len", "str", "str"], "methods", ["None"], ["", "def", "array_to_string", "(", "self", ",", "list", ")", ":", "\n", "        ", "out_str", "=", "'['", "\n", "for", "i", "in", "range", "(", "len", "(", "list", ")", ")", ":", "\n", "            ", "if", "len", "(", "list", "[", "i", "]", ")", "==", "1", ":", "\n", "                ", "out_str", "+=", "str", "(", "list", "[", "i", "]", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "out_str", "+=", "'('", "+", "str", "(", "list", "[", "i", "]", "[", "0", "]", ")", "+", "', '", "+", "str", "(", "list", "[", "i", "]", "[", "1", "]", ")", "+", "')'", "\n", "", "if", "i", "<", "(", "len", "(", "list", ")", "-", "1", ")", ":", "\n", "                ", "out_str", "+=", "', '", "\n", "", "", "out_str", "+=", "']'", "\n", "return", "out_str", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.transmit_value": [[4586, 4592], ["range", "len", "len", "FireCommander.homo_adv_setting.array_to_string"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string"], ["", "def", "transmit_value", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "raw_list", ")", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "adv_setting_list", "[", "i", "]", ")", "==", "0", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "''", "\n", "", "else", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.back_function": [[4593, 4597], ["FireCommander.homo_adv_setting.hide", "FireCommander.lake_location_define", "FireCommander.homo_adv_setting.screen.show"], "methods", ["None"], ["", "", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "lake_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.transfer_function": [[4598, 4604], ["FireCommander.homo_adv_setting.hide", "FireCommander.hetero_adv_setting", "FireCommander.homo_adv_setting.screen.show"], "methods", ["None"], ["", "def", "transfer_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "robo_team_para", "[", "3", "]", "=", "1", "\n", "self", ".", "adv_setting_list", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "hetero_adv_setting", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.skip_function": [[4605, 4613], ["FireCommander.pre_View", "QMessageBox.question", "FireCommander.homo_adv_setting.hide", "FireCommander.tutorial", "FireCommander.homo_adv_setting.screen.show"], "methods", ["None"], ["", "def", "skip_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "adv_setting_list", "=", "self", ".", "default_list", "\n", "self", ".", "screen", "=", "pre_View", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ")", "\n", "answer", "=", "QMessageBox", ".", "question", "(", "self", ",", "'Environment Pre-View'", ",", "\"Do you like to proceed with this environment design?\"", ",", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "No", ",", "QMessageBox", ".", "No", ")", "\n", "if", "answer", "==", "QMessageBox", ".", "Yes", ":", "\n", "            ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "tutorial", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ",", "0", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.homo_adv_setting.next_function": [[4614, 4622], ["FireCommander.homo_adv_setting.string_to_array", "FireCommander.pre_View", "QMessageBox.question", "FireCommander.homo_adv_setting.hide", "FireCommander.tutorial", "FireCommander.homo_adv_setting.screen.show"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.string_to_array"], ["", "", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "string_to_array", "(", ")", ":", "\n", "            ", "self", ".", "screen", "=", "pre_View", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ")", "\n", "answer", "=", "QMessageBox", ".", "question", "(", "self", ",", "'Environment Pre-View'", ",", "\"Do you like to proceed with this environment design?\"", ",", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "No", ",", "QMessageBox", ".", "No", ")", "\n", "if", "answer", "==", "QMessageBox", ".", "Yes", ":", "\n", "                ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "tutorial", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ",", "0", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.__init__": [[4625, 4634], ["QWidget.__init__", "FireCommander.hetero_adv_setting.init_ui"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_loci", ",", "adv_setting_list", ",", "current_grid", ",", "applied_flag", ")", ":", "\n", "        ", "super", "(", "hetero_adv_setting", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_loci", "=", "set_loci", "\n", "self", ".", "adv_setting_list", "=", "adv_setting_list", "\n", "self", ".", "current_grid", "=", "current_grid", "\n", "self", ".", "applied_flag", "=", "applied_flag", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.init_ui": [[4635, 4777], ["FireCommander.hetero_adv_setting.resize", "QPalette", "QPalette.setBrush", "FireCommander.hetero_adv_setting.setPalette", "FireCommander.hetero_adv_setting.setWindowTitle", "FireCommander.hetero_adv_setting.transmit_value", "FireCommander.hetero_adv_setting.set_default", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QLabel", "FireCommander.hetero_adv_setting.environment_setup.setGeometry", "FireCommander.hetero_adv_setting.environment_setup.setFont", "FireCommander.hetero_adv_setting.environment_setup.setObjectName", "FireCommander.hetero_adv_setting.environment_setup.setText", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.hetero_adv_setting.perception_agent_altitude_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.hetero_adv_setting.hybrid_agent_altitude_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Edit.textChanged.connect", "FireCommander.environment_Setting_Ctl_normal", "FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Edit.textChanged.connect", "QPushButton", "FireCommander.hetero_adv_setting.back.setGeometry", "FireCommander.hetero_adv_setting.back.setFont", "FireCommander.hetero_adv_setting.back.setText", "FireCommander.hetero_adv_setting.back.setStyleSheet", "FireCommander.hetero_adv_setting.back.clicked.connect", "QPushButton", "FireCommander.hetero_adv_setting.transfer.setGeometry", "FireCommander.hetero_adv_setting.transfer.setFont", "FireCommander.hetero_adv_setting.transfer.setText", "FireCommander.hetero_adv_setting.transfer.setStyleSheet", "FireCommander.hetero_adv_setting.transfer.clicked.connect", "QPushButton", "FireCommander.hetero_adv_setting.skip.setGeometry", "FireCommander.hetero_adv_setting.skip.setFont", "FireCommander.hetero_adv_setting.skip.setText", "FireCommander.hetero_adv_setting.skip.setStyleSheet", "FireCommander.hetero_adv_setting.skip.clicked.connect", "QPushButton", "FireCommander.hetero_adv_setting.next.setGeometry", "FireCommander.hetero_adv_setting.next.setFont", "FireCommander.hetero_adv_setting.next.setText", "FireCommander.hetero_adv_setting.next.setStyleSheet", "FireCommander.hetero_adv_setting.next.clicked.connect", "QBrush", "len", "FireCommander.hetero_adv_setting.perception_agent_altitude_Edit.setPlaceholderText", "FireCommander.hetero_adv_setting.perception_agent_altitude_Edit.setText", "len", "FireCommander.hetero_adv_setting.hybrid_agent_altitude_Edit.setPlaceholderText", "FireCommander.hetero_adv_setting.hybrid_agent_altitude_Edit.setText", "len", "FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_Edit.setPlaceholderText", "FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_Edit.setText", "len", "FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_Edit.setPlaceholderText", "FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_Edit.setText", "len", "FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_Edit.setPlaceholderText", "FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_Edit.setText", "len", "FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_Edit.setPlaceholderText", "FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_Edit.setText", "len", "FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_Edit.setPlaceholderText", "FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_Edit.setText", "len", "FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_Edit.setPlaceholderText", "FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_Edit.setText", "len", "FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Edit.setPlaceholderText", "FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Edit.setText", "len", "FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Edit.setPlaceholderText", "FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Edit.setText", "QPixmap", "FireCommander.hetero_adv_setting.array_to_string", "FireCommander.hetero_adv_setting.perception_agents_altitude_function", "FireCommander.hetero_adv_setting.array_to_string", "FireCommander.hetero_adv_setting.hybrid_agents_altitude_function", "FireCommander.hetero_adv_setting.array_to_string", "FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_function", "FireCommander.hetero_adv_setting.array_to_string", "FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_function", "FireCommander.hetero_adv_setting.array_to_string", "FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_function", "FireCommander.hetero_adv_setting.array_to_string", "FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_function", "FireCommander.hetero_adv_setting.array_to_string", "FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_function", "FireCommander.hetero_adv_setting.array_to_string", "FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_function", "FireCommander.hetero_adv_setting.array_to_string", "FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Limit_function", "FireCommander.hetero_adv_setting.array_to_string", "FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_function", "FireCommander.hetero_adv_setting.perception_agent_altitude_Edit.text", "FireCommander.hetero_adv_setting.hybrid_agent_altitude_Edit.text", "FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_Edit.text", "FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_Edit.text", "FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_Edit.text", "FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_Edit.text", "FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_Edit.text", "FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_Edit.text", "FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Edit.text", "FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Edit.text"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transmit_value", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.set_default", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.perception_agents_altitude_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.hybrid_agents_altitude_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Limit_function", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_function"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Advanced Setting (Heterogeneous)'", ")", "\n", "\n", "self", ".", "right_upper_x", "=", "160", "\n", "self", ".", "right_upper_y", "=", "120", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "500", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "self", ".", "raw_list", "=", "[", "''", ",", "''", ",", "''", ",", "''", ",", "''", ",", "''", ",", "''", ",", "''", ",", "''", ",", "''", "]", "\n", "self", ".", "transmit_value", "(", ")", "\n", "self", ".", "set_default", "(", ")", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "14", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_button2", "=", "QFont", "(", "'arial'", ")", "\n", "font_button2", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "20", ",", "75", ")", "\n", "\n", "self", ".", "environment_setup", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "environment_setup", ".", "setGeometry", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "environment_setup", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "environment_setup", ".", "setObjectName", "(", "\"adv_setting_Hetero\"", ")", "\n", "self", ".", "environment_setup", ".", "setText", "(", "\"Advanced Setting (Heterogeneous):\"", ")", "\n", "\n", "# Perception Agent altitude input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "1.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Perception Agent Altitude Limitations:\"", ",", "\"perception_agent_altitude\"", ")", ",", "1", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "0", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "perception_agent_altitude_Edit", ".", "setPlaceholderText", "(", "'[\ud835\udc67_\ud835\udc5a\ud835\udc56\ud835\udc5b,\ud835\udc67_\ud835\udc5a\ud835\udc4e\ud835\udc65]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "perception_agent_altitude_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "0", "]", ")", ")", "\n", "", "self", ".", "perception_agent_altitude_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "perception_agents_altitude_function", "(", "(", "self", ".", "perception_agent_altitude_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Hybrid Agent altitude input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "2.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Hybrid Agent Altitude Limitations:\"", ",", "\"hybrid_agent_altitude\"", ")", ",", "2", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "1", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "hybrid_agent_altitude_Edit", ".", "setPlaceholderText", "(", "'[\ud835\udc67_\ud835\udc5a\ud835\udc56\ud835\udc5b,\ud835\udc67_\ud835\udc5a\ud835\udc4e\ud835\udc65]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "hybrid_agent_altitude_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "1", "]", ")", ")", "\n", "", "self", ".", "hybrid_agent_altitude_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "hybrid_agents_altitude_function", "(", "(", "self", ".", "hybrid_agent_altitude_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Perception Agents Battery Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "4", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Perception Agents Battery Limit:\"", ",", "\"Perception_Agents_Battery_Limit\"", ")", ",", "3", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "2", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Perception_Agents_Battery_Limit_Edit", ".", "setPlaceholderText", "(", "'[\ud835\udc4f_\ud835\udc5a\ud835\udc4e\ud835\udc65^1, \u2026,\ud835\udc4f_\ud835\udc5a\ud835\udc4e\ud835\udc65^(\ud835\udc41_\ud835\udc43 )]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Perception_Agents_Battery_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "2", "]", ")", ")", "\n", "", "self", ".", "Perception_Agents_Battery_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Perception_Agents_Battery_Limit_function", "(", "(", "self", ".", "Perception_Agents_Battery_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Action Agents Battery Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Action Agents Battery Limit:\"", ",", "\"Action_Agents_Battery_Limit\"", ")", ",", "4", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "3", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Action_Agents_Battery_Limit_Edit", ".", "setPlaceholderText", "(", "'[\ud835\udc4f_\ud835\udc5a\ud835\udc4e\ud835\udc65^1, \u2026,\ud835\udc4f_\ud835\udc5a\ud835\udc4e\ud835\udc65^(\ud835\udc41_\ud835\udc43 )]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Action_Agents_Battery_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "3", "]", ")", ")", "\n", "", "self", ".", "Action_Agents_Battery_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Action_Agents_Battery_Limit_function", "(", "(", "self", ".", "Action_Agents_Battery_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Hybrid Agents Battery Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "6", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Hybrid Agents Battery Limit:\"", ",", "\"Hybrid_Agents_Battery_Limit\"", ")", ",", "5", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "4", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Battery_Limit_Edit", ".", "setPlaceholderText", "(", "'[\ud835\udc4f_\ud835\udc5a\ud835\udc4e\ud835\udc65^1, \u2026,\ud835\udc4f_\ud835\udc5a\ud835\udc4e\ud835\udc65^(\ud835\udc41_\ud835\udc43 )]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Battery_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "4", "]", ")", ")", "\n", "", "self", ".", "Hybrid_Agents_Battery_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Hybrid_Agents_Battery_Limit_function", "(", "(", "self", ".", "Hybrid_Agents_Battery_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Perception Agents Velocity Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "7.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Perception Agents Velocity Limit:\"", ",", "\"Perception_Agents_Velocity_Limit\"", ")", ",", "6", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "5", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Perception_Agents_Velocity_Limit_Edit", ".", "setPlaceholderText", "(", "'[v_\ud835\udc5a\ud835\udc4e\ud835\udc65^1, \u2026,v_\ud835\udc5a\ud835\udc4e\ud835\udc65^(\ud835\udc41_\ud835\udc43 )]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Perception_Agents_Velocity_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "5", "]", ")", ")", "\n", "", "self", ".", "Perception_Agents_Velocity_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Perception_Agents_Velocity_Limit_function", "(", "(", "self", ".", "Perception_Agents_Velocity_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Action Agents Velocity Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "8.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Action Agents Velocity Limit:\"", ",", "\"Action_Agents_Velocity_Limit\"", ")", ",", "7", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "6", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Action_Agents_Velocity_Limit_Edit", ".", "setPlaceholderText", "(", "'[v_\ud835\udc5a\ud835\udc4e\ud835\udc65^1, \u2026,v_\ud835\udc5a\ud835\udc4e\ud835\udc65^(\ud835\udc41_\ud835\udc43 )]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Action_Agents_Velocity_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "6", "]", ")", ")", "\n", "", "self", ".", "Action_Agents_Velocity_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Action_Agents_Velocity_Limit_function", "(", "(", "self", ".", "Action_Agents_Velocity_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Hybrid Agents Velocity Limit input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "9.5", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Hybrid Agents Velocity Limit:\"", ",", "\"Hybrid_Agents_Velocity_Limit\"", ")", ",", "8", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "7", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Velocity_Limit_Edit", ".", "setPlaceholderText", "(", "'[v_\ud835\udc5a\ud835\udc4e\ud835\udc65^1, \u2026,v_\ud835\udc5a\ud835\udc4e\ud835\udc65^(\ud835\udc41_\ud835\udc43 )]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Velocity_Limit_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "7", "]", ")", ")", "\n", "", "self", ".", "Hybrid_Agents_Velocity_Limit_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Hybrid_Agents_Velocity_Limit_function", "(", "(", "self", ".", "Hybrid_Agents_Velocity_Limit_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Action Agents Tank Capacity input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "11", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Action Agents Tank Capacity:\"", ",", "\"Action_Agents_Tank_Capacity\"", ")", ",", "9", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "8", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Action_Agents_Tank_Capacity_Edit", ".", "setPlaceholderText", "(", "'[\ud835\udc50_\ud835\udc5a\ud835\udc4e\ud835\udc65^1, \u2026,\ud835\udc50_\ud835\udc5a\ud835\udc4e\ud835\udc65^(\ud835\udc41_\ud835\udc43 )]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Action_Agents_Tank_Capacity_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "8", "]", ")", ")", "\n", "", "self", ".", "Action_Agents_Tank_Capacity_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Action_Agents_Tank_Capacity_Limit_function", "(", "(", "self", ".", "Action_Agents_Tank_Capacity_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "# Hybrid Agent Tank Capacity input controller", "\n", "environment_Setting_Ctl_normal", "(", "self", ",", "font", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "12", "*", "self", ".", "left_y_interval", ")", ",", "(", "\"Hybrid Agents Tank Capacity:\"", ",", "\"Hybrid_Agents_Tank_Capacity\"", ")", ",", "10", ")", "\n", "if", "len", "(", "self", ".", "adv_setting_list", "[", "9", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Tank_Capacity_Edit", ".", "setPlaceholderText", "(", "'[\ud835\udc50_\ud835\udc5a\ud835\udc4e\ud835\udc65^1, \u2026,\ud835\udc50_\ud835\udc5a\ud835\udc4e\ud835\udc65^(\ud835\udc41_\ud835\udc43 )]'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "Hybrid_Agents_Tank_Capacity_Edit", ".", "setText", "(", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "9", "]", ")", ")", "\n", "", "self", ".", "Hybrid_Agents_Tank_Capacity_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "self", ".", "Hybrid_Agents_Tank_Capacity_Limit_function", "(", "(", "self", ".", "Hybrid_Agents_Tank_Capacity_Edit", ".", "text", "(", ")", ")", ")", ")", "\n", "\n", "self", ".", "back", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "back", ".", "setGeometry", "(", "125", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "back", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "back", ".", "setText", "(", "'Back'", ")", "\n", "self", ".", "back", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "back", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "transfer", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "transfer", ".", "setGeometry", "(", "475", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "transfer", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "transfer", ".", "setText", "(", "'Transfer to \\nHomgenous'", ")", "\n", "self", ".", "transfer", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "transfer", ".", "clicked", ".", "connect", "(", "self", ".", "transfer_function", ")", "\n", "\n", "self", ".", "skip", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "skip", ".", "setGeometry", "(", "825", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "skip", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "skip", ".", "setText", "(", "'Skip'", ")", "\n", "self", ".", "skip", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "skip", ".", "clicked", ".", "connect", "(", "self", ".", "skip_function", ")", "\n", "\n", "self", ".", "next", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "next", ".", "setGeometry", "(", "1174", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "next", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "next", ".", "setText", "(", "'Next >>'", ")", "\n", "self", ".", "next", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "next", ".", "clicked", ".", "connect", "(", "self", ".", "next_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.paintEvent": [[4778, 4788], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPen", "QBrush", "QPen", "QBrush", "QColor", "QColor"], "methods", ["None"], ["", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "110", ",", "90", ",", "1400", ",", "800", ")", "\n", "\n", "painter3", "=", "QPainter", "(", "self", ")", "\n", "painter3", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter3", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter3", ".", "drawRect", "(", "140", ",", "110", ",", "1340", ",", "640", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.perception_agents_altitude_function": [[4789, 4791], ["str"], "methods", ["None"], ["", "def", "perception_agents_altitude_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "0", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.hybrid_agents_altitude_function": [[4792, 4794], ["str"], "methods", ["None"], ["", "def", "hybrid_agents_altitude_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "1", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_function": [[4795, 4797], ["str"], "methods", ["None"], ["", "def", "Perception_Agents_Battery_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "2", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_function": [[4798, 4800], ["str"], "methods", ["None"], ["", "def", "Action_Agents_Battery_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "3", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_function": [[4801, 4803], ["str"], "methods", ["None"], ["", "def", "Hybrid_Agents_Battery_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "4", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_function": [[4804, 4806], ["str"], "methods", ["None"], ["", "def", "Perception_Agents_Velocity_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "5", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_function": [[4807, 4809], ["str"], "methods", ["None"], ["", "def", "Action_Agents_Velocity_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "6", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_function": [[4810, 4812], ["str"], "methods", ["None"], ["", "def", "Hybrid_Agents_Velocity_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "7", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Limit_function": [[4813, 4815], ["str"], "methods", ["None"], ["", "def", "Action_Agents_Tank_Capacity_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "8", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_function": [[4816, 4818], ["str"], "methods", ["None"], ["", "def", "Hybrid_Agents_Tank_Capacity_Limit_function", "(", "self", ",", "edit_str", ")", ":", "\n", "        ", "self", ".", "raw_list", "[", "9", "]", "=", "str", "(", "edit_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.perception_agent_altitude_Determination": [[4819, 4849], ["FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.hetero_adv_setting.split", "FireCommander.hetero_adv_setting.replace().isdigit", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate_double", "FireCommander.hetero_adv_setting.replace", "QMessageBox.warning", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace", "QMessageBox.warning", "FireCommander.list_division", "FireCommander.hetero_adv_setting.raw_list[].replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate_double", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division"], ["", "def", "perception_agent_altitude_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "0", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "perception_agent_altitude_str", "=", "self", ".", "raw_list", "[", "0", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "perception_agent_altitude_list", "=", "perception_agent_altitude_str", ".", "split", "(", "','", ")", "\n", "if", "not", "perception_agent_altitude_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "perception_agent_altitude_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "0", "]", "=", "self", ".", "default_list", "[", "0", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Perception agent altitude must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "perception_agent_altitude_list", ")", "!=", "2", "*", "self", ".", "robo_team_para", "[", "0", "]", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the perception agent altitude must be the same as the robot team parameter'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "height_flag", "=", "digit_validate_double", "(", "perception_agent_altitude_list", ",", "10", ",", "-", "1", ",", "100", ",", "self", ".", "robo_team_para", "[", "0", "]", ")", "\n", "if", "height_flag", "==", "1", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "\n", "'The lower bound of the perception agent altitude must between 10 and 100, and lower than the upper bound'", ")", "\n", "return", "False", "\n", "", "elif", "height_flag", "==", "2", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "\n", "'The upper bound of the perception agent altitude must between 10 and 100, and higher than the lower bound'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "0", "]", "=", "list_division", "(", "perception_agent_altitude_list", ",", "self", ".", "robo_team_para", "[", "0", "]", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.hybrid_agent_altitude_Determination": [[4850, 4878], ["FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.hetero_adv_setting.split", "FireCommander.hetero_adv_setting.replace().isdigit", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate_double", "FireCommander.hetero_adv_setting.replace", "QMessageBox.warning", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace", "QMessageBox.warning", "FireCommander.list_division", "FireCommander.hetero_adv_setting.raw_list[].replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate_double", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division"], ["", "", "", "", "def", "hybrid_agent_altitude_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "1", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "hybrid_agent_altitude_str", "=", "self", ".", "raw_list", "[", "1", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "hybrid_agent_altitude_list", "=", "hybrid_agent_altitude_str", ".", "split", "(", "','", ")", "\n", "if", "not", "hybrid_agent_altitude_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "hybrid_agent_altitude_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "1", "]", "=", "self", ".", "default_list", "[", "1", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Hybrid agent altitude must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "hybrid_agent_altitude_list", ")", "!=", "2", "*", "self", ".", "robo_team_para", "[", "2", "]", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the hybrid agent altitude must be the same as the robot team parameter'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "height_flag", "=", "digit_validate_double", "(", "hybrid_agent_altitude_list", ",", "10", ",", "20", ",", "100", ",", "self", ".", "robo_team_para", "[", "2", "]", ")", "\n", "if", "height_flag", "==", "1", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The lower bound of the hybrid agent altitude must between 10 and 20'", ")", "\n", "return", "False", "\n", "", "elif", "height_flag", "==", "2", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The upper bound of the hybrid agent altitude must between 20 and 100'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "1", "]", "=", "list_division", "(", "hybrid_agent_altitude_list", ",", "self", ".", "robo_team_para", "[", "2", "]", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_Determination": [[4879, 4904], ["FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.hetero_adv_setting.split", "FireCommander.hetero_adv_setting.replace().isdigit", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.hetero_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Perception_Agents_Battery_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "2", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Perception_Agents_Battery_Limit_str", "=", "self", ".", "raw_list", "[", "2", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Perception_Agents_Battery_Limit_list", "=", "Perception_Agents_Battery_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Perception_Agents_Battery_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Perception_Agents_Battery_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "2", "]", "=", "self", ".", "default_list", "[", "2", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Perception agent battery limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Perception_Agents_Battery_Limit_list", ")", "!=", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the perception agent battery limit must be the same as the robot team parameter'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "battery_flag", "=", "digit_validate", "(", "Perception_Agents_Battery_Limit_list", ",", "200", ",", "800", ",", "self", ".", "robo_team_para", "[", "0", "]", ")", "\n", "if", "not", "battery_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Perception agents battery limit must between 200 and 800'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "2", "]", "=", "list_division_single", "(", "Perception_Agents_Battery_Limit_list", ",", "self", ".", "robo_team_para", "[", "0", "]", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_Determination": [[4905, 4930], ["FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.hetero_adv_setting.split", "FireCommander.hetero_adv_setting.replace().isdigit", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.hetero_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Action_Agents_Battery_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "3", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Action_Agents_Battery_Limit_str", "=", "self", ".", "raw_list", "[", "3", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Action_Agents_Battery_Limit_list", "=", "Action_Agents_Battery_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Action_Agents_Battery_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Action_Agents_Battery_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "3", "]", "=", "self", ".", "default_list", "[", "3", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Action agent battery limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Action_Agents_Battery_Limit_list", ")", "!=", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the action agent battery limit must be the same as the robot team parameter'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "battery_flag", "=", "digit_validate", "(", "Action_Agents_Battery_Limit_list", ",", "200", ",", "800", ",", "self", ".", "robo_team_para", "[", "1", "]", ")", "\n", "if", "not", "battery_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Action agents battery limit must between 200 and 800'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "3", "]", "=", "list_division_single", "(", "Action_Agents_Battery_Limit_list", ",", "self", ".", "robo_team_para", "[", "1", "]", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_Determination": [[4931, 4956], ["FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.hetero_adv_setting.split", "FireCommander.hetero_adv_setting.replace().isdigit", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.hetero_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Hybrid_Agents_Battery_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "4", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Hybrid_Agents_Battery_Limit_str", "=", "self", ".", "raw_list", "[", "4", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Hybrid_Agents_Battery_Limit_list", "=", "Hybrid_Agents_Battery_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Hybrid_Agents_Battery_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Hybrid_Agents_Battery_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "4", "]", "=", "self", ".", "default_list", "[", "4", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Hybrid agent battery limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Hybrid_Agents_Battery_Limit_list", ")", "!=", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the hybrid agent battery limit must be the same as the robot team parameter'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "battery_flag", "=", "digit_validate", "(", "Hybrid_Agents_Battery_Limit_list", ",", "200", ",", "800", ",", "self", ".", "robo_team_para", "[", "2", "]", ")", "\n", "if", "not", "battery_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Hybrid agents battery limit must between 200 and 800'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "4", "]", "=", "list_division_single", "(", "Hybrid_Agents_Battery_Limit_list", ",", "self", ".", "robo_team_para", "[", "2", "]", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_Determination": [[4957, 4982], ["FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.hetero_adv_setting.split", "FireCommander.hetero_adv_setting.replace().isdigit", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.hetero_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Perception_Agents_Velocity_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "5", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Perception_Agents_Velocity_Limit_str", "=", "self", ".", "raw_list", "[", "5", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Perception_Agents_Velocity_Limit_list", "=", "Perception_Agents_Velocity_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Perception_Agents_Velocity_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Perception_Agents_Velocity_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "5", "]", "=", "self", ".", "default_list", "[", "5", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Perception agent velocity limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Perception_Agents_Velocity_Limit_list", ")", "!=", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the perception agent velocity limit must be the same as the robot team parameter'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "velocity_flag", "=", "digit_validate", "(", "Perception_Agents_Velocity_Limit_list", ",", "10", ",", "30", ",", "self", ".", "robo_team_para", "[", "0", "]", ")", "\n", "if", "not", "velocity_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Perception agents velocity limit must between 10 and 30'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "5", "]", "=", "list_division_single", "(", "Perception_Agents_Velocity_Limit_list", ",", "self", ".", "robo_team_para", "[", "0", "]", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_Determination": [[4983, 5008], ["FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.hetero_adv_setting.split", "FireCommander.hetero_adv_setting.replace().isdigit", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.hetero_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Action_Agents_Velocity_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "6", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Action_Agents_Velocity_Limit_str", "=", "self", ".", "raw_list", "[", "6", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Action_Agents_Velocity_Limit_list", "=", "Action_Agents_Velocity_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Action_Agents_Velocity_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Action_Agents_Velocity_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "6", "]", "=", "self", ".", "default_list", "[", "6", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Action agent velocity limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Action_Agents_Velocity_Limit_list", ")", "!=", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the action agent velocity limit must be the same as the robot team parameter'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "velocity_flag", "=", "digit_validate", "(", "Action_Agents_Velocity_Limit_list", ",", "10", ",", "30", ",", "self", ".", "robo_team_para", "[", "1", "]", ")", "\n", "if", "not", "velocity_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Action agents velocity limit must between 10 and 30'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "6", "]", "=", "list_division_single", "(", "Action_Agents_Velocity_Limit_list", ",", "self", ".", "robo_team_para", "[", "1", "]", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_Determination": [[5009, 5034], ["FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.hetero_adv_setting.split", "FireCommander.hetero_adv_setting.replace().isdigit", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.hetero_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Hybrid_Agents_Velocity_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "7", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Hybrid_Agents_Velocity_Limit_str", "=", "self", ".", "raw_list", "[", "7", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Hybrid_Agents_Velocity_Limit_list", "=", "Hybrid_Agents_Velocity_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Hybrid_Agents_Velocity_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Hybrid_Agents_Velocity_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "7", "]", "=", "self", ".", "default_list", "[", "7", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Hybrid agent velocity limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Hybrid_Agents_Velocity_Limit_list", ")", "!=", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the hybrid agent velocity limit must be the same as the robot team parameter'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "velocity_flag", "=", "digit_validate", "(", "Hybrid_Agents_Velocity_Limit_list", ",", "10", ",", "30", ",", "self", ".", "robo_team_para", "[", "2", "]", ")", "\n", "if", "not", "velocity_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Action agents velocity limit must between 10 and 30'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "7", "]", "=", "list_division_single", "(", "Hybrid_Agents_Velocity_Limit_list", ",", "self", ".", "robo_team_para", "[", "2", "]", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Limit_Determination": [[5035, 5061], ["FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.hetero_adv_setting.split", "FireCommander.hetero_adv_setting.replace().isdigit", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.hetero_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Action_Agents_Tank_Capacity_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "8", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Action_Agents_Tank_Capacity_Limit_str", "=", "self", ".", "raw_list", "[", "8", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Action_Agents_Tank_Capacity_Limit_list", "=", "Action_Agents_Tank_Capacity_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Action_Agents_Tank_Capacity_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Action_Agents_Tank_Capacity_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "8", "]", "=", "self", ".", "default_list", "[", "8", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Action agent water tank capacity limit must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Action_Agents_Tank_Capacity_Limit_list", ")", "!=", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the action agent water tank capacity limit must be the same as the robot team parameter'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "water_capacity_flag", "=", "digit_validate", "(", "Action_Agents_Tank_Capacity_Limit_list", ",", "1", ",", "15", ",", "\n", "self", ".", "robo_team_para", "[", "1", "]", ")", "\n", "if", "not", "water_capacity_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Action agents water tank capacity limit must between 1 and 15'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "8", "]", "=", "list_division_single", "(", "Action_Agents_Tank_Capacity_Limit_list", ",", "self", ".", "robo_team_para", "[", "1", "]", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_Determination": [[5062, 5087], ["FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace().replace", "FireCommander.hetero_adv_setting.split", "FireCommander.hetero_adv_setting.replace().isdigit", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace().replace", "len", "QMessageBox.warning", "len", "QMessageBox.warning", "FireCommander.digit_validate", "FireCommander.hetero_adv_setting.replace", "QMessageBox.warning", "FireCommander.list_division_single", "FireCommander.hetero_adv_setting.raw_list[].replace().replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace().replace", "FireCommander.hetero_adv_setting.raw_list[].replace"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single"], ["", "", "", "", "def", "Hybrid_Agents_Tank_Capacity_Limit_Determination", "(", "self", ")", ":", "\n", "        ", "if", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", "==", "0", ":", "\n", "            ", "self", ".", "adv_setting_list", "[", "9", "]", "=", "[", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "Hybrid_Agents_Tank_Capacity_Limit_str", "=", "self", ".", "raw_list", "[", "9", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "replace", "(", "'['", ",", "''", ")", ".", "replace", "(", "']'", ",", "''", ")", ".", "replace", "(", "' '", ",", "''", ")", "\n", "Hybrid_Agents_Tank_Capacity_Limit_list", "=", "Hybrid_Agents_Tank_Capacity_Limit_str", ".", "split", "(", "','", ")", "\n", "if", "not", "Hybrid_Agents_Tank_Capacity_Limit_str", ".", "replace", "(", "','", ",", "''", ")", ".", "isdigit", "(", ")", ":", "\n", "                ", "if", "len", "(", "Hybrid_Agents_Tank_Capacity_Limit_str", ")", "==", "0", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "9", "]", "=", "self", ".", "default_list", "[", "9", "]", "\n", "return", "True", "\n", "", "else", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Invalid input: Hybrid agent tank capacity must be digits'", ")", "\n", "return", "False", "\n", "", "", "elif", "len", "(", "Hybrid_Agents_Tank_Capacity_Limit_list", ")", "!=", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", ":", "\n", "                ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'The number of the hybrid agent tank capacity must be the same as the robot team parameter'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                ", "water_capacity_flag", "=", "digit_validate", "(", "Hybrid_Agents_Tank_Capacity_Limit_list", ",", "1", ",", "15", ",", "self", ".", "robo_team_para", "[", "2", "]", ")", "\n", "if", "not", "water_capacity_flag", ":", "\n", "                    ", "QMessageBox", ".", "warning", "(", "self", ",", "'Warning'", ",", "'Hybrid agents water tank capacity limit must between 1 and 15'", ")", "\n", "return", "False", "\n", "", "else", ":", "\n", "                    ", "self", ".", "adv_setting_list", "[", "9", "]", "=", "list_division_single", "(", "Hybrid_Agents_Tank_Capacity_Limit_list", ",", "self", ".", "robo_team_para", "[", "2", "]", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.set_default": [[5088, 5116], ["range", "range", "range", "default_list_Batttery1.append", "default_list_Velocity1.append", "height_list.append", "default_list_Batttery2.append", "default_list_Velocity2.append", "default_list_Tank2.append", "default_list_Batttery3.append", "default_list_Velocity3.append", "default_list_Tank3.append", "height_list1.append"], "methods", ["None"], ["", "", "", "", "def", "set_default", "(", "self", ")", ":", "\n", "        ", "default_list_Batttery1", "=", "[", "]", "\n", "default_list_Velocity1", "=", "[", "]", "\n", "height_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", ":", "\n", "            ", "default_list_Batttery1", ".", "append", "(", "[", "500", "]", ")", "\n", "default_list_Velocity1", ".", "append", "(", "[", "20", "]", ")", "\n", "height_list", ".", "append", "(", "[", "10", ",", "100", "]", ")", "\n", "\n", "", "default_list_Batttery2", "=", "[", "]", "\n", "default_list_Velocity2", "=", "[", "]", "\n", "default_list_Tank2", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", ":", "\n", "            ", "default_list_Batttery2", ".", "append", "(", "[", "500", "]", ")", "\n", "default_list_Velocity2", ".", "append", "(", "[", "20", "]", ")", "\n", "default_list_Tank2", ".", "append", "(", "[", "10", "]", ")", "\n", "\n", "", "default_list_Batttery3", "=", "[", "]", "\n", "default_list_Velocity3", "=", "[", "]", "\n", "default_list_Tank3", "=", "[", "]", "\n", "height_list1", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", ":", "\n", "            ", "default_list_Batttery3", ".", "append", "(", "[", "500", "]", ")", "\n", "default_list_Velocity3", ".", "append", "(", "[", "20", "]", ")", "\n", "default_list_Tank3", ".", "append", "(", "[", "10", "]", ")", "\n", "height_list1", ".", "append", "(", "[", "10", ",", "100", "]", ")", "\n", "\n", "", "self", ".", "default_list", "=", "[", "height_list", ",", "height_list1", ",", "default_list_Batttery1", ",", "default_list_Batttery2", ",", "default_list_Batttery3", ",", "default_list_Velocity1", ",", "default_list_Velocity2", ",", "default_list_Velocity3", ",", "default_list_Tank2", ",", "default_list_Tank3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.string_to_array": [[5118, 5132], ["FireCommander.hetero_adv_setting.perception_agent_altitude_Determination", "FireCommander.hetero_adv_setting.hybrid_agent_altitude_Determination", "FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_Determination", "FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_Determination", "FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_Determination", "FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_Determination", "FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_Determination", "FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_Determination", "FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Limit_Determination", "FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_Determination"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.perception_agent_altitude_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.hybrid_agent_altitude_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Battery_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Battery_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Battery_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Perception_Agents_Velocity_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Velocity_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Velocity_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Action_Agents_Tank_Capacity_Limit_Determination", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.Hybrid_Agents_Tank_Capacity_Limit_Determination"], ["", "def", "string_to_array", "(", "self", ")", ":", "\n", "        ", "default", "=", "False", "\n", "if", "self", ".", "perception_agent_altitude_Determination", "(", ")", ":", "\n", "            ", "if", "self", ".", "hybrid_agent_altitude_Determination", "(", ")", ":", "\n", "                ", "if", "self", ".", "Perception_Agents_Battery_Limit_Determination", "(", ")", ":", "\n", "                    ", "if", "self", ".", "Action_Agents_Battery_Limit_Determination", "(", ")", ":", "\n", "                        ", "if", "self", ".", "Hybrid_Agents_Battery_Limit_Determination", "(", ")", ":", "\n", "                            ", "if", "self", ".", "Perception_Agents_Velocity_Limit_Determination", "(", ")", ":", "\n", "                                ", "if", "self", ".", "Action_Agents_Velocity_Limit_Determination", "(", ")", ":", "\n", "                                    ", "if", "self", ".", "Hybrid_Agents_Velocity_Limit_Determination", "(", ")", ":", "\n", "                                        ", "if", "self", ".", "Action_Agents_Tank_Capacity_Limit_Determination", "(", ")", ":", "\n", "                                            ", "if", "self", ".", "Hybrid_Agents_Tank_Capacity_Limit_Determination", "(", ")", ":", "\n", "                                                ", "default", "=", "True", "\n", "", "", "", "", "", "", "", "", "", "", "return", "default", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string": [[5133, 5144], ["range", "len", "len", "str", "len", "str", "str"], "methods", ["None"], ["", "def", "array_to_string", "(", "self", ",", "list", ")", ":", "\n", "        ", "out_str", "=", "'['", "\n", "for", "i", "in", "range", "(", "len", "(", "list", ")", ")", ":", "\n", "            ", "if", "len", "(", "list", "[", "i", "]", ")", "==", "1", ":", "\n", "                ", "out_str", "+=", "str", "(", "list", "[", "i", "]", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "out_str", "+=", "'('", "+", "str", "(", "list", "[", "i", "]", "[", "0", "]", ")", "+", "', '", "+", "str", "(", "list", "[", "i", "]", "[", "1", "]", ")", "+", "')'", "\n", "", "if", "i", "<", "(", "len", "(", "list", ")", "-", "1", ")", ":", "\n", "                ", "out_str", "+=", "', '", "\n", "", "", "out_str", "+=", "']'", "\n", "return", "out_str", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transmit_value": [[5145, 5151], ["range", "len", "len", "FireCommander.hetero_adv_setting.array_to_string"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.array_to_string"], ["", "def", "transmit_value", "(", "self", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "raw_list", ")", ")", ":", "\n", "            ", "if", "len", "(", "self", ".", "adv_setting_list", "[", "i", "]", ")", "==", "0", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "''", "\n", "", "else", ":", "\n", "                ", "self", ".", "raw_list", "[", "i", "]", "=", "self", ".", "array_to_string", "(", "self", ".", "adv_setting_list", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.back_function": [[5152, 5156], ["FireCommander.hetero_adv_setting.hide", "FireCommander.lake_location_define", "FireCommander.hetero_adv_setting.screen.show"], "methods", ["None"], ["", "", "", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "lake_location_define", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.transfer_function": [[5157, 5163], ["FireCommander.hetero_adv_setting.hide", "FireCommander.homo_adv_setting", "FireCommander.hetero_adv_setting.screen.show"], "methods", ["None"], ["", "def", "transfer_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "robo_team_para", "[", "3", "]", "=", "0", "\n", "self", ".", "adv_setting_list", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "homo_adv_setting", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ",", "self", ".", "current_grid", ",", "self", ".", "applied_flag", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.skip_function": [[5164, 5172], ["FireCommander.pre_View", "QMessageBox.question", "FireCommander.hetero_adv_setting.hide", "FireCommander.tutorial", "FireCommander.hetero_adv_setting.screen.show"], "methods", ["None"], ["", "def", "skip_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "adv_setting_list", "=", "self", ".", "default_list", "\n", "self", ".", "screen", "=", "pre_View", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ")", "\n", "answer", "=", "QMessageBox", ".", "question", "(", "self", ",", "'Environment Pre-View'", ",", "\"Do you like to proceed with this environment design?\"", ",", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "No", ",", "QMessageBox", ".", "No", ")", "\n", "if", "answer", "==", "QMessageBox", ".", "Yes", ":", "\n", "            ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "tutorial", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ",", "0", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.next_function": [[5173, 5181], ["FireCommander.hetero_adv_setting.string_to_array", "FireCommander.pre_View", "QMessageBox.question", "FireCommander.hetero_adv_setting.hide", "FireCommander.tutorial", "FireCommander.hetero_adv_setting.screen.show"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.hetero_adv_setting.string_to_array"], ["", "", "def", "next_function", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "string_to_array", "(", ")", ":", "\n", "            ", "self", ".", "screen", "=", "pre_View", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ")", "\n", "answer", "=", "QMessageBox", ".", "question", "(", "self", ",", "'Environment Pre-View'", ",", "\"Do you like to proceed with this environment design?\"", ",", "QMessageBox", ".", "Yes", "|", "QMessageBox", ".", "No", ",", "QMessageBox", ".", "No", ")", "\n", "if", "answer", "==", "QMessageBox", ".", "Yes", ":", "\n", "                ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "tutorial", "(", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting_list", ",", "0", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.pre_View.__init__": [[5187, 5195], ["super().__init__", "FireCommander.pre_View.plot_scene"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.pre_View.plot_scene"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_loci", ",", "adv_setting", ")", ":", "\n", "        ", "super", "(", "pre_View", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_loci", "=", "set_loci", "\n", "self", ".", "adv_setting", "=", "adv_setting", "\n", "self", ".", "close_flag", "=", "0", "\n", "self", ".", "plot_scene", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.pre_View.agent_arrange": [[5196, 5204], ["range", "FireCommander.pre_View.agent_pos_list.append"], "methods", ["None"], ["", "def", "agent_arrange", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "set_loci", "[", "2", "]", "[", "1", "]", "==", "1", ":", "\n", "            ", "relative_pos", "=", "[", "[", "-", "40", ",", "-", "180", "]", ",", "[", "-", "40", ",", "-", "120", "]", ",", "[", "-", "40", ",", "-", "60", "]", ",", "[", "-", "40", ",", "0", "]", ",", "[", "-", "40", ",", "60", "]", ",", "[", "-", "40", ",", "120", "]", ",", "[", "40", ",", "-", "180", "]", ",", "[", "40", ",", "-", "120", "]", ",", "[", "40", ",", "-", "60", "]", "]", "\n", "", "else", ":", "\n", "            ", "relative_pos", "=", "[", "[", "-", "180", ",", "-", "40", "]", ",", "[", "-", "100", ",", "-", "40", "]", ",", "[", "-", "20", ",", "-", "40", "]", ",", "[", "60", ",", "-", "40", "]", ",", "[", "140", ",", "-", "40", "]", ",", "[", "-", "180", ",", "40", "]", ",", "[", "-", "100", ",", "40", "]", ",", "[", "-", "20", ",", "40", "]", ",", "[", "60", ",", "40", "]", "]", "\n", "", "self", ".", "agent_pos_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "+", "self", ".", "robo_team_para", "[", "2", "]", ")", ":", "\n", "            ", "self", ".", "agent_pos_list", ".", "append", "(", "[", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "0", "]", "+", "relative_pos", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "1", "]", "+", "relative_pos", "[", "i", "]", "[", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.pre_View.plot_scene": [[5205, 5332], ["range", "range", "range", "range", "range", "FireCommander.pre_View.agent_arrange", "pygame.font.init", "pygame.font.SysFont", "pygame.font.SysFont", "pygame.display.set_mode", "len", "len", "target_Loci.append", "len", "target_Loci.append", "len", "target_Loci.append", "len", "lake_Loci.append", "pygame.display.set_mode.fill", "pygame.event.get", "Agent_Util.road_plot", "Agent_Util.agent_Base_Plot", "Agent_Util.fire_region_plot", "Agent_Util.lake_plot_static", "range", "range", "range", "range", "fire_center_Loci.append", "fire_center_Loci.append", "Agent_Util.target_Plot", "pygame.draw.circle", "pygame.draw.rect", "pygame.display.set_mode.blit", "pygame.draw.polygon", "pygame.display.set_mode.blit", "pygame.draw.polygon", "pygame.draw.rect", "pygame.display.set_mode.blit", "pygame.display.update", "pygame.quit", "len", "Rect", "pygame.font.SysFont.render", "pygame.font.SysFont.render", "Rect", "pygame.font.SysFont.render", "len", "len", "numpy.tan", "numpy.tan", "int", "int", "numpy.tan", "numpy.tan", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_ctl.agent_arrange", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.road_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.agent_Base_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.fire_region_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.lake_plot_static", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.target_Plot"], ["", "", "def", "plot_scene", "(", "self", ")", ":", "\n", "        ", "world_Size", "=", "self", ".", "environment_para", "[", "0", "]", "\n", "fire_center_Loci", "=", "[", "]", "\n", "agent_Base_Loci", "=", "[", "]", "\n", "target_Loci", "=", "[", "]", "\n", "lake_Loci", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "set_loci", "[", "0", "]", ")", ")", ":", "\n", "            ", "if", "self", ".", "set_loci", "[", "1", "]", "[", "9", "]", "==", "0", ":", "\n", "                ", "fire_center_Loci", ".", "append", "(", "[", "self", ".", "set_loci", "[", "0", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "0", "]", "[", "i", "]", "[", "1", "]", ",", "self", ".", "set_loci", "[", "1", "]", "[", "0", "]", "]", ")", "\n", "", "else", ":", "\n", "                ", "fire_center_Loci", ".", "append", "(", "[", "self", ".", "set_loci", "[", "0", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "0", "]", "[", "i", "]", "[", "1", "]", ",", "self", ".", "set_loci", "[", "1", "]", "[", "0", "]", "[", "i", "]", "]", ")", "\n", "\n", "", "", "if", "self", ".", "set_loci", "[", "2", "]", "[", "1", "]", "==", "1", ":", "\n", "            ", "agent_Base_Loci", "=", "[", "[", "[", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "1", "]", ",", "160", ",", "400", ",", "9", ",", "1", ",", "0", "]", "]", "]", "\n", "", "else", ":", "\n", "            ", "agent_Base_Loci", "=", "[", "[", "[", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "1", "]", ",", "400", ",", "160", ",", "9", ",", "1", ",", "0", "]", "]", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "set_loci", "[", "3", "]", ")", ")", ":", "\n", "            ", "target_Loci", ".", "append", "(", "[", "[", "self", ".", "set_loci", "[", "3", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "3", "]", "[", "i", "]", "[", "1", "]", ",", "120", ",", "150", ",", "0", ",", "1", ",", "0", "]", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "set_loci", "[", "4", "]", ")", ")", ":", "\n", "            ", "target_Loci", ".", "append", "(", "[", "[", "self", ".", "set_loci", "[", "4", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "4", "]", "[", "i", "]", "[", "1", "]", ",", "150", ",", "180", ",", "1", ",", "1", ",", "0", "]", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "set_loci", "[", "5", "]", ")", ")", ":", "\n", "            ", "target_Loci", ".", "append", "(", "[", "[", "self", ".", "set_loci", "[", "5", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "5", "]", "[", "i", "]", "[", "1", "]", ",", "180", ",", "220", ",", "2", ",", "1", ",", "0", "]", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "set_loci", "[", "6", "]", ")", ")", ":", "\n", "            ", "lake_Loci", ".", "append", "(", "[", "self", ".", "set_loci", "[", "6", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "6", "]", "[", "i", "]", "[", "1", "]", "]", ")", "\n", "\n", "", "self", ".", "agent_arrange", "(", ")", "\n", "\n", "pygame", ".", "font", ".", "init", "(", ")", "\n", "hospital_Font", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "40", ")", "\n", "\n", "# The agent is represented as a blue dot with radius of 8", "\n", "agent_Radius", "=", "8", "\n", "# The field of view (FOV) of the agent is [pi/4, pi/6], which corresponds to the size of the searching scope", "\n", "agent_FOV", "=", "[", "np", ".", "pi", "/", "4", ",", "np", ".", "pi", "/", "6", "]", "\n", "# Set the current font for the text (Agent / Goal)", "\n", "font_Agent", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "30", ")", "\n", "\n", "init_height", "=", "20", "\n", "\n", "screen", "=", "pygame", ".", "display", ".", "set_mode", "(", "(", "world_Size", ",", "world_Size", ")", ",", "0", ",", "32", ")", "\n", "while", "True", ":", "\n", "            ", "screen", ".", "fill", "(", "(", "197", ",", "225", ",", "165", ")", ")", "\n", "for", "event", "in", "pygame", ".", "event", ".", "get", "(", ")", ":", "\n", "                ", "if", "event", ".", "type", "==", "QUIT", ":", "\n", "                    ", "self", ".", "close_flag", "=", "1", "\n", "\n", "", "", "Agent_Util", ".", "road_plot", "(", "screen", ",", "target_Loci", ")", "\n", "Agent_Util", ".", "agent_Base_Plot", "(", "screen", ",", "1", ",", "agent_Base_Loci", ",", "0", ")", "\n", "\n", "Agent_Util", ".", "fire_region_plot", "(", "screen", ",", "hospital_Font", ",", "fire_center_Loci", ")", "\n", "\n", "Agent_Util", ".", "lake_plot_static", "(", "screen", ",", "lake_Loci", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "set_loci", "[", "3", "]", ")", "+", "len", "(", "self", ".", "set_loci", "[", "4", "]", ")", "+", "len", "(", "self", ".", "set_loci", "[", "5", "]", ")", ")", ":", "\n", "                ", "Agent_Util", ".", "target_Plot", "(", "screen", ",", "hospital_Font", ",", "target_Loci", "[", "i", "]", ",", "0", ")", "\n", "\n", "# Go over all the elements in the current_Agent_State_List", "\n", "", "for", "i", "in", "range", "(", "self", ".", "robo_team_para", "[", "0", "]", ")", ":", "\n", "# Plot all the searching agents", "\n", "# Calculate the size of the searching scope", "\n", "                ", "searching_Scope_X", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "0", "]", ")", "*", "init_height", "\n", "searching_Scope_Y", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "1", "]", ")", "*", "init_height", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "searching_Scope_Upper_Left_Corner", "=", "(", "self", ".", "agent_pos_list", "[", "i", "]", "[", "0", "]", "-", "searching_Scope_X", "/", "2", ",", "\n", "self", ".", "agent_pos_list", "[", "i", "]", "[", "1", "]", "-", "searching_Scope_Y", "/", "2", ")", "\n", "# The size of the agent searching scope", "\n", "searching_Scope_Size", "=", "(", "searching_Scope_X", ",", "searching_Scope_Y", ")", "\n", "\n", "# Plot the searching agent (Circle) and its corresponding searching scope (Rectangle)", "\n", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "0", ",", "255", ")", ",", "(", "int", "(", "self", ".", "agent_pos_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "self", ".", "agent_pos_list", "[", "i", "]", "[", "1", "]", ")", ")", ",", "\n", "agent_Radius", ")", "\n", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "0", ",", "255", ")", ",", "Rect", "(", "searching_Scope_Upper_Left_Corner", ",", "searching_Scope_Size", ")", ",", "2", ")", "\n", "\n", "# Display the name of each agent", "\n", "screen", ".", "blit", "(", "font_Agent", ".", "render", "(", "'P'", "+", "str", "(", "i", "+", "1", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "self", ".", "agent_pos_list", "[", "i", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "i", "]", "[", "1", "]", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "robo_team_para", "[", "1", "]", ")", ":", "\n", "# Plot all the firefighter agents", "\n", "# The vertex set for the firefighter agent", "\n", "                ", "firefighter_Agent_Vertex", "=", "[", "(", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "]", "[", "0", "]", "-", "agent_Radius", ",", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "]", "[", "1", "]", ")", ",", "\n", "(", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "]", "[", "1", "]", "+", "agent_Radius", ")", ",", "\n", "(", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "]", "[", "0", "]", "+", "agent_Radius", ",", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "]", "[", "1", "]", ")", ",", "\n", "(", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "]", "[", "1", "]", "-", "agent_Radius", ")", "]", "\n", "# Plot the firefighter agent (Diamond)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "128", ",", "0", ",", "128", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "\n", "# Display the name of each agent", "\n", "screen", ".", "blit", "(", "font_Agent", ".", "render", "(", "'A'", "+", "str", "(", "i", "+", "1", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "\n", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "]", "[", "1", "]", ")", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "robo_team_para", "[", "2", "]", ")", ":", "\n", "# Plot all the hybrid agents", "\n", "# Calculate the size of the searching scope", "\n", "                ", "searching_Scope_X", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "0", "]", ")", "*", "init_height", "\n", "searching_Scope_Y", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "1", "]", ")", "*", "init_height", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "searching_Scope_Upper_Left_Corner", "=", "(", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "0", "]", "-", "searching_Scope_X", "/", "2", ",", "\n", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "1", "]", "-", "searching_Scope_Y", "/", "2", ")", "\n", "# The size of the agent searching scope", "\n", "searching_Scope_Size", "=", "(", "searching_Scope_X", ",", "searching_Scope_Y", ")", "\n", "\n", "# The vertex set for the hybrid agent", "\n", "firefighter_Agent_Vertex", "=", "[", "(", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "0", "]", "-", "agent_Radius", ",", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "1", "]", ")", ",", "\n", "(", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "1", "]", "+", "agent_Radius", ")", ",", "\n", "(", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "0", "]", "+", "agent_Radius", ",", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "1", "]", ")", ",", "\n", "(", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "1", "]", "-", "agent_Radius", ")", "]", "\n", "# Plot the hybrid agent (Diamond) and its corresponding searching scope (Rectangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "0", ",", "128", ",", "128", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "\n", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "128", ",", "128", ")", ",", "Rect", "(", "searching_Scope_Upper_Left_Corner", ",", "searching_Scope_Size", ")", ",", "2", ")", "\n", "\n", "# Display the name of each agent", "\n", "screen", ".", "blit", "(", "font_Agent", ".", "render", "(", "'H'", "+", "str", "(", "i", "+", "1", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "i", "+", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "]", "[", "1", "]", ")", ")", "\n", "\n", "\n", "", "if", "self", ".", "close_flag", "==", "0", ":", "\n", "                ", "pygame", ".", "display", ".", "update", "(", ")", "\n", "", "else", ":", "\n", "                ", "pygame", ".", "quit", "(", ")", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_ctl.__init__": [[5339, 5348], ["super().__init__", "FireCommander.environment_ctl.environment_simulation"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_ctl.environment_simulation"], ["    ", "def", "__init__", "(", "self", ",", "environment_para", ",", "robo_team_para", ",", "set_loci", ",", "adv_setting", ",", "scenario_idx", ")", ":", "\n", "        ", "super", "(", "environment_ctl", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "environment_para", "=", "environment_para", "\n", "self", ".", "robo_team_para", "=", "robo_team_para", "\n", "self", ".", "set_loci", "=", "set_loci", "\n", "self", ".", "adv_setting", "=", "adv_setting", "\n", "self", ".", "scenario_idx", "=", "scenario_idx", "\n", "self", ".", "close_flag", "=", "0", "\n", "self", ".", "environment_simulation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_ctl.agent_arrange": [[5349, 5357], ["range", "FireCommander.environment_ctl.agent_pos_list.append"], "methods", ["None"], ["", "def", "agent_arrange", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "set_loci", "[", "2", "]", "[", "1", "]", "==", "1", ":", "\n", "            ", "relative_pos", "=", "[", "[", "-", "40", ",", "-", "180", "]", ",", "[", "-", "40", ",", "-", "120", "]", ",", "[", "-", "40", ",", "-", "60", "]", ",", "[", "-", "40", ",", "0", "]", ",", "[", "-", "40", ",", "60", "]", ",", "[", "-", "40", ",", "120", "]", ",", "[", "40", ",", "-", "180", "]", ",", "[", "40", ",", "-", "120", "]", ",", "[", "40", ",", "-", "60", "]", "]", "\n", "", "else", ":", "\n", "            ", "relative_pos", "=", "[", "[", "-", "180", ",", "-", "40", "]", ",", "[", "-", "100", ",", "-", "40", "]", ",", "[", "-", "20", ",", "-", "40", "]", ",", "[", "60", ",", "-", "40", "]", ",", "[", "140", ",", "-", "40", "]", ",", "[", "-", "180", ",", "40", "]", ",", "[", "-", "100", ",", "40", "]", ",", "[", "-", "20", ",", "40", "]", ",", "[", "60", ",", "40", "]", "]", "\n", "", "self", ".", "agent_pos_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "robo_team_para", "[", "0", "]", "+", "self", ".", "robo_team_para", "[", "1", "]", "+", "self", ".", "robo_team_para", "[", "2", "]", ")", ":", "\n", "            ", "self", ".", "agent_pos_list", ".", "append", "(", "[", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "0", "]", "+", "relative_pos", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "1", "]", "+", "relative_pos", "[", "i", "]", "[", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_ctl.environment_simulation": [[5358, 6539], ["range", "range", "range", "range", "range", "range", "numpy.zeros", "numpy.zeros", "range", "range", "range", "numpy.zeros", "range", "range", "range", "range", "range", "range", "numpy.zeros", "numpy.zeros", "FireCommander.environment_ctl.agent_arrange", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "range", "numpy.zeros", "range", "range", "range", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "pygame.init", "pygame.time.Clock", "pygame.display.set_mode", "pygame.display.set_caption", "pygame.font.init", "pygame.font.SysFont", "pygame.font.SysFont", "pygame.font.SysFont", "pygame.font.SysFont", "pygame.font.SysFont", "pygame.font.SysFont", "pygame.font.SysFont", "target_Loci.append", "target_info[].append", "target_onFire_list[].append", "target_onFire_Flag[].append", "target_Loci.append", "target_info[].append", "target_onFire_list[].append", "target_onFire_Flag[].append", "target_Loci.append", "target_info[].append", "target_onFire_list[].append", "target_onFire_Flag[].append", "len", "lake_list.append", "Agent_Util.lake_plot.append", "fire_States_List.append", "hotspot_areas.append", "Dependencies.WildFireModel.WildFire", "Dependencies.WildFireModel.WildFire.hotspot_init", "Dependencies.WildFireModel.WildFire.hotspot_init.copy", "Dependencies.WildFireModel.WildFire.geo_phys_info_init", "range", "range", "numpy.array", "numpy.zeros", "target_info[].append", "target_onFire_list[].append", "target_onFire_Flag[].append", "target_info[].append", "target_onFire_list[].append", "target_onFire_Flag[].append", "current_Agent_State_List.append", "agent_Init_Pos_Z.append", "original_Agent_State_List.append", "global_Agent_State.append", "patrolling_Goal_List.append", "goal_Index_List.append", "sensed_Fire_Spot_List.append", "pruned_Fire_Spot_List.append", "waiting_Time_List.append", "CoM_Info_List.append", "global_User_Data_List.append", "open", "pickle.dump", "open", "pickle.dump", "pygame.display.set_mode.fill", "pygame.time.get_ticks", "pygame.event.get", "Agent_Util.road_plot", "range", "Agent_Util.lake_plot", "Agent_Util.fire_Data_Storage", "Agent_Util.agent_Base_Plot", "range", "Agent_Util.sensed_Fire_Spot_Plot", "range", "range", "pygame.draw.rect", "Agent_Util.side_Bar_Display", "Agent_Util.score_Calculation", "Agent_Util.score_display", "numpy.ones", "new_fire_front_temp.append", "current_geo_phys_info.append", "time_vector.append", "Dependencies.WildFireModel.WildFire.append", "Dependencies.WildFireModel.WildFire.hotspot_init.append", "numpy.concatenate.append", "Dependencies.WildFireModel.WildFire.geo_phys_info_init.append", "range", "battery_para.append", "battery_para.append", "battery_para.append", "battery_para.append", "battery_para.append", "battery_para.append", "max", "max", "open", "pickle.dump", "open", "pickle.dump", "Agent_Util.target_Plot", "range", "range", "numpy.array", "range", "len", "numpy.concatenate", "range", "pygame.display.set_mode.blit", "Agent_Util.goal_Marker", "Rect", "len", "pygame.display.update", "pygame.quit", "Dependencies.WildFireModel.WildFire", "fire_env[].hotspot_init", "fire_env[].hotspot_init", "fire_env[].geo_phys_info_init", "len", "numpy.concatenate.append", "max", "max", "max", "max", "Dependencies.WildFireModel.WildFire.fire_propagation", "numpy.array", "range", "Agent_Util.fire_Sensing", "sensed_Fire_Spot_List[].append", "CoM_Info_List[].append", "pygame.draw.circle", "numpy.concatenate", "pygame.draw.circle", "pygame.draw.rect", "text.append", "Agent_Util.traj_Plot", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "pygame.time.get_ticks", "len", "numpy.ones", "shutil.rmtree", "os.makedirs", "pygame.mouse.get_pos", "fire_env[].fire_propagation", "numpy.array", "len", "numpy.array.append", "numpy.concatenate", "len", "Agent_Util.agent_Motion_Controller", "Agent_Util.agent_Motion_Controller", "numpy.concatenate", "ign_points_all_temp.append", "ign_points_all_temp.append", "Rect", "pygame.font.SysFont.render", "pygame.draw.polygon", "text.append", "Agent_Util.traj_Plot", "pygame.time.get_ticks", "pygame.image.save", "pygame.time.get_ticks", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "open", "pickle.dump", "pygame.time.get_ticks", "Dependencies.Utilities.Utilities.generate_animation", "shutil.rmtree", "os.makedirs", "Agent_Util.in_Agent_Base_Region", "Agent_Util.fire_Pruning", "pruned_Fire_Spot_List[].append", "Agent_Util.fire_Sensing", "sensed_Fire_Spot_List[].append", "CoM_Info_List[].append", "numpy.tan", "numpy.tan", "int", "int", "pygame.font.SysFont.render", "pygame.draw.polygon", "pygame.draw.rect", "text.append", "Agent_Util.traj_Plot", "pygame.image.save", "pygame.time.get_ticks", "Dependencies.Utilities.Utilities.generate_animation", "goal_Index_List[].append", "global_User_Data_List[].append", "Agent_Util.agent_Motion_Controller", "global_User_Data_List[].append", "pruned_Fire_Spot_List[].append", "Agent_Util.fire_Pruning", "pruned_Fire_Spot_List[].append", "str", "Rect", "pygame.font.SysFont.render", "str", "str", "numpy.floor", "max", "max", "max", "max", "len", "open", "pickle.dump", "numpy.floor", "open", "pickle.dump", "pruned_Fire_Spot_List[].append", "str", "numpy.tan", "numpy.tan", "str", "len", "len", "patrolling_Goal_List[].append", "numpy.sqrt", "len", "open", "pickle.dump", "open", "pickle.dump", "str", "str", "len", "range", "patrolling_Goal_List[].append", "len", "range", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "len", "len", "range", "str", "str", "range", "range", "str", "str", "range", "str", "range", "str", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_ctl.agent_arrange", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.hotspot_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.geo_phys_info_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.road_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.lake_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Data_Storage", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.agent_Base_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.sensed_Fire_Spot_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.side_Bar_Display", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.score_Calculation", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.score_display", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.target_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.goal_Marker", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.hotspot_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.hotspot_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.geo_phys_info_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_propagation", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Sensing", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.traj_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_propagation", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.agent_Motion_Controller", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.agent_Motion_Controller", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.traj_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.generate_animation", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.in_Agent_Base_Region", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Pruning", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Sensing", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.traj_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.generate_animation", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.agent_Motion_Controller", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Pruning"], ["", "", "def", "environment_simulation", "(", "self", ")", ":", "\n", "# ************************ Part 0: Background ******************************", "\n", "# All the size unit of the object are represented in pixel", "\n", "# Background: (Color: Dark Green (0, 180, 0))", "\n", "# The size of the window (simulation environment) in pixel: 1024 * 1024", "\n", "        ", "world_Size", "=", "self", ".", "environment_para", "[", "0", "]", "\n", "# Display size: The width of the state bar", "\n", "display_Size", "=", "600", "\n", "\n", "score_size_x", "=", "800", "\n", "score_size_y", "=", "400", "\n", "\n", "global", "facility_penalty", "\n", "global", "score_list", "\n", "global", "username", "\n", "\n", "# ************************ Part 1: Target ******************************", "\n", "# Targets (Color: Orange (255, 165, 0))", "\n", "# The number of the targets: 3", "\n", "house_Num", "=", "self", ".", "environment_para", "[", "3", "]", "\n", "hospital_Num", "=", "self", ".", "environment_para", "[", "4", "]", "\n", "power_station_Num", "=", "self", ".", "environment_para", "[", "5", "]", "\n", "\n", "target_Num", "=", "house_Num", "+", "hospital_Num", "+", "power_station_Num", "\n", "\n", "# Target info: target center position, target size, target type (0: Normal, 1: Hospital, 2: Power Station)", "\n", "# The list to store the position of each target in the dictionary", "\n", "target_Loci", "=", "[", "]", "\n", "target_onFire_list", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "target_onFire_Flag", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "target_info", "=", "[", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "]", "\n", "for", "i", "in", "range", "(", "house_Num", ")", ":", "\n", "# The center of the target 1: (700, 700), size 120 * 150, Normal, enable_Edge_Flag, current time", "\n", "            ", "target_Loci", ".", "append", "(", "[", "[", "self", ".", "set_loci", "[", "3", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "3", "]", "[", "i", "]", "[", "1", "]", ",", "120", ",", "150", ",", "0", ",", "1", ",", "0", "]", "]", ")", "\n", "target_info", "[", "0", "]", ".", "append", "(", "[", "self", ".", "set_loci", "[", "3", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "3", "]", "[", "i", "]", "[", "1", "]", ",", "120", ",", "150", ",", "0", ",", "i", "]", ")", "\n", "target_onFire_list", "[", "0", "]", ".", "append", "(", "[", "0", "]", ")", "\n", "target_onFire_Flag", "[", "0", "]", ".", "append", "(", "0", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "hospital_Num", ")", ":", "\n", "# The center of the target 2: (600, 800), size 120 * 150, Hospital, current time", "\n", "            ", "target_Loci", ".", "append", "(", "[", "[", "self", ".", "set_loci", "[", "4", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "4", "]", "[", "i", "]", "[", "1", "]", ",", "150", ",", "180", ",", "1", ",", "1", ",", "0", "]", "]", ")", "\n", "target_info", "[", "1", "]", ".", "append", "(", "[", "self", ".", "set_loci", "[", "4", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "4", "]", "[", "i", "]", "[", "1", "]", ",", "150", ",", "180", ",", "1", ",", "i", "]", ")", "\n", "target_onFire_list", "[", "1", "]", ".", "append", "(", "[", "0", "]", ")", "\n", "target_onFire_Flag", "[", "1", "]", ".", "append", "(", "0", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "power_station_Num", ")", ":", "\n", "# The center of the target 2: (600, 800), size 120 * 150, Hospital, current time", "\n", "            ", "target_Loci", ".", "append", "(", "[", "[", "self", ".", "set_loci", "[", "5", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "5", "]", "[", "i", "]", "[", "1", "]", ",", "180", ",", "220", ",", "2", ",", "1", ",", "0", "]", "]", ")", "\n", "target_info", "[", "2", "]", ".", "append", "(", "[", "self", ".", "set_loci", "[", "5", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "5", "]", "[", "i", "]", "[", "1", "]", ",", "180", ",", "220", ",", "2", ",", "i", "]", ")", "\n", "target_onFire_list", "[", "2", "]", ".", "append", "(", "[", "0", "]", ")", "\n", "target_onFire_Flag", "[", "2", "]", ".", "append", "(", "0", ")", "\n", "\n", "", "lake_list", "=", "[", "]", "\n", "lake_Loci", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "set_loci", "[", "6", "]", ")", ")", ":", "\n", "            ", "lake_list", ".", "append", "(", "[", "[", "self", ".", "set_loci", "[", "6", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "6", "]", "[", "i", "]", "[", "1", "]", "]", "]", ")", "\n", "lake_Loci", ".", "append", "(", "[", "[", "self", ".", "set_loci", "[", "6", "]", "[", "i", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "6", "]", "[", "i", "]", "[", "1", "]", ",", "100", ",", "0", "]", "]", ")", "\n", "\n", "# ************************ Part 2: Fire state ******************************", "\n", "# Fire region (Color: Red (255, 0, 0))", "\n", "# The wildfire generation and propagation utilizes the FARSITE wildfire mathematical model (Thanks to Esi Seraj)", "\n", "# To clarify the fire state data, the state of the fire spot at each moment is stored in the dictionary list separately", "\n", "# Besides, the current fire map will also be stored as the matrix with the same size of the simulation model, which", "\n", "# reflects the fire intensity of each position on the world", "\n", "# The number of the fire spots", "\n", "", "fireSpots_Num", "=", "self", ".", "environment_para", "[", "2", "]", "\n", "# Create the fire state dictionary list", "\n", "fire_States_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "fireSpots_Num", ")", ":", "\n", "            ", "fire_States_List", ".", "append", "(", "[", "]", ")", "\n", "\n", "", "terrain_sizes", "=", "[", "world_Size", ",", "world_Size", "]", "# length and width of the terrain as a list [length [m], width [m]]", "\n", "# [[x_min [m], x_max [m], y_min [m], y_max [m]]]", "\n", "hotspot_areas", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "            ", "hotspot_areas", ".", "append", "(", "[", "self", ".", "set_loci", "[", "0", "]", "[", "i", "]", "[", "0", "]", "-", "50", ",", "self", ".", "set_loci", "[", "0", "]", "[", "i", "]", "[", "0", "]", "+", "50", ",", "self", ".", "set_loci", "[", "0", "]", "[", "i", "]", "[", "1", "]", "-", "50", ",", "self", ".", "set_loci", "[", "0", "]", "[", "i", "]", "[", "1", "]", "+", "50", "]", ")", "\n", "", "duration", "=", "self", ".", "environment_para", "[", "1", "]", "# total duration to run the simulation", "\n", "time_point", "=", "0", "# current time", "\n", "time_step", "=", "0.01", "# (sampling frequency)^-1", "\n", "fire_decay_flg", "=", "False", "# declare if dynamic fire decay over time should be included or not", "\n", "decay_rate", "=", "0.0005", "# fuel exhaustion rate (greater means faster exhaustion)", "\n", "\n", "if", "self", ".", "set_loci", "[", "1", "]", "[", "9", "]", "==", "0", ":", "\n", "            ", "num_ign_points", "=", "self", ".", "set_loci", "[", "1", "]", "[", "0", "]", "# initial number of fire spots (ignition points) per hotspot area", "\n", "\n", "fuel_coeff", "=", "self", ".", "set_loci", "[", "1", "]", "[", "2", "]", "# fuel coefficient for vegetation type of the terrain (higher fuel_coeff:: more circular shape fire)", "\n", "wind_speed", "=", "self", ".", "set_loci", "[", "1", "]", "[", "3", "]", "# average mid-flame wind velocity (higher values streches the fire more)", "\n", "wind_direction", "=", "np", ".", "pi", "*", "2", "*", "self", ".", "set_loci", "[", "1", "]", "[", "4", "]", "/", "360", "# wind azimuth", "\n", "\n", "time_vector", "=", "time_point", "*", "np", ".", "ones", "(", "num_ign_points", "*", "len", "(", "hotspot_areas", ")", ")", "# a vector containing the time passed after ignition of each point", "\n", "fire_env", "=", "WildFire", "(", "\n", "terrain_sizes", "=", "terrain_sizes", ",", "hotspot_areas", "=", "hotspot_areas", ",", "num_ign_points", "=", "num_ign_points", ",", "duration", "=", "duration", ",", "time_step", "=", "1", ",", "\n", "radiation_radius", "=", "10", ",", "weak_fire_threshold", "=", "5", ",", "flame_height", "=", "3", ",", "flame_angle", "=", "np", ".", "pi", "/", "3", ")", "# local form", "\n", "\n", "ign_points_all", "=", "fire_env", ".", "hotspot_init", "(", ")", "# initializing hotspots", "\n", "previous_terrain_map", "=", "ign_points_all", ".", "copy", "(", ")", "# initializing the starting terrain map", "\n", "geo_phys_info", "=", "fire_env", ".", "geo_phys_info_init", "(", "max_fuel_coeff", "=", "fuel_coeff", ",", "avg_wind_speed", "=", "wind_speed", ",", "avg_wind_direction", "=", "wind_direction", ")", "\n", "\n", "fire_map", "=", "ign_points_all", "# initializing fire-map", "\n", "", "else", ":", "\n", "            ", "fire_env", "=", "[", "]", "\n", "geo_phys_info", "=", "[", "]", "\n", "ign_points_all", "=", "[", "]", "\n", "previous_terrain_map", "=", "[", "]", "\n", "time_vector", "=", "[", "]", "\n", "new_fire_front_temp", "=", "[", "]", "\n", "current_geo_phys_info", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "new_fire_front_temp", ".", "append", "(", "[", "]", ")", "\n", "current_geo_phys_info", ".", "append", "(", "[", "]", ")", "\n", "num_ign_points", "=", "self", ".", "set_loci", "[", "1", "]", "[", "0", "]", "[", "i", "]", "# initial number of fire spots (ignition points) per hotspot area", "\n", "\n", "fuel_coeff", "=", "self", ".", "set_loci", "[", "1", "]", "[", "2", "]", "[", "i", "]", "# fuel coefficient for vegetation type of the terrain (higher fuel_coeff:: more circular shape fire)", "\n", "wind_speed", "=", "self", ".", "set_loci", "[", "1", "]", "[", "3", "]", "[", "i", "]", "# average mid-flame wind velocity (higher values streches the fire more)", "\n", "wind_direction", "=", "np", ".", "pi", "*", "2", "*", "self", ".", "set_loci", "[", "1", "]", "[", "4", "]", "[", "i", "]", "/", "360", "# wind azimuth", "\n", "\n", "time_vector", ".", "append", "(", "time_point", "*", "np", ".", "ones", "(", "num_ign_points", "*", "1", ")", ")", "# a vector containing the time passed after ignition of each point", "\n", "fire_env", ".", "append", "(", "WildFire", "(", "\n", "terrain_sizes", "=", "terrain_sizes", ",", "hotspot_areas", "=", "[", "hotspot_areas", "[", "i", "]", "]", ",", "num_ign_points", "=", "num_ign_points", ",", "\n", "duration", "=", "duration", ",", "time_step", "=", "1", ",", "radiation_radius", "=", "10", ",", "weak_fire_threshold", "=", "5", ",", "flame_height", "=", "3", ",", "flame_angle", "=", "np", ".", "pi", "/", "3", ")", ")", "# local form", "\n", "ign_points_all", ".", "append", "(", "fire_env", "[", "i", "]", ".", "hotspot_init", "(", ")", ")", "# initializing hotspots", "\n", "previous_terrain_map", ".", "append", "(", "fire_env", "[", "i", "]", ".", "hotspot_init", "(", ")", ")", "# initializing the starting terrain map", "\n", "geo_phys_info", ".", "append", "(", "fire_env", "[", "i", "]", ".", "geo_phys_info_init", "(", "max_fuel_coeff", "=", "fuel_coeff", ",", "avg_wind_speed", "=", "wind_speed", ",", "\n", "avg_wind_direction", "=", "wind_direction", ")", ")", "\n", "", "fire_map", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "len", "(", "ign_points_all", "[", "i", "]", ")", ")", ":", "\n", "                    ", "fire_map", ".", "append", "(", "ign_points_all", "[", "i", "]", "[", "j", "]", ")", "# initializing fire-map", "\n", "", "", "fire_map", "=", "np", ".", "array", "(", "fire_map", ")", "\n", "fire_map_spec", "=", "ign_points_all", "\n", "\n", "", "fire_Current_Map", "=", "np", ".", "zeros", "(", "[", "world_Size", ",", "world_Size", "]", ",", "dtype", "=", "float", ")", "\n", "if", "self", ".", "set_loci", "[", "1", "]", "[", "9", "]", "==", "1", ":", "\n", "            ", "fire_turnon_flag", "=", "np", ".", "zeros", "(", "(", "self", ".", "environment_para", "[", "2", "]", ",", "1", ")", ",", "dtype", "=", "int", ")", "\n", "", "else", ":", "\n", "            ", "fire_turnon_flag", "=", "0", "\n", "\n", "# The lists to store the firespots in different state, coordinates only", "\n", "# The onFire_List, store the points currently on fire (sensed points included, pruned points excluded)", "\n", "", "onFire_List", "=", "[", "]", "\n", "# The sensed_List, store the points currently on fire and have been sensed by agents", "\n", "sensed_List", "=", "[", "]", "\n", "# The pruned_List, store the pruned fire spots", "\n", "pruned_List", "=", "[", "]", "\n", "\n", "fire_Num_list", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "\n", "# ************************ Part 3: Agents ******************************", "\n", "# Agent base: Rectangle, Yellow(255, 255, 0)", "\n", "# The number of the agent's base", "\n", "agent_Base_Num", "=", "1", "\n", "\n", "# The list to store the position of each agent base in the dictionary", "\n", "# Agent Base 1: Position (120, 600), Size: (160, 400), Capacity, enable_Edge_Flag, current time", "\n", "if", "self", ".", "set_loci", "[", "2", "]", "[", "1", "]", "==", "1", ":", "\n", "            ", "agent_Base_Loci", "=", "[", "[", "[", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "1", "]", ",", "160", ",", "400", ",", "9", ",", "1", ",", "0", "]", "]", "]", "\n", "target_info", "[", "3", "]", ".", "append", "(", "[", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "1", "]", ",", "160", ",", "400", ",", "1", ",", "0", "]", ")", "\n", "target_onFire_list", "[", "3", "]", ".", "append", "(", "[", "0", "]", ")", "\n", "target_onFire_Flag", "[", "3", "]", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "            ", "agent_Base_Loci", "=", "[", "[", "[", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "1", "]", ",", "400", ",", "160", ",", "9", ",", "1", ",", "0", "]", "]", "]", "\n", "target_info", "[", "3", "]", ".", "append", "(", "[", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "0", "]", ",", "self", ".", "set_loci", "[", "2", "]", "[", "0", "]", "[", "1", "]", ",", "400", ",", "160", ",", "1", ",", "0", "]", ")", "\n", "target_onFire_list", "[", "3", "]", ".", "append", "(", "[", "0", "]", ")", "\n", "target_onFire_Flag", "[", "3", "]", ".", "append", "(", "0", ")", "\n", "\n", "# Agents: Color: Searching agents: Blue (0, 0, 255)", "\n", "#                HeteroFireBot_Env agents: Purple (128, 0, 128)", "\n", "#                Hybrid agents: Cyan (0, 255, 255)", "\n", "# The number of the searching agents", "\n", "", "searching_Agent_Num", "=", "self", ".", "robo_team_para", "[", "0", "]", "\n", "# The number of the firefighter agents", "\n", "firefighter_Agent_Num", "=", "self", ".", "robo_team_para", "[", "1", "]", "\n", "# The number of the hybrid agents", "\n", "hybrid_Agent_Num", "=", "self", ".", "robo_team_para", "[", "2", "]", "\n", "\n", "# The agent is represented as a blue dot with radius of 8", "\n", "agent_Radius", "=", "8", "\n", "# The field of view (FOV) of the agent is [pi/4, pi/6], which corresponds to the size of the searching scope", "\n", "agent_FOV", "=", "[", "np", ".", "pi", "/", "4", ",", "np", ".", "pi", "/", "6", "]", "\n", "\n", "# The upper bound of the agent's flight (Meter)", "\n", "agent_Upper_Height_List", "=", "np", ".", "zeros", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ",", "dtype", "=", "int", ")", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "agent_Upper_Height_List", "[", "i", "]", "=", "self", ".", "adv_setting", "[", "0", "]", "[", "0", "]", "[", "1", "]", "\n", "", "else", ":", "\n", "                ", "agent_Upper_Height_List", "[", "i", "]", "=", "self", ".", "adv_setting", "[", "0", "]", "[", "i", "]", "[", "1", "]", "\n", "\n", "", "", "for", "i", "in", "range", "(", "firefighter_Agent_Num", ")", ":", "\n", "            ", "agent_Upper_Height_List", "[", "searching_Agent_Num", "+", "i", "]", "=", "30", "\n", "\n", "", "for", "i", "in", "range", "(", "hybrid_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "agent_Upper_Height_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "=", "self", ".", "adv_setting", "[", "1", "]", "[", "0", "]", "[", "1", "]", "\n", "", "else", ":", "\n", "                ", "agent_Upper_Height_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "=", "self", ".", "adv_setting", "[", "1", "]", "[", "i", "]", "[", "1", "]", "\n", "\n", "# The lower bound of the agent's flight (Meter)", "\n", "", "", "agent_Lower_Height_List", "=", "np", ".", "zeros", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ",", "dtype", "=", "int", ")", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "agent_Lower_Height_List", "[", "i", "]", "=", "self", ".", "adv_setting", "[", "0", "]", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "agent_Lower_Height_List", "[", "i", "]", "=", "self", ".", "adv_setting", "[", "0", "]", "[", "i", "]", "[", "0", "]", "\n", "\n", "", "", "for", "i", "in", "range", "(", "firefighter_Agent_Num", ")", ":", "\n", "            ", "agent_Lower_Height_List", "[", "searching_Agent_Num", "+", "i", "]", "=", "30", "\n", "\n", "", "for", "i", "in", "range", "(", "hybrid_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "agent_Lower_Height_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "=", "self", ".", "adv_setting", "[", "1", "]", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "agent_Lower_Height_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "=", "self", ".", "adv_setting", "[", "1", "]", "[", "i", "]", "[", "0", "]", "\n", "\n", "# lift_Step is the length of each height change after pressing the keyboard up and down button (Meter)", "\n", "", "", "lift_Step", "=", "5", "\n", "\n", "# Battery parameter [Total energy, consumption during flight, consumption during waiting]", "\n", "battery_para", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "battery_para", ".", "append", "(", "[", "self", ".", "adv_setting", "[", "2", "]", "[", "0", "]", "[", "0", "]", ",", "0.1", ",", "0.05", "]", ")", "\n", "", "else", ":", "\n", "                ", "battery_para", ".", "append", "(", "[", "self", ".", "adv_setting", "[", "2", "]", "[", "i", "]", "[", "0", "]", ",", "0.1", ",", "0.05", "]", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "firefighter_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "battery_para", ".", "append", "(", "[", "self", ".", "adv_setting", "[", "3", "]", "[", "0", "]", "[", "0", "]", ",", "0.1", ",", "0.05", "]", ")", "\n", "", "else", ":", "\n", "                ", "battery_para", ".", "append", "(", "[", "self", ".", "adv_setting", "[", "3", "]", "[", "i", "]", "[", "0", "]", ",", "0.1", ",", "0.05", "]", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "hybrid_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "battery_para", ".", "append", "(", "[", "self", ".", "adv_setting", "[", "4", "]", "[", "0", "]", "[", "0", "]", ",", "0.1", ",", "0.05", "]", ")", "\n", "", "else", ":", "\n", "                ", "battery_para", ".", "append", "(", "[", "self", ".", "adv_setting", "[", "4", "]", "[", "i", "]", "[", "0", "]", ",", "0.1", ",", "0.05", "]", ")", "\n", "\n", "# Start flag, if the start flag is 0, silent", "\n", "# If the start flag is 1, the agent begins to move", "\n", "# If the start flag is 2, return", "\n", "", "", "start_Flag", "=", "np", ".", "zeros", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ",", "dtype", "=", "int", ")", "\n", "\n", "# Move mode flag, if its value is 0, the agent will automatically fly towards the goal", "\n", "# If its value is 1, the agent will fly by one step when clicking", "\n", "move_Mode_Flag", "=", "np", ".", "zeros", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ",", "dtype", "=", "int", ")", "\n", "\n", "self", ".", "agent_arrange", "(", ")", "\n", "\n", "# Initialize the list to store the agent current state at each moment", "\n", "current_Agent_State_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "            ", "current_Agent_State_List", ".", "append", "(", "[", "]", ")", "\n", "\n", "# Initialize the list to store the current state of each agent", "\n", "# Content: [agent_Position(X, Y, Z), agent_Velocity(X, Y, Z), goal_Index, current_Time, agent' type, agent index,", "\n", "#          sum of running distance, sum of waiting time, water tank capacity, move_enabling_flag, patrolling flag,", "\n", "#          patrolling goal]", "\n", "", "for", "i", "in", "range", "(", "searching_Agent_Num", ")", ":", "\n", "            ", "current_Agent_State_List", "[", "i", "]", "=", "[", "self", ".", "agent_pos_list", "[", "i", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "i", "]", "[", "1", "]", ",", "max", "(", "20", ",", "agent_Lower_Height_List", "[", "i", "]", ")", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "i", "+", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "firefighter_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "current_Agent_State_List", "[", "searching_Agent_Num", "+", "i", "]", "=", "[", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "i", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "i", "]", "[", "1", "]", ",", "\n", "30", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "i", "+", "1", ",", "0", ",", "0", ",", "self", ".", "adv_setting", "[", "8", "]", "[", "0", "]", "[", "0", "]", ",", "1", ",", "0", ",", "0", "]", "\n", "", "else", ":", "\n", "                ", "current_Agent_State_List", "[", "searching_Agent_Num", "+", "i", "]", "=", "[", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "i", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "i", "]", "[", "1", "]", ",", "\n", "30", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "i", "+", "1", ",", "0", ",", "0", ",", "self", ".", "adv_setting", "[", "8", "]", "[", "i", "]", "[", "0", "]", ",", "1", ",", "0", ",", "0", "]", "\n", "\n", "", "", "for", "i", "in", "range", "(", "hybrid_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "current_Agent_State_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "=", "[", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "[", "0", "]", ",", "\n", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "[", "1", "]", ",", "\n", "max", "(", "20", ",", "agent_Lower_Height_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", ")", ",", "\n", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "2", ",", "i", "+", "1", ",", "0", ",", "0", ",", "self", ".", "adv_setting", "[", "9", "]", "[", "0", "]", "[", "0", "]", ",", "1", ",", "0", ",", "0", "]", "\n", "", "else", ":", "\n", "                ", "current_Agent_State_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "=", "[", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "[", "0", "]", ",", "\n", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "[", "1", "]", ",", "\n", "max", "(", "20", ",", "agent_Lower_Height_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", ")", ",", "\n", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "2", ",", "i", "+", "1", ",", "0", ",", "0", ",", "self", ".", "adv_setting", "[", "9", "]", "[", "i", "]", "[", "0", "]", ",", "1", ",", "0", ",", "0", "]", "\n", "# Initial height of the agents", "\n", "", "", "agent_Init_Pos_Z", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "            ", "agent_Init_Pos_Z", ".", "append", "(", "current_Agent_State_List", "[", "i", "]", "[", "2", "]", ")", "\n", "\n", "# agent_Current_Pos_Z is the current flight height of the agent", "\n", "", "agent_Current_Pos_Z", "=", "agent_Init_Pos_Z", "\n", "\n", "# Initialize the original agent state list", "\n", "original_Agent_State_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "            ", "original_Agent_State_List", ".", "append", "(", "[", "]", ")", "\n", "\n", "# Preserve the original info for each agent", "\n", "", "for", "i", "in", "range", "(", "searching_Agent_Num", ")", ":", "\n", "            ", "original_Agent_State_List", "[", "i", "]", "=", "[", "self", ".", "agent_pos_list", "[", "i", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "i", "]", "[", "1", "]", ",", "max", "(", "20", ",", "agent_Lower_Height_List", "[", "i", "]", ")", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "i", "+", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", "]", "\n", "\n", "", "for", "i", "in", "range", "(", "firefighter_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "original_Agent_State_List", "[", "searching_Agent_Num", "+", "i", "]", "=", "[", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "i", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "i", "]", "[", "1", "]", ",", "\n", "30", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "i", "+", "1", ",", "0", ",", "0", ",", "self", ".", "adv_setting", "[", "8", "]", "[", "0", "]", "[", "0", "]", ",", "1", ",", "0", ",", "0", "]", "\n", "", "else", ":", "\n", "                ", "original_Agent_State_List", "[", "searching_Agent_Num", "+", "i", "]", "=", "[", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "i", "]", "[", "0", "]", ",", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "i", "]", "[", "1", "]", ",", "\n", "30", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "i", "+", "1", ",", "0", ",", "0", ",", "self", ".", "adv_setting", "[", "8", "]", "[", "i", "]", "[", "0", "]", ",", "1", ",", "0", ",", "0", "]", "\n", "\n", "", "", "for", "i", "in", "range", "(", "hybrid_Agent_Num", ")", ":", "\n", "            ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                ", "original_Agent_State_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "=", "[", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "[", "0", "]", ",", "\n", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "[", "1", "]", ",", "\n", "max", "(", "20", ",", "agent_Lower_Height_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", ")", ",", "\n", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "2", ",", "i", "+", "1", ",", "0", ",", "0", ",", "self", ".", "adv_setting", "[", "9", "]", "[", "0", "]", "[", "0", "]", ",", "1", ",", "0", ",", "0", "]", "\n", "", "else", ":", "\n", "                ", "original_Agent_State_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "=", "[", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "[", "0", "]", ",", "\n", "self", ".", "agent_pos_list", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "[", "1", "]", ",", "\n", "max", "(", "20", ",", "agent_Lower_Height_List", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", ")", ",", "\n", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "2", ",", "i", "+", "1", ",", "0", ",", "0", ",", "self", ".", "adv_setting", "[", "9", "]", "[", "i", "]", "[", "0", "]", ",", "1", ",", "0", ",", "0", "]", "\n", "\n", "# Initialize the list to store the selected agent current state at each moment", "\n", "", "", "current_Agent_State", "=", "[", "]", "\n", "\n", "# current agent index is the current index of the agent in operation", "\n", "# For the current program, 0, 1 are the searching agent, 2, 3 are the firefighter agent", "\n", "current_Agent_Index", "=", "0", "\n", "\n", "# Th initial maximum fire intensity", "\n", "current_Max_Intensity", "=", "155", "\n", "\n", "# Initialize the global list to store the agent state at each moment", "\n", "global_Agent_State", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "            ", "global_Agent_State", ".", "append", "(", "[", "]", ")", "\n", "\n", "# Initialize the patrolling goal list to store the current patrolling goal for each agent", "\n", "", "patrolling_Goal_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "            ", "patrolling_Goal_List", ".", "append", "(", "[", "]", ")", "\n", "\n", "# Initialize the goal index list to store the index for each goal for reference", "\n", "", "goal_Index_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "            ", "goal_Index_List", ".", "append", "(", "[", "]", ")", "\n", "\n", "# Initialize the list to store the sensed fire spot data", "\n", "", "sensed_Fire_Spot_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "            ", "sensed_Fire_Spot_List", ".", "append", "(", "[", "]", ")", "\n", "\n", "# Initialize the list to store the pruned fire spot data", "\n", "", "pruned_Fire_Spot_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "            ", "pruned_Fire_Spot_List", ".", "append", "(", "[", "]", ")", "\n", "\n", "# Initialize the list to store the waiting time for the action agent only", "\n", "", "waiting_Time_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "firefighter_Agent_Num", ")", ":", "\n", "            ", "waiting_Time_List", ".", "append", "(", "0", ")", "\n", "\n", "# The upper bound of the agent's flight (Meter)", "\n", "", "confidence_level_list", "=", "np", ".", "zeros", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ",", "dtype", "=", "float", ")", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", ")", ":", "\n", "            ", "confidence_level_list", "[", "i", "]", "=", "0", "\n", "\n", "", "for", "i", "in", "range", "(", "firefighter_Agent_Num", ")", ":", "\n", "            ", "confidence_level_list", "[", "searching_Agent_Num", "+", "i", "]", "=", "self", ".", "set_loci", "[", "1", "]", "[", "7", "]", "/", "100", "\n", "\n", "", "for", "i", "in", "range", "(", "hybrid_Agent_Num", ")", ":", "\n", "            ", "confidence_level_list", "[", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "i", "]", "=", "self", ".", "set_loci", "[", "1", "]", "[", "8", "]", "/", "100", "\n", "\n", "# Initialize the trigger for pruning the fire spot", "\n", "", "pruning_Trigger", "=", "np", ".", "zeros", "(", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", "\n", "\n", "# Initialize the list to store the CoM info of sensed fire spot", "\n", "CoM_Info_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "            ", "CoM_Info_List", ".", "append", "(", "[", "]", ")", "\n", "\n", "# ************************ Part 4: User Data ******************************", "\n", "# goal_Index: store the index of the goal (Action type 0, Mouse click)", "\n", "", "goal_Index", "=", "np", ".", "zeros", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ",", "dtype", "=", "int", ")", "\n", "# current_Goal_Index: the position of the current goal in user_data_list", "\n", "current_Goal_Index", "=", "np", ".", "zeros", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ",", "dtype", "=", "int", ")", "\n", "\n", "# Initialize the list to store the history of the agent's goal", "\n", "# Content: The goal position (X, Y), current time, action type, goal_index", "\n", "# Action type: -1: Keyboard Down, 0: Mouse click, 1: Keyboard Up", "\n", "# goal_index will only be utilized when action 0 happens. For the rest of the actions, it will remain 0", "\n", "# Initial the global_User_Data_List to store all the goals of each agent", "\n", "global_User_Data_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "            ", "global_User_Data_List", ".", "append", "(", "[", "]", ")", "\n", "\n", "# Initialize the index for each agent's next goal", "\n", "", "index_Next", "=", "np", ".", "zeros", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", "\n", "\n", "# Initialize the pygame environment", "\n", "pygame", ".", "init", "(", ")", "\n", "\n", "# Initialize the global clock", "\n", "# The simulation time is counted in seconds, while the actual time is counted in milliseconds", "\n", "clock", "=", "pygame", ".", "time", ".", "Clock", "(", ")", "\n", "\n", "# Initialize the buffer that stores the last storage time", "\n", "last_store_time", "=", "0", "\n", "\n", "# Create a screen (Width * Height) = (1024 * 1024)", "\n", "screen", "=", "pygame", ".", "display", ".", "set_mode", "(", "(", "world_Size", "+", "display_Size", ",", "world_Size", ")", ",", "0", ",", "32", ")", "\n", "\n", "# Set the title of the window", "\n", "pygame", ".", "display", ".", "set_caption", "(", "\"HeteroFireBots_Reconn_Env Agent Simulation Environment\"", ")", "\n", "\n", "# Initialize the text display", "\n", "pygame", ".", "font", ".", "init", "(", ")", "\n", "\n", "# Set the current font for the text (Agent / Goal)", "\n", "font_Agent", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "30", ")", "\n", "# Set the current font for the side bar", "\n", "font_Side", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "20", ")", "\n", "\n", "font_Side_Title", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "24", ")", "\n", "#font_Side_Title.set_bold(True)", "\n", "\n", "font_Side_Bold", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "24", ")", "\n", "#font_Side_Bold.set_bold(True)", "\n", "\n", "font_Score", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "28", ")", "\n", "\n", "font_Scorelist", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "26", ")", "\n", "\n", "# Set the current font for the hospital word", "\n", "hospital_Font", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "40", ")", "\n", "\n", "# Video recording flag, simulation video will only be made when this flag equals to 1", "\n", "video_Recording_Flag", "=", "0", "\n", "\n", "# ************************ Background Information Storage ******************************", "\n", "# Create the list to store the background information", "\n", "background_Info", "=", "[", "self", ".", "environment_para", ",", "self", ".", "robo_team_para", ",", "self", ".", "set_loci", ",", "self", ".", "adv_setting", ",", "agent_Radius", ",", "agent_FOV", ",", "16", "]", "\n", "# Write the background information into the .pkl file", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "background_Info_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Background_Info.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "background_Info", ",", "background_Info_Output", ")", "\n", "\n", "# Write the information of the agent's battery into the .pkl file", "\n", "battery_Info_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Battery_Info.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "battery_para", ",", "battery_Info_Output", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "background_Info_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Background_Info.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "background_Info", ",", "background_Info_Output", ")", "\n", "\n", "# Write the information of the agent's battery into the .pkl file", "\n", "battery_Info_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Battery_Info.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "battery_para", ",", "battery_Info_Output", ")", "\n", "\n", "# ************************ Main loop for display ******************************", "\n", "", "while", "True", ":", "\n", "# Fill the screen with green", "\n", "            ", "screen", ".", "fill", "(", "(", "197", ",", "225", ",", "165", ")", ")", "\n", "\n", "# Acquire the current time (Synchronize the time stamp)", "\n", "current_Time", "=", "pygame", ".", "time", ".", "get_ticks", "(", ")", "\n", "# Extract the info and goal set of the current selected agent from the whole list", "\n", "current_Agent_State", "=", "current_Agent_State_List", "[", "current_Agent_Index", "]", "\n", "agent_Upper_Height", "=", "agent_Upper_Height_List", "[", "current_Agent_Index", "]", "\n", "agent_Lower_Height", "=", "agent_Lower_Height_List", "[", "current_Agent_Index", "]", "\n", "\n", "# Assume the agent moves in the constant speed, the maximum speed is 20", "\n", "if", "current_Agent_State", "[", "8", "]", "==", "0", ":", "\n", "                ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                    ", "agent_Speed", "=", "self", ".", "adv_setting", "[", "5", "]", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "                    ", "agent_Speed", "=", "self", ".", "adv_setting", "[", "5", "]", "[", "current_Agent_State", "[", "9", "]", "-", "1", "]", "[", "0", "]", "\n", "", "", "elif", "current_Agent_State", "[", "8", "]", "==", "1", ":", "\n", "                ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                    ", "agent_Speed", "=", "self", ".", "adv_setting", "[", "6", "]", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "                    ", "agent_Speed", "=", "self", ".", "adv_setting", "[", "6", "]", "[", "current_Agent_State", "[", "9", "]", "-", "1", "]", "[", "0", "]", "\n", "", "", "else", ":", "\n", "                ", "if", "self", ".", "robo_team_para", "[", "3", "]", "==", "0", ":", "\n", "                    ", "agent_Speed", "=", "self", ".", "adv_setting", "[", "7", "]", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "                    ", "agent_Speed", "=", "self", ".", "adv_setting", "[", "7", "]", "[", "current_Agent_State", "[", "9", "]", "-", "1", "]", "[", "0", "]", "\n", "\n", "# ************************ Part 1: Monitor the click event ******************************", "\n", "# Set the exit event to generate the simulation video and exit the simulation environment", "\n", "", "", "for", "event", "in", "pygame", ".", "event", ".", "get", "(", ")", ":", "\n", "                ", "if", "event", ".", "type", "==", "QUIT", ":", "\n", "                    ", "if", "video_Recording_Flag", "==", "1", ":", "\n", "# Generate the video to record the simulation", "\n", "                        ", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "                            ", "Util", ".", "generate_animation", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images'", ",", "\n", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Open_World'", "+", "'_'", "+", "username", "+", "'_Animation.avi'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "                            ", "Util", ".", "generate_animation", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "\n", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images'", ",", "\n", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "\n", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Scenario#'", "+", "str", "(", "\n", "self", ".", "scenario_idx", ")", "+", "'_'", "+", "username", "+", "'_Animation.avi'", ")", "\n", "\n", "", "", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "# Remove the directory 'Raw_Images'", "\n", "                        ", "shutil", ".", "rmtree", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images'", ")", "\n", "# Re-create the directory 'Raw_Images'", "\n", "os", ".", "makedirs", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "# Remove the directory 'Raw_Images'", "\n", "                        ", "shutil", ".", "rmtree", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images'", ")", "\n", "# Re-create the directory 'Raw_Images'", "\n", "os", ".", "makedirs", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images'", ")", "\n", "\n", "# Exit the simulation environment", "\n", "", "self", ".", "close_flag", "=", "1", "\n", "#sys.exit()", "\n", "\n", "# If the left button of the mouse is pressed, get the current position of the mouse (Goal)", "\n", "", "elif", "event", ".", "type", "==", "MOUSEBUTTONDOWN", ":", "\n", "# Get the position of the mouse when the click event happens", "\n", "                    ", "(", "goal_X", ",", "goal_Y", ")", "=", "pygame", ".", "mouse", ".", "get_pos", "(", ")", "\n", "\n", "# Ensure that the mouse click happens inside the window", "\n", "if", "(", "goal_X", "<=", "world_Size", ")", "and", "(", "goal_Y", "<=", "world_Size", ")", ":", "\n", "                        ", "in_Base_Flag", ",", "base_Index", "=", "Agent_Util", ".", "in_Agent_Base_Region", "(", "goal_X", ",", "goal_Y", ",", "agent_Base_Num", ",", "agent_Base_Loci", ")", "\n", "# If the clicked position locates within the base region, the agent will go back the base to refuel", "\n", "if", "in_Base_Flag", ":", "\n", "                            ", "current_Agent_State", "[", "13", "]", "=", "2", "\n", "\n", "", "else", ":", "\n", "# Update the goal_Index variable", "\n", "                            ", "goal_Index", "[", "current_Agent_Index", "]", "+=", "1", "\n", "\n", "# Create the buffer to store the location and time(ms) of the new goal (Action 0)", "\n", "new_Goal_Buffer", "=", "[", "goal_X", ",", "goal_Y", ",", "np", ".", "floor", "(", "current_Time", "/", "100", ")", ",", "0", ",", "goal_Index", "[", "current_Agent_Index", "]", "]", "\n", "\n", "if", "(", "start_Flag", "[", "current_Agent_Index", "]", "==", "0", ")", "and", "(", "current_Agent_State", "[", "7", "]", ">", "0", ")", ":", "\n", "                                ", "current_Goal_Index", "[", "current_Agent_Index", "]", "=", "max", "(", "len", "(", "goal_Index_List", "[", "current_Agent_Index", "]", ")", ",", "\n", "current_Goal_Index", "[", "current_Agent_Index", "]", ")", "\n", "patrolling_Goal_List", "[", "current_Agent_Index", "]", "=", "[", "new_Goal_Buffer", "]", "\n", "current_Agent_State", "[", "6", "]", "=", "max", "(", "len", "(", "goal_Index_List", "[", "current_Agent_Index", "]", ")", "+", "1", ",", "current_Agent_State", "[", "6", "]", ")", "\n", "current_Agent_State", "[", "14", "]", "=", "0", "\n", "current_Agent_State", "[", "15", "]", "=", "0", "\n", "\n", "# If patrolling agent flag is 0, add it into the patrolling goal list", "\n", "", "if", "(", "current_Agent_State", "[", "14", "]", "==", "0", ")", ":", "\n", "# Set the first goal as the first element in the patrolling goal list", "\n", "                                ", "if", "(", "len", "(", "global_User_Data_List", "[", "current_Agent_Index", "]", ")", "==", "0", ")", ":", "\n", "                                    ", "patrolling_Goal_List", "[", "current_Agent_Index", "]", ".", "append", "(", "new_Goal_Buffer", ")", "\n", "", "else", ":", "\n", "# Determine the closure of the patrolling loop", "\n", "                                    ", "patrolling_Distance", "=", "np", ".", "sqrt", "(", "\n", "(", "new_Goal_Buffer", "[", "0", "]", "-", "patrolling_Goal_List", "[", "current_Agent_Index", "]", "[", "0", "]", "[", "0", "]", ")", "**", "2", "+", "\n", "(", "new_Goal_Buffer", "[", "1", "]", "-", "patrolling_Goal_List", "[", "current_Agent_Index", "]", "[", "0", "]", "[", "1", "]", ")", "**", "2", ")", "\n", "# If the distance between the new goal and the 1st element in the patrolling loop list is less than the agent_Speed,", "\n", "# set the flag of the patrolling loop closure as 1", "\n", "if", "(", "patrolling_Distance", "<=", "(", "agent_Speed", "*", "5", ")", ")", "and", "(", "len", "(", "patrolling_Goal_List", "[", "current_Agent_Index", "]", ")", ">", "1", ")", ":", "\n", "                                        ", "current_Agent_State", "[", "14", "]", "=", "1", "\n", "index", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "patrolling_Goal_List", "[", "current_Agent_Index", "]", ")", ")", ":", "\n", "                                            ", "if", "current_Agent_State", "[", "6", "]", "==", "patrolling_Goal_List", "[", "current_Agent_Index", "]", "[", "i", "]", "[", "4", "]", ":", "\n", "                                                ", "index", "=", "i", "\n", "break", "\n", "", "", "current_Agent_State", "[", "15", "]", "=", "index", "\n", "\n", "# If not, add it into the patrolling goal list", "\n", "", "else", ":", "\n", "                                        ", "patrolling_Goal_List", "[", "current_Agent_Index", "]", ".", "append", "(", "new_Goal_Buffer", ")", "\n", "# If patrolling agent flag is 1, determine the ending condition of the patrolling loop", "\n", "", "", "", "else", ":", "\n", "                                ", "current_Goal_Index", "[", "current_Agent_Index", "]", "=", "max", "(", "len", "(", "goal_Index_List", "[", "current_Agent_Index", "]", ")", ",", "current_Goal_Index", "[", "current_Agent_Index", "]", ")", "\n", "current_Agent_State", "[", "6", "]", "=", "max", "(", "len", "(", "goal_Index_List", "[", "current_Agent_Index", "]", ")", "+", "1", ",", "current_Agent_State", "[", "6", "]", ")", "\n", "current_Agent_State", "[", "14", "]", "=", "0", "\n", "current_Agent_State", "[", "15", "]", "=", "0", "\n", "patrolling_Goal_List", "[", "current_Agent_Index", "]", "=", "[", "new_Goal_Buffer", "]", "\n", "\n", "# Record the index of the current goal in the global_User_Data_List", "\n", "", "goal_Index_List", "[", "current_Agent_Index", "]", ".", "append", "(", "len", "(", "global_User_Data_List", "[", "current_Agent_Index", "]", ")", ")", "\n", "\n", "# Record the goal information in the global list", "\n", "global_User_Data_List", "[", "current_Agent_Index", "]", ".", "append", "(", "new_Goal_Buffer", ")", "\n", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "# Write the information of the goals into the .pkl file", "\n", "                                ", "user_Data_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/User_Data.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "global_User_Data_List", ",", "user_Data_Output", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "# Write the information of the goals into the .pkl file", "\n", "                                ", "user_Data_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/User_Data.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "global_User_Data_List", ",", "user_Data_Output", ")", "\n", "\n", "# Update the start flag", "\n", "", "if", "current_Agent_State", "[", "13", "]", "!=", "2", ":", "\n", "                                ", "start_Flag", "[", "current_Agent_Index", "]", "=", "1", "\n", "\n", "# If its value of the move mode flag is 1, the agent will fly by one step when clicking", "\n", "", "", "if", "move_Mode_Flag", "[", "current_Agent_Index", "]", "==", "1", ":", "\n", "                            ", "current_Agent_State", ",", "agent_Current_Pos_Z", "[", "current_Agent_Index", "]", ",", "agent_Init_Pos_Z", "[", "current_Agent_Index", "]", ",", "current_Goal_Index", "[", "current_Agent_Index", "]", ",", "pruning_Trigger", ",", "start_Flag", "[", "current_Agent_Index", "]", ",", "waiting_Time_List", "=", "Agent_Util", ".", "agent_Motion_Controller", "(", "agent_Speed", ",", "current_Agent_State", ",", "\n", "move_Mode_Flag", "[", "current_Agent_Index", "]", ",", "\n", "goal_X", ",", "goal_Y", ",", "agent_Current_Pos_Z", "[", "current_Agent_Index", "]", ",", "\n", "agent_Init_Pos_Z", "[", "current_Agent_Index", "]", ",", "\n", "global_User_Data_List", "[", "current_Agent_Index", "]", ",", "\n", "current_Goal_Index", "[", "current_Agent_Index", "]", ",", "\n", "goal_Index", "[", "current_Agent_Index", "]", ",", "\n", "start_Flag", "[", "current_Agent_Index", "]", ",", "firefighter_Agent_Num", ",", "\n", "pruning_Trigger", ",", "battery_para", "[", "current_Agent_Index", "]", ",", "\n", "original_Agent_State_List", "[", "current_Agent_Index", "]", ",", "\n", "patrolling_Goal_List", "[", "current_Agent_Index", "]", ",", "waiting_Time_List", ",", "current_Time", ")", "\n", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "current_Agent_State_List", "[", "current_Agent_Index", "]", "=", "current_Agent_State", "\n", "\n", "# If the up or down button of the keyboard is pressed, change the size of the searching scope", "\n", "", "", "", "elif", "event", ".", "type", "==", "KEYDOWN", ":", "\n", "# Mark the keyboard action for storage", "\n", "                    ", "keyboard_Action_Type", "=", "0", "\n", "\n", "# If the up button of the keyboard is pressed, enlarge the searching scope", "\n", "if", "event", ".", "key", "==", "pygame", ".", "K_UP", ":", "\n", "# This action is only effective for the sensing agents and hybrid agents", "\n", "                        ", "if", "(", "current_Agent_State", "[", "8", "]", "==", "0", ")", "or", "(", "current_Agent_State", "[", "8", "]", "==", "2", ")", ":", "\n", "# Update the flight height", "\n", "                            ", "agent_Current_Pos_Z", "[", "current_Agent_Index", "]", "=", "agent_Init_Pos_Z", "[", "current_Agent_Index", "]", "+", "lift_Step", "\n", "# Ensure the height value does not exceed the upper bound", "\n", "if", "agent_Current_Pos_Z", "[", "current_Agent_Index", "]", ">", "agent_Upper_Height", ":", "\n", "                                ", "agent_Current_Pos_Z", "[", "current_Agent_Index", "]", "=", "agent_Upper_Height", "\n", "# Set the keyboard action as 1", "\n", "", "keyboard_Action_Type", "=", "1", "\n", "\n", "# If the down button of the keyboard is pressed, shrink the searching scope", "\n", "", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_DOWN", ":", "\n", "# This action is only effective for the sensing agents and hybrid agents", "\n", "                        ", "if", "(", "current_Agent_State", "[", "8", "]", "==", "0", ")", "or", "(", "current_Agent_State", "[", "8", "]", "==", "2", ")", ":", "\n", "# Update the flight height", "\n", "                            ", "agent_Current_Pos_Z", "[", "current_Agent_Index", "]", "=", "agent_Init_Pos_Z", "[", "current_Agent_Index", "]", "-", "lift_Step", "\n", "# Ensure the height value does not exceed the lower bound", "\n", "if", "agent_Current_Pos_Z", "[", "current_Agent_Index", "]", "<", "agent_Lower_Height", ":", "\n", "                                ", "agent_Current_Pos_Z", "[", "current_Agent_Index", "]", "=", "agent_Lower_Height", "\n", "# Set the keyboard action as -1", "\n", "", "keyboard_Action_Type", "=", "-", "1", "\n", "\n", "# If digit key between 1 and 9 on the keyboard is pressed, switch the agent index", "\n", "", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_1", ":", "\n", "                        ", "if", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ">=", "1", ":", "\n", "# Update the current_Agent_State_List first", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "                            ", "current_Agent_State_List", "[", "current_Agent_Index", "]", "=", "current_Agent_State", "\n", "# Append to the current agent state list into the corresponding list", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "                                ", "global_Agent_State", "[", "i", "]", "+=", "current_Agent_State_List", "[", "i", "]", "\n", "\n", "# Switch the agent index", "\n", "", "current_Agent_Index", "=", "0", "\n", "\n", "# Update the current_Agent_State list", "\n", "current_Agent_State", "=", "current_Agent_State_List", "[", "current_Agent_Index", "]", "\n", "\n", "", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_2", ":", "\n", "                        ", "if", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ">=", "2", ":", "\n", "# Update the current_Agent_State_List first", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "                            ", "current_Agent_State_List", "[", "current_Agent_Index", "]", "=", "current_Agent_State", "\n", "# Append to the current agent state list into the corresponding list", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "                                ", "global_Agent_State", "[", "i", "]", "+=", "current_Agent_State_List", "[", "i", "]", "\n", "\n", "# Switch the agent index", "\n", "", "current_Agent_Index", "=", "1", "\n", "\n", "# Update the current_Agent_State list", "\n", "current_Agent_State", "=", "current_Agent_State_List", "[", "current_Agent_Index", "]", "\n", "\n", "", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_3", ":", "\n", "                        ", "if", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ">=", "3", ":", "\n", "# Update the current_Agent_State_List first", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "                            ", "current_Agent_State_List", "[", "current_Agent_Index", "]", "=", "current_Agent_State", "\n", "# Append to the current agent state list into the corresponding list", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "                                ", "global_Agent_State", "[", "i", "]", "+=", "current_Agent_State_List", "[", "i", "]", "\n", "\n", "# Switch the agent index", "\n", "", "current_Agent_Index", "=", "2", "\n", "\n", "# Update the current_Agent_State list", "\n", "current_Agent_State", "=", "current_Agent_State_List", "[", "current_Agent_Index", "]", "\n", "\n", "", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_4", ":", "\n", "                        ", "if", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ">=", "4", ":", "\n", "# Update the current_Agent_State_List first", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "                            ", "current_Agent_State_List", "[", "current_Agent_Index", "]", "=", "current_Agent_State", "\n", "# Append to the current agent state list into the corresponding list", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "                                ", "global_Agent_State", "[", "i", "]", "+=", "current_Agent_State_List", "[", "i", "]", "\n", "\n", "# Switch the agent index", "\n", "", "current_Agent_Index", "=", "3", "\n", "\n", "# Update the current_Agent_State list", "\n", "current_Agent_State", "=", "current_Agent_State_List", "[", "current_Agent_Index", "]", "\n", "\n", "", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_5", ":", "\n", "                        ", "if", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ">=", "5", ":", "\n", "# Update the current_Agent_State_List first", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "                            ", "current_Agent_State_List", "[", "current_Agent_Index", "]", "=", "current_Agent_State", "\n", "# Append to the current agent state list into the corresponding list", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "                                ", "global_Agent_State", "[", "i", "]", "+=", "current_Agent_State_List", "[", "i", "]", "\n", "\n", "# Switch the agent index", "\n", "", "current_Agent_Index", "=", "4", "\n", "\n", "# Update the current_Agent_State list", "\n", "current_Agent_State", "=", "current_Agent_State_List", "[", "current_Agent_Index", "]", "\n", "\n", "", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_6", ":", "\n", "                        ", "if", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ">=", "6", ":", "\n", "# Update the current_Agent_State_List first", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "                            ", "current_Agent_State_List", "[", "current_Agent_Index", "]", "=", "current_Agent_State", "\n", "# Append to the current agent state list into the corresponding list", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "                                ", "global_Agent_State", "[", "i", "]", "+=", "current_Agent_State_List", "[", "i", "]", "\n", "\n", "# Switch the agent index", "\n", "", "current_Agent_Index", "=", "5", "\n", "\n", "# Update the current_Agent_State list", "\n", "current_Agent_State", "=", "current_Agent_State_List", "[", "current_Agent_Index", "]", "\n", "\n", "", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_7", ":", "\n", "                        ", "if", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ">=", "7", ":", "\n", "# Update the current_Agent_State_List first", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "                            ", "current_Agent_State_List", "[", "current_Agent_Index", "]", "=", "current_Agent_State", "\n", "# Append to the current agent state list into the corresponding list", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "                                ", "global_Agent_State", "[", "i", "]", "+=", "current_Agent_State_List", "[", "i", "]", "\n", "\n", "# Switch the agent index", "\n", "", "current_Agent_Index", "=", "6", "\n", "\n", "# Update the current_Agent_State list", "\n", "current_Agent_State", "=", "current_Agent_State_List", "[", "current_Agent_Index", "]", "\n", "\n", "", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_8", ":", "\n", "                        ", "if", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ">=", "8", ":", "\n", "# Update the current_Agent_State_List first", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "                            ", "current_Agent_State_List", "[", "current_Agent_Index", "]", "=", "current_Agent_State", "\n", "# Append to the current agent state list into the corresponding list", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "                                ", "global_Agent_State", "[", "i", "]", "+=", "current_Agent_State_List", "[", "i", "]", "\n", "\n", "# Switch the agent index", "\n", "", "current_Agent_Index", "=", "7", "\n", "\n", "# Update the current_Agent_State list", "\n", "current_Agent_State", "=", "current_Agent_State_List", "[", "current_Agent_Index", "]", "\n", "\n", "", "", "elif", "event", ".", "key", "==", "pygame", ".", "K_9", ":", "\n", "                        ", "if", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ">=", "9", ":", "\n", "# Update the current_Agent_State_List first", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "                            ", "current_Agent_State_List", "[", "current_Agent_Index", "]", "=", "current_Agent_State", "\n", "# Append to the current agent state list into the corresponding list", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "                                ", "global_Agent_State", "[", "i", "]", "+=", "current_Agent_State_List", "[", "i", "]", "\n", "\n", "# Switch the agent index", "\n", "", "current_Agent_Index", "=", "8", "\n", "\n", "# Update the current_Agent_State list", "\n", "current_Agent_State", "=", "current_Agent_State_List", "[", "current_Agent_Index", "]", "\n", "\n", "# If the keyboard up or down event happens, write the action to the list", "\n", "", "", "if", "keyboard_Action_Type", "!=", "0", ":", "\n", "# Create the buffer to store the location and time(ms) of the new goal (Action -1 / 1)", "\n", "                        ", "new_Goal_Buffer", "=", "[", "current_Agent_State", "[", "0", "]", ",", "current_Agent_State", "[", "1", "]", ",", "\n", "np", ".", "floor", "(", "current_Time", "/", "100", ")", ",", "keyboard_Action_Type", ",", "0", "]", "\n", "# Record the goal information in the global list", "\n", "global_User_Data_List", "[", "current_Agent_Index", "]", ".", "append", "(", "new_Goal_Buffer", ")", "\n", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "# Write the information of the goals into the .pkl file", "\n", "                            ", "user_Data_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/User_Data.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "global_User_Data_List", ",", "user_Data_Output", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "# Write the information of the goals into the .pkl file", "\n", "                            ", "user_Data_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/User_Data.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "global_User_Data_List", ",", "user_Data_Output", ")", "\n", "\n", "\n", "# ************************ Part 2: Plot the targets ******************************", "\n", "", "", "", "", "Agent_Util", ".", "road_plot", "(", "screen", ",", "target_Loci", ")", "\n", "# Plot all the targets", "\n", "for", "i", "in", "range", "(", "target_Num", ")", ":", "\n", "                ", "target_Loci", "[", "i", "]", "=", "Agent_Util", ".", "target_Plot", "(", "screen", ",", "hospital_Font", ",", "target_Loci", "[", "i", "]", ",", "current_Time", ")", "\n", "\n", "", "lake_Loci", "=", "Agent_Util", ".", "lake_plot", "(", "screen", ",", "lake_list", ",", "lake_Loci", ",", "current_Time", ")", "\n", "\n", "# ************************ Part 3: Plot the fire spot ******************************", "\n", "# propagate the wildfire", "\n", "if", "self", ".", "set_loci", "[", "1", "]", "[", "9", "]", "==", "0", ":", "\n", "                ", "if", "current_Time", ">", "(", "self", ".", "set_loci", "[", "1", "]", "[", "1", "]", "*", "1000", ")", ":", "\n", "                    ", "new_fire_front", ",", "current_geo_phys_info", "=", "fire_env", ".", "fire_propagation", "(", "world_Size", ",", "ign_points_all", "=", "ign_points_all", ",", "\n", "geo_phys_info", "=", "geo_phys_info", ",", "previous_terrain_map", "=", "previous_terrain_map", ",", "pruned_List", "=", "pruned_List", ")", "\n", "updated_terrain_map", "=", "previous_terrain_map", "\n", "", "else", ":", "\n", "                    ", "new_fire_front", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "current_geo_phys_info", "=", "[", "]", "\n", "", "", "else", ":", "\n", "                ", "updated_terrain_map", "=", "previous_terrain_map", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                    ", "if", "current_Time", ">", "(", "self", ".", "set_loci", "[", "1", "]", "[", "1", "]", "[", "i", "]", "*", "1000", ")", ":", "\n", "                        ", "new_fire_front_temp", "[", "i", "]", ",", "current_geo_phys_info", "[", "i", "]", "=", "fire_env", "[", "i", "]", ".", "fire_propagation", "(", "world_Size", ",", "\n", "ign_points_all", "=", "ign_points_all", "[", "i", "]", ",", "\n", "geo_phys_info", "=", "geo_phys_info", "[", "i", "]", ",", "\n", "previous_terrain_map", "=", "previous_terrain_map", "[", "i", "]", ",", "\n", "pruned_List", "=", "pruned_List", ")", "\n", "", "else", ":", "\n", "                        ", "new_fire_front_temp", "[", "i", "]", "=", "np", ".", "array", "(", "[", "]", ")", "\n", "current_geo_phys_info", "[", "i", "]", "=", "[", "]", "\n", "", "", "new_fire_front", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                    ", "for", "j", "in", "range", "(", "len", "(", "new_fire_front_temp", "[", "i", "]", ")", ")", ":", "\n", "                        ", "new_fire_front", ".", "append", "(", "new_fire_front_temp", "[", "i", "]", "[", "j", "]", ")", "\n", "", "", "new_fire_front", "=", "np", ".", "array", "(", "new_fire_front", ")", "\n", "\n", "", "if", "self", ".", "set_loci", "[", "1", "]", "[", "9", "]", "==", "1", ":", "\n", "                ", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                    ", "if", "current_Time", ">", "(", "self", ".", "set_loci", "[", "1", "]", "[", "1", "]", "[", "i", "]", "*", "1000", ")", ":", "\n", "                        ", "fire_map_spec", "[", "i", "]", "=", "np", ".", "concatenate", "(", "[", "fire_map_spec", "[", "i", "]", ",", "new_fire_front_temp", "[", "i", "]", "]", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "                        ", "fire_map_spec", "[", "i", "]", "=", "fire_map_spec", "[", "i", "]", "\n", "", "", "", "else", ":", "\n", "                ", "fire_map_spec", "=", "fire_map", "\n", "\n", "# Process the fire spot information", "\n", "", "fire_Current_Map", ",", "fire_States_List", ",", "onFire_List", ",", "target_onFire_list", ",", "target_onFire_Flag", "=", "Agent_Util", ".", "fire_Data_Storage", "(", "self", ".", "set_loci", "[", "1", "]", "[", "0", "]", ",", "fire_States_List", ",", "\n", "new_fire_front", ",", "world_Size", ",", "fireSpots_Num", ",", "fire_Current_Map", ",", "current_Time", ",", "onFire_List", ",", "target_onFire_list", ",", "target_onFire_Flag", ",", "target_info", ",", "self", ".", "set_loci", "[", "1", "]", "[", "9", "]", ",", "fire_turnon_flag", ")", "\n", "\n", "# ************************ Part 4: Update the position of the agent ******************************", "\n", "agent_Base_Loci", "=", "Agent_Util", ".", "agent_Base_Plot", "(", "screen", ",", "agent_Base_Num", ",", "agent_Base_Loci", ",", "current_Time", ")", "\n", "\n", "# Search all the existing agents, update its position", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "# If its value of the move mode flag is 0, the agent will automatically fly towards the goal", "\n", "                ", "if", "(", "(", "move_Mode_Flag", "[", "i", "]", "==", "0", ")", "and", "(", "len", "(", "global_User_Data_List", "[", "i", "]", ")", ">", "0", ")", ")", ":", "\n", "# Current selected agent", "\n", "                    ", "if", "i", "==", "current_Agent_Index", ":", "\n", "                        ", "current_Agent_State", ",", "agent_Current_Pos_Z", "[", "i", "]", ",", "agent_Init_Pos_Z", "[", "i", "]", ",", "current_Goal_Index", "[", "i", "]", ",", "pruning_Trigger", ",", "start_Flag", "[", "i", "]", ",", "waiting_Time_List", "=", "Agent_Util", ".", "agent_Motion_Controller", "(", "agent_Speed", ",", "current_Agent_State", ",", "move_Mode_Flag", "[", "i", "]", ",", "0.0", ",", "0.0", ",", "\n", "agent_Current_Pos_Z", "[", "i", "]", ",", "agent_Init_Pos_Z", "[", "i", "]", ",", "\n", "global_User_Data_List", "[", "i", "]", ",", "current_Goal_Index", "[", "i", "]", ",", "goal_Index", "[", "i", "]", ",", "\n", "start_Flag", "[", "i", "]", ",", "firefighter_Agent_Num", ",", "pruning_Trigger", ",", "\n", "battery_para", "[", "i", "]", ",", "original_Agent_State_List", "[", "i", "]", ",", "\n", "patrolling_Goal_List", "[", "i", "]", ",", "waiting_Time_List", ",", "current_Time", ")", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "current_Agent_State_List", "[", "i", "]", "=", "current_Agent_State", "\n", "\n", "", "else", ":", "\n", "# Rest agent, moving towards to the previous goal automatically", "\n", "                        ", "current_Agent_State1", ",", "agent_Current_Pos_Z", "[", "i", "]", ",", "agent_Init_Pos_Z", "[", "i", "]", ",", "current_Goal_Index", "[", "i", "]", ",", "pruning_Trigger", ",", "start_Flag", "[", "i", "]", ",", "waiting_Time_List", "=", "Agent_Util", ".", "agent_Motion_Controller", "(", "agent_Speed", ",", "current_Agent_State_List", "[", "i", "]", ",", "move_Mode_Flag", "[", "i", "]", ",", "\n", "0.0", ",", "0.0", ",", "agent_Current_Pos_Z", "[", "i", "]", ",", "agent_Init_Pos_Z", "[", "i", "]", ",", "\n", "global_User_Data_List", "[", "i", "]", ",", "current_Goal_Index", "[", "i", "]", ",", "goal_Index", "[", "i", "]", ",", "\n", "start_Flag", "[", "i", "]", ",", "firefighter_Agent_Num", ",", "pruning_Trigger", ",", "\n", "battery_para", "[", "i", "]", ",", "original_Agent_State_List", "[", "i", "]", ",", "\n", "patrolling_Goal_List", "[", "i", "]", ",", "waiting_Time_List", ",", "current_Time", ")", "\n", "# Update the corresponding element in the current_Agent_State_List", "\n", "current_Agent_State_List", "[", "i", "]", "=", "current_Agent_State1", "\n", "\n", "# Append to the current agent state list into the corresponding list", "\n", "", "", "global_Agent_State", "[", "i", "]", "=", "global_Agent_State", "[", "i", "]", "+", "current_Agent_State_List", "[", "i", "]", "\n", "\n", "# ************************ Part 5: Sensing the fire spots ******************************", "\n", "# If the current agent is the sensing agent, enable the sensing function", "\n", "if", "(", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "0", ")", ":", "\n", "                    ", "fire_Sensed_Map", ",", "CoM_Info", ",", "sensed_List", "=", "Agent_Util", ".", "fire_Sensing", "(", "fire_map_spec", ",", "current_Agent_State_List", "[", "i", "]", ",", "\n", "agent_FOV", ",", "geo_phys_info", ",", "onFire_List", ",", "sensed_List", ",", "world_Size", ",", "self", ".", "set_loci", "[", "1", "]", "[", "0", "]", ",", "\n", "self", ".", "set_loci", "[", "1", "]", "[", "9", "]", ",", "fire_turnon_flag", ",", "[", "agent_Lower_Height_List", "[", "i", "]", ",", "agent_Upper_Height_List", "[", "i", "]", ",", "current_Agent_State_List", "[", "i", "]", "[", "2", "]", "]", ")", "\n", "\n", "sensed_Fire_Spot_List", "[", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", "-", "1", "]", ".", "append", "(", "fire_Sensed_Map", ")", "\n", "CoM_Info_List", "[", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", "-", "1", "]", ".", "append", "(", "CoM_Info", ")", "\n", "\n", "# For the firefighter agents, utilize the pruning function and update the onFire, sensed, and pruned list", "\n", "", "elif", "(", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "1", ")", ":", "\n", "                    ", "trigger_Index", "=", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", "-", "1", "+", "firefighter_Agent_Num", "*", "(", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "-", "1", ")", "\n", "if", "(", "(", "pruning_Trigger", "[", "trigger_Index", "]", "==", "1", ")", "and", "(", "current_Agent_State_List", "[", "i", "]", "[", "2", "]", "==", "30", ")", ")", ":", "\n", "                        ", "fire_Pruned_Map", ",", "fire_map", ",", "onFire_List", ",", "sensed_List", ",", "pruned_List", ",", "new_fire_front", ",", "target_onFire_list", ",", "sensed_flag", "=", "Agent_Util", ".", "fire_Pruning", "(", "fire_map", ",", "current_Agent_State_List", "[", "i", "]", ",", "agent_FOV", ",", "onFire_List", ",", "sensed_List", ",", "\n", "pruned_List", ",", "new_fire_front", ",", "target_onFire_list", ",", "target_info", ",", "confidence_level_list", "[", "i", "]", ")", "\n", "if", "sensed_flag", "==", "1", ":", "\n", "                            ", "pruned_Fire_Spot_List", "[", "trigger_Index", "]", ".", "append", "(", "[", "fire_Pruned_Map", ",", "[", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", ",", "current_Time", "]", "]", ")", "\n", "\n", "\n", "if", "current_Agent_State_List", "[", "i", "]", "[", "12", "]", ">", "0", ":", "\n", "                                ", "current_Agent_State_List", "[", "i", "]", "[", "12", "]", "=", "current_Agent_State_List", "[", "i", "]", "[", "12", "]", "-", "1", "\n", "", "else", ":", "\n", "                               ", "current_Agent_State_List", "[", "i", "]", "[", "13", "]", "=", "0", "\n", "\n", "", "pruning_Trigger", "[", "trigger_Index", "]", "=", "2", "\n", "", "", "else", ":", "\n", "                        ", "pruned_Fire_Spot_List", "[", "trigger_Index", "]", ".", "append", "(", "[", "]", ")", "\n", "\n", "# For the hybrid agents, enable both function of the sensing and firefighter agents", "\n", "", "", "elif", "(", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "2", ")", ":", "\n", "                    ", "fire_Sensed_Map", ",", "CoM_Info", ",", "sensed_List", "=", "Agent_Util", ".", "fire_Sensing", "(", "fire_map_spec", ",", "current_Agent_State_List", "[", "i", "]", ",", "\n", "agent_FOV", ",", "geo_phys_info", ",", "onFire_List", ",", "sensed_List", ",", "world_Size", ",", "self", ".", "set_loci", "[", "1", "]", "[", "0", "]", ",", "\n", "self", ".", "set_loci", "[", "1", "]", "[", "9", "]", ",", "fire_turnon_flag", ",", "[", "agent_Lower_Height_List", "[", "i", "]", ",", "agent_Upper_Height_List", "[", "i", "]", ",", "current_Agent_State_List", "[", "i", "]", "[", "2", "]", "]", ")", "\n", "\n", "sensed_Fire_Spot_List", "[", "searching_Agent_Num", "+", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", "-", "1", "]", ".", "append", "(", "fire_Sensed_Map", ")", "\n", "CoM_Info_List", "[", "searching_Agent_Num", "+", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", "-", "1", "]", ".", "append", "(", "CoM_Info", ")", "\n", "\n", "trigger_Index", "=", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", "-", "1", "+", "firefighter_Agent_Num", "*", "(", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "-", "1", ")", "\n", "if", "(", "(", "pruning_Trigger", "[", "trigger_Index", "]", "==", "1", ")", "and", "(", "current_Agent_State_List", "[", "i", "]", "[", "2", "]", "==", "20", ")", ")", ":", "\n", "                        ", "fire_Pruned_Map", ",", "fire_map", ",", "onFire_List", ",", "sensed_List", ",", "pruned_List", ",", "new_fire_front", ",", "target_onFire_list", ",", "sensed_flag", "=", "Agent_Util", ".", "fire_Pruning", "(", "fire_map", ",", "current_Agent_State_List", "[", "i", "]", ",", "agent_FOV", ",", "onFire_List", ",", "sensed_List", ",", "\n", "pruned_List", ",", "new_fire_front", ",", "target_onFire_list", ",", "target_info", ",", "confidence_level_list", "[", "i", "]", ")", "\n", "if", "sensed_flag", "==", "1", ":", "\n", "                            ", "pruned_Fire_Spot_List", "[", "trigger_Index", "]", ".", "append", "(", "[", "fire_Pruned_Map", ",", "[", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", ",", "current_Time", "]", "]", ")", "\n", "\n", "if", "current_Agent_State_List", "[", "i", "]", "[", "12", "]", ">", "0", ":", "\n", "                                ", "current_Agent_State_List", "[", "i", "]", "[", "12", "]", "=", "current_Agent_State_List", "[", "i", "]", "[", "12", "]", "-", "1", "\n", "\n", "", "else", ":", "\n", "                               ", "current_Agent_State_List", "[", "i", "]", "[", "13", "]", "=", "0", "\n", "\n", "", "pruning_Trigger", "[", "trigger_Index", "]", "=", "2", "\n", "", "", "else", ":", "\n", "                        ", "pruned_Fire_Spot_List", "[", "trigger_Index", "]", ".", "append", "(", "[", "]", ")", "\n", "\n", "# Plot the sensed fire spot for method learning", "\n", "", "", "", "current_Max_Intensity", "=", "Agent_Util", ".", "sensed_Fire_Spot_Plot", "(", "screen", ",", "sensed_List", ",", "fire_Current_Map", ",", "\n", "current_Max_Intensity", ")", "\n", "\n", "# Plot the pruned fire dots", "\n", "for", "i", "in", "range", "(", "len", "(", "pruned_List", ")", ")", ":", "\n", "# Ensure that all the fire spots to be displayed must be within the window scope", "\n", "                ", "if", "(", "(", "pruned_List", "[", "i", "]", "[", "0", "]", "<=", "world_Size", ")", "and", "(", "pruned_List", "[", "i", "]", "[", "1", "]", "<=", "world_Size", ")", "\n", "and", "(", "pruned_List", "[", "i", "]", "[", "0", "]", ">=", "0", ")", "and", "(", "pruned_List", "[", "i", "]", "[", "1", "]", ">=", "0", ")", ")", ":", "\n", "                    ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "(", "pruned_List", "[", "i", "]", "[", "0", "]", ",", "pruned_List", "[", "i", "]", "[", "1", "]", ")", ",", "1", ")", "\n", "\n", "# updating the fire-map data for next step", "\n", "", "", "if", "new_fire_front", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "                ", "fire_map", "=", "np", ".", "concatenate", "(", "[", "fire_map", ",", "new_fire_front", "]", ",", "axis", "=", "0", ")", "# raw fire map without fire decay", "\n", "\n", "", "if", "self", ".", "set_loci", "[", "1", "]", "[", "9", "]", "==", "1", ":", "\n", "                ", "ign_points_all_temp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "environment_para", "[", "2", "]", ")", ":", "\n", "                    ", "if", "new_fire_front_temp", "[", "i", "]", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "                        ", "previous_terrain_map", "[", "i", "]", "=", "np", ".", "concatenate", "(", "(", "updated_terrain_map", "[", "i", "]", ",", "new_fire_front_temp", "[", "i", "]", ")", ",", "axis", "=", "0", ")", "# fire map with fire decay", "\n", "\n", "", "if", "current_Time", ">", "self", ".", "set_loci", "[", "1", "]", "[", "1", "]", "[", "i", "]", "*", "1000", ":", "\n", "                        ", "fire_turnon_flag", "[", "i", "]", "=", "1", "\n", "ign_points_all_temp", ".", "append", "(", "new_fire_front_temp", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "                        ", "ign_points_all_temp", ".", "append", "(", "ign_points_all", "[", "i", "]", ")", "\n", "", "", "ign_points_all", "=", "ign_points_all_temp", "\n", "", "else", ":", "\n", "                ", "if", "current_Time", ">", "self", ".", "set_loci", "[", "1", "]", "[", "1", "]", "*", "1000", ":", "\n", "                    ", "fire_turnon_flag", "=", "1", "\n", "", "if", "new_fire_front", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "                    ", "previous_terrain_map", "=", "np", ".", "concatenate", "(", "(", "updated_terrain_map", ",", "new_fire_front", ")", ")", "# fire map with fire decay", "\n", "ign_points_all", "=", "new_fire_front", "\n", "\n", "# ************************ Part 6: Plot all the agents ******************************", "\n", "# Initialize the text display buffer", "\n", "", "", "text", "=", "[", "]", "\n", "\n", "# Go over all the elements in the current_Agent_State_List", "\n", "for", "i", "in", "range", "(", "searching_Agent_Num", "+", "firefighter_Agent_Num", "+", "hybrid_Agent_Num", ")", ":", "\n", "# Plot all the searching agents", "\n", "                ", "if", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "0", ":", "\n", "# Calculate the size of the searching scope", "\n", "                    ", "searching_Scope_X", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "0", "]", ")", "*", "current_Agent_State_List", "[", "i", "]", "[", "2", "]", "\n", "searching_Scope_Y", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "1", "]", ")", "*", "current_Agent_State_List", "[", "i", "]", "[", "2", "]", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "searching_Scope_Upper_Left_Corner", "=", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", "-", "searching_Scope_X", "/", "2", ",", "\n", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", "-", "searching_Scope_Y", "/", "2", ")", "\n", "# The size of the agent searching scope", "\n", "searching_Scope_Size", "=", "(", "searching_Scope_X", ",", "searching_Scope_Y", ")", "\n", "\n", "# Plot the searching agent (Circle) and its corresponding searching scope (Rectangle)", "\n", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "0", ",", "255", ")", ",", "(", "int", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", ")", ")", ",", "\n", "agent_Radius", ")", "\n", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "0", ",", "255", ")", ",", "Rect", "(", "searching_Scope_Upper_Left_Corner", ",", "searching_Scope_Size", ")", ",", "2", ")", "\n", "\n", "# Append it into the text display buffer", "\n", "text", ".", "append", "(", "font_Agent", ".", "render", "(", "'P'", "+", "str", "(", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "\n", "# Display the firefighter agent's trajectory", "\n", "index_Next", "[", "i", "]", "=", "Agent_Util", ".", "traj_Plot", "(", "screen", ",", "global_User_Data_List", "[", "i", "]", ",", "current_Agent_State_List", "[", "i", "]", ",", "\n", "patrolling_Goal_List", "[", "i", "]", ",", "(", "0", ",", "0", ",", "255", ")", ")", "\n", "\n", "# Plot all the firefighter agents", "\n", "", "elif", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "1", ":", "\n", "# The vertex set for the firefighter agent", "\n", "                    ", "firefighter_Agent_Vertex", "=", "[", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", "-", "agent_Radius", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", ")", ",", "\n", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", "+", "agent_Radius", ")", ",", "\n", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", "+", "agent_Radius", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", ")", ",", "\n", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", "-", "agent_Radius", ")", "]", "\n", "# Plot the firefighter agent (Diamond)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "128", ",", "0", ",", "128", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "\n", "# Append it into the text display buffer", "\n", "text", ".", "append", "(", "font_Agent", ".", "render", "(", "'A'", "+", "str", "(", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "\n", "# Display the firefighter agent's trajectory", "\n", "index_Next", "[", "i", "]", "=", "Agent_Util", ".", "traj_Plot", "(", "screen", ",", "global_User_Data_List", "[", "i", "]", ",", "current_Agent_State_List", "[", "i", "]", ",", "\n", "patrolling_Goal_List", "[", "i", "]", ",", "(", "128", ",", "0", ",", "128", ")", ")", "\n", "\n", "# Plot all the hybrid agents", "\n", "", "elif", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "2", ":", "\n", "# Calculate the size of the searching scope", "\n", "                    ", "searching_Scope_X", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "0", "]", ")", "*", "current_Agent_State_List", "[", "i", "]", "[", "2", "]", "\n", "searching_Scope_Y", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "1", "]", ")", "*", "current_Agent_State_List", "[", "i", "]", "[", "2", "]", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "searching_Scope_Upper_Left_Corner", "=", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", "-", "searching_Scope_X", "/", "2", ",", "\n", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", "-", "searching_Scope_Y", "/", "2", ")", "\n", "# The size of the agent searching scope", "\n", "searching_Scope_Size", "=", "(", "searching_Scope_X", ",", "searching_Scope_Y", ")", "\n", "\n", "# The vertex set for the hybrid agent", "\n", "firefighter_Agent_Vertex", "=", "[", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", "-", "agent_Radius", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", ")", ",", "\n", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", "+", "agent_Radius", ")", ",", "\n", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", "+", "agent_Radius", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", ")", ",", "\n", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", "-", "agent_Radius", ")", "]", "\n", "# Plot the hybrid agent (Diamond) and its corresponding searching scope (Rectangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "0", ",", "128", ",", "128", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "\n", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "128", ",", "128", ")", ",", "Rect", "(", "searching_Scope_Upper_Left_Corner", ",", "searching_Scope_Size", ")", ",", "2", ")", "\n", "\n", "# Append it into the text display buffer", "\n", "text", ".", "append", "(", "font_Agent", ".", "render", "(", "'H'", "+", "str", "(", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "\n", "# Display the hybrid agent's trajectory", "\n", "index_Next", "[", "i", "]", "=", "Agent_Util", ".", "traj_Plot", "(", "screen", ",", "global_User_Data_List", "[", "i", "]", ",", "current_Agent_State_List", "[", "i", "]", ",", "\n", "patrolling_Goal_List", "[", "i", "]", ",", "(", "0", ",", "128", ",", "128", ")", ")", "\n", "\n", "# Display the name of each agent", "\n", "", "screen", ".", "blit", "(", "text", "[", "i", "]", ",", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", ",", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", ")", ")", "\n", "\n", "# Display the goal list of the corresponding agent", "\n", "Agent_Util", ".", "goal_Marker", "(", "screen", ",", "font_Agent", ",", "global_User_Data_List", "[", "i", "]", ",", "current_Agent_State_List", "[", "i", "]", ",", "\n", "patrolling_Goal_List", "[", "i", "]", ",", "move_Mode_Flag", "[", "i", "]", ")", "\n", "\n", "# ************************ Part 7: Plot the center of mass ******************************", "\n", "\n", "# ************************ Part 8: Plot the display bar ******************************", "\n", "# Display the side bar", "\n", "", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "211", ",", "211", ",", "211", ")", ",", "Rect", "(", "(", "world_Size", ",", "0", ")", ",", "(", "display_Size", ",", "world_Size", ")", ")", ")", "\n", "\n", "# Update the state info", "\n", "pos", "=", "Agent_Util", ".", "side_Bar_Display", "(", "screen", ",", "current_Agent_State_List", ",", "font_Side", ",", "font_Side_Bold", ",", "font_Side_Title", ",", "battery_para", ",", "\n", "global_User_Data_List", ",", "index_Next", ",", "goal_Index_List", ",", "world_Size", ")", "\n", "\n", "# ************************ Part 9: Compute the game score ******************************", "\n", "overall_pruning_score", ",", "preception_score", ",", "action_score", ",", "safe_Num", ",", "facility_perception_score", ",", "total_Negative_Score", ",", "total_Negative_percent", "=", "Agent_Util", ".", "score_Calculation", "(", "len", "(", "fire_map", ")", ",", "onFire_List", ",", "sensed_List", ",", "pruned_List", ",", "target_onFire_list", ",", "target_onFire_Flag", ",", "facility_penalty", ",", "self", ".", "environment_para", ",", "self", ".", "set_loci", ",", "current_Time", ")", "\n", "\n", "score_list", "=", "[", "overall_pruning_score", ",", "preception_score", ",", "action_score", ",", "safe_Num", ",", "facility_perception_score", ",", "total_Negative_Score", ",", "total_Negative_percent", "]", "\n", "Agent_Util", ".", "score_display", "(", "screen", ",", "font_Side_Bold", ",", "font_Score", ",", "font_Scorelist", ",", "pos", ",", "score_list", ")", "\n", "\n", "# ************************ Part 10: Save the .pkl and the images ******************************", "\n", "# Save the current state on the screen", "\n", "# # All the data files will be saved every 200ms (Frequency = 5 Hz)", "\n", "if", "video_Recording_Flag", "==", "1", ":", "\n", "                ", "if", "(", "pygame", ".", "time", ".", "get_ticks", "(", ")", "%", "100", ")", "==", "0", ":", "\n", "                    ", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "                        ", "pygame", ".", "image", ".", "save", "(", "screen", ",", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images/'", "+", "str", "(", "current_Time", ")", "+", "\".png\"", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "                        ", "pygame", ".", "image", ".", "save", "(", "screen", ",", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images/'", "+", "str", "(", "current_Time", ")", "+", "\".png\"", ")", "\n", "\n", "", "", "", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "# All the data files will be saved every 200ms (Frequency = 5 Hz)", "\n", "                ", "if", "(", "pygame", ".", "time", ".", "get_ticks", "(", ")", "-", "last_store_time", ")", ">=", "200", ":", "\n", "# Write the information of the targets into the .pkl file", "\n", "                    ", "target_Loci_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Target_Loci.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "target_Loci", ",", "target_Loci_Output", ")", "\n", "\n", "# Write the information of the fire states into the .pkl file", "\n", "fire_States_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Fire_States.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "fire_States_List", ",", "fire_States_Output", ")", "\n", "\n", "# Write the current fire spot map into the .pkl file", "\n", "fire_Map_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Fire_Map.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "fire_Current_Map", ",", "fire_Map_Output", ")", "\n", "\n", "# Write the lake info into the .pkl file", "\n", "lake_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Lake_info.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "lake_Loci", ",", "lake_Output", ")", "\n", "\n", "# Write the center of mass information into the .pkl file", "\n", "CoM_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Sensing_Data_CoM.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "CoM_Info_List", ",", "CoM_Output", ")", "\n", "\n", "# Write the current sensed fire spot info into the .pkl file", "\n", "sensed_Fire_Map_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Sensed_Fire_Map.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "sensed_Fire_Spot_List", ",", "sensed_Fire_Map_Output", ")", "\n", "\n", "# Write the list of the fire fronts that locates inside the targets info into the .pkl file", "\n", "target_onFire_List_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/target_onFire_List.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "target_onFire_list", ",", "target_onFire_List_Output", ")", "\n", "\n", "# Write the current pruned fire spot info into the .pkl file", "\n", "pruned_Fire_Map_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Pruned_Fire_Map.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "pruned_Fire_Spot_List", ",", "pruned_Fire_Map_Output", ")", "\n", "\n", "# Write the information of the agent base into the .pkl file", "\n", "agent_Base_Loci_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Agent_Base_Loci.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "agent_Base_Loci", ",", "agent_Base_Loci_Output", ")", "\n", "\n", "# Write the information of the global agent state into the .pkl file", "\n", "agent_States_Output", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Agent_States.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "global_Agent_State", ",", "agent_States_Output", ")", "\n", "\n", "last_store_time", "=", "pygame", ".", "time", ".", "get_ticks", "(", ")", "\n", "\n", "", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "# All the data files will be saved every 200ms (Frequency = 5 Hz)", "\n", "                ", "if", "(", "pygame", ".", "time", ".", "get_ticks", "(", ")", "-", "last_store_time", ")", ">=", "200", ":", "\n", "# Write the information of the targets into the .pkl file", "\n", "                    ", "target_Loci_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Target_Loci.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "target_Loci", ",", "target_Loci_Output", ")", "\n", "\n", "# Write the information of the fire states into the .pkl file", "\n", "fire_States_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Fire_States.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "fire_States_List", ",", "fire_States_Output", ")", "\n", "\n", "# Write the current fire spot map into the .pkl file", "\n", "fire_Map_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Fire_Map.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "fire_Current_Map", ",", "fire_Map_Output", ")", "\n", "\n", "# Write the lake info into the .pkl file", "\n", "lake_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Lake_info.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "lake_Loci", ",", "lake_Output", ")", "\n", "\n", "# Write the center of mass information into the .pkl file", "\n", "CoM_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Sensing_Data_CoM.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "CoM_Info_List", ",", "CoM_Output", ")", "\n", "\n", "# Write the current sensed fire spot info into the .pkl file", "\n", "sensed_Fire_Map_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Sensed_Fire_Map.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "sensed_Fire_Spot_List", ",", "sensed_Fire_Map_Output", ")", "\n", "\n", "# Write the list of the fire fronts that locates inside the targets info into the .pkl file", "\n", "target_onFire_List_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/target_onFire_List.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "target_onFire_list", ",", "target_onFire_List_Output", ")", "\n", "\n", "# Write the current pruned fire spot info into the .pkl file", "\n", "pruned_Fire_Map_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Pruned_Fire_Map.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "pruned_Fire_Spot_List", ",", "pruned_Fire_Map_Output", ")", "\n", "\n", "# Write the information of the agent base into the .pkl file", "\n", "agent_Base_Loci_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Agent_Base_Loci.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "agent_Base_Loci", ",", "agent_Base_Loci_Output", ")", "\n", "\n", "# Write the information of the global agent state into the .pkl file", "\n", "agent_States_Output", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Agent_States.pkl'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "global_Agent_State", ",", "agent_States_Output", ")", "\n", "\n", "last_store_time", "=", "pygame", ".", "time", ".", "get_ticks", "(", ")", "\n", "\n", "", "", "if", "(", "current_Time", "//", "1000", ")", ">=", "self", ".", "environment_para", "[", "1", "]", ":", "\n", "                ", "self", ".", "close_flag", "=", "1", "\n", "\n", "# Update the display according to the latest change", "\n", "", "if", "self", ".", "close_flag", "==", "0", ":", "\n", "                ", "pygame", ".", "display", ".", "update", "(", ")", "\n", "", "else", ":", "\n", "                ", "pygame", ".", "quit", "(", ")", "\n", "global", "simulated_flag", "\n", "simulated_flag", "=", "1", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.__init__": [[6542, 6548], ["QWidget.__init__", "FireCommander.game_over.init_ui"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui"], ["    ", "def", "__init__", "(", "self", ",", "scenario_idx", ")", ":", "\n", "        ", "super", "(", "game_over", ",", "self", ")", ".", "__init__", "(", ")", "\n", "global", "score_list", "\n", "self", ".", "score_list", "=", "score_list", "\n", "self", ".", "scenario_idx", "=", "scenario_idx", "\n", "self", ".", "init_ui", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.init_ui": [[6549, 6668], ["FireCommander.game_over.resize", "QPalette", "QPalette.setBrush", "FireCommander.game_over.setPalette", "FireCommander.game_over.setWindowTitle", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont.setPointSize", "QFont", "QFont", "QLabel", "FireCommander.game_over.General_Judge.setGeometry", "FireCommander.game_over.General_Judge.setFont", "FireCommander.game_over.General_Judge.setObjectName", "FireCommander.game_over.General_Judge.setText", "QPalette", "QLabel", "FireCommander.game_over.General_Judge_Text.setGeometry", "FireCommander.game_over.General_Judge_Text.setFont", "FireCommander.game_over.General_Judge_Text.setObjectName", "FireCommander.parameter_Display_Msg_Extended", "FireCommander.parameter_Display_Msg_Extended", "FireCommander.parameter_Display_Msg_Extended", "FireCommander.parameter_Display_Msg_Extended", "QLabel", "FireCommander.game_over.General_Judge.setGeometry", "FireCommander.game_over.General_Judge.setFont", "FireCommander.game_over.General_Judge.setObjectName", "FireCommander.game_over.General_Judge.setText", "round", "FireCommander.game_over.General_Judge_Text.setPalette", "QPushButton", "FireCommander.game_over.menu.setGeometry", "FireCommander.game_over.menu.setFont", "FireCommander.game_over.menu.setText", "FireCommander.game_over.menu.setStyleSheet", "FireCommander.game_over.menu.clicked.connect", "QPushButton", "FireCommander.game_over.scenario_mode.setGeometry", "FireCommander.game_over.scenario_mode.setFont", "FireCommander.game_over.scenario_mode.setText", "FireCommander.game_over.scenario_mode.setStyleSheet", "FireCommander.game_over.scenario_mode.clicked.connect", "QPushButton", "FireCommander.game_over.save.setGeometry", "FireCommander.game_over.save.setFont", "FireCommander.game_over.save.setText", "FireCommander.game_over.save.setStyleSheet", "FireCommander.game_over.save.clicked.connect", "QPushButton", "FireCommander.game_over.exit.setGeometry", "FireCommander.game_over.exit.setFont", "FireCommander.game_over.exit.setText", "FireCommander.game_over.exit.setStyleSheet", "FireCommander.game_over.exit.clicked.connect", "QBrush", "FireCommander.parameter_Display_Msg_Extended", "FireCommander.parameter_Display_Msg_Extended", "QColor", "QColor", "QColor", "FireCommander.parameter_Display_Msg_Extended", "FireCommander.parameter_Display_Msg_Extended", "FireCommander.game_over.General_Judge_Text.setText", "QPalette.setColor", "QPixmap", "QColor", "str", "str", "str", "str", "str", "QColor", "str", "QColor", "FireCommander.game_over.General_Judge_Text.setText", "QPalette.setColor", "str", "str", "QColor", "FireCommander.game_over.General_Judge_Text.setText", "QPalette.setColor", "QColor", "FireCommander.game_over.General_Judge_Text.setText", "QPalette.setColor", "FireCommander.game_over.General_Judge_Text.setText", "QPalette.setColor", "QColor", "QColor"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Msg_Extended", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Msg_Extended", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Msg_Extended", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Msg_Extended", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Msg_Extended", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Msg_Extended", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Msg_Extended", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Msg_Extended"], ["", "def", "init_ui", "(", "self", ")", ":", "\n", "        ", "self", ".", "resize", "(", "1600", ",", "1000", ")", "\n", "background_Img", "=", "QPalette", "(", ")", "\n", "background_Img", ".", "setBrush", "(", "QPalette", ".", "Background", ",", "QBrush", "(", "QPixmap", "(", "\"./Dependencies/Images/background.png\"", ")", ")", ")", "\n", "self", ".", "setPalette", "(", "background_Img", ")", "\n", "self", ".", "setWindowTitle", "(", "'Game Over'", ")", "\n", "\n", "self", ".", "right_upper_x", "=", "400", "\n", "self", ".", "right_upper_y", "=", "140", "\n", "\n", "self", ".", "left_y_interval", "=", "40", "\n", "self", ".", "text_display_len", "=", "600", "\n", "self", ".", "text_height", "=", "40", "\n", "\n", "font", "=", "QFont", "(", "'arial'", ")", "\n", "font", ".", "setPointSize", "(", "22", ")", "\n", "\n", "font_button", "=", "QFont", "(", "'arial'", ")", "\n", "font_button", ".", "setPointSize", "(", "24", ")", "\n", "\n", "font_button2", "=", "QFont", "(", "'arial'", ")", "\n", "font_button2", ".", "setPointSize", "(", "20", ")", "\n", "\n", "font_Title", "=", "QFont", "(", "'arial'", ",", "24", ",", "75", ")", "\n", "font_Bold", "=", "QFont", "(", "'arial'", ",", "22", ",", "75", ")", "\n", "\n", "self", ".", "General_Judge", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "General_Judge", ".", "setGeometry", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "General_Judge", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "General_Judge", ".", "setObjectName", "(", "\"General_Judge\"", ")", "\n", "self", ".", "General_Judge", ".", "setText", "(", "\"General Evaluation:\"", ")", "\n", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "\n", "self", ".", "General_Judge_Text", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "General_Judge_Text", ".", "setGeometry", "(", "self", ".", "right_upper_x", "+", "self", ".", "text_display_len", "+", "20", ",", "self", ".", "right_upper_y", ",", "self", ".", "text_display_len", ",", "self", ".", "text_height", ")", "\n", "self", ".", "General_Judge_Text", ".", "setFont", "(", "font_Title", ")", "\n", "self", ".", "General_Judge_Text", ".", "setObjectName", "(", "\"General_Judge_Text\"", ")", "\n", "\n", "if", "self", ".", "score_list", "[", "0", "]", ">=", "0", ":", "\n", "            ", "parameter_Display_Msg_Extended", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "2.5", "*", "self", ".", "text_height", ")", ",", "\n", "(", "'Overall Firefighting Performance Score: '", ",", "'overall_score'", ")", ",", "(", "str", "(", "self", ".", "score_list", "[", "0", "]", ")", "+", "' / 100'", ")", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "", "else", ":", "\n", "            ", "parameter_Display_Msg_Extended", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "2.5", "*", "self", ".", "text_height", ")", ",", "\n", "(", "'Overall Firefighting Performance Score: '", ",", "'overall_score'", ")", ",", "(", "str", "(", "self", ".", "score_list", "[", "0", "]", ")", "+", "' / 100'", ")", ",", "Qt", ".", "red", ")", "\n", "\n", "", "parameter_Display_Msg_Extended", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "3.5", "*", "self", ".", "text_height", ")", ",", "\n", "(", "'Perception Score: '", ",", "'perception_score'", ")", ",", "(", "str", "(", "self", ".", "score_list", "[", "1", "]", ")", "+", "' / 100'", ")", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "\n", "parameter_Display_Msg_Extended", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "4.5", "*", "self", ".", "text_height", ")", ",", "\n", "(", "'Action Score: '", ",", "'action_score'", ")", ",", "(", "str", "(", "self", ".", "score_list", "[", "2", "]", ")", "+", "' / 100'", ")", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "\n", "parameter_Display_Msg_Extended", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "5.5", "*", "self", ".", "text_height", ")", ",", "\n", "(", "'Facility Protection Score: '", ",", "'facilities_protection_score'", ")", ",", "(", "str", "(", "self", ".", "score_list", "[", "4", "]", ")", "+", "' / 100'", ")", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "\n", "parameter_Display_Msg_Extended", "(", "self", ",", "font", ",", "font_Bold", ",", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "6.5", "*", "self", ".", "text_height", ")", ",", "\n", "(", "'Total Negative Reward Received: '", ",", "'total_neg_reward'", ")", ",", "(", "str", "(", "-", "self", ".", "score_list", "[", "6", "]", ")", "+", "' / 100'", ")", ",", "Qt", ".", "red", ")", "\n", "\n", "self", ".", "General_Judge", "=", "QLabel", "(", "self", ")", "\n", "self", ".", "General_Judge", ".", "setGeometry", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "7.5", "*", "self", ".", "text_height", ",", "700", ",", "self", ".", "text_height", ")", "\n", "self", ".", "General_Judge", ".", "setFont", "(", "font", ")", "\n", "self", ".", "General_Judge", ".", "setObjectName", "(", "\"General_Judge\"", ")", "\n", "self", ".", "General_Judge", ".", "setText", "(", "\"---------------------------------------------------------------------------------------------------------------\"", ")", "\n", "\n", "final_score", "=", "round", "(", "self", ".", "score_list", "[", "0", "]", "+", "self", ".", "score_list", "[", "1", "]", "+", "self", ".", "score_list", "[", "2", "]", "+", "self", ".", "score_list", "[", "4", "]", "-", "3", "*", "self", ".", "score_list", "[", "6", "]", ",", "2", ")", "\n", "if", "final_score", ">=", "0", ":", "\n", "            ", "parameter_Display_Msg_Extended", "(", "self", ",", "font", ",", "font_Bold", ",", "\n", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "8.5", "*", "self", ".", "text_height", ")", ",", "\n", "(", "'Your Game Score is: '", ",", "'game_score'", ")", ",", "str", "(", "final_score", ")", ",", "QColor", "(", "60", ",", "179", ",", "113", ")", ")", "\n", "", "else", ":", "\n", "            ", "parameter_Display_Msg_Extended", "(", "self", ",", "font", ",", "font_Bold", ",", "\n", "(", "self", ".", "right_upper_x", ",", "self", ".", "right_upper_y", "+", "8.5", "*", "self", ".", "text_height", ")", ",", "\n", "(", "'Your Game Score is: '", ",", "'game_score'", ")", ",", "str", "(", "final_score", ")", ",", "Qt", ".", "red", ")", "\n", "\n", "", "if", "final_score", ">", "90", ":", "\n", "            ", "self", ".", "General_Judge_Text", ".", "setText", "(", "\"Excellent\"", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "22", ",", "163", ",", "26", ")", ")", "\n", "", "elif", "final_score", ">", "70", ":", "\n", "            ", "self", ".", "General_Judge_Text", ".", "setText", "(", "\"Well Done\"", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "146", ",", "208", ",", "80", ")", ")", "\n", "", "elif", "final_score", ">", "60", ":", "\n", "            ", "self", ".", "General_Judge_Text", ".", "setText", "(", "\"Almost There\"", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "83", ",", "155", ",", "212", ")", ")", "\n", "", "elif", "final_score", ">", "50", ":", "\n", "            ", "self", ".", "General_Judge_Text", ".", "setText", "(", "\"Fair\"", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "255", ",", "80", ",", "80", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "General_Judge_Text", ".", "setText", "(", "\"Failed\"", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "QColor", "(", "192", ",", "0", ",", "0", ")", ")", "\n", "\n", "", "self", ".", "General_Judge_Text", ".", "setPalette", "(", "font_pe", ")", "\n", "\n", "self", ".", "menu", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "menu", ".", "setGeometry", "(", "125", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "menu", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "menu", ".", "setText", "(", "'Menu'", ")", "\n", "self", ".", "menu", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/white_300_75.png)}\"", ")", "\n", "self", ".", "menu", ".", "clicked", ".", "connect", "(", "self", ".", "back_function", ")", "\n", "\n", "self", ".", "scenario_mode", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "scenario_mode", ".", "setGeometry", "(", "475", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "scenario_mode", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "scenario_mode", ".", "setText", "(", "'Scenario Mode'", ")", "\n", "self", ".", "scenario_mode", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "scenario_mode", ".", "clicked", ".", "connect", "(", "self", ".", "scenario_mode_function", ")", "\n", "\n", "self", ".", "save", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "save", ".", "setGeometry", "(", "825", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "save", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "save", ".", "setText", "(", "'Save Playback'", ")", "\n", "self", ".", "save", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/yellow_300_75.png)}\"", ")", "\n", "self", ".", "save", ".", "clicked", ".", "connect", "(", "self", ".", "skip_function", ")", "\n", "\n", "self", ".", "exit", "=", "QPushButton", "(", "self", ")", "\n", "self", ".", "exit", ".", "setGeometry", "(", "1175", ",", "770", ",", "300", ",", "75", ")", "\n", "self", ".", "exit", ".", "setFont", "(", "font_button2", ")", "\n", "self", ".", "exit", ".", "setText", "(", "'Exit'", ")", "\n", "self", ".", "exit", ".", "setStyleSheet", "(", "\"QPushButton{border-image: url(./Dependencies/Images/orange_300_75.png)}\"", ")", "\n", "self", ".", "exit", ".", "clicked", ".", "connect", "(", "self", ".", "exit_function", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.paintEvent": [[6669, 6680], ["QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter", "QPainter.setPen", "QPainter.setBrush", "QPainter.drawRect", "QPainter.drawRect", "QPen", "QBrush", "QPen", "QBrush", "QColor", "QColor"], "methods", ["None"], ["", "def", "paintEvent", "(", "self", ",", "e", ")", ":", "\n", "        ", "painter2", "=", "QPainter", "(", "self", ")", "\n", "painter2", ".", "setPen", "(", "QPen", "(", "Qt", ".", "black", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter2", ".", "setBrush", "(", "QBrush", "(", "QColor", "(", "197", ",", "225", ",", "165", ")", ")", ")", "\n", "painter2", ".", "drawRect", "(", "110", ",", "90", ",", "1400", ",", "800", ")", "\n", "\n", "painter3", "=", "QPainter", "(", "self", ")", "\n", "painter3", ".", "setPen", "(", "QPen", "(", "QColor", "(", "47", ",", "82", ",", "143", ")", ",", "2", ",", "Qt", ".", "SolidLine", ")", ")", "\n", "painter3", ".", "setBrush", "(", "QBrush", "(", "Qt", ".", "white", ")", ")", "\n", "painter3", ".", "drawRect", "(", "140", ",", "110", ",", "1340", ",", "100", ")", "\n", "painter3", ".", "drawRect", "(", "140", ",", "220", ",", "1340", ",", "530", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.back_function": [[6681, 6685], ["FireCommander.game_over.hide", "FireCommander.welcome", "FireCommander.game_over.screen.show"], "methods", ["None"], ["", "def", "back_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "welcome", "(", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.scenario_mode_function": [[6686, 6690], ["FireCommander.game_over.hide", "FireCommander.scenario_mode", "FireCommander.game_over.screen.show"], "methods", ["None"], ["", "def", "scenario_mode_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "scenario_mode", "(", ")", "\n", "self", ".", "screen", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.skip_function": [[6691, 6695], ["FireCommander.game_over.hide", "FireCommander.Animation_Reconstruction", "sys.exit"], "methods", ["None"], ["", "def", "skip_function", "(", "self", ")", ":", "\n", "        ", "self", ".", "hide", "(", ")", "\n", "self", ".", "screen", "=", "Animation_Reconstruction", "(", "self", ".", "scenario_idx", ")", "\n", "sys", ".", "exit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.game_over.exit_function": [[6696, 6705], ["sys.exit", "shutil.rmtree", "os.makedirs", "shutil.rmtree", "os.makedirs", "str", "str"], "methods", ["None"], ["", "def", "exit_function", "(", "self", ")", ":", "\n", "        ", "global", "username", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images'", ")", "\n", "os", ".", "makedirs", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images'", ")", "\n", "os", ".", "makedirs", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images'", ")", "\n", "", "sys", ".", "exit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.Animation_Reconstruction.__init__": [[6711, 6715], ["super().__init__", "FireCommander.Animation_Reconstruction.animation"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.Animation_Reconstruction.animation"], ["    ", "def", "__init__", "(", "self", ",", "scenario_idx", ")", ":", "\n", "        ", "super", "(", "Animation_Reconstruction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scenario_idx", "=", "scenario_idx", "\n", "self", ".", "animation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.Animation_Reconstruction.animation": [[6716, 6936], ["pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "pygame.init", "pygame.font.SysFont", "pygame.font.SysFont", "pygame.font.SysFont", "pygame.display.set_mode", "pygame.display.set_caption", "range", "pygame.quit", "open", "open", "open", "open", "open", "open", "open", "open", "len", "pygame.display.set_mode.fill", "Animation_Util.road_plot", "range", "range", "Animation_Util.onFire_List_Recovery", "Animation_Util.pruned_List_Recovery", "Animation_Util.lake_plot", "range", "Animation_Util.sensed_Fire_Spot_Plot", "range", "range", "pygame.display.update", "pygame.time.wait", "Dependencies.Utilities.Utilities.generate_animation", "shutil.rmtree", "os.makedirs", "open", "open", "open", "open", "open", "open", "open", "open", "len", "Animation_Util.target_Plot", "len", "Animation_Util.agent_Base_Plot", "len", "len", "len", "pygame.display.set_mode.blit", "pygame.image.save", "Dependencies.Utilities.Utilities.generate_animation", "shutil.rmtree", "os.makedirs", "len", "range", "pygame.draw.circle", "pygame.draw.circle", "pygame.draw.rect", "text.append", "pygame.image.save", "len", "sensed_list.append", "Rect", "pygame.font.SysFont.render", "pygame.draw.polygon", "text.append", "numpy.tan", "numpy.tan", "int", "int", "pygame.font.SysFont.render", "pygame.draw.polygon", "pygame.draw.rect", "text.append", "str", "str", "Rect", "pygame.font.SysFont.render", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "numpy.tan", "numpy.tan", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.road_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.onFire_List_Recovery", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.pruned_List_Recovery", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.lake_plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.sensed_Fire_Spot_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.generate_animation", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.target_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.agent_Base_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.generate_animation"], ["", "def", "animation", "(", "self", ")", ":", "\n", "        ", "global", "username", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Background_Info.pkl'", ",", "'rb'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Background_Info.pkl'", ",", "'rb'", ")", "\n", "\n", "", "[", "environment_para", ",", "robo_team_para", ",", "set_loci", ",", "adv_setting", ",", "agent_Radius", ",", "agent_FOV", ",", "state_List_Size", "]", "=", "pickle", ".", "load", "(", "file_IO", ")", "\n", "world_Size", "=", "environment_para", "[", "0", "]", "\n", "fireSpots_Num", "=", "environment_para", "[", "2", "]", "\n", "num_ign_points", "=", "set_loci", "[", "1", "]", "[", "0", "]", "\n", "\n", "# Load the target info'", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Target_Loci.pkl'", ",", "'rb'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Target_Loci.pkl'", ",", "'rb'", ")", "\n", "", "target_Loci", "=", "pickle", ".", "load", "(", "file_IO", ")", "\n", "\n", "# Load the agent base info", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Agent_Base_Loci.pkl'", ",", "'rb'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Agent_Base_Loci.pkl'", ",", "'rb'", ")", "\n", "", "agent_Base_Loci", "=", "pickle", ".", "load", "(", "file_IO", ")", "\n", "\n", "# Load the agent state info", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Agent_States.pkl'", ",", "'rb'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Agent_States.pkl'", ",", "'rb'", ")", "\n", "", "global_Agent_State_List", "=", "pickle", ".", "load", "(", "file_IO", ")", "\n", "\n", "# Load the fire state info", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Fire_States.pkl'", ",", "'rb'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Fire_States.pkl'", ",", "'rb'", ")", "\n", "", "fire_States_List", "=", "pickle", ".", "load", "(", "file_IO", ")", "\n", "\n", "# Load the sensed fire info", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Sensed_Fire_Map.pkl'", ",", "'rb'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Sensed_Fire_Map.pkl'", ",", "'rb'", ")", "\n", "", "sensed_Fire_List", "=", "pickle", ".", "load", "(", "file_IO", ")", "\n", "\n", "# Load the pruned fire info", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Pruned_Fire_Map.pkl'", ",", "'rb'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Pruned_Fire_Map.pkl'", ",", "'rb'", ")", "\n", "", "pruned_Fire_List", "=", "pickle", ".", "load", "(", "file_IO", ")", "\n", "\n", "# Load the lake fire info", "\n", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Lake_info.pkl'", ",", "'rb'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "file_IO", "=", "open", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Lake_info.pkl'", ",", "'rb'", ")", "\n", "", "lake_list", "=", "pickle", ".", "load", "(", "file_IO", ")", "\n", "current_Max_Intensity", "=", "155", "\n", "\n", "# Initialize the pygame environment", "\n", "pygame", ".", "init", "(", ")", "\n", "\n", "# Set the current font for the text (Agent / Goal)", "\n", "font_Agent", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "30", ")", "\n", "# Set the current font for the side bar", "\n", "font_Side", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "20", ")", "\n", "# Set the current font for the hospital word", "\n", "hospital_Font", "=", "pygame", ".", "font", ".", "SysFont", "(", "'arial'", ",", "40", ")", "\n", "\n", "onFire_List", "=", "[", "]", "\n", "pruned_List", "=", "[", "]", "\n", "\n", "# Initialize the simulation timeline", "\n", "clock", "=", "len", "(", "agent_Base_Loci", "[", "0", "]", ")", "-", "1", "\n", "\n", "# Create a screen (Width * Height) = (1024 * 1024)", "\n", "screen", "=", "pygame", ".", "display", ".", "set_mode", "(", "(", "world_Size", ",", "world_Size", ")", ",", "0", ",", "32", ")", "\n", "current_Max_Intensity", "=", "155", "\n", "# Set the title of the window", "\n", "pygame", ".", "display", ".", "set_caption", "(", "\"Recreated HeteroFireBot Environment\"", ")", "\n", "\n", "sensed_list", "=", "[", "]", "\n", "\n", "# ************************ Main loop for display ******************************", "\n", "for", "time", "in", "range", "(", "clock", ")", ":", "\n", "# Fill the screen with green", "\n", "            ", "screen", ".", "fill", "(", "(", "197", ",", "225", ",", "165", ")", ")", "\n", "\n", "Animation_Util", ".", "road_plot", "(", "screen", ",", "target_Loci", ")", "\n", "\n", "# Plot all the targets", "\n", "for", "i", "in", "range", "(", "len", "(", "target_Loci", ")", ")", ":", "\n", "                ", "Animation_Util", ".", "target_Plot", "(", "screen", ",", "hospital_Font", ",", "target_Loci", "[", "i", "]", "[", "time", "]", ")", "\n", "\n", "# Plot all the agent base", "\n", "", "for", "i", "in", "range", "(", "len", "(", "agent_Base_Loci", ")", ")", ":", "\n", "                ", "Animation_Util", ".", "agent_Base_Plot", "(", "screen", ",", "agent_Base_Loci", "[", "i", "]", "[", "time", "]", ")", "\n", "\n", "", "text", "=", "[", "]", "\n", "\n", "new_fire_front", ",", "onFire_List", "=", "Animation_Util", ".", "onFire_List_Recovery", "(", "num_ign_points", ",", "fire_States_List", ",", "\n", "world_Size", ",", "\n", "fireSpots_Num", ",", "onFire_List", ",", "time", ",", "\n", "set_loci", "[", "1", "]", "[", "7", "]", ",", "set_loci", "[", "1", "]", "[", "1", "]", ")", "\n", "\n", "pruned_List", "=", "Animation_Util", ".", "pruned_List_Recovery", "(", "pruned_Fire_List", ",", "pruned_List", ",", "time", ")", "\n", "Animation_Util", ".", "lake_plot", "(", "screen", ",", "lake_list", ",", "time", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "sensed_Fire_List", ")", ")", ":", "\n", "                ", "if", "len", "(", "sensed_Fire_List", "[", "i", "]", "[", "time", "]", ")", ">", "0", ":", "\n", "                    ", "for", "j", "in", "range", "(", "len", "(", "sensed_Fire_List", "[", "i", "]", "[", "time", "]", ")", ")", ":", "\n", "                        ", "sensed_list", ".", "append", "(", "sensed_Fire_List", "[", "i", "]", "[", "time", "]", "[", "j", "]", ")", "\n", "", "", "", "current_Max_Intensity", "=", "Animation_Util", ".", "sensed_Fire_Spot_Plot", "(", "screen", ",", "sensed_list", ",", "time", ",", "\n", "current_Max_Intensity", ")", "\n", "\n", "# Plot the pruned fire dots", "\n", "for", "i", "in", "range", "(", "len", "(", "pruned_List", ")", ")", ":", "\n", "# Ensure that all the fire spots to be displayed must be within the window scope", "\n", "                ", "if", "(", "(", "pruned_List", "[", "i", "]", "[", "0", "]", "<=", "world_Size", ")", "and", "(", "pruned_List", "[", "i", "]", "[", "1", "]", "<=", "world_Size", ")", "\n", "and", "(", "pruned_List", "[", "i", "]", "[", "0", "]", ">=", "0", ")", "and", "(", "pruned_List", "[", "i", "]", "[", "1", "]", ">=", "0", ")", ")", ":", "\n", "                    ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "(", "pruned_List", "[", "i", "]", "[", "0", "]", ",", "pruned_List", "[", "i", "]", "[", "1", "]", ")", ",", "1", ")", "\n", "\n", "# Go over all the elements in the current_Agent_State_List", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "global_Agent_State_List", ")", ")", ":", "\n", "                ", "current_Agent_State_List", "=", "global_Agent_State_List", "[", "i", "]", "[", "\n", "time", "*", "state_List_Size", ":", "(", "time", "+", "1", ")", "*", "state_List_Size", "]", "\n", "# Plot all the searching agents", "\n", "if", "current_Agent_State_List", "[", "8", "]", "==", "0", ":", "\n", "# Calculate the size of the searching scope", "\n", "                    ", "searching_Scope_X", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "0", "]", ")", "*", "current_Agent_State_List", "[", "2", "]", "\n", "searching_Scope_Y", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "1", "]", ")", "*", "current_Agent_State_List", "[", "2", "]", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "searching_Scope_Upper_Left_Corner", "=", "(", "current_Agent_State_List", "[", "0", "]", "-", "searching_Scope_X", "/", "2", ",", "\n", "current_Agent_State_List", "[", "1", "]", "-", "searching_Scope_Y", "/", "2", ")", "\n", "# The size of the agent searching scope", "\n", "searching_Scope_Size", "=", "(", "searching_Scope_X", ",", "searching_Scope_Y", ")", "\n", "\n", "# Plot the searching agent (Circle) and its corresponding searching scope (Rectangle)", "\n", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "0", ",", "255", ")", ",", "\n", "(", "int", "(", "current_Agent_State_List", "[", "0", "]", ")", ",", "int", "(", "current_Agent_State_List", "[", "1", "]", ")", ")", ",", "\n", "agent_Radius", ")", "\n", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "0", ",", "255", ")", ",", "Rect", "(", "searching_Scope_Upper_Left_Corner", ",", "searching_Scope_Size", ")", ",", "\n", "2", ")", "\n", "\n", "# Append it into the text display buffer", "\n", "text", ".", "append", "(", "font_Agent", ".", "render", "(", "'P'", "+", "str", "(", "current_Agent_State_List", "[", "9", "]", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "\n", "\n", "# Plot all the firefighter agents", "\n", "", "elif", "current_Agent_State_List", "[", "8", "]", "==", "1", ":", "\n", "# The vertex set for the firefighter agent", "\n", "                    ", "firefighter_Agent_Vertex", "=", "[", "\n", "(", "current_Agent_State_List", "[", "0", "]", "-", "agent_Radius", ",", "current_Agent_State_List", "[", "1", "]", ")", ",", "\n", "(", "current_Agent_State_List", "[", "0", "]", ",", "current_Agent_State_List", "[", "1", "]", "+", "agent_Radius", ")", ",", "\n", "(", "current_Agent_State_List", "[", "0", "]", "+", "agent_Radius", ",", "current_Agent_State_List", "[", "1", "]", ")", ",", "\n", "(", "current_Agent_State_List", "[", "0", "]", ",", "current_Agent_State_List", "[", "1", "]", "-", "agent_Radius", ")", "]", "\n", "# Plot the firefighter agent (Diamond)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "128", ",", "0", ",", "128", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "\n", "# Append it into the text display buffer", "\n", "text", ".", "append", "(", "font_Agent", ".", "render", "(", "'A'", "+", "str", "(", "current_Agent_State_List", "[", "9", "]", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "\n", "# Plot all the hybrid agents", "\n", "", "elif", "current_Agent_State_List", "[", "8", "]", "==", "2", ":", "\n", "# Calculate the size of the searching scope", "\n", "                    ", "searching_Scope_X", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "0", "]", ")", "*", "current_Agent_State_List", "[", "2", "]", "\n", "searching_Scope_Y", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "1", "]", ")", "*", "current_Agent_State_List", "[", "2", "]", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "searching_Scope_Upper_Left_Corner", "=", "(", "current_Agent_State_List", "[", "0", "]", "-", "searching_Scope_X", "/", "2", ",", "\n", "current_Agent_State_List", "[", "1", "]", "-", "searching_Scope_Y", "/", "2", ")", "\n", "# The size of the agent searching scope", "\n", "searching_Scope_Size", "=", "(", "searching_Scope_X", ",", "searching_Scope_Y", ")", "\n", "\n", "# The vertex set for the hybrid agent", "\n", "firefighter_Agent_Vertex", "=", "[", "\n", "(", "current_Agent_State_List", "[", "0", "]", "-", "agent_Radius", ",", "current_Agent_State_List", "[", "1", "]", ")", ",", "\n", "(", "current_Agent_State_List", "[", "0", "]", ",", "current_Agent_State_List", "[", "1", "]", "+", "agent_Radius", ")", ",", "\n", "(", "current_Agent_State_List", "[", "0", "]", "+", "agent_Radius", ",", "current_Agent_State_List", "[", "1", "]", ")", ",", "\n", "(", "current_Agent_State_List", "[", "0", "]", ",", "current_Agent_State_List", "[", "1", "]", "-", "agent_Radius", ")", "]", "\n", "# Plot the hybrid agent (Diamond) and its corresponding searching scope (Rectangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "0", ",", "128", ",", "128", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "\n", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "128", ",", "128", ")", ",", "\n", "Rect", "(", "searching_Scope_Upper_Left_Corner", ",", "searching_Scope_Size", ")", ",", "2", ")", "\n", "\n", "# Append it into the text display buffer", "\n", "text", ".", "append", "(", "font_Agent", ".", "render", "(", "'H'", "+", "str", "(", "current_Agent_State_List", "[", "9", "]", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "\n", "# Display the name of each agent", "\n", "", "screen", ".", "blit", "(", "text", "[", "i", "]", ",", "(", "current_Agent_State_List", "[", "0", "]", ",", "current_Agent_State_List", "[", "1", "]", ")", ")", "\n", "\n", "# Write the current screen shot to the directory", "\n", "", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "                ", "pygame", ".", "image", ".", "save", "(", "screen", ",", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images/'", "+", "str", "(", "time", ")", "+", "\".png\"", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "                ", "pygame", ".", "image", ".", "save", "(", "screen", ",", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images/'", "+", "str", "(", "time", ")", "+", "\".png\"", ")", "\n", "\n", "# Update the display according to the latest change", "\n", "", "pygame", ".", "display", ".", "update", "(", ")", "\n", "pygame", ".", "time", ".", "wait", "(", "10", ")", "\n", "\n", "# Generate the video to record the simulation", "\n", "", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "Util", ".", "generate_animation", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images'", ",", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Open_World'", "+", "'_'", "+", "username", "+", "'_Animation.avi'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "Util", ".", "generate_animation", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images'", ",", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "'_'", "+", "username", "+", "'_Animation.avi'", ")", "\n", "\n", "", "if", "self", ".", "scenario_idx", "==", "0", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images'", ")", "\n", "os", ".", "makedirs", "(", "'Dependencies/Open_World_Data/'", "+", "username", "+", "'/Raw_Images'", ")", "\n", "", "elif", "self", ".", "scenario_idx", ">", "0", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images'", ")", "\n", "os", ".", "makedirs", "(", "'Dependencies/Scenario_Data/Scenario#'", "+", "str", "(", "self", ".", "scenario_idx", ")", "+", "\"/\"", "+", "username", "+", "'/Raw_Images'", ")", "\n", "\n", "", "pygame", ".", "quit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Input_Ctl": [[70, 92], ["QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "QLineEdit", "QLineEdit.setGeometry", "QLineEdit.setFont", "QLineEdit.setObjectName", "setattr", "str"], "function", ["None"], ["def", "parameter_Input_Ctl", "(", "widget", ",", "font", ",", "left_Upper_Pos", ",", "ctl_Text", ",", "index", ")", ":", "\n", "    ", "(", "left_upper_x", ",", "left_upper_y", ")", "=", "left_Upper_Pos", "\n", "(", "text_Title", ",", "edit_Title", ")", "=", "ctl_Text", "\n", "\n", "text_index", "=", "QLabel", "(", "widget", ")", "\n", "text_index", ".", "setGeometry", "(", "left_upper_x", ",", "left_upper_y", ",", "20", ",", "30", ")", "\n", "text_index", ".", "setFont", "(", "font", ")", "\n", "text_index", ".", "setObjectName", "(", "edit_Title", "+", "'Index'", ")", "\n", "text_index", ".", "setText", "(", "str", "(", "index", ")", "+", "'. '", ")", "\n", "\n", "text_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_Display", ".", "setGeometry", "(", "left_upper_x", "+", "20", ",", "left_upper_y", ",", "300", ",", "30", ")", "\n", "text_Display", ".", "setFont", "(", "font", ")", "\n", "text_Display", ".", "setObjectName", "(", "edit_Title", ")", "\n", "text_Display", ".", "setText", "(", "text_Title", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", ",", "text_Display", ")", "\n", "\n", "text_Edit", "=", "QLineEdit", "(", "widget", ")", "\n", "text_Edit", ".", "setGeometry", "(", "left_upper_x", "+", "320", ",", "left_upper_y", ",", "80", ",", "30", ")", "\n", "text_Edit", ".", "setFont", "(", "font", ")", "\n", "text_Edit", ".", "setObjectName", "(", "edit_Title", "+", "'Edit'", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Edit'", ",", "text_Edit", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Ctl_Extended": [[94, 111], ["QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr"], "function", ["None"], ["", "def", "parameter_Display_Ctl_Extended", "(", "widget", ",", "font", ",", "font_Bold", ",", "left_Upper_Pos", ",", "ctl_Text", ",", "para_value", ")", ":", "\n", "    ", "(", "left_upper_x", ",", "left_upper_y", ")", "=", "left_Upper_Pos", "\n", "(", "text_Title", ",", "edit_Title", ")", "=", "ctl_Text", "\n", "\n", "text_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_Display", ".", "setGeometry", "(", "left_upper_x", ",", "left_upper_y", ",", "430", ",", "30", ")", "\n", "text_Display", ".", "setFont", "(", "font_Bold", ")", "\n", "text_Display", ".", "setObjectName", "(", "edit_Title", ")", "\n", "text_Display", ".", "setText", "(", "text_Title", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", ",", "text_Display", ")", "\n", "\n", "text_para_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_para_Display", ".", "setGeometry", "(", "left_upper_x", "+", "450", ",", "left_upper_y", ",", "80", ",", "30", ")", "\n", "text_para_Display", ".", "setFont", "(", "font", ")", "\n", "text_para_Display", ".", "setObjectName", "(", "edit_Title", "+", "'Display'", ")", "\n", "text_para_Display", ".", "setText", "(", "para_value", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Display'", ",", "text_para_Display", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Ctl": [[113, 130], ["QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr"], "function", ["None"], ["", "def", "parameter_Display_Ctl", "(", "widget", ",", "font", ",", "font_Bold", ",", "left_Upper_Pos", ",", "ctl_Text", ",", "para_value", ")", ":", "\n", "    ", "(", "left_upper_x", ",", "left_upper_y", ")", "=", "left_Upper_Pos", "\n", "(", "text_Title", ",", "edit_Title", ")", "=", "ctl_Text", "\n", "\n", "text_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_Display", ".", "setGeometry", "(", "left_upper_x", ",", "left_upper_y", ",", "280", ",", "30", ")", "\n", "text_Display", ".", "setFont", "(", "font_Bold", ")", "\n", "text_Display", ".", "setObjectName", "(", "edit_Title", ")", "\n", "text_Display", ".", "setText", "(", "text_Title", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", ",", "text_Display", ")", "\n", "\n", "text_para_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_para_Display", ".", "setGeometry", "(", "left_upper_x", "+", "300", ",", "left_upper_y", ",", "80", ",", "30", ")", "\n", "text_para_Display", ".", "setFont", "(", "font", ")", "\n", "text_para_Display", ".", "setObjectName", "(", "edit_Title", "+", "'Display'", ")", "\n", "text_para_Display", ".", "setText", "(", "para_value", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Display'", ",", "text_para_Display", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl": [[132, 159], ["QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "QLineEdit", "QLineEdit.setGeometry", "QLineEdit.setFont", "QLineEdit.setObjectName", "QLineEdit.setInputMask", "QLineEdit.textChanged.connect", "setattr", "QPalette", "widget.applied_display.setGeometry", "QPalette.setColor", "widget.applied_display.setText", "widget.applied_display.setPalette", "FireCommander.environment_Setting_Ctl.text_Edit_function"], "function", ["None"], ["", "def", "environment_Setting_Ctl", "(", "widget", ",", "font", ",", "left_Upper_Pos", ",", "ctl_Text", ",", "index", ")", ":", "\n", "    ", "(", "left_upper_x", ",", "left_upper_y", ")", "=", "left_Upper_Pos", "\n", "(", "text_Title", ",", "edit_Title", ")", "=", "ctl_Text", "\n", "\n", "text_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_Display", ".", "setGeometry", "(", "left_upper_x", ",", "left_upper_y", ",", "160", ",", "30", ")", "\n", "text_Display", ".", "setFont", "(", "font", ")", "\n", "text_Display", ".", "setObjectName", "(", "edit_Title", ")", "\n", "text_Display", ".", "setText", "(", "text_Title", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", ",", "text_Display", ")", "\n", "\n", "text_Edit", "=", "QLineEdit", "(", "widget", ")", "\n", "text_Edit", ".", "setGeometry", "(", "left_upper_x", "+", "200", ",", "left_upper_y", ",", "180", ",", "30", ")", "\n", "text_Edit", ".", "setFont", "(", "font", ")", "\n", "text_Edit", ".", "setObjectName", "(", "edit_Title", "+", "'Edit'", ")", "\n", "text_Edit", ".", "setInputMask", "(", "'A-99;_'", ")", "\n", "text_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "text_Edit_function", "(", "widget", ",", "text_Edit", ".", "text", "(", ")", ",", "index", ")", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Edit'", ",", "text_Edit", ")", "\n", "\n", "def", "text_Edit_function", "(", "widget", ",", "str", ",", "index", ")", ":", "\n", "        ", "widget", ".", "raw_list", "[", "index", "]", "=", "str", "\n", "widget", ".", "applied_flag", "=", "0", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "widget", ".", "applied_display", ".", "setGeometry", "(", "240", ",", "650", ",", "160", ",", "40", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "Qt", ".", "red", ")", "\n", "widget", ".", "applied_display", ".", "setText", "(", "'Not Applied'", ")", "\n", "widget", ".", "applied_display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_normal": [[161, 183], ["QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "QLineEdit", "QLineEdit.setGeometry", "QLineEdit.setFont", "QLineEdit.setObjectName", "setattr", "str"], "function", ["None"], ["", "", "def", "environment_Setting_Ctl_normal", "(", "widget", ",", "font", ",", "left_Upper_Pos", ",", "ctl_Text", ",", "index", ")", ":", "\n", "    ", "(", "left_upper_x", ",", "left_upper_y", ")", "=", "left_Upper_Pos", "\n", "(", "text_Title", ",", "edit_Title", ")", "=", "ctl_Text", "\n", "\n", "text_index", "=", "QLabel", "(", "widget", ")", "\n", "text_index", ".", "setGeometry", "(", "left_upper_x", ",", "left_upper_y", ",", "30", ",", "30", ")", "\n", "text_index", ".", "setFont", "(", "font", ")", "\n", "text_index", ".", "setObjectName", "(", "edit_Title", "+", "'Index'", ")", "\n", "text_index", ".", "setText", "(", "str", "(", "index", ")", "+", "'. '", ")", "\n", "\n", "text_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_Display", ".", "setGeometry", "(", "left_upper_x", "+", "30", ",", "left_upper_y", ",", "420", ",", "30", ")", "\n", "text_Display", ".", "setFont", "(", "font", ")", "\n", "text_Display", ".", "setObjectName", "(", "edit_Title", ")", "\n", "text_Display", ".", "setText", "(", "text_Title", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", ",", "text_Display", ")", "\n", "\n", "text_Edit", "=", "QLineEdit", "(", "widget", ")", "\n", "text_Edit", ".", "setGeometry", "(", "left_upper_x", "+", "450", ",", "left_upper_y", ",", "860", ",", "30", ")", "\n", "text_Edit", ".", "setFont", "(", "font", ")", "\n", "text_Edit", ".", "setObjectName", "(", "edit_Title", "+", "'Edit'", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Edit'", ",", "text_Edit", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_Float": [[186, 221], ["QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "QLineEdit", "QLineEdit.setGeometry", "QLineEdit.setFont", "QLineEdit.setObjectName", "setattr", "QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "QLineEdit", "QLineEdit.setGeometry", "QLineEdit.setFont", "QLineEdit.setObjectName", "setattr", "str"], "function", ["None"], ["", "def", "environment_Setting_Ctl_Float", "(", "widget", ",", "font", ",", "left_Upper_Pos", ",", "ctl_Text", ",", "index", ")", ":", "\n", "    ", "(", "left_upper_x", ",", "left_upper_y", ")", "=", "left_Upper_Pos", "\n", "(", "text_Title", ",", "edit_Title", ")", "=", "ctl_Text", "\n", "\n", "text_index", "=", "QLabel", "(", "widget", ")", "\n", "text_index", ".", "setGeometry", "(", "left_upper_x", ",", "left_upper_y", ",", "30", ",", "30", ")", "\n", "text_index", ".", "setFont", "(", "font", ")", "\n", "text_index", ".", "setObjectName", "(", "edit_Title", "+", "'Index'", ")", "\n", "text_index", ".", "setText", "(", "str", "(", "index", ")", "+", "'. '", ")", "\n", "\n", "text_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_Display", ".", "setGeometry", "(", "left_upper_x", "+", "30", ",", "left_upper_y", ",", "420", ",", "30", ")", "\n", "text_Display", ".", "setFont", "(", "font", ")", "\n", "text_Display", ".", "setObjectName", "(", "edit_Title", ")", "\n", "text_Display", ".", "setText", "(", "text_Title", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", ",", "text_Display", ")", "\n", "\n", "text_Edit1", "=", "QLineEdit", "(", "widget", ")", "\n", "text_Edit1", ".", "setGeometry", "(", "left_upper_x", "+", "450", ",", "left_upper_y", ",", "40", ",", "30", ")", "\n", "text_Edit1", ".", "setFont", "(", "font", ")", "\n", "text_Edit1", ".", "setObjectName", "(", "edit_Title", "+", "'Edit1'", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Edit1'", ",", "text_Edit1", ")", "\n", "\n", "text_dot", "=", "QLabel", "(", "widget", ")", "\n", "text_dot", ".", "setGeometry", "(", "left_upper_x", "+", "490", ",", "left_upper_y", ",", "20", ",", "30", ")", "\n", "text_dot", ".", "setFont", "(", "font", ")", "\n", "text_dot", ".", "setObjectName", "(", "edit_Title", "+", "'Dot'", ")", "\n", "text_dot", ".", "setText", "(", "'. '", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Dot1'", ",", "text_dot", ")", "\n", "\n", "text_Edit2", "=", "QLineEdit", "(", "widget", ")", "\n", "text_Edit2", ".", "setGeometry", "(", "left_upper_x", "+", "510", ",", "left_upper_y", ",", "800", ",", "30", ")", "\n", "text_Edit2", ".", "setFont", "(", "font", ")", "\n", "text_Edit2", ".", "setObjectName", "(", "edit_Title", "+", "'Edit2'", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Edit2'", ",", "text_Edit2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi": [[223, 239], ["QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "str"], "function", ["None"], ["", "def", "environment_Setting_Ctl_multi", "(", "widget", ",", "font", ",", "left_Upper_Pos", ",", "ctl_Text", ",", "index", ",", "number", ")", ":", "\n", "    ", "(", "left_upper_x", ",", "left_upper_y", ")", "=", "left_Upper_Pos", "\n", "(", "text_Title", ",", "edit_Title", ")", "=", "ctl_Text", "\n", "\n", "text_index", "=", "QLabel", "(", "widget", ")", "\n", "text_index", ".", "setGeometry", "(", "left_upper_x", ",", "left_upper_y", ",", "30", ",", "30", ")", "\n", "text_index", ".", "setFont", "(", "font", ")", "\n", "text_index", ".", "setObjectName", "(", "edit_Title", "+", "'Index'", ")", "\n", "text_index", ".", "setText", "(", "str", "(", "index", ")", "+", "'. '", ")", "\n", "\n", "text_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_Display", ".", "setGeometry", "(", "left_upper_x", "+", "30", ",", "left_upper_y", ",", "400", ",", "30", ")", "\n", "text_Display", ".", "setFont", "(", "font", ")", "\n", "text_Display", ".", "setObjectName", "(", "edit_Title", ")", "\n", "text_Display", ".", "setText", "(", "text_Title", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", ",", "text_Display", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.environment_Setting_Ctl_multi_input": [[241, 258], ["QLineEdit", "QLineEdit.setGeometry", "QLineEdit.setFont", "QLineEdit.setObjectName", "QLineEdit.setValidator", "QLineEdit.textChanged.connect", "setattr", "QIntValidator", "FireCommander.environment_Setting_Ctl.text_Edit_function"], "function", ["None"], ["", "def", "environment_Setting_Ctl_multi_input", "(", "widget", ",", "font", ",", "left_Upper_Pos", ",", "ctl_Text", ",", "index", ",", "i", ")", ":", "\n", "    ", "(", "left_upper_x", ",", "left_upper_y", ")", "=", "left_Upper_Pos", "\n", "(", "text_Title", ",", "edit_Title", ")", "=", "ctl_Text", "\n", "\n", "text_Edit", "=", "QLineEdit", "(", "widget", ")", "\n", "text_Edit", ".", "setGeometry", "(", "left_upper_x", "+", "450", "+", "160", "*", "i", ",", "left_upper_y", ",", "140", ",", "30", ")", "\n", "text_Edit", ".", "setFont", "(", "font", ")", "\n", "text_Edit", ".", "setObjectName", "(", "edit_Title", "+", "'Edit'", ")", "\n", "text_Edit", ".", "setValidator", "(", "QIntValidator", "(", ")", ")", "\n", "text_Edit", ".", "textChanged", ".", "connect", "(", "lambda", ":", "text_Edit_function", "(", "widget", ",", "text_Edit", ".", "text", "(", ")", ",", "index", ",", "i", ")", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Edit'", "+", "str", "(", "i", "+", "1", ")", ",", "text_Edit", ")", "\n", "\n", "def", "text_Edit_function", "(", "widget", ",", "raw_str", ",", "index", ",", "i", ")", ":", "\n", "        ", "if", "len", "(", "raw_str", ")", "==", "0", ":", "\n", "            ", "widget", ".", "raw_list", "[", "index", "-", "1", "]", "[", "i", "]", "=", "0", "\n", "", "else", ":", "\n", "            ", "widget", ".", "raw_list", "[", "index", "-", "1", "]", "[", "i", "]", "=", "int", "(", "str", "(", "raw_str", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.fire_coord_display_multi": [[260, 274], ["QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "round", "str", "round", "str", "str", "str"], "function", ["None"], ["", "", "", "def", "fire_coord_display_multi", "(", "widget", ",", "font", ",", "left_Upper_Pos", ",", "ctl_Text", ",", "i", ",", "coord", ")", ":", "\n", "    ", "(", "left_upper_x", ",", "left_upper_y", ")", "=", "left_Upper_Pos", "\n", "(", "text_Title", ",", "edit_Title", ")", "=", "ctl_Text", "\n", "x_coord_list", "=", "[", "'A'", ",", "'B'", ",", "'C'", ",", "'D'", ",", "'E'", ",", "'F'", ",", "'G'", ",", "'H'", ",", "'I'", ",", "'J'", ",", "'K'", ",", "'L'", ",", "'M'", ",", "'N'", ",", "'O'", "]", "\n", "raw_list", "=", "[", "round", "(", "(", "coord", "[", "0", "]", "+", "50", ")", "//", "100", ")", "-", "1", ",", "round", "(", "(", "coord", "[", "1", "]", "+", "50", ")", "//", "100", ")", "]", "\n", "out_str", "=", "str", "(", "x_coord_list", "[", "raw_list", "[", "0", "]", "]", ")", "+", "'-'", "+", "str", "(", "raw_list", "[", "1", "]", "//", "10", ")", "+", "str", "(", "raw_list", "[", "1", "]", "%", "10", ")", "\n", "\n", "text_Edit", "=", "QLabel", "(", "widget", ")", "\n", "text_Edit", ".", "setGeometry", "(", "left_upper_x", "+", "450", "+", "160", "*", "i", ",", "left_upper_y", ",", "140", ",", "30", ")", "\n", "text_Edit", ".", "setFont", "(", "font", ")", "\n", "text_Edit", ".", "setObjectName", "(", "edit_Title", "+", "'Display'", ")", "\n", "text_Edit", ".", "setText", "(", "out_str", ")", "\n", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Display'", "+", "str", "(", "i", "+", "1", ")", ",", "text_Edit", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.parameter_Display_Msg_Extended": [[276, 297], ["QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "QLabel", "QLabel.setGeometry", "QLabel.setFont", "QLabel.setObjectName", "QLabel.setText", "setattr", "QPalette", "QPalette.setColor", "QLabel.setPalette"], "function", ["None"], ["", "def", "parameter_Display_Msg_Extended", "(", "widget", ",", "font", ",", "font_Bold", ",", "left_Upper_Pos", ",", "ctl_Text", ",", "para_value", ",", "color", ")", ":", "\n", "    ", "(", "left_upper_x", ",", "left_upper_y", ")", "=", "left_Upper_Pos", "\n", "(", "text_Title", ",", "edit_Title", ")", "=", "ctl_Text", "\n", "\n", "text_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_Display", ".", "setGeometry", "(", "left_upper_x", ",", "left_upper_y", ",", "600", ",", "30", ")", "\n", "text_Display", ".", "setFont", "(", "font_Bold", ")", "\n", "text_Display", ".", "setObjectName", "(", "edit_Title", ")", "\n", "text_Display", ".", "setText", "(", "text_Title", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", ",", "text_Display", ")", "\n", "\n", "text_para_Display", "=", "QLabel", "(", "widget", ")", "\n", "text_para_Display", ".", "setGeometry", "(", "left_upper_x", "+", "620", ",", "left_upper_y", ",", "300", ",", "30", ")", "\n", "text_para_Display", ".", "setFont", "(", "font", ")", "\n", "text_para_Display", ".", "setObjectName", "(", "edit_Title", "+", "'Display'", ")", "\n", "text_para_Display", ".", "setText", "(", "para_value", ")", "\n", "setattr", "(", "widget", ",", "edit_Title", "+", "'_Display'", ",", "text_para_Display", ")", "\n", "\n", "font_pe", "=", "QPalette", "(", ")", "\n", "font_pe", ".", "setColor", "(", "QPalette", ".", "WindowText", ",", "color", ")", "\n", "text_para_Display", ".", "setPalette", "(", "font_pe", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division": [[299, 304], ["range", "out_list.append", "int", "int"], "function", ["None"], ["", "def", "list_division", "(", "list", ",", "num", ")", ":", "\n", "    ", "out_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "        ", "out_list", ".", "append", "(", "[", "int", "(", "list", "[", "2", "*", "i", "]", ")", ",", "int", "(", "list", "[", "2", "*", "i", "+", "1", "]", ")", "]", ")", "\n", "", "return", "out_list", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.list_division_single": [[306, 311], ["range", "out_list.append", "int"], "function", ["None"], ["", "def", "list_division_single", "(", "list", ",", "num", ")", ":", "\n", "    ", "out_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "        ", "out_list", ".", "append", "(", "[", "int", "(", "list", "[", "i", "]", ")", "]", ")", "\n", "", "return", "out_list", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate": [[313, 320], ["range", "int", "int"], "function", ["None"], ["", "def", "digit_validate", "(", "list", ",", "lower_bound", ",", "upper_bound", ",", "length", ")", ":", "\n", "    ", "determine_flag", "=", "True", "\n", "for", "i", "in", "range", "(", "length", ")", ":", "\n", "        ", "if", "int", "(", "list", "[", "i", "]", ")", "<", "lower_bound", "or", "int", "(", "list", "[", "i", "]", ")", ">", "upper_bound", ":", "\n", "            ", "determine_flag", "=", "False", "\n", "break", "\n", "", "", "return", "determine_flag", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.digit_validate_double": [[322, 342], ["range", "range", "int", "int", "int", "int", "min", "int", "int", "int", "int", "max", "int", "int"], "function", ["None"], ["", "def", "digit_validate_double", "(", "list", ",", "lower_bound", ",", "mid_bound", ",", "upper_bound", ",", "length", ")", ":", "\n", "    ", "determine_flag", "=", "0", "\n", "if", "mid_bound", ">", "0", ":", "\n", "        ", "for", "i", "in", "range", "(", "length", ")", ":", "\n", "            ", "if", "int", "(", "list", "[", "2", "*", "i", "]", ")", "<", "lower_bound", "or", "int", "(", "list", "[", "2", "*", "i", "]", ")", ">", "mid_bound", ":", "\n", "                ", "determine_flag", "=", "1", "\n", "break", "\n", "", "elif", "int", "(", "list", "[", "2", "*", "i", "+", "1", "]", ")", "<", "mid_bound", "or", "int", "(", "list", "[", "2", "*", "i", "+", "1", "]", ")", ">", "upper_bound", ":", "\n", "                ", "determine_flag", "=", "2", "\n", "break", "\n", "", "", "return", "determine_flag", "\n", "", "else", ":", "\n", "        ", "for", "i", "in", "range", "(", "length", ")", ":", "\n", "            ", "if", "int", "(", "list", "[", "2", "*", "i", "]", ")", "<", "lower_bound", "or", "int", "(", "list", "[", "2", "*", "i", "]", ")", ">", "min", "(", "int", "(", "list", "[", "2", "*", "i", "+", "1", "]", ")", ",", "upper_bound", ")", ":", "\n", "                ", "determine_flag", "=", "1", "\n", "break", "\n", "", "elif", "int", "(", "list", "[", "2", "*", "i", "+", "1", "]", ")", "<", "max", "(", "int", "(", "list", "[", "2", "*", "i", "]", ")", ",", "upper_bound", ")", "or", "int", "(", "list", "[", "2", "*", "i", "+", "1", "]", ")", ">", "upper_bound", ":", "\n", "                ", "determine_flag", "=", "2", "\n", "break", "\n", "", "", "return", "determine_flag", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.LfD-HRI Package.FireCommander.main": [[6938, 6944], ["QApplication.setAttribute", "QApplication", "FireCommander.welcome", "welcome.show", "sys.exit", "QApplication.exec_"], "function", ["None"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "QApplication", ".", "setAttribute", "(", "Qt", ".", "AA_EnableHighDpiScaling", ")", "\n", "main_GUI", "=", "QApplication", "(", "sys", ".", "argv", ")", "\n", "main_Loop", "=", "welcome", "(", ")", "\n", "main_Loop", ".", "show", "(", ")", "\n", "sys", ".", "exit", "(", "main_GUI", ".", "exec_", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.ScenarioModeParams.scenario_setting.__init__": [[81, 112], ["super().__init__", "range", "ScenarioModeParams.scenario_setting.scenario_para.append"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "scenario_setting", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scenario_para", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "25", ")", ":", "\n", "            ", "self", ".", "scenario_para", ".", "append", "(", "[", "]", ")", "\n", "\n", "", "self", ".", "scenario_para", "[", "0", "]", "=", "[", "[", "1200", ",", "180", ",", "1", ",", "5", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "350", "]", "]", ",", "[", "10", ",", "0", ",", "10", ",", "5", ",", "45", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "0", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "200", "]", ",", "[", "1100", ",", "200", "]", ",", "[", "900", ",", "400", "]", ",", "[", "1100", ",", "400", "]", ",", "[", "1000", ",", "600", "]", "]", ",", "[", "[", "600", ",", "1000", "]", "]", ",", "[", "[", "300", ",", "1000", "]", "]", ",", "[", "[", "650", ",", "300", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "1", "]", "=", "[", "[", "1200", ",", "180", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", "]", ",", "[", "2", ",", "1", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "350", "]", "]", ",", "[", "[", "15", "]", ",", "[", "60", "]", ",", "[", "15", "]", ",", "[", "3", "]", ",", "[", "45", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "800", ",", "300", "]", "]", ",", "[", "[", "900", ",", "700", "]", "]", ",", "[", "]", ",", "[", "[", "450", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "2", "]", "=", "[", "[", "1200", ",", "180", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ",", "[", "1", ",", "1", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "350", "]", "]", ",", "[", "5", ",", "0", ",", "15", ",", "5", ",", "45", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "0", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "1000", ",", "700", "]", "]", ",", "[", "[", "700", ",", "1000", "]", "]", ",", "[", "[", "300", ",", "900", "]", "]", ",", "[", "[", "750", ",", "200", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "3", "]", "=", "[", "[", "1200", ",", "180", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", "]", ",", "[", "1", ",", "1", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "350", "]", "]", ",", "[", "[", "12", "]", ",", "[", "60", "]", ",", "[", "5", "]", ",", "[", "3", "]", ",", "[", "45", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "800", ",", "300", "]", "]", ",", "[", "[", "900", ",", "700", "]", "]", ",", "[", "]", ",", "[", "[", "450", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "4", "]", "=", "[", "[", "1200", ",", "180", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "3", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "350", "]", ",", "[", "350", ",", "350", "]", "]", ",", "[", "[", "3", ",", "8", "]", ",", "[", "0", ",", "0", "]", ",", "[", "5", ",", "10", "]", ",", "[", "5", ",", "3", "]", ",", "[", "45", ",", "75", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "700", "]", ",", "[", "1100", ",", "700", "]", "]", ",", "[", "[", "300", ",", "1000", "]", "]", ",", "[", "[", "600", ",", "1000", "]", "]", ",", "[", "[", "650", ",", "200", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "5", "]", "=", "[", "[", "1200", ",", "180", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "3", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "350", "]", ",", "[", "350", ",", "350", "]", "]", ",", "[", "[", "5", ",", "3", "]", ",", "[", "60", ",", "0", "]", ",", "[", "10", ",", "10", "]", ",", "[", "5", ",", "5", "]", ",", "[", "45", ",", "75", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "800", ",", "300", "]", ",", "[", "1000", ",", "300", "]", "]", ",", "[", "[", "900", ",", "800", "]", "]", ",", "[", "[", "700", ",", "1000", "]", "]", ",", "[", "[", "350", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "6", "]", "=", "[", "[", "1200", ",", "180", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "3", ",", "1", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "3", ",", "3", "]", ",", "[", "0", ",", "0", "]", ",", "[", "5", ",", "5", "]", ",", "[", "5", ",", "5", "]", ",", "[", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "600", "]", ",", "[", "1100", ",", "600", "]", "]", ",", "[", "[", "700", ",", "1100", "]", "]", ",", "[", "[", "300", ",", "1100", "]", "]", ",", "[", "[", "650", ",", "300", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "7", "]", "=", "[", "[", "1200", ",", "180", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "3", ",", "1", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "5", ",", "7", "]", ",", "[", "0", ",", "60", "]", ",", "[", "3", ",", "3", "]", ",", "[", "10", ",", "10", "]", ",", "[", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "700", ",", "300", "]", ",", "[", "900", ",", "300", "]", "]", ",", "[", "[", "900", ",", "700", "]", "]", ",", "[", "[", "200", ",", "1000", "]", "]", ",", "[", "[", "650", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "8", "]", "=", "[", "[", "1200", ",", "180", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "350", "]", ",", "[", "350", ",", "350", "]", "]", ",", "[", "[", "5", ",", "5", "]", ",", "[", "0", ",", "0", "]", ",", "[", "10", ",", "10", "]", ",", "[", "5", ",", "5", "]", ",", "[", "45", ",", "75", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "800", ",", "700", "]", ",", "[", "1000", ",", "700", "]", "]", ",", "[", "[", "600", ",", "1000", "]", "]", ",", "[", "[", "300", ",", "1000", "]", "]", ",", "[", "[", "650", ",", "200", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "9", "]", "=", "[", "[", "1200", ",", "180", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "350", "]", ",", "[", "350", ",", "350", "]", "]", ",", "[", "[", "5", ",", "5", "]", ",", "[", "60", ",", "0", "]", ",", "[", "10", ",", "10", "]", ",", "[", "5", ",", "5", "]", ",", "[", "45", ",", "75", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "800", ",", "300", "]", ",", "[", "1000", ",", "300", "]", "]", ",", "[", "[", "900", ",", "800", "]", "]", ",", "[", "[", "700", ",", "1000", "]", "]", ",", "[", "[", "350", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "10", "]", "=", "[", "[", "1200", ",", "180", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "5", ",", "5", "]", ",", "[", "0", ",", "0", "]", ",", "[", "5", ",", "5", "]", ",", "[", "5", ",", "5", "]", ",", "[", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "700", "]", ",", "[", "1100", ",", "700", "]", "]", ",", "[", "[", "700", ",", "1000", "]", "]", ",", "[", "[", "300", ",", "1000", "]", "]", ",", "[", "[", "650", ",", "200", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "11", "]", "=", "[", "[", "1200", ",", "180", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "3", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "3", ",", "10", "]", ",", "[", "0", ",", "60", "]", ",", "[", "5", ",", "10", "]", ",", "[", "5", ",", "10", "]", ",", "[", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "700", ",", "300", "]", ",", "[", "900", ",", "300", "]", "]", ",", "[", "[", "900", ",", "700", "]", "]", ",", "[", "[", "200", ",", "1000", "]", "]", ",", "[", "[", "550", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "12", "]", "=", "[", "[", "1200", ",", "180", ",", "3", ",", "5", ",", "2", ",", "1", ",", "0", "]", ",", "[", "2", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "450", "]", ",", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "3", ",", "3", ",", "3", "]", ",", "[", "0", ",", "60", ",", "0", "]", ",", "[", "10", ",", "10", ",", "10", "]", ",", "[", "5", ",", "5", ",", "5", "]", ",", "[", "75", ",", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "200", "]", ",", "[", "1100", ",", "200", "]", ",", "[", "900", ",", "400", "]", ",", "[", "1100", ",", "400", "]", ",", "[", "1000", ",", "600", "]", "]", ",", "[", "[", "600", ",", "200", "]", ",", "[", "300", ",", "1100", "]", "]", ",", "[", "[", "600", ",", "1000", "]", "]", ",", "[", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "13", "]", "=", "[", "[", "1200", ",", "180", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "3", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "150", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "5", ",", "5", ",", "5", "]", ",", "[", "0", ",", "120", ",", "60", "]", ",", "[", "10", ",", "10", ",", "10", "]", ",", "[", "5", ",", "5", ",", "5", "]", ",", "[", "135", ",", "315", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "600", ",", "200", "]", ",", "[", "800", ",", "200", "]", "]", ",", "[", "[", "900", ",", "700", "]", "]", ",", "[", "[", "200", ",", "1000", "]", "]", ",", "[", "[", "550", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "14", "]", "=", "[", "[", "1200", ",", "180", ",", "3", ",", "5", ",", "2", ",", "1", ",", "0", "]", ",", "[", "3", ",", "3", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "450", "]", ",", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "3", ",", "5", ",", "7", "]", ",", "[", "0", ",", "60", ",", "0", "]", ",", "[", "10", ",", "10", ",", "10", "]", ",", "[", "3", ",", "5", ",", "10", "]", ",", "[", "75", ",", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "200", "]", ",", "[", "1100", ",", "200", "]", ",", "[", "900", ",", "400", "]", ",", "[", "1100", ",", "400", "]", ",", "[", "1000", ",", "600", "]", "]", ",", "[", "[", "600", ",", "200", "]", ",", "[", "300", ",", "1100", "]", "]", ",", "[", "[", "600", ",", "1000", "]", "]", ",", "[", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "15", "]", "=", "[", "[", "1200", ",", "180", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "3", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "150", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "3", ",", "5", ",", "7", "]", ",", "[", "0", ",", "120", ",", "60", "]", ",", "[", "3", ",", "5", ",", "10", "]", ",", "[", "5", ",", "5", ",", "5", "]", ",", "[", "135", ",", "315", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "600", ",", "200", "]", ",", "[", "800", ",", "200", "]", "]", ",", "[", "[", "900", ",", "700", "]", "]", ",", "[", "[", "200", ",", "1000", "]", "]", ",", "[", "[", "550", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "16", "]", "=", "[", "[", "1200", ",", "180", ",", "3", ",", "4", ",", "2", ",", "2", ",", "0", "]", ",", "[", "4", ",", "4", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "450", "]", ",", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "5", ",", "5", ",", "5", "]", ",", "[", "60", ",", "0", ",", "120", "]", ",", "[", "10", ",", "10", ",", "10", "]", ",", "[", "5", ",", "5", ",", "5", "]", ",", "[", "75", ",", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "200", "]", ",", "[", "1100", ",", "200", "]", ",", "[", "900", ",", "600", "]", ",", "[", "1100", ",", "600", "]", "]", ",", "[", "[", "600", ",", "200", "]", ",", "[", "300", ",", "1100", "]", "]", ",", "[", "[", "1000", ",", "400", "]", ",", "[", "600", ",", "1000", "]", "]", ",", "[", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "17", "]", "=", "[", "[", "1200", ",", "180", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "3", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "150", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "3", ",", "3", ",", "5", "]", ",", "[", "0", ",", "0", ",", "0", "]", ",", "[", "5", ",", "5", ",", "10", "]", ",", "[", "3", ",", "3", ",", "5", "]", ",", "[", "135", ",", "315", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "600", ",", "200", "]", ",", "[", "800", ",", "200", "]", "]", ",", "[", "[", "900", ",", "700", "]", "]", ",", "[", "[", "200", ",", "1000", "]", "]", ",", "[", "[", "550", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "18", "]", "=", "[", "[", "1200", ",", "180", ",", "3", ",", "4", ",", "2", ",", "2", ",", "0", "]", ",", "[", "2", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "450", "]", ",", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "5", ",", "5", ",", "5", "]", ",", "[", "60", ",", "0", ",", "120", "]", ",", "[", "10", ",", "10", ",", "10", "]", ",", "[", "5", ",", "5", ",", "5", "]", ",", "[", "75", ",", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "200", "]", ",", "[", "1100", ",", "200", "]", ",", "[", "900", ",", "600", "]", ",", "[", "1100", ",", "600", "]", "]", ",", "[", "[", "600", ",", "200", "]", ",", "[", "300", ",", "1100", "]", "]", ",", "[", "[", "1000", ",", "400", "]", ",", "[", "600", ",", "1000", "]", "]", ",", "[", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "19", "]", "=", "[", "[", "1200", ",", "180", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "1", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "750", "]", ",", "[", "1050", ",", "150", "]", ",", "[", "1050", ",", "1050", "]", "]", ",", "[", "[", "3", ",", "3", ",", "3", "]", ",", "[", "0", ",", "0", ",", "0", "]", ",", "[", "5", ",", "5", ",", "5", "]", ",", "[", "5", ",", "5", ",", "5", "]", ",", "[", "135", ",", "315", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "600", ",", "200", "]", ",", "[", "800", ",", "200", "]", "]", ",", "[", "[", "900", ",", "700", "]", "]", ",", "[", "[", "200", ",", "1000", "]", "]", ",", "[", "[", "550", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "20", "]", "=", "[", "[", "1200", ",", "180", ",", "4", ",", "4", ",", "1", ",", "2", ",", "2", "]", ",", "[", "4", ",", "4", ",", "0", ",", "0", "]", ",", "[", "[", "[", "250", ",", "450", "]", ",", "[", "250", ",", "750", "]", ",", "[", "50", ",", "1150", "]", ",", "[", "1150", ",", "1150", "]", "]", ",", "[", "[", "5", ",", "5", ",", "5", ",", "5", "]", ",", "[", "60", ",", "0", ",", "0", ",", "120", "]", ",", "[", "10", ",", "10", ",", "10", ",", "10", "]", ",", "[", "5", ",", "5", ",", "5", ",", "5", "]", ",", "[", "75", ",", "135", ",", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "500", "]", ",", "[", "1100", ",", "500", "]", ",", "[", "700", ",", "1100", "]", ",", "[", "900", ",", "1100", "]", "]", ",", "[", "[", "600", ",", "200", "]", "]", ",", "[", "[", "1000", ",", "700", "]", ",", "[", "600", ",", "700", "]", "]", ",", "[", "[", "950", ",", "200", "]", ",", "[", "450", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "21", "]", "=", "[", "[", "1200", ",", "180", ",", "4", ",", "4", ",", "1", ",", "2", ",", "2", "]", ",", "[", "3", ",", "3", ",", "0", ",", "0", "]", ",", "[", "[", "[", "250", ",", "450", "]", ",", "[", "250", ",", "750", "]", ",", "[", "50", ",", "1150", "]", ",", "[", "1150", ",", "1150", "]", "]", ",", "[", "[", "5", ",", "5", ",", "5", ",", "5", "]", ",", "[", "0", ",", "0", ",", "0", ",", "120", "]", ",", "[", "5", ",", "5", ",", "10", ",", "10", "]", ",", "[", "5", ",", "5", ",", "5", ",", "5", "]", ",", "[", "75", ",", "135", ",", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "500", "]", ",", "[", "1100", ",", "500", "]", ",", "[", "700", ",", "1100", "]", ",", "[", "900", ",", "1100", "]", "]", ",", "[", "[", "600", ",", "200", "]", "]", ",", "[", "[", "1000", ",", "700", "]", ",", "[", "600", ",", "700", "]", "]", ",", "[", "[", "950", ",", "200", "]", ",", "[", "450", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "22", "]", "=", "[", "[", "1200", ",", "180", ",", "4", ",", "4", ",", "1", ",", "2", ",", "2", "]", ",", "[", "3", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "250", ",", "450", "]", ",", "[", "250", ",", "750", "]", ",", "[", "50", ",", "1150", "]", ",", "[", "1150", ",", "1150", "]", "]", ",", "[", "[", "3", ",", "3", ",", "5", ",", "7", "]", ",", "[", "60", ",", "0", ",", "0", ",", "120", "]", ",", "[", "3", ",", "5", ",", "3", ",", "10", "]", ",", "[", "5", ",", "5", ",", "5", ",", "5", "]", ",", "[", "75", ",", "135", ",", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "500", "]", ",", "[", "1100", ",", "500", "]", ",", "[", "700", ",", "1100", "]", ",", "[", "900", ",", "1100", "]", "]", ",", "[", "[", "600", ",", "200", "]", "]", ",", "[", "[", "1000", ",", "700", "]", ",", "[", "600", ",", "700", "]", "]", ",", "[", "[", "950", ",", "200", "]", ",", "[", "450", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "23", "]", "=", "[", "[", "1200", ",", "180", ",", "4", ",", "4", ",", "1", ",", "2", ",", "2", "]", ",", "[", "2", ",", "2", ",", "0", ",", "0", "]", ",", "[", "[", "[", "250", ",", "450", "]", ",", "[", "250", ",", "750", "]", ",", "[", "50", ",", "1150", "]", ",", "[", "1150", ",", "1150", "]", "]", ",", "[", "[", "3", ",", "5", ",", "7", ",", "8", "]", ",", "[", "0", ",", "0", ",", "0", ",", "120", "]", ",", "[", "8", ",", "8", ",", "8", ",", "8", "]", ",", "[", "3", ",", "3", ",", "3", ",", "3", "]", ",", "[", "75", ",", "135", ",", "135", ",", "225", "]", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "1", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "900", ",", "500", "]", ",", "[", "1100", ",", "500", "]", ",", "[", "700", ",", "1100", "]", ",", "[", "900", ",", "1100", "]", "]", ",", "[", "[", "600", ",", "200", "]", "]", ",", "[", "[", "1000", ",", "700", "]", ",", "[", "600", ",", "700", "]", "]", ",", "[", "[", "950", ",", "200", "]", ",", "[", "450", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "\n", "self", ".", "scenario_para", "[", "24", "]", "=", "[", "[", "1200", ",", "180", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "3", ",", "0", ",", "0", "]", ",", "[", "[", "[", "350", ",", "350", "]", "]", ",", "[", "5", ",", "0", ",", "10", ",", "5", ",", "45", ",", "1.25", ",", "0.1", ",", "90", ",", "80", ",", "0", "]", ",", "[", "[", "100", ",", "600", "]", ",", "1", "]", ",", "[", "[", "800", ",", "300", "]", "]", ",", "[", "[", "900", ",", "800", "]", "]", ",", "[", "[", "1000", ",", "600", "]", "]", ",", "[", "[", "450", ",", "1000", "]", "]", "]", ",", "[", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "10", ",", "100", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "500", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "20", "]", "]", ",", "[", "[", "10", "]", "]", ",", "[", "[", "10", "]", "]", "]", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.sense": [[61, 136], ["current_geo_phys_info[].reshape", "current_geo_phys_info[].reshape", "current_geo_phys_info[].reshape", "numpy.zeros", "numpy.zeros", "ValueError", "numpy.zeros", "drones_sense.append", "numpy.zeros.sum", "drones_uncertainty_all.append", "mdlynamics.kf_initializer", "mdlynamics.state_gradients", "mdlynamics.state_jacobian", "mdlynamics.observation_jacobian", "EKF", "EKF.ekf", "state_estimates_all.append", "numpy.sum", "numpy.array", "numpy.array", "numpy.linalg.norm", "int", "int", "min", "min", "round", "round"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "sense", "(", "drone_loci", "=", "None", ",", "fire_spots", "=", "None", ",", "current_geo_phys_info", "=", "None", ",", "EKF", "=", "None", ",", "mdlynamics", "=", "None", ",", "terrain_sizes", "=", "None", ",", "\n", "sensing_abilities", "=", "None", ",", "mapping_flg", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        this function performs the fire-spot sensing through Kalman estimation for sensing and hybrid UAVs\n\n        :param drone_loci: array of drone locations\n        :param fire_spots: array of ground truth fire locations\n        :param current_geo_phys_info: Geo-physical information of the terrain\n        :param EKF: Initialized EKF environment (object)\n        :param mdlynamics: initialized model-dynamics for EKF (object)\n        :param terrain_sizes: terrain sizes\n        :param sensing_abilities: vector of sensing abilities\n        :param mapping_flg: mapping flag used in mdlynamics (default:: False)\n        :return: state estimates, drones uncertainty, total error and approximated error map\n        \"\"\"", "\n", "\n", "if", "drone_loci", "is", "None", "or", "fire_spots", "is", "None", "or", "current_geo_phys_info", "is", "None", "or", "EKF", "is", "None", "or", "mdlynamics", "is", "None", "or", "terrain_sizes", "is", "None", "or", "sensing_abilities", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Function 'sens()' needs ALL its input arguments to work, except for the mapping flag (default:: False).\"", ")", "\n", "\n", "# extracting/receiving geo-physical information for estimation and prediction", "\n", "", "R", "=", "current_geo_phys_info", "[", ":", ",", "0", "]", ".", "reshape", "(", "fire_spots", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "U", "=", "current_geo_phys_info", "[", ":", ",", "1", "]", ".", "reshape", "(", "fire_spots", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "Theta", "=", "current_geo_phys_info", "[", ":", ",", "2", "]", ".", "reshape", "(", "fire_spots", ".", "shape", "[", "0", "]", ",", "1", ")", "\n", "\n", "# Kalman estimation", "\n", "drones_uncertainty_all", "=", "[", "]", "\n", "error_map", "=", "np", ".", "zeros", "(", "shape", "=", "terrain_sizes", ")", "\n", "total_uncertainty", "=", "np", ".", "zeros", "(", "shape", "=", "[", "1", ",", "drone_loci", ".", "shape", "[", "0", "]", "]", ")", "\n", "d_counter", "=", "0", "\n", "drones_sense", "=", "[", "]", "\n", "for", "d", "in", "drone_loci", ":", "\n", "            ", "px", ",", "py", ",", "pz", ",", "ptheta", "=", "d", "[", "0", "]", ",", "d", "[", "1", "]", ",", "d", "[", "2", "]", ",", "d", "[", "3", "]", "\n", "counter", "=", "0", "\n", "this_drones_uncertainty_about_q", "=", "np", ".", "zeros", "(", "shape", "=", "[", "fire_spots", ".", "shape", "[", "0", "]", ",", "1", "]", ")", "\n", "state_estimates_all", "=", "[", "]", "\n", "for", "q", "in", "fire_spots", ":", "\n", "                ", "qx", ",", "qy", ",", "qint", "=", "q", "[", "0", "]", ",", "q", "[", "1", "]", ",", "q", "[", "2", "]", "\n", "\n", "# initializing AEKF parameters", "\n", "sensing_coeff", "=", "sensing_abilities", "[", "d_counter", "]", "\n", "x0", ",", "P0", ",", "Q0", ",", "R0", "=", "mdlynamics", ".", "kf_initializer", "(", "qx", ",", "qy", ",", "px", ",", "py", ",", "pz", ",", "R", "[", "counter", "]", "[", "0", "]", ",", "U", "[", "counter", "]", "[", "0", "]", ",", "Theta", "[", "counter", "]", "[", "0", "]", ",", "sensing_coeff", ")", "\n", "state_grads", "=", "mdlynamics", ".", "state_gradients", "(", "R", "[", "counter", "]", "[", "0", "]", ",", "U", "[", "counter", "]", "[", "0", "]", ",", "Theta", "[", "counter", "]", "[", "0", "]", ")", "\n", "F", "=", "mdlynamics", ".", "state_jacobian", "(", "state_grads", ")", "\n", "H", "=", "mdlynamics", ".", "observation_jacobian", "(", "state_grads", ",", "mapping_flg", ")", "# direct state estimation with no mapping", "\n", "\n", "# initializing the EKF", "\n", "ekf", "=", "EKF", "(", "F", "=", "F", ",", "H", "=", "H", ",", "xhat0", "=", "x0", ",", "P0", "=", "P0", ",", "Q", "=", "Q0", ",", "R", "=", "R0", ",", "num_iter", "=", "500", ")", "\n", "\n", "# EKF predictor", "\n", "state_estimates", ",", "uncertainties", "=", "ekf", ".", "ekf", "(", "z", "=", "None", ",", "measurement_quality", "=", "1", ")", "\n", "state_estimates_all", ".", "append", "(", "state_estimates", ")", "\n", "\n", "# propagating uncertainty", "\n", "uncertainty_about_q", "=", "np", ".", "sum", "(", "uncertainties", ")", "\n", "kf_fire_spot_estimate", "=", "np", ".", "array", "(", "[", "state_estimates", "[", "0", "]", ",", "state_estimates", "[", "1", "]", ",", "0.", "]", ")", "\n", "kf_drone_pose_estimate", "=", "np", ".", "array", "(", "[", "state_estimates", "[", "2", "]", ",", "state_estimates", "[", "3", "]", ",", "state_estimates", "[", "4", "]", "]", ")", "\n", "distance_error", "=", "np", ".", "linalg", ".", "norm", "(", "kf_fire_spot_estimate", "-", "kf_drone_pose_estimate", ")", "\n", "this_drones_uncertainty_about_q", "[", "counter", "]", "=", "uncertainty_about_q", "*", "distance_error", "\n", "\n", "# updating the error-map", "\n", "apprx_qx", "=", "int", "(", "round", "(", "state_estimates", "[", "0", "]", ")", ")", "\n", "apprx_qy", "=", "int", "(", "round", "(", "state_estimates", "[", "1", "]", ")", ")", "\n", "apprx_qx", "=", "min", "(", "apprx_qx", ",", "terrain_sizes", "[", "0", "]", "-", "1", ")", "\n", "apprx_qy", "=", "min", "(", "apprx_qy", ",", "terrain_sizes", "[", "1", "]", "-", "1", ")", "\n", "error_map", "[", "apprx_qx", ",", "apprx_qy", "]", "+=", "this_drones_uncertainty_about_q", "[", "counter", "]", "[", "0", "]", "# Not really important (just for visualization)", "\n", "counter", "+=", "1", "\n", "\n", "", "drones_sense", ".", "append", "(", "state_estimates_all", ")", "\n", "total_uncertainty", "[", "0", ",", "d_counter", "]", "=", "error_map", ".", "sum", "(", ")", "# calculating the total uncertainty", "\n", "drones_uncertainty_all", ".", "append", "(", "this_drones_uncertainty_about_q", ")", "# keeping track of all fire-spot uncertainties", "\n", "d_counter", "+=", "1", "\n", "\n", "", "return", "drones_sense", ",", "total_uncertainty", ",", "drones_uncertainty_all", ",", "error_map", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fight": [[138, 206], ["numpy.zeros", "ValueError", "Utilities.fov_corners", "fire_env.pruning_fire_map", "numpy.concatenate", "Utilities.in_fov", "Utilities.fov_area", "ValueError"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_corners", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.pruning_fire_map", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.in_fov", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_area"], ["", "@", "staticmethod", "\n", "def", "fight", "(", "drone_loci", "=", "None", ",", "terrain_map", "=", "None", ",", "uav_class", "=", "None", ",", "half_angles", "=", "None", ",", "fighting_abilities", "=", "None", ",", "tanker_capacities", "=", "None", ",", "fire_env", "=", "None", ",", "\n", "time_vector", "=", "None", ",", "pruned_fires", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function performs the fire fighting through damping the fire intensity, using a scale Heaviside step function.\n\n        :param drone_loci: current UAV locations\n        :param uav_class: class of the current UAV\n        :param terrain_map: most recent fire map\n        :param half_angles: camera half-angles list\n        :param fighting_abilities: fighting power coefficients\n        :param tanker_capacities: UAV's tanker capacity\n        :param fire_env: created fire environment object\n        :param time_vector: current time vector of the individual fire spots\n        :param pruned_fires: list of peviously pruned fires\n        :return: updated fire map after damping the fire, pruned fire spots, updated UAv's tanker capacity and etc.\n        \"\"\"", "\n", "\n", "if", "drone_loci", "is", "None", "or", "terrain_map", "is", "None", "or", "uav_class", "is", "None", "or", "half_angles", "is", "None", "or", "fire_env", "is", "None", "or", "time_vector", "is", "None", "or", "pruned_fires", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Function 'fight()' needs ALL its input arguments to work.\"", ")", "\n", "\n", "", "counter", "=", "0", "\n", "updated_tanker_capacities", "=", "np", ".", "zeros", "(", "tanker_capacities", ".", "shape", ")", "\n", "for", "d", "in", "drone_loci", ":", "\n", "\n", "# evaluating the UAV parameters:: half-angle and fighting ability", "\n", "            ", "fighting_ability_coeff", "=", "fighting_abilities", "[", "counter", "]", "\n", "\n", "if", "uav_class", "[", "counter", "]", "==", "2", ":", "# class of fixed-wings", "\n", "                ", "half_angle", "=", "half_angles", "[", "2", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "1", ":", "# class of multi-rotors", "\n", "                ", "half_angle", "=", "half_angles", "[", "1", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "0", ":", "# class of ground robots", "\n", "                ", "half_angle", "=", "half_angles", "[", "0", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "3", ":", "# class of hybrid UAVs", "\n", "                ", "half_angle", "=", "half_angles", "[", "3", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\">>> Oops! Wrong UAV class code specified. Options are integers between 0-3. Check documentation for details.\"", ")", "\n", "\n", "# obtaining the respective FOV coordinates", "\n", "", "fov_corners_all", ",", "fov_corners_tr_bl", "=", "Utilities", ".", "fov_corners", "(", "drone_loci", "=", "d", ",", "half_angle", "=", "half_angle", ")", "\n", "bl_x", ",", "bl_y", "=", "fov_corners_tr_bl", "[", "1", ",", "0", "]", ",", "fov_corners_tr_bl", "[", "1", ",", "1", "]", "# bottom left coordinates", "\n", "tr_x", ",", "tr_y", "=", "fov_corners_tr_bl", "[", "0", ",", "0", "]", ",", "fov_corners_tr_bl", "[", "0", ",", "1", "]", "# top right coordinates", "\n", "spot_num", "=", "0", "\n", "\n", "# updating fire intensities", "\n", "for", "point", "in", "terrain_map", ":", "\n", "                ", "x", "=", "point", "[", "0", "]", "\n", "y", "=", "point", "[", "1", "]", "\n", "if", "Utilities", ".", "in_fov", "(", "bl_x", "=", "bl_x", ",", "bl_y", "=", "bl_y", ",", "tr_x", "=", "tr_x", ",", "tr_y", "=", "tr_y", ",", "x", "=", "x", ",", "y", "=", "y", ")", ":", "\n", "                    ", "terrain_map", "[", "spot_num", ",", "2", "]", "=", "point", "[", "2", "]", "/", "fighting_ability_coeff", "\n", "", "spot_num", "+=", "1", "\n", "\n", "# updating the UAVs tanker capacity (Note that no matter any fire is down there or not, extinguisher is dumped [in sensing UAVs we trust])", "\n", "", "updated_tanker_capacities", "[", "counter", "]", "=", "tanker_capacities", "[", "counter", "]", "-", "Utilities", ".", "fov_area", "(", "fov_corners_all", "=", "fov_corners_all", ")", "\n", "\n", "# pruning dead fire spots from the fire map", "\n", "updated_terrain_map", ",", "updated_time_vector", ",", "burnt_out_fires_new", "=", "fire_env", ".", "pruning_fire_map", "(", "\n", "updated_terrain_map", "=", "terrain_map", ",", "updated_time_vector", "=", "time_vector", ")", "\n", "# update the time vector for next step", "\n", "time_vector", "=", "updated_time_vector", "\n", "terrain_map", "=", "updated_terrain_map", "\n", "pruned_fires", "=", "np", ".", "concatenate", "(", "(", "pruned_fires", ",", "burnt_out_fires_new", ")", ")", "\n", "\n", "counter", "+=", "1", "\n", "\n", "", "return", "terrain_map", ",", "time_vector", ",", "pruned_fires", ",", "updated_tanker_capacities", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fighting_path_generation": [[208, 239], ["ValueError", "fighting_paths[].append", "used_info_idx.append", "len", "Utilities.fit_curve", "enumerate", "ready_idx.tolist"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fit_curve"], ["", "@", "staticmethod", "\n", "def", "fighting_path_generation", "(", "passed_info", "=", "None", ",", "fighting_paths", "=", "None", ",", "ready_idx", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function generats a fighting path based on received sensing info, using regression\n\n        :param passed_info: passed sensing info from sensing UAVs\n        :param fighting_paths: previously generated fighting paths\n        :param ready_idx: active UAV indexes\n        :return: a fighting path for fighting fixed-wings (close to a unicycle path)\n        \"\"\"", "\n", "\n", "if", "passed_info", "is", "None", "or", "fighting_paths", "is", "None", "or", "ready_idx", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Sensing information are not passed ['None' received]. Define '[]' if no info is yet available.\"", ")", "\n", "\n", "", "counter", "=", "0", "\n", "used_info_idx", "=", "[", "]", "\n", "for", "info", "in", "passed_info", ":", "\n", "            ", "if", "info", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "for", "this_info", "in", "passed_info", ":", "\n", "# info_len = this_info.shape[0]  # todo: adaptive resolution???", "\n", "                    ", "if", "counter", ">=", "len", "(", "ready_idx", ".", "tolist", "(", ")", ")", ":", "\n", "                        ", "break", "\n", "", "fighting_paths", "[", "ready_idx", "[", "counter", "]", "]", ".", "append", "(", "Utilities", ".", "fit_curve", "(", "points", "=", "this_info", ",", "degree", "=", "3", ",", "resolution", "=", "50", ")", ")", "\n", "used_info_idx", ".", "append", "(", "counter", ")", "\n", "counter", "+=", "1", "\n", "\n", "", "passed_info", "=", "[", "i", "for", "j", ",", "i", "in", "enumerate", "(", "passed_info", ")", "if", "j", "not", "in", "used_info_idx", "]", "# removing used info", "\n", "\n", "", "", "return", "fighting_paths", ",", "passed_info", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fit_curve": [[241, 274], ["numpy.polyfit", "numpy.poly1d", "numpy.linspace", "numpy.poly1d.", "numpy.array", "numpy.array", "numpy.hstack", "ValueError", "numpy.linspace.tolist", "np.poly1d.tolist"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "fit_curve", "(", "points", "=", "None", ",", "degree", "=", "3", ",", "resolution", "=", "50", ")", ":", "\n", "        ", "\"\"\"\n        this function performs the curve fitting using 'Least squares polynomial fit' to generate fighting path\n        The solution minimizes the squared error\n\n        :param points: the sensed points from sensing UAVs\n        :param degree: polynomial degree to be fit [default:: 3 - close to unicycle dynamics]\n        :param resolution: how many points on the determined trajectory you need [default:: 50 - CANNOT be too small]\n        :return:\n        \"\"\"", "\n", "\n", "if", "points", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"\"\">>> Oops! Points are not passed for curve to be generated.\"\"\"", ")", "\n", "\n", "# get x and y vectors", "\n", "", "x", "=", "points", "[", ":", ",", "0", "]", "\n", "y", "=", "points", "[", ":", ",", "1", "]", "\n", "\n", "# calculate polynomial", "\n", "z", "=", "np", ".", "polyfit", "(", "x", ",", "y", ",", "degree", ")", "# compute polynomial coefficients", "\n", "f", "=", "np", ".", "poly1d", "(", "z", ")", "# compute the polynomial", "\n", "\n", "# calculate new x's and y's", "\n", "x_new", "=", "np", ".", "linspace", "(", "x", "[", "0", "]", ",", "x", "[", "-", "1", "]", ",", "resolution", ")", "\n", "y_new", "=", "f", "(", "x_new", ")", "\n", "\n", "# forming the path list", "\n", "aa", "=", "np", ".", "array", "(", "[", "x_new", ".", "tolist", "(", ")", "]", ")", "\n", "bb", "=", "np", ".", "array", "(", "[", "y_new", ".", "tolist", "(", ")", "]", ")", "\n", "curve", "=", "np", ".", "hstack", "(", "(", "aa", ".", "T", ",", "bb", ".", "T", ")", ")", "\n", "\n", "return", "curve", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.status_update": [[276, 311], ["ValueError", "cond1.append", "numpy.where", "len", "Utilities.time_to_base", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.time_to_base"], ["", "@", "staticmethod", "\n", "def", "status_update", "(", "drone_stats", "=", "None", ",", "uav_type", "=", "None", ",", "base_locations", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function updates the status of each UAV\n\n        :param drone_stats: Num_UAVx12 stat vector\n        :param uav_type: class of UAV\n        :param base_locations: Num_Basex3 location of bases in the form of [x, y, z]\n        :return: updated drone_stats and a list of indexes of available bases for service\n        \"\"\"", "\n", "\n", "if", "drone_stats", "is", "None", "or", "uav_type", "is", "None", "or", "base_locations", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Function 'status_update()' CANNOT work with None as input values.\"", ")", "\n", "\n", "", "counter", "=", "0", "\n", "for", "drone_stat", "in", "drone_stats", ":", "\n", "# checking the battery availability", "\n", "            ", "cond1", "=", "[", "]", "\n", "for", "base", "in", "base_locations", ":", "\n", "                ", "cond1", ".", "append", "(", "Utilities", ".", "time_to_base", "(", "states", "=", "drone_stat", "[", "0", ":", "3", "]", ",", "depo", "=", "base", ",", "max_velocity", "=", "drone_stat", "[", "8", "]", ")", ")", "\n", "", "idx", "=", "np", ".", "where", "(", "np", ".", "array", "(", "cond1", ")", "<", "drone_stat", "[", "7", "]", ")", "[", "0", "]", "# check if there's enough battery left to go back to a base", "\n", "if", "len", "(", "idx", ")", "==", "0", ":", "\n", "                ", "drone_stats", "[", "counter", ",", "10", "]", "=", "0", "\n", "drone_stats", "[", "counter", ",", "11", "]", "=", "1", "\n", "\n", "# checking the tanker availability", "\n", "", "if", "uav_type", "==", "'fighting'", "or", "uav_type", "==", "'hybrid'", ":", "\n", "                ", "cond2", "=", "drone_stat", "[", "6", "]", "\n", "if", "cond2", "<=", "0", ":", "\n", "                    ", "drone_stats", "[", "counter", ",", "10", "]", "=", "0", "\n", "drone_stats", "[", "counter", ",", "11", "]", "=", "1", "\n", "\n", "", "", "counter", "+=", "1", "\n", "\n", "", "return", "drone_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.base_assignment_dist": [[313, 337], ["numpy.zeros", "ValueError", "times_all.append", "Utilities.time_to_base", "numpy.argmin", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.time_to_base"], ["", "@", "staticmethod", "\n", "def", "base_assignment_dist", "(", "drone_stats", "=", "None", ",", "base_locations", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function performs the base assignment by choosing the closest base\n\n        :param drone_stats: UAVs stats\n        :param base_locations: list of base locations\n        :return: assigned base locations for each UAV\n        \"\"\"", "\n", "\n", "if", "drone_stats", "is", "None", "or", "base_locations", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Function 'base_assignment()' needs ALL of its input arguments to work!\"", ")", "\n", "\n", "", "counter", "=", "0", "\n", "assigned_bases", "=", "np", ".", "zeros", "(", "shape", "=", "[", "drone_stats", ".", "shape", "[", "0", "]", ",", "3", "]", ")", "\n", "for", "drone_stat", "in", "drone_stats", ":", "\n", "# checking the disstances", "\n", "            ", "times_all", "=", "[", "]", "\n", "for", "base", "in", "base_locations", ":", "\n", "                ", "times_all", ".", "append", "(", "Utilities", ".", "time_to_base", "(", "states", "=", "drone_stat", "[", "0", ":", "3", "]", ",", "depo", "=", "base", ",", "max_velocity", "=", "drone_stat", "[", "8", "]", ")", ")", "\n", "\n", "", "assigned_bases", "[", "counter", "]", "=", "base_locations", "[", "np", ".", "argmin", "(", "np", ".", "array", "(", "times_all", ")", ")", "]", "\n", "\n", "", "return", "assigned_bases", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.base_assignment_csp": [[339, 405], ["[].tolist", "numpy.reshape().tolist", "numpy.zeros", "range", "ValueError", "times_all.append", "options_len.append", "numpy.argmin", "[].tolist", "float", "numpy.zeros.tolist", "numpy.reshape", "cond1.append", "numpy.where", "options_idx.append", "options_idx_track.append", "options_idx.append", "options_idx_track.append", "len", "numpy.array", "numpy.argmin", "len", "numpy.reshape().tolist", "print", "numpy.where", "Utilities.time_to_base", "int", "numpy.where", "int", "len", "numpy.array", "numpy.where", "numpy.array", "numpy.where", "numpy.where", "numpy.where", "numpy.argmin", "numpy.argmin", "numpy.reshape", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.argmin", "len", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.time_to_base"], ["", "@", "staticmethod", "\n", "def", "base_assignment_csp", "(", "drone_stats", "=", "None", ",", "base_locations", "=", "None", ",", "base_capacities", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function performs the base assignment by solving a constraint satisfaction problem (CSP) with UAVs as variables, base locations as\n        domains, and UAV-velocity-dependent time to the center of the bases and base capacities as constraints.\n\n        :param drone_stats: UAVs stats\n        :param base_locations: list of base locations\n        :param base_capacities: list of base capacities\n        :return: assigned base locations for each UAV and the updated base capacities after assignment\n        \"\"\"", "\n", "\n", "if", "drone_stats", "is", "None", "or", "base_locations", "is", "None", "or", "base_capacities", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Function 'base_assignment()' needs ALL of its input arguments to work!\"", ")", "\n", "\n", "# initially, all bases with open spot for service are available", "\n", "", "available_bases_idx", "=", "np", ".", "where", "(", "np", ".", "array", "(", "base_capacities", ")", ">", "0", ")", "[", "0", "]", ".", "tolist", "(", ")", "\n", "available_bases", "=", "np", ".", "reshape", "(", "available_bases_idx", "*", "drone_stats", ".", "shape", "[", "0", "]", ",", "(", "drone_stats", ".", "shape", "[", "0", "]", ",", "len", "(", "available_bases_idx", ")", ")", ")", ".", "tolist", "(", ")", "\n", "\n", "# available options are then revised based on the time required to get there and battery left", "\n", "times_all", "=", "[", "]", "\n", "options_idx", "=", "[", "]", "\n", "options_idx_track", "=", "[", "]", "\n", "for", "drone_stat", "in", "drone_stats", ":", "\n", "# checking the battery availability", "\n", "            ", "cond1", "=", "[", "]", "\n", "for", "base", "in", "base_locations", ":", "\n", "                ", "cond1", ".", "append", "(", "Utilities", ".", "time_to_base", "(", "states", "=", "drone_stat", "[", "0", ":", "3", "]", ",", "depo", "=", "base", ",", "max_velocity", "=", "drone_stat", "[", "8", "]", ")", ")", "\n", "\n", "# finding potential bases", "\n", "", "situation_eval", "=", "np", ".", "where", "(", "np", ".", "array", "(", "cond1", ")", "<", "drone_stat", "[", "7", "]", ")", "[", "0", "]", "\n", "\n", "if", "situation_eval", ".", "shape", "[", "0", "]", "!=", "0", ":", "\n", "                ", "options_idx", ".", "append", "(", "np", ".", "where", "(", "np", ".", "array", "(", "cond1", ")", "<", "drone_stat", "[", "7", "]", ")", "[", "0", "]", ")", "\n", "options_idx_track", ".", "append", "(", "np", ".", "array", "(", "cond1", ")", "<", "drone_stat", "[", "7", "]", ")", "\n", "", "else", ":", "\n", "                ", "options_idx", ".", "append", "(", "np", ".", "where", "(", "(", "np", ".", "array", "(", "cond1", ")", "/", "10", ")", "<", "drone_stat", "[", "7", "]", ")", "[", "0", "]", ")", "# critical situation:: pick the closest base", "\n", "options_idx_track", ".", "append", "(", "(", "np", ".", "array", "(", "cond1", ")", "/", "10", ")", "<", "drone_stat", "[", "7", "]", ")", "\n", "\n", "", "times_all", ".", "append", "(", "cond1", ")", "\n", "\n", "", "options_len", "=", "[", "]", "\n", "for", "options", "in", "options_idx", ":", "\n", "            ", "options_len", ".", "append", "(", "len", "(", "options", ")", ")", "\n", "\n", "", "assigned_bases", "=", "np", ".", "zeros", "(", "shape", "=", "[", "drone_stats", ".", "shape", "[", "0", "]", ",", "3", "]", ")", "\n", "for", "d", "in", "range", "(", "drone_stats", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "most_critical_idx", "=", "np", ".", "argmin", "(", "options_len", ")", "\n", "most_critical_idx_ops", "=", "options_idx", "[", "int", "(", "most_critical_idx", ")", "]", "\n", "possible_times", "=", "np", ".", "array", "(", "times_all", "[", "d", "]", ")", "[", "most_critical_idx_ops", "]", "\n", "not_available_idx", "=", "np", ".", "where", "(", "options_idx_track", "[", "d", "]", "==", "False", ")", "[", "0", "]", ".", "tolist", "(", ")", "\n", "actual_index", "=", "np", ".", "argmin", "(", "possible_times", ")", "+", "len", "(", "np", ".", "where", "(", "np", ".", "array", "(", "not_available_idx", ")", "<", "np", ".", "argmin", "(", "possible_times", ")", ")", "[", "0", "]", ")", "\n", "if", "actual_index", "in", "available_bases", "[", "d", "]", ":", "\n", "# assigning the base", "\n", "                ", "assigned_bases", "[", "d", "]", "=", "base_locations", "[", "np", ".", "argmin", "(", "possible_times", ")", "]", "\n", "\n", "# updating the new capacities", "\n", "base_capacities", "[", "np", ".", "argmin", "(", "possible_times", ")", "]", "-=", "1", "\n", "available_bases_idx", "=", "np", ".", "where", "(", "np", ".", "array", "(", "base_capacities", ")", ">", "0", ")", "[", "0", "]", "\n", "available_bases", "=", "np", ".", "reshape", "(", "available_bases_idx", "*", "drone_stats", ".", "shape", "[", "0", "]", ",", "(", "drone_stats", ".", "shape", "[", "0", "]", ",", "len", "(", "available_bases_idx", ")", ")", ")", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "\">>> No service bases are currently available for this UAV. We'll try again during next itteration.\"", ")", "\n", "\n", "", "options_len", "[", "int", "(", "most_critical_idx", ")", "]", "=", "float", "(", "'Inf'", ")", "\n", "\n", "", "return", "assigned_bases", ".", "tolist", "(", ")", ",", "base_capacities", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.which_uav": [[407, 426], ["ValueError", "numpy.nonzero", "numpy.where"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "which_uav", "(", "drone_stats", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function distincs active and inactive UAVs for specific UAV classes\n\n        :param drone_stats: drone stat vector of a class\n        :return: active and inactive UAVs of the specified class and their indexes\n        \"\"\"", "\n", "\n", "if", "drone_stats", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! At least one of the drone stat matrices is not specified.\"", ")", "\n", "\n", "", "active_idx", "=", "np", ".", "nonzero", "(", "drone_stats", "[", ":", ",", "10", "]", ")", "[", "0", "]", "\n", "active", "=", "drone_stats", "[", "active_idx", ",", ":", "]", "\n", "\n", "inactive_idx", "=", "np", ".", "where", "(", "drone_stats", "[", ":", ",", "10", "]", "==", "0", ")", "[", "0", "]", "\n", "inactive", "=", "drone_stats", "[", "inactive_idx", ",", ":", "]", "\n", "\n", "return", "active", ",", "inactive", ",", "active_idx", ",", "inactive_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.at_pose": [[428, 454], ["numpy.abs", "numpy.linalg.norm", "numpy.nonzero", "ValueError", "numpy.arctan2", "numpy.sin", "numpy.cos"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "at_pose", "(", "states", "=", "None", ",", "poses", "=", "None", ",", "position_error", "=", "0.1", ",", "rotation_error", "=", "1e2", ")", ":", "\n", "        ", "\"\"\"\n        This function checks whether agents are \"close enough\" to required poses or not\n\n        :param states: 3xNum_agents numpy array of unicycle states\n        :param poses: 3xNum_agents numpy array of desired states\n        :param position_error: acceptable position error (default:: 0.1)\n        :param rotation_error: acceptable position error (default:: 1e2 - large value means we don't care about robot's heading at goal position)\n        :return: 1xNum_agents numpy index array of agents that are close enough\n        \"\"\"", "\n", "\n", "if", "states", "is", "None", "or", "poses", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Current states and desired poses must be specified.\"", ")", "\n", "\n", "# calculate rotation errors with angle wrapping", "\n", "", "res", "=", "states", "[", "2", ",", ":", "]", "-", "poses", "[", "2", ",", ":", "]", "\n", "res", "=", "np", ".", "abs", "(", "np", ".", "arctan2", "(", "np", ".", "sin", "(", "res", ")", ",", "np", ".", "cos", "(", "res", ")", ")", ")", "\n", "\n", "# calculate position errors", "\n", "pes", "=", "np", ".", "linalg", ".", "norm", "(", "states", "[", ":", "2", ",", ":", "]", "-", "poses", "[", ":", "2", ",", ":", "]", ",", "2", ",", "0", ")", "\n", "\n", "# determine which agents are done", "\n", "done", "=", "np", ".", "nonzero", "(", "(", "res", "<=", "rotation_error", ")", "&", "(", "pes", "<=", "position_error", ")", ")", "\n", "\n", "return", "done", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.time_to_base": [[456, 475], ["numpy.sqrt", "ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "time_to_base", "(", "states", "=", "None", ",", "depo", "=", "None", ",", "max_velocity", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function computs the distance between the position of a UAV to its depo\n\n        :param states: current UAV position\n        :param depo: UAV depo location\n        :param max_velocity: the maximum velocity by which UAV can fly\n        :return: the time required to get to the base [min]\n        \"\"\"", "\n", "\n", "if", "states", "is", "None", "or", "depo", "is", "None", "or", "max_velocity", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Current UAV position, depo location and UAV's maximum velocity must be specified.\"", ")", "\n", "\n", "", "pos_diff", "=", "states", "-", "depo", "\n", "dist", "=", "np", ".", "sqrt", "(", "(", "pos_diff", "[", "0", "]", "**", "2", ")", "+", "(", "pos_diff", "[", "1", "]", "**", "2", ")", "+", "(", "pos_diff", "[", "2", "]", "**", "2", ")", ")", "\n", "time", "=", "dist", "/", "max_velocity", "\n", "\n", "return", "time", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.update_sensed_map": [[477, 503], ["range", "ValueError", "drones_sense[].copy", "numpy.hstack", "numpy.concatenate", "numpy.delete", "numpy.delete"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "update_sensed_map", "(", "drones_sense", "=", "None", ",", "intensity_measures", "=", "None", ",", "sensed_map", "=", "None", ",", "active_idx", "=", "None", ",", "time_point", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function generates the sensed map according to drones sensing results (sensing and hybrid only)\n\n        :param drones_sense: list of drones sense results\n        :param intensity_measures: list of fire intensity measures from heat sensors\n        :param sensed_map: list of previously sensed map\n        :param active_idx: indexes of active UAVs\n        :param time_point: current time point\n        :return: updated sensed map for all drones\n        \"\"\"", "\n", "\n", "if", "drones_sense", "is", "None", "or", "intensity_measures", "is", "None", "or", "sensed_map", "is", "None", "or", "active_idx", "is", "None", "or", "time_point", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! drones sense list of previously sensed map and fire intensity measures are required to updated the map.\"", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "active_idx", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "sensed_spots", "=", "drones_sense", "[", "active_idx", "[", "i", "]", "]", ".", "copy", "(", ")", "\n", "if", "time_point", "==", "0", ":", "\n", "                ", "sensed_spots", "=", "np", ".", "delete", "(", "sensed_spots", ",", "0", ",", "0", ")", "\n", "", "current_measure", "=", "np", ".", "hstack", "(", "(", "sensed_spots", "[", "-", "intensity_measures", ".", "shape", "[", "0", "]", ":", ",", ":", "]", ",", "intensity_measures", ")", ")", "\n", "sensed_map", "[", "active_idx", "[", "i", "]", "]", "=", "np", ".", "concatenate", "(", "(", "sensed_map", "[", "active_idx", "[", "i", "]", "]", ",", "current_measure", ")", ")", "\n", "if", "time_point", "==", "0", ":", "\n", "                ", "sensed_map", "[", "active_idx", "[", "i", "]", "]", "=", "np", ".", "delete", "(", "sensed_map", "[", "active_idx", "[", "i", "]", "]", ",", "0", ",", "0", ")", "\n", "\n", "", "", "return", "sensed_map", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.pick_a_random_goal": [[505, 559], ["range", "ValueError", "len", "numpy.random.randint", "random_goals.append", "random_goal_ind.append", "numpy.random.randint", "numpy.hstack", "len", "random_goal_ind.append", "numpy.random.randint", "len", "random_goal_ind.append", "numpy.random.randint", "random_goal_ind.append", "len", "ValueError", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "pick_a_random_goal", "(", "previous_sensed_map", "=", "None", ",", "safe_altitudes", "=", "None", ",", "uav_class", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function generates random goals for active drones to move to\n\n        :param previous_sensed_map: most recent sensed terrain map\n        :param safe_altitudes: safe altitudes associated with this all classes of UAVs\n        :param uav_class: class of the current UAVs\n        :return: a random goal\n        \"\"\"", "\n", "\n", "if", "previous_sensed_map", "is", "None", "or", "safe_altitudes", "is", "None", "or", "uav_class", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Function 'pick_a_random_goal()' needs ALL its input argument to be defined (CANNOT be None).\"", ")", "\n", "\n", "# generating random points while \"trying\" to avoid choosing similar points", "\n", "", "random_goal_ind", "=", "[", "]", "\n", "for", "d", "in", "range", "(", "len", "(", "previous_sensed_map", ")", ")", ":", "\n", "            ", "rnd_ind", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "len", "(", "previous_sensed_map", "[", "0", "]", ")", ")", "\n", "if", "rnd_ind", "not", "in", "random_goal_ind", ":", "\n", "                ", "random_goal_ind", ".", "append", "(", "rnd_ind", ")", "\n", "", "else", ":", "\n", "                ", "rnd_ind", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "len", "(", "previous_sensed_map", "[", "0", "]", ")", ")", "\n", "if", "rnd_ind", "not", "in", "random_goal_ind", ":", "\n", "                    ", "random_goal_ind", ".", "append", "(", "rnd_ind", ")", "\n", "", "else", ":", "\n", "                    ", "rnd_ind", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "len", "(", "previous_sensed_map", "[", "0", "]", ")", ")", "\n", "if", "rnd_ind", "not", "in", "random_goal_ind", ":", "\n", "                        ", "random_goal_ind", ".", "append", "(", "rnd_ind", ")", "\n", "", "else", ":", "\n", "                        ", "rnd_ind", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "len", "(", "previous_sensed_map", "[", "0", "]", ")", ")", "\n", "random_goal_ind", ".", "append", "(", "rnd_ind", ")", "\n", "\n", "", "", "", "", "counter", "=", "0", "\n", "random_goals", "=", "[", "]", "\n", "for", "current_drones_belief", "in", "previous_sensed_map", ":", "\n", "\n", "# evaluating the UAV half-angle", "\n", "            ", "if", "uav_class", "[", "counter", "]", "==", "2", ":", "# class of fixed-wings", "\n", "                ", "safe_altitude", "=", "safe_altitudes", "[", "2", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "1", ":", "# class of multi-rotors", "\n", "                ", "safe_altitude", "=", "safe_altitudes", "[", "1", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "0", ":", "# class of ground robots", "\n", "                ", "safe_altitude", "=", "safe_altitudes", "[", "0", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "3", ":", "# class of hybrid UAVs", "\n", "                ", "safe_altitude", "=", "safe_altitudes", "[", "3", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\">>> Oops! Wrong UAV class code specified. Options are integers between 0-3. Check documentation for details.\"", ")", "\n", "\n", "# generating a random goal", "\n", "", "random_goals", ".", "append", "(", "np", ".", "hstack", "(", "(", "current_drones_belief", "[", "random_goal_ind", "[", "counter", "]", "]", "[", "0", ":", "2", "]", ",", "safe_altitude", ")", ")", ")", "\n", "\n", "counter", "+=", "1", "\n", "\n", "", "return", "random_goals", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fighting_uav_goal_assignment": [[561, 630], ["ValueError", "numpy.where", "numpy.array", "len", "[].tolist", "len", "numpy.linalg.norm", "numpy.hstack", "assigned_uavs_idx.append", "[].tolist.pop", "numpy.where", "ValueError", "numpy.array", "[].tolist.pop", "len", "numpy.hstack", "[].tolist.pop", "numpy.array", "numpy.array", "numpy.linalg.norm", "len", "numpy.array", "len", "[].tolist", "numpy.array", "numpy.array"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "fighting_uav_goal_assignment", "(", "drone_stats", "=", "None", ",", "ready_idx", "=", "None", ",", "fighting_paths", "=", "None", ",", "fighting_uav_goals", "=", "None", ",", "time_step", "=", "None", ",", "\n", "safe_altitudes", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function assigns goals to the fighting UAVs\n\n        :param drone_stats: fighting UAV stats\n        :param ready_idx: ready fighting UAVs indexes\n        :param fighting_paths: generated fighting paths\n        :param fighting_uav_goals: initialized fighting UAV goals to be stored\n        :param time_step: current time point\n        :param safe_altitudes: safe altitude\n        :return: fighting UAV goals and index of assigned UAVs\n        \"\"\"", "\n", "\n", "# initial check and parsing data", "\n", "if", "drone_stats", "is", "None", "or", "fighting_paths", "is", "None", "or", "fighting_uav_goals", "is", "None", "or", "safe_altitudes", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! At least drone stats, fighting paths and fighting UAV goals must be specified.\"", ")", "\n", "\n", "", "ready_idx", "=", "np", ".", "where", "(", "drone_stats", "[", ":", ",", "10", "]", "==", "1", ")", "if", "ready_idx", "is", "None", "else", "ready_idx", "\n", "time_step", "=", "0.01", "if", "time_step", "is", "None", "else", "time_step", "\n", "\n", "uav_class", "=", "drone_stats", "[", "ready_idx", ",", "9", "]", "\n", "distance_threshold", "=", "time_step", "*", "drone_stats", "[", "ready_idx", ",", "8", "]", "\n", "\n", "counter", "=", "0", "\n", "assigned_uavs_idx", "=", "[", "]", "\n", "for", "d", "in", "drone_stats", "[", "ready_idx", ",", "0", ":", "2", "]", ":", "\n", "\n", "# evaluating the UAV half-angle", "\n", "            ", "if", "uav_class", "[", "counter", "]", "==", "2", ":", "# class of fixed-wings", "\n", "                ", "safe_altitude", "=", "safe_altitudes", "[", "2", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "1", ":", "# class of multi-rotors", "\n", "                ", "safe_altitude", "=", "safe_altitudes", "[", "1", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "0", ":", "# class of ground robots", "\n", "                ", "safe_altitude", "=", "safe_altitudes", "[", "0", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "3", ":", "# class of hybrid UAVs", "\n", "                ", "safe_altitude", "=", "safe_altitudes", "[", "3", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\">>> Oops! Wrong UAV class code specified. Options are integers between 0-3. Check documentation for details.\"", ")", "\n", "\n", "", "if", "len", "(", "fighting_paths", "[", "ready_idx", "[", "counter", "]", "]", ")", "!=", "0", ":", "\n", "                ", "this_path", "=", "fighting_paths", "[", "ready_idx", "[", "counter", "]", "]", "[", "0", "]", ".", "tolist", "(", ")", "\n", "if", "len", "(", "this_path", ")", "!=", "0", ":", "\n", "                    ", "if", "np", ".", "linalg", ".", "norm", "(", "d", "-", "np", ".", "array", "(", "this_path", "[", "0", "]", ")", ")", ">=", "distance_threshold", "[", "counter", "]", ":", "\n", "                        ", "fighting_uav_goals", "[", "ready_idx", "[", "counter", "]", ",", "0", ":", "3", "]", "=", "np", ".", "hstack", "(", "(", "np", ".", "array", "(", "this_path", "[", "0", "]", ")", ",", "safe_altitude", ")", ")", "\n", "assigned_uavs_idx", ".", "append", "(", "ready_idx", "[", "counter", "]", ")", "\n", "this_path", ".", "pop", "(", "0", ")", "\n", "fighting_paths", "[", "ready_idx", "[", "counter", "]", "]", "=", "[", "np", ".", "array", "(", "this_path", ")", "]", "\n", "", "else", ":", "\n", "                        ", "while", "np", ".", "where", "(", "np", ".", "linalg", ".", "norm", "(", "d", "-", "np", ".", "array", "(", "this_path", "[", "0", "]", ")", ")", "<", "distance_threshold", "[", "counter", "]", ")", ":", "\n", "                            ", "this_path", ".", "pop", "(", "0", ")", "\n", "if", "len", "(", "this_path", ")", "==", "0", ":", "\n", "                                ", "if", "len", "(", "fighting_paths", "[", "ready_idx", "[", "counter", "+", "1", "]", "]", ")", "!=", "0", ":", "\n", "                                    ", "this_path", "=", "fighting_paths", "[", "ready_idx", "[", "counter", "+", "1", "]", "]", "[", "0", "]", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "                                    ", "drone_stats", "[", "ready_idx", "[", "counter", "]", ",", "10", "]", "=", "0", "# updating the fighting UAV stats to inactive NOT @ goal (retreat!)", "\n", "", "", "", "if", "len", "(", "this_path", "[", "0", "]", ")", "==", "0", ":", "\n", "                            ", "drone_stats", "[", "ready_idx", "[", "counter", "]", ",", "10", "]", "=", "0", "# updating the fighting UAV stats to inactive NOT @ goal (retreat!)", "\n", "", "else", ":", "\n", "                            ", "fighting_uav_goals", "[", "ready_idx", "[", "counter", "]", ",", "0", ":", "3", "]", "=", "np", ".", "hstack", "(", "(", "np", ".", "array", "(", "this_path", "[", "0", "]", ")", ",", "safe_altitude", ")", ")", "\n", "this_path", ".", "pop", "(", "0", ")", "\n", "fighting_paths", "[", "ready_idx", "[", "counter", "]", "]", "=", "[", "np", ".", "array", "(", "this_path", ")", "]", "\n", "\n", "", "", "counter", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "pass", "\n", "\n", "", "", "", "return", "fighting_uav_goals", ",", "fighting_paths", ",", "np", ".", "array", "(", "assigned_uavs_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.generate_animation": [[632, 664], ["images.sort", "cv2.imread", "cv2.VideoWriter", "cv2.destroyAllWindows", "cv2.VideoWriter.release", "print", "os.path.join", "cv2.VideoWriter.write", "os.listdir", "img.endswith", "cv2.imread", "int", "os.path.join", "f.split"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "generate_animation", "(", "image_folder", "=", "None", ",", "video_name", "=", "None", ",", "img_format", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function generates and saves an *.avi format video animation from saved images\n\n        :param image_folder: where images are saved? [default:: images/ in current directory]\n        :param video_name: what should the video name be? [default:: animation.avi]\n        :param img_format: what type of images you wanna load? [default:: *.png]\n        :return:\n        \"\"\"", "\n", "\n", "# specifying name/format variables", "\n", "image_folder", "=", "'images'", "if", "image_folder", "is", "None", "else", "image_folder", "\n", "video_name", "=", "'animation.avi'", "if", "video_name", "is", "None", "else", "video_name", "\n", "img_format", "=", "'.png'", "if", "img_format", "is", "None", "else", "img_format", "\n", "\n", "# load images", "\n", "images", "=", "[", "img", "for", "img", "in", "os", ".", "listdir", "(", "image_folder", ")", "if", "img", ".", "endswith", "(", "img_format", ")", "]", "\n", "images", ".", "sort", "(", "key", "=", "lambda", "f", ":", "int", "(", "f", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", ")", "\n", "frame", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "image_folder", ",", "images", "[", "0", "]", ")", ")", "\n", "height", ",", "width", ",", "layers", "=", "frame", ".", "shape", "\n", "# initialize video writer", "\n", "video", "=", "cv2", ".", "VideoWriter", "(", "video_name", ",", "0", ",", "1", ",", "(", "width", ",", "height", ")", ")", "\n", "\n", "# create video", "\n", "for", "image", "in", "images", ":", "\n", "            ", "video", ".", "write", "(", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "image_folder", ",", "image", ")", ")", ")", "\n", "\n", "# save video", "\n", "", "cv2", ".", "destroyAllWindows", "(", ")", "\n", "video", ".", "release", "(", ")", "\n", "print", "(", "\">>> Done! Your animation is saved as <\"", "+", "video_name", "+", "\" >\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.pass_sensing_info": [[666, 713], ["ValueError", "Utilities.fov_corners", "Utilities.in_fov", "len", "passed_sensing_info.append", "current_sensing_info.append", "numpy.array", "ValueError"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_corners", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.in_fov"], ["", "@", "staticmethod", "\n", "def", "pass_sensing_info", "(", "drone_loci", "=", "None", ",", "half_angles", "=", "None", ",", "uav_class", "=", "None", ",", "sensed_map", "=", "None", ",", "passed_sensing_info", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function gathers sensing info and passes them to fighting UAVs\n\n        :param drone_loci: current UAv position\n        :param half_angles: camera half-angles list\n        :param uav_class: current UAV class\n        :param sensed_map: most recent sensed fire map\n        :param passed_sensing_info: passed sensing info to fighting UAVs\n        :return: passed sensing info to fighting UAVs\n        \"\"\"", "\n", "\n", "if", "drone_loci", "is", "None", "or", "half_angles", "is", "None", "or", "uav_class", "is", "None", "or", "sensed_map", "is", "None", "or", "passed_sensing_info", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Function 'pass_sensing_info()' needs ALL of its input arguments to work!\"", ")", "\n", "\n", "", "current_sensing_info", "=", "[", "]", "\n", "counter", "=", "0", "\n", "for", "d", "in", "drone_loci", ":", "\n", "\n", "# evaluating the UAV half-angle", "\n", "            ", "if", "uav_class", "[", "counter", "]", "==", "2", ":", "# class of fixed-wings", "\n", "                ", "half_angle", "=", "half_angles", "[", "2", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "1", ":", "# class of multi-rotors", "\n", "                ", "half_angle", "=", "half_angles", "[", "1", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "0", ":", "# class of ground robots", "\n", "                ", "half_angle", "=", "half_angles", "[", "0", "]", "\n", "", "elif", "uav_class", "[", "counter", "]", "==", "3", ":", "# class of hybrid UAVs", "\n", "                ", "half_angle", "=", "half_angles", "[", "3", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\">>> Oops! Wrong UAV class code specified. Options are integers between 0-3. Check documentation for details.\"", ")", "\n", "\n", "# obtaining the respective FOV coordinates", "\n", "", "_", ",", "fov_corners_tr_bl", "=", "Utilities", ".", "fov_corners", "(", "drone_loci", "=", "d", ",", "half_angle", "=", "half_angle", ")", "\n", "bl_x", ",", "bl_y", "=", "fov_corners_tr_bl", "[", "1", ",", "0", "]", ",", "fov_corners_tr_bl", "[", "1", ",", "1", "]", "# bottom left coordinates", "\n", "tr_x", ",", "tr_y", "=", "fov_corners_tr_bl", "[", "0", ",", "0", "]", ",", "fov_corners_tr_bl", "[", "0", ",", "1", "]", "# top right coordinattes", "\n", "for", "point", "in", "sensed_map", ":", "\n", "                ", "x", "=", "point", "[", "0", "]", "\n", "y", "=", "point", "[", "1", "]", "\n", "if", "Utilities", ".", "in_fov", "(", "bl_x", "=", "bl_x", ",", "bl_y", "=", "bl_y", ",", "tr_x", "=", "tr_x", ",", "tr_y", "=", "tr_y", ",", "x", "=", "x", ",", "y", "=", "y", ")", ":", "\n", "                    ", "current_sensing_info", ".", "append", "(", "point", ")", "\n", "\n", "", "", "if", "len", "(", "current_sensing_info", ")", "!=", "0", ":", "\n", "                ", "passed_sensing_info", ".", "append", "(", "np", ".", "array", "(", "current_sensing_info", ")", ")", "\n", "", "counter", "+=", "1", "\n", "\n", "", "return", "passed_sensing_info", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_corners": [[715, 740], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.concatenate", "numpy.concatenate", "ValueError", "numpy.tan", "numpy.tan", "numpy.concatenate", "numpy.concatenate"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "fov_corners", "(", "drone_loci", "=", "None", ",", "half_angle", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function returns the fov coordinates of an UAV according to its camera half-angles\n\n        :param drone_loci: current UAV position\n        :param half_angle: UAV's camera half-angles\n        :return: FOV coordinates\n        \"\"\"", "\n", "\n", "if", "drone_loci", "is", "None", "or", "half_angle", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Drone position and its camera half angles must be defined\"", ")", "\n", "\n", "", "half_width", "=", "drone_loci", "[", "2", "]", "*", "np", ".", "tan", "(", "half_angle", "[", "0", "]", ")", "\n", "half_length", "=", "drone_loci", "[", "2", "]", "*", "np", ".", "tan", "(", "half_angle", "[", "1", "]", ")", "\n", "\n", "fov_corners_1", "=", "np", ".", "array", "(", "[", "[", "drone_loci", "[", "0", "]", "+", "half_length", ",", "drone_loci", "[", "1", "]", "+", "half_width", "]", "]", ")", "# top right", "\n", "fov_corners_2", "=", "np", ".", "array", "(", "[", "[", "drone_loci", "[", "0", "]", "+", "half_length", ",", "drone_loci", "[", "1", "]", "-", "half_width", "]", "]", ")", "# bottom right", "\n", "fov_corners_3", "=", "np", ".", "array", "(", "[", "[", "drone_loci", "[", "0", "]", "-", "half_length", ",", "drone_loci", "[", "1", "]", "+", "half_width", "]", "]", ")", "# top left", "\n", "fov_corners_4", "=", "np", ".", "array", "(", "[", "[", "drone_loci", "[", "0", "]", "-", "half_length", ",", "drone_loci", "[", "1", "]", "-", "half_width", "]", "]", ")", "# bottom left", "\n", "\n", "fov_corners_all", "=", "np", ".", "concatenate", "(", "(", "np", ".", "concatenate", "(", "(", "fov_corners_1", ",", "fov_corners_2", ")", ")", ",", "np", ".", "concatenate", "(", "(", "fov_corners_3", ",", "fov_corners_4", ")", ")", ")", ")", "\n", "fov_corners_tr_bl", "=", "np", ".", "concatenate", "(", "(", "fov_corners_1", ",", "fov_corners_4", ")", ")", "\n", "\n", "return", "fov_corners_all", ",", "fov_corners_tr_bl", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_area": [[742, 766], ["numpy.linalg.norm", "numpy.linalg.norm", "ValueError", "numpy.tan", "numpy.tan"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "fov_area", "(", "drone_loci", "=", "None", ",", "half_angle", "=", "None", ",", "fov_corners_all", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function calculates the fov area for an UAV\n\n        :param drone_loci: current UAV position\n        :param half_angle: UAV's camera half-angles\n        :param fov_corners_all: FOV corners, if possible [optional]\n        :return: FOV area\n        \"\"\"", "\n", "\n", "if", "fov_corners_all", "is", "None", ":", "\n", "            ", "if", "drone_loci", "is", "None", "or", "half_angle", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\">>> Oops! Enter drone position and camera half angles as inputs.\"", ")", "\n", "\n", "", "fov_width", "=", "2", "*", "(", "drone_loci", "[", "2", "]", "*", "np", ".", "tan", "(", "half_angle", "[", "0", "]", ")", ")", "\n", "fov_length", "=", "2", "*", "(", "drone_loci", "[", "2", "]", "*", "np", ".", "tan", "(", "half_angle", "[", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "fov_width", "=", "np", ".", "linalg", ".", "norm", "(", "fov_corners_all", "[", "0", ",", ":", "]", "-", "fov_corners_all", "[", "1", ",", ":", "]", ")", "\n", "fov_length", "=", "np", ".", "linalg", ".", "norm", "(", "fov_corners_all", "[", "1", ",", ":", "]", "-", "fov_corners_all", "[", "3", ",", ":", "]", ")", "\n", "\n", "", "area", "=", "fov_width", "*", "fov_length", "\n", "\n", "return", "area", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.in_fov": [[768, 789], ["ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "in_fov", "(", "bl_x", "=", "None", ",", "bl_y", "=", "None", ",", "tr_x", "=", "None", ",", "tr_y", "=", "None", ",", "x", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function checks if a specific point is inside the FOV of an UAV. The FOV is specified by two of its coordinates\n\n        :param bl_x: x bottom left of FOV\n        :param bl_y: y bottom left of FOV\n        :param tr_x: x top right of FOV\n        :param tr_y: y top right of FOV\n        :param x: x of the point to be checked\n        :param y: y of the point to be checked\n        :return: boolean flag\n        \"\"\"", "\n", "\n", "if", "bl_x", "is", "None", "or", "bl_y", "is", "None", "or", "tr_x", "is", "None", "or", "tr_y", "is", "None", "or", "x", "is", "None", "or", "y", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Function 'in_fov()' needs ALL of its input arguments to work!\"", ")", "\n", "\n", "", "if", "x", ">=", "bl_x", "and", "x", "<=", "tr_x", "and", "y", ">=", "bl_y", "and", "y", "<=", "tr_y", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.init_visualization_2D": [[791, 914], ["matplotlib.figure", "matplotlib.gca", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.text", "matplotlib.xlim", "matplotlib.ylim", "matplotlib.legend", "matplotlib.show", "matplotlib.pause", "ValueError", "matplotlib.patches.Rectangle", "matplotlib.gca.add_patch", "matplotlib.savefig", "ValueError", "Utilities.fov_corners", "numpy.array", "matplotlib.plot", "SensingFOVsAll.append", "Utilities.fov_corners", "numpy.array", "matplotlib.plot", "HybridFOVsAll.append", "Utilities.fov_corners", "numpy.array", "matplotlib.plot", "FightingFOVsAll.append", "str", "str", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "str", "ValueError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_corners", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_corners", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_corners"], ["", "", "@", "staticmethod", "\n", "def", "init_visualization_2D", "(", "time_point", "=", "None", ",", "terrain_map", "=", "None", ",", "base_locations", "=", "None", ",", "base_lengths", "=", "None", ",", "base_widths", "=", "None", ",", "sensing_drone_stats", "=", "None", ",", "\n", "hybrid_drone_stats", "=", "None", ",", "fighting_drone_stats", "=", "None", ",", "half_angles", "=", "None", ",", "fov_plot_flg", "=", "False", ",", "movie_generation_flg", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        this function initializes the 2D visualization for the Heterogeneous FireFighting Robots environment\n\n        :param time_point: current time point\n        :param terrain_map: current fire map\n        :param base_locations: base locations\n        :param base_lengths: base lengths\n        :param base_widths:base widths\n        :param sensing_drone_stats: sensing UAV stats\n        :param hybrid_drone_stats: hybrid UAV stats\n        :param fighting_drone_stats: fighting UAV stats\n        :param half_angles: all half-angles of different UAV classes\n        :param fov_plot_flg: declare if you wanna see the fovs or not\n        :param movie_generation_flg: movie generation flag\n        :return: plot objects, also plots on current figure\n        \"\"\"", "\n", "\n", "if", "time_point", "is", "None", "or", "terrain_map", "is", "None", "or", "base_locations", "is", "None", "or", "base_lengths", "is", "None", "or", "base_widths", "is", "None", "or", "sensing_drone_stats", "is", "None", "or", "hybrid_drone_stats", "is", "None", "or", "fighting_drone_stats", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Current time point, UAV stats, fire map and base locations and sizes are required for visualization\"", ")", "\n", "\n", "", "if", "fov_plot_flg", ":", "\n", "            ", "if", "half_angles", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\">>> Oops! If you wanna plot the FOVs, you must input the half-angles\"", ")", "\n", "\n", "# creating figure object", "\n", "", "", "fig_2d", "=", "plt", ".", "figure", "(", "1", ",", "figsize", "=", "[", "15", ",", "12", "]", ")", "# this is where the online simulation animation will happen!", "\n", "ax_2d", "=", "plt", ".", "gca", "(", ")", "\n", "\n", "# initial plots", "\n", "FireMap", ",", "=", "plt", ".", "plot", "(", "terrain_map", "[", ":", ",", "0", "]", ",", "terrain_map", "[", ":", ",", "1", "]", ",", "'r*'", ",", "markersize", "=", "5", ",", "label", "=", "'fire spots'", ")", "# initial fire map", "\n", "PrunedFires", ",", "=", "[", "]", ",", "# initial pruned fires list", "\n", "UAVsSense", ",", "=", "[", "]", ",", "# initial UAVs sensed map", "\n", "SensingLoc", ",", "=", "plt", ".", "plot", "(", "sensing_drone_stats", "[", ":", ",", "0", "]", ",", "sensing_drone_stats", "[", ":", ",", "1", "]", ",", "'bX'", ",", "markersize", "=", "8", ",", "label", "=", "'sensing UAVs'", ")", "\n", "HybridLoc", ",", "=", "plt", ".", "plot", "(", "hybrid_drone_stats", "[", ":", ",", "0", "]", ",", "hybrid_drone_stats", "[", ":", ",", "1", "]", ",", "'gh'", ",", "markersize", "=", "10", ",", "label", "=", "'hybrid UAVs'", ")", "\n", "FightingLoc", ",", "=", "plt", ".", "plot", "(", "fighting_drone_stats", "[", ":", ",", "0", "]", ",", "fighting_drone_stats", "[", ":", ",", "1", "]", ",", "'md'", ",", "markersize", "=", "12", ",", "label", "=", "'fighting UAVs'", ")", "\n", "\n", "# plotting FOVs", "\n", "SensingFOVsAll", ",", "HybridFOVsAll", ",", "FightingFOVsAll", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "if", "fov_plot_flg", ":", "\n", "            ", "for", "this_uav", "in", "sensing_drone_stats", ":", "\n", "# evaluating the UAV half-angle", "\n", "                ", "if", "this_uav", "[", "9", "]", "==", "2", ":", "# class of fixed-wings", "\n", "                    ", "half_angle", "=", "half_angles", "[", "2", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "1", ":", "# class of multi-rotors", "\n", "                    ", "half_angle", "=", "half_angles", "[", "1", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "0", ":", "# class of ground robots", "\n", "                    ", "half_angle", "=", "half_angles", "[", "0", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "3", ":", "# class of hybrid UAVs", "\n", "                    ", "half_angle", "=", "half_angles", "[", "3", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "\">>> Oops! Wrong UAV class code specified. Options are integers between 0-3. Check documentation for details.\"", ")", "\n", "", "fov_c", ",", "_", "=", "Utilities", ".", "fov_corners", "(", "drone_loci", "=", "this_uav", ",", "half_angle", "=", "half_angle", ")", "\n", "fov_edges", "=", "np", ".", "array", "(", "[", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "1", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "3", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "2", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", "]", ")", "\n", "SensingFOV", ",", "=", "plt", ".", "plot", "(", "fov_edges", "[", ":", ",", "0", "]", ",", "fov_edges", "[", ":", ",", "1", "]", ",", "'b-'", ")", "\n", "SensingFOVsAll", ".", "append", "(", "SensingFOV", ")", "\n", "", "for", "this_uav", "in", "hybrid_drone_stats", ":", "\n", "# evaluating the UAV half-angle", "\n", "                ", "if", "this_uav", "[", "9", "]", "==", "2", ":", "# class of fixed-wings", "\n", "                    ", "half_angle", "=", "half_angles", "[", "2", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "1", ":", "# class of multi-rotors", "\n", "                    ", "half_angle", "=", "half_angles", "[", "1", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "0", ":", "# class of ground robots", "\n", "                    ", "half_angle", "=", "half_angles", "[", "0", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "3", ":", "# class of hybrid UAVs", "\n", "                    ", "half_angle", "=", "half_angles", "[", "3", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "\">>> Oops! Wrong UAV class code specified. Options are integers between 0-3. Check documentation for details.\"", ")", "\n", "", "fov_c", ",", "_", "=", "Utilities", ".", "fov_corners", "(", "drone_loci", "=", "this_uav", ",", "half_angle", "=", "half_angle", ")", "\n", "fov_edges", "=", "np", ".", "array", "(", "[", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "1", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "3", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "2", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", "]", ")", "\n", "HybridFOV", ",", "=", "plt", ".", "plot", "(", "fov_edges", "[", ":", ",", "0", "]", ",", "fov_edges", "[", ":", ",", "1", "]", ",", "'g-'", ")", "\n", "HybridFOVsAll", ".", "append", "(", "HybridFOV", ")", "\n", "", "for", "this_uav", "in", "fighting_drone_stats", ":", "\n", "# evaluating the UAV half-angle", "\n", "                ", "if", "this_uav", "[", "9", "]", "==", "2", ":", "# class of fixed-wings", "\n", "                    ", "half_angle", "=", "half_angles", "[", "2", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "1", ":", "# class of multi-rotors", "\n", "                    ", "half_angle", "=", "half_angles", "[", "1", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "0", ":", "# class of ground robots", "\n", "                    ", "half_angle", "=", "half_angles", "[", "0", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "3", ":", "# class of hybrid UAVs", "\n", "                    ", "half_angle", "=", "half_angles", "[", "3", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "\">>> Oops! Wrong UAV class code specified. Options are integers between 0-3. Check documentation for details.\"", ")", "\n", "", "fov_c", ",", "_", "=", "Utilities", ".", "fov_corners", "(", "drone_loci", "=", "this_uav", ",", "half_angle", "=", "half_angle", ")", "\n", "fov_edges", "=", "np", ".", "array", "(", "[", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "1", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "3", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "2", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", "]", ")", "\n", "FightingFOV", ",", "=", "plt", ".", "plot", "(", "fov_edges", "[", ":", ",", "0", "]", ",", "fov_edges", "[", ":", ",", "1", "]", ",", "'m-'", ")", "\n", "FightingFOVsAll", ".", "append", "(", "FightingFOV", ")", "\n", "\n", "# plotting bases", "\n", "", "", "counter", "=", "0", "\n", "for", "base", "in", "base_locations", ":", "\n", "            ", "lf_x", "=", "base", "[", "0", "]", "-", "base_lengths", "[", "counter", "]", "/", "2", "\n", "lf_y", "=", "base", "[", "1", "]", "-", "base_widths", "[", "counter", "]", "/", "2", "\n", "lf_xy", "=", "(", "lf_x", ",", "lf_y", ")", "\n", "string", "=", "'base #'", "+", "str", "(", "counter", "+", "1", ")", "\n", "rect", "=", "Rectangle", "(", "lf_xy", ",", "base_lengths", "[", "counter", "]", ",", "base_widths", "[", "counter", "]", ",", "linewidth", "=", "2", ",", "edgecolor", "=", "'k'", ",", "facecolor", "=", "'cyan'", ",", "label", "=", "string", ")", "\n", "ax_2d", ".", "add_patch", "(", "rect", ")", "\n", "counter", "+=", "1", "\n", "\n", "# figure reports and specifications", "\n", "", "plt", ".", "xlabel", "(", "'X axis [m]'", ")", "\n", "plt", ".", "ylabel", "(", "'Y axis [m]'", ")", "\n", "plt", ".", "title", "(", "'Heterogeneous Firefighting Robots Realtime Demonstration'", ")", "\n", "TimeCounter", "=", "plt", ".", "text", "(", "420", ",", "10", ",", "'>> Time = '", "+", "str", "(", "time_point", ")", "+", "' [min]'", ",", "fontweight", "=", "'bold'", ")", "\n", "plt", ".", "xlim", "(", "[", "0", ",", "500", "]", ")", "\n", "plt", ".", "ylim", "(", "[", "0", ",", "500", "]", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", "block", "=", "False", ")", "\n", "plt", ".", "pause", "(", "0.000005", ")", "\n", "\n", "# storing the plot objects for next itteration", "\n", "plot_objects", "=", "[", "FireMap", ",", "PrunedFires", ",", "UAVsSense", ",", "SensingLoc", ",", "HybridLoc", ",", "FightingLoc", ",", "\n", "TimeCounter", ",", "SensingFOVsAll", ",", "HybridFOVsAll", ",", "FightingFOVsAll", "]", "\n", "\n", "# animation movie generation", "\n", "if", "movie_generation_flg", ":", "\n", "            ", "plt", ".", "savefig", "(", "'images/'", "+", "str", "(", "time_point", "+", "1", ")", "+", "'.png'", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "", "return", "plot_objects", ",", "fig_2d", ",", "ax_2d", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.online_visualization_2D": [[916, 1087], ["FireMap.remove", "SensingLoc.remove", "HybridLoc.remove", "FightingLoc.remove", "matplotlib.text.remove", "range", "range", "range", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.text", "matplotlib.xlim", "matplotlib.ylim", "matplotlib.legend", "matplotlib.show", "matplotlib.pause", "ValueError", "ValueError", "PrunedFires.remove", "UAVsSense.remove", "len", "SensingFOV.remove", "len", "HybridFOV.remove", "len", "FightingFOV.remove", "matplotlib.savefig", "ValueError", "ValueError", "numpy.reshape", "numpy.reshape", "numpy.reshape", "Utilities.fov_corners", "numpy.array", "matplotlib.plot", "SensingFOVsAll.append", "Utilities.fov_corners", "numpy.array", "matplotlib.plot", "HybridFOVsAll.append", "Utilities.fov_corners", "numpy.array", "matplotlib.plot", "FightingFOVsAll.append", "len", "matplotlib.plot", "len", "matplotlib.plot", "len", "matplotlib.plot", "str", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "fov_c[].tolist", "str", "ValueError", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_corners", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_corners", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.Utilities.fov_corners"], ["", "@", "staticmethod", "\n", "def", "online_visualization_2D", "(", "plot_objects", "=", "None", ",", "fig_2d", "=", "None", ",", "ax_2d", "=", "None", ",", "time_point", "=", "None", ",", "terrain_map", "=", "None", ",", "pruned_fires", "=", "None", ",", "\n", "sensing_drone_stats", "=", "None", ",", "hybrid_drone_stats", "=", "None", ",", "fighting_drone_stats", "=", "None", ",", "drones_sensed_map", "=", "None", ",", "\n", "sensing_traj", "=", "None", ",", "hybrid_traj", "=", "None", ",", "fighting_traj", "=", "None", ",", "half_angles", "=", "None", ",", "traj_plot_flg", "=", "False", ",", "fov_plot_flg", "=", "False", ",", "\n", "movie_generation_flg", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        this function performs the realtime 2D visualization of the Heterogeneous FireFighting Robots environment\n\n        :param plot_objects: all previously stored plot objects\n        :param fig_2d: 2D figure object\n        :param ax_2d: 2D axis object\n        :param time_point: current time point\n        :param terrain_map: current fire map\n        :param pruned_fires: current list of pruned fires\n        :param sensing_drone_stats: sensing UAV stats\n        :param hybrid_drone_stats: hybrid UAV stats\n        :param fighting_drone_stats: fighting UAV stats\n        :param drones_sensed_map: UAVs sensed map\n        :param sensing_traj: sensing UAVs trajectory\n        :param hybrid_traj: hybrid UAVs trajectory\n        :param fighting_traj: fighting UAVs trajectory\n        :param half_angles: all half-angles of different UAV classes\n        :param fov_plot_flg: declare if you wanna see the fovs or not\n        :param traj_plot_flg: declare if you wanna plot the trajectories or not\n        :param movie_generation_flg: movie generation flag\n        :return: plot objects, also plots on current figure\n        \"\"\"", "\n", "\n", "if", "plot_objects", "is", "None", "or", "fig_2d", "is", "None", "or", "ax_2d", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Looks like the plot objects are NOT passed. Check the initial itteration or the input arguments.\"", ")", "\n", "\n", "", "if", "time_point", "is", "None", "or", "terrain_map", "is", "None", "or", "pruned_fires", "is", "None", "or", "sensing_drone_stats", "is", "None", "or", "hybrid_drone_stats", "is", "None", "or", "fighting_drone_stats", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Current time point, UAV stats, fire map and pruned fires list are required for visualization\"", ")", "\n", "\n", "", "if", "traj_plot_flg", ":", "\n", "            ", "if", "sensing_traj", "is", "None", "or", "hybrid_traj", "is", "None", "or", "fighting_traj", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\">>> Oops! If you wanna plot the trajectories, you must input the saved trajectories\"", ")", "\n", "\n", "", "", "if", "fov_plot_flg", ":", "\n", "            ", "if", "half_angles", "is", "None", ":", "\n", "                ", "raise", "ValueError", "(", "\">>> Oops! If you wanna plot the FOVs, you must input the half-angles\"", ")", "\n", "\n", "# parsing the plot objects", "\n", "", "", "FireMap", ",", "=", "plot_objects", "[", "0", "]", ",", "\n", "PrunedFires", ",", "=", "plot_objects", "[", "1", "]", ",", "\n", "UAVsSense", ",", "=", "plot_objects", "[", "2", "]", ",", "\n", "SensingLoc", ",", "=", "plot_objects", "[", "3", "]", ",", "\n", "HybridLoc", ",", "=", "plot_objects", "[", "4", "]", ",", "\n", "FightingLoc", ",", "=", "plot_objects", "[", "5", "]", ",", "\n", "TimeCounter", "=", "plot_objects", "[", "6", "]", "\n", "SensingFOVsAll", "=", "plot_objects", "[", "7", "]", "\n", "HybridFOVsAll", "=", "plot_objects", "[", "8", "]", "\n", "FightingFOVsAll", "=", "plot_objects", "[", "9", "]", "\n", "\n", "# removing old plot objects from figure", "\n", "FireMap", ".", "remove", "(", ")", "\n", "if", "time_point", "!=", "0", ":", "\n", "            ", "PrunedFires", ".", "remove", "(", ")", "\n", "UAVsSense", ".", "remove", "(", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "", "SensingLoc", ".", "remove", "(", ")", "\n", "HybridLoc", ".", "remove", "(", ")", "\n", "FightingLoc", ".", "remove", "(", ")", "\n", "TimeCounter", ".", "remove", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "SensingFOVsAll", ")", ")", ":", "\n", "            ", "SensingFOV", ",", "=", "SensingFOVsAll", "[", "i", "]", ",", "\n", "SensingFOV", ".", "remove", "(", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "HybridFOVsAll", ")", ")", ":", "\n", "            ", "HybridFOV", ",", "=", "HybridFOVsAll", "[", "i", "]", ",", "\n", "HybridFOV", ".", "remove", "(", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "FightingFOVsAll", ")", ")", ":", "\n", "            ", "FightingFOV", ",", "=", "FightingFOVsAll", "[", "i", "]", ",", "\n", "FightingFOV", ".", "remove", "(", ")", "\n", "\n", "# plotting new locations", "\n", "", "FireMap", ",", "=", "plt", ".", "plot", "(", "terrain_map", "[", ":", ",", "0", "]", ",", "terrain_map", "[", ":", ",", "1", "]", ",", "'r*'", ",", "markersize", "=", "5", ",", "label", "=", "'fire spots'", ")", "\n", "PrunedFires", ",", "=", "plt", ".", "plot", "(", "pruned_fires", "[", ":", ",", "0", "]", ",", "pruned_fires", "[", ":", ",", "1", "]", ",", "'ko'", ",", "markersize", "=", "5", ",", "label", "=", "'burnt out fires'", ")", "\n", "UAVsSense", ",", "=", "plt", ".", "plot", "(", "drones_sensed_map", "[", ":", ",", "0", "]", ",", "drones_sensed_map", "[", ":", ",", "1", "]", ",", "'b+'", ",", "markersize", "=", "5", ",", "label", "=", "'UAV estimations'", ")", "\n", "SensingLoc", ",", "=", "plt", ".", "plot", "(", "sensing_drone_stats", "[", ":", ",", "0", "]", ",", "sensing_drone_stats", "[", ":", ",", "1", "]", ",", "'bX'", ",", "markersize", "=", "8", ",", "label", "=", "'sensing UAVs'", ")", "\n", "HybridLoc", ",", "=", "plt", ".", "plot", "(", "hybrid_drone_stats", "[", ":", ",", "0", "]", ",", "hybrid_drone_stats", "[", ":", ",", "1", "]", ",", "'gh'", ",", "markersize", "=", "10", ",", "label", "=", "'hybrid UAVs'", ")", "\n", "FightingLoc", ",", "=", "plt", ".", "plot", "(", "fighting_drone_stats", "[", ":", ",", "0", "]", ",", "fighting_drone_stats", "[", ":", ",", "1", "]", ",", "'md'", ",", "markersize", "=", "12", ",", "label", "=", "'fighting UAVs'", ")", "\n", "\n", "# plotting trajectories", "\n", "if", "traj_plot_flg", ":", "\n", "            ", "for", "this_traj", "in", "sensing_traj", ":", "\n", "                ", "temp", "=", "np", ".", "reshape", "(", "this_traj", "[", "this_traj", "!=", "0", "]", ",", "(", "-", "1", ",", "4", ")", ")", "\n", "if", "len", "(", "temp", ")", "!=", "0", ":", "\n", "                    ", "plt", ".", "plot", "(", "temp", "[", ":", ",", "0", "]", ",", "temp", "[", ":", ",", "1", "]", ",", "'b--'", ")", "\n", "", "", "for", "this_traj", "in", "hybrid_traj", ":", "\n", "                ", "temp", "=", "np", ".", "reshape", "(", "this_traj", "[", "this_traj", "!=", "0", "]", ",", "(", "-", "1", ",", "4", ")", ")", "\n", "if", "len", "(", "temp", ")", "!=", "0", ":", "\n", "                    ", "plt", ".", "plot", "(", "temp", "[", ":", ",", "0", "]", ",", "temp", "[", ":", ",", "1", "]", ",", "'g--'", ")", "\n", "", "", "for", "this_traj", "in", "fighting_traj", ":", "\n", "                ", "temp", "=", "np", ".", "reshape", "(", "this_traj", "[", "this_traj", "!=", "0", "]", ",", "(", "-", "1", ",", "4", ")", ")", "\n", "if", "len", "(", "temp", ")", "!=", "0", ":", "\n", "                    ", "plt", ".", "plot", "(", "temp", "[", ":", ",", "0", "]", ",", "temp", "[", ":", ",", "1", "]", ",", "'m--'", ")", "\n", "\n", "# plotting FOVs", "\n", "", "", "", "SensingFOVsAll", ",", "HybridFOVsAll", ",", "FightingFOVsAll", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "if", "fov_plot_flg", ":", "\n", "            ", "for", "this_uav", "in", "sensing_drone_stats", ":", "\n", "# evaluating the UAV half-angle", "\n", "                ", "if", "this_uav", "[", "9", "]", "==", "2", ":", "# class of fixed-wings", "\n", "                    ", "half_angle", "=", "half_angles", "[", "2", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "1", ":", "# class of multi-rotors", "\n", "                    ", "half_angle", "=", "half_angles", "[", "1", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "0", ":", "# class of ground robots", "\n", "                    ", "half_angle", "=", "half_angles", "[", "0", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "3", ":", "# class of hybrid UAVs", "\n", "                    ", "half_angle", "=", "half_angles", "[", "3", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "\">>> Oops! Wrong UAV class code specified. Options are integers between 0-3. Check documentation for details.\"", ")", "\n", "", "fov_c", ",", "_", "=", "Utilities", ".", "fov_corners", "(", "drone_loci", "=", "this_uav", ",", "half_angle", "=", "half_angle", ")", "\n", "fov_edges", "=", "np", ".", "array", "(", "[", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "1", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "3", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "2", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", "]", ")", "\n", "SensingFOV", ",", "=", "plt", ".", "plot", "(", "fov_edges", "[", ":", ",", "0", "]", ",", "fov_edges", "[", ":", ",", "1", "]", ",", "'b-'", ")", "\n", "SensingFOVsAll", ".", "append", "(", "SensingFOV", ")", "\n", "", "for", "this_uav", "in", "hybrid_drone_stats", ":", "\n", "# evaluating the UAV half-angle", "\n", "                ", "if", "this_uav", "[", "9", "]", "==", "2", ":", "# class of fixed-wings", "\n", "                    ", "half_angle", "=", "half_angles", "[", "2", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "1", ":", "# class of multi-rotors", "\n", "                    ", "half_angle", "=", "half_angles", "[", "1", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "0", ":", "# class of ground robots", "\n", "                    ", "half_angle", "=", "half_angles", "[", "0", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "3", ":", "# class of hybrid UAVs", "\n", "                    ", "half_angle", "=", "half_angles", "[", "3", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "\">>> Oops! Wrong UAV class code specified. Options are integers between 0-3. Check documentation for details.\"", ")", "\n", "", "fov_c", ",", "_", "=", "Utilities", ".", "fov_corners", "(", "drone_loci", "=", "this_uav", ",", "half_angle", "=", "half_angle", ")", "\n", "fov_edges", "=", "np", ".", "array", "(", "[", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "1", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "3", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "2", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", "]", ")", "\n", "HybridFOV", ",", "=", "plt", ".", "plot", "(", "fov_edges", "[", ":", ",", "0", "]", ",", "fov_edges", "[", ":", ",", "1", "]", ",", "'g-'", ")", "\n", "HybridFOVsAll", ".", "append", "(", "HybridFOV", ")", "\n", "", "for", "this_uav", "in", "fighting_drone_stats", ":", "\n", "# evaluating the UAV half-angle", "\n", "                ", "if", "this_uav", "[", "9", "]", "==", "2", ":", "# class of fixed-wings", "\n", "                    ", "half_angle", "=", "half_angles", "[", "2", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "1", ":", "# class of multi-rotors", "\n", "                    ", "half_angle", "=", "half_angles", "[", "1", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "0", ":", "# class of ground robots", "\n", "                    ", "half_angle", "=", "half_angles", "[", "0", "]", "\n", "", "elif", "this_uav", "[", "9", "]", "==", "3", ":", "# class of hybrid UAVs", "\n", "                    ", "half_angle", "=", "half_angles", "[", "3", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "\">>> Oops! Wrong UAV class code specified. Options are integers between 0-3. Check documentation for details.\"", ")", "\n", "", "fov_c", ",", "_", "=", "Utilities", ".", "fov_corners", "(", "drone_loci", "=", "this_uav", ",", "half_angle", "=", "half_angle", ")", "\n", "fov_edges", "=", "np", ".", "array", "(", "[", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "1", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "3", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "2", "]", ".", "tolist", "(", ")", ",", "fov_c", "[", "0", "]", ".", "tolist", "(", ")", "]", ")", "\n", "FightingFOV", ",", "=", "plt", ".", "plot", "(", "fov_edges", "[", ":", ",", "0", "]", ",", "fov_edges", "[", ":", ",", "1", "]", ",", "'m-'", ")", "\n", "FightingFOVsAll", ".", "append", "(", "FightingFOV", ")", "\n", "\n", "# updating figure reports and specifications", "\n", "", "", "plt", ".", "xlabel", "(", "'X axis [m]'", ")", "\n", "plt", ".", "ylabel", "(", "'Y axis [m]'", ")", "\n", "plt", ".", "title", "(", "'Heterogeneous Firefighting Robots Realtime Demonstration'", ")", "\n", "TimeCounter", "=", "plt", ".", "text", "(", "420", ",", "10", ",", "'>> Time = '", "+", "str", "(", "time_point", "+", "1", ")", "+", "' [min]'", ",", "fontweight", "=", "'bold'", ")", "\n", "plt", ".", "xlim", "(", "[", "0", ",", "500", "]", ")", "\n", "plt", ".", "ylim", "(", "[", "0", ",", "500", "]", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "show", "(", "block", "=", "False", ")", "\n", "plt", ".", "pause", "(", "0.000005", ")", "\n", "\n", "# storing the plot objects for next itteration", "\n", "plot_objects", "=", "[", "FireMap", ",", "PrunedFires", ",", "UAVsSense", ",", "SensingLoc", ",", "HybridLoc", ",", "FightingLoc", ",", "\n", "TimeCounter", ",", "SensingFOVsAll", ",", "HybridFOVsAll", ",", "FightingFOVsAll", "]", "\n", "\n", "# animation movie generation", "\n", "if", "movie_generation_flg", ":", "\n", "            ", "plt", ".", "savefig", "(", "'images/'", "+", "str", "(", "time_point", ")", "+", "'.png'", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "", "return", "plot_objects", ",", "fig_2d", ",", "ax_2d", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.target_Plot": [[1093, 1160], ["target_Loci.append", "pygame.draw.rect", "pygame.draw.polygon", "screen.blit", "pygame.draw.rect", "pygame.draw.polygon", "Rect", "hospital_Font.render", "pygame.draw.rect", "pygame.draw.polygon", "screen.blit", "Rect", "numpy.floor", "len", "Rect", "hospital_Font.render", "pygame.draw.rect", "pygame.draw.polygon", "screen.blit", "Rect", "hospital_Font.render"], "methods", ["None"], ["    ", "def", "target_Plot", "(", "self", ",", "screen", ",", "hospital_Font", ",", "target_Loci", ",", "current_Time", ")", ":", "\n", "        ", "target_Loci_Current", "=", "target_Loci", "[", "len", "(", "target_Loci", ")", "-", "1", "]", "\n", "# The coordination of the upper-left corner of target", "\n", "target_Upper_Left_Corner", "=", "(", "target_Loci_Current", "[", "0", "]", "-", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", "\n", "target_Size", "=", "(", "target_Loci_Current", "[", "2", "]", ",", "target_Loci_Current", "[", "3", "]", ")", "\n", "# Plot the normaltarget, fill the rectangle with orange", "\n", "if", "target_Loci_Current", "[", "4", "]", "==", "0", ":", "\n", "            ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "165", ",", "0", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ")", "\n", "# The vertex set for the target's roof", "\n", "firefighter_Agent_Vertex", "=", "[", "(", "target_Loci_Current", "[", "0", "]", "-", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", "+", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", ",", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", ")", "]", "\n", "# Plot the target's roof (Triangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "210", ",", "105", ",", "30", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "# Display the goal on the screen", "\n", "screen", ".", "blit", "(", "hospital_Font", ".", "render", "(", "'A'", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "target_Loci_Current", "[", "0", "]", "-", "10", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "20", ")", ")", "\n", "\n", "", "elif", "target_Loci_Current", "[", "4", "]", "==", "1", ":", "\n", "            ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "255", ",", "255", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ")", "\n", "# The vertex set for the target's roof", "\n", "firefighter_Agent_Vertex", "=", "[", "(", "target_Loci_Current", "[", "0", "]", "-", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", "+", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", ",", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", ")", "]", "\n", "# Plot the target's roof (Triangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "210", ",", "105", ",", "30", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "# Display the goal on the screen", "\n", "screen", ".", "blit", "(", "hospital_Font", ".", "render", "(", "'H'", ",", "False", ",", "(", "255", ",", "0", ",", "0", ")", ")", ",", "(", "target_Loci_Current", "[", "0", "]", "-", "10", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "20", ")", ")", "\n", "\n", "", "elif", "target_Loci_Current", "[", "4", "]", "==", "2", ":", "\n", "            ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "65", ",", "105", ",", "225", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ")", "\n", "# The vertex set for the target's roof", "\n", "firefighter_Agent_Vertex", "=", "[", "(", "target_Loci_Current", "[", "0", "]", "-", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", "+", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", ",", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", ")", "]", "\n", "# Plot the target's roof (Triangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "210", ",", "105", ",", "30", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "# Display the goal on the screen", "\n", "screen", ".", "blit", "(", "hospital_Font", ".", "render", "(", "'P'", ",", "False", ",", "(", "255", ",", "255", ",", "0", ")", ")", ",", "(", "target_Loci_Current", "[", "0", "]", "-", "10", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "20", ")", ")", "\n", "\n", "# If the edge of the target is enabled, plot the edge with line width 2", "\n", "", "if", "target_Loci_Current", "[", "5", "]", "==", "1", ":", "\n", "            ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ",", "2", ")", "\n", "# The vertex set for the target's roof", "\n", "firefighter_Agent_Vertex", "=", "[", "(", "target_Loci_Current", "[", "0", "]", "-", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", "+", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", ",", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", ")", "]", "\n", "# Plot the target's roof (Triangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "firefighter_Agent_Vertex", ",", "2", ")", "\n", "\n", "# Append to the center location and size of target into the corresponding list", "\n", "# Content: the position of the target (X, Y), the size of the target, current time", "\n", "", "target_Loci", ".", "append", "(", "[", "target_Loci_Current", "[", "0", "]", ",", "target_Loci_Current", "[", "1", "]", ",", "target_Loci_Current", "[", "2", "]", ",", "\n", "target_Loci_Current", "[", "3", "]", ",", "target_Loci_Current", "[", "4", "]", ",", "target_Loci_Current", "[", "5", "]", ",", "\n", "np", ".", "floor", "(", "current_Time", "/", "100", ")", "]", ")", "\n", "return", "target_Loci", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.agent_Base_Plot": [[1164, 1183], ["range", "pygame.draw.rect", "agent_Base_Loci[].append", "Rect", "pygame.draw.rect", "Rect", "numpy.floor", "len"], "methods", ["None"], ["", "def", "agent_Base_Plot", "(", "self", ",", "screen", ",", "agent_Base_Num", ",", "agent_Base_Loci", ",", "current_Time", ")", ":", "\n", "# Search all the agent base in the list", "\n", "        ", "for", "i", "in", "range", "(", "agent_Base_Num", ")", ":", "\n", "            ", "agent_Base_Info", "=", "agent_Base_Loci", "[", "i", "]", "[", "len", "(", "agent_Base_Loci", "[", "i", "]", ")", "-", "1", "]", "\n", "# The coordination of the upper-left corner of agent base", "\n", "agent_Base_Upper_Left_Corner", "=", "(", "\n", "agent_Base_Info", "[", "0", "]", "-", "agent_Base_Info", "[", "2", "]", "/", "2", ",", "agent_Base_Info", "[", "1", "]", "-", "agent_Base_Info", "[", "3", "]", "/", "2", ")", "\n", "agent_Base_Size", "=", "(", "agent_Base_Info", "[", "2", "]", ",", "agent_Base_Info", "[", "3", "]", ")", "\n", "# Plot the agent base, fill the rectangle with orange", "\n", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "225", ",", "0", ")", ",", "Rect", "(", "agent_Base_Upper_Left_Corner", ",", "agent_Base_Size", ")", ")", "\n", "# If the edge of the agent base is enabled, plot the edge with line width 2", "\n", "if", "agent_Base_Info", "[", "5", "]", "==", "1", ":", "\n", "                ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "Rect", "(", "agent_Base_Upper_Left_Corner", ",", "agent_Base_Size", ")", ",", "2", ")", "\n", "# Append to the center location and size of agent base into the corresponding list", "\n", "# Content: the position of the agent base (X, Y), the size of the agent base, current time", "\n", "", "agent_Base_Loci", "[", "i", "]", ".", "append", "(", "\n", "[", "agent_Base_Info", "[", "0", "]", ",", "agent_Base_Info", "[", "1", "]", ",", "agent_Base_Info", "[", "2", "]", ",", "agent_Base_Info", "[", "3", "]", ",", "\n", "agent_Base_Info", "[", "4", "]", ",", "agent_Base_Info", "[", "5", "]", ",", "np", ".", "floor", "(", "current_Time", "/", "100", ")", "]", ")", "\n", "", "return", "agent_Base_Loci", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.goal_Marker": [[1188, 1270], ["range", "len", "screen.blit", "screen.blit", "text.append", "text.append", "text.append", "text.append", "font.render", "text.append", "font.render", "text.append", "font.render", "text.append", "font.render", "text.append", "font.render", "text.append", "font.render", "text.append", "font.render", "text.append", "font.render", "text.append", "str", "font.render", "str", "font.render", "str", "font.render", "str", "font.render", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["None"], ["", "def", "goal_Marker", "(", "self", ",", "screen", ",", "font", ",", "user_Data_List", ",", "current_Agent_State", ",", "patrolling_Goal_List", ",", "move_Mode_Flag", ")", ":", "\n", "# Goal display list", "\n", "        ", "text", "=", "[", "]", "\n", "# The index of the text list", "\n", "text_Index", "=", "0", "\n", "# Search all the goals preserved in the goal list", "\n", "for", "i", "in", "range", "(", "len", "(", "user_Data_List", ")", ")", ":", "\n", "# Only plot the mouse click event (Action Type 0)", "\n", "            ", "if", "(", "user_Data_List", "[", "i", "]", "[", "3", "]", "==", "0", ")", ":", "\n", "# If the given goal has been passed, mark in gary (120, 120, 120)", "\n", "                ", "if", "(", "(", "(", "current_Agent_State", "[", "6", "]", "<=", "user_Data_List", "[", "i", "]", "[", "4", "]", ")", "and", "current_Agent_State", "[", "14", "]", "==", "0", ")", "or", "\n", "(", "(", "user_Data_List", "[", "i", "]", "in", "patrolling_Goal_List", ")", "and", "current_Agent_State", "[", "14", "]", "==", "1", ")", ")", ":", "\n", "# If the move_Mode_Flag is 0, mark each goal in the form like 'X_{index}'", "\n", "                    ", "if", "move_Mode_Flag", "==", "0", ":", "\n", "# Mark the sensor agent", "\n", "                        ", "if", "(", "current_Agent_State", "[", "8", "]", "==", "0", ")", ":", "\n", "                            ", "text", ".", "append", "(", "\n", "font", ".", "render", "(", "'P'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", "+", "'_'", "+", "str", "(", "user_Data_List", "[", "i", "]", "[", "4", "]", ")", ",", "\n", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "# Mark the firefighter agent", "\n", "", "elif", "(", "current_Agent_State", "[", "8", "]", "==", "1", ")", ":", "\n", "                            ", "text", ".", "append", "(", "\n", "font", ".", "render", "(", "'A'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", "+", "'_'", "+", "str", "(", "user_Data_List", "[", "i", "]", "[", "4", "]", ")", ",", "\n", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "", "elif", "(", "current_Agent_State", "[", "8", "]", "==", "2", ")", ":", "\n", "                            ", "text", ".", "append", "(", "\n", "font", ".", "render", "(", "'H'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", "+", "'_'", "+", "str", "(", "user_Data_List", "[", "i", "]", "[", "4", "]", ")", ",", "\n", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "# If the move_Mode_Flag is 1, only display 'X'", "\n", "", "", "else", ":", "\n", "# Mark the sensor agent", "\n", "                        ", "if", "(", "current_Agent_State", "[", "8", "]", "==", "0", ")", ":", "\n", "                            ", "text", ".", "append", "(", "font", ".", "render", "(", "'P'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", ",", "\n", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "# Mark the firefighter agent", "\n", "", "elif", "(", "current_Agent_State", "[", "8", "]", "==", "1", ")", ":", "\n", "                            ", "text", ".", "append", "(", "font", ".", "render", "(", "'A'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", ",", "\n", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "", "elif", "(", "current_Agent_State", "[", "8", "]", "==", "2", ")", ":", "\n", "                            ", "text", ".", "append", "(", "font", ".", "render", "(", "'H'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", ",", "\n", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ")", "\n", "# Display the goal on the screen", "\n", "", "", "screen", ".", "blit", "(", "text", "[", "text_Index", "]", ",", "(", "user_Data_List", "[", "i", "]", "[", "0", "]", ",", "user_Data_List", "[", "i", "]", "[", "1", "]", ")", ")", "\n", "\n", "# If the given goal has not been passed yet, mark in black (0, 0, 0)", "\n", "", "else", ":", "\n", "# If the move_Mode_Flag is 0, mark each goal in the form like 'X_{index}'", "\n", "                    ", "if", "move_Mode_Flag", "==", "0", ":", "\n", "# Mark the sensor agent", "\n", "                        ", "if", "(", "current_Agent_State", "[", "8", "]", "==", "0", ")", ":", "\n", "                            ", "text", ".", "append", "(", "\n", "font", ".", "render", "(", "'P'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", "+", "'_'", "+", "str", "(", "user_Data_List", "[", "i", "]", "[", "4", "]", ")", ",", "\n", "False", ",", "(", "120", ",", "120", ",", "120", ")", ")", ")", "\n", "# Mark the firefighter agent", "\n", "", "elif", "(", "current_Agent_State", "[", "8", "]", "==", "1", ")", ":", "\n", "                            ", "text", ".", "append", "(", "\n", "font", ".", "render", "(", "'A'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", "+", "'_'", "+", "str", "(", "user_Data_List", "[", "i", "]", "[", "4", "]", ")", ",", "\n", "False", ",", "(", "120", ",", "120", ",", "120", ")", ")", ")", "\n", "# Mark the hybrid agent", "\n", "", "elif", "(", "current_Agent_State", "[", "8", "]", "==", "2", ")", ":", "\n", "                            ", "text", ".", "append", "(", "\n", "font", ".", "render", "(", "'H'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", "+", "'_'", "+", "str", "(", "user_Data_List", "[", "i", "]", "[", "4", "]", ")", ",", "\n", "False", ",", "(", "120", ",", "120", ",", "120", ")", ")", ")", "\n", "# If the move_Mode_Flag is 1, only display 'X'", "\n", "", "", "else", ":", "\n", "# Mark the sensor agent", "\n", "                        ", "if", "(", "current_Agent_State", "[", "8", "]", "==", "0", ")", ":", "\n", "                            ", "text", ".", "append", "(", "font", ".", "render", "(", "'P'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", ",", "\n", "False", ",", "(", "120", ",", "120", ",", "120", ")", ")", ")", "\n", "# Mark the firefighter agent", "\n", "", "elif", "(", "current_Agent_State", "[", "8", "]", "==", "1", ")", ":", "\n", "                            ", "text", ".", "append", "(", "font", ".", "render", "(", "'A'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", ",", "\n", "False", ",", "(", "120", ",", "120", ",", "120", ")", ")", ")", "\n", "# Mark the hybrid agent", "\n", "", "elif", "(", "current_Agent_State", "[", "8", "]", "==", "2", ")", ":", "\n", "                            ", "text", ".", "append", "(", "font", ".", "render", "(", "'H'", "+", "str", "(", "current_Agent_State", "[", "9", "]", ")", ",", "\n", "False", ",", "(", "120", ",", "120", ",", "120", ")", ")", ")", "\n", "# Display the goal on the screen", "\n", "", "", "screen", ".", "blit", "(", "text", "[", "text_Index", "]", ",", "(", "user_Data_List", "[", "i", "]", "[", "0", "]", ",", "user_Data_List", "[", "i", "]", "[", "1", "]", ")", ")", "\n", "\n", "# Update the index", "\n", "", "text_Index", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.agent_Motion_Controller": [[1279, 1543], ["numpy.sqrt", "numpy.floor", "numpy.floor", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.floor", "numpy.floor", "range", "numpy.floor", "numpy.floor", "len", "int", "range", "len", "numpy.sqrt", "len", "numpy.sqrt", "numpy.sqrt"], "methods", ["None"], ["", "", "", "def", "agent_Motion_Controller", "(", "self", ",", "agent_Speed", ",", "current_Agent_State", ",", "move_Mode_Flag", ",", "goal_X", ",", "goal_Y", ",", "\n", "agent_Current_Pos_Z", ",", "\n", "agent_Init_Pos_Z", ",", "user_Data_List", ",", "current_Goal_Index", ",", "goal_Index", ",", "start_Flag", ",", "\n", "firefighter_Agent_Num", ",", "pruning_Trigger", ",", "battery_para", ",", "original_Agent_State", ",", "\n", "patrolling_Goal_List", ",", "waiting_Time_List", ",", "current_Time", ")", ":", "\n", "# If its value of the move mode flag is 1, the agent will fly by one step when clicking", "\n", "        ", "if", "move_Mode_Flag", "==", "1", ":", "\n", "# Update the current time", "\n", "            ", "current_Agent_State", "[", "7", "]", "=", "current_Time", "\n", "# Current goal will be left as 0", "\n", "current_Agent_State", "[", "6", "]", "=", "0", "\n", "\n", "# Acquire the postion of the current goal", "\n", "current_Goal_X", "=", "goal_X", "\n", "current_Goal_Y", "=", "goal_Y", "\n", "\n", "# Calculate the planar velocity direction vector", "\n", "vector_X", "=", "current_Goal_X", "-", "current_Agent_State", "[", "0", "]", "\n", "vector_Y", "=", "current_Goal_Y", "-", "current_Agent_State", "[", "1", "]", "\n", "vector_Amp", "=", "np", ".", "sqrt", "(", "vector_X", "**", "2", "+", "vector_Y", "**", "2", ")", "\n", "\n", "# Calculate the agent speed", "\n", "current_Agent_State", "[", "3", "]", "=", "agent_Speed", "*", "vector_X", "/", "vector_Amp", "\n", "current_Agent_State", "[", "4", "]", "=", "agent_Speed", "*", "vector_Y", "/", "vector_Amp", "\n", "current_Agent_State", "[", "5", "]", "=", "agent_Current_Pos_Z", "-", "agent_Init_Pos_Z", "\n", "# Update the agent postion", "\n", "current_Agent_State", "[", "0", "]", "=", "np", ".", "floor", "(", "current_Agent_State", "[", "0", "]", "+", "current_Agent_State", "[", "3", "]", ")", "\n", "current_Agent_State", "[", "1", "]", "=", "np", ".", "floor", "(", "current_Agent_State", "[", "1", "]", "+", "current_Agent_State", "[", "4", "]", ")", "\n", "current_Agent_State", "[", "2", "]", "=", "agent_Current_Pos_Z", "\n", "\n", "# Update the whole distance", "\n", "current_Agent_State", "[", "10", "]", "+=", "agent_Speed", "\n", "\n", "# Update the current flight height", "\n", "agent_Init_Pos_Z", "=", "agent_Current_Pos_Z", "\n", "\n", "# If its value of the move mode flag is 0, the agent will automatically fly towards the goal", "\n", "", "elif", "move_Mode_Flag", "==", "0", ":", "\n", "# Update the current state of the agent", "\n", "            ", "if", "current_Agent_State", "[", "13", "]", "==", "1", ":", "\n", "# Case 1: if the goal index is 0, the agent will be silent, the current time in the array will be updated", "\n", "                ", "if", "(", "current_Agent_State", "[", "6", "]", "==", "0", ")", ":", "\n", "# Update the current time", "\n", "                    ", "current_Agent_State", "[", "7", "]", "=", "current_Time", "\n", "# If the start flag is 1 and the current goal is 0, set the target as 1", "\n", "if", "start_Flag", "==", "1", ":", "\n", "                        ", "current_Agent_State", "[", "6", "]", "=", "1", "\n", "# Case 2: if the agent is moving and still far away from the goal, fly towards the goal", "\n", "", "", "elif", "start_Flag", "==", "1", ":", "\n", "# Acquire the postion of the current goal", "\n", "# Normal Mode: Extract the info from the user_Data_List", "\n", "                    ", "if", "current_Agent_State", "[", "14", "]", "==", "0", ":", "\n", "                        ", "current_Goal_X", "=", "user_Data_List", "[", "current_Goal_Index", "]", "[", "0", "]", "\n", "current_Goal_Y", "=", "user_Data_List", "[", "current_Goal_Index", "]", "[", "1", "]", "\n", "# Patrolling Mode: Extract the info from the patrolling_Goal_List", "\n", "", "else", ":", "\n", "                        ", "current_Goal_X", "=", "patrolling_Goal_List", "[", "current_Agent_State", "[", "15", "]", "]", "[", "0", "]", "\n", "current_Goal_Y", "=", "patrolling_Goal_List", "[", "current_Agent_State", "[", "15", "]", "]", "[", "1", "]", "\n", "\n", "# Calculate the planar velocity direction vector", "\n", "", "vector_X", "=", "current_Goal_X", "-", "current_Agent_State", "[", "0", "]", "\n", "vector_Y", "=", "current_Goal_Y", "-", "current_Agent_State", "[", "1", "]", "\n", "vector_Amp", "=", "np", ".", "sqrt", "(", "vector_X", "**", "2", "+", "vector_Y", "**", "2", ")", "\n", "\n", "# If the distance between the agent and the goal is larger than 10, fly towards the goal", "\n", "if", "(", "vector_Amp", ">=", "agent_Speed", ")", ":", "\n", "# Calculate the agent speed", "\n", "                        ", "current_Agent_State", "[", "3", "]", "=", "agent_Speed", "*", "vector_X", "/", "vector_Amp", "\n", "current_Agent_State", "[", "4", "]", "=", "agent_Speed", "*", "vector_Y", "/", "vector_Amp", "\n", "current_Agent_State", "[", "5", "]", "=", "agent_Current_Pos_Z", "-", "agent_Init_Pos_Z", "\n", "# Update the agent postion", "\n", "current_Agent_State", "[", "0", "]", "=", "np", ".", "floor", "(", "current_Agent_State", "[", "0", "]", "+", "current_Agent_State", "[", "3", "]", ")", "\n", "current_Agent_State", "[", "1", "]", "=", "np", ".", "floor", "(", "current_Agent_State", "[", "1", "]", "+", "current_Agent_State", "[", "4", "]", ")", "\n", "current_Agent_State", "[", "2", "]", "=", "agent_Current_Pos_Z", "\n", "\n", "# Update the current time", "\n", "current_Agent_State", "[", "7", "]", "=", "current_Time", "\n", "\n", "# Update the whole distance", "\n", "current_Agent_State", "[", "10", "]", "+=", "agent_Speed", "\n", "\n", "# Update the waiting time", "\n", "current_Agent_State", "[", "11", "]", "+=", "0", "\n", "\n", "trigger_Index", "=", "current_Agent_State", "[", "9", "]", "-", "1", "+", "firefighter_Agent_Num", "*", "(", "\n", "current_Agent_State", "[", "8", "]", "-", "1", ")", "\n", "if", "pruning_Trigger", "[", "trigger_Index", "]", "==", "2", ":", "\n", "                            ", "pruning_Trigger", "[", "trigger_Index", "]", "=", "0", "\n", "\n", "# If not, the agent reaches the goal, go to the next target or silent", "\n", "", "", "else", ":", "\n", "# Switch the status of the firefighter agent when it arrives the goal", "\n", "                        ", "if", "(", "current_Agent_State", "[", "8", "]", "==", "1", ")", "or", "(", "\n", "(", "current_Agent_State", "[", "8", "]", "==", "2", ")", "and", "(", "current_Agent_State", "[", "12", "]", ">", "0", ")", ")", ":", "\n", "                            ", "trigger_Index", "=", "current_Agent_State", "[", "9", "]", "-", "1", "+", "firefighter_Agent_Num", "*", "(", "\n", "current_Agent_State", "[", "8", "]", "-", "1", ")", "\n", "if", "pruning_Trigger", "[", "trigger_Index", "]", "==", "0", ":", "\n", "                                ", "pruning_Trigger", "[", "trigger_Index", "]", "=", "1", "\n", "\n", "# Determine the next goal", "\n", "# Normal Mode: Extract the info from the user_Data_List", "\n", "", "", "if", "current_Agent_State", "[", "14", "]", "==", "0", ":", "\n", "# Determine whether the current goal is the last one", "\n", "                            ", "if", "(", "current_Agent_State", "[", "6", "]", "<", "goal_Index", ")", ":", "\n", "                                ", "current_Agent_State", "[", "6", "]", "+=", "1", "\n", "# Search for the corresponding index of the new goal in the user data list", "\n", "for", "i", "in", "range", "(", "len", "(", "user_Data_List", ")", ")", ":", "\n", "                                    ", "if", "user_Data_List", "[", "i", "]", "[", "4", "]", "==", "current_Agent_State", "[", "6", "]", ":", "\n", "# Update the current goal index", "\n", "                                        ", "current_Goal_Index", "=", "i", "\n", "break", "\n", "\n", "# Switch the status of the firefighter agent when it arrives the goal", "\n", "", "", "if", "(", "current_Agent_State", "[", "8", "]", "==", "1", ")", "or", "(", "current_Agent_State", "[", "8", "]", "==", "2", ")", ":", "\n", "                                    ", "trigger_Index", "=", "current_Agent_State", "[", "9", "]", "-", "1", "+", "firefighter_Agent_Num", "*", "(", "\n", "current_Agent_State", "[", "8", "]", "-", "1", ")", "\n", "if", "pruning_Trigger", "[", "trigger_Index", "]", "==", "2", ":", "\n", "                                        ", "pruning_Trigger", "[", "trigger_Index", "]", "=", "0", "\n", "\n", "", "", "if", "current_Agent_State", "[", "8", "]", "==", "1", ":", "\n", "                                    ", "waiting_Time_List", "[", "current_Agent_State", "[", "9", "]", "-", "1", "]", "=", "0", "\n", "\n", "", "", "else", ":", "\n", "                                ", "if", "current_Agent_State", "[", "8", "]", "==", "1", ":", "\n", "                                    ", "if", "current_Agent_State", "[", "13", "]", "==", "1", "and", "waiting_Time_List", "[", "current_Agent_State", "[", "9", "]", "-", "1", "]", "==", "0", ":", "\n", "                                        ", "waiting_Time_List", "[", "current_Agent_State", "[", "9", "]", "-", "1", "]", "=", "current_Time", "\n", "# Clear the speed", "\n", "current_Agent_State", "[", "3", "]", "=", "0", "\n", "current_Agent_State", "[", "4", "]", "=", "0", "\n", "current_Agent_State", "[", "5", "]", "=", "agent_Current_Pos_Z", "-", "agent_Init_Pos_Z", "\n", "\n", "# Update the whole distance", "\n", "current_Agent_State", "[", "10", "]", "+=", "np", ".", "sqrt", "(", "\n", "(", "current_Agent_State", "[", "0", "]", "-", "current_Goal_X", ")", "**", "2", "\n", "+", "(", "current_Agent_State", "[", "1", "]", "-", "current_Goal_Y", ")", "**", "2", ")", "\n", "\n", "# Set the agent position overlapping the last goal", "\n", "current_Agent_State", "[", "0", "]", "=", "current_Goal_X", "\n", "current_Agent_State", "[", "1", "]", "=", "current_Goal_Y", "\n", "current_Agent_State", "[", "2", "]", "=", "agent_Current_Pos_Z", "\n", "current_Agent_State", "[", "6", "]", "=", "current_Agent_State", "[", "6", "]", "\n", "\n", "# Update the current time", "\n", "current_Agent_State", "[", "7", "]", "=", "current_Time", "\n", "\n", "# Update the waiting time", "\n", "current_Agent_State", "[", "11", "]", "+=", "1", "\n", "\n", "", "elif", "current_Agent_State", "[", "13", "]", "==", "1", "and", "(", "current_Time", "-", "waiting_Time_List", "[", "current_Agent_State", "[", "9", "]", "-", "1", "]", ")", ">=", "3000", ":", "\n", "                                        ", "waiting_Time_List", "[", "current_Agent_State", "[", "9", "]", "-", "1", "]", "=", "0", "\n", "current_Agent_State", "[", "13", "]", "=", "2", "\n", "", "else", ":", "\n", "# Clear the speed", "\n", "                                        ", "current_Agent_State", "[", "3", "]", "=", "0", "\n", "current_Agent_State", "[", "4", "]", "=", "0", "\n", "current_Agent_State", "[", "5", "]", "=", "agent_Current_Pos_Z", "-", "agent_Init_Pos_Z", "\n", "\n", "# Update the whole distance", "\n", "current_Agent_State", "[", "10", "]", "+=", "np", ".", "sqrt", "(", "\n", "(", "current_Agent_State", "[", "0", "]", "-", "current_Goal_X", ")", "**", "2", "\n", "+", "(", "current_Agent_State", "[", "1", "]", "-", "current_Goal_Y", ")", "**", "2", ")", "\n", "\n", "# Set the agent position overlapping the last goal", "\n", "current_Agent_State", "[", "0", "]", "=", "current_Goal_X", "\n", "current_Agent_State", "[", "1", "]", "=", "current_Goal_Y", "\n", "current_Agent_State", "[", "2", "]", "=", "agent_Current_Pos_Z", "\n", "current_Agent_State", "[", "6", "]", "=", "current_Agent_State", "[", "6", "]", "\n", "\n", "# Update the current time", "\n", "current_Agent_State", "[", "7", "]", "=", "current_Time", "\n", "\n", "# Update the waiting time", "\n", "current_Agent_State", "[", "11", "]", "+=", "1", "\n", "", "", "else", ":", "\n", "# Clear the speed", "\n", "                                    ", "current_Agent_State", "[", "3", "]", "=", "0", "\n", "current_Agent_State", "[", "4", "]", "=", "0", "\n", "current_Agent_State", "[", "5", "]", "=", "agent_Current_Pos_Z", "-", "agent_Init_Pos_Z", "\n", "\n", "# Update the whole distance", "\n", "current_Agent_State", "[", "10", "]", "+=", "np", ".", "sqrt", "(", "\n", "(", "current_Agent_State", "[", "0", "]", "-", "current_Goal_X", ")", "**", "2", "\n", "+", "(", "current_Agent_State", "[", "1", "]", "-", "current_Goal_Y", ")", "**", "2", ")", "\n", "\n", "# Set the agent position overlapping the last goal", "\n", "current_Agent_State", "[", "0", "]", "=", "current_Goal_X", "\n", "current_Agent_State", "[", "1", "]", "=", "current_Goal_Y", "\n", "current_Agent_State", "[", "2", "]", "=", "agent_Current_Pos_Z", "\n", "current_Agent_State", "[", "6", "]", "=", "current_Agent_State", "[", "6", "]", "\n", "\n", "# Update the current time", "\n", "current_Agent_State", "[", "7", "]", "=", "current_Time", "\n", "\n", "# Update the waiting time", "\n", "current_Agent_State", "[", "11", "]", "+=", "1", "\n", "# Patrolling Mode: Extract the info from the patrolling_Goal_List", "\n", "", "", "", "else", ":", "\n", "                            ", "current_Agent_State", "[", "15", "]", "=", "int", "(", "(", "current_Agent_State", "[", "15", "]", "+", "1", ")", "%", "len", "(", "patrolling_Goal_List", ")", ")", "\n", "\n", "# Update the current flight height", "\n", "", "", "agent_Init_Pos_Z", "=", "agent_Current_Pos_Z", "\n", "\n", "", "current_Distance", "=", "np", ".", "sqrt", "(", "(", "current_Agent_State", "[", "0", "]", "-", "original_Agent_State", "[", "0", "]", ")", "**", "2", "+", "\n", "(", "current_Agent_State", "[", "1", "]", "-", "original_Agent_State", "[", "1", "]", ")", "**", "2", ")", "\n", "if", "battery_para", "[", "0", "]", "<=", "(", "battery_para", "[", "1", "]", "*", "(", "current_Agent_State", "[", "10", "]", "+", "current_Distance", ")", "\n", "+", "battery_para", "[", "2", "]", "*", "current_Agent_State", "[", "11", "]", ")", ":", "\n", "                    ", "current_Agent_State", "[", "13", "]", "=", "0", "\n", "\n", "", "", "else", ":", "\n", "                ", "if", "(", "current_Agent_State", "[", "13", "]", "==", "0", ")", "or", "(", "current_Agent_State", "[", "13", "]", "==", "2", ")", ":", "\n", "# Acquire the postion of the current goal", "\n", "                    ", "current_Goal_X", "=", "original_Agent_State", "[", "0", "]", "\n", "current_Goal_Y", "=", "original_Agent_State", "[", "1", "]", "\n", "\n", "# Calculate the planar velocity direction vector", "\n", "vector_X", "=", "current_Goal_X", "-", "current_Agent_State", "[", "0", "]", "\n", "vector_Y", "=", "current_Goal_Y", "-", "current_Agent_State", "[", "1", "]", "\n", "vector_Amp", "=", "np", ".", "sqrt", "(", "vector_X", "**", "2", "+", "vector_Y", "**", "2", ")", "\n", "\n", "# If the distance between the agent and the goal is larger than 10, fly towards the goal", "\n", "if", "(", "vector_Amp", ">=", "agent_Speed", ")", ":", "\n", "# Calculate the agent speed", "\n", "                        ", "current_Agent_State", "[", "3", "]", "=", "agent_Speed", "*", "vector_X", "/", "vector_Amp", "\n", "current_Agent_State", "[", "4", "]", "=", "agent_Speed", "*", "vector_Y", "/", "vector_Amp", "\n", "current_Agent_State", "[", "5", "]", "=", "agent_Current_Pos_Z", "-", "agent_Init_Pos_Z", "\n", "# Update the agent postion", "\n", "current_Agent_State", "[", "0", "]", "=", "np", ".", "floor", "(", "current_Agent_State", "[", "0", "]", "+", "current_Agent_State", "[", "3", "]", ")", "\n", "current_Agent_State", "[", "1", "]", "=", "np", ".", "floor", "(", "current_Agent_State", "[", "1", "]", "+", "current_Agent_State", "[", "4", "]", ")", "\n", "current_Agent_State", "[", "2", "]", "=", "agent_Current_Pos_Z", "\n", "\n", "# Update the current time", "\n", "current_Agent_State", "[", "7", "]", "=", "current_Time", "\n", "\n", "# Update the whole distance", "\n", "current_Agent_State", "[", "10", "]", "+=", "agent_Speed", "\n", "\n", "# Update the waiting time", "\n", "current_Agent_State", "[", "11", "]", "+=", "0", "\n", "\n", "# If not, the agent reaches the goal, go to the next target or silent", "\n", "", "else", ":", "\n", "# Set the agent position overlapping the last goal", "\n", "                        ", "original_Agent_State", "[", "2", "]", "=", "current_Agent_State", "[", "2", "]", "\n", "\n", "# Set the agent position overlapping the last goal", "\n", "original_Agent_State", "[", "6", "]", "=", "current_Agent_State", "[", "6", "]", "\n", "\n", "# Update the current time", "\n", "original_Agent_State", "[", "7", "]", "=", "current_Time", "\n", "\n", "if", "current_Agent_State", "[", "13", "]", "==", "0", ":", "\n", "# Preserve the patrolling loop info", "\n", "                            ", "original_Agent_State", "[", "14", "]", "=", "current_Agent_State", "[", "14", "]", "\n", "original_Agent_State", "[", "15", "]", "=", "current_Agent_State", "[", "15", "]", "\n", "", "else", ":", "\n", "                            ", "start_Flag", "=", "0", "\n", "original_Agent_State", "[", "14", "]", "=", "0", "\n", "original_Agent_State", "[", "15", "]", "=", "0", "\n", "\n", "# Update the waiting time", "\n", "", "for", "i", "in", "range", "(", "len", "(", "current_Agent_State", ")", ")", ":", "\n", "                            ", "current_Agent_State", "[", "i", "]", "=", "original_Agent_State", "[", "i", "]", "\n", "\n", "", "", "", "", "", "return", "current_Agent_State", ",", "agent_Current_Pos_Z", ",", "agent_Init_Pos_Z", ",", "current_Goal_Index", ",", "pruning_Trigger", ",", "start_Flag", ",", "waiting_Time_List", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.fire_Data_Storage": [[1549, 1602], ["range", "range", "len", "target_new_firefront.append", "range", "range", "len", "range", "len", "target_new_firefront[].append", "range", "range", "len", "[].append", "range", "onFire_List.append", "range", "fire_States_List[].append", "range", "int", "int", "int", "len", "range", "fire_States_List[].append", "len", "int", "int", "int", "len", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "fire_Data_Storage", "(", "self", ",", "num_ign_points", ",", "fire_States_List", ",", "new_fire_front", ",", "world_Size", ",", "\n", "fireSpots_Num", ",", "fire_Current_Map", ",", "current_Time", ",", "onFire_List", ",", "target_onFire_list", ",", "target_onFire_Flag", ",", "target_info", ",", "spec_flag", ",", "fire_turnon_flag", ")", ":", "\n", "# Initialize the list to store the fire front that locates inside the target region", "\n", "        ", "target_new_firefront", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "target_onFire_list", ")", ")", ":", "\n", "            ", "target_new_firefront", ".", "append", "(", "[", "]", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "target_onFire_list", "[", "i", "]", ")", ")", ":", "\n", "                ", "target_new_firefront", "[", "i", "]", ".", "append", "(", "target_onFire_list", "[", "i", "]", "[", "j", "]", "[", "len", "(", "target_onFire_list", "[", "i", "]", "[", "j", "]", ")", "-", "1", "]", ")", "\n", "\n", "", "", "if", "new_fire_front", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "# Write the fire spot into the current world map list", "\n", "            ", "for", "i", "in", "range", "(", "new_fire_front", ".", "shape", "[", "0", "]", ")", ":", "\n", "# # Ensure that all the fire spots to be displayed must be within the window scope", "\n", "                ", "if", "(", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", "<=", "(", "world_Size", "-", "1", ")", ")", "and", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", "<=", "(", "world_Size", "-", "1", ")", ")", "\n", "and", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ">=", "0", ")", "and", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ">=", "0", ")", ")", ":", "\n", "                    ", "fire_Current_Map", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", "]", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", "+=", "new_fire_front", "[", "i", "]", "[", "2", "]", "\n", "\n", "# If the new fire front points is not included in the current onFire_List, add it into the list", "\n", "if", "(", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", "not", "in", "onFire_List", ")", ":", "\n", "                        ", "onFire_List", ".", "append", "(", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "\n", "# Determine whether the new fire fronts locate inside the target region", "\n", "for", "i1", "in", "range", "(", "len", "(", "target_onFire_list", ")", ")", ":", "\n", "                            ", "for", "j1", "in", "range", "(", "len", "(", "target_onFire_list", "[", "i1", "]", ")", ")", ":", "\n", "                                ", "if", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "-", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "2", "]", "/", "2", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "+", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "2", "]", "/", "2", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "-", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "3", "]", "/", "2", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "+", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "3", "]", "/", "2", ")", ")", ":", "\n", "                                    ", "target_new_firefront", "[", "i1", "]", "[", "j1", "]", "+=", "1", "\n", "target_onFire_Flag", "[", "i1", "]", "[", "j1", "]", "=", "1", "\n", "\n", "", "", "", "", "", "", "if", "spec_flag", "==", "0", ":", "\n", "# Write the fire spot into the current world map list", "\n", "                ", "for", "i", "in", "range", "(", "fireSpots_Num", ")", ":", "\n", "                    ", "for", "j", "in", "range", "(", "num_ign_points", ")", ":", "\n", "                        ", "fire_States_List", "[", "i", "]", ".", "append", "(", "[", "new_fire_front", "[", "i", "*", "num_ign_points", "+", "j", "]", "[", "0", "]", ",", "\n", "new_fire_front", "[", "i", "*", "num_ign_points", "+", "j", "]", "[", "1", "]", ",", "\n", "new_fire_front", "[", "i", "*", "num_ign_points", "+", "j", "]", "[", "2", "]", ",", "current_Time", "]", ")", "\n", "", "", "", "else", ":", "\n", "# Write the fire spot into the current world map list", "\n", "                ", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "fireSpots_Num", ")", ":", "\n", "                    ", "if", "fire_turnon_flag", "[", "i", "]", "==", "1", ":", "\n", "                        ", "for", "j", "in", "range", "(", "num_ign_points", "[", "i", "]", ")", ":", "\n", "                            ", "fire_States_List", "[", "i", "]", ".", "append", "(", "[", "new_fire_front", "[", "count", "+", "j", "]", "[", "0", "]", ",", "\n", "new_fire_front", "[", "count", "+", "j", "]", "[", "1", "]", ",", "\n", "new_fire_front", "[", "count", "+", "j", "]", "[", "2", "]", ",", "current_Time", "]", ")", "\n", "", "count", "+=", "num_ign_points", "[", "i", "]", "\n", "\n", "# Write the number of fire fronts inside the target into the storage list", "\n", "", "", "", "", "for", "i1", "in", "range", "(", "len", "(", "target_onFire_list", ")", ")", ":", "\n", "            ", "for", "j1", "in", "range", "(", "len", "(", "target_onFire_list", "[", "i1", "]", ")", ")", ":", "\n", "                ", "target_onFire_list", "[", "i1", "]", "[", "j1", "]", ".", "append", "(", "target_new_firefront", "[", "i1", "]", "[", "j1", "]", ")", "\n", "\n", "", "", "return", "fire_Current_Map", ",", "fire_States_List", ",", "onFire_List", ",", "target_onFire_list", ",", "target_onFire_Flag", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.in_fov": [[1604, 1624], ["ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "in_fov", "(", "br_x", "=", "None", ",", "br_y", "=", "None", ",", "tl_x", "=", "None", ",", "tl_y", "=", "None", ",", "x", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function checks if a specific point is inside the FOV of an UAV. The FOV is specified by two of its coordinates\n\n        :param br_x: x bottom right of FOV\n        :param br_y: y bottom right of FOV\n        :param tl_x: x top left of FOV\n        :param tl_y: y top left of FOV\n        :param x: x of the point to be checked\n        :param y: y of the point to be checked\n        :return: boolean flag\n        \"\"\"", "\n", "if", "br_x", "is", "None", "or", "br_y", "is", "None", "or", "tl_x", "is", "None", "or", "tl_y", "is", "None", "or", "x", "is", "None", "or", "y", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Function 'in_fov()' needs ALL of its input arguments to work!\"", ")", "\n", "\n", "", "if", "x", ">=", "tl_x", "and", "x", "<=", "br_x", "and", "y", ">=", "tl_y", "and", "y", "<=", "br_y", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.center_Of_Mass_Calculate": [[1627, 1640], ["numpy.array", "max", "sum", "sum", "sum", "sum"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "center_Of_Mass_Calculate", "(", "sensed_Data", ")", ":", "\n", "# Convert into the array", "\n", "        ", "sensed_Data", "=", "np", ".", "array", "(", "sensed_Data", ")", "\n", "# Calculate the coordinates of the CoM", "\n", "com_X", "=", "sum", "(", "sensed_Data", "[", ":", ",", "0", "]", ")", "/", "sensed_Data", ".", "shape", "[", "0", "]", "\n", "com_Y", "=", "sum", "(", "sensed_Data", "[", ":", ",", "1", "]", ")", "/", "sensed_Data", ".", "shape", "[", "0", "]", "\n", "# Calculate the maximum and average fire intensity", "\n", "max_Intensity", "=", "max", "(", "sensed_Data", "[", ":", ",", "2", "]", ")", "\n", "avg_Intensity", "=", "sum", "(", "sensed_Data", "[", ":", ",", "2", "]", ")", "/", "sensed_Data", ".", "shape", "[", "0", "]", "\n", "# Calculate the average velocity", "\n", "avg_Velocity", "=", "sum", "(", "sensed_Data", "[", ":", ",", "3", "]", ")", "/", "sensed_Data", ".", "shape", "[", "0", "]", "\n", "return", "[", "com_X", ",", "com_Y", ",", "max_Intensity", ",", "avg_Velocity", "*", "max_Intensity", "/", "avg_Intensity", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.fire_Propagation_Velocity": [[1642, 1669], ["numpy.sqrt", "numpy.sin", "numpy.cos", "numpy.sqrt", "numpy.sqrt", "numpy.array().astype", "numpy.array().astype", "numpy.random.randint", "numpy.random.randint", "numpy.exp", "numpy.exp", "numpy.absolute", "numpy.absolute", "numpy.array", "numpy.array", "numpy.power", "numpy.power"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "fire_Propagation_Velocity", "(", "fire_Loci", ",", "geo_phys_info", ",", "world_Size", ")", ":", "\n", "# Extracting the data", "\n", "        ", "[", "x", ",", "y", "]", "=", "fire_Loci", "\n", "spread_rate", "=", "geo_phys_info", "[", "'spread_rate'", "]", "\n", "\n", "wind_speed", "=", "geo_phys_info", "[", "'wind_speed'", "]", "\n", "wind_direction", "=", "geo_phys_info", "[", "'wind_direction'", "]", "\n", "\n", "# Extracting the required information", "\n", "R", "=", "spread_rate", "[", "np", ".", "array", "(", "x", ")", ".", "astype", "(", "int", ")", ",", "np", ".", "array", "(", "y", ")", ".", "astype", "(", "int", ")", "]", "\n", "\n", "U", "=", "wind_speed", "[", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "world_Size", ")", "]", "[", "0", "]", "\n", "Theta", "=", "wind_direction", "[", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "world_Size", ")", "]", "[", "0", "]", "\n", "# current_geo_phys_info = np.array([R, U, Theta])  # storing GP information", "\n", "\n", "# Calculate the necessary parameters: LB, HB, C", "\n", "LB", "=", "0.936", "*", "np", ".", "exp", "(", "0.2566", "*", "U", ")", "+", "0.461", "*", "np", ".", "exp", "(", "-", "0.1548", "*", "U", ")", "-", "0.397", "\n", "HB", "=", "(", "LB", "+", "np", ".", "sqrt", "(", "np", ".", "absolute", "(", "np", ".", "power", "(", "LB", ",", "2", ")", "-", "1", ")", ")", ")", "/", "(", "LB", "-", "np", ".", "sqrt", "(", "np", ".", "absolute", "(", "np", ".", "power", "(", "LB", ",", "2", ")", "-", "1", ")", ")", ")", "\n", "C", "=", "0.5", "*", "(", "R", "-", "(", "R", "/", "HB", ")", ")", "\n", "\n", "# Calculate the velocity", "\n", "x_diff", "=", "C", "*", "np", ".", "sin", "(", "Theta", ")", "\n", "y_diff", "=", "C", "*", "np", ".", "cos", "(", "Theta", ")", "\n", "velocity", "=", "np", ".", "sqrt", "(", "x_diff", "**", "2", "+", "y_diff", "**", "2", ")", "\n", "\n", "return", "velocity", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.fire_Sensing": [[1673, 1771], ["numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "numpy.random.choice", "range", "len", "Utilities.HeteroFireBots_Reconn_Env_Utilities.center_Of_Mass_Calculate", "numpy.tan", "numpy.tan", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "int", "Utilities.HeteroFireBots_Reconn_Env_Utilities.fire_Propagation_Velocity", "numpy.zeros", "numpy.zeros", "raw_sensed_list[].astype", "raw_sensed_list[].astype", "numpy.unique", "np.unique.copy().tolist.copy", "len", "numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "numpy.random.choice", "round", "len", "len", "list().copy", "numpy.unique().tolist", "numpy.unique.copy().tolist", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "int", "Utilities.HeteroFireBots_Reconn_Env_Utilities.fire_Propagation_Velocity", "numpy.zeros", "numpy.zeros", "raw_sensed_list[].astype", "raw_sensed_list[].astype", "numpy.unique", "np.unique.copy().tolist.copy", "len", "len", "round", "len", "len", "list().copy", "numpy.unique().tolist", "numpy.unique.copy().tolist", "len", "list", "numpy.unique", "numpy.unique.copy", "len", "len", "numpy.array", "len", "list", "numpy.unique", "numpy.unique.copy", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.center_Of_Mass_Calculate", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.fire_Propagation_Velocity", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.fire_Propagation_Velocity"], ["", "def", "fire_Sensing", "(", "self", ",", "fire_map", ",", "current_Agent_State", ",", "agent_FOV", ",", "geo_phys_info", ",", "onFire_List", ",", "sensed_List", ",", "world_Size", ",", "num_ign_points", ",", "spec_flag", ",", "fire_turnon_flag", ",", "height_info", ")", ":", "\n", "# Initialize the list to store the sensed fire state", "\n", "        ", "fire_Sensed_Map", "=", "[", "]", "\n", "\n", "# Initialize the height info (Upper and lower bound, current height) from the external height info list", "\n", "[", "lower_bound", ",", "upper_bound", ",", "current_height", "]", "=", "height_info", "\n", "\n", "# If the lower_bound equals to the upper bound (Fixed perception height), set the confidence level as 1", "\n", "if", "lower_bound", "==", "upper_bound", ":", "\n", "            ", "confidence_level", "=", "1", "\n", "# If not, compute the confidence level (0.4 - 1.0) in proportion to the height range (Lower - Upper Bound)", "\n", "", "elif", "lower_bound", "<", "upper_bound", ":", "\n", "            ", "confidence_level", "=", "1", "-", "(", "current_height", "-", "lower_bound", ")", "/", "(", "upper_bound", "-", "lower_bound", ")", "*", "0.6", "\n", "\n", "# Calculate the size of the searching scope", "\n", "", "searching_Scope_X", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "0", "]", ")", "*", "current_Agent_State", "[", "2", "]", "\n", "searching_Scope_Y", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "1", "]", ")", "*", "current_Agent_State", "[", "2", "]", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "(", "tl_x", ",", "tl_y", ")", "=", "(", "current_Agent_State", "[", "0", "]", "-", "searching_Scope_X", "/", "2", ",", "\n", "current_Agent_State", "[", "1", "]", "-", "searching_Scope_Y", "/", "2", ")", "\n", "\n", "# The coordination of the lower-right corner of the agent searching scope", "\n", "(", "br_x", ",", "br_y", ")", "=", "(", "current_Agent_State", "[", "0", "]", "+", "searching_Scope_X", "/", "2", ",", "\n", "current_Agent_State", "[", "1", "]", "+", "searching_Scope_Y", "/", "2", ")", "\n", "\n", "if", "spec_flag", "==", "0", ":", "\n", "# Search for the current fire map, determine whether the given fire spot locates within the searching scope", "\n", "            ", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "np", ".", "argwhere", "(", "fire_map", "[", ":", ",", "0", "]", "<=", "br_x", ")", ",", "np", ".", "argwhere", "(", "fire_map", "[", ":", ",", "0", "]", ">=", "tl_x", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "fire_map", "[", ":", ",", "1", "]", "<=", "br_y", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "fire_map", "[", ":", ",", "1", "]", ">=", "tl_y", ")", ")", "\n", "# Apply the stochastic perception", "\n", "raw_sensed_idx", "=", "np", ".", "random", ".", "choice", "(", "raw_sensed_idx", ",", "int", "(", "round", "(", "confidence_level", "*", "len", "(", "raw_sensed_idx", ")", ")", ")", ",", "replace", "=", "False", ")", "\n", "raw_sensed_list", "=", "fire_map", "[", "raw_sensed_idx", ",", ":", "]", "\n", "if", "fire_turnon_flag", "==", "1", "and", "len", "(", "raw_sensed_list", "[", ":", ",", "0", "]", ")", ">", "0", ":", "\n", "                ", "geo_phys_info_temp", "=", "geo_phys_info", "\n", "fire_Velocity", "=", "self", ".", "fire_Propagation_Velocity", "(", "[", "raw_sensed_list", "[", ":", ",", "0", "]", ",", "raw_sensed_list", "[", ":", ",", "1", "]", "]", ",", "\n", "geo_phys_info_temp", ",", "\n", "world_Size", ")", "\n", "\n", "fire_Sensed_Map", "=", "np", ".", "zeros", "(", "(", "len", "(", "raw_sensed_list", "[", ":", ",", "0", "]", ")", ",", "4", ")", ",", "dtype", "=", "float", ")", "\n", "fire_Sensed_Map", "[", ":", ",", "0", "]", "=", "raw_sensed_list", "[", ":", ",", "0", "]", "\n", "fire_Sensed_Map", "[", ":", ",", "1", "]", "=", "raw_sensed_list", "[", ":", ",", "1", "]", "\n", "fire_Sensed_Map", "[", ":", ",", "2", "]", "=", "raw_sensed_list", "[", ":", ",", "2", "]", "\n", "fire_Sensed_Map", "[", ":", ",", "3", "]", "=", "fire_Velocity", "\n", "\n", "int_sensed_list", "=", "np", ".", "zeros", "(", "(", "len", "(", "raw_sensed_list", "[", ":", ",", "0", "]", ")", ",", "2", ")", ",", "dtype", "=", "int", ")", "\n", "int_sensed_list", "[", ":", ",", "0", "]", "=", "raw_sensed_list", "[", ":", ",", "0", "]", ".", "astype", "(", "int", ")", "\n", "int_sensed_list", "[", ":", ",", "1", "]", "=", "raw_sensed_list", "[", ":", ",", "1", "]", ".", "astype", "(", "int", ")", "\n", "uni_int_sensed_list", "=", "np", ".", "unique", "(", "int_sensed_list", ",", "axis", "=", "0", ")", "\n", "\n", "sensed_List_copy", "=", "sensed_List", ".", "copy", "(", ")", "\n", "if", "len", "(", "sensed_List_copy", ")", ">", "0", ":", "\n", "                    ", "sensed_List_copy", "[", "0", ":", "0", "]", "=", "list", "(", "uni_int_sensed_list", ")", ".", "copy", "(", ")", "\n", "sensed_List", "=", "np", ".", "unique", "(", "np", ".", "array", "(", "sensed_List_copy", ")", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "                    ", "sensed_List", "=", "uni_int_sensed_list", ".", "copy", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "", "", "", "else", ":", "\n", "# Search for the current fire map, determine whether the given fire spot locates within the searching scope", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "fire_map", ")", ")", ":", "\n", "# Search for the current fire map, determine whether the given fire spot locates within the searching scope", "\n", "                ", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "np", ".", "argwhere", "(", "fire_map", "[", "i", "]", "[", ":", ",", "0", "]", "<=", "br_x", ")", ",", "\n", "np", ".", "argwhere", "(", "fire_map", "[", "i", "]", "[", ":", ",", "0", "]", ">=", "tl_x", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "fire_map", "[", "i", "]", "[", ":", ",", "1", "]", "<=", "br_y", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "fire_map", "[", "i", "]", "[", ":", ",", "1", "]", ">=", "tl_y", ")", ")", "\n", "# Apply the stochastic perception", "\n", "raw_sensed_idx", "=", "np", ".", "random", ".", "choice", "(", "raw_sensed_idx", ",", "int", "(", "round", "(", "confidence_level", "*", "len", "(", "raw_sensed_idx", ")", ")", ")", ",", "replace", "=", "False", ")", "\n", "raw_sensed_list", "=", "fire_map", "[", "i", "]", "[", "raw_sensed_idx", ",", ":", "]", "\n", "if", "fire_turnon_flag", "[", "i", "]", "==", "1", "and", "len", "(", "raw_sensed_list", "[", ":", ",", "0", "]", ")", ">", "0", ":", "\n", "                    ", "geo_phys_info_temp", "=", "geo_phys_info", "[", "i", "]", "\n", "fire_Velocity", "=", "self", ".", "fire_Propagation_Velocity", "(", "[", "raw_sensed_list", "[", ":", ",", "0", "]", ",", "raw_sensed_list", "[", ":", ",", "1", "]", "]", ",", "\n", "geo_phys_info_temp", ",", "\n", "world_Size", ")", "\n", "\n", "fire_Sensed_Map", "=", "np", ".", "zeros", "(", "(", "len", "(", "raw_sensed_list", "[", ":", ",", "0", "]", ")", ",", "4", ")", ",", "dtype", "=", "float", ")", "\n", "fire_Sensed_Map", "[", ":", ",", "0", "]", "=", "raw_sensed_list", "[", ":", ",", "0", "]", "\n", "fire_Sensed_Map", "[", ":", ",", "1", "]", "=", "raw_sensed_list", "[", ":", ",", "1", "]", "\n", "fire_Sensed_Map", "[", ":", ",", "2", "]", "=", "raw_sensed_list", "[", ":", ",", "2", "]", "\n", "fire_Sensed_Map", "[", ":", ",", "3", "]", "=", "fire_Velocity", "\n", "\n", "int_sensed_list", "=", "np", ".", "zeros", "(", "(", "len", "(", "raw_sensed_list", "[", ":", ",", "0", "]", ")", ",", "2", ")", ",", "dtype", "=", "int", ")", "\n", "int_sensed_list", "[", ":", ",", "0", "]", "=", "raw_sensed_list", "[", ":", ",", "0", "]", ".", "astype", "(", "int", ")", "\n", "int_sensed_list", "[", ":", ",", "1", "]", "=", "raw_sensed_list", "[", ":", ",", "1", "]", ".", "astype", "(", "int", ")", "\n", "uni_int_sensed_list", "=", "np", ".", "unique", "(", "int_sensed_list", ",", "axis", "=", "0", ")", "\n", "\n", "sensed_List_copy", "=", "sensed_List", ".", "copy", "(", ")", "\n", "if", "len", "(", "sensed_List_copy", ")", ">", "0", ":", "\n", "                        ", "sensed_List_copy", "[", "0", ":", "0", "]", "=", "list", "(", "uni_int_sensed_list", ")", ".", "copy", "(", ")", "\n", "sensed_List", "=", "np", ".", "unique", "(", "np", ".", "array", "(", "sensed_List_copy", ")", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "                        ", "sensed_List", "=", "uni_int_sensed_list", ".", "copy", "(", ")", ".", "tolist", "(", ")", "\n", "\n", "# If the sensed fire spot list is not null, calculate its center of mass", "\n", "", "", "", "", "CoM_Info", "=", "[", "]", "\n", "if", "len", "(", "fire_Sensed_Map", ")", ">", "0", ":", "\n", "            ", "CoM_Info", "=", "self", ".", "center_Of_Mass_Calculate", "(", "fire_Sensed_Map", ")", "\n", "\n", "", "return", "fire_Sensed_Map", ",", "CoM_Info", ",", "sensed_List", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.fire_Pruning": [[1777, 1842], ["numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "numpy.random.choice", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "int", "len", "numpy.zeros", "temp_list[].astype", "temp_list[].astype", "numpy.unique", "sensed_List.copy", "numpy.tan", "numpy.tan", "round", "len", "list().copy", "range", "len", "len", "len", "len", "list", "numpy.unique().tolist", "len", "len", "onFire_List.remove", "range", "pruned_List.append", "fire_Pruned_Map.append", "sensed_List.remove", "len", "range", "numpy.unique", "int", "int", "int", "int", "int", "int", "int", "int", "len", "int", "int", "numpy.array", "int", "int", "int", "int", "int", "int", "len"], "methods", ["None"], ["", "def", "fire_Pruning", "(", "self", ",", "fire_map", ",", "current_Agent_State", ",", "agent_FOV", ",", "onFire_List", ",", "sensed_List", ",", "pruned_List", ",", "\n", "new_fire_front", ",", "target_onFire_list", ",", "target_info", ",", "confidence_level", ")", ":", "\n", "# Initialize the list to store the sensed fire state", "\n", "        ", "fire_Pruned_Map", "=", "[", "]", "\n", "\n", "# Calculate the size of the searching scope", "\n", "searching_Scope_X", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "0", "]", ")", "*", "current_Agent_State", "[", "2", "]", "\n", "searching_Scope_Y", "=", "2", "*", "np", ".", "tan", "(", "agent_FOV", "[", "1", "]", ")", "*", "current_Agent_State", "[", "2", "]", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "(", "tl_x", ",", "tl_y", ")", "=", "(", "current_Agent_State", "[", "0", "]", "-", "searching_Scope_X", "/", "2", ",", "\n", "current_Agent_State", "[", "1", "]", "-", "searching_Scope_Y", "/", "2", ")", "\n", "\n", "# The coordination of the lower-right corner of the agent searching scope", "\n", "(", "br_x", ",", "br_y", ")", "=", "(", "current_Agent_State", "[", "0", "]", "+", "searching_Scope_X", "/", "2", ",", "\n", "current_Agent_State", "[", "1", "]", "+", "searching_Scope_Y", "/", "2", ")", "\n", "# Temporary list to store the fire front that may be pruned", "\n", "temp_list", "=", "[", "]", "\n", "# sensed list flag, if there is any points that is included in the sensed list, this flag will become 1", "\n", "sensed_flag", "=", "0", "\n", "\n", "# Search for the current fire map, determine whether the given fire spot locates within the searching scope", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "np", ".", "argwhere", "(", "fire_map", "[", ":", ",", "0", "]", "<=", "br_x", ")", ",", "np", ".", "argwhere", "(", "fire_map", "[", ":", ",", "0", "]", ">=", "tl_x", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "fire_map", "[", ":", ",", "1", "]", "<=", "br_y", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "fire_map", "[", ":", ",", "1", "]", ">=", "tl_y", ")", ")", "\n", "# Apply the stochastic pruning", "\n", "raw_sensed_idx", "=", "np", ".", "random", ".", "choice", "(", "raw_sensed_idx", ",", "int", "(", "round", "(", "confidence_level", "*", "len", "(", "raw_sensed_idx", ")", ")", ")", ",", "\n", "replace", "=", "False", ")", "\n", "temp_list", "=", "fire_map", "[", "raw_sensed_idx", ",", ":", "]", "\n", "if", "len", "(", "temp_list", ")", ">", "0", ":", "\n", "            ", "int_pruned_list", "=", "np", ".", "zeros", "(", "(", "len", "(", "temp_list", "[", ":", ",", "0", "]", ")", ",", "2", ")", ",", "dtype", "=", "int", ")", "\n", "int_pruned_list", "[", ":", ",", "0", "]", "=", "temp_list", "[", ":", ",", "0", "]", ".", "astype", "(", "int", ")", "\n", "int_pruned_list", "[", ":", ",", "1", "]", "=", "temp_list", "[", ":", ",", "1", "]", ".", "astype", "(", "int", ")", "\n", "uni_int_pruned_list", "=", "np", ".", "unique", "(", "int_pruned_list", ",", "axis", "=", "0", ")", "\n", "\n", "sensed_List_copy", "=", "sensed_List", ".", "copy", "(", ")", "\n", "\n", "if", "len", "(", "sensed_List_copy", ")", ">", "0", ":", "\n", "                ", "sensed_List_copy", "[", "0", ":", "0", "]", "=", "list", "(", "uni_int_pruned_list", ")", ".", "copy", "(", ")", "\n", "if", "len", "(", "np", ".", "unique", "(", "np", ".", "array", "(", "sensed_List_copy", ")", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", ")", "<", "(", "len", "(", "sensed_List", ")", "+", "len", "(", "uni_int_pruned_list", ")", ")", ":", "\n", "                    ", "sensed_flag", "=", "1", "\n", "", "", "else", ":", "\n", "                ", "sensed_flag", "=", "1", "\n", "\n", "# The pruning agent could only put out fire region that contains the sensed fire fronts", "\n", "", "if", "sensed_flag", "==", "1", ":", "\n", "                ", "for", "i", "in", "range", "(", "len", "(", "temp_list", ")", ")", ":", "\n", "# If the new fire front points is not included in the current onFire_List, add it into the list", "\n", "                    ", "if", "(", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", "not", "in", "pruned_List", ")", "and", "\n", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", "in", "onFire_List", ")", ")", ":", "\n", "                        ", "onFire_List", ".", "remove", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "if", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", "in", "sensed_List", ")", ":", "\n", "                            ", "sensed_List", ".", "remove", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "\n", "# Determine whether the new fire fronts locate inside the target region", "\n", "", "for", "i1", "in", "range", "(", "len", "(", "target_onFire_list", ")", ")", ":", "\n", "                            ", "for", "j1", "in", "range", "(", "len", "(", "target_onFire_list", "[", "i1", "]", ")", ")", ":", "\n", "                                ", "if", "(", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "-", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "2", "]", "/", "2", ")", ")", "and", "(", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "+", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "2", "]", "/", "2", ")", ")", "and", "(", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "-", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "3", "]", "/", "2", ")", ")", "and", "(", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "+", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "3", "]", "/", "2", ")", ")", ":", "\n", "                                    ", "target_onFire_list", "[", "i1", "]", "[", "j1", "]", "[", "len", "(", "target_onFire_list", "[", "i1", "]", "[", "j1", "]", ")", "-", "1", "]", "-=", "1", "\n", "\n", "", "", "", "pruned_List", ".", "append", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "fire_Pruned_Map", ".", "append", "(", "[", "temp_list", "[", "i", "]", "[", "0", "]", ",", "temp_list", "[", "i", "]", "[", "1", "]", ",", "temp_list", "[", "i", "]", "[", "2", "]", "]", ")", "\n", "\n", "", "", "", "", "return", "fire_Pruned_Map", ",", "fire_map", ",", "onFire_List", ",", "sensed_List", ",", "pruned_List", ",", "new_fire_front", ",", "target_onFire_list", ",", "sensed_flag", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.side_Bar_Display": [[1846, 1936], ["screen.blit", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "range", "screen.blit", "screen.blit", "screen.blit", "range", "font_Title.render", "font_Bold.render", "font_Bold.render", "font_Bold.render", "font_Bold.render", "font_Bold.render", "font_Bold.render", "font_Bold.render", "len", "int", "screen.blit", "font_Title.render", "font_Bold.render", "font_Bold.render", "len", "screen.blit", "font.render", "int", "range", "numpy.sqrt", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "font_Bold.render", "screen.blit", "str", "int", "numpy.sqrt", "font.render", "font.render", "font.render", "font.render", "font_Bold.render", "font.render", "screen.blit", "screen.blit", "font_Bold.render", "screen.blit", "len", "str", "str", "str", "font_Bold.render", "font.render", "font_Bold.render", "int", "str", "str", "int", "str", "int", "str", "str", "str", "int", "int"], "methods", ["None"], ["", "def", "side_Bar_Display", "(", "self", ",", "screen", ",", "current_Agent_State_List", ",", "font", ",", "font_Bold", ",", "font_Title", ",", "battery_para", ",", "user_Data_List", ",", "index_Next", ",", "\n", "goal_Index_List", ",", "world_Size", ")", ":", "\n", "        ", "column_Size", "=", "30", "\n", "\n", "# Table 1: Battery Capacity Info", "\n", "screen", ".", "blit", "(", "font_Title", ".", "render", "(", "'Battery Capacity Info: '", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "20", ",", "20", ")", ")", "\n", "# Title for each column", "\n", "# Column 1: Agent", "\n", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Agent'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "20", ",", "60", ")", ")", "\n", "# Column 2: Remaining Energy", "\n", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Remaining'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "150", ",", "60", "-", "10", ")", ")", "\n", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Energy'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "150", ",", "60", "+", "10", ")", ")", "\n", "# Column 3: Estimated Energy Till Next Goal", "\n", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Estimated Energy'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "280", ",", "60", "-", "10", ")", ")", "\n", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Till Next Goal'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "280", ",", "60", "+", "10", ")", ")", "\n", "# Column 4: Current agent flight height", "\n", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Current'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "470", ",", "60", "-", "10", ")", ")", "\n", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Height'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "470", ",", "60", "+", "10", ")", ")", "\n", "\n", "# The index of the Battery Capacity Info list", "\n", "text_Index", "=", "1", "\n", "\n", "# Display the battery capacity info for each agent", "\n", "for", "i", "in", "range", "(", "len", "(", "current_Agent_State_List", ")", ")", ":", "\n", "            ", "remaining_Battery", "=", "int", "(", "battery_para", "[", "i", "]", "[", "0", "]", "-", "battery_para", "[", "i", "]", "[", "1", "]", "*", "current_Agent_State_List", "[", "i", "]", "[", "10", "]", "-", "battery_para", "[", "i", "]", "[", "2", "]", "*", "current_Agent_State_List", "[", "i", "]", "[", "11", "]", ")", "\n", "if", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "0", ":", "\n", "                ", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Perception '", "+", "str", "(", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", ")", "+", "': '", ",", "\n", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "20", ",", "70", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "", "elif", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "1", ":", "\n", "                ", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Action '", "+", "str", "(", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", ")", "+", "': '", ",", "\n", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "20", ",", "70", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "", "elif", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "2", ":", "\n", "                ", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Hybrid '", "+", "str", "(", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", ")", "+", "': '", ",", "\n", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "20", ",", "70", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "", "screen", ".", "blit", "(", "font", ".", "render", "(", "str", "(", "remaining_Battery", ")", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "\n", "(", "world_Size", "+", "150", ",", "70", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "\n", "if", "int", "(", "index_Next", "[", "i", "]", ")", ">=", "0", ":", "\n", "                ", "sum_Distance", "=", "0", "\n", "for", "j", "in", "range", "(", "int", "(", "index_Next", "[", "i", "]", ")", ",", "len", "(", "goal_Index_List", "[", "i", "]", ")", "-", "1", ")", ":", "\n", "                    ", "sum_Distance", "+=", "np", ".", "sqrt", "(", "(", "user_Data_List", "[", "i", "]", "[", "j", "+", "1", "]", "[", "0", "]", "-", "user_Data_List", "[", "i", "]", "[", "j", "]", "[", "0", "]", ")", "**", "2", "+", "\n", "(", "user_Data_List", "[", "i", "]", "[", "j", "+", "1", "]", "[", "1", "]", "-", "user_Data_List", "[", "i", "]", "[", "j", "]", "[", "1", "]", ")", "**", "2", ")", "\n", "\n", "", "remaining_Dis", "=", "np", ".", "sqrt", "(", "\n", "(", "current_Agent_State_List", "[", "i", "]", "[", "0", "]", "-", "user_Data_List", "[", "i", "]", "[", "int", "(", "index_Next", "[", "i", "]", ")", "]", "[", "0", "]", ")", "**", "2", "+", "\n", "(", "current_Agent_State_List", "[", "i", "]", "[", "1", "]", "-", "user_Data_List", "[", "i", "]", "[", "int", "(", "index_Next", "[", "i", "]", ")", "]", "[", "1", "]", ")", "**", "2", ")", "\n", "screen", ".", "blit", "(", "\n", "font", ".", "render", "(", "str", "(", "remaining_Battery", "-", "int", "(", "battery_para", "[", "i", "]", "[", "1", "]", "*", "(", "remaining_Dis", "+", "sum_Distance", ")", ")", ")", ",", "\n", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "\n", "(", "world_Size", "+", "280", ",", "70", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "", "else", ":", "\n", "                ", "screen", ".", "blit", "(", "font", ".", "render", "(", "'N/A'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "\n", "(", "world_Size", "+", "280", ",", "70", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "\n", "# Display the current height for sensing and hybrid agents. For the pruning agents, the height display is disabled", "\n", "", "if", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "0", "or", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "2", ":", "\n", "                ", "screen", ".", "blit", "(", "font", ".", "render", "(", "str", "(", "current_Agent_State_List", "[", "i", "]", "[", "2", "]", ")", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "\n", "(", "world_Size", "+", "470", ",", "70", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "", "else", ":", "\n", "                ", "screen", ".", "blit", "(", "font", ".", "render", "(", "'N/A'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "470", ",", "70", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "\n", "", "text_Index", "+=", "1", "\n", "\n", "# Table 2: Water Tank Info", "\n", "", "screen", ".", "blit", "(", "font_Title", ".", "render", "(", "'Water Tank Info: '", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "20", ",", "100", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "# Title for each column", "\n", "# Column 1: Agent", "\n", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Agent'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "20", ",", "140", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "# Column 2: Remaining Pruning Times", "\n", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Remaining Pruning Times'", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "\n", "(", "world_Size", "+", "150", ",", "140", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "\n", "# Display the water tank info for each agent", "\n", "for", "i", "in", "range", "(", "len", "(", "current_Agent_State_List", ")", ")", ":", "\n", "            ", "if", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "1", ":", "\n", "                ", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Action '", "+", "str", "(", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", ")", "+", "': '", ",", "\n", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "20", ",", "180", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "screen", ".", "blit", "(", "font", ".", "render", "(", "str", "(", "int", "(", "current_Agent_State_List", "[", "i", "]", "[", "12", "]", ")", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "\n", "(", "world_Size", "+", "250", ",", "180", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "text_Index", "+=", "1", "\n", "\n", "", "elif", "current_Agent_State_List", "[", "i", "]", "[", "8", "]", "==", "2", ":", "\n", "                ", "screen", ".", "blit", "(", "font_Bold", ".", "render", "(", "'Hybrid '", "+", "str", "(", "current_Agent_State_List", "[", "i", "]", "[", "9", "]", ")", "+", "': '", ",", "\n", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "world_Size", "+", "20", ",", "180", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "screen", ".", "blit", "(", "font", ".", "render", "(", "str", "(", "int", "(", "current_Agent_State_List", "[", "i", "]", "[", "12", "]", ")", ")", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "\n", "(", "world_Size", "+", "250", ",", "180", "+", "text_Index", "*", "column_Size", ")", ")", "\n", "text_Index", "+=", "1", "\n", "", "", "pos", "=", "(", "world_Size", "+", "20", ",", "220", "+", "text_Index", "*", "column_Size", ")", "\n", "return", "pos", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.draw_dashed_line": [[1938, 1965], ["list", "list", "zip", "zip", "zip", "pygame.draw.line", "len", "abs", "abs", "round", "round", "round", "round", "round", "range", "len", "numpy.sqrt", "range", "numpy.arange", "numpy.arange"], "methods", ["None"], ["", "def", "draw_dashed_line", "(", "serf", ",", "screen", ",", "color", ",", "start_pos", ",", "end_pos", ",", "width", "=", "1", ",", "dash_length", "=", "10", ")", ":", "\n", "        ", "x1", ",", "y1", "=", "start_pos", "\n", "x2", ",", "y2", "=", "end_pos", "\n", "dl", "=", "dash_length", "\n", "\n", "if", "(", "x1", "==", "x2", ")", ":", "\n", "            ", "ycoords", "=", "[", "y", "for", "y", "in", "range", "(", "y1", ",", "y2", ",", "dl", "if", "y1", "<", "y2", "else", "-", "dl", ")", "]", "\n", "xcoords", "=", "[", "x1", "]", "*", "len", "(", "ycoords", ")", "\n", "", "elif", "(", "y1", "==", "y2", ")", ":", "\n", "            ", "xcoords", "=", "[", "x", "for", "x", "in", "range", "(", "x1", ",", "x2", ",", "dl", "if", "x1", "<", "x2", "else", "-", "dl", ")", "]", "\n", "ycoords", "=", "[", "y1", "]", "*", "len", "(", "xcoords", ")", "\n", "", "else", ":", "\n", "            ", "a", "=", "abs", "(", "x2", "-", "x1", ")", "\n", "b", "=", "abs", "(", "y2", "-", "y1", ")", "\n", "c", "=", "round", "(", "np", ".", "sqrt", "(", "a", "**", "2", "+", "b", "**", "2", ")", ")", "\n", "dx", "=", "dl", "*", "a", "/", "c", "\n", "dy", "=", "dl", "*", "b", "/", "c", "\n", "\n", "xcoords", "=", "[", "x", "for", "x", "in", "np", ".", "arange", "(", "x1", ",", "x2", ",", "dx", "if", "x1", "<", "x2", "else", "-", "dx", ")", "]", "\n", "ycoords", "=", "[", "y", "for", "y", "in", "np", ".", "arange", "(", "y1", ",", "y2", ",", "dy", "if", "y1", "<", "y2", "else", "-", "dy", ")", "]", "\n", "\n", "", "next_coords", "=", "list", "(", "zip", "(", "xcoords", "[", "1", ":", ":", "2", "]", ",", "ycoords", "[", "1", ":", ":", "2", "]", ")", ")", "\n", "last_coords", "=", "list", "(", "zip", "(", "xcoords", "[", "0", ":", ":", "2", "]", ",", "ycoords", "[", "0", ":", ":", "2", "]", ")", ")", "\n", "for", "(", "x1", ",", "y1", ")", ",", "(", "x2", ",", "y2", ")", "in", "zip", "(", "next_coords", ",", "last_coords", ")", ":", "\n", "            ", "start", "=", "(", "round", "(", "x1", ")", ",", "round", "(", "y1", ")", ")", "\n", "end", "=", "(", "round", "(", "x2", ")", ",", "round", "(", "y2", ")", ")", "\n", "pygame", ".", "draw", ".", "line", "(", "screen", ",", "color", ",", "start", ",", "end", ",", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.traj_Plot": [[1970, 2010], ["range", "range", "Utilities.HeteroFireBots_Reconn_Env_Utilities.draw_dashed_line", "len", "Utilities.HeteroFireBots_Reconn_Env_Utilities.draw_dashed_line", "int", "int", "int", "int", "len", "int", "int", "int", "int", "Utilities.HeteroFireBots_Reconn_Env_Utilities.draw_dashed_line", "Utilities.HeteroFireBots_Reconn_Env_Utilities.draw_dashed_line", "int", "int", "int", "int", "int", "int", "len", "len"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.draw_dashed_line", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.draw_dashed_line", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.draw_dashed_line", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.draw_dashed_line"], ["", "", "def", "traj_Plot", "(", "self", ",", "screen", ",", "user_Data_List", ",", "current_Agent_State", ",", "patrolling_Goal_List", ",", "color", ")", ":", "\n", "# The index of the agent's first goal", "\n", "        ", "index_1st", "=", "-", "1", "\n", "# The previous index of the agent goal", "\n", "index_Start", "=", "-", "1", "\n", "\n", "# Normal mode: plot the rest part of the trajectory", "\n", "if", "current_Agent_State", "[", "14", "]", "==", "0", ":", "\n", "# Search all the goals preserved in the goal list", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "user_Data_List", ")", ")", ":", "\n", "# Only plot the mouse click event (Action Type 0)", "\n", "                ", "if", "(", "user_Data_List", "[", "i", "]", "[", "3", "]", "==", "0", ")", ":", "\n", "# If the given goal has not been passed, plot the dashline", "\n", "                    ", "if", "current_Agent_State", "[", "6", "]", "<=", "user_Data_List", "[", "i", "]", "[", "4", "]", ":", "\n", "# Plot the dashline trajectory between the current agent position and the 1st goal", "\n", "                        ", "if", "index_Start", "==", "-", "1", ":", "\n", "                            ", "index_1st", "=", "i", "\n", "start_pos", "=", "(", "int", "(", "current_Agent_State", "[", "0", "]", ")", ",", "int", "(", "current_Agent_State", "[", "1", "]", ")", ")", "\n", "end_pos", "=", "(", "user_Data_List", "[", "index_1st", "]", "[", "0", "]", ",", "user_Data_List", "[", "index_1st", "]", "[", "1", "]", ")", "\n", "self", ".", "draw_dashed_line", "(", "screen", ",", "color", ",", "start_pos", ",", "end_pos", ",", "width", "=", "2", ",", "dash_length", "=", "5", ")", "\n", "index_Start", "=", "i", "\n", "# Plot the dashline trajectory between the remaining goals", "\n", "", "else", ":", "\n", "                            ", "start_pos", "=", "(", "int", "(", "user_Data_List", "[", "index_Start", "]", "[", "0", "]", ")", ",", "int", "(", "user_Data_List", "[", "index_Start", "]", "[", "1", "]", ")", ")", "\n", "end_pos", "=", "(", "int", "(", "user_Data_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "user_Data_List", "[", "i", "]", "[", "1", "]", ")", ")", "\n", "self", ".", "draw_dashed_line", "(", "screen", ",", "color", ",", "start_pos", ",", "end_pos", ",", "width", "=", "2", ",", "dash_length", "=", "5", ")", "\n", "index_Start", "=", "i", "\n", "\n", "# Patrolling mode: go over all the elements in the patrolling goal list", "\n", "", "", "", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "patrolling_Goal_List", ")", "-", "1", ")", ":", "\n", "                ", "start_pos", "=", "(", "int", "(", "patrolling_Goal_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "patrolling_Goal_List", "[", "i", "]", "[", "1", "]", ")", ")", "\n", "end_pos", "=", "(", "int", "(", "patrolling_Goal_List", "[", "i", "+", "1", "]", "[", "0", "]", ")", ",", "int", "(", "patrolling_Goal_List", "[", "i", "+", "1", "]", "[", "1", "]", ")", ")", "\n", "self", ".", "draw_dashed_line", "(", "screen", ",", "color", ",", "start_pos", ",", "end_pos", ",", "width", "=", "2", ",", "dash_length", "=", "5", ")", "\n", "\n", "", "start_pos", "=", "(", "int", "(", "patrolling_Goal_List", "[", "len", "(", "patrolling_Goal_List", ")", "-", "1", "]", "[", "0", "]", ")", ",", "\n", "int", "(", "patrolling_Goal_List", "[", "len", "(", "patrolling_Goal_List", ")", "-", "1", "]", "[", "1", "]", ")", ")", "\n", "end_pos", "=", "(", "int", "(", "patrolling_Goal_List", "[", "0", "]", "[", "0", "]", ")", ",", "int", "(", "patrolling_Goal_List", "[", "0", "]", "[", "1", "]", ")", ")", "\n", "self", ".", "draw_dashed_line", "(", "screen", ",", "color", ",", "start_pos", ",", "end_pos", ",", "width", "=", "2", ",", "dash_length", "=", "5", ")", "\n", "", "return", "index_1st", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.in_Agent_Base_Region": [[2012, 2025], ["range", "len"], "methods", ["None"], ["", "def", "in_Agent_Base_Region", "(", "self", ",", "goal_X", ",", "goal_Y", ",", "agent_Base_Num", ",", "agent_Base_Loci_Full", ")", ":", "\n", "        ", "in_Base_Flag", "=", "False", "\n", "base_Index", "=", "-", "1", "\n", "for", "i", "in", "range", "(", "agent_Base_Num", ")", ":", "\n", "            ", "agent_Base_Loci", "=", "agent_Base_Loci_Full", "[", "i", "]", "[", "len", "(", "agent_Base_Loci_Full", "[", "i", "]", ")", "-", "1", "]", "\n", "if", "(", "(", "goal_X", ">=", "(", "agent_Base_Loci", "[", "0", "]", "-", "agent_Base_Loci", "[", "2", "]", "/", "2", ")", ")", "and", "\n", "(", "goal_X", "<=", "(", "agent_Base_Loci", "[", "0", "]", "+", "agent_Base_Loci", "[", "2", "]", "/", "2", ")", ")", "and", "\n", "(", "goal_Y", ">=", "(", "agent_Base_Loci", "[", "1", "]", "-", "agent_Base_Loci", "[", "3", "]", "/", "2", ")", ")", "and", "\n", "(", "goal_Y", "<=", "(", "agent_Base_Loci", "[", "1", "]", "+", "agent_Base_Loci", "[", "3", "]", "/", "2", ")", ")", ")", ":", "\n", "                ", "in_Base_Flag", "=", "True", "\n", "base_Index", "=", "i", "\n", "break", "\n", "", "", "return", "in_Base_Flag", ",", "base_Index", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.sensed_Fire_Spot_Plot": [[2028, 2040], ["range", "len", "pygame.draw.circle", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "sensed_Fire_Spot_Plot", "(", "self", ",", "screen", ",", "sensed_List", ",", "fire_Current_Map", ",", "current_Max_Intensity", ")", ":", "\n", "# Search for all the sensing agents' data", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "sensed_List", ")", ")", ":", "\n", "# Update the maximum intersity", "\n", "            ", "if", "current_Max_Intensity", "<", "fire_Current_Map", "[", "int", "(", "sensed_List", "[", "i", "]", "[", "0", "]", ")", "]", "[", "int", "(", "sensed_List", "[", "i", "]", "[", "1", "]", ")", "]", ":", "\n", "                ", "current_Max_Intensity", "=", "fire_Current_Map", "[", "int", "(", "sensed_List", "[", "i", "]", "[", "0", "]", ")", "]", "[", "int", "(", "sensed_List", "[", "i", "]", "[", "1", "]", ")", "]", "\n", "# Plot the fire spot using the red color the corresponds to the intensity", "\n", "", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "\n", "fire_Current_Map", "[", "int", "(", "sensed_List", "[", "i", "]", "[", "0", "]", ")", "]", "[", "int", "(", "sensed_List", "[", "i", "]", "[", "1", "]", ")", "]", "*", "155", "/", "current_Max_Intensity", "+", "100", ",", "0", ",", "0", ")", ",", "\n", "(", "int", "(", "sensed_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "sensed_List", "[", "i", "]", "[", "1", "]", ")", ")", ",", "1", ")", "\n", "\n", "", "return", "current_Max_Intensity", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.score_Calculation": [[2042, 2101], ["sensed_list.copy", "range", "round", "round", "len", "list().copy", "round", "round", "round", "len", "range", "max", "range", "round", "len", "len", "len", "len", "len", "len", "max", "list", "len", "len", "numpy.unique().tolist", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "len", "numpy.unique", "numpy.array", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "score_Calculation", "(", "self", ",", "fire_map_len", ",", "onfire_List", ",", "sensed_list", ",", "pruning_list", ",", "target_onFire_List", ",", "target_onFire_Flag", ",", "facility_penalty", ",", "environment_para", ",", "set_loci", ",", "time", ")", ":", "\n", "        ", "time", "=", "time", "/", "1000", "\n", "\n", "sensed_List_copy", "=", "sensed_list", ".", "copy", "(", ")", "\n", "if", "len", "(", "sensed_List_copy", ")", ">", "0", ":", "\n", "            ", "sensed_List_copy", "[", "0", ":", "0", "]", "=", "list", "(", "onfire_List", ")", ".", "copy", "(", ")", "\n", "modified_sensed_num", "=", "len", "(", "sensed_list", ")", "-", "len", "(", "np", ".", "unique", "(", "np", ".", "array", "(", "sensed_List_copy", ")", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", ")", "+", "len", "(", "onfire_List", ")", "\n", "", "else", ":", "\n", "            ", "modified_sensed_num", "=", "0", "\n", "\n", "", "if", "(", "len", "(", "onfire_List", ")", "+", "len", "(", "pruning_list", ")", ")", ">", "0", ":", "\n", "            ", "overall_pruning_score", "=", "round", "(", "len", "(", "pruning_list", ")", "/", "(", "len", "(", "onfire_List", ")", "+", "len", "(", "pruning_list", ")", ")", "*", "100.00", ",", "2", ")", "\n", "preception_score", "=", "round", "(", "(", "modified_sensed_num", "+", "len", "(", "pruning_list", ")", ")", "/", "(", "len", "(", "onfire_List", ")", "+", "len", "(", "pruning_list", ")", ")", "*", "100.00", ",", "2", ")", "\n", "", "else", ":", "\n", "            ", "overall_pruning_score", "=", "0", "\n", "preception_score", "=", "0", "\n", "\n", "", "if", "(", "modified_sensed_num", "+", "len", "(", "pruning_list", ")", ")", ">", "0", ":", "\n", "            ", "action_score", "=", "round", "(", "len", "(", "pruning_list", ")", "/", "(", "modified_sensed_num", "+", "len", "(", "pruning_list", ")", ")", "*", "100.00", ",", "2", ")", "\n", "", "else", ":", "\n", "            ", "action_score", "=", "0", "\n", "\n", "", "target_Num", "=", "0", "\n", "target_onFire_Num", "=", "0", "\n", "total_Negative_Score", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "target_onFire_Flag", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "target_onFire_Flag", "[", "i", "]", ")", ")", ":", "\n", "                ", "target_onFire_Num", "+=", "target_onFire_Flag", "[", "i", "]", "[", "j", "]", "\n", "target_Num", "+=", "1", "\n", "if", "i", "==", "0", ":", "\n", "                    ", "total_Negative_Score", "+=", "target_onFire_List", "[", "i", "]", "[", "j", "]", "[", "len", "(", "target_onFire_List", "[", "i", "]", "[", "j", "]", ")", "-", "1", "]", "*", "facility_penalty", "[", "0", "]", "\n", "", "elif", "i", "==", "1", ":", "\n", "                    ", "total_Negative_Score", "+=", "target_onFire_List", "[", "i", "]", "[", "j", "]", "[", "len", "(", "target_onFire_List", "[", "i", "]", "[", "j", "]", ")", "-", "1", "]", "*", "facility_penalty", "[", "1", "]", "\n", "", "elif", "i", "==", "2", ":", "\n", "                    ", "total_Negative_Score", "+=", "target_onFire_List", "[", "i", "]", "[", "j", "]", "[", "len", "(", "target_onFire_List", "[", "i", "]", "[", "j", "]", ")", "-", "1", "]", "*", "facility_penalty", "[", "2", "]", "\n", "", "else", ":", "\n", "                    ", "total_Negative_Score", "+=", "target_onFire_List", "[", "i", "]", "[", "j", "]", "[", "len", "(", "target_onFire_List", "[", "i", "]", "[", "j", "]", ")", "-", "1", "]", "*", "facility_penalty", "[", "3", "]", "\n", "\n", "", "", "", "total_Negative_Score", "+=", "len", "(", "onfire_List", ")", "*", "set_loci", "[", "1", "]", "[", "6", "]", "*", "(", "time", "**", "set_loci", "[", "1", "]", "[", "5", "]", ")", "\n", "\n", "if", "set_loci", "[", "1", "]", "[", "9", "]", "==", "0", ":", "\n", "            ", "time_len", "=", "max", "(", "time", "-", "set_loci", "[", "1", "]", "[", "1", "]", ",", "0", ")", "\n", "total_Negative_Expect", "=", "(", "len", "(", "onfire_List", ")", "+", "len", "(", "pruning_list", ")", ")", "*", "set_loci", "[", "1", "]", "[", "6", "]", "*", "(", "time_len", "**", "set_loci", "[", "1", "]", "[", "5", "]", ")", "\n", "", "else", ":", "\n", "            ", "total_Negative_Expect", "=", "0", "\n", "for", "i", "in", "range", "(", "environment_para", "[", "2", "]", ")", ":", "\n", "                ", "time_len", "=", "max", "(", "time", "-", "set_loci", "[", "1", "]", "[", "1", "]", "[", "i", "]", ",", "0", ")", "\n", "total_Negative_Expect", "+=", "(", "len", "(", "onfire_List", ")", "+", "len", "(", "pruning_list", ")", ")", "*", "set_loci", "[", "1", "]", "[", "6", "]", "*", "(", "time_len", "**", "set_loci", "[", "1", "]", "[", "5", "]", ")", "\n", "\n", "", "", "if", "total_Negative_Expect", ">", "0", ":", "\n", "            ", "total_Negative_percent", "=", "round", "(", "total_Negative_Score", "/", "total_Negative_Expect", "*", "100.00", ",", "2", ")", "\n", "", "else", ":", "\n", "            ", "total_Negative_percent", "=", "0", "\n", "\n", "", "safe_Num", "=", "target_Num", "-", "target_onFire_Num", "\n", "facility_perception_score", "=", "round", "(", "safe_Num", "/", "target_Num", "*", "100.00", ",", "2", ")", "\n", "\n", "total_Negative_Score", "=", "round", "(", "total_Negative_Score", ",", "2", ")", "\n", "return", "overall_pruning_score", ",", "preception_score", ",", "action_score", ",", "safe_Num", ",", "facility_perception_score", ",", "total_Negative_Score", ",", "total_Negative_percent", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.score_display": [[2103, 2125], ["pygame.draw.rect", "screen.blit", "screen.blit", "pygame.draw.line", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "screen.blit", "Rect", "font_Score.render", "font.render", "font_Scorelist.render", "font.render", "font_Scorelist.render", "font.render", "font_Scorelist.render", "font.render", "font_Scorelist.render", "font.render", "str", "str", "str", "str", "str"], "methods", ["None"], ["", "def", "score_display", "(", "self", ",", "screen", ",", "font", ",", "font_Score", ",", "font_Scorelist", ",", "pos", ",", "score_list", ")", ":", "\n", "        ", "[", "overall_pruning_score", ",", "preception_score", ",", "action_score", ",", "safe_Num", ",", "facility_perception_score", ",", "total_Negative_Score", ",", "total_Negative_percent", "]", "=", "score_list", "\n", "(", "pos_x", ",", "pos_y", ")", "=", "pos", "\n", "\n", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "Rect", "(", "(", "pos_x", "-", "10", ",", "pos_y", "-", "10", ")", ",", "(", "580", ",", "240", ")", ")", ",", "2", ")", "\n", "interval", "=", "40", "\n", "screen", ".", "blit", "(", "font_Score", ".", "render", "(", "'Score: '", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "pos_x", ",", "pos_y", ")", ")", "\n", "screen", ".", "blit", "(", "font", ".", "render", "(", "str", "(", "-", "total_Negative_Score", ")", ",", "True", ",", "(", "192", ",", "0", ",", "0", ")", ")", ",", "(", "pos_x", "+", "360", ",", "pos_y", ")", ")", "\n", "\n", "pygame", ".", "draw", ".", "line", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "(", "pos_x", ",", "pos_y", "+", "interval", ")", ",", "(", "pos_x", "+", "560", ",", "pos_y", "+", "interval", ")", ",", "2", ")", "\n", "\n", "screen", ".", "blit", "(", "font_Scorelist", ".", "render", "(", "'Overall Firefighting Score:  '", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "pos_x", ",", "pos_y", "+", "1.5", "*", "interval", ")", ")", "\n", "screen", ".", "blit", "(", "font", ".", "render", "(", "str", "(", "overall_pruning_score", ")", ",", "True", ",", "(", "22", ",", "163", ",", "26", ")", ")", ",", "(", "pos_x", "+", "360", ",", "pos_y", "+", "1.5", "*", "interval", ")", ")", "\n", "\n", "screen", ".", "blit", "(", "font_Scorelist", ".", "render", "(", "'Perception Score: '", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "pos_x", ",", "pos_y", "+", "2.5", "*", "interval", ")", ")", "\n", "screen", ".", "blit", "(", "font", ".", "render", "(", "str", "(", "preception_score", ")", ",", "True", ",", "(", "22", ",", "163", ",", "26", ")", ")", ",", "(", "pos_x", "+", "360", ",", "pos_y", "+", "2.5", "*", "interval", ")", ")", "\n", "\n", "screen", ".", "blit", "(", "font_Scorelist", ".", "render", "(", "'Action Score: '", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "pos_x", ",", "pos_y", "+", "3.5", "*", "interval", ")", ")", "\n", "screen", ".", "blit", "(", "font", ".", "render", "(", "str", "(", "action_score", ")", ",", "True", ",", "(", "22", ",", "163", ",", "26", ")", ")", ",", "(", "pos_x", "+", "360", ",", "pos_y", "+", "3.5", "*", "interval", ")", ")", "\n", "\n", "screen", ".", "blit", "(", "font_Scorelist", ".", "render", "(", "'Safe Facilities: '", ",", "True", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "pos_x", ",", "pos_y", "+", "4.5", "*", "interval", ")", ")", "\n", "screen", ".", "blit", "(", "font", ".", "render", "(", "str", "(", "safe_Num", ")", ",", "True", ",", "(", "22", ",", "163", ",", "26", ")", ")", ",", "(", "pos_x", "+", "360", ",", "pos_y", "+", "4.5", "*", "interval", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.fire_region_plot": [[2127, 2132], ["range", "len", "pygame.draw.rect", "screen.blit", "Rect", "font.render", "str"], "methods", ["None"], ["", "def", "fire_region_plot", "(", "self", ",", "screen", ",", "font", ",", "fire_list", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "fire_list", ")", ")", ":", "\n", "            ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "0", ",", "0", ")", ",", "Rect", "(", "(", "fire_list", "[", "i", "]", "[", "0", "]", ",", "fire_list", "[", "i", "]", "[", "1", "]", ")", ",", "(", "100", ",", "100", ")", ")", ",", "2", ")", "\n", "screen", ".", "blit", "(", "font", ".", "render", "(", "str", "(", "fire_list", "[", "i", "]", "[", "2", "]", ")", ",", "False", ",", "(", "255", ",", "0", ",", "0", ")", ")", ",", "(", "fire_list", "[", "i", "]", "[", "0", "]", "+", "30", ",", "\n", "fire_list", "[", "i", "]", "[", "1", "]", "+", "30", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.lake_plot": [[2134, 2143], ["range", "len", "pygame.draw.circle", "pygame.draw.circle", "pygame.draw.circle", "lake_Loci[].append", "numpy.floor", "len", "len", "len", "len", "len", "len", "len", "len"], "methods", ["None"], ["", "", "def", "lake_plot", "(", "self", ",", "screen", ",", "lake_list", ",", "lake_Loci", ",", "current_Time", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "lake_list", ")", ")", ":", "\n", "            ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "191", ",", "255", ")", ",", "(", "lake_list", "[", "i", "]", "[", "len", "(", "lake_list", "[", "i", "]", ")", "-", "1", "]", "[", "0", "]", ",", "lake_list", "[", "i", "]", "[", "len", "(", "lake_list", "[", "i", "]", ")", "-", "1", "]", "[", "1", "]", ")", ",", "100", ")", "\n", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "191", ",", "255", ")", ",", "(", "lake_list", "[", "i", "]", "[", "len", "(", "lake_list", "[", "i", "]", ")", "-", "1", "]", "[", "0", "]", "+", "80", ",", "lake_list", "[", "i", "]", "[", "len", "(", "lake_list", "[", "i", "]", ")", "-", "1", "]", "[", "1", "]", "-", "80", ")", ",", "100", ")", "\n", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "191", ",", "255", ")", ",", "(", "lake_list", "[", "i", "]", "[", "len", "(", "lake_list", "[", "i", "]", ")", "-", "1", "]", "[", "0", "]", "+", "20", ",", "lake_list", "[", "i", "]", "[", "len", "(", "lake_list", "[", "i", "]", ")", "-", "1", "]", "[", "1", "]", "+", "80", ")", ",", "100", ")", "\n", "if", "lake_Loci", "!=", "None", ":", "\n", "                ", "lake_Loci", "[", "i", "]", ".", "append", "(", "\n", "[", "lake_list", "[", "i", "]", "[", "len", "(", "lake_list", "[", "i", "]", ")", "-", "1", "]", "[", "0", "]", ",", "lake_list", "[", "i", "]", "[", "len", "(", "lake_list", "[", "i", "]", ")", "-", "1", "]", "[", "1", "]", ",", "100", ",", "np", ".", "floor", "(", "current_Time", "/", "100", ")", "]", ")", "\n", "", "", "return", "lake_Loci", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.lake_plot_static": [[2145, 2150], ["range", "len", "pygame.draw.circle", "pygame.draw.circle", "pygame.draw.circle"], "methods", ["None"], ["", "def", "lake_plot_static", "(", "self", ",", "screen", ",", "lake_list", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "lake_list", ")", ")", ":", "\n", "            ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "191", ",", "255", ")", ",", "(", "lake_list", "[", "i", "]", "[", "0", "]", ",", "lake_list", "[", "i", "]", "[", "1", "]", ")", ",", "100", ")", "\n", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "191", ",", "255", ")", ",", "(", "lake_list", "[", "i", "]", "[", "0", "]", "+", "80", ",", "lake_list", "[", "i", "]", "[", "1", "]", "-", "80", ")", ",", "100", ")", "\n", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "191", ",", "255", ")", ",", "(", "lake_list", "[", "i", "]", "[", "0", "]", "+", "20", ",", "lake_list", "[", "i", "]", "[", "1", "]", "+", "80", ")", ",", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.Utilities.HeteroFireBots_Reconn_Env_Utilities.road_plot": [[2152, 2157], ["range", "len", "range", "len", "pygame.draw.line"], "methods", ["None"], ["", "", "def", "road_plot", "(", "self", ",", "screen", ",", "target_Loci", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "target_Loci", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "len", "(", "target_Loci", ")", ")", ":", "\n", "                ", "pygame", ".", "draw", ".", "line", "(", "screen", ",", "(", "139", ",", "69", ",", "19", ")", ",", "(", "target_Loci", "[", "i", "]", "[", "0", "]", "[", "0", "]", ",", "target_Loci", "[", "i", "]", "[", "0", "]", "[", "1", "]", ")", ",", "\n", "(", "target_Loci", "[", "j", "]", "[", "0", "]", "[", "0", "]", ",", "target_Loci", "[", "j", "]", "[", "0", "]", "[", "1", "]", ")", ",", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.WildFireModel.WildFire.__init__": [[54, 74], ["numpy.zeros", "ValueError", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "terrain_sizes", "=", "None", ",", "hotspot_areas", "=", "None", ",", "num_ign_points", "=", "None", ",", "duration", "=", "None", ",", "\n", "time_step", "=", "1", ",", "radiation_radius", "=", "10", ",", "weak_fire_threshold", "=", "0.5", ",", "flame_height", "=", "3", ",", "flame_angle", "=", "np", ".", "pi", "/", "3", ")", ":", "\n", "\n", "        ", "if", "terrain_sizes", "is", "None", "or", "hotspot_areas", "is", "None", "or", "num_ign_points", "is", "None", "or", "duration", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! 'WildFire' environment cannot be initialized without any parameters.\"", ")", "\n", "\n", "", "self", ".", "terrain_sizes", "=", "[", "int", "(", "terrain_sizes", "[", "0", "]", ")", ",", "int", "(", "terrain_sizes", "[", "1", "]", ")", "]", "# sizes of the terrain", "\n", "self", ".", "initial_terrain_map", "=", "np", ".", "zeros", "(", "shape", "=", "self", ".", "terrain_sizes", ")", "# initializing the terrain", "\n", "self", ".", "hotspot_areas", "=", "hotspot_areas", "# format:: [[x_min, x_max, y_min, y_max]]", "\n", "self", ".", "num_ign_points", "=", "num_ign_points", "# number of fire-spots in each area", "\n", "self", ".", "duration", "=", "duration", "# total runtime steps", "\n", "self", ".", "time_step", "=", "time_step", "# time step", "\n", "self", ".", "radiation_radius", "=", "radiation_radius", "# the maximum effective thermal radiation range (default:: 10 [m])", "\n", "self", ".", "weak_fire_threshold", "=", "weak_fire_threshold", "# fire intensity threshold [W/m], where a fire is burnt out if below this", "\n", "\n", "# max vertical extension of the flame [m] (ignore the occasional flashes which rise above the general level of fire)", "\n", "self", ".", "flame_height", "=", "flame_height", "\n", "\n", "# flame tilt angle (angle between flame heading and a vertical axis going through the center of fire spot on ground) [rad]", "\n", "self", ".", "flame_angle", "=", "flame_angle", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.WildFireModel.WildFire.hotspot_init": [[76, 105], ["numpy.zeros", "numpy.zeros", "numpy.random.randint", "numpy.random.randint", "numpy.concatenate", "numpy.concatenate", "numpy.sqrt", "WildFireModel.WildFire.fire_intensity", "numpy.array", "numpy.tile", "numpy.where", "ign_points_all[].tolist", "idx.tolist"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.fire_intensity"], ["", "def", "hotspot_init", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        This function generates the initial hotspot areas\n\n        :return: ignition points across the entire map\n        \"\"\"", "\n", "\n", "ign_points_all", "=", "np", ".", "zeros", "(", "shape", "=", "[", "0", ",", "2", "]", ")", "\n", "for", "hotspot", "in", "self", ".", "hotspot_areas", ":", "\n", "            ", "x_min", ",", "x_max", "=", "hotspot", "[", "0", "]", ",", "hotspot", "[", "1", "]", "\n", "y_min", ",", "y_max", "=", "hotspot", "[", "2", "]", ",", "hotspot", "[", "3", "]", "\n", "ign_points_x", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "x_min", ",", "high", "=", "x_max", ",", "size", "=", "(", "self", ".", "num_ign_points", ",", "1", ")", ")", "\n", "ign_points_y", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "y_min", ",", "high", "=", "y_max", ",", "size", "=", "(", "self", ".", "num_ign_points", ",", "1", ")", ")", "\n", "ign_points_this_area", "=", "np", ".", "concatenate", "(", "[", "ign_points_x", ",", "ign_points_y", "]", ",", "axis", "=", "1", ")", "\n", "ign_points_all", "=", "np", ".", "concatenate", "(", "[", "ign_points_all", ",", "ign_points_this_area", "]", ",", "axis", "=", "0", ")", "\n", "\n", "# computing the fire intensity", "\n", "", "counter", "=", "0", "\n", "ign_points", "=", "np", ".", "zeros", "(", "shape", "=", "[", "ign_points_all", ".", "shape", "[", "0", "]", ",", "3", "]", ")", "\n", "for", "point", "in", "ign_points_all", ":", "\n", "            ", "heat_source_diff", "=", "np", ".", "tile", "(", "point", ",", "(", "ign_points_all", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "-", "ign_points_all", "\n", "heat_source_dists", "=", "np", ".", "sqrt", "(", "(", "heat_source_diff", "[", ":", ",", "0", "]", "**", "2", ")", "+", "(", "heat_source_diff", "[", ":", ",", "1", "]", "**", "2", ")", ")", "\n", "idx", "=", "np", ".", "where", "(", "heat_source_dists", "<=", "self", ".", "radiation_radius", ")", "[", "0", "]", "\n", "fire_intensity", "=", "self", ".", "fire_intensity", "(", "point", ",", "ign_points_all", "[", "idx", ".", "tolist", "(", ")", ",", ":", "]", ".", "tolist", "(", ")", ")", "\n", "ign_points", "[", "counter", "]", "=", "np", ".", "array", "(", "[", "point", "[", "0", "]", ",", "point", "[", "1", "]", ",", "fire_intensity", "]", ")", "\n", "\n", "counter", "+=", "1", "\n", "\n", "", "return", "ign_points", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.WildFireModel.WildFire.fire_intensity": [[107, 143], ["ValueError", "numpy.random.normal", "numpy.random.normal", "numpy.cos", "intensity.append", "sum", "numpy.random.randint", "numpy.random.randint", "numpy.exp", "numpy.cos"], "methods", ["None"], ["", "def", "fire_intensity", "(", "self", ",", "current_fire_spot", "=", "None", ",", "heat_source_spots", "=", "None", ",", "deviation_min", "=", "9", ",", "deviation_max", "=", "11", ")", ":", "\n", "        ", "\"\"\"\n        this function performs the fire intensity calculation according to [1] for each new fire front.\n\n        [1] http://www.cfs.nrcan.gc.ca/bookstore_pdfs/21396.pdf\n\n        :param current_fire_spot: the fire location for which the intensity is going to be computed\n        :param heat_source_spots: the fire source location close to the new fire spot\n        :param deviation_min: min of the radiation range\n        :param deviation_max: max of the radiation range\n        :return: fire intensity at the new fire spot location [W/m]\n        \"\"\"", "\n", "\n", "if", "current_fire_spot", "is", "None", "or", "heat_source_spots", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Current fire location and included vicinity are required.\"", ")", "\n", "\n", "", "x", "=", "current_fire_spot", "[", "0", "]", "\n", "y", "=", "current_fire_spot", "[", "1", "]", "\n", "\n", "x_dev", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "deviation_min", ",", "high", "=", "deviation_max", ",", "size", "=", "(", "1", ",", "1", ")", ")", "[", "0", "]", "[", "0", "]", "+", "np", ".", "random", ".", "normal", "(", ")", "\n", "y_dev", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "deviation_min", ",", "high", "=", "deviation_max", ",", "size", "=", "(", "1", ",", "1", ")", ")", "[", "0", "]", "[", "0", "]", "+", "np", ".", "random", ".", "normal", "(", ")", "\n", "\n", "if", "np", ".", "cos", "(", "self", ".", "flame_angle", ")", "==", "0", ":", "\n", "            ", "intensity_coeff", "=", "(", "259.833", "*", "(", "self", ".", "flame_height", "**", "2.174", ")", ")", "/", "1e3", "# 1e3 is to change the unit to [MW/m]", "\n", "", "else", ":", "\n", "            ", "intensity_coeff", "=", "(", "259.833", "*", "(", "(", "self", ".", "flame_height", "/", "np", ".", "cos", "(", "self", ".", "flame_angle", ")", ")", "**", "2.174", ")", ")", "/", "1e3", "# 1e3 is to change the unit to [MW/m]", "\n", "\n", "", "intensity", "=", "[", "]", "\n", "for", "spot", "in", "heat_source_spots", ":", "\n", "            ", "x_f", "=", "spot", "[", "0", "]", "\n", "y_f", "=", "spot", "[", "1", "]", "\n", "intensity", ".", "append", "(", "(", "1", "/", "(", "2", "*", "np", ".", "pi", "*", "x_dev", "*", "y_dev", ")", ")", "*", "\n", "np", ".", "exp", "(", "-", "0.5", "*", "(", "(", "(", "(", "x", "-", "x_f", ")", "**", "2", ")", "/", "x_dev", "**", "2", ")", "+", "(", "(", "(", "y", "-", "y_f", ")", "**", "2", ")", "/", "y_dev", "**", "2", ")", ")", ")", ")", "\n", "", "accumulated_intensity", "=", "sum", "(", "intensity", ")", "*", "intensity_coeff", "\n", "\n", "return", "1e3", "*", "accumulated_intensity", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.WildFireModel.WildFire.fire_flame_length": [[145, 162], ["ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "fire_flame_length", "(", "accumulated_intensity", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function computes the fire length as a function of fire intensity according to [1].\n\n        [1] http://www.cfs.nrcan.gc.ca/bookstore_pdfs/21396.pdf\n\n        :param accumulated_intensity: fire intensity at the current fire spot location [kW/m]\n        :return: flame length at the current fire spot location\n        \"\"\"", "\n", "\n", "if", "accumulated_intensity", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> oops! The intensity at current fire location is required.\"", ")", "\n", "\n", "", "flame_length", "=", "0.0775", "*", "(", "accumulated_intensity", "**", "0.46", ")", "\n", "\n", "return", "flame_length", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.WildFireModel.WildFire.geo_phys_info_init": [[164, 185], ["numpy.random.normal", "numpy.random.normal", "numpy.random.rand"], "methods", ["None"], ["", "def", "geo_phys_info_init", "(", "self", ",", "max_fuel_coeff", "=", "7", ",", "avg_wind_speed", "=", "5", ",", "avg_wind_direction", "=", "np", ".", "pi", "/", "8", ")", ":", "\n", "        ", "\"\"\"\n        This function generates a set of Geo-Physical information based on user defined ranges for each parameter\n\n        :param max_fuel_coeff: maximum fuel coefficient based on vegetation type of the terrain\n        :param avg_wind_speed: average effective mid-flame wind speed\n        :param avg_wind_direction: wind azimuth\n        :return: a dictionary containing geo-physical information\n        \"\"\"", "\n", "\n", "min_fuel_coeff", "=", "1e-15", "\n", "fuel_rng", "=", "max_fuel_coeff", "-", "min_fuel_coeff", "\n", "spread_rate", "=", "fuel_rng", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "terrain_sizes", "[", "0", "]", ",", "self", ".", "terrain_sizes", "[", "1", "]", ")", "+", "min_fuel_coeff", "\n", "wind_speed", "=", "np", ".", "random", ".", "normal", "(", "avg_wind_speed", ",", "2", ",", "size", "=", "(", "self", ".", "terrain_sizes", "[", "0", "]", ",", "1", ")", ")", "\n", "wind_direction", "=", "np", ".", "random", ".", "normal", "(", "avg_wind_direction", ",", "2", ",", "size", "=", "(", "self", ".", "terrain_sizes", "[", "0", "]", ",", "1", ")", ")", "\n", "\n", "geo_phys_info", "=", "{", "'spread_rate'", ":", "spread_rate", ",", "\n", "'wind_speed'", ":", "wind_speed", ",", "\n", "'wind_direction'", ":", "wind_direction", "}", "\n", "\n", "return", "geo_phys_info", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.WildFireModel.WildFire.fire_propagation": [[187, 254], ["numpy.zeros", "numpy.zeros", "ValueError", "numpy.array", "numpy.sqrt", "WildFireModel.WildFire.fire_intensity", "numpy.sqrt", "WildFireModel.WildFire.fire_intensity", "numpy.array", "numpy.sin", "numpy.cos", "numpy.tile", "numpy.where", "ign_points_all[].tolist", "numpy.tile", "numpy.where", "previous_terrain_map[].tolist", "numpy.sqrt", "numpy.sqrt", "int", "int", "int", "int", "numpy.random.randint", "numpy.random.randint", "numpy.exp", "numpy.exp", "numpy.absolute", "numpy.absolute", "round", "round", "numpy.power", "numpy.power", "idx1.tolist", "idx2.tolist"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.fire_intensity", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.fire_intensity"], ["", "def", "fire_propagation", "(", "self", ",", "world_Size", ",", "ign_points_all", "=", "None", ",", "geo_phys_info", "=", "None", ",", "\n", "previous_terrain_map", "=", "None", ",", "pruned_List", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        This function implements the simplified FARSITE wildfire propagation mathematical model\n\n        :param ign_points_all: array including all fire-fronts and their intensities across entire terrain [output of hotspot_init()]\n        :param geo_phys_info: a dictionary including geo-physical information [output of geo_phys_info_inti()]\n        :param previous_terrain_map: the terrain including all fire-fronts and their intensities as an array\n        :return: new fire front points and their corresponding geo-physical information\n        \"\"\"", "\n", "\n", "if", "ign_points_all", "is", "None", "or", "geo_phys_info", "is", "None", "or", "previous_terrain_map", "is", "None", "or", "pruned_List", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Fire propagation function needs ALL of its inputs to operate!\"", ")", "\n", "\n", "", "current_geo_phys_info", "=", "np", ".", "zeros", "(", "shape", "=", "[", "ign_points_all", ".", "shape", "[", "0", "]", ",", "3", "]", ")", "\n", "new_fire_front", "=", "np", ".", "zeros", "(", "shape", "=", "[", "ign_points_all", ".", "shape", "[", "0", "]", ",", "3", "]", ")", "\n", "counter", "=", "0", "\n", "for", "point", "in", "ign_points_all", ":", "\n", "# extracting the data", "\n", "            ", "x", ",", "y", "=", "point", "[", "0", "]", ",", "point", "[", "1", "]", "\n", "# Ensure that all the fire spots to be displayed must be within the window scope", "\n", "if", "(", "(", "x", "<=", "(", "world_Size", "-", "1", ")", ")", "and", "(", "y", "<=", "(", "world_Size", "-", "1", ")", ")", "and", "(", "x", ">", "0", ")", "and", "(", "y", ">", "0", ")", ")", ":", "\n", "                ", "spread_rate", "=", "geo_phys_info", "[", "'spread_rate'", "]", "\n", "wind_speed", "=", "geo_phys_info", "[", "'wind_speed'", "]", "\n", "wind_direction", "=", "geo_phys_info", "[", "'wind_direction'", "]", "\n", "\n", "# extracting the required information", "\n", "R", "=", "spread_rate", "[", "int", "(", "round", "(", "x", ")", ")", ",", "int", "(", "round", "(", "y", ")", ")", "]", "\n", "U", "=", "wind_speed", "[", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "self", ".", "terrain_sizes", "[", "0", "]", ")", "]", "[", "0", "]", "\n", "Theta", "=", "wind_direction", "[", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "self", ".", "terrain_sizes", "[", "0", "]", ")", "]", "[", "0", "]", "\n", "current_geo_phys_info", "[", "counter", "]", "=", "np", ".", "array", "(", "[", "R", ",", "U", ",", "Theta", "]", ")", "# storing GP information", "\n", "\n", "# Simplified FARSITE", "\n", "LB", "=", "0.936", "*", "np", ".", "exp", "(", "0.2566", "*", "U", ")", "+", "0.461", "*", "np", ".", "exp", "(", "-", "0.1548", "*", "U", ")", "-", "0.397", "\n", "HB", "=", "(", "LB", "+", "np", ".", "sqrt", "(", "np", ".", "absolute", "(", "np", ".", "power", "(", "LB", ",", "2", ")", "-", "1", ")", ")", ")", "/", "(", "LB", "-", "np", ".", "sqrt", "(", "np", ".", "absolute", "(", "np", ".", "power", "(", "LB", ",", "2", ")", "-", "1", ")", ")", ")", "\n", "C", "=", "0.5", "*", "(", "R", "-", "(", "R", "/", "HB", ")", ")", "\n", "\n", "x_diff", "=", "C", "*", "np", ".", "sin", "(", "Theta", ")", "\n", "y_diff", "=", "C", "*", "np", ".", "cos", "(", "Theta", ")", "\n", "\n", "# updating the fire location", "\n", "if", "[", "int", "(", "x", ")", ",", "int", "(", "y", ")", "]", "not", "in", "pruned_List", ":", "\n", "                    ", "x_new", "=", "x", "+", "x_diff", "*", "self", ".", "time_step", "\n", "y_new", "=", "y", "+", "y_diff", "*", "self", ".", "time_step", "\n", "", "else", ":", "\n", "                    ", "x_new", "=", "x", "\n", "y_new", "=", "y", "\n", "\n", "# computing the fire intensity", "\n", "", "heat_source_diff1", "=", "np", ".", "tile", "(", "point", ",", "(", "ign_points_all", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "-", "ign_points_all", "\n", "heat_source_dists1", "=", "np", ".", "sqrt", "(", "(", "heat_source_diff1", "[", ":", ",", "0", "]", "**", "2", ")", "+", "(", "heat_source_diff1", "[", ":", ",", "1", "]", "**", "2", ")", ")", "\n", "idx1", "=", "np", ".", "where", "(", "heat_source_dists1", "<=", "self", ".", "radiation_radius", ")", "[", "0", "]", "\n", "fire_intensity1", "=", "self", ".", "fire_intensity", "(", "point", ",", "ign_points_all", "[", "idx1", ".", "tolist", "(", ")", ",", ":", "]", ".", "tolist", "(", ")", ")", "\n", "\n", "heat_source_diff2", "=", "np", ".", "tile", "(", "point", ",", "(", "previous_terrain_map", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "-", "previous_terrain_map", "\n", "heat_source_dists2", "=", "np", ".", "sqrt", "(", "(", "heat_source_diff2", "[", ":", ",", "0", "]", "**", "2", ")", "+", "(", "heat_source_diff2", "[", ":", ",", "1", "]", "**", "2", ")", ")", "\n", "idx2", "=", "np", ".", "where", "(", "heat_source_dists2", "<=", "self", ".", "radiation_radius", ")", "[", "0", "]", "\n", "fire_intensity2", "=", "self", ".", "fire_intensity", "(", "point", ",", "previous_terrain_map", "[", "idx2", ".", "tolist", "(", ")", ",", ":", "]", ".", "tolist", "(", ")", ")", "\n", "\n", "fire_intensity", "=", "fire_intensity1", "+", "fire_intensity2", "\n", "\n", "# storing new fire-front locations and intensity", "\n", "new_fire_front", "[", "counter", "]", "=", "np", ".", "array", "(", "[", "x_new", ",", "y_new", ",", "fire_intensity", "]", ")", "\n", "\n", "counter", "+=", "1", "\n", "\n", "", "", "return", "new_fire_front", ",", "current_geo_phys_info", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.WildFireModel.WildFire.fire_decay": [[256, 295], ["numpy.zeros", "WildFireModel.WildFire.pruning_fire_map", "ValueError", "numpy.ones", "numpy.array", "numpy.exp", "int", "int", "round", "round"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.pruning_fire_map"], ["", "def", "fire_decay", "(", "self", ",", "terrain_map", "=", "None", ",", "time_vector", "=", "None", ",", "geo_phys_info", "=", "None", ",", "decay_rate", "=", "0.01", ")", ":", "\n", "        ", "\"\"\"\n        this function performs the dynamic fire decay over time due to fuel exhaustion.\n\n        :param terrain_map: the terrain including all fire-fronts and their intensities as an array\n        :param time_vector: a vector containing how long has passed after the ignition of each point until now\n        :param geo_phys_info: a dictionary including geo-physical information [output of geo_phys_info_inti()]\n        :param decay_rate: fuel exhaustion rate (greater means faster exhaustion)\n        :return: the new fire map with updated intensities and the time vector\n        \"\"\"", "\n", "\n", "if", "terrain_map", "is", "None", "or", "geo_phys_info", "is", "None", "or", "time_vector", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! The fire decay function requires ALL its inputs (except for 'decay_rate=0.01' as default) to operate.\"", ")", "\n", "\n", "", "spread_rate", "=", "geo_phys_info", "[", "'spread_rate'", "]", "\n", "\n", "step_vector", "=", "self", ".", "time_step", "*", "np", ".", "ones", "(", "terrain_map", ".", "shape", "[", "0", "]", ")", "\n", "updated_time_vector", "=", "time_vector", "+", "step_vector", "\n", "\n", "# updating the intensities", "\n", "counter", "=", "0", "\n", "updated_terrain_map", "=", "np", ".", "zeros", "(", "shape", "=", "[", "terrain_map", ".", "shape", "[", "0", "]", ",", "3", "]", ")", "\n", "for", "spot", "in", "terrain_map", ":", "\n", "            ", "x", "=", "spot", "[", "0", "]", "\n", "y", "=", "spot", "[", "1", "]", "\n", "intensity", "=", "spot", "[", "2", "]", "\n", "R", "=", "spread_rate", "[", "int", "(", "round", "(", "x", ")", ")", ",", "int", "(", "round", "(", "y", ")", ")", "]", "\n", "\n", "I_new", "=", "intensity", "*", "np", ".", "exp", "(", "-", "decay_rate", "*", "updated_time_vector", "[", "counter", "]", "/", "R", ")", "\n", "\n", "updated_terrain_map", "[", "counter", "]", "=", "np", ".", "array", "(", "[", "x", ",", "y", ",", "I_new", "]", ")", "\n", "\n", "counter", "+=", "1", "\n", "\n", "# pruning dead fire spots from the fire map", "\n", "", "updated_terrain_map", ",", "updated_time_vector", ",", "burnt_out_fires_new", "=", "self", ".", "pruning_fire_map", "(", "\n", "updated_terrain_map", "=", "updated_terrain_map", ",", "updated_time_vector", "=", "updated_time_vector", ")", "\n", "\n", "return", "updated_terrain_map", ",", "updated_time_vector", ",", "burnt_out_fires_new", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.WildFireModel.WildFire.pruning_fire_map": [[297, 312], ["numpy.where", "numpy.delete", "numpy.delete"], "methods", ["None"], ["", "def", "pruning_fire_map", "(", "self", ",", "updated_terrain_map", "=", "None", ",", "updated_time_vector", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this functions performs the fire map pruning and puts out fire spots that have \"weak enough\" intensity\n\n        :param updated_terrain_map: most recent terrain map updated after the intensity measures\n        :param updated_time_vector: most recent time vector\n        :return: new terrain map, time vector and pruned fire spots\n        \"\"\"", "\n", "\n", "burnt_out_fires_idx", "=", "np", ".", "where", "(", "updated_terrain_map", "[", ":", ",", "2", "]", "<", "self", ".", "weak_fire_threshold", ")", "\n", "burnt_out_fires_new", "=", "updated_terrain_map", "[", "burnt_out_fires_idx", "]", "\n", "updated_terrain_map", "=", "np", ".", "delete", "(", "updated_terrain_map", ",", "burnt_out_fires_idx", ",", "0", ")", "\n", "updated_time_vector", "=", "np", ".", "delete", "(", "updated_time_vector", ",", "burnt_out_fires_idx", ")", "\n", "\n", "return", "updated_terrain_map", ",", "updated_time_vector", ",", "burnt_out_fires_new", "\n", "", "", ""]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.target_Plot": [[58, 117], ["pygame.draw.rect", "pygame.draw.polygon", "screen.blit", "pygame.draw.rect", "pygame.draw.polygon", "Rect", "hospital_Font.render", "pygame.draw.rect", "pygame.draw.polygon", "screen.blit", "Rect", "Rect", "hospital_Font.render", "pygame.draw.rect", "pygame.draw.polygon", "screen.blit", "Rect", "hospital_Font.render"], "methods", ["None"], ["    ", "def", "target_Plot", "(", "self", ",", "screen", ",", "hospital_Font", ",", "target_Loci_Current", ")", ":", "\n", "# The coordination of the upper-left corner of target", "\n", "        ", "target_Upper_Left_Corner", "=", "(", "target_Loci_Current", "[", "0", "]", "-", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", "\n", "target_Size", "=", "(", "target_Loci_Current", "[", "2", "]", ",", "target_Loci_Current", "[", "3", "]", ")", "\n", "# Plot the normaltarget, fill the rectangle with orange", "\n", "if", "target_Loci_Current", "[", "4", "]", "==", "0", ":", "\n", "            ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "165", ",", "0", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ")", "\n", "# The vertex set for the target's roof", "\n", "firefighter_Agent_Vertex", "=", "[", "(", "target_Loci_Current", "[", "0", "]", "-", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", "+", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", ",", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", ")", "]", "\n", "# Plot the target's roof (Triangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "210", ",", "105", ",", "30", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "# Display the goal on the screen", "\n", "screen", ".", "blit", "(", "hospital_Font", ".", "render", "(", "'A'", ",", "False", ",", "(", "0", ",", "0", ",", "0", ")", ")", ",", "(", "target_Loci_Current", "[", "0", "]", "-", "10", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "20", ")", ")", "\n", "\n", "", "elif", "target_Loci_Current", "[", "4", "]", "==", "1", ":", "\n", "            ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "255", ",", "255", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ")", "\n", "# The vertex set for the target's roof", "\n", "firefighter_Agent_Vertex", "=", "[", "(", "target_Loci_Current", "[", "0", "]", "-", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", "+", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", ",", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", ")", "]", "\n", "# Plot the target's roof (Triangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "210", ",", "105", ",", "30", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "# Display the goal on the screen", "\n", "screen", ".", "blit", "(", "hospital_Font", ".", "render", "(", "'H'", ",", "False", ",", "(", "255", ",", "0", ",", "0", ")", ")", ",", "(", "target_Loci_Current", "[", "0", "]", "-", "10", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "20", ")", ")", "\n", "\n", "", "elif", "target_Loci_Current", "[", "4", "]", "==", "2", ":", "\n", "            ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "65", ",", "105", ",", "225", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ")", "\n", "# The vertex set for the target's roof", "\n", "firefighter_Agent_Vertex", "=", "[", "(", "target_Loci_Current", "[", "0", "]", "-", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", "+", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", ",", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", ")", "]", "\n", "# Plot the target's roof (Triangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "210", ",", "105", ",", "30", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "# Display the goal on the screen", "\n", "screen", ".", "blit", "(", "hospital_Font", ".", "render", "(", "'P'", ",", "False", ",", "(", "255", ",", "255", ",", "0", ")", ")", ",", "(", "target_Loci_Current", "[", "0", "]", "-", "10", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "20", ")", ")", "\n", "\n", "# If the edge of the target is enabled, plot the edge with line width 2", "\n", "", "if", "target_Loci_Current", "[", "5", "]", "==", "1", ":", "\n", "            ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ",", "2", ")", "\n", "# The vertex set for the target's roof", "\n", "firefighter_Agent_Vertex", "=", "[", "(", "target_Loci_Current", "[", "0", "]", "-", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", "+", "target_Loci_Current", "[", "2", "]", "/", "2", ",", "\n", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", "/", "2", ")", ",", "\n", "(", "target_Loci_Current", "[", "0", "]", ",", "target_Loci_Current", "[", "1", "]", "-", "target_Loci_Current", "[", "3", "]", ")", "]", "\n", "# Plot the target's roof (Triangle)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "firefighter_Agent_Vertex", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.agent_Base_Plot": [[121, 131], ["pygame.draw.rect", "Rect", "pygame.draw.rect", "Rect"], "methods", ["None"], ["", "", "def", "agent_Base_Plot", "(", "self", ",", "screen", ",", "agent_Base_Info", ")", ":", "\n", "# The coordination of the upper-left corner of agent base", "\n", "        ", "agent_Base_Upper_Left_Corner", "=", "(", "\n", "agent_Base_Info", "[", "0", "]", "-", "agent_Base_Info", "[", "2", "]", "/", "2", ",", "agent_Base_Info", "[", "1", "]", "-", "agent_Base_Info", "[", "3", "]", "/", "2", ")", "\n", "agent_Base_Size", "=", "(", "agent_Base_Info", "[", "2", "]", ",", "agent_Base_Info", "[", "3", "]", ")", "\n", "# Plot the agent base, fill the rectangle with orange", "\n", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "225", ",", "0", ")", ",", "Rect", "(", "agent_Base_Upper_Left_Corner", ",", "agent_Base_Size", ")", ")", "\n", "# If the edge of the agent base is enabled, plot the edge with line width 2", "\n", "if", "agent_Base_Info", "[", "5", "]", "==", "1", ":", "\n", "            ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "Rect", "(", "agent_Base_Upper_Left_Corner", ",", "agent_Base_Size", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.onFire_List_Recovery": [[137, 168], ["range", "range", "range", "len", "range", "range", "onFire_List.append", "len", "len", "int", "int", "new_fire_front.append", "new_fire_front.append", "int", "int"], "methods", ["None"], ["", "", "def", "onFire_List_Recovery", "(", "self", ",", "num_ign_points", ",", "fire_States_List", ",", "world_Size", ",", "fireSpots_Num", ",", "onFire_List", ",", "time", ",", "spec_flag", ",", "set_time", ")", ":", "\n", "        ", "new_fire_front", "=", "[", "]", "\n", "# Write the fire spot into the current world map list", "\n", "if", "spec_flag", "==", "0", ":", "\n", "            ", "for", "i", "in", "range", "(", "fireSpots_Num", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "num_ign_points", ")", ":", "\n", "                    ", "if", "(", "num_ign_points", "*", "time", "+", "j", ")", "<", "len", "(", "fire_States_List", "[", "i", "]", ")", ":", "\n", "                        ", "if", "(", "set_time", "*", "1000", ")", "<", "fire_States_List", "[", "i", "]", "[", "num_ign_points", "*", "time", "+", "j", "]", "[", "3", "]", ":", "\n", "                            ", "new_fire_front", ".", "append", "(", "[", "fire_States_List", "[", "i", "]", "[", "num_ign_points", "*", "time", "+", "j", "]", "[", "0", "]", ",", "\n", "fire_States_List", "[", "i", "]", "[", "num_ign_points", "*", "time", "+", "j", "]", "[", "1", "]", ",", "\n", "fire_States_List", "[", "i", "]", "[", "num_ign_points", "*", "time", "+", "j", "]", "[", "2", "]", "]", ")", "\n", "", "", "", "", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "fireSpots_Num", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "num_ign_points", "[", "i", "]", ")", ":", "\n", "                    ", "if", "(", "num_ign_points", "[", "i", "]", "*", "time", "+", "j", ")", "<", "len", "(", "fire_States_List", "[", "i", "]", ")", ":", "\n", "                        ", "if", "(", "(", "set_time", "[", "i", "]", "*", "1000", ")", "<", "fire_States_List", "[", "i", "]", "[", "num_ign_points", "[", "i", "]", "*", "time", "+", "j", "]", "[", "3", "]", ")", ":", "\n", "                            ", "new_fire_front", ".", "append", "(", "[", "fire_States_List", "[", "i", "]", "[", "num_ign_points", "[", "i", "]", "*", "time", "+", "j", "]", "[", "0", "]", ",", "\n", "fire_States_List", "[", "i", "]", "[", "num_ign_points", "[", "i", "]", "*", "time", "+", "j", "]", "[", "1", "]", ",", "\n", "fire_States_List", "[", "i", "]", "[", "num_ign_points", "[", "i", "]", "*", "time", "+", "j", "]", "[", "2", "]", "]", ")", "\n", "\n", "# Write the fire spot into the current world map list", "\n", "", "", "", "", "", "for", "i", "in", "range", "(", "len", "(", "new_fire_front", ")", ")", ":", "\n", "# # Ensure that all the fire spots to be displayed must be within the window scope", "\n", "            ", "if", "(", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", "<=", "(", "world_Size", "-", "1", ")", ")", "and", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", "<=", "(", "world_Size", "-", "1", ")", ")", "\n", "and", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ">=", "0", ")", "and", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ">=", "0", ")", ")", ":", "\n", "\n", "# If the new fire front points is not included in the current onFire_List, add it into the list", "\n", "                ", "if", "(", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", "not", "in", "onFire_List", ")", ":", "\n", "                    ", "onFire_List", ".", "append", "(", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "\n", "", "", "", "return", "new_fire_front", ",", "onFire_List", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.in_fov": [[170, 190], ["ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "in_fov", "(", "br_x", "=", "None", ",", "br_y", "=", "None", ",", "tl_x", "=", "None", ",", "tl_y", "=", "None", ",", "x", "=", "None", ",", "y", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function checks if a specific point is inside the FOV of an UAV. The FOV is specified by two of its coordinates\n\n        :param br_x: x bottom right of FOV\n        :param br_y: y bottom right of FOV\n        :param tl_x: x top left of FOV\n        :param tl_y: y top left of FOV\n        :param x: x of the point to be checked\n        :param y: y of the point to be checked\n        :return: boolean flag\n        \"\"\"", "\n", "if", "br_x", "is", "None", "or", "br_y", "is", "None", "or", "tl_x", "is", "None", "or", "tl_y", "is", "None", "or", "x", "is", "None", "or", "y", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Function 'in_fov()' needs ALL of its input arguments to work!\"", ")", "\n", "\n", "", "if", "x", ">=", "tl_x", "and", "x", "<=", "br_x", "and", "y", ">=", "tl_y", "and", "y", "<=", "br_y", ":", "\n", "            ", "return", "True", "\n", "", "else", ":", "\n", "            ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.pruned_List_Recovery": [[191, 197], ["range", "len", "len", "range", "len", "pruned_List.append", "int", "int"], "methods", ["None"], ["", "", "def", "pruned_List_Recovery", "(", "self", ",", "loaded_pruned_Fire_List", ",", "pruned_List", ",", "time", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "loaded_pruned_Fire_List", ")", ")", ":", "\n", "            ", "if", "len", "(", "loaded_pruned_Fire_List", "[", "i", "]", "[", "time", "]", ")", ">", "0", ":", "\n", "                ", "for", "j", "in", "range", "(", "len", "(", "loaded_pruned_Fire_List", "[", "i", "]", "[", "time", "]", "[", "0", "]", ")", ")", ":", "\n", "                    ", "pruned_List", ".", "append", "(", "[", "int", "(", "loaded_pruned_Fire_List", "[", "i", "]", "[", "time", "]", "[", "0", "]", "[", "j", "]", "[", "0", "]", ")", ",", "int", "(", "loaded_pruned_Fire_List", "[", "i", "]", "[", "time", "]", "[", "0", "]", "[", "j", "]", "[", "1", "]", ")", "]", ")", "\n", "", "", "", "return", "pruned_List", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.in_Agent_Base_Region": [[199, 212], ["range", "len"], "methods", ["None"], ["", "def", "in_Agent_Base_Region", "(", "self", ",", "goal_X", ",", "goal_Y", ",", "agent_Base_Num", ",", "agent_Base_Loci_Full", ")", ":", "\n", "        ", "in_Base_Flag", "=", "False", "\n", "base_Index", "=", "-", "1", "\n", "for", "i", "in", "range", "(", "agent_Base_Num", ")", ":", "\n", "            ", "agent_Base_Loci", "=", "agent_Base_Loci_Full", "[", "i", "]", "[", "len", "(", "agent_Base_Loci_Full", "[", "i", "]", ")", "-", "1", "]", "\n", "if", "(", "(", "goal_X", ">=", "(", "agent_Base_Loci", "[", "0", "]", "-", "agent_Base_Loci", "[", "0", "]", "/", "2", ")", ")", "and", "\n", "(", "goal_X", "<=", "(", "agent_Base_Loci", "[", "0", "]", "+", "agent_Base_Loci", "[", "0", "]", "/", "2", ")", ")", "and", "\n", "(", "goal_Y", ">=", "(", "agent_Base_Loci", "[", "1", "]", "-", "agent_Base_Loci", "[", "1", "]", "/", "2", ")", ")", "and", "\n", "(", "goal_Y", "<=", "(", "agent_Base_Loci", "[", "1", "]", "+", "agent_Base_Loci", "[", "1", "]", "/", "2", ")", ")", ")", ":", "\n", "                ", "in_Base_Flag", "=", "True", "\n", "base_Index", "=", "i", "\n", "break", "\n", "", "", "return", "in_Base_Flag", ",", "base_Index", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.sensed_Fire_Spot_Plot": [[215, 225], ["range", "len", "pygame.draw.circle", "int", "int"], "methods", ["None"], ["", "def", "sensed_Fire_Spot_Plot", "(", "self", ",", "screen", ",", "sensed_List", ",", "time", ",", "current_Max_Intensity", ")", ":", "\n", "# Search for all the sensing agents' data", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "sensed_List", ")", ")", ":", "\n", "            ", "if", "current_Max_Intensity", "<", "sensed_List", "[", "i", "]", "[", "2", "]", ":", "\n", "                ", "current_Max_Intensity", "=", "sensed_List", "[", "i", "]", "[", "2", "]", "\n", "# Plot the fire spot using the red color the corresponds to the intensity", "\n", "", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "\n", "sensed_List", "[", "i", "]", "[", "2", "]", "*", "155", "/", "current_Max_Intensity", "+", "100", ",", "0", ",", "0", ")", ",", "\n", "(", "int", "(", "sensed_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "sensed_List", "[", "i", "]", "[", "1", "]", ")", ")", ",", "1", ")", "\n", "", "return", "current_Max_Intensity", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.lake_plot": [[227, 232], ["range", "len", "pygame.draw.circle", "pygame.draw.circle", "pygame.draw.circle"], "methods", ["None"], ["", "def", "lake_plot", "(", "self", ",", "screen", ",", "lake_list", ",", "time", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "lake_list", ")", ")", ":", "\n", "            ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "191", ",", "255", ")", ",", "(", "lake_list", "[", "i", "]", "[", "time", "]", "[", "0", "]", ",", "lake_list", "[", "i", "]", "[", "time", "]", "[", "1", "]", ")", ",", "100", ")", "\n", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "191", ",", "255", ")", ",", "(", "lake_list", "[", "i", "]", "[", "time", "]", "[", "0", "]", "+", "80", ",", "lake_list", "[", "i", "]", "[", "time", "]", "[", "1", "]", "-", "80", ")", ",", "100", ")", "\n", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "191", ",", "255", ")", ",", "(", "lake_list", "[", "i", "]", "[", "time", "]", "[", "0", "]", "+", "20", ",", "lake_list", "[", "i", "]", "[", "time", "]", "[", "1", "]", "+", "80", ")", ",", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.Dependencies.DemoVisualization.Animation_Reconstruction_Reconn_Utilities.road_plot": [[234, 239], ["range", "len", "range", "len", "pygame.draw.line"], "methods", ["None"], ["", "", "def", "road_plot", "(", "self", ",", "screen", ",", "target_Loci", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "target_Loci", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", ",", "len", "(", "target_Loci", ")", ")", ":", "\n", "                ", "pygame", ".", "draw", ".", "line", "(", "screen", ",", "(", "139", ",", "69", ",", "19", ")", ",", "(", "target_Loci", "[", "i", "]", "[", "0", "]", "[", "0", "]", ",", "target_Loci", "[", "i", "]", "[", "0", "]", "[", "1", "]", ")", ",", "\n", "(", "target_Loci", "[", "j", "]", "[", "0", "]", "[", "0", "]", ",", "target_Loci", "[", "j", "]", "[", "0", "]", "[", "1", "]", ")", ",", "5", ")", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2_Utilities.EnvUtilities.target_Plot": [[36, 49], ["range", "len", "range", "len", "pygame.draw.rect", "Rect", "pygame.draw.rect", "Rect"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "target_Plot", "(", "screen", ",", "target_info", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "target_info", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "target_info", "[", "i", "]", ")", ")", ":", "\n", "# The coordination of the upper-left corner of target", "\n", "                ", "target_Upper_Left_Corner", "=", "(", "target_info", "[", "i", "]", "[", "j", "]", "[", "0", "]", "-", "5", ",", "target_info", "[", "i", "]", "[", "j", "]", "[", "1", "]", "-", "5", ")", "\n", "target_Size", "=", "(", "10", ",", "10", ")", "\n", "# Plot the normaltarget, fill the rectangle with orange", "\n", "if", "target_info", "[", "i", "]", "[", "j", "]", "[", "2", "]", "==", "0", ":", "\n", "                    ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "165", ",", "0", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ")", "\n", "\n", "", "elif", "target_info", "[", "i", "]", "[", "j", "]", "[", "2", "]", "==", "1", ":", "\n", "                    ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "255", ",", "255", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2_Utilities.EnvUtilities.fire_Data_Storage": [[55, 77], ["range", "int", "int", "int", "int", "onFire_List.append", "range", "len", "range", "int", "int", "int", "int", "int", "int", "len", "int", "int", "int", "int"], "methods", ["None"], ["", "", "", "", "@", "staticmethod", "\n", "def", "fire_Data_Storage", "(", "new_fire_front", ",", "world_Size", ",", "onFire_List", ",", "pruned_List", ",", "target_onFire_list", ",", "target_info", ")", ":", "\n", "        ", "if", "new_fire_front", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "# Write the fire spot into the current world map list", "\n", "            ", "for", "i", "in", "range", "(", "new_fire_front", ".", "shape", "[", "0", "]", ")", ":", "\n", "# # Ensure that all the fire spots to be displayed must be within the window scope", "\n", "                ", "if", "(", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", "<=", "(", "world_Size", "-", "1", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "<=", "(", "world_Size", "-", "1", ")", ")", "\n", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ">=", "0", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", ">=", "0", ")", ")", ":", "\n", "\n", "# If the new fire front points is not included in the current onFire_List, add it into the list", "\n", "                    ", "if", "(", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", "not", "in", "onFire_List", ")", "and", "(", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", "not", "in", "pruned_List", ")", ":", "\n", "                        ", "onFire_List", ".", "append", "(", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "\n", "# Determine whether the new fire fronts locate inside the target region", "\n", "for", "i1", "in", "range", "(", "len", "(", "target_onFire_list", ")", ")", ":", "\n", "                            ", "for", "j1", "in", "range", "(", "len", "(", "target_onFire_list", "[", "i1", "]", ")", ")", ":", "\n", "                                ", "if", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "-", "5", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "+", "5", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "-", "5", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "+", "5", ")", ")", ":", "\n", "                                    ", "target_onFire_list", "[", "i1", "]", "[", "j1", "]", "+=", "1", "\n", "\n", "", "", "", "", "", "", "", "return", "onFire_List", ",", "target_onFire_list", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2_Utilities.EnvUtilities.adjacent_agents": [[79, 106], ["len", "len", "ValueError", "len", "len", "ValueError", "abs", "abs", "abs", "abs", "abs"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "adjacent_agents", "(", "agent1_pose", ",", "agent2_pose", ",", "hop_num", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n        determining the neighboring agents (discrete) and returning the indexes of neighbors at each time step\n\n        :param agent1_pose: first agents position\n        :param agent2_pose: second agents position\n        :param hop_num: number of hops (discrete) for communication range (default:: 1-hop)\n        :return: binary flag\n        \"\"\"", "\n", "\n", "if", "len", "(", "agent1_pose", ")", "!=", "len", "(", "agent2_pose", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Agent coordinates must be in same dimensions (either 2D or 3D).\"", ")", "\n", "\n", "", "adjacent_agents", "=", "False", "\n", "if", "len", "(", "agent1_pose", ")", "==", "2", ":", "\n", "            ", "x1", ",", "x2", ",", "y1", ",", "y2", "=", "agent1_pose", "[", "0", "]", ",", "agent2_pose", "[", "0", "]", ",", "agent1_pose", "[", "1", "]", ",", "agent2_pose", "[", "1", "]", "\n", "if", "(", "abs", "(", "x1", "-", "x2", ")", "<=", "hop_num", ")", "and", "(", "abs", "(", "y1", "-", "y2", ")", "<=", "hop_num", ")", ":", "\n", "                ", "adjacent_agents", "=", "True", "\n", "", "", "elif", "len", "(", "agent1_pose", ")", "==", "3", ":", "\n", "            ", "x1", ",", "x2", ",", "y1", ",", "y2", ",", "z1", ",", "z2", "=", "agent1_pose", "[", "0", "]", ",", "agent2_pose", "[", "0", "]", ",", "agent1_pose", "[", "1", "]", ",", "agent2_pose", "[", "1", "]", ",", "agent1_pose", "[", "2", "]", ",", "agent2_pose", "[", "2", "]", "\n", "if", "(", "abs", "(", "x1", "-", "x2", ")", "<=", "hop_num", ")", "and", "(", "abs", "(", "y1", "-", "y2", ")", "<=", "hop_num", ")", "and", "(", "abs", "(", "z1", "-", "z2", ")", "<=", "hop_num", ")", ":", "\n", "                ", "adjacent_agents", "=", "True", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Agent coordinates must be in either 2D or 3D.\"", ")", "\n", "\n", "", "return", "adjacent_agents", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2_Utilities.EnvUtilities.fire_Sensing": [[111, 182], ["numpy.array", "numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "numpy.random.choice", "max", "max", "min", "min", "numpy.zeros", "range", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "int", "len", "len", "numpy.zeros", "raw_sensed_list[].astype", "raw_sensed_list[].astype", "numpy.unique", "np.unique.copy().tolist.copy", "max", "max", "min", "min", "numpy.zeros", "round", "len", "list().copy", "numpy.unique().tolist", "numpy.unique.copy().tolist", "min", "max", "min", "max", "len", "len", "list", "numpy.unique", "numpy.unique.copy", "numpy.array"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "fire_Sensing", "(", "onFire_List", ",", "agent_loci", ",", "sensed_List", ",", "world_size", ")", ":", "\n", "# Input: fire_Map, current agent state, the agent's FOV, geometric_physics info, sensed_List, window size", "\n", "# Output: fire sensed map (for agent status recording), CoM info, the list of the coordinates of the sensed points", "\n", "\n", "        ", "confidence_level", "=", "1", "-", "3", "/", "50", "*", "(", "agent_loci", "[", "2", "]", "-", "10", ")", "# the sensing confidence level (highest when altitude=minimu_allowed and vice versa)", "\n", "\n", "onFire_List", "=", "np", ".", "array", "(", "onFire_List", ")", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "(", "tl_x", ",", "tl_y", ")", "=", "(", "agent_loci", "[", "0", "]", "-", "agent_loci", "[", "2", "]", ",", "agent_loci", "[", "1", "]", "-", "agent_loci", "[", "2", "]", ")", "\n", "\n", "# The coordination of the lower-right corner of the agent searching scope", "\n", "(", "br_x", ",", "br_y", ")", "=", "(", "agent_loci", "[", "0", "]", "+", "agent_loci", "[", "2", "]", ",", "agent_loci", "[", "1", "]", "+", "agent_loci", "[", "2", "]", ")", "\n", "\n", "# Search for the current fire map, determine whether the given fire spot locates within the searching scope", "\n", "if", "onFire_List", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "0", "]", "<=", "min", "(", "br_x", ",", "world_size", "-", "1", ")", ")", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "0", "]", ">=", "max", "(", "tl_x", ",", "0", ")", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "1", "]", "<=", "min", "(", "br_y", ",", "world_size", "-", "1", ")", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "1", "]", ">=", "max", "(", "tl_y", ",", "0", ")", ")", ")", "\n", "# Apply the stochastic perception", "\n", "raw_sensed_idx", "=", "np", ".", "random", ".", "choice", "(", "raw_sensed_idx", ",", "int", "(", "round", "(", "confidence_level", "*", "len", "(", "raw_sensed_idx", ")", ")", ")", ",", "replace", "=", "False", ")", "\n", "\n", "'''\n            Newly added: get the FOV of this agent\n            '''", "\n", "upper_x", "=", "max", "(", "0", ",", "tl_x", ")", "\n", "upper_y", "=", "max", "(", "0", ",", "tl_y", ")", "\n", "\n", "lower_x", "=", "min", "(", "br_x", ",", "world_size", "-", "1", ")", "\n", "lower_y", "=", "min", "(", "br_y", ",", "world_size", "-", "1", ")", "\n", "\n", "size_x", "=", "lower_x", "-", "upper_x", "+", "1", "\n", "size_y", "=", "lower_y", "-", "upper_y", "+", "1", "\n", "\n", "FOV", "=", "np", ".", "zeros", "(", "(", "size_x", ",", "size_y", ")", ",", "dtype", "=", "float", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "raw_sensed_idx", ")", ")", ":", "\n", "                ", "tmp_x", ",", "tmp_y", "=", "onFire_List", "[", "raw_sensed_idx", "[", "i", "]", "]", "\n", "FOV", "[", "tmp_x", "-", "upper_x", ",", "tmp_y", "-", "upper_y", "]", "=", "1", "\n", "\n", "# Remove the duplicate fire fronts", "\n", "", "raw_sensed_list", "=", "onFire_List", "[", "raw_sensed_idx", ",", ":", "]", "\n", "if", "len", "(", "raw_sensed_list", "[", ":", ",", "0", "]", ")", ">", "0", ":", "\n", "                ", "int_sensed_list", "=", "np", ".", "zeros", "(", "(", "len", "(", "raw_sensed_list", "[", ":", ",", "0", "]", ")", ",", "2", ")", ",", "dtype", "=", "int", ")", "\n", "int_sensed_list", "[", ":", ",", "0", "]", "=", "raw_sensed_list", "[", ":", ",", "0", "]", ".", "astype", "(", "int", ")", "\n", "int_sensed_list", "[", ":", ",", "1", "]", "=", "raw_sensed_list", "[", ":", ",", "1", "]", ".", "astype", "(", "int", ")", "\n", "uni_int_sensed_list", "=", "np", ".", "unique", "(", "int_sensed_list", ",", "axis", "=", "0", ")", "\n", "\n", "sensed_List_copy", "=", "sensed_List", ".", "copy", "(", ")", "\n", "if", "len", "(", "sensed_List_copy", ")", ">", "0", ":", "\n", "                    ", "sensed_List_copy", "[", "0", ":", "0", "]", "=", "list", "(", "uni_int_sensed_list", ")", ".", "copy", "(", ")", "\n", "sensed_List", "=", "np", ".", "unique", "(", "np", ".", "array", "(", "sensed_List_copy", ")", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "                    ", "sensed_List", "=", "uni_int_sensed_list", ".", "copy", "(", ")", ".", "tolist", "(", ")", "\n", "", "", "", "elif", "onFire_List", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "            ", "'''\n            Newly added: get the FOV of this agent\n            '''", "\n", "upper_x", "=", "max", "(", "0", ",", "tl_x", ")", "\n", "upper_y", "=", "max", "(", "0", ",", "tl_y", ")", "\n", "\n", "lower_x", "=", "min", "(", "br_x", ",", "world_size", "-", "1", ")", "\n", "lower_y", "=", "min", "(", "br_y", ",", "world_size", "-", "1", ")", "\n", "\n", "size_x", "=", "lower_x", "-", "upper_x", "+", "1", "\n", "size_y", "=", "lower_y", "-", "upper_y", "+", "1", "\n", "\n", "FOV", "=", "np", ".", "zeros", "(", "(", "size_x", ",", "size_y", ")", ",", "dtype", "=", "float", ")", "\n", "\n", "", "return", "sensed_List", ",", "FOV", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2_Utilities.EnvUtilities.fire_Pruning": [[186, 247], ["numpy.array", "numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "numpy.random.choice", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "int", "len", "temp_list.copy", "numpy.unique", "sensed_List.copy", "round", "len", "list().copy", "range", "min", "max", "min", "max", "len", "len", "len", "list", "numpy.unique().tolist", "len", "len", "onFire_List_raw.remove", "range", "pruned_List.append", "sensed_List.remove", "len", "range", "numpy.unique", "int", "int", "int", "int", "int", "int", "int", "int", "len", "int", "int", "numpy.array", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "fire_Pruning", "(", "agent_loci", ",", "onFire_List_raw", ",", "sensed_List", ",", "pruned_List", ",", "\n", "new_fire_front", ",", "target_onFire_list", ",", "target_info", ",", "world_size", ",", "confidence_level", ")", ":", "\n", "# Input: fire_Map, current agent state, the agent's FOV, onFire_List, sensed_List, pruned_List, new fire front list", "\n", "# Output: fire_Pruned_Map (for agent status recording), the updated fire_map, onFire_List, sensed_List, pruned_List", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "        ", "(", "tl_x", ",", "tl_y", ")", "=", "(", "agent_loci", "[", "0", "]", "-", "agent_loci", "[", "2", "]", ",", "agent_loci", "[", "1", "]", "-", "agent_loci", "[", "2", "]", ")", "\n", "\n", "# The coordination of the lower-right corner of the agent searching scope", "\n", "(", "br_x", ",", "br_y", ")", "=", "(", "agent_loci", "[", "0", "]", "+", "agent_loci", "[", "2", "]", ",", "agent_loci", "[", "1", "]", "+", "agent_loci", "[", "2", "]", ")", "\n", "\n", "onFire_List", "=", "np", ".", "array", "(", "onFire_List_raw", ")", "\n", "\n", "# sensed list flag, if there is any points that is included in the sensed list, this flag will become 1", "\n", "sensed_flag", "=", "0", "\n", "\n", "# Search for the current fire map, determine whether the given fire spot locates within the searching scope", "\n", "if", "onFire_List", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "0", "]", "<=", "min", "(", "br_x", ",", "world_size", "-", "1", ")", ")", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "0", "]", ">=", "max", "(", "tl_x", ",", "0", ")", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "1", "]", "<=", "min", "(", "br_y", ",", "world_size", "-", "1", ")", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "1", "]", ">=", "max", "(", "tl_y", ",", "0", ")", ")", ")", "\n", "# Apply the stochastic pruning", "\n", "raw_sensed_idx", "=", "np", ".", "random", ".", "choice", "(", "raw_sensed_idx", ",", "int", "(", "round", "(", "confidence_level", "*", "len", "(", "raw_sensed_idx", ")", ")", ")", ",", "\n", "replace", "=", "False", ")", "\n", "# Temporary list to store the fire front that may be pruned", "\n", "temp_list", "=", "onFire_List", "[", "raw_sensed_idx", ",", ":", "]", "\n", "if", "len", "(", "temp_list", ")", ">", "0", ":", "\n", "                ", "int_pruned_list", "=", "temp_list", ".", "copy", "(", ")", "\n", "uni_int_pruned_list", "=", "np", ".", "unique", "(", "int_pruned_list", ",", "axis", "=", "0", ")", "\n", "\n", "# Determine whether there's any sensed points within the scope", "\n", "sensed_List_copy", "=", "sensed_List", ".", "copy", "(", ")", "\n", "\n", "if", "len", "(", "sensed_List_copy", ")", ">", "0", ":", "\n", "                    ", "sensed_List_copy", "[", "0", ":", "0", "]", "=", "list", "(", "uni_int_pruned_list", ")", ".", "copy", "(", ")", "\n", "if", "len", "(", "np", ".", "unique", "(", "np", ".", "array", "(", "sensed_List_copy", ")", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", ")", "<", "(", "len", "(", "sensed_List", ")", "+", "len", "(", "uni_int_pruned_list", ")", ")", ":", "\n", "                        ", "sensed_flag", "=", "1", "\n", "\n", "# The pruning agent could only put out fire region that contains the sensed fire fronts", "\n", "", "", "if", "sensed_flag", "==", "1", ":", "\n", "                    ", "for", "i", "in", "range", "(", "len", "(", "temp_list", ")", ")", ":", "\n", "# If the new fire front points is not included in the current onFire_List, add it into the list", "\n", "                        ", "if", "(", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", "not", "in", "pruned_List", ")", "and", "\n", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", "in", "onFire_List", ")", ")", ":", "\n", "                            ", "onFire_List_raw", ".", "remove", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "if", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", "in", "sensed_List", ")", ":", "\n", "                                ", "sensed_List", ".", "remove", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "\n", "# Determine whether the new fire fronts locate inside the target region", "\n", "", "for", "i1", "in", "range", "(", "len", "(", "target_onFire_list", ")", ")", ":", "\n", "                                ", "for", "j1", "in", "range", "(", "len", "(", "target_onFire_list", "[", "i1", "]", ")", ")", ":", "\n", "                                    ", "if", "(", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "-", "5", ")", ")", "and", "(", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "+", "5", ")", ")", "and", "(", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "-", "5", ")", ")", "and", "(", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "+", "5", ")", ")", ":", "\n", "                                        ", "target_onFire_list", "[", "i1", "]", "[", "j1", "]", "-=", "1", "\n", "\n", "", "", "", "pruned_List", ".", "append", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "# elif onFire_List.shape[0] == 0:", "\n", "#     print('>>> Same bug, second function but I am ignoring it...')", "\n", "\n", "", "", "", "", "", "return", "onFire_List_raw", ",", "sensed_List", ",", "pruned_List", ",", "new_fire_front", ",", "target_onFire_list", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2_Utilities.EnvUtilities.sensed_Fire_Spot_Plot": [[250, 256], ["range", "len", "pygame.draw.circle", "int", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "sensed_Fire_Spot_Plot", "(", "screen", ",", "sensed_List", ")", ":", "\n", "# Search for all the sensing agents' data", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "sensed_List", ")", ")", ":", "\n", "# Plot the fire spot using the red color the corresponds to the intensity", "\n", "            ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "255", ",", "0", ",", "0", ")", ",", "(", "int", "(", "sensed_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "sensed_List", "[", "i", "]", "[", "1", "]", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2_Utilities.EnvUtilities.pruned_Fire_Spot_Plot": [[259, 265], ["range", "len", "pygame.draw.circle", "int", "int"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "pruned_Fire_Spot_Plot", "(", "screen", ",", "pruned_List", ")", ":", "\n", "# Search for all the sensing agents' data", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "pruned_List", ")", ")", ":", "\n", "# Plot the fire spot using the red color the corresponds to the intensity", "\n", "            ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "(", "int", "(", "pruned_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "pruned_List", "[", "i", "]", "[", "1", "]", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2_Utilities.EnvUtilities.on_Fire_Spot_Plot": [[268, 274], ["range", "len", "pygame.draw.circle", "int", "int"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "on_Fire_Spot_Plot", "(", "screen", ",", "sensed_List", ")", ":", "\n", "# Search for all the sensing agents' data", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "sensed_List", ")", ")", ":", "\n", "# Plot the fire spot using the red color the corresponds to the intensity", "\n", "            ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "255", ",", "255", ")", ",", "(", "int", "(", "sensed_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "sensed_List", "[", "i", "]", "[", "1", "]", ")", ")", ",", "1", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.adjacent_agents": [[23, 41], ["len", "len", "ValueError", "len", "len", "ValueError", "abs", "abs", "abs", "abs", "abs"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "adjacent_agents", "(", "agent1_pose", ",", "agent2_pose", ",", "hop_num", "=", "1", ")", ":", "\n", "        ", "if", "len", "(", "agent1_pose", ")", "!=", "len", "(", "agent2_pose", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Agent coordinates must be in same dimensions (either 2D or 3D).\"", ")", "\n", "\n", "", "adjacent_agents", "=", "False", "\n", "if", "len", "(", "agent1_pose", ")", "==", "2", ":", "\n", "            ", "x1", ",", "x2", ",", "y1", ",", "y2", "=", "agent1_pose", "[", "0", "]", ",", "agent2_pose", "[", "0", "]", ",", "agent1_pose", "[", "1", "]", ",", "agent2_pose", "[", "1", "]", "\n", "if", "(", "abs", "(", "x1", "-", "x2", ")", "<=", "hop_num", ")", "and", "(", "abs", "(", "y1", "-", "y2", ")", "<=", "hop_num", ")", ":", "\n", "                ", "adjacent_agents", "=", "True", "\n", "", "", "elif", "len", "(", "agent1_pose", ")", "==", "3", ":", "\n", "            ", "x1", ",", "x2", ",", "y1", ",", "y2", ",", "z1", ",", "z2", "=", "agent1_pose", "[", "0", "]", ",", "agent2_pose", "[", "0", "]", ",", "agent1_pose", "[", "1", "]", ",", "agent2_pose", "[", "1", "]", ",", "agent1_pose", "[", "2", "]", ",", "agent2_pose", "[", "2", "]", "\n", "if", "(", "abs", "(", "x1", "-", "x2", ")", "<=", "hop_num", ")", "and", "(", "abs", "(", "y1", "-", "y2", ")", "<=", "hop_num", ")", "and", "(", "abs", "(", "z1", "-", "z2", ")", "<=", "hop_num", ")", ":", "\n", "                ", "adjacent_agents", "=", "True", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Agent coordinates must be in either 2D or 3D.\"", ")", "\n", "\n", "", "return", "adjacent_agents", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.sensing": [[43, 54], ["numpy.multiply", "FireCommander_Base_Utilities.EnvUtilities.FOV_encoding", "numpy.where", "numpy.multiply.reshape"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.FOV_encoding"], ["", "@", "staticmethod", "\n", "def", "sensing", "(", "world_state", ",", "agent_loci", ",", "world_size", ",", "vision", ",", "state_space", ",", "feat_dim", ",", "NumP", ",", "NumA", ")", ":", "\n", "# sensing", "\n", "        ", "world_state", "[", "world_state", ">=", "2", "]", "=", "0", "# only taking into account the firespots that have not been put out yet", "\n", "temp", "=", "np", ".", "multiply", "(", "world_state", ",", "agent_loci", ")", "# lay over the respective tensor layers to get the newly detected firespots", "\n", "sensed_list", "=", "np", ".", "where", "(", "temp", ".", "reshape", "(", "1", ",", "world_size", "*", "world_size", ")", ">", "0", ")", "[", "1", "]", "# form the sensed list", "\n", "\n", "# extracting 1-hot encoded FOV tensors", "\n", "FOV", "=", "EnvUtilities", ".", "FOV_encoding", "(", "state_space", ",", "agent_loci", ",", "feat_dim", ",", "NumP", ",", "NumA", ",", "world_size", ",", "vision", ")", "\n", "\n", "return", "sensed_list", ",", "FOV", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.pruning": [[56, 71], ["numpy.multiply", "numpy.where", "numpy.delete", "numpy.delete", "numpy.multiply.reshape", "numpy.where", "numpy.where"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "pruning", "(", "world_state", ",", "agent_loci", ",", "sensed_list", ",", "firespot_loci", ",", "world_size", ")", ":", "\n", "# pruning", "\n", "        ", "world_state", "[", "world_state", "!=", "2", "]", "=", "0", "# only taking into account the firespots that have been found", "\n", "temp", "=", "np", ".", "multiply", "(", "world_state", ",", "agent_loci", ")", "# lay over the respective tensor layers to get the newly pruned firespots", "\n", "pruned_list", "=", "np", ".", "where", "(", "temp", ".", "reshape", "(", "1", ",", "world_size", "*", "world_size", ")", ">", "0", ")", "[", "1", "]", "# form the sensed list", "\n", "\n", "# removing pruned spots from sensed and firespot lists", "\n", "for", "idx", "in", "pruned_list", ":", "\n", "            ", "if", "idx", "in", "sensed_list", ":", "\n", "                ", "sensed_list", "=", "np", ".", "delete", "(", "sensed_list", ",", "np", ".", "where", "(", "sensed_list", "==", "idx", ")", ")", "\n", "", "if", "idx", "in", "firespot_loci", ":", "\n", "                ", "firespot_loci", "=", "np", ".", "delete", "(", "firespot_loci", ",", "np", ".", "where", "(", "firespot_loci", "==", "idx", ")", ")", "\n", "\n", "", "", "return", "pruned_list", ",", "sensed_list", ",", "firespot_loci", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.FOV_encoding": [[73, 124], ["state_space[].copy", "numpy.argwhere", "numpy.argwhere.min", "numpy.argwhere.max", "numpy.zeros", "range", "range", "range", "numpy.zeros", "FireCommander_Base_Utilities.EnvUtilities.padding_FOV_1hop", "numpy.zeros", "ValueError", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "FireCommander_Base_Utilities.EnvUtilities.padding_FOV_2hop", "numpy.where", "numpy.where", "numpy.where", "FireCommander_Base_Utilities.EnvUtilities.padding_FOV_1hop", "ValueError", "FireCommander_Base_Utilities.EnvUtilities.padding_FOV_2hop"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.padding_FOV_1hop", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.padding_FOV_2hop", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.padding_FOV_1hop", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.padding_FOV_2hop"], ["", "@", "staticmethod", "\n", "def", "FOV_encoding", "(", "state_space", ",", "agent_loci", ",", "feat_dim", ",", "NumP", ",", "NumA", ",", "world_size", ",", "vision", ")", ":", "\n", "        ", "env_space", "=", "state_space", "[", "0", "]", ".", "copy", "(", ")", "# building a temporary info map for FOV extraction", "\n", "# the agent view", "\n", "coords", "=", "np", ".", "argwhere", "(", "agent_loci", ">", "0", ")", "\n", "x_min", ",", "y_min", "=", "coords", ".", "min", "(", "axis", "=", "0", ")", "\n", "x_max", ",", "y_max", "=", "coords", ".", "max", "(", "axis", "=", "0", ")", "\n", "agent_view", "=", "env_space", "[", "x_min", ":", "x_max", "+", "1", ",", "y_min", ":", "y_max", "+", "1", "]", "\n", "\n", "# padding the agent view if at edge", "\n", "m1", ",", "m2", "=", "agent_view", ".", "shape", "\n", "if", "vision", "==", "1", ":", "\n", "            ", "FOV", "=", "np", ".", "zeros", "(", "shape", "=", "(", "feat_dim", ",", "3", ",", "3", ")", ")", "\n", "if", "(", "m1", "<", "3", ")", "or", "(", "m2", "<", "3", ")", ":", "\n", "                ", "agent_view", "=", "EnvUtilities", ".", "padding_FOV_1hop", "(", "agent_view", ",", "agent_loci", ",", "world_size", ",", "-", "1", ")", "\n", "", "", "elif", "vision", "==", "2", ":", "\n", "            ", "FOV", "=", "np", ".", "zeros", "(", "shape", "=", "(", "feat_dim", ",", "5", ",", "5", ")", ")", "\n", "if", "(", "m1", "<", "5", ")", "or", "(", "m2", "<", "5", ")", ":", "\n", "                ", "agent_view", "=", "EnvUtilities", ".", "padding_FOV_2hop", "(", "agent_view", ",", "agent_loci", ",", "world_size", ",", "-", "1", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Sorry, for now, only 1-hop and 2-hop visions are available options...\"", ")", "\n", "\n", "# extracting/encoding the FOV information", "\n", "", "FOV_temp", "=", "np", ".", "zeros", "(", "shape", "=", "(", "feat_dim", ",", "10", ",", "10", ")", ")", "\n", "FOV_temp", "[", "1", "]", "[", "np", ".", "where", "(", "state_space", "[", "0", "]", "==", "1", ")", "]", "=", "1", "# encoding the fire information (0 -> nothing, 1 -> fire not seen before)", "\n", "FOV_temp", "[", "2", "]", "[", "np", ".", "where", "(", "state_space", "[", "0", "]", "==", "2", ")", "]", "=", "1", "# encoding the fire information (0 -> nothing, 1 -> fire seen before)", "\n", "FOV_temp", "[", "3", "]", "[", "np", ".", "where", "(", "state_space", "[", "0", "]", "==", "3", ")", "]", "=", "1", "# encoding the fire information (0 -> nothing, 1 -> fire pruned before)", "\n", "for", "i", "in", "range", "(", "NumP", ")", ":", "\n", "            ", "FOV_temp", "[", "4", "+", "i", "]", "[", "np", ".", "where", "(", "state_space", "[", "i", "+", "1", "]", "==", "1", ")", "]", "=", "1", "# encoding other P agent's locations", "\n", "FOV_temp", "[", "4", "+", "NumP", "+", "i", "]", "[", "np", ".", "where", "(", "state_space", "[", "i", "+", "1", "]", "==", "2", ")", "]", "=", "1", "# encoding other P agent's FOVs", "\n", "", "for", "i", "in", "range", "(", "NumA", ")", ":", "\n", "            ", "FOV_temp", "[", "4", "+", "(", "2", "*", "NumP", ")", "+", "i", "]", "[", "np", ".", "where", "(", "state_space", "[", "i", "+", "NumP", "+", "1", "]", "==", "1", ")", "]", "=", "1", "# encoding A agent's locations", "\n", "\n", "# cropping the FOV", "\n", "", "for", "i", "in", "range", "(", "feat_dim", ")", ":", "\n", "            ", "temp", "=", "FOV_temp", "[", "i", "]", "[", "x_min", ":", "x_max", "+", "1", ",", "y_min", ":", "y_max", "+", "1", "]", "\n", "if", "temp", ".", "shape", "!=", "FOV", "[", "i", "]", ".", "shape", ":", "\n", "                ", "if", "vision", "==", "1", ":", "\n", "                    ", "if", "(", "m1", "<", "3", ")", "or", "(", "m2", "<", "3", ")", ":", "\n", "                        ", "temp", "=", "EnvUtilities", ".", "padding_FOV_1hop", "(", "temp", ",", "agent_loci", ",", "world_size", ",", "0", ")", "\n", "", "", "elif", "vision", "==", "2", ":", "\n", "                    ", "if", "(", "m1", "<", "5", ")", "or", "(", "m2", "<", "5", ")", ":", "\n", "                        ", "temp", "=", "EnvUtilities", ".", "padding_FOV_2hop", "(", "temp", ",", "agent_loci", ",", "world_size", ",", "0", ")", "\n", "", "", "else", ":", "\n", "                    ", "raise", "ValueError", "(", "\">>> Oops! Sorry, for now, only 1-hop and 2-hop visions are available options...\"", ")", "\n", "", "FOV", "[", "i", "]", "=", "temp", "\n", "", "else", ":", "\n", "                ", "FOV", "[", "i", "]", "=", "temp", "\n", "", "", "FOV", "[", "0", "]", "[", "np", ".", "where", "(", "agent_view", "==", "-", "1", ")", "]", "=", "1", "# encoding the edge and padding information", "\n", "\n", "return", "FOV", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.FOV_vectorized_encoding": [[125, 170], ["numpy.zeros", "enumerate", "numpy.argwhere", "range", "enumerate", "range", "numpy.zeros", "FireCommander_Base_Utilities.EnvUtilities.position_one_hot", "range"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.position_one_hot"], ["", "@", "staticmethod", "\n", "def", "FOV_vectorized_encoding", "(", "state_space", ",", "agent_loci", ",", "feat_dim", ",", "NumP", ",", "NumA", ",", "world_size", ",", "vision", ")", ":", "\n", "# the agent view", "\n", "        ", "center", "=", "np", ".", "argwhere", "(", "agent_loci", "==", "1", ")", "[", "0", "]", "\n", "x_min", ",", "y_min", "=", "center", "-", "vision", "\n", "x_max", ",", "y_max", "=", "center", "+", "vision", "\n", "\n", "# tiles in grid + number of agents + is out of bounds + if seen before", "\n", "agent_start_idx", "=", "world_size", "**", "2", "\n", "num_agents", "=", "NumP", "+", "NumA", "+", "1", "\n", "out_bounds_idx", "=", "agent_start_idx", "+", "num_agents", "\n", "if_seen_idx", "=", "out_bounds_idx", "+", "1", "\n", "\n", "square_size", "=", "if_seen_idx", "+", "1", "\n", "\n", "width", "=", "2", "*", "vision", "+", "1", "\n", "FOV", "=", "np", ".", "zeros", "(", "(", "width", ",", "width", ",", "square_size", ")", ")", "\n", "\n", "for", "i_x", ",", "x", "in", "enumerate", "(", "range", "(", "x_min", ",", "x_max", "+", "1", ")", ")", ":", "\n", "            ", "for", "i_y", ",", "y", "in", "enumerate", "(", "range", "(", "y_min", ",", "y_max", "+", "1", ")", ")", ":", "\n", "                ", "square", "=", "np", ".", "zeros", "(", "square_size", ")", "\n", "\n", "# out of bounds", "\n", "if", "x", "<", "0", "or", "y", "<", "0", "or", "x", ">=", "world_size", "or", "y", ">=", "world_size", ":", "\n", "                    ", "square", "[", "out_bounds_idx", "]", "=", "1", "\n", "", "else", ":", "\n", "# square location", "\n", "                    ", "square", "[", ":", "agent_start_idx", "]", "=", "EnvUtilities", ".", "position_one_hot", "(", "x", ",", "y", ",", "world_size", ")", "\n", "\n", "# agent type", "\n", "for", "agent_idx", "in", "range", "(", "num_agents", ")", ":", "\n", "                        ", "if", "agent_idx", "==", "0", ":", "# fire", "\n", "                            ", "agent_on_square", "=", "1", "if", "state_space", "[", "agent_idx", "]", "[", "x", ",", "y", "]", "in", "[", "1", ",", "2", "]", "else", "0", "\n", "\n", "# seen before", "\n", "if", "state_space", "[", "agent_idx", "]", "[", "x", ",", "y", "]", "==", "2", ":", "\n", "                                ", "square", "[", "if_seen_idx", "]", "=", "1", "\n", "", "", "else", ":", "# perception or action agent", "\n", "                            ", "agent_on_square", "=", "1", "if", "state_space", "[", "agent_idx", "]", "[", "x", ",", "y", "]", "==", "1", "else", "0", "\n", "\n", "", "square", "[", "agent_start_idx", "+", "agent_idx", "]", "=", "agent_on_square", "\n", "\n", "", "", "FOV", "[", "i_x", "]", "[", "i_y", "]", "=", "square", "\n", "\n", "", "", "return", "FOV", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.padding_FOV_1hop": [[172, 204], ["numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.pad", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "padding_FOV_1hop", "(", "FOV", ",", "agent_loci", ",", "world_size", ",", "pad_val", ")", ":", "\n", "        ", "m1", ",", "m2", "=", "FOV", ".", "shape", "\n", "\n", "# top and bottom edges", "\n", "if", "m2", "==", "3", ":", "\n", "            ", "if", "m1", "==", "2", ":", "\n", "                ", "if", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "1", ")", ",", "(", "0", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "else", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "1", ",", "0", ")", ",", "(", "0", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "\n", "# left and right edges", "\n", "", "", "", "if", "m1", "==", "3", ":", "\n", "            ", "if", "m2", "==", "2", ":", "\n", "                ", "if", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "0", ")", ",", "(", "0", ",", "1", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "else", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "0", ")", ",", "(", "1", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "\n", "# the four corners", "\n", "", "", "", "if", "(", "m1", "==", "2", ")", "and", "(", "m2", "==", "2", ")", ":", "\n", "            ", "if", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "1", ")", ",", "(", "0", ",", "1", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "1", ")", ",", "(", "1", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "1", ",", "0", ")", ",", "(", "0", ",", "1", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "1", ",", "0", ")", ",", "(", "1", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "\n", "", "", "return", "FOV", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.padding_FOV_2hop": [[206, 275], ["numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.pad", "numpy.pad", "numpy.pad", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.pad", "numpy.pad", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.pad", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where", "numpy.where"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "padding_FOV_2hop", "(", "FOV", ",", "agent_loci", ",", "world_size", ",", "pad_val", ")", ":", "\n", "        ", "m1", ",", "m2", "=", "FOV", ".", "shape", "\n", "\n", "# top and bottom edges", "\n", "if", "m2", "==", "5", ":", "\n", "            ", "if", "m1", "==", "4", ":", "\n", "                ", "if", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "1", ")", ",", "(", "0", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "else", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "1", ",", "0", ")", ",", "(", "0", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "", "if", "m1", "==", "3", ":", "\n", "                ", "if", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "2", ")", ",", "(", "0", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "else", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "2", ",", "0", ")", ",", "(", "0", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "\n", "# left and right edges", "\n", "", "", "", "if", "m1", "==", "5", ":", "\n", "            ", "if", "m2", "==", "4", ":", "\n", "                ", "if", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "0", ")", ",", "(", "0", ",", "1", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "else", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "0", ")", ",", "(", "1", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "", "if", "m2", "==", "3", ":", "\n", "                ", "if", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "0", ")", ",", "(", "0", ",", "2", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "else", ":", "\n", "                    ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "0", ")", ",", "(", "2", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "\n", "# the four corners", "\n", "", "", "", "if", "(", "m1", "==", "4", ")", "and", "(", "m2", "==", "4", ")", ":", "\n", "            ", "if", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "1", ")", ",", "(", "0", ",", "1", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "1", ")", ",", "(", "1", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "1", ",", "0", ")", ",", "(", "0", ",", "1", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "1", ",", "0", ")", ",", "(", "1", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "", "elif", "(", "m1", "==", "3", ")", "and", "(", "m2", "==", "3", ")", ":", "\n", "            ", "if", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "2", ")", ",", "(", "0", ",", "2", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "2", ")", ",", "(", "2", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "2", ",", "0", ")", ",", "(", "0", ",", "2", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "2", ",", "0", ")", ",", "(", "2", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "", "elif", "(", "m1", "==", "4", ")", "and", "(", "m2", "==", "3", ")", ":", "\n", "            ", "if", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "1", ")", ",", "(", "0", ",", "2", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "1", ")", ",", "(", "2", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "1", ",", "0", ")", ",", "(", "0", ",", "2", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "1", ",", "0", ")", ",", "(", "2", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "", "elif", "(", "m1", "==", "3", ")", "and", "(", "m2", "==", "4", ")", ":", "\n", "            ", "if", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "2", ")", ",", "(", "0", ",", "1", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "0", ",", "2", ")", ",", "(", "1", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", ">", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "2", ",", "0", ")", ",", "(", "0", ",", "1", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "", "elif", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "0", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", "and", "(", "np", ".", "where", "(", "agent_loci", "!=", "0", ")", "[", "1", "]", "[", "0", "]", "<", "world_size", "/", "2", ")", ":", "\n", "                ", "FOV", "=", "np", ".", "pad", "(", "FOV", ",", "[", "(", "2", ",", "0", ")", ",", "(", "1", ",", "0", ")", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "pad_val", ")", "\n", "\n", "", "", "return", "FOV", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.position_one_hot": [[277, 283], ["numpy.zeros"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "position_one_hot", "(", "x", ",", "y", ",", "world_size", ")", ":", "\n", "        ", "one_hot", "=", "np", ".", "zeros", "(", "world_size", "**", "2", ")", "\n", "one_hot", "[", "y", "*", "world_size", "+", "x", "]", "=", "1", "\n", "\n", "return", "one_hot", "\n", "", "", ""]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.__init__": [[22, 42], ["numpy.zeros", "ValueError", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "terrain_sizes", "=", "None", ",", "hotspot_areas", "=", "None", ",", "num_ign_points", "=", "None", ",", "duration", "=", "None", ",", "\n", "time_step", "=", "1", ",", "radiation_radius", "=", "10", ",", "weak_fire_threshold", "=", "0.5", ",", "flame_height", "=", "3", ",", "flame_angle", "=", "np", ".", "pi", "/", "3", ")", ":", "\n", "\n", "        ", "if", "terrain_sizes", "is", "None", "or", "hotspot_areas", "is", "None", "or", "num_ign_points", "is", "None", "or", "duration", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! 'WildFire' environment cannot be initialized without any parameters.\"", ")", "\n", "\n", "", "self", ".", "terrain_sizes", "=", "[", "int", "(", "terrain_sizes", "[", "0", "]", ")", ",", "int", "(", "terrain_sizes", "[", "1", "]", ")", "]", "# sizes of the terrain", "\n", "self", ".", "initial_terrain_map", "=", "np", ".", "zeros", "(", "shape", "=", "self", ".", "terrain_sizes", ")", "# initializing the terrain", "\n", "self", ".", "hotspot_areas", "=", "hotspot_areas", "# format:: [[x_min, x_max, y_min, y_max]]", "\n", "self", ".", "num_ign_points", "=", "num_ign_points", "# number of fire-spots in each area", "\n", "self", ".", "duration", "=", "duration", "# total runtime steps", "\n", "self", ".", "time_step", "=", "time_step", "# time step", "\n", "self", ".", "radiation_radius", "=", "radiation_radius", "# the maximum effective thermal radiation range (default:: 10 [m])", "\n", "self", ".", "weak_fire_threshold", "=", "weak_fire_threshold", "# fire intensity threshold [W/m], where a fire is burnt out if below this", "\n", "\n", "# max vertical extension of the flame [m] (ignore the occasional flashes which rise above the general level of fire)", "\n", "self", ".", "flame_height", "=", "flame_height", "\n", "\n", "# flame tilt angle (angle between flame heading and a vertical axis going through the center of fire spot on ground) [rad]", "\n", "self", ".", "flame_angle", "=", "flame_angle", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.hotspot_init": [[44, 73], ["numpy.zeros", "numpy.zeros", "numpy.random.randint", "numpy.random.randint", "numpy.concatenate", "numpy.concatenate", "numpy.sqrt", "WildFire_Model.WildFire.fire_intensity", "numpy.array", "numpy.tile", "numpy.where", "ign_points_all[].tolist", "idx.tolist"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.fire_intensity"], ["", "def", "hotspot_init", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        This function generates the initial hotspot areas\n\n        :return: ignition points across the entire map\n        \"\"\"", "\n", "\n", "ign_points_all", "=", "np", ".", "zeros", "(", "shape", "=", "[", "0", ",", "2", "]", ")", "\n", "for", "hotspot", "in", "self", ".", "hotspot_areas", ":", "\n", "            ", "x_min", ",", "x_max", "=", "hotspot", "[", "0", "]", ",", "hotspot", "[", "1", "]", "\n", "y_min", ",", "y_max", "=", "hotspot", "[", "2", "]", ",", "hotspot", "[", "3", "]", "\n", "ign_points_x", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "x_min", ",", "high", "=", "x_max", ",", "size", "=", "(", "self", ".", "num_ign_points", ",", "1", ")", ")", "\n", "ign_points_y", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "y_min", ",", "high", "=", "y_max", ",", "size", "=", "(", "self", ".", "num_ign_points", ",", "1", ")", ")", "\n", "ign_points_this_area", "=", "np", ".", "concatenate", "(", "[", "ign_points_x", ",", "ign_points_y", "]", ",", "axis", "=", "1", ")", "\n", "ign_points_all", "=", "np", ".", "concatenate", "(", "[", "ign_points_all", ",", "ign_points_this_area", "]", ",", "axis", "=", "0", ")", "\n", "\n", "# computing the fire intensity", "\n", "", "counter", "=", "0", "\n", "ign_points", "=", "np", ".", "zeros", "(", "shape", "=", "[", "ign_points_all", ".", "shape", "[", "0", "]", ",", "3", "]", ")", "\n", "for", "point", "in", "ign_points_all", ":", "\n", "            ", "heat_source_diff", "=", "np", ".", "tile", "(", "point", ",", "(", "ign_points_all", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "-", "ign_points_all", "\n", "heat_source_dists", "=", "np", ".", "sqrt", "(", "(", "heat_source_diff", "[", ":", ",", "0", "]", "**", "2", ")", "+", "(", "heat_source_diff", "[", ":", ",", "1", "]", "**", "2", ")", ")", "\n", "idx", "=", "np", ".", "where", "(", "heat_source_dists", "<=", "self", ".", "radiation_radius", ")", "[", "0", "]", "\n", "fire_intensity", "=", "self", ".", "fire_intensity", "(", "point", ",", "ign_points_all", "[", "idx", ".", "tolist", "(", ")", ",", ":", "]", ".", "tolist", "(", ")", ")", "\n", "ign_points", "[", "counter", "]", "=", "np", ".", "array", "(", "[", "point", "[", "0", "]", ",", "point", "[", "1", "]", ",", "fire_intensity", "]", ")", "\n", "\n", "counter", "+=", "1", "\n", "\n", "", "return", "ign_points", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.fire_intensity": [[75, 111], ["ValueError", "numpy.random.normal", "numpy.random.normal", "numpy.cos", "intensity.append", "sum", "numpy.random.randint", "numpy.random.randint", "numpy.exp", "numpy.cos"], "methods", ["None"], ["", "def", "fire_intensity", "(", "self", ",", "current_fire_spot", "=", "None", ",", "heat_source_spots", "=", "None", ",", "deviation_min", "=", "9", ",", "deviation_max", "=", "11", ")", ":", "\n", "        ", "\"\"\"\n        this function performs the fire intensity calculation according to [1] for each new fire front.\n\n        [1] http://www.cfs.nrcan.gc.ca/bookstore_pdfs/21396.pdf\n\n        :param current_fire_spot: the fire location for which the intensity is going to be computed\n        :param heat_source_spots: the fire source location close to the new fire spot\n        :param deviation_min: min of the radiation range\n        :param deviation_max: max of the radiation range\n        :return: fire intensity at the new fire spot location [W/m]\n        \"\"\"", "\n", "\n", "if", "current_fire_spot", "is", "None", "or", "heat_source_spots", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Current fire location and included vicinity are required.\"", ")", "\n", "\n", "", "x", "=", "current_fire_spot", "[", "0", "]", "\n", "y", "=", "current_fire_spot", "[", "1", "]", "\n", "\n", "x_dev", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "deviation_min", ",", "high", "=", "deviation_max", ",", "size", "=", "(", "1", ",", "1", ")", ")", "[", "0", "]", "[", "0", "]", "+", "np", ".", "random", ".", "normal", "(", ")", "\n", "y_dev", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "deviation_min", ",", "high", "=", "deviation_max", ",", "size", "=", "(", "1", ",", "1", ")", ")", "[", "0", "]", "[", "0", "]", "+", "np", ".", "random", ".", "normal", "(", ")", "\n", "\n", "if", "np", ".", "cos", "(", "self", ".", "flame_angle", ")", "==", "0", ":", "\n", "            ", "intensity_coeff", "=", "(", "259.833", "*", "(", "self", ".", "flame_height", "**", "2.174", ")", ")", "/", "1e3", "# 1e3 is to change the unit to [MW/m]", "\n", "", "else", ":", "\n", "            ", "intensity_coeff", "=", "(", "259.833", "*", "(", "(", "self", ".", "flame_height", "/", "np", ".", "cos", "(", "self", ".", "flame_angle", ")", ")", "**", "2.174", ")", ")", "/", "1e3", "# 1e3 is to change the unit to [MW/m]", "\n", "\n", "", "intensity", "=", "[", "]", "\n", "for", "spot", "in", "heat_source_spots", ":", "\n", "            ", "x_f", "=", "spot", "[", "0", "]", "\n", "y_f", "=", "spot", "[", "1", "]", "\n", "intensity", ".", "append", "(", "(", "1", "/", "(", "2", "*", "np", ".", "pi", "*", "x_dev", "*", "y_dev", ")", ")", "*", "\n", "np", ".", "exp", "(", "-", "0.5", "*", "(", "(", "(", "(", "x", "-", "x_f", ")", "**", "2", ")", "/", "x_dev", "**", "2", ")", "+", "(", "(", "(", "y", "-", "y_f", ")", "**", "2", ")", "/", "y_dev", "**", "2", ")", ")", ")", ")", "\n", "", "accumulated_intensity", "=", "sum", "(", "intensity", ")", "*", "intensity_coeff", "\n", "\n", "return", "1e3", "*", "accumulated_intensity", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.fire_flame_length": [[113, 130], ["ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "fire_flame_length", "(", "accumulated_intensity", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this function computes the fire length as a function of fire intensity according to [1].\n\n        [1] http://www.cfs.nrcan.gc.ca/bookstore_pdfs/21396.pdf\n\n        :param accumulated_intensity: fire intensity at the current fire spot location [kW/m]\n        :return: flame length at the current fire spot location\n        \"\"\"", "\n", "\n", "if", "accumulated_intensity", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> oops! The intensity at current fire location is required.\"", ")", "\n", "\n", "", "flame_length", "=", "0.0775", "*", "(", "accumulated_intensity", "**", "0.46", ")", "\n", "\n", "return", "flame_length", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.geo_phys_info_init": [[132, 153], ["numpy.random.normal", "numpy.random.normal", "numpy.random.rand"], "methods", ["None"], ["", "def", "geo_phys_info_init", "(", "self", ",", "max_fuel_coeff", "=", "7", ",", "avg_wind_speed", "=", "5", ",", "avg_wind_direction", "=", "np", ".", "pi", "/", "8", ")", ":", "\n", "        ", "\"\"\"\n        This function generates a set of Geo-Physical information based on user defined ranges for each parameter\n\n        :param max_fuel_coeff: maximum fuel coefficient based on vegetation type of the terrain\n        :param avg_wind_speed: average effective mid-flame wind speed\n        :param avg_wind_direction: wind azimuth\n        :return: a dictionary containing geo-physical information\n        \"\"\"", "\n", "\n", "min_fuel_coeff", "=", "1e-15", "\n", "fuel_rng", "=", "max_fuel_coeff", "-", "min_fuel_coeff", "\n", "spread_rate", "=", "fuel_rng", "*", "np", ".", "random", ".", "rand", "(", "self", ".", "terrain_sizes", "[", "0", "]", ",", "self", ".", "terrain_sizes", "[", "1", "]", ")", "+", "min_fuel_coeff", "\n", "wind_speed", "=", "np", ".", "random", ".", "normal", "(", "avg_wind_speed", ",", "2", ",", "size", "=", "(", "self", ".", "terrain_sizes", "[", "0", "]", ",", "1", ")", ")", "\n", "wind_direction", "=", "np", ".", "random", ".", "normal", "(", "avg_wind_direction", ",", "2", ",", "size", "=", "(", "self", ".", "terrain_sizes", "[", "0", "]", ",", "1", ")", ")", "\n", "\n", "geo_phys_info", "=", "{", "'spread_rate'", ":", "spread_rate", ",", "\n", "'wind_speed'", ":", "wind_speed", ",", "\n", "'wind_direction'", ":", "wind_direction", "}", "\n", "\n", "return", "geo_phys_info", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.fire_propagation": [[155, 222], ["numpy.zeros", "numpy.zeros", "ValueError", "numpy.array", "numpy.sqrt", "WildFire_Model.WildFire.fire_intensity", "numpy.sqrt", "WildFire_Model.WildFire.fire_intensity", "numpy.array", "numpy.sin", "numpy.cos", "numpy.tile", "numpy.where", "ign_points_all[].tolist", "numpy.tile", "numpy.where", "previous_terrain_map[].tolist", "numpy.sqrt", "numpy.sqrt", "int", "int", "int", "int", "numpy.random.randint", "numpy.random.randint", "numpy.exp", "numpy.exp", "numpy.absolute", "numpy.absolute", "round", "round", "numpy.power", "numpy.power", "idx1.tolist", "idx2.tolist"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.fire_intensity", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.fire_intensity"], ["", "def", "fire_propagation", "(", "self", ",", "world_Size", ",", "ign_points_all", "=", "None", ",", "geo_phys_info", "=", "None", ",", "\n", "previous_terrain_map", "=", "None", ",", "pruned_List", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        This function implements the simplified FARSITE wildfire propagation mathematical model\n\n        :param ign_points_all: array including all fire-fronts and their intensities across entire terrain [output of hotspot_init()]\n        :param geo_phys_info: a dictionary including geo-physical information [output of geo_phys_info_inti()]\n        :param previous_terrain_map: the terrain including all fire-fronts and their intensities as an array\n        :return: new fire front points and their corresponding geo-physical information\n        \"\"\"", "\n", "\n", "if", "ign_points_all", "is", "None", "or", "geo_phys_info", "is", "None", "or", "previous_terrain_map", "is", "None", "or", "pruned_List", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Fire propagation function needs ALL of its inputs to operate!\"", ")", "\n", "\n", "", "current_geo_phys_info", "=", "np", ".", "zeros", "(", "shape", "=", "[", "ign_points_all", ".", "shape", "[", "0", "]", ",", "3", "]", ")", "\n", "new_fire_front", "=", "np", ".", "zeros", "(", "shape", "=", "[", "ign_points_all", ".", "shape", "[", "0", "]", ",", "3", "]", ")", "\n", "counter", "=", "0", "\n", "for", "point", "in", "ign_points_all", ":", "\n", "# extracting the data", "\n", "            ", "x", ",", "y", "=", "point", "[", "0", "]", ",", "point", "[", "1", "]", "\n", "# Ensure that all the fire spots to be displayed must be within the window scope", "\n", "if", "(", "(", "x", "<=", "(", "world_Size", "-", "1", ")", ")", "and", "(", "y", "<=", "(", "world_Size", "-", "1", ")", ")", "and", "(", "x", ">", "0", ")", "and", "(", "y", ">", "0", ")", ")", ":", "\n", "                ", "spread_rate", "=", "geo_phys_info", "[", "'spread_rate'", "]", "\n", "wind_speed", "=", "geo_phys_info", "[", "'wind_speed'", "]", "\n", "wind_direction", "=", "geo_phys_info", "[", "'wind_direction'", "]", "\n", "\n", "# extracting the required information", "\n", "R", "=", "spread_rate", "[", "int", "(", "round", "(", "x", ")", ")", ",", "int", "(", "round", "(", "y", ")", ")", "]", "\n", "U", "=", "wind_speed", "[", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "self", ".", "terrain_sizes", "[", "0", "]", ")", "]", "[", "0", "]", "\n", "Theta", "=", "wind_direction", "[", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "self", ".", "terrain_sizes", "[", "0", "]", ")", "]", "[", "0", "]", "\n", "current_geo_phys_info", "[", "counter", "]", "=", "np", ".", "array", "(", "[", "R", ",", "U", ",", "Theta", "]", ")", "# storing GP information", "\n", "\n", "# Simplified FARSITE", "\n", "LB", "=", "0.936", "*", "np", ".", "exp", "(", "0.2566", "*", "U", ")", "+", "0.461", "*", "np", ".", "exp", "(", "-", "0.1548", "*", "U", ")", "-", "0.397", "\n", "HB", "=", "(", "LB", "+", "np", ".", "sqrt", "(", "np", ".", "absolute", "(", "np", ".", "power", "(", "LB", ",", "2", ")", "-", "1", ")", ")", ")", "/", "(", "LB", "-", "np", ".", "sqrt", "(", "np", ".", "absolute", "(", "np", ".", "power", "(", "LB", ",", "2", ")", "-", "1", ")", ")", ")", "\n", "C", "=", "0.5", "*", "(", "R", "-", "(", "R", "/", "HB", ")", ")", "\n", "\n", "x_diff", "=", "C", "*", "np", ".", "sin", "(", "Theta", ")", "\n", "y_diff", "=", "C", "*", "np", ".", "cos", "(", "Theta", ")", "\n", "\n", "# updating the fire location", "\n", "if", "[", "int", "(", "x", ")", ",", "int", "(", "y", ")", "]", "not", "in", "pruned_List", ":", "\n", "                    ", "x_new", "=", "x", "+", "x_diff", "*", "self", ".", "time_step", "\n", "y_new", "=", "y", "+", "y_diff", "*", "self", ".", "time_step", "\n", "", "else", ":", "\n", "                    ", "x_new", "=", "x", "\n", "y_new", "=", "y", "\n", "\n", "# computing the fire intensity", "\n", "", "heat_source_diff1", "=", "np", ".", "tile", "(", "point", ",", "(", "ign_points_all", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "-", "ign_points_all", "\n", "heat_source_dists1", "=", "np", ".", "sqrt", "(", "(", "heat_source_diff1", "[", ":", ",", "0", "]", "**", "2", ")", "+", "(", "heat_source_diff1", "[", ":", ",", "1", "]", "**", "2", ")", ")", "\n", "idx1", "=", "np", ".", "where", "(", "heat_source_dists1", "<=", "self", ".", "radiation_radius", ")", "[", "0", "]", "\n", "fire_intensity1", "=", "self", ".", "fire_intensity", "(", "point", ",", "ign_points_all", "[", "idx1", ".", "tolist", "(", ")", ",", ":", "]", ".", "tolist", "(", ")", ")", "\n", "\n", "heat_source_diff2", "=", "np", ".", "tile", "(", "point", ",", "(", "previous_terrain_map", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "-", "previous_terrain_map", "\n", "heat_source_dists2", "=", "np", ".", "sqrt", "(", "(", "heat_source_diff2", "[", ":", ",", "0", "]", "**", "2", ")", "+", "(", "heat_source_diff2", "[", ":", ",", "1", "]", "**", "2", ")", ")", "\n", "idx2", "=", "np", ".", "where", "(", "heat_source_dists2", "<=", "self", ".", "radiation_radius", ")", "[", "0", "]", "\n", "fire_intensity2", "=", "self", ".", "fire_intensity", "(", "point", ",", "previous_terrain_map", "[", "idx2", ".", "tolist", "(", ")", ",", ":", "]", ".", "tolist", "(", ")", ")", "\n", "\n", "fire_intensity", "=", "fire_intensity1", "+", "fire_intensity2", "\n", "\n", "# storing new fire-front locations and intensity", "\n", "new_fire_front", "[", "counter", "]", "=", "np", ".", "array", "(", "[", "x_new", ",", "y_new", ",", "fire_intensity", "]", ")", "\n", "\n", "counter", "+=", "1", "\n", "\n", "", "", "return", "new_fire_front", ",", "current_geo_phys_info", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.fire_decay": [[224, 263], ["numpy.zeros", "WildFire_Model.WildFire.pruning_fire_map", "ValueError", "numpy.ones", "numpy.array", "numpy.exp", "int", "int", "round", "round"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.pruning_fire_map"], ["", "def", "fire_decay", "(", "self", ",", "terrain_map", "=", "None", ",", "time_vector", "=", "None", ",", "geo_phys_info", "=", "None", ",", "decay_rate", "=", "0.01", ")", ":", "\n", "        ", "\"\"\"\n        this function performs the dynamic fire decay over time due to fuel exhaustion.\n\n        :param terrain_map: the terrain including all fire-fronts and their intensities as an array\n        :param time_vector: a vector containing how long has passed after the ignition of each point until now\n        :param geo_phys_info: a dictionary including geo-physical information [output of geo_phys_info_inti()]\n        :param decay_rate: fuel exhaustion rate (greater means faster exhaustion)\n        :return: the new fire map with updated intensities and the time vector\n        \"\"\"", "\n", "\n", "if", "terrain_map", "is", "None", "or", "geo_phys_info", "is", "None", "or", "time_vector", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! The fire decay function requires ALL its inputs (except for 'decay_rate=0.01' as default) to operate.\"", ")", "\n", "\n", "", "spread_rate", "=", "geo_phys_info", "[", "'spread_rate'", "]", "\n", "\n", "step_vector", "=", "self", ".", "time_step", "*", "np", ".", "ones", "(", "terrain_map", ".", "shape", "[", "0", "]", ")", "\n", "updated_time_vector", "=", "time_vector", "+", "step_vector", "\n", "\n", "# updating the intensities", "\n", "counter", "=", "0", "\n", "updated_terrain_map", "=", "np", ".", "zeros", "(", "shape", "=", "[", "terrain_map", ".", "shape", "[", "0", "]", ",", "3", "]", ")", "\n", "for", "spot", "in", "terrain_map", ":", "\n", "            ", "x", "=", "spot", "[", "0", "]", "\n", "y", "=", "spot", "[", "1", "]", "\n", "intensity", "=", "spot", "[", "2", "]", "\n", "R", "=", "spread_rate", "[", "int", "(", "round", "(", "x", ")", ")", ",", "int", "(", "round", "(", "y", ")", ")", "]", "\n", "\n", "I_new", "=", "intensity", "*", "np", ".", "exp", "(", "-", "decay_rate", "*", "updated_time_vector", "[", "counter", "]", "/", "R", ")", "\n", "\n", "updated_terrain_map", "[", "counter", "]", "=", "np", ".", "array", "(", "[", "x", ",", "y", ",", "I_new", "]", ")", "\n", "\n", "counter", "+=", "1", "\n", "\n", "# pruning dead fire spots from the fire map", "\n", "", "updated_terrain_map", ",", "updated_time_vector", ",", "burnt_out_fires_new", "=", "self", ".", "pruning_fire_map", "(", "\n", "updated_terrain_map", "=", "updated_terrain_map", ",", "updated_time_vector", "=", "updated_time_vector", ")", "\n", "\n", "return", "updated_terrain_map", ",", "updated_time_vector", ",", "burnt_out_fires_new", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.pruning_fire_map": [[265, 280], ["numpy.where", "numpy.delete", "numpy.delete"], "methods", ["None"], ["", "def", "pruning_fire_map", "(", "self", ",", "updated_terrain_map", "=", "None", ",", "updated_time_vector", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        this functions performs the fire map pruning and puts out fire spots that have \"weak enough\" intensity\n\n        :param updated_terrain_map: most recent terrain map updated after the intensity measures\n        :param updated_time_vector: most recent time vector\n        :return: new terrain map, time vector and pruned fire spots\n        \"\"\"", "\n", "\n", "burnt_out_fires_idx", "=", "np", ".", "where", "(", "updated_terrain_map", "[", ":", ",", "2", "]", "<", "self", ".", "weak_fire_threshold", ")", "\n", "burnt_out_fires_new", "=", "updated_terrain_map", "[", "burnt_out_fires_idx", "]", "\n", "updated_terrain_map", "=", "np", ".", "delete", "(", "updated_terrain_map", ",", "burnt_out_fires_idx", ",", "0", ")", "\n", "updated_time_vector", "=", "np", ".", "delete", "(", "updated_time_vector", ",", "burnt_out_fires_idx", ")", "\n", "\n", "return", "updated_terrain_map", ",", "updated_time_vector", ",", "burnt_out_fires_new", "\n", "", "", ""]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.__init__": [[29, 74], ["numpy.random.randint", "numpy.random.randint", "range", "area_centers.append", "num_firespots.append", "area_wind_directions.append", "pygame.init", "pygame.time.Clock", "pygame.display.set_mode", "random.choice", "numpy.random.randint"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "world_size", "=", "None", ",", "duration", "=", "None", ",", "fireAreas_Num", "=", "None", ",", "P_agent_num", "=", "None", ",", "A_agent_num", "=", "None", ",", "online_vis", "=", "False", ")", ":", "\n", "\n", "# pars parameters", "\n", "        ", "self", ".", "world_size", "=", "100", "if", "world_size", "is", "None", "else", "world_size", "# world size", "\n", "self", ".", "duration", "=", "200", "if", "duration", "is", "None", "else", "duration", "# numbr of steps per game", "\n", "self", ".", "fireAreas_Num", "=", "2", "if", "fireAreas_Num", "is", "None", "else", "fireAreas_Num", "# number of fire areas", "\n", "self", ".", "perception_agent_num", "=", "2", "if", "P_agent_num", "is", "None", "else", "P_agent_num", "# number of perception agents", "\n", "self", ".", "action_agent_num", "=", "2", "if", "A_agent_num", "is", "None", "else", "A_agent_num", "# number of action agents", "\n", "\n", "# fire model parameters", "\n", "areas_x", "=", "np", ".", "random", ".", "randint", "(", "20", ",", "self", ".", "world_size", "-", "20", ",", "self", ".", "fireAreas_Num", ")", "\n", "areas_y", "=", "np", ".", "random", ".", "randint", "(", "20", ",", "self", ".", "world_size", "-", "20", ",", "self", ".", "fireAreas_Num", ")", "\n", "area_delays", "=", "[", "0", "]", "*", "self", ".", "fireAreas_Num", "\n", "area_fuel_coeffs", "=", "[", "5", "]", "*", "self", ".", "fireAreas_Num", "\n", "area_wind_speed", "=", "[", "5", "]", "*", "self", ".", "fireAreas_Num", "\n", "area_wind_directions", "=", "[", "]", "\n", "area_centers", "=", "[", "]", "\n", "num_firespots", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "            ", "area_centers", ".", "append", "(", "[", "areas_x", "[", "i", "]", ",", "areas_y", "[", "i", "]", "]", ")", "\n", "num_firespots", ".", "append", "(", "np", ".", "random", ".", "randint", "(", "low", "=", "5", ",", "high", "=", "15", ",", "size", "=", "1", ")", "[", "0", "]", ")", "\n", "area_wind_directions", ".", "append", "(", "random", ".", "choice", "(", "[", "0", ",", "45", ",", "90", ",", "135", ",", "180", "]", ")", ")", "\n", "", "self", ".", "fire_info", "=", "[", "area_centers", ",", "# [[area1_center_x, area1_center_y], [area2_center_x, area2_center_y], ...],", "\n", "[", "num_firespots", ",", "# [[num_firespots1, num_firespots2, ...],", "\n", "area_delays", ",", "# [area1_start_delay, area2_start_delay, ...],", "\n", "area_fuel_coeffs", ",", "# [area1_fuel_coefficient, area2_coefficient, ...],", "\n", "area_wind_speed", ",", "# [area1_wind_speed, area2_wind_speed, ...],", "\n", "area_wind_directions", ",", "# [area1_wind_direction, area2_wind_direction, ...],", "\n", "1.25", ",", "# temporal penalty coefficient,", "\n", "0.1", ",", "# fire propagation weight,", "\n", "90", ",", "# Action Pruning Confidence Level (In percentage),", "\n", "80", ",", "# Hybrid Pruning Confidence Level (In percentage),", "\n", "1", "]", "]", "# mode]", "\n", "\n", "# the number of stacked frames for training", "\n", "self", ".", "stack_num", "=", "4", "\n", "\n", "# initialize the pygame for online visualization", "\n", "if", "online_vis", ":", "\n", "            ", "pygame", ".", "init", "(", ")", "\n", "# The simulation time is counted in seconds, while the actual time is counted in milliseconds", "\n", "clock", "=", "pygame", ".", "time", ".", "Clock", "(", ")", "\n", "# Create a screen (Width * Height) = (1024 * 1024)", "\n", "self", ".", "screen", "=", "pygame", ".", "display", ".", "set_mode", "(", "(", "self", ".", "world_size", ",", "self", ".", "world_size", ")", ",", "0", ",", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.env_init": [[76, 158], ["numpy.zeros", "range", "range", "FireCommander_Cmplx1.FireCommanderHard.fire_init", "range", "range", "range", "FireCommander_Cmplx1.FireCommanderHard.agent_state.append", "FireCommander_Cmplx1.FireCommanderHard.agent_state.append", "range", "range", "range", "Agent_Util.adjacent_agents", "int", "int", "int", "int", "Agent_Util.adjacent_agents", "FireCommander_Cmplx1.FireCommanderHard.adjacent_agents_PnA.append", "Agent_Util.adjacent_agents", "FireCommander_Cmplx1.FireCommanderHard.adjacent_agents_PnP.append", "FireCommander_Cmplx1.FireCommanderHard.adjacent_agents_AnA.append"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents"], ["", "", "def", "env_init", "(", "self", ",", "comm_range", "=", "30", ",", "init_alt", "=", "10", ")", ":", "\n", "# state matrix: 0 -> not_on_fire, 1 -> sensed_on_fire, 2 -> pruned, 3 -> P_agent_loc, 4 -> P_agent_scope, 5 -> A_agent_loc, 6 -> A_agent_scope", "\n", "        ", "self", ".", "state", "=", "np", ".", "zeros", "(", "(", "self", ".", "world_size", ",", "self", ".", "world_size", ")", ",", "dtype", "=", "float", ")", "# initialize the full state matrix", "\n", "\n", "# initialize the agents' (e.g., robots') states. Format:: [X, Y, Z, type], where type=0 is Perception and type=1 is Action", "\n", "# agaents initialized at the top-right corner (-/), for top-left (//), for bottom-right (--), for bottom-left (/-)", "\n", "# self.agent_state = [[int(self.world_size-10), int(self.world_size/10), 10, 0],  # Perception Agent #1", "\n", "#                     [int(self.world_size-10), int(self.world_size/10), 10, 0],  # Perception Agent #2", "\n", "#                     [int(self.world_size-10), int(self.world_size/10), 10, 1],  # Action Agent #1", "\n", "#                     [int(self.world_size-10), int(self.world_size/10), 10, 1]]  # Action Agent #2", "\n", "self", ".", "agent_state", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "self", ".", "agent_state", ".", "append", "(", "[", "int", "(", "self", ".", "world_size", "-", "10", ")", ",", "int", "(", "self", ".", "world_size", "/", "10", ")", ",", "init_alt", ",", "0", "]", ")", "# Perception Agent", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "self", ".", "agent_state", ".", "append", "(", "[", "int", "(", "self", ".", "world_size", "-", "10", ")", ",", "int", "(", "self", ".", "world_size", "/", "10", ")", ",", "init_alt", ",", "1", "]", ")", "# Action Agent", "\n", "\n", "", "self", ".", "comm_hop", "=", "comm_range", "# number of hops for discrete communication range", "\n", "self", ".", "agent_pose_dim", "=", "3", "# 3D coordinates", "\n", "\n", "# initialize the episode transaction", "\n", "self", ".", "episode", "=", "0", "\n", "\n", "# initialize the list to store the target info", "\n", "self", ".", "target_onFire_list", "=", "[", "]", "\n", "self", ".", "target_info", "=", "[", "]", "\n", "\n", "# initialize the fire region info", "\n", "self", ".", "fire_init", "(", ")", "\n", "\n", "# the END flag", "\n", "self", ".", "done", "=", "False", "\n", "\n", "# keeping track of neighboring agents (works with both 2D and 3D positions)", "\n", "self", ".", "adjacent_agents_PnP", "=", "[", "]", "\n", "self", ".", "adjacent_agents_PnA", "=", "[", "]", "\n", "self", ".", "adjacent_agents_AnA", "=", "[", "]", "\n", "# Perception-Perception adjacency", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "                ", "if", "i", "!=", "j", ":", "\n", "                    ", "pose1", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                        ", "self", ".", "adjacent_agents_PnP", ".", "append", "(", "[", "i", ",", "j", "]", ")", "\n", "# Perception-Action adjacency", "\n", "", "", "", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "pose1", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                    ", "self", ".", "adjacent_agents_PnA", ".", "append", "(", "[", "i", ",", "self", ".", "perception_agent_num", "+", "j", "]", ")", "\n", "# Action-Action adjacency", "\n", "", "", "", "for", "i", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "if", "i", "!=", "j", ":", "\n", "                    ", "pose1", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                        ", "self", ".", "adjacent_agents_AnA", ".", "append", "(", "[", "self", ".", "perception_agent_num", "+", "i", ",", "self", ".", "perception_agent_num", "+", "j", "]", ")", "\n", "\n", "# task complete info", "\n", "", "", "", "", "self", ".", "perception_complete", "=", "0", "\n", "self", ".", "action_complete", "=", "0", "\n", "\n", "# initialize rewards", "\n", "self", ".", "reward", "=", "0.0", "\n", "self", ".", "Perception_reward", "=", "0", "\n", "self", ".", "Action_reward", "=", "0", "\n", "\n", "# initialize the frame that stores the most recent 4 frames for training", "\n", "self", ".", "frame", "=", "[", "]", "\n", "\n", "# video_replay reconstruction Buffer intitialization", "\n", "self", ".", "sensed_List_Buffer", "=", "[", "]", "\n", "self", ".", "pruned_List_Buffer", "=", "[", "]", "\n", "self", ".", "agent_state_buffer", "=", "[", "]", "\n", "self", ".", "reward_buffer", "=", "[", "]", "\n", "self", ".", "old_reward_without_adjacent", "=", "0.0", "\n", "\n", "# FOV buffer", "\n", "self", ".", "FOV_list", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.env_step": [[160, 254], ["FireCommander_Cmplx1.FireCommanderHard.agent_state_update", "FireCommander_Cmplx1.FireCommanderHard.fire_propagation", "range", "range", "FireCommander_Cmplx1.FireCommanderHard.state_gen", "range", "range", "range", "len", "Agent_Util.fire_Sensing", "FireCommander_Cmplx1.FireCommanderHard.FOV_list.append", "len", "Agent_Util.fire_Pruning", "range", "range", "range", "FireCommander_Cmplx1.FireCommanderHard.get_reward1", "len", "len", "len", "Agent_Util.adjacent_agents", "len", "sum", "sum", "FireCommander_Cmplx1.FireCommanderHard.get_reward2", "len", "len", "len", "len", "len", "len", "Agent_Util.adjacent_agents", "FireCommander_Cmplx1.FireCommanderHard.adjacent_agents_PnA.append", "Agent_Util.adjacent_agents", "len", "sum", "sum", "FireCommander_Cmplx1.FireCommanderHard.get_reward3", "FireCommander_Cmplx1.FireCommanderHard.adjacent_agents_PnP.append", "FireCommander_Cmplx1.FireCommanderHard.adjacent_agents_AnA.append", "len", "sum", "sum", "FireCommander_Cmplx1.FireCommanderHard.get_reward1", "ValueError", "len", "sum", "sum"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.agent_state_update", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_propagation", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.state_gen", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Sensing", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Pruning", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward1", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward2", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward3", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward1"], ["", "def", "env_step", "(", "self", ",", "action", ",", "p_vel", "=", "5", ",", "a_vel", "=", "5", ",", "vert_vel", "=", "2", ",", "min_alt", "=", "5", ",", "max_alt", "=", "15", ",", "time_passed", "=", "1", ",", "a_c_threshold", "=", "1.5", ",", "r_func", "=", "None", ")", ":", "\n", "        ", "self", ".", "FOV_list", "=", "[", "]", "\n", "\n", "self", ".", "agent_state_update", "(", "action", ",", "p_vel", "=", "p_vel", ",", "a_vel", "=", "a_vel", ",", "vert_vel", "=", "vert_vel", ",", "min_alt", "=", "min_alt", ",", "max_alt", "=", "max_alt", ")", "# update the agents' states", "\n", "self", ".", "fire_propagation", "(", ")", "# propagate the fire", "\n", "\n", "# updating the Perception agents' contribution", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "sensed_num_prev", "=", "len", "(", "self", ".", "sensed_List", ")", "\n", "# Sensing", "\n", "self", ".", "sensed_List", ",", "FOV", "=", "Agent_Util", ".", "fire_Sensing", "(", "self", ".", "onFire_List", ",", "self", ".", "agent_state", "[", "i", "]", ",", "self", ".", "sensed_List", ",", "self", ".", "world_size", ")", "\n", "self", ".", "FOV_list", ".", "append", "(", "FOV", ")", "\n", "# compute the per-agent contribution (variation of the sensing list size)", "\n", "self", ".", "sensed_contribution", "[", "i", "]", "+=", "len", "(", "self", ".", "sensed_List", ")", "-", "sensed_num_prev", "\n", "\n", "# updating the Action agents' contribution", "\n", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ",", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "pruned_num_prev", "=", "len", "(", "self", ".", "pruned_List", ")", "\n", "# Pruning", "\n", "self", ".", "onFire_List", ",", "self", ".", "sensed_List", ",", "self", ".", "pruned_List", ",", "self", ".", "new_fire_front", ",", "self", ".", "target_onFire_list", "=", "Agent_Util", ".", "fire_Pruning", "(", "self", ".", "agent_state", "[", "i", "]", ",", "self", ".", "onFire_List", ",", "self", ".", "sensed_List", ",", "self", ".", "pruned_List", ",", "self", ".", "new_fire_front", ",", "\n", "self", ".", "target_onFire_list", ",", "self", ".", "target_info", ",", "self", ".", "world_size", ",", "0.8", ")", "\n", "# compute the per-agent contribution (variation of the pruned list size)", "\n", "self", ".", "pruned_contribution", "[", "i", "-", "self", ".", "perception_agent_num", "]", "+=", "len", "(", "self", ".", "pruned_List", ")", "-", "pruned_num_prev", "\n", "\n", "# updating the full state matrix", "\n", "", "state", "=", "self", ".", "state_gen", "(", ")", "\n", "'''\n        # update the frame stack in the FIFO policy - not used currently\n        if self.stack_num <= len(self.frame):\n            self.frame = self.frame[1:] + [state]\n        else:\n            self.frame.append(state)\n        '''", "\n", "\n", "# TODO: DISCRETE ADAJACENCY CHECK ############################################################################################################", "\n", "# determining the neighboring agents (works with both 2D and 3D positions)", "\n", "self", ".", "adjacent_agents_PnP", "=", "[", "]", "\n", "self", ".", "adjacent_agents_PnA", "=", "[", "]", "\n", "self", ".", "adjacent_agents_AnA", "=", "[", "]", "\n", "# Perception-Perception adjacency", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "                ", "if", "i", "!=", "j", ":", "\n", "                    ", "pose1", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                        ", "self", ".", "adjacent_agents_PnP", ".", "append", "(", "[", "i", ",", "j", "]", ")", "\n", "# Perception-Action adjacency", "\n", "", "", "", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "pose1", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                    ", "self", ".", "adjacent_agents_PnA", ".", "append", "(", "[", "i", ",", "self", ".", "perception_agent_num", "+", "j", "]", ")", "\n", "# Action-Action adjacency", "\n", "", "", "", "for", "i", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "if", "i", "!=", "j", ":", "\n", "                    ", "pose1", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                        ", "self", ".", "adjacent_agents_AnA", ".", "append", "(", "[", "self", ".", "perception_agent_num", "+", "i", ",", "self", ".", "perception_agent_num", "+", "j", "]", ")", "\n", "\n", "# TODO: REWARD STRUCTURE #####################################################################################################################", "\n", "", "", "", "", "all_adjacencies", "=", "self", ".", "adjacent_agents_PnP", "+", "self", ".", "adjacent_agents_AnA", "+", "self", ".", "adjacent_agents_PnA", "\n", "if", "r_func", "==", "'RF1'", ":", "\n", "            ", "self", ".", "reward", "=", "self", ".", "get_reward1", "(", "len", "(", "self", ".", "onFire_List", ")", ",", "sum", "(", "self", ".", "sensed_contribution", ")", ",", "sum", "(", "self", ".", "pruned_contribution", ")", ",", "\n", "all_adjacencies", ",", "time_passed", ")", "\n", "", "elif", "r_func", "==", "'RF2'", ":", "\n", "            ", "self", ".", "reward", "=", "self", ".", "get_reward2", "(", "len", "(", "self", ".", "onFire_List", ")", ",", "sum", "(", "self", ".", "sensed_contribution", ")", ",", "sum", "(", "self", ".", "pruned_contribution", ")", ",", "\n", "all_adjacencies", ",", "time_passed", ")", "\n", "", "elif", "r_func", "==", "'RF3'", ":", "\n", "            ", "self", ".", "reward", "=", "self", ".", "get_reward3", "(", "len", "(", "self", ".", "onFire_List", ")", ",", "sum", "(", "self", ".", "sensed_contribution", ")", ",", "sum", "(", "self", ".", "pruned_contribution", ")", ",", "\n", "all_adjacencies", ",", "time_passed", ")", "\n", "", "elif", "r_func", "is", "None", ":", "\n", "            ", "self", ".", "reward", "=", "self", ".", "get_reward1", "(", "len", "(", "self", ".", "onFire_List", ")", ",", "sum", "(", "self", ".", "sensed_contribution", ")", ",", "sum", "(", "self", ".", "pruned_contribution", ")", ",", "\n", "all_adjacencies", ",", "time_passed", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! The specified Reward Function name doesn't exist. Options: RF1, RF2, RF3\"", ")", "\n", "\n", "\n", "# if all the fire fronts have been sensed, exit the environment", "\n", "# Perception performance: (sensed + pruned) / (active + pruned)", "\n", "", "self", ".", "perception_complete", "=", "(", "len", "(", "self", ".", "sensed_List", ")", "+", "len", "(", "self", ".", "pruned_List", ")", ")", "/", "(", "len", "(", "self", ".", "onFire_List", ")", "+", "len", "(", "self", ".", "pruned_List", ")", ")", "\n", "# Action performance:  pruned / (active + pruned)", "\n", "self", ".", "action_complete", "=", "len", "(", "self", ".", "pruned_List", ")", "/", "(", "len", "(", "self", ".", "onFire_List", ")", "+", "len", "(", "self", ".", "pruned_List", ")", ")", "\n", "# when more than 95% of firespots have been pruned, the agent wins the game", "\n", "# lower the bar to 80%", "\n", "if", "self", ".", "action_complete", ">=", "a_c_threshold", ":", "\n", "            ", "self", ".", "done", "=", "True", "\n", "self", ".", "reward", "+=", "1000.0", "\n", "\n", "", "return", "state", ",", "self", ".", "reward", ",", "self", ".", "done", ",", "self", ".", "perception_complete", ",", "self", ".", "action_complete", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.agent_state_update": [[256, 292], ["range", "range", "max", "max", "min", "min", "max", "max", "min", "min", "min", "max"], "methods", ["None"], ["", "def", "agent_state_update", "(", "self", ",", "action_type", ",", "p_vel", ",", "a_vel", ",", "vert_vel", "=", "2", ",", "min_alt", "=", "5", ",", "max_alt", "=", "15", ")", ":", "\n", "# Update P agents", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "# state transisitions", "\n", "# Action: Forward", "\n", "            ", "if", "action_type", "[", "i", "]", "==", "0", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "p_vel", ",", "0", ")", "\n", "# Action: Backward", "\n", "", "elif", "action_type", "[", "i", "]", "==", "1", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "p_vel", ",", "self", ".", "world_size", "-", "1", ")", "\n", "# Action: Left", "\n", "", "elif", "action_type", "[", "i", "]", "==", "2", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "p_vel", ",", "0", ")", "\n", "# Action: Right", "\n", "", "elif", "action_type", "[", "i", "]", "==", "3", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "p_vel", ",", "self", ".", "world_size", "-", "1", ")", "\n", "# Action: Up (altitude):", "\n", "", "elif", "action_type", "[", "i", "]", "==", "4", "and", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "0", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "+", "vert_vel", ",", "max_alt", ")", "# maximum allowed altitude set to 20", "\n", "# Action: Down (altitude):", "\n", "", "elif", "action_type", "[", "i", "]", "==", "5", "and", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "0", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "-", "vert_vel", ",", "min_alt", ")", "# minimum allowed altitude set to 5", "\n", "\n", "# Update A agents       ", "\n", "", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ",", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "if", "action_type", "[", "i", "]", "==", "0", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "a_vel", ",", "0", ")", "\n", "# Action: Backward", "\n", "", "elif", "action_type", "[", "i", "]", "==", "1", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "a_vel", ",", "self", ".", "world_size", "-", "1", ")", "\n", "# Action: Left", "\n", "", "elif", "action_type", "[", "i", "]", "==", "2", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "a_vel", ",", "0", ")", "\n", "# Action: Right", "\n", "", "elif", "action_type", "[", "i", "]", "==", "3", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "a_vel", ",", "self", ".", "world_size", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.get_reward1": [[294, 328], ["list", "list", "range", "len", "range", "len", "len", "len", "list.remove", "len", "list.remove", "list.remove", "len"], "methods", ["None"], ["", "", "", "def", "get_reward1", "(", "self", ",", "num_firespots", ",", "num_sensed", ",", "num_pruned", ",", "all_adjacencies", ",", "time_passed", ")", ":", "\n", "# computing performance rewards", "\n", "        ", "new_reward", "=", "2.0", "*", "num_sensed", "\n", "new_reward", "+=", "20.0", "*", "num_pruned", "\n", "\n", "im_reward", "=", "new_reward", "-", "self", ".", "old_reward_without_adjacent", "\n", "self", ".", "old_reward_without_adjacent", "=", "new_reward", "\n", "\n", "# computing adjacency rewards for homogeneous communicatiion channel", "\n", "uniques", "=", "list", "(", "range", "(", "0", ",", "len", "(", "self", ".", "agent_state", ")", ")", ")", "\n", "for", "pair", "in", "all_adjacencies", ":", "\n", "            ", "for", "idx", "in", "pair", ":", "\n", "                ", "if", "idx", "in", "uniques", ":", "\n", "                    ", "uniques", ".", "remove", "(", "idx", ")", "\n", "if", "len", "(", "uniques", ")", "==", "0", ":", "\n", "                        ", "break", "\n", "\n", "", "", "", "", "im_reward", "-=", "1.0", "*", "len", "(", "uniques", ")", "\n", "\n", "# computing adjacency rewards for homogeneous communicatiion channel", "\n", "uniques_hetero_cm", "=", "list", "(", "range", "(", "0", ",", "len", "(", "self", ".", "agent_state", ")", ")", ")", "\n", "for", "pair", "in", "all_adjacencies", ":", "\n", "            ", "if", "0", "<=", "pair", "[", "0", "]", "<", "self", ".", "perception_agent_num", ":", "# one way check is OK since heterogeneous communication is symmetric", "\n", "                ", "if", "self", ".", "perception_agent_num", "<=", "pair", "[", "1", "]", "<", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ":", "\n", "                    ", "if", "pair", "[", "0", "]", "in", "uniques_hetero_cm", ":", "\n", "                        ", "uniques_hetero_cm", ".", "remove", "(", "pair", "[", "0", "]", ")", "\n", "", "if", "pair", "[", "1", "]", "in", "uniques_hetero_cm", ":", "\n", "                        ", "uniques_hetero_cm", ".", "remove", "(", "pair", "[", "1", "]", ")", "\n", "", "if", "len", "(", "uniques_hetero_cm", ")", "==", "0", ":", "\n", "                        ", "break", "\n", "\n", "", "", "", "", "im_reward", "-=", "3.0", "*", "len", "(", "uniques_hetero_cm", ")", "\n", "\n", "return", "im_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.get_reward2": [[330, 342], ["None"], "methods", ["None"], ["", "def", "get_reward2", "(", "self", ",", "num_firespots", ",", "num_sensed", ",", "num_pruned", ",", "all_adjacencies", ",", "time_passed", ")", ":", "\n", "#new_reward = self.old_reward_without_adjacent", "\n", "#new_reward = -1.0 * time_passed", "\n", "\n", "#im_reward = new_reward - self.old_reward_without_adjacent", "\n", "#self.old_reward_without_adjacent = new_reward", "\n", "        ", "if", "num_firespots", ">", "0", ":", "\n", "            ", "im_reward", "=", "-", "1.0", "\n", "", "else", ":", "\n", "            ", "im_reward", "=", "0.0", "\n", "\n", "", "return", "im_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.get_reward3": [[344, 356], ["None"], "methods", ["None"], ["", "def", "get_reward3", "(", "self", ",", "num_firespots", ",", "num_sensed", ",", "num_pruned", ",", "all_adjacencies", ",", "time_passed", ")", ":", "\n", "# computing performance rewards", "\n", "# new_reward = 2.0 * num_sensed", "\n", "# new_reward += 20.0 * num_pruned", "\n", "# new_reward = self.old_reward_without_adjacent", "\n", "# new_reward -= 0.1 * num_firespots  # small penalty for each active firespot in the field", "\n", "\n", "# im_reward = new_reward", "\n", "# self.old_reward_without_adjacent = new_reward", "\n", "        ", "im_reward", "=", "-", "0.1", "*", "num_firespots", "\n", "\n", "return", "im_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.state_gen": [[358, 390], ["numpy.zeros", "range", "range", "range", "len", "len", "len", "range", "max", "min", "range", "range", "max", "min", "max", "min", "range", "max", "min"], "methods", ["None"], ["", "def", "state_gen", "(", "self", ")", ":", "\n", "        ", "self", ".", "state", "=", "np", ".", "zeros", "(", "(", "self", ".", "world_size", ",", "self", ".", "world_size", ")", ",", "dtype", "=", "float", ")", "# cleanup the previous states", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "agent_state", ")", ")", ":", "\n", "# Perception Agents", "\n", "            ", "if", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "0", ":", "\n", "# mark the Perception agent scope", "\n", "                ", "for", "i1", "in", "range", "(", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", ")", ",", "\n", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "+", "1", ",", "self", ".", "world_size", ")", ")", ":", "\n", "                    ", "for", "j1", "in", "range", "(", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", ")", ",", "\n", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "+", "1", ",", "self", ".", "world_size", ")", ")", ":", "\n", "                        ", "self", ".", "state", "[", "i1", "]", "[", "j1", "]", "=", "4", "# Perception agent scope index", "\n", "# mark the position of the perception agents", "\n", "", "", "self", ".", "state", "[", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "]", "[", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "]", "=", "3", "# Perception agent location index", "\n", "\n", "# Action Agents", "\n", "", "elif", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "1", ":", "\n", "# mark the Action agent scope", "\n", "                ", "for", "i1", "in", "range", "(", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", ")", ",", "\n", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "+", "1", ",", "self", ".", "world_size", ")", ")", ":", "\n", "                    ", "for", "j1", "in", "range", "(", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", ")", ",", "\n", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "+", "1", ",", "self", ".", "world_size", ")", ")", ":", "\n", "                        ", "self", ".", "state", "[", "i1", "]", "[", "j1", "]", "=", "6", "# Action agent scope index", "\n", "# mark the position of the action agents", "\n", "", "", "self", ".", "state", "[", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "]", "[", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "]", "=", "5", "# Action agent location index", "\n", "# mark the sensed fire fronts", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "sensed_List", ")", ")", ":", "\n", "            ", "self", ".", "state", "[", "self", ".", "sensed_List", "[", "i", "]", "[", "0", "]", "]", "[", "self", ".", "sensed_List", "[", "i", "]", "[", "1", "]", "]", "=", "1", "# sensed firespots index", "\n", "# mark the pruned fire fronts", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "pruned_List", ")", ")", ":", "\n", "            ", "self", ".", "state", "[", "self", ".", "pruned_List", "[", "i", "]", "[", "0", "]", "]", "[", "self", ".", "pruned_List", "[", "i", "]", "[", "1", "]", "]", "=", "2", "# pruned firespots index", "\n", "\n", "", "return", "self", ".", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.get_FOV": [[392, 429], ["len", "range", "max", "max", "min", "min", "FireCommander_Cmplx1.FireCommanderHard.state[].copy", "FOV_list.append", "print"], "methods", ["None"], ["", "def", "get_FOV", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Get self.FOV_list\n        If it is empty, then\n            Get sensor image by cropping the self.state map\n                Store as np.array in FOV_list\n        Assume that the first N agents are always P agents\n            N = self.perception_agent_num\n        \"\"\"", "\n", "if", "len", "(", "self", ".", "FOV_list", ")", ">", "0", ":", "\n", "            ", "return", "self", ".", "FOV_list", "\n", "", "else", ":", "\n", "            ", "FOV_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "# Perception Agents", "\n", "                ", "if", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "0", ":", "\n", "#1. crop image", "\n", "                    ", "x", ",", "y", ",", "z", ",", "alt", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "# the upper-left corner of the agent searching scope", "\n", "upper_x", "=", "max", "(", "0", ",", "x", "-", "z", ")", "\n", "upper_y", "=", "max", "(", "0", ",", "y", "-", "z", ")", "\n", "# the lower-right corner of the agent searching scope", "\n", "lower_x", "=", "min", "(", "x", "+", "z", ",", "self", ".", "world_size", "-", "1", ")", "\n", "lower_y", "=", "min", "(", "y", "+", "z", ",", "self", ".", "world_size", "-", "1", ")", "\n", "# crop", "\n", "cropped", "=", "self", ".", "state", "[", "upper_x", ":", "lower_x", "+", "1", ",", "upper_y", ":", "lower_y", "+", "1", "]", ".", "copy", "(", ")", "\n", "\n", "#2. change 2-6 to 0", "\n", "cropped", "[", "cropped", ">=", "2", "]", "=", "0", "\n", "\n", "#3. add to dict", "\n", "FOV_list", ".", "append", "(", "cropped", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "'Idx Error!'", ")", "\n", "\n", "", "", "return", "FOV_list", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.env_visualize": [[432, 468], ["FireCommander_Cmplx1.FireCommanderHard.screen.fill", "Agent_Util.sensed_Fire_Spot_Plot", "Agent_Util.pruned_Fire_Spot_Plot", "range", "pygame.display.update", "len", "pygame.draw.circle", "pygame.draw.rect", "Rect", "pygame.draw.polygon", "int", "int"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.sensed_Fire_Spot_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.pruned_Fire_Spot_Plot"], ["", "", "def", "env_visualize", "(", "self", ")", ":", "\n", "# fill the background screen with green", "\n", "        ", "self", ".", "screen", ".", "fill", "(", "(", "197", ",", "225", ",", "165", ")", ")", "\n", "# Agent_Util.on_Fire_Spot_Plot(self.screen, self.onFire_List)", "\n", "# plot the sensed fire with red dots", "\n", "Agent_Util", ".", "sensed_Fire_Spot_Plot", "(", "self", ".", "screen", ",", "self", ".", "sensed_List", ")", "\n", "Agent_Util", ".", "pruned_Fire_Spot_Plot", "(", "self", ".", "screen", ",", "self", ".", "pruned_List", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "agent_state", ")", ")", ":", "\n", "# Perception Agents", "\n", "            ", "if", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "0", ":", "\n", "# Calculate the size of the FOV scope", "\n", "                ", "searching_Scope_X", "=", "2", "*", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "\n", "searching_Scope_Y", "=", "2", "*", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "\n", "\n", "# the coordination of the upper-left corner of the agent searching scope", "\n", "searching_Scope_Upper_Left_Corner", "=", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "searching_Scope_X", "/", "2", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "searching_Scope_Y", "/", "2", ")", "\n", "# the size of the agent searching scope", "\n", "searching_Scope_Size", "=", "(", "searching_Scope_X", ",", "searching_Scope_Y", ")", "\n", "\n", "# Plot the Perception agent (Circle) and its corresponding FOV scope (Rectangle)", "\n", "pygame", ".", "draw", ".", "circle", "(", "self", ".", "screen", ",", "(", "0", ",", "0", ",", "255", ")", ",", "(", "int", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", ")", ")", ",", "2", ")", "\n", "pygame", ".", "draw", ".", "rect", "(", "self", ".", "screen", ",", "(", "0", ",", "0", ",", "255", ")", ",", "Rect", "(", "searching_Scope_Upper_Left_Corner", ",", "searching_Scope_Size", ")", ",", "2", ")", "\n", "\n", "", "elif", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "1", ":", "\n", "# the vertex set for the Action agent", "\n", "                ", "firefighter_Agent_Vertex", "=", "[", "\n", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "2", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", ")", ",", "\n", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "2", ")", ",", "\n", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "2", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", ")", ",", "\n", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "2", ")", "]", "\n", "# plot the firefighter agent (Diamond)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "self", ".", "screen", ",", "(", "128", ",", "0", ",", "128", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "\n", "# update the display according to the latest change", "\n", "", "", "pygame", ".", "display", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.fire_init": [[470, 551], ["range", "range", "FireCommander_Cmplx1.FireCommanderHard.fire_States_List.append", "hotspot_areas.append", "WildFire_Model.WildFire", "FireCommander_Cmplx1.FireCommanderHard.fire_mdl.hotspot_init", "FireCommander_Cmplx1.FireCommanderHard.ign_points_all.copy", "FireCommander_Cmplx1.FireCommanderHard.fire_mdl.geo_phys_info_init", "range", "range", "numpy.array", "FireCommander_Cmplx1.FireCommanderHard.new_fire_front_temp.append", "FireCommander_Cmplx1.FireCommanderHard.current_geo_phys_info.append", "FireCommander_Cmplx1.FireCommanderHard.fire_mdl.append", "FireCommander_Cmplx1.FireCommanderHard.ign_points_all.append", "FireCommander_Cmplx1.FireCommanderHard.previous_terrain_map.append", "FireCommander_Cmplx1.FireCommanderHard.geo_phys_info.append", "range", "WildFire_Model.WildFire", "FireCommander_Cmplx1.FireCommanderHard.fire_mdl[].hotspot_init", "FireCommander_Cmplx1.FireCommanderHard.fire_mdl[].hotspot_init", "FireCommander_Cmplx1.FireCommanderHard.fire_mdl[].geo_phys_info_init", "len", "FireCommander_Cmplx1.FireCommanderHard.fire_map.append"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.hotspot_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.geo_phys_info_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.hotspot_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.hotspot_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.geo_phys_info_init"], ["", "def", "fire_init", "(", "self", ")", ":", "\n", "# Fire region (Color: Red (255, 0, 0))", "\n", "# The wildfire generation and propagation utilizes the FARSITE wildfire mathematical model", "\n", "# To clarify the fire state data, the state of the fire spot at each moment is stored in the dictionary list separately", "\n", "# Besides, the current fire map will also be stored as a matrix with the same size of the simulation model, which", "\n", "# reflects the fire intensity of each position on the world", "\n", "\n", "# create the fire state dictionary list", "\n", "        ", "self", ".", "fire_States_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "            ", "self", ".", "fire_States_List", ".", "append", "(", "[", "]", ")", "\n", "# length and width of the terrain as a list [length, width]", "\n", "", "terrain_sizes", "=", "[", "self", ".", "world_size", ",", "self", ".", "world_size", "]", "\n", "hotspot_areas", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "            ", "hotspot_areas", ".", "append", "(", "[", "self", ".", "fire_info", "[", "0", "]", "[", "i", "]", "[", "0", "]", "-", "5", ",", "self", ".", "fire_info", "[", "0", "]", "[", "i", "]", "[", "0", "]", "+", "5", ",", "\n", "self", ".", "fire_info", "[", "0", "]", "[", "i", "]", "[", "1", "]", "-", "5", ",", "self", ".", "fire_info", "[", "0", "]", "[", "i", "]", "[", "1", "]", "+", "5", "]", ")", "\n", "\n", "# checking fire model setting mode and initializing the fire model", "\n", "", "if", "self", ".", "fire_info", "[", "1", "]", "[", "9", "]", "==", "0", ":", "# when using \"uniform\" fire setting (all fire areas use the same parameters)", "\n", "# initial number of fire spots (ignition points) per hotspot area", "\n", "            ", "num_ign_points", "=", "self", ".", "fire_info", "[", "1", "]", "[", "0", "]", "\n", "# fuel coefficient for vegetation type of the terrain (higher fuel_coeff:: more circular shape fire)", "\n", "fuel_coeff", "=", "self", ".", "fire_info", "[", "1", "]", "[", "2", "]", "\n", "# average mid-flame wind velocity (higher values streches the fire more)", "\n", "wind_speed", "=", "self", ".", "fire_info", "[", "1", "]", "[", "3", "]", "\n", "# wind azimuth", "\n", "wind_direction", "=", "np", ".", "pi", "*", "2", "*", "self", ".", "fire_info", "[", "1", "]", "[", "4", "]", "/", "360", "# converting degree to radian", "\n", "\n", "# Init the wildfire model", "\n", "self", ".", "fire_mdl", "=", "WildFire", "(", "terrain_sizes", "=", "terrain_sizes", ",", "hotspot_areas", "=", "hotspot_areas", ",", "num_ign_points", "=", "num_ign_points", ",", "duration", "=", "self", ".", "duration", ",", "\n", "time_step", "=", "1", ",", "radiation_radius", "=", "10", ",", "weak_fire_threshold", "=", "5", ",", "flame_height", "=", "3", ",", "flame_angle", "=", "np", ".", "pi", "/", "3", ")", "\n", "self", ".", "ign_points_all", "=", "self", ".", "fire_mdl", ".", "hotspot_init", "(", ")", "# initializing hotspots", "\n", "self", ".", "fire_map", "=", "self", ".", "ign_points_all", "# initializing fire-map", "\n", "self", ".", "previous_terrain_map", "=", "self", ".", "ign_points_all", ".", "copy", "(", ")", "# initializing the starting terrain map", "\n", "self", ".", "geo_phys_info", "=", "self", ".", "fire_mdl", ".", "geo_phys_info_init", "(", "max_fuel_coeff", "=", "fuel_coeff", ",", "avg_wind_speed", "=", "wind_speed", ",", "\n", "avg_wind_direction", "=", "wind_direction", ")", "# initialize geo-physical info", "\n", "", "else", ":", "# when using \"Specific\" fire setting (each fire area uses its own parameters)", "\n", "            ", "self", ".", "fire_mdl", "=", "[", "]", "\n", "self", ".", "geo_phys_info", "=", "[", "]", "\n", "self", ".", "ign_points_all", "=", "[", "]", "\n", "self", ".", "previous_terrain_map", "=", "[", "]", "\n", "self", ".", "new_fire_front_temp", "=", "[", "]", "\n", "self", ".", "current_geo_phys_info", "=", "[", "]", "\n", "# initialize fire areas separately", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "self", ".", "new_fire_front_temp", ".", "append", "(", "[", "]", ")", "\n", "self", ".", "current_geo_phys_info", ".", "append", "(", "[", "]", ")", "\n", "# initial number of fire spots (ignition points) per hotspot area", "\n", "num_ign_points", "=", "self", ".", "fire_info", "[", "1", "]", "[", "0", "]", "[", "i", "]", "\n", "# fuel coefficient for vegetation type of the terrain (higher fuel_coeff:: more circular shape fire)", "\n", "fuel_coeff", "=", "self", ".", "fire_info", "[", "1", "]", "[", "2", "]", "[", "i", "]", "\n", "# average mid-flame wind velocity (higher values streches the fire more)", "\n", "wind_speed", "=", "self", ".", "fire_info", "[", "1", "]", "[", "3", "]", "[", "i", "]", "\n", "# wind azimuth", "\n", "wind_direction", "=", "np", ".", "pi", "*", "2", "*", "self", ".", "fire_info", "[", "1", "]", "[", "4", "]", "[", "i", "]", "/", "360", "# converting degree to radian", "\n", "\n", "# init the wildfire model", "\n", "self", ".", "fire_mdl", ".", "append", "(", "WildFire", "(", "\n", "terrain_sizes", "=", "terrain_sizes", ",", "hotspot_areas", "=", "[", "hotspot_areas", "[", "i", "]", "]", ",", "num_ign_points", "=", "num_ign_points", ",", "duration", "=", "self", ".", "duration", ",", "time_step", "=", "1", ",", "\n", "radiation_radius", "=", "10", ",", "weak_fire_threshold", "=", "5", ",", "flame_height", "=", "3", ",", "flame_angle", "=", "np", ".", "pi", "/", "3", ")", ")", "\n", "self", ".", "ign_points_all", ".", "append", "(", "self", ".", "fire_mdl", "[", "i", "]", ".", "hotspot_init", "(", ")", ")", "# initializing hotspots", "\n", "self", ".", "previous_terrain_map", ".", "append", "(", "self", ".", "fire_mdl", "[", "i", "]", ".", "hotspot_init", "(", ")", ")", "# initializing the starting terrain map", "\n", "self", ".", "geo_phys_info", ".", "append", "(", "self", ".", "fire_mdl", "[", "i", "]", ".", "geo_phys_info_init", "(", "max_fuel_coeff", "=", "fuel_coeff", ",", "avg_wind_speed", "=", "wind_speed", ",", "\n", "avg_wind_direction", "=", "wind_direction", ")", ")", "# initialize geo-physical info", "\n", "# initializing the fire-map", "\n", "", "self", ".", "fire_map", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "ign_points_all", "[", "i", "]", ")", ")", ":", "\n", "                    ", "self", ".", "fire_map", ".", "append", "(", "self", ".", "ign_points_all", "[", "i", "]", "[", "j", "]", ")", "\n", "", "", "self", ".", "fire_map", "=", "np", ".", "array", "(", "self", ".", "fire_map", ")", "\n", "self", ".", "fire_map_spec", "=", "self", ".", "ign_points_all", "\n", "\n", "# the lists to store the firespots in different state, coordinates only", "\n", "", "self", ".", "onFire_List", "=", "[", "]", "# the onFire_List, store the points currently on fire (sensed points included, pruned points excluded)", "\n", "self", ".", "sensed_List", "=", "[", "]", "# the sensed_List, store the points currently on fire and have been sensed by agents", "\n", "self", ".", "pruned_List", "=", "[", "]", "# the pruned_List, store the pruned fire spots", "\n", "\n", "# keeping track of agents' contributions (e.g. number of sensed/pruned firespot by each Perception/Action agent)", "\n", "self", ".", "sensed_contribution", "=", "[", "0", "]", "*", "self", ".", "perception_agent_num", "\n", "self", ".", "pruned_contribution", "=", "[", "0", "]", "*", "self", ".", "action_agent_num", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.fire_propagation": [[553, 602], ["Agent_Util.fire_Data_Storage", "FireCommander_Cmplx1.FireCommanderHard.fire_mdl.fire_propagation", "range", "range", "numpy.array", "range", "numpy.concatenate", "range", "FireCommander_Cmplx1.FireCommanderHard.fire_mdl[].fire_propagation", "range", "numpy.concatenate", "ign_points_all_temp.append", "numpy.concatenate", "len", "FireCommander_Cmplx1.FireCommanderHard.new_fire_front.append", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Data_Storage", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_propagation", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_propagation"], ["", "def", "fire_propagation", "(", "self", ")", ":", "\n", "# checking fire model setting mode and initializing the fire model", "\n", "        ", "if", "self", ".", "fire_info", "[", "1", "]", "[", "9", "]", "==", "0", ":", "# when using \"uniform\" fire setting (all fire areas use the same parameters)", "\n", "            ", "self", ".", "new_fire_front", ",", "current_geo_phys_info", "=", "self", ".", "fire_mdl", ".", "fire_propagation", "(", "self", ".", "world_size", ",", "ign_points_all", "=", "self", ".", "ign_points_all", ",", "geo_phys_info", "=", "self", ".", "geo_phys_info", ",", "\n", "previous_terrain_map", "=", "self", ".", "previous_terrain_map", ",", "pruned_List", "=", "self", ".", "pruned_List", ")", "\n", "updated_terrain_map", "=", "self", ".", "previous_terrain_map", "\n", "", "else", ":", "# when using \"Specific\" fire setting (each fire area uses its own parameters)", "\n", "            ", "updated_terrain_map", "=", "self", ".", "previous_terrain_map", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "self", ".", "new_fire_front_temp", "[", "i", "]", ",", "self", ".", "current_geo_phys_info", "[", "i", "]", "=", "self", ".", "fire_mdl", "[", "i", "]", ".", "fire_propagation", "(", "self", ".", "world_size", ",", "ign_points_all", "=", "self", ".", "ign_points_all", "[", "i", "]", ",", "geo_phys_info", "=", "self", ".", "geo_phys_info", "[", "i", "]", ",", "\n", "previous_terrain_map", "=", "self", ".", "previous_terrain_map", "[", "i", "]", ",", "pruned_List", "=", "self", ".", "pruned_List", ")", "\n", "\n", "# update the new firefront list by combining all region-wise firefronts", "\n", "", "self", ".", "new_fire_front", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "new_fire_front_temp", "[", "i", "]", ")", ")", ":", "\n", "                    ", "self", ".", "new_fire_front", ".", "append", "(", "self", ".", "new_fire_front_temp", "[", "i", "]", "[", "j", "]", ")", "\n", "", "", "self", ".", "new_fire_front", "=", "np", ".", "array", "(", "self", ".", "new_fire_front", ")", "\n", "\n", "# update the region-wise fire map", "\n", "", "if", "self", ".", "fire_info", "[", "1", "]", "[", "9", "]", "==", "1", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "self", ".", "fire_map_spec", "[", "i", "]", "=", "np", ".", "concatenate", "(", "[", "self", ".", "fire_map_spec", "[", "i", "]", ",", "self", ".", "new_fire_front_temp", "[", "i", "]", "]", ",", "axis", "=", "0", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "fire_map_spec", "=", "self", ".", "fire_map", "\n", "\n", "# process the fire spot information and generate the onFire and targer onfire list", "\n", "", "self", ".", "onFire_List", ",", "self", ".", "target_onFire_list", "=", "Agent_Util", ".", "fire_Data_Storage", "(", "\n", "self", ".", "new_fire_front", ",", "self", ".", "world_size", ",", "self", ".", "onFire_List", ",", "self", ".", "pruned_List", ",", "self", ".", "target_onFire_list", ",", "self", ".", "target_info", ")", "\n", "\n", "# updating the fire-map data for next step", "\n", "if", "self", ".", "new_fire_front", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "self", ".", "fire_map", "=", "np", ".", "concatenate", "(", "[", "self", ".", "fire_map", ",", "self", ".", "new_fire_front", "]", ",", "axis", "=", "0", ")", "# raw fire map without fire decay", "\n", "\n", "# update the fire propagation information", "\n", "", "if", "self", ".", "fire_info", "[", "1", "]", "[", "9", "]", "==", "1", ":", "\n", "            ", "ign_points_all_temp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "if", "self", ".", "new_fire_front_temp", "[", "i", "]", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "# fire map with fire decay", "\n", "                    ", "self", ".", "previous_terrain_map", "[", "i", "]", "=", "np", ".", "concatenate", "(", "(", "updated_terrain_map", "[", "i", "]", ",", "self", ".", "new_fire_front_temp", "[", "i", "]", ")", ",", "axis", "=", "0", ")", "\n", "", "ign_points_all_temp", ".", "append", "(", "self", ".", "new_fire_front_temp", "[", "i", "]", ")", "\n", "", "self", ".", "ign_points_all", "=", "ign_points_all_temp", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "new_fire_front", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "                ", "self", ".", "previous_terrain_map", "=", "np", ".", "concatenate", "(", "(", "updated_terrain_map", ",", "self", ".", "new_fire_front", ")", ")", "# fire map with fire decay", "\n", "self", ".", "ign_points_all", "=", "self", ".", "new_fire_front", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.env_close": [[604, 607], ["pygame.quit"], "methods", ["None"], ["", "", "", "@", "staticmethod", "\n", "def", "env_close", "(", ")", ":", "\n", "        ", "pygame", ".", "quit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.env_init_stack": [[610, 621], ["FireCommander_Cmplx1.FireCommanderHard.env_init", "range", "numpy.random.randint", "numpy.random.randint", "FireCommander_Cmplx1.FireCommanderHard.env_step", "list", "list"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.env_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.env_step"], ["", "def", "env_init_stack", "(", "self", ",", "planar_vel", ",", "vert_vel", ",", "min_alt", ",", "max_alt", ")", ":", "\n", "        ", "self", ".", "env_init", "(", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "stack_num", ")", ":", "\n", "            ", "action_p", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "6", ",", "2", ")", "# Perception agent action generator, using randint now", "\n", "action_a", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "4", ",", "2", ")", "# Action agent action generator, using randint now", "\n", "\n", "actions", "=", "list", "(", "action_p", ")", "+", "list", "(", "action_a", ")", "\n", "\n", "state", ",", "reward", ",", "done", ",", "perception_complete", ",", "action_complete", "=", "self", ".", "env_step", "(", "actions", ",", "planar_vel", ",", "vert_vel", ",", "min_alt", ",", "max_alt", ")", "# step forward", "\n", "\n", "", "return", "self", ".", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1.FireCommanderHard.env_replay_store": [[623, 628], ["FireCommander_Cmplx1.FireCommanderHard.agent_state_buffer.append", "FireCommander_Cmplx1.FireCommanderHard.sensed_List_Buffer.append", "FireCommander_Cmplx1.FireCommanderHard.pruned_List_Buffer.append", "FireCommander_Cmplx1.FireCommanderHard.reward_buffer.append"], "methods", ["None"], ["", "def", "env_replay_store", "(", "self", ")", ":", "\n", "        ", "self", ".", "agent_state_buffer", ".", "append", "(", "self", ".", "agent_state", ")", "# agent State", "\n", "self", ".", "sensed_List_Buffer", ".", "append", "(", "self", ".", "sensed_List", ")", "# sensing List Buffer", "\n", "self", ".", "pruned_List_Buffer", ".", "append", "(", "self", ".", "pruned_List", ")", "# pruning List Buffer", "\n", "self", ".", "reward_buffer", ".", "append", "(", "self", ".", "reward", ")", "# Reward variations", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.__init__": [[29, 74], ["numpy.random.randint", "numpy.random.randint", "range", "area_centers.append", "num_firespots.append", "area_wind_directions.append", "pygame.init", "pygame.time.Clock", "pygame.display.set_mode", "random.choice", "numpy.random.randint"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "world_size", "=", "None", ",", "duration", "=", "None", ",", "fireAreas_Num", "=", "None", ",", "P_agent_num", "=", "None", ",", "A_agent_num", "=", "None", ",", "online_vis", "=", "False", ")", ":", "\n", "\n", "# pars parameters", "\n", "        ", "self", ".", "world_size", "=", "100", "if", "world_size", "is", "None", "else", "world_size", "# world size", "\n", "self", ".", "duration", "=", "200", "if", "duration", "is", "None", "else", "duration", "# numbr of steps per game", "\n", "self", ".", "fireAreas_Num", "=", "2", "if", "fireAreas_Num", "is", "None", "else", "fireAreas_Num", "# number of fire areas", "\n", "self", ".", "perception_agent_num", "=", "2", "if", "P_agent_num", "is", "None", "else", "P_agent_num", "# number of perception agents", "\n", "self", ".", "action_agent_num", "=", "2", "if", "A_agent_num", "is", "None", "else", "A_agent_num", "# number of action agents", "\n", "\n", "# fire model parameters", "\n", "areas_x", "=", "np", ".", "random", ".", "randint", "(", "20", ",", "self", ".", "world_size", "-", "20", ",", "self", ".", "fireAreas_Num", ")", "\n", "areas_y", "=", "np", ".", "random", ".", "randint", "(", "20", ",", "self", ".", "world_size", "-", "20", ",", "self", ".", "fireAreas_Num", ")", "\n", "area_delays", "=", "[", "0", "]", "*", "self", ".", "fireAreas_Num", "\n", "area_fuel_coeffs", "=", "[", "5", "]", "*", "self", ".", "fireAreas_Num", "\n", "area_wind_speed", "=", "[", "5", "]", "*", "self", ".", "fireAreas_Num", "\n", "area_wind_directions", "=", "[", "]", "\n", "area_centers", "=", "[", "]", "\n", "num_firespots", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "            ", "area_centers", ".", "append", "(", "[", "areas_x", "[", "i", "]", ",", "areas_y", "[", "i", "]", "]", ")", "\n", "num_firespots", ".", "append", "(", "np", ".", "random", ".", "randint", "(", "low", "=", "5", ",", "high", "=", "15", ",", "size", "=", "1", ")", "[", "0", "]", ")", "\n", "area_wind_directions", ".", "append", "(", "random", ".", "choice", "(", "[", "0", ",", "45", ",", "90", ",", "135", ",", "180", "]", ")", ")", "\n", "", "self", ".", "fire_info", "=", "[", "area_centers", ",", "# [[area1_center_x, area1_center_y], [area2_center_x, area2_center_y], ...],", "\n", "[", "num_firespots", ",", "# [[num_firespots1, num_firespots2, ...],", "\n", "area_delays", ",", "# [area1_start_delay, area2_start_delay, ...],", "\n", "area_fuel_coeffs", ",", "# [area1_fuel_coefficient, area2_coefficient, ...],", "\n", "area_wind_speed", ",", "# [area1_wind_speed, area2_wind_speed, ...],", "\n", "area_wind_directions", ",", "# [area1_wind_direction, area2_wind_direction, ...],", "\n", "1.25", ",", "# temporal penalty coefficient,", "\n", "0.1", ",", "# fire propagation weight,", "\n", "90", ",", "# Action Pruning Confidence Level (In percentage),", "\n", "80", ",", "# Hybrid Pruning Confidence Level (In percentage),", "\n", "1", "]", "]", "# mode]", "\n", "\n", "# the number of stacked frames for training", "\n", "self", ".", "stack_num", "=", "4", "\n", "\n", "# initialize the pygame for online visualization", "\n", "if", "online_vis", ":", "\n", "            ", "pygame", ".", "init", "(", ")", "\n", "# The simulation time is counted in seconds, while the actual time is counted in milliseconds", "\n", "clock", "=", "pygame", ".", "time", ".", "Clock", "(", ")", "\n", "# Create a screen (Width * Height) = (1024 * 1024)", "\n", "self", ".", "screen", "=", "pygame", ".", "display", ".", "set_mode", "(", "(", "self", ".", "world_size", ",", "self", ".", "world_size", ")", ",", "0", ",", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.env_init": [[76, 158], ["numpy.zeros", "range", "range", "FireCommander_Cmplx2.FireCommanderExtreme.fire_init", "range", "range", "range", "FireCommander_Cmplx2.FireCommanderExtreme.agent_state.append", "FireCommander_Cmplx2.FireCommanderExtreme.agent_state.append", "range", "range", "range", "Agent_Util.adjacent_agents", "int", "int", "int", "int", "Agent_Util.adjacent_agents", "FireCommander_Cmplx2.FireCommanderExtreme.adjacent_agents_PnA.append", "Agent_Util.adjacent_agents", "FireCommander_Cmplx2.FireCommanderExtreme.adjacent_agents_PnP.append", "FireCommander_Cmplx2.FireCommanderExtreme.adjacent_agents_AnA.append"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents"], ["", "", "def", "env_init", "(", "self", ",", "comm_range", "=", "30", ",", "init_alt", "=", "10", ")", ":", "\n", "# state matrix: 0 -> not_on_fire, 1 -> sensed_on_fire, 2 -> pruned, 3 -> P_agent_loc, 4 -> P_agent_scope, 5 -> A_agent_loc, 6 -> A_agent_scope", "\n", "        ", "self", ".", "state", "=", "np", ".", "zeros", "(", "(", "self", ".", "world_size", ",", "self", ".", "world_size", ")", ",", "dtype", "=", "float", ")", "# initialize the full state matrix", "\n", "\n", "# initialize the agents' (e.g., robots') states. Format:: [X, Y, Z, type], where type=0 is Perception and type=1 is Action", "\n", "# agaents initialized at the top-right corner (-/), for top-left (//), for bottom-right (--), for bottom-left (/-)", "\n", "# self.agent_state = [[int(self.world_size-10), int(self.world_size/10), 10, 0],  # Perception Agent #1", "\n", "#                     [int(self.world_size-10), int(self.world_size/10), 10, 0],  # Perception Agent #2", "\n", "#                     [int(self.world_size-10), int(self.world_size/10), 10, 1],  # Action Agent #1", "\n", "#                     [int(self.world_size-10), int(self.world_size/10), 10, 1]]  # Action Agent #2", "\n", "self", ".", "agent_state", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "self", ".", "agent_state", ".", "append", "(", "[", "int", "(", "self", ".", "world_size", "-", "10", ")", ",", "int", "(", "self", ".", "world_size", "/", "10", ")", ",", "init_alt", ",", "0", "]", ")", "# Perception Agent", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "self", ".", "agent_state", ".", "append", "(", "[", "int", "(", "self", ".", "world_size", "-", "10", ")", ",", "int", "(", "self", ".", "world_size", "/", "10", ")", ",", "init_alt", ",", "1", "]", ")", "# Action Agent", "\n", "\n", "", "self", ".", "comm_hop", "=", "comm_range", "# number of hops for discrete communication range", "\n", "self", ".", "agent_pose_dim", "=", "3", "# 3D coordinates", "\n", "\n", "# initialize the episode transaction", "\n", "self", ".", "episode", "=", "0", "\n", "\n", "# initialize the list to store the target info", "\n", "self", ".", "target_onFire_list", "=", "[", "]", "\n", "self", ".", "target_info", "=", "[", "]", "\n", "\n", "# initialize the fire region info", "\n", "self", ".", "fire_init", "(", ")", "\n", "\n", "# the END flag", "\n", "self", ".", "done", "=", "False", "\n", "\n", "# keeping track of neighboring agents (works with both 2D and 3D positions)", "\n", "self", ".", "adjacent_agents_PnP", "=", "[", "]", "\n", "self", ".", "adjacent_agents_PnA", "=", "[", "]", "\n", "self", ".", "adjacent_agents_AnA", "=", "[", "]", "\n", "# Perception-Perception adjacency", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "                ", "if", "i", "!=", "j", ":", "\n", "                    ", "pose1", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                        ", "self", ".", "adjacent_agents_PnP", ".", "append", "(", "[", "i", ",", "j", "]", ")", "\n", "# Perception-Action adjacency", "\n", "", "", "", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "pose1", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                    ", "self", ".", "adjacent_agents_PnA", ".", "append", "(", "[", "i", ",", "self", ".", "perception_agent_num", "+", "j", "]", ")", "\n", "# Action-Action adjacency", "\n", "", "", "", "for", "i", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "if", "i", "!=", "j", ":", "\n", "                    ", "pose1", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                        ", "self", ".", "adjacent_agents_AnA", ".", "append", "(", "[", "self", ".", "perception_agent_num", "+", "i", ",", "self", ".", "perception_agent_num", "+", "j", "]", ")", "\n", "\n", "# task complete info", "\n", "", "", "", "", "self", ".", "perception_complete", "=", "0", "\n", "self", ".", "action_complete", "=", "0", "\n", "\n", "# initialize rewards", "\n", "self", ".", "reward", "=", "0.0", "\n", "self", ".", "Perception_reward", "=", "0", "\n", "self", ".", "Action_reward", "=", "0", "\n", "\n", "# initialize the frame that stores the most recent 4 frames for training", "\n", "self", ".", "frame", "=", "[", "]", "\n", "\n", "# video_replay reconstruction Buffer intitialization", "\n", "self", ".", "sensed_List_Buffer", "=", "[", "]", "\n", "self", ".", "pruned_List_Buffer", "=", "[", "]", "\n", "self", ".", "agent_state_buffer", "=", "[", "]", "\n", "self", ".", "reward_buffer", "=", "[", "]", "\n", "self", ".", "old_reward_without_adjacent", "=", "0.0", "\n", "\n", "# FOV buffer", "\n", "self", ".", "FOV_list", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.env_step": [[160, 257], ["FireCommander_Cmplx2.FireCommanderExtreme.agent_state_update", "FireCommander_Cmplx2.FireCommanderExtreme.fire_propagation", "range", "range", "FireCommander_Cmplx2.FireCommanderExtreme.state_gen", "range", "range", "range", "len", "Agent_Util.fire_Sensing", "FireCommander_Cmplx2.FireCommanderExtreme.FOV_list.append", "range", "range", "range", "FireCommander_Cmplx2.FireCommanderExtreme.get_reward1", "len", "len", "len", "Agent_Util.fire_Pruning", "Agent_Util.adjacent_agents", "len", "sum", "sum", "FireCommander_Cmplx2.FireCommanderExtreme.get_reward2", "len", "len", "len", "len", "len", "len", "len", "Agent_Util.adjacent_agents", "FireCommander_Cmplx2.FireCommanderExtreme.adjacent_agents_PnA.append", "Agent_Util.adjacent_agents", "len", "sum", "sum", "FireCommander_Cmplx2.FireCommanderExtreme.get_reward3", "FireCommander_Cmplx2.FireCommanderExtreme.adjacent_agents_PnP.append", "FireCommander_Cmplx2.FireCommanderExtreme.adjacent_agents_AnA.append", "len", "sum", "sum", "FireCommander_Cmplx2.FireCommanderExtreme.get_reward1", "ValueError", "len", "sum", "sum"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.agent_state_update", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_propagation", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.state_gen", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Sensing", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward1", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Pruning", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward2", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward3", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward1"], ["", "def", "env_step", "(", "self", ",", "action", ",", "p_vel", "=", "5", ",", "a_vel", "=", "5", ",", "vert_vel", "=", "2", ",", "min_alt", "=", "5", ",", "max_alt", "=", "15", ",", "time_passed", "=", "1", ",", "a_c_threshold", "=", "1.5", ",", "r_func", "=", "None", ")", ":", "\n", "        ", "self", ".", "FOV_list", "=", "[", "]", "\n", "\n", "self", ".", "agent_state_update", "(", "action", ",", "p_vel", "=", "p_vel", ",", "a_vel", "=", "a_vel", ",", "vert_vel", "=", "vert_vel", ",", "min_alt", "=", "min_alt", ",", "max_alt", "=", "max_alt", ")", "# update the agents' states", "\n", "self", ".", "fire_propagation", "(", ")", "# propagate the fire", "\n", "\n", "# updating the Perception agents' contribution", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "sensed_num_prev", "=", "len", "(", "self", ".", "sensed_List", ")", "\n", "# Sensing", "\n", "self", ".", "sensed_List", ",", "FOV", "=", "Agent_Util", ".", "fire_Sensing", "(", "self", ".", "onFire_List", ",", "self", ".", "agent_state", "[", "i", "]", ",", "self", ".", "sensed_List", ",", "self", ".", "world_size", ")", "\n", "self", ".", "FOV_list", ".", "append", "(", "FOV", ")", "\n", "# compute the per-agent contribution (variation of the sensing list size)", "\n", "self", ".", "sensed_contribution", "[", "i", "]", "+=", "len", "(", "self", ".", "sensed_List", ")", "-", "sensed_num_prev", "\n", "\n", "# updating the Action agents' contribution", "\n", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ",", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "if", "action", "[", "i", "]", "==", "4", ":", "\n", "                ", "pruned_num_prev", "=", "len", "(", "self", ".", "pruned_List", ")", "\n", "# Pruning", "\n", "self", ".", "onFire_List", ",", "self", ".", "sensed_List", ",", "self", ".", "pruned_List", ",", "self", ".", "new_fire_front", ",", "self", ".", "target_onFire_list", "=", "Agent_Util", ".", "fire_Pruning", "(", "self", ".", "agent_state", "[", "i", "]", ",", "self", ".", "onFire_List", ",", "self", ".", "sensed_List", ",", "self", ".", "pruned_List", ",", "self", ".", "new_fire_front", ",", "\n", "self", ".", "target_onFire_list", ",", "self", ".", "target_info", ",", "self", ".", "world_size", ",", "0.8", ")", "\n", "# compute the per-agent contribution (variation of the pruned list size)", "\n", "self", ".", "pruned_contribution", "[", "i", "-", "self", ".", "perception_agent_num", "]", "+=", "len", "(", "self", ".", "pruned_List", ")", "-", "pruned_num_prev", "\n", "", "else", ":", "\n", "                ", "continue", "\n", "\n", "# updating the full state matrix", "\n", "", "", "state", "=", "self", ".", "state_gen", "(", ")", "\n", "'''\n        # update the frame stack in the FIFO policy - not used currently\n        if self.stack_num <= len(self.frame):\n            self.frame = self.frame[1:] + [state]\n        else:\n            self.frame.append(state)\n        '''", "\n", "\n", "# TODO: DISCRETE ADAJACENCY CHECK ############################################################################################################", "\n", "# determining the neighboring agents (works with both 2D and 3D positions)", "\n", "self", ".", "adjacent_agents_PnP", "=", "[", "]", "\n", "self", ".", "adjacent_agents_PnA", "=", "[", "]", "\n", "self", ".", "adjacent_agents_AnA", "=", "[", "]", "\n", "# Perception-Perception adjacency", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "                ", "if", "i", "!=", "j", ":", "\n", "                    ", "pose1", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                        ", "self", ".", "adjacent_agents_PnP", ".", "append", "(", "[", "i", ",", "j", "]", ")", "\n", "# Perception-Action adjacency", "\n", "", "", "", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "pose1", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                    ", "self", ".", "adjacent_agents_PnA", ".", "append", "(", "[", "i", ",", "self", ".", "perception_agent_num", "+", "j", "]", ")", "\n", "# Action-Action adjacency", "\n", "", "", "", "for", "i", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "if", "i", "!=", "j", ":", "\n", "                    ", "pose1", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "-", "1", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                        ", "self", ".", "adjacent_agents_AnA", ".", "append", "(", "[", "self", ".", "perception_agent_num", "+", "i", ",", "self", ".", "perception_agent_num", "+", "j", "]", ")", "\n", "\n", "# TODO: REWARD STRUCTURE #####################################################################################################################", "\n", "", "", "", "", "all_adjacencies", "=", "self", ".", "adjacent_agents_PnP", "+", "self", ".", "adjacent_agents_AnA", "+", "self", ".", "adjacent_agents_PnA", "\n", "if", "r_func", "==", "'RF1'", ":", "\n", "            ", "self", ".", "reward", "=", "self", ".", "get_reward1", "(", "len", "(", "self", ".", "onFire_List", ")", ",", "sum", "(", "self", ".", "sensed_contribution", ")", ",", "sum", "(", "self", ".", "pruned_contribution", ")", ",", "\n", "all_adjacencies", ",", "time_passed", ")", "\n", "", "elif", "r_func", "==", "'RF2'", ":", "\n", "            ", "self", ".", "reward", "=", "self", ".", "get_reward2", "(", "len", "(", "self", ".", "onFire_List", ")", ",", "sum", "(", "self", ".", "sensed_contribution", ")", ",", "sum", "(", "self", ".", "pruned_contribution", ")", ",", "\n", "all_adjacencies", ",", "time_passed", ")", "\n", "", "elif", "r_func", "==", "'RF3'", ":", "\n", "            ", "self", ".", "reward", "=", "self", ".", "get_reward3", "(", "len", "(", "self", ".", "onFire_List", ")", ",", "sum", "(", "self", ".", "sensed_contribution", ")", ",", "sum", "(", "self", ".", "pruned_contribution", ")", ",", "\n", "all_adjacencies", ",", "time_passed", ")", "\n", "", "elif", "r_func", "is", "None", ":", "\n", "            ", "self", ".", "reward", "=", "self", ".", "get_reward1", "(", "len", "(", "self", ".", "onFire_List", ")", ",", "sum", "(", "self", ".", "sensed_contribution", ")", ",", "sum", "(", "self", ".", "pruned_contribution", ")", ",", "\n", "all_adjacencies", ",", "time_passed", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! The specified Reward Function name doesn't exist. Options: RF1, RF2, RF3\"", ")", "\n", "\n", "\n", "# if all the fire fronts have been sensed, exit the environment", "\n", "# Perception performance: (sensed + pruned) / (active + pruned)", "\n", "", "self", ".", "perception_complete", "=", "(", "len", "(", "self", ".", "sensed_List", ")", "+", "len", "(", "self", ".", "pruned_List", ")", ")", "/", "(", "len", "(", "self", ".", "onFire_List", ")", "+", "len", "(", "self", ".", "pruned_List", ")", ")", "\n", "# Action performance:  pruned / (active + pruned)", "\n", "self", ".", "action_complete", "=", "len", "(", "self", ".", "pruned_List", ")", "/", "(", "len", "(", "self", ".", "onFire_List", ")", "+", "len", "(", "self", ".", "pruned_List", ")", ")", "\n", "# when more than 95% of firespots have been pruned, the agent wins the game", "\n", "# lower the bar to 80%", "\n", "if", "self", ".", "action_complete", ">=", "a_c_threshold", ":", "\n", "            ", "self", ".", "done", "=", "True", "\n", "self", ".", "reward", "+=", "1000.0", "\n", "\n", "", "return", "state", ",", "self", ".", "reward", ",", "self", ".", "done", ",", "self", ".", "perception_complete", ",", "self", ".", "action_complete", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.agent_state_update": [[259, 297], ["range", "range", "max", "max", "min", "min", "max", "max", "min", "min", "min", "max"], "methods", ["None"], ["", "def", "agent_state_update", "(", "self", ",", "action_type", ",", "p_vel", ",", "a_vel", ",", "vert_vel", "=", "2", ",", "min_alt", "=", "5", ",", "max_alt", "=", "15", ")", ":", "\n", "# Update P agents", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "# state transisitions", "\n", "# Action: Forward", "\n", "            ", "if", "action_type", "[", "i", "]", "==", "0", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "p_vel", ",", "0", ")", "\n", "# Action: Backward", "\n", "", "elif", "action_type", "[", "i", "]", "==", "1", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "p_vel", ",", "self", ".", "world_size", "-", "1", ")", "\n", "# Action: Left", "\n", "", "elif", "action_type", "[", "i", "]", "==", "2", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "p_vel", ",", "0", ")", "\n", "# Action: Right", "\n", "", "elif", "action_type", "[", "i", "]", "==", "3", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "p_vel", ",", "self", ".", "world_size", "-", "1", ")", "\n", "# Action: Up (altitude):", "\n", "", "elif", "action_type", "[", "i", "]", "==", "4", "and", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "0", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "+", "vert_vel", ",", "max_alt", ")", "# maximum allowed altitude set to 20", "\n", "# Action: Down (altitude):", "\n", "", "elif", "action_type", "[", "i", "]", "==", "5", "and", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "0", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "-", "vert_vel", ",", "min_alt", ")", "# minimum allowed altitude set to 5", "\n", "\n", "# Update A agents       ", "\n", "", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ",", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "if", "action_type", "[", "i", "]", "==", "0", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "a_vel", ",", "0", ")", "\n", "# Action: Backward", "\n", "", "elif", "action_type", "[", "i", "]", "==", "1", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "a_vel", ",", "self", ".", "world_size", "-", "1", ")", "\n", "# Action: Left", "\n", "", "elif", "action_type", "[", "i", "]", "==", "2", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "a_vel", ",", "0", ")", "\n", "# Action: Right", "\n", "", "elif", "action_type", "[", "i", "]", "==", "3", ":", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "a_vel", ",", "self", ".", "world_size", "-", "1", ")", "\n", "", "elif", "action_type", "[", "i", "]", "==", "4", ":", "\n", "                ", "continue", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward1": [[299, 333], ["list", "list", "range", "len", "range", "len", "len", "len", "list.remove", "len", "list.remove", "list.remove", "len"], "methods", ["None"], ["", "", "", "def", "get_reward1", "(", "self", ",", "num_firespots", ",", "num_sensed", ",", "num_pruned", ",", "all_adjacencies", ",", "time_passed", ")", ":", "\n", "# computing performance rewards", "\n", "        ", "new_reward", "=", "2.0", "*", "num_sensed", "\n", "new_reward", "+=", "20.0", "*", "num_pruned", "\n", "\n", "im_reward", "=", "new_reward", "-", "self", ".", "old_reward_without_adjacent", "\n", "self", ".", "old_reward_without_adjacent", "=", "new_reward", "\n", "\n", "# computing adjacency rewards for homogeneous communicatiion channel", "\n", "uniques", "=", "list", "(", "range", "(", "0", ",", "len", "(", "self", ".", "agent_state", ")", ")", ")", "\n", "for", "pair", "in", "all_adjacencies", ":", "\n", "            ", "for", "idx", "in", "pair", ":", "\n", "                ", "if", "idx", "in", "uniques", ":", "\n", "                    ", "uniques", ".", "remove", "(", "idx", ")", "\n", "if", "len", "(", "uniques", ")", "==", "0", ":", "\n", "                        ", "break", "\n", "\n", "", "", "", "", "im_reward", "-=", "1.0", "*", "len", "(", "uniques", ")", "\n", "\n", "# computing adjacency rewards for homogeneous communicatiion channel", "\n", "uniques_hetero_cm", "=", "list", "(", "range", "(", "0", ",", "len", "(", "self", ".", "agent_state", ")", ")", ")", "\n", "for", "pair", "in", "all_adjacencies", ":", "\n", "            ", "if", "0", "<=", "pair", "[", "0", "]", "<", "self", ".", "perception_agent_num", ":", "# one way check is OK since heterogeneous communication is symmetric", "\n", "                ", "if", "self", ".", "perception_agent_num", "<=", "pair", "[", "1", "]", "<", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ":", "\n", "                    ", "if", "pair", "[", "0", "]", "in", "uniques_hetero_cm", ":", "\n", "                        ", "uniques_hetero_cm", ".", "remove", "(", "pair", "[", "0", "]", ")", "\n", "", "if", "pair", "[", "1", "]", "in", "uniques_hetero_cm", ":", "\n", "                        ", "uniques_hetero_cm", ".", "remove", "(", "pair", "[", "1", "]", ")", "\n", "", "if", "len", "(", "uniques_hetero_cm", ")", "==", "0", ":", "\n", "                        ", "break", "\n", "\n", "", "", "", "", "im_reward", "-=", "3.0", "*", "len", "(", "uniques_hetero_cm", ")", "\n", "\n", "return", "im_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward2": [[335, 347], ["None"], "methods", ["None"], ["", "def", "get_reward2", "(", "self", ",", "num_firespots", ",", "num_sensed", ",", "num_pruned", ",", "all_adjacencies", ",", "time_passed", ")", ":", "\n", "#new_reward = self.old_reward_without_adjacent", "\n", "#new_reward = -1.0 * time_passed", "\n", "\n", "#im_reward = new_reward - self.old_reward_without_adjacent", "\n", "#self.old_reward_without_adjacent = new_reward", "\n", "        ", "if", "num_firespots", ">", "0", ":", "\n", "            ", "im_reward", "=", "-", "1.0", "\n", "", "else", ":", "\n", "            ", "im_reward", "=", "0.0", "\n", "\n", "", "return", "im_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_reward3": [[349, 361], ["None"], "methods", ["None"], ["", "def", "get_reward3", "(", "self", ",", "num_firespots", ",", "num_sensed", ",", "num_pruned", ",", "all_adjacencies", ",", "time_passed", ")", ":", "\n", "# computing performance rewards", "\n", "# new_reward = 2.0 * num_sensed", "\n", "# new_reward += 20.0 * num_pruned", "\n", "# new_reward = self.old_reward_without_adjacent", "\n", "# new_reward -= 0.1 * num_firespots  # small penalty for each active firespot in the field", "\n", "\n", "# im_reward = new_reward", "\n", "# self.old_reward_without_adjacent = new_reward", "\n", "        ", "im_reward", "=", "-", "0.1", "*", "num_firespots", "\n", "\n", "return", "im_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.state_gen": [[363, 395], ["numpy.zeros", "range", "range", "range", "len", "len", "len", "range", "max", "min", "range", "range", "max", "min", "max", "min", "range", "max", "min"], "methods", ["None"], ["", "def", "state_gen", "(", "self", ")", ":", "\n", "        ", "self", ".", "state", "=", "np", ".", "zeros", "(", "(", "self", ".", "world_size", ",", "self", ".", "world_size", ")", ",", "dtype", "=", "float", ")", "# cleanup the previous states", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "agent_state", ")", ")", ":", "\n", "# Perception Agents", "\n", "            ", "if", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "0", ":", "\n", "# mark the Perception agent scope", "\n", "                ", "for", "i1", "in", "range", "(", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", ")", ",", "\n", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "+", "1", ",", "self", ".", "world_size", ")", ")", ":", "\n", "                    ", "for", "j1", "in", "range", "(", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", ")", ",", "\n", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "+", "1", ",", "self", ".", "world_size", ")", ")", ":", "\n", "                        ", "self", ".", "state", "[", "i1", "]", "[", "j1", "]", "=", "4", "# Perception agent scope index", "\n", "# mark the position of the perception agents", "\n", "", "", "self", ".", "state", "[", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "]", "[", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "]", "=", "3", "# Perception agent location index", "\n", "\n", "# Action Agents", "\n", "", "elif", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "1", ":", "\n", "# mark the Action agent scope", "\n", "                ", "for", "i1", "in", "range", "(", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", ")", ",", "\n", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "+", "1", ",", "self", ".", "world_size", ")", ")", ":", "\n", "                    ", "for", "j1", "in", "range", "(", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", ")", ",", "\n", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "+", "1", ",", "self", ".", "world_size", ")", ")", ":", "\n", "                        ", "self", ".", "state", "[", "i1", "]", "[", "j1", "]", "=", "6", "# Action agent scope index", "\n", "# mark the position of the action agents", "\n", "", "", "self", ".", "state", "[", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "]", "[", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "]", "=", "5", "# Action agent location index", "\n", "# mark the sensed fire fronts", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "sensed_List", ")", ")", ":", "\n", "            ", "self", ".", "state", "[", "self", ".", "sensed_List", "[", "i", "]", "[", "0", "]", "]", "[", "self", ".", "sensed_List", "[", "i", "]", "[", "1", "]", "]", "=", "1", "# sensed firespots index", "\n", "# mark the pruned fire fronts", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "pruned_List", ")", ")", ":", "\n", "            ", "self", ".", "state", "[", "self", ".", "pruned_List", "[", "i", "]", "[", "0", "]", "]", "[", "self", ".", "pruned_List", "[", "i", "]", "[", "1", "]", "]", "=", "2", "# pruned firespots index", "\n", "\n", "", "return", "self", ".", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.get_FOV": [[397, 434], ["len", "range", "max", "max", "min", "min", "FireCommander_Cmplx2.FireCommanderExtreme.state[].copy", "FOV_list.append", "print"], "methods", ["None"], ["", "def", "get_FOV", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Get self.FOV_list\n        If it is empty, then\n            Get sensor image by cropping the self.state map\n                Store as np.array in FOV_list\n        Assume that the first N agents are always P agents\n            N = self.perception_agent_num\n        \"\"\"", "\n", "if", "len", "(", "self", ".", "FOV_list", ")", ">", "0", ":", "\n", "            ", "return", "self", ".", "FOV_list", "\n", "", "else", ":", "\n", "            ", "FOV_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "# Perception Agents", "\n", "                ", "if", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "0", ":", "\n", "#1. crop image", "\n", "                    ", "x", ",", "y", ",", "z", ",", "alt", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "# the upper-left corner of the agent searching scope", "\n", "upper_x", "=", "max", "(", "0", ",", "x", "-", "z", ")", "\n", "upper_y", "=", "max", "(", "0", ",", "y", "-", "z", ")", "\n", "# the lower-right corner of the agent searching scope", "\n", "lower_x", "=", "min", "(", "x", "+", "z", ",", "self", ".", "world_size", "-", "1", ")", "\n", "lower_y", "=", "min", "(", "y", "+", "z", ",", "self", ".", "world_size", "-", "1", ")", "\n", "# crop", "\n", "cropped", "=", "self", ".", "state", "[", "upper_x", ":", "lower_x", "+", "1", ",", "upper_y", ":", "lower_y", "+", "1", "]", ".", "copy", "(", ")", "\n", "\n", "#2. change 2-6 to 0", "\n", "cropped", "[", "cropped", ">=", "2", "]", "=", "0", "\n", "\n", "#3. add to dict", "\n", "FOV_list", ".", "append", "(", "cropped", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "'Idx Error!'", ")", "\n", "\n", "", "", "return", "FOV_list", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.env_visualize": [[437, 473], ["FireCommander_Cmplx2.FireCommanderExtreme.screen.fill", "Agent_Util.sensed_Fire_Spot_Plot", "Agent_Util.pruned_Fire_Spot_Plot", "range", "pygame.display.update", "len", "pygame.draw.circle", "pygame.draw.rect", "Rect", "pygame.draw.polygon", "int", "int"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.sensed_Fire_Spot_Plot", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.pruned_Fire_Spot_Plot"], ["", "", "def", "env_visualize", "(", "self", ")", ":", "\n", "# fill the background screen with green", "\n", "        ", "self", ".", "screen", ".", "fill", "(", "(", "197", ",", "225", ",", "165", ")", ")", "\n", "# Agent_Util.on_Fire_Spot_Plot(self.screen, self.onFire_List)", "\n", "# plot the sensed fire with red dots", "\n", "Agent_Util", ".", "sensed_Fire_Spot_Plot", "(", "self", ".", "screen", ",", "self", ".", "sensed_List", ")", "\n", "Agent_Util", ".", "pruned_Fire_Spot_Plot", "(", "self", ".", "screen", ",", "self", ".", "pruned_List", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "agent_state", ")", ")", ":", "\n", "# Perception Agents", "\n", "            ", "if", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "0", ":", "\n", "# Calculate the size of the FOV scope", "\n", "                ", "searching_Scope_X", "=", "2", "*", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "\n", "searching_Scope_Y", "=", "2", "*", "self", ".", "agent_state", "[", "i", "]", "[", "2", "]", "\n", "\n", "# the coordination of the upper-left corner of the agent searching scope", "\n", "searching_Scope_Upper_Left_Corner", "=", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "searching_Scope_X", "/", "2", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "searching_Scope_Y", "/", "2", ")", "\n", "# the size of the agent searching scope", "\n", "searching_Scope_Size", "=", "(", "searching_Scope_X", ",", "searching_Scope_Y", ")", "\n", "\n", "# Plot the Perception agent (Circle) and its corresponding FOV scope (Rectangle)", "\n", "pygame", ".", "draw", ".", "circle", "(", "self", ".", "screen", ",", "(", "0", ",", "0", ",", "255", ")", ",", "(", "int", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", ")", ")", ",", "2", ")", "\n", "pygame", ".", "draw", ".", "rect", "(", "self", ".", "screen", ",", "(", "0", ",", "0", ",", "255", ")", ",", "Rect", "(", "searching_Scope_Upper_Left_Corner", ",", "searching_Scope_Size", ")", ",", "2", ")", "\n", "\n", "", "elif", "self", ".", "agent_state", "[", "i", "]", "[", "3", "]", "==", "1", ":", "\n", "# the vertex set for the Action agent", "\n", "                ", "firefighter_Agent_Vertex", "=", "[", "\n", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "2", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", ")", ",", "\n", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "2", ")", ",", "\n", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "2", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", ")", ",", "\n", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", ",", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "2", ")", "]", "\n", "# plot the firefighter agent (Diamond)", "\n", "pygame", ".", "draw", ".", "polygon", "(", "self", ".", "screen", ",", "(", "128", ",", "0", ",", "128", ")", ",", "firefighter_Agent_Vertex", ")", "\n", "\n", "# update the display according to the latest change", "\n", "", "", "pygame", ".", "display", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_init": [[475, 556], ["range", "range", "FireCommander_Cmplx2.FireCommanderExtreme.fire_States_List.append", "hotspot_areas.append", "WildFire_Model.WildFire", "FireCommander_Cmplx2.FireCommanderExtreme.fire_mdl.hotspot_init", "FireCommander_Cmplx2.FireCommanderExtreme.ign_points_all.copy", "FireCommander_Cmplx2.FireCommanderExtreme.fire_mdl.geo_phys_info_init", "range", "range", "numpy.array", "FireCommander_Cmplx2.FireCommanderExtreme.new_fire_front_temp.append", "FireCommander_Cmplx2.FireCommanderExtreme.current_geo_phys_info.append", "FireCommander_Cmplx2.FireCommanderExtreme.fire_mdl.append", "FireCommander_Cmplx2.FireCommanderExtreme.ign_points_all.append", "FireCommander_Cmplx2.FireCommanderExtreme.previous_terrain_map.append", "FireCommander_Cmplx2.FireCommanderExtreme.geo_phys_info.append", "range", "WildFire_Model.WildFire", "FireCommander_Cmplx2.FireCommanderExtreme.fire_mdl[].hotspot_init", "FireCommander_Cmplx2.FireCommanderExtreme.fire_mdl[].hotspot_init", "FireCommander_Cmplx2.FireCommanderExtreme.fire_mdl[].geo_phys_info_init", "len", "FireCommander_Cmplx2.FireCommanderExtreme.fire_map.append"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.hotspot_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.geo_phys_info_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.hotspot_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.hotspot_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.WildFire_Model.WildFire.geo_phys_info_init"], ["", "def", "fire_init", "(", "self", ")", ":", "\n", "# Fire region (Color: Red (255, 0, 0))", "\n", "# The wildfire generation and propagation utilizes the FARSITE wildfire mathematical model", "\n", "# To clarify the fire state data, the state of the fire spot at each moment is stored in the dictionary list separately", "\n", "# Besides, the current fire map will also be stored as a matrix with the same size of the simulation model, which", "\n", "# reflects the fire intensity of each position on the world", "\n", "\n", "# create the fire state dictionary list", "\n", "        ", "self", ".", "fire_States_List", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "            ", "self", ".", "fire_States_List", ".", "append", "(", "[", "]", ")", "\n", "# length and width of the terrain as a list [length, width]", "\n", "", "terrain_sizes", "=", "[", "self", ".", "world_size", ",", "self", ".", "world_size", "]", "\n", "hotspot_areas", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "            ", "hotspot_areas", ".", "append", "(", "[", "self", ".", "fire_info", "[", "0", "]", "[", "i", "]", "[", "0", "]", "-", "5", ",", "self", ".", "fire_info", "[", "0", "]", "[", "i", "]", "[", "0", "]", "+", "5", ",", "\n", "self", ".", "fire_info", "[", "0", "]", "[", "i", "]", "[", "1", "]", "-", "5", ",", "self", ".", "fire_info", "[", "0", "]", "[", "i", "]", "[", "1", "]", "+", "5", "]", ")", "\n", "\n", "# checking fire model setting mode and initializing the fire model", "\n", "", "if", "self", ".", "fire_info", "[", "1", "]", "[", "9", "]", "==", "0", ":", "# when using \"uniform\" fire setting (all fire areas use the same parameters)", "\n", "# initial number of fire spots (ignition points) per hotspot area", "\n", "            ", "num_ign_points", "=", "self", ".", "fire_info", "[", "1", "]", "[", "0", "]", "\n", "# fuel coefficient for vegetation type of the terrain (higher fuel_coeff:: more circular shape fire)", "\n", "fuel_coeff", "=", "self", ".", "fire_info", "[", "1", "]", "[", "2", "]", "\n", "# average mid-flame wind velocity (higher values streches the fire more)", "\n", "wind_speed", "=", "self", ".", "fire_info", "[", "1", "]", "[", "3", "]", "\n", "# wind azimuth", "\n", "wind_direction", "=", "np", ".", "pi", "*", "2", "*", "self", ".", "fire_info", "[", "1", "]", "[", "4", "]", "/", "360", "# converting degree to radian", "\n", "\n", "# Init the wildfire model", "\n", "self", ".", "fire_mdl", "=", "WildFire", "(", "terrain_sizes", "=", "terrain_sizes", ",", "hotspot_areas", "=", "hotspot_areas", ",", "num_ign_points", "=", "num_ign_points", ",", "duration", "=", "self", ".", "duration", ",", "\n", "time_step", "=", "1", ",", "radiation_radius", "=", "10", ",", "weak_fire_threshold", "=", "5", ",", "flame_height", "=", "3", ",", "flame_angle", "=", "np", ".", "pi", "/", "3", ")", "\n", "self", ".", "ign_points_all", "=", "self", ".", "fire_mdl", ".", "hotspot_init", "(", ")", "# initializing hotspots", "\n", "self", ".", "fire_map", "=", "self", ".", "ign_points_all", "# initializing fire-map", "\n", "self", ".", "previous_terrain_map", "=", "self", ".", "ign_points_all", ".", "copy", "(", ")", "# initializing the starting terrain map", "\n", "self", ".", "geo_phys_info", "=", "self", ".", "fire_mdl", ".", "geo_phys_info_init", "(", "max_fuel_coeff", "=", "fuel_coeff", ",", "avg_wind_speed", "=", "wind_speed", ",", "\n", "avg_wind_direction", "=", "wind_direction", ")", "# initialize geo-physical info", "\n", "", "else", ":", "# when using \"Specific\" fire setting (each fire area uses its own parameters)", "\n", "            ", "self", ".", "fire_mdl", "=", "[", "]", "\n", "self", ".", "geo_phys_info", "=", "[", "]", "\n", "self", ".", "ign_points_all", "=", "[", "]", "\n", "self", ".", "previous_terrain_map", "=", "[", "]", "\n", "self", ".", "new_fire_front_temp", "=", "[", "]", "\n", "self", ".", "current_geo_phys_info", "=", "[", "]", "\n", "# initialize fire areas separately", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "self", ".", "new_fire_front_temp", ".", "append", "(", "[", "]", ")", "\n", "self", ".", "current_geo_phys_info", ".", "append", "(", "[", "]", ")", "\n", "# initial number of fire spots (ignition points) per hotspot area", "\n", "num_ign_points", "=", "self", ".", "fire_info", "[", "1", "]", "[", "0", "]", "[", "i", "]", "\n", "# fuel coefficient for vegetation type of the terrain (higher fuel_coeff:: more circular shape fire)", "\n", "fuel_coeff", "=", "self", ".", "fire_info", "[", "1", "]", "[", "2", "]", "[", "i", "]", "\n", "# average mid-flame wind velocity (higher values streches the fire more)", "\n", "wind_speed", "=", "self", ".", "fire_info", "[", "1", "]", "[", "3", "]", "[", "i", "]", "\n", "# wind azimuth", "\n", "wind_direction", "=", "np", ".", "pi", "*", "2", "*", "self", ".", "fire_info", "[", "1", "]", "[", "4", "]", "[", "i", "]", "/", "360", "# converting degree to radian", "\n", "\n", "# init the wildfire model", "\n", "self", ".", "fire_mdl", ".", "append", "(", "WildFire", "(", "\n", "terrain_sizes", "=", "terrain_sizes", ",", "hotspot_areas", "=", "[", "hotspot_areas", "[", "i", "]", "]", ",", "num_ign_points", "=", "num_ign_points", ",", "duration", "=", "self", ".", "duration", ",", "time_step", "=", "1", ",", "\n", "radiation_radius", "=", "10", ",", "weak_fire_threshold", "=", "5", ",", "flame_height", "=", "3", ",", "flame_angle", "=", "np", ".", "pi", "/", "3", ")", ")", "\n", "self", ".", "ign_points_all", ".", "append", "(", "self", ".", "fire_mdl", "[", "i", "]", ".", "hotspot_init", "(", ")", ")", "# initializing hotspots", "\n", "self", ".", "previous_terrain_map", ".", "append", "(", "self", ".", "fire_mdl", "[", "i", "]", ".", "hotspot_init", "(", ")", ")", "# initializing the starting terrain map", "\n", "self", ".", "geo_phys_info", ".", "append", "(", "self", ".", "fire_mdl", "[", "i", "]", ".", "geo_phys_info_init", "(", "max_fuel_coeff", "=", "fuel_coeff", ",", "avg_wind_speed", "=", "wind_speed", ",", "\n", "avg_wind_direction", "=", "wind_direction", ")", ")", "# initialize geo-physical info", "\n", "# initializing the fire-map", "\n", "", "self", ".", "fire_map", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "ign_points_all", "[", "i", "]", ")", ")", ":", "\n", "                    ", "self", ".", "fire_map", ".", "append", "(", "self", ".", "ign_points_all", "[", "i", "]", "[", "j", "]", ")", "\n", "", "", "self", ".", "fire_map", "=", "np", ".", "array", "(", "self", ".", "fire_map", ")", "\n", "self", ".", "fire_map_spec", "=", "self", ".", "ign_points_all", "\n", "\n", "# the lists to store the firespots in different state, coordinates only", "\n", "", "self", ".", "onFire_List", "=", "[", "]", "# the onFire_List, store the points currently on fire (sensed points included, pruned points excluded)", "\n", "self", ".", "sensed_List", "=", "[", "]", "# the sensed_List, store the points currently on fire and have been sensed by agents", "\n", "self", ".", "pruned_List", "=", "[", "]", "# the pruned_List, store the pruned fire spots", "\n", "\n", "# keeping track of agents' contributions (e.g. number of sensed/pruned firespot by each Perception/Action agent)", "\n", "self", ".", "sensed_contribution", "=", "[", "0", "]", "*", "self", ".", "perception_agent_num", "\n", "self", ".", "pruned_contribution", "=", "[", "0", "]", "*", "self", ".", "action_agent_num", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_propagation": [[558, 607], ["Agent_Util.fire_Data_Storage", "FireCommander_Cmplx2.FireCommanderExtreme.fire_mdl.fire_propagation", "range", "range", "numpy.array", "range", "numpy.concatenate", "range", "FireCommander_Cmplx2.FireCommanderExtreme.fire_mdl[].fire_propagation", "range", "numpy.concatenate", "ign_points_all_temp.append", "numpy.concatenate", "len", "FireCommander_Cmplx2.FireCommanderExtreme.new_fire_front.append", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Data_Storage", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_propagation", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.fire_propagation"], ["", "def", "fire_propagation", "(", "self", ")", ":", "\n", "# checking fire model setting mode and initializing the fire model", "\n", "        ", "if", "self", ".", "fire_info", "[", "1", "]", "[", "9", "]", "==", "0", ":", "# when using \"uniform\" fire setting (all fire areas use the same parameters)", "\n", "            ", "self", ".", "new_fire_front", ",", "current_geo_phys_info", "=", "self", ".", "fire_mdl", ".", "fire_propagation", "(", "self", ".", "world_size", ",", "ign_points_all", "=", "self", ".", "ign_points_all", ",", "geo_phys_info", "=", "self", ".", "geo_phys_info", ",", "\n", "previous_terrain_map", "=", "self", ".", "previous_terrain_map", ",", "pruned_List", "=", "self", ".", "pruned_List", ")", "\n", "updated_terrain_map", "=", "self", ".", "previous_terrain_map", "\n", "", "else", ":", "# when using \"Specific\" fire setting (each fire area uses its own parameters)", "\n", "            ", "updated_terrain_map", "=", "self", ".", "previous_terrain_map", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "self", ".", "new_fire_front_temp", "[", "i", "]", ",", "self", ".", "current_geo_phys_info", "[", "i", "]", "=", "self", ".", "fire_mdl", "[", "i", "]", ".", "fire_propagation", "(", "self", ".", "world_size", ",", "ign_points_all", "=", "self", ".", "ign_points_all", "[", "i", "]", ",", "geo_phys_info", "=", "self", ".", "geo_phys_info", "[", "i", "]", ",", "\n", "previous_terrain_map", "=", "self", ".", "previous_terrain_map", "[", "i", "]", ",", "pruned_List", "=", "self", ".", "pruned_List", ")", "\n", "\n", "# update the new firefront list by combining all region-wise firefronts", "\n", "", "self", ".", "new_fire_front", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "len", "(", "self", ".", "new_fire_front_temp", "[", "i", "]", ")", ")", ":", "\n", "                    ", "self", ".", "new_fire_front", ".", "append", "(", "self", ".", "new_fire_front_temp", "[", "i", "]", "[", "j", "]", ")", "\n", "", "", "self", ".", "new_fire_front", "=", "np", ".", "array", "(", "self", ".", "new_fire_front", ")", "\n", "\n", "# update the region-wise fire map", "\n", "", "if", "self", ".", "fire_info", "[", "1", "]", "[", "9", "]", "==", "1", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "self", ".", "fire_map_spec", "[", "i", "]", "=", "np", ".", "concatenate", "(", "[", "self", ".", "fire_map_spec", "[", "i", "]", ",", "self", ".", "new_fire_front_temp", "[", "i", "]", "]", ",", "axis", "=", "0", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "fire_map_spec", "=", "self", ".", "fire_map", "\n", "\n", "# process the fire spot information and generate the onFire and targer onfire list", "\n", "", "self", ".", "onFire_List", ",", "self", ".", "target_onFire_list", "=", "Agent_Util", ".", "fire_Data_Storage", "(", "\n", "self", ".", "new_fire_front", ",", "self", ".", "world_size", ",", "self", ".", "onFire_List", ",", "self", ".", "pruned_List", ",", "self", ".", "target_onFire_list", ",", "self", ".", "target_info", ")", "\n", "\n", "# updating the fire-map data for next step", "\n", "if", "self", ".", "new_fire_front", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "self", ".", "fire_map", "=", "np", ".", "concatenate", "(", "[", "self", ".", "fire_map", ",", "self", ".", "new_fire_front", "]", ",", "axis", "=", "0", ")", "# raw fire map without fire decay", "\n", "\n", "# update the fire propagation information", "\n", "", "if", "self", ".", "fire_info", "[", "1", "]", "[", "9", "]", "==", "1", ":", "\n", "            ", "ign_points_all_temp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "fireAreas_Num", ")", ":", "\n", "                ", "if", "self", ".", "new_fire_front_temp", "[", "i", "]", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "# fire map with fire decay", "\n", "                    ", "self", ".", "previous_terrain_map", "[", "i", "]", "=", "np", ".", "concatenate", "(", "(", "updated_terrain_map", "[", "i", "]", ",", "self", ".", "new_fire_front_temp", "[", "i", "]", ")", ",", "axis", "=", "0", ")", "\n", "", "ign_points_all_temp", ".", "append", "(", "self", ".", "new_fire_front_temp", "[", "i", "]", ")", "\n", "", "self", ".", "ign_points_all", "=", "ign_points_all_temp", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "new_fire_front", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "                ", "self", ".", "previous_terrain_map", "=", "np", ".", "concatenate", "(", "(", "updated_terrain_map", ",", "self", ".", "new_fire_front", ")", ")", "# fire map with fire decay", "\n", "self", ".", "ign_points_all", "=", "self", ".", "new_fire_front", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.env_close": [[609, 612], ["pygame.quit"], "methods", ["None"], ["", "", "", "@", "staticmethod", "\n", "def", "env_close", "(", ")", ":", "\n", "        ", "pygame", ".", "quit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.env_init_stack": [[615, 626], ["FireCommander_Cmplx2.FireCommanderExtreme.env_init", "range", "numpy.random.randint", "numpy.random.randint", "FireCommander_Cmplx2.FireCommanderExtreme.env_step", "list", "list"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.env_init", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.env_step"], ["", "def", "env_init_stack", "(", "self", ",", "planar_vel", ",", "vert_vel", ",", "min_alt", ",", "max_alt", ")", ":", "\n", "        ", "self", ".", "env_init", "(", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "stack_num", ")", ":", "\n", "            ", "action_p", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "6", ",", "2", ")", "# Perception agent action generator, using randint now", "\n", "action_a", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "4", ",", "2", ")", "# Action agent action generator, using randint now", "\n", "\n", "actions", "=", "list", "(", "action_p", ")", "+", "list", "(", "action_a", ")", "\n", "\n", "state", ",", "reward", ",", "done", ",", "perception_complete", ",", "action_complete", "=", "self", ".", "env_step", "(", "actions", ",", "planar_vel", ",", "vert_vel", ",", "min_alt", ",", "max_alt", ")", "# step forward", "\n", "\n", "", "return", "self", ".", "frame", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx2.FireCommanderExtreme.env_replay_store": [[628, 633], ["FireCommander_Cmplx2.FireCommanderExtreme.agent_state_buffer.append", "FireCommander_Cmplx2.FireCommanderExtreme.sensed_List_Buffer.append", "FireCommander_Cmplx2.FireCommanderExtreme.pruned_List_Buffer.append", "FireCommander_Cmplx2.FireCommanderExtreme.reward_buffer.append"], "methods", ["None"], ["", "def", "env_replay_store", "(", "self", ")", ":", "\n", "        ", "self", ".", "agent_state_buffer", ".", "append", "(", "self", ".", "agent_state", ")", "# agent State", "\n", "self", ".", "sensed_List_Buffer", ".", "append", "(", "self", ".", "sensed_List", ")", "# sensing List Buffer", "\n", "self", ".", "pruned_List_Buffer", ".", "append", "(", "self", ".", "pruned_List", ")", "# pruning List Buffer", "\n", "self", ".", "reward_buffer", ".", "append", "(", "self", ".", "reward", ")", "# Reward variations", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.target_Plot": [[36, 49], ["range", "len", "range", "len", "pygame.draw.rect", "Rect", "pygame.draw.rect", "Rect"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "target_Plot", "(", "screen", ",", "target_info", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "target_info", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "target_info", "[", "i", "]", ")", ")", ":", "\n", "# The coordination of the upper-left corner of target", "\n", "                ", "target_Upper_Left_Corner", "=", "(", "target_info", "[", "i", "]", "[", "j", "]", "[", "0", "]", "-", "5", ",", "target_info", "[", "i", "]", "[", "j", "]", "[", "1", "]", "-", "5", ")", "\n", "target_Size", "=", "(", "10", ",", "10", ")", "\n", "# Plot the normaltarget, fill the rectangle with orange", "\n", "if", "target_info", "[", "i", "]", "[", "j", "]", "[", "2", "]", "==", "0", ":", "\n", "                    ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "165", ",", "0", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ")", "\n", "\n", "", "elif", "target_info", "[", "i", "]", "[", "j", "]", "[", "2", "]", "==", "1", ":", "\n", "                    ", "pygame", ".", "draw", ".", "rect", "(", "screen", ",", "(", "255", ",", "255", ",", "255", ")", ",", "Rect", "(", "target_Upper_Left_Corner", ",", "target_Size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Data_Storage": [[55, 77], ["range", "int", "int", "int", "int", "onFire_List.append", "range", "len", "range", "int", "int", "int", "int", "int", "int", "len", "int", "int", "int", "int"], "methods", ["None"], ["", "", "", "", "@", "staticmethod", "\n", "def", "fire_Data_Storage", "(", "new_fire_front", ",", "world_Size", ",", "onFire_List", ",", "pruned_List", ",", "target_onFire_list", ",", "target_info", ")", ":", "\n", "        ", "if", "new_fire_front", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "# Write the fire spot into the current world map list", "\n", "            ", "for", "i", "in", "range", "(", "new_fire_front", ".", "shape", "[", "0", "]", ")", ":", "\n", "# # Ensure that all the fire spots to be displayed must be within the window scope", "\n", "                ", "if", "(", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", "<=", "(", "world_Size", "-", "1", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "<=", "(", "world_Size", "-", "1", ")", ")", "\n", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ">=", "0", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", ">=", "0", ")", ")", ":", "\n", "\n", "# If the new fire front points is not included in the current onFire_List, add it into the list", "\n", "                    ", "if", "(", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", "not", "in", "onFire_List", ")", "and", "(", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", "not", "in", "pruned_List", ")", ":", "\n", "                        ", "onFire_List", ".", "append", "(", "[", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "\n", "# Determine whether the new fire fronts locate inside the target region", "\n", "for", "i1", "in", "range", "(", "len", "(", "target_onFire_list", ")", ")", ":", "\n", "                            ", "for", "j1", "in", "range", "(", "len", "(", "target_onFire_list", "[", "i1", "]", ")", ")", ":", "\n", "                                ", "if", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "-", "5", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "0", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "+", "5", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "-", "5", ")", ")", "and", "(", "int", "(", "new_fire_front", "[", "i", "]", "[", "1", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "+", "5", ")", ")", ":", "\n", "                                    ", "target_onFire_list", "[", "i1", "]", "[", "j1", "]", "+=", "1", "\n", "\n", "", "", "", "", "", "", "", "return", "onFire_List", ",", "target_onFire_list", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents": [[79, 106], ["len", "len", "ValueError", "len", "len", "ValueError", "abs", "abs", "abs", "abs", "abs"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "adjacent_agents", "(", "agent1_pose", ",", "agent2_pose", ",", "hop_num", "=", "1", ")", ":", "\n", "        ", "\"\"\"\n        determining the neighboring agents (discrete) and returning the indexes of neighbors at each time step\n\n        :param agent1_pose: first agents position\n        :param agent2_pose: second agents position\n        :param hop_num: number of hops (discrete) for communication range (default:: 1-hop)\n        :return: binary flag\n        \"\"\"", "\n", "\n", "if", "len", "(", "agent1_pose", ")", "!=", "len", "(", "agent2_pose", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Agent coordinates must be in same dimensions (either 2D or 3D).\"", ")", "\n", "\n", "", "adjacent_agents", "=", "False", "\n", "if", "len", "(", "agent1_pose", ")", "==", "2", ":", "\n", "            ", "x1", ",", "x2", ",", "y1", ",", "y2", "=", "agent1_pose", "[", "0", "]", ",", "agent2_pose", "[", "0", "]", ",", "agent1_pose", "[", "1", "]", ",", "agent2_pose", "[", "1", "]", "\n", "if", "(", "abs", "(", "x1", "-", "x2", ")", "<=", "hop_num", ")", "and", "(", "abs", "(", "y1", "-", "y2", ")", "<=", "hop_num", ")", ":", "\n", "                ", "adjacent_agents", "=", "True", "\n", "", "", "elif", "len", "(", "agent1_pose", ")", "==", "3", ":", "\n", "            ", "x1", ",", "x2", ",", "y1", ",", "y2", ",", "z1", ",", "z2", "=", "agent1_pose", "[", "0", "]", ",", "agent2_pose", "[", "0", "]", ",", "agent1_pose", "[", "1", "]", ",", "agent2_pose", "[", "1", "]", ",", "agent1_pose", "[", "2", "]", ",", "agent2_pose", "[", "2", "]", "\n", "if", "(", "abs", "(", "x1", "-", "x2", ")", "<=", "hop_num", ")", "and", "(", "abs", "(", "y1", "-", "y2", ")", "<=", "hop_num", ")", "and", "(", "abs", "(", "z1", "-", "z2", ")", "<=", "hop_num", ")", ":", "\n", "                ", "adjacent_agents", "=", "True", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Agent coordinates must be in either 2D or 3D.\"", ")", "\n", "\n", "", "return", "adjacent_agents", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Sensing": [[111, 182], ["numpy.array", "numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "numpy.random.choice", "max", "max", "min", "min", "numpy.zeros", "range", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "int", "len", "len", "numpy.zeros", "raw_sensed_list[].astype", "raw_sensed_list[].astype", "numpy.unique", "np.unique.copy().tolist.copy", "max", "max", "min", "min", "numpy.zeros", "round", "len", "list().copy", "numpy.unique().tolist", "numpy.unique.copy().tolist", "min", "max", "min", "max", "len", "len", "list", "numpy.unique", "numpy.unique.copy", "numpy.array"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "fire_Sensing", "(", "onFire_List", ",", "agent_loci", ",", "sensed_List", ",", "world_size", ")", ":", "\n", "# Input: fire_Map, current agent state, the agent's FOV, geometric_physics info, sensed_List, window size", "\n", "# Output: fire sensed map (for agent status recording), CoM info, the list of the coordinates of the sensed points", "\n", "\n", "        ", "confidence_level", "=", "1", "-", "3", "/", "50", "*", "(", "agent_loci", "[", "2", "]", "-", "10", ")", "# the sensing confidence level (highest when altitude=minimu_allowed and vice versa)", "\n", "\n", "onFire_List", "=", "np", ".", "array", "(", "onFire_List", ")", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "(", "tl_x", ",", "tl_y", ")", "=", "(", "agent_loci", "[", "0", "]", "-", "agent_loci", "[", "2", "]", ",", "agent_loci", "[", "1", "]", "-", "agent_loci", "[", "2", "]", ")", "\n", "\n", "# The coordination of the lower-right corner of the agent searching scope", "\n", "(", "br_x", ",", "br_y", ")", "=", "(", "agent_loci", "[", "0", "]", "+", "agent_loci", "[", "2", "]", ",", "agent_loci", "[", "1", "]", "+", "agent_loci", "[", "2", "]", ")", "\n", "\n", "# Search for the current fire map, determine whether the given fire spot locates within the searching scope", "\n", "if", "onFire_List", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "0", "]", "<=", "min", "(", "br_x", ",", "world_size", "-", "1", ")", ")", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "0", "]", ">=", "max", "(", "tl_x", ",", "0", ")", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "1", "]", "<=", "min", "(", "br_y", ",", "world_size", "-", "1", ")", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "1", "]", ">=", "max", "(", "tl_y", ",", "0", ")", ")", ")", "\n", "# Apply the stochastic perception", "\n", "raw_sensed_idx", "=", "np", ".", "random", ".", "choice", "(", "raw_sensed_idx", ",", "int", "(", "round", "(", "confidence_level", "*", "len", "(", "raw_sensed_idx", ")", ")", ")", ",", "replace", "=", "False", ")", "\n", "\n", "'''\n            Newly added: get the FOV of this agent\n            '''", "\n", "upper_x", "=", "max", "(", "0", ",", "tl_x", ")", "\n", "upper_y", "=", "max", "(", "0", ",", "tl_y", ")", "\n", "\n", "lower_x", "=", "min", "(", "br_x", ",", "world_size", "-", "1", ")", "\n", "lower_y", "=", "min", "(", "br_y", ",", "world_size", "-", "1", ")", "\n", "\n", "size_x", "=", "lower_x", "-", "upper_x", "+", "1", "\n", "size_y", "=", "lower_y", "-", "upper_y", "+", "1", "\n", "\n", "FOV", "=", "np", ".", "zeros", "(", "(", "size_x", ",", "size_y", ")", ",", "dtype", "=", "float", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "raw_sensed_idx", ")", ")", ":", "\n", "                ", "tmp_x", ",", "tmp_y", "=", "onFire_List", "[", "raw_sensed_idx", "[", "i", "]", "]", "\n", "FOV", "[", "tmp_x", "-", "upper_x", ",", "tmp_y", "-", "upper_y", "]", "=", "1", "\n", "\n", "# Remove the duplicate fire fronts", "\n", "", "raw_sensed_list", "=", "onFire_List", "[", "raw_sensed_idx", ",", ":", "]", "\n", "if", "len", "(", "raw_sensed_list", "[", ":", ",", "0", "]", ")", ">", "0", ":", "\n", "                ", "int_sensed_list", "=", "np", ".", "zeros", "(", "(", "len", "(", "raw_sensed_list", "[", ":", ",", "0", "]", ")", ",", "2", ")", ",", "dtype", "=", "int", ")", "\n", "int_sensed_list", "[", ":", ",", "0", "]", "=", "raw_sensed_list", "[", ":", ",", "0", "]", ".", "astype", "(", "int", ")", "\n", "int_sensed_list", "[", ":", ",", "1", "]", "=", "raw_sensed_list", "[", ":", ",", "1", "]", ".", "astype", "(", "int", ")", "\n", "uni_int_sensed_list", "=", "np", ".", "unique", "(", "int_sensed_list", ",", "axis", "=", "0", ")", "\n", "\n", "sensed_List_copy", "=", "sensed_List", ".", "copy", "(", ")", "\n", "if", "len", "(", "sensed_List_copy", ")", ">", "0", ":", "\n", "                    ", "sensed_List_copy", "[", "0", ":", "0", "]", "=", "list", "(", "uni_int_sensed_list", ")", ".", "copy", "(", ")", "\n", "sensed_List", "=", "np", ".", "unique", "(", "np", ".", "array", "(", "sensed_List_copy", ")", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "                    ", "sensed_List", "=", "uni_int_sensed_list", ".", "copy", "(", ")", ".", "tolist", "(", ")", "\n", "", "", "", "elif", "onFire_List", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "            ", "'''\n            Newly added: get the FOV of this agent\n            '''", "\n", "upper_x", "=", "max", "(", "0", ",", "tl_x", ")", "\n", "upper_y", "=", "max", "(", "0", ",", "tl_y", ")", "\n", "\n", "lower_x", "=", "min", "(", "br_x", ",", "world_size", "-", "1", ")", "\n", "lower_y", "=", "min", "(", "br_y", ",", "world_size", "-", "1", ")", "\n", "\n", "size_x", "=", "lower_x", "-", "upper_x", "+", "1", "\n", "size_y", "=", "lower_y", "-", "upper_y", "+", "1", "\n", "\n", "FOV", "=", "np", ".", "zeros", "(", "(", "size_x", ",", "size_y", ")", ",", "dtype", "=", "float", ")", "\n", "\n", "", "return", "sensed_List", ",", "FOV", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.fire_Pruning": [[186, 247], ["numpy.array", "numpy.intersect1d", "numpy.intersect1d", "numpy.intersect1d", "numpy.random.choice", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "int", "len", "temp_list.copy", "numpy.unique", "sensed_List.copy", "round", "len", "list().copy", "range", "min", "max", "min", "max", "len", "len", "len", "list", "numpy.unique().tolist", "len", "len", "onFire_List_raw.remove", "range", "pruned_List.append", "sensed_List.remove", "len", "range", "numpy.unique", "int", "int", "int", "int", "int", "int", "int", "int", "len", "int", "int", "numpy.array", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "fire_Pruning", "(", "agent_loci", ",", "onFire_List_raw", ",", "sensed_List", ",", "pruned_List", ",", "\n", "new_fire_front", ",", "target_onFire_list", ",", "target_info", ",", "world_size", ",", "confidence_level", ")", ":", "\n", "# Input: fire_Map, current agent state, the agent's FOV, onFire_List, sensed_List, pruned_List, new fire front list", "\n", "# Output: fire_Pruned_Map (for agent status recording), the updated fire_map, onFire_List, sensed_List, pruned_List", "\n", "\n", "# The coordination of the upper-left corner of the agent searching scope", "\n", "        ", "(", "tl_x", ",", "tl_y", ")", "=", "(", "agent_loci", "[", "0", "]", "-", "agent_loci", "[", "2", "]", ",", "agent_loci", "[", "1", "]", "-", "agent_loci", "[", "2", "]", ")", "\n", "\n", "# The coordination of the lower-right corner of the agent searching scope", "\n", "(", "br_x", ",", "br_y", ")", "=", "(", "agent_loci", "[", "0", "]", "+", "agent_loci", "[", "2", "]", ",", "agent_loci", "[", "1", "]", "+", "agent_loci", "[", "2", "]", ")", "\n", "\n", "onFire_List", "=", "np", ".", "array", "(", "onFire_List_raw", ")", "\n", "\n", "# sensed list flag, if there is any points that is included in the sensed list, this flag will become 1", "\n", "sensed_flag", "=", "0", "\n", "\n", "# Search for the current fire map, determine whether the given fire spot locates within the searching scope", "\n", "if", "onFire_List", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "            ", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "0", "]", "<=", "min", "(", "br_x", ",", "world_size", "-", "1", ")", ")", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "0", "]", ">=", "max", "(", "tl_x", ",", "0", ")", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "1", "]", "<=", "min", "(", "br_y", ",", "world_size", "-", "1", ")", ")", ")", "\n", "raw_sensed_idx", "=", "np", ".", "intersect1d", "(", "raw_sensed_idx", ",", "np", ".", "argwhere", "(", "onFire_List", "[", ":", ",", "1", "]", ">=", "max", "(", "tl_y", ",", "0", ")", ")", ")", "\n", "# Apply the stochastic pruning", "\n", "raw_sensed_idx", "=", "np", ".", "random", ".", "choice", "(", "raw_sensed_idx", ",", "int", "(", "round", "(", "confidence_level", "*", "len", "(", "raw_sensed_idx", ")", ")", ")", ",", "\n", "replace", "=", "False", ")", "\n", "# Temporary list to store the fire front that may be pruned", "\n", "temp_list", "=", "onFire_List", "[", "raw_sensed_idx", ",", ":", "]", "\n", "if", "len", "(", "temp_list", ")", ">", "0", ":", "\n", "                ", "int_pruned_list", "=", "temp_list", ".", "copy", "(", ")", "\n", "uni_int_pruned_list", "=", "np", ".", "unique", "(", "int_pruned_list", ",", "axis", "=", "0", ")", "\n", "\n", "# Determine whether there's any sensed points within the scope", "\n", "sensed_List_copy", "=", "sensed_List", ".", "copy", "(", ")", "\n", "\n", "if", "len", "(", "sensed_List_copy", ")", ">", "0", ":", "\n", "                    ", "sensed_List_copy", "[", "0", ":", "0", "]", "=", "list", "(", "uni_int_pruned_list", ")", ".", "copy", "(", ")", "\n", "if", "len", "(", "np", ".", "unique", "(", "np", ".", "array", "(", "sensed_List_copy", ")", ",", "axis", "=", "0", ")", ".", "tolist", "(", ")", ")", "<", "(", "len", "(", "sensed_List", ")", "+", "len", "(", "uni_int_pruned_list", ")", ")", ":", "\n", "                        ", "sensed_flag", "=", "1", "\n", "\n", "# The pruning agent could only put out fire region that contains the sensed fire fronts", "\n", "", "", "if", "sensed_flag", "==", "1", ":", "\n", "                    ", "for", "i", "in", "range", "(", "len", "(", "temp_list", ")", ")", ":", "\n", "# If the new fire front points is not included in the current onFire_List, add it into the list", "\n", "                        ", "if", "(", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", "not", "in", "pruned_List", ")", "and", "\n", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", "in", "onFire_List", ")", ")", ":", "\n", "                            ", "onFire_List_raw", ".", "remove", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "if", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", "in", "sensed_List", ")", ":", "\n", "                                ", "sensed_List", ".", "remove", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "\n", "# Determine whether the new fire fronts locate inside the target region", "\n", "", "for", "i1", "in", "range", "(", "len", "(", "target_onFire_list", ")", ")", ":", "\n", "                                ", "for", "j1", "in", "range", "(", "len", "(", "target_onFire_list", "[", "i1", "]", ")", ")", ":", "\n", "                                    ", "if", "(", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "-", "5", ")", ")", "and", "(", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "0", "]", "+", "5", ")", ")", "and", "(", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", ">", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "-", "5", ")", ")", "and", "(", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "<", "(", "target_info", "[", "i1", "]", "[", "j1", "]", "[", "1", "]", "+", "5", ")", ")", ":", "\n", "                                        ", "target_onFire_list", "[", "i1", "]", "[", "j1", "]", "-=", "1", "\n", "\n", "", "", "", "pruned_List", ".", "append", "(", "[", "int", "(", "temp_list", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "temp_list", "[", "i", "]", "[", "1", "]", ")", "]", ")", "\n", "# elif onFire_List.shape[0] == 0:", "\n", "#     print('>>> Same bug, second function but I am ignoring it...')", "\n", "\n", "", "", "", "", "", "return", "onFire_List_raw", ",", "sensed_List", ",", "pruned_List", ",", "new_fire_front", ",", "target_onFire_list", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.sensed_Fire_Spot_Plot": [[250, 256], ["range", "len", "pygame.draw.circle", "int", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "sensed_Fire_Spot_Plot", "(", "screen", ",", "sensed_List", ")", ":", "\n", "# Search for all the sensing agents' data", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "sensed_List", ")", ")", ":", "\n", "# Plot the fire spot using the red color the corresponds to the intensity", "\n", "            ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "255", ",", "0", ",", "0", ")", ",", "(", "int", "(", "sensed_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "sensed_List", "[", "i", "]", "[", "1", "]", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.pruned_Fire_Spot_Plot": [[259, 265], ["range", "len", "pygame.draw.circle", "int", "int"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "pruned_Fire_Spot_Plot", "(", "screen", ",", "pruned_List", ")", ":", "\n", "# Search for all the sensing agents' data", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "pruned_List", ")", ")", ":", "\n", "# Plot the fire spot using the red color the corresponds to the intensity", "\n", "            ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "0", ",", "0", ")", ",", "(", "int", "(", "pruned_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "pruned_List", "[", "i", "]", "[", "1", "]", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.on_Fire_Spot_Plot": [[268, 274], ["range", "len", "pygame.draw.circle", "int", "int"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "on_Fire_Spot_Plot", "(", "screen", ",", "sensed_List", ")", ":", "\n", "# Search for all the sensing agents' data", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "sensed_List", ")", ")", ":", "\n", "# Plot the fire spot using the red color the corresponds to the intensity", "\n", "            ", "pygame", ".", "draw", ".", "circle", "(", "screen", ",", "(", "0", ",", "255", ",", "255", ")", ",", "(", "int", "(", "sensed_List", "[", "i", "]", "[", "0", "]", ")", ",", "int", "(", "sensed_List", "[", "i", "]", "[", "1", "]", ")", ")", ",", "1", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.__init__": [[27, 42], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "world_size", "=", "None", ",", "duration", "=", "None", ",", "fireSpots_Num", "=", "None", ",", "P_agent_num", "=", "None", ",", "A_agent_num", "=", "None", ",", "vision", "=", "None", ",", "\n", "rnd_seed", "=", "None", ",", "center_init", "=", "None", ",", "stationary_fire", "=", "None", ",", "local_reward_ratio", "=", "None", ",", "termination_rewrad", "=", "None", ")", ":", "\n", "\n", "# pars parameters", "\n", "        ", "self", ".", "center_init", "=", "False", "if", "center_init", "is", "None", "else", "center_init", "# flag if you want to initialize agents in center (rnd init if NOT)", "\n", "self", ".", "stationary_fire", "=", "False", "if", "stationary_fire", "is", "None", "else", "stationary_fire", "# stationary fire loci during training", "\n", "self", ".", "rnd_seed", "=", "1", "if", "rnd_seed", "is", "None", "else", "rnd_seed", "# initialize random seed", "\n", "self", ".", "vision", "=", "1", "if", "vision", "is", "None", "else", "vision", "# visible hops around each agent", "\n", "self", ".", "world_size", "=", "10", "if", "world_size", "is", "None", "else", "world_size", "# world size", "\n", "self", ".", "duration", "=", "100", "if", "duration", "is", "None", "else", "duration", "# numbr of steps per game", "\n", "self", ".", "local_reward_ratio", "=", "0.5", "if", "local_reward_ratio", "is", "None", "else", "local_reward_ratio", "# the local reward ration", "\n", "self", ".", "termination_rewrad", "=", "False", "if", "termination_rewrad", "is", "None", "else", "termination_rewrad", "# termination reward flag", "\n", "self", ".", "fireSpots_Num", "=", "5", "if", "fireSpots_Num", "is", "None", "else", "fireSpots_Num", "# number of firespots", "\n", "self", ".", "perception_agent_num", "=", "2", "if", "P_agent_num", "is", "None", "else", "P_agent_num", "# number of perception agents", "\n", "self", ".", "action_agent_num", "=", "2", "if", "A_agent_num", "is", "None", "else", "A_agent_num", "# number of action agents", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.env_init": [[44, 106], ["numpy.array", "numpy.array", "numpy.zeros", "FireCommander_Base.FireCommanderEasy.state_matrix_update", "FireCommander_Base.FireCommanderEasy.get_adjacency_matrices", "numpy.random.choice", "numpy.array", "range", "range", "numpy.random.choice", "range", "range", "numpy.arange", "FireCommander_Base.FireCommanderEasy.agent_state.append", "FireCommander_Base.FireCommanderEasy.agent_state.append", "numpy.arange", "FireCommander_Base.FireCommanderEasy.agent_state.append", "FireCommander_Base.FireCommanderEasy.agent_state.append", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.state_matrix_update", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_adjacency_matrices"], ["", "def", "env_init", "(", "self", ",", "comm_range", "=", "None", ",", "water_dump_action", "=", "None", ",", "no_op_action", "=", "None", ",", "feat_dim", "=", "None", ")", ":", "\n", "# initialize random seed", "\n", "# np.random.seed(self.rnd_seed)", "\n", "\n", "# initialize some required variables", "\n", "        ", "self", ".", "comm_hop", "=", "5", "if", "comm_range", "is", "None", "else", "comm_range", "# number of hops for discrete communication range:: default=5", "\n", "self", ".", "water_dump_action", "=", "True", "if", "water_dump_action", "is", "None", "else", "water_dump_action", "# flag if the water dumping is an action or not", "\n", "self", ".", "no_op_action", "=", "[", "False", ",", "False", "]", "if", "no_op_action", "is", "None", "else", "no_op_action", "# flag if no-op is going to be an action", "\n", "self", ".", "done", "=", "False", "# initialize the END flag", "\n", "self", ".", "outcom_flg", "=", "False", "# initialize the outcom seccess flag", "\n", "self", ".", "FOV_list", "=", "[", "]", "# FOV buffer", "\n", "self", ".", "sensed_list", "=", "np", ".", "array", "(", "[", "]", ")", "# the sensed list, store the points currently on fire and have been sensed by agents", "\n", "self", ".", "pruned_list", "=", "np", ".", "array", "(", "[", "]", ")", "# the pruned list, store the pruned fire spots", "\n", "self", ".", "sensed_contribution", "=", "[", "0", "]", "*", "self", ".", "perception_agent_num", "# keeping track of P agents' contributions", "\n", "self", ".", "pruned_contribution", "=", "[", "0", "]", "*", "self", ".", "action_agent_num", "# keeping track of A agents' contributions", "\n", "self", ".", "feat_dim", "=", "4", "+", "(", "2", "*", "self", ".", "perception_agent_num", ")", "+", "self", ".", "action_agent_num", "if", "feat_dim", "is", "None", "else", "feat_dim", "\n", "\n", "# initialize the state matrix", "\n", "# state matrix - contents are as follow:", "\n", "# Dim (0):: fire_map [0 -> not_on_fire, 1 -> onFire_notFound, 2 -> onFire_found, 3 -> pruned]", "\n", "# Dim (1) to (num_PAgents):: individual P_agent maps [0 -> nothing, 1 -> agent's location, 2 -> agent's scope]", "\n", "# Dim (num_PAgents) to (num_PAgents+num_AAgents):: individual A_agent maps [0 -> nothing, 1 -> agent's location]", "\n", "self", ".", "state", "=", "np", ".", "zeros", "(", "[", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", "+", "1", ",", "self", ".", "world_size", ",", "self", ".", "world_size", "]", ",", "dtype", "=", "float", ")", "\n", "\n", "# initialize firespot positions (uniformly randomly distributed)", "\n", "if", "not", "self", ".", "stationary_fire", ":", "\n", "            ", "self", ".", "firespot_loci", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "0", ",", "self", ".", "world_size", "*", "self", ".", "world_size", ")", ",", "size", "=", "self", ".", "fireSpots_Num", ",", "replace", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "firespot_loci", "=", "np", ".", "array", "(", "[", "39", ",", "5", ",", "22", ",", "81", ",", "69", "]", ")", "# some random fixed position within bounds for testing", "\n", "\n", "# initialize agents (initialized in the middle of terrain)", "\n", "", "self", ".", "agent_pose_dim", "=", "2", "# 2D coordinates", "\n", "self", ".", "agent_state", "=", "[", "]", "# agents state matrix format:: [x, y, type] -> Perception.type=0 & Action.type=1", "\n", "\n", "if", "self", ".", "center_init", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "                ", "self", ".", "agent_state", ".", "append", "(", "[", "int", "(", "self", ".", "world_size", "/", "2", ")", ",", "int", "(", "self", ".", "world_size", "/", "2", ")", ",", "0", "]", ")", "# Perception Agent", "\n", "", "for", "i", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "self", ".", "agent_state", ".", "append", "(", "[", "int", "(", "self", ".", "world_size", "/", "2", ")", ",", "int", "(", "self", ".", "world_size", "/", "2", ")", ",", "1", "]", ")", "# Action Agent", "\n", "", "", "else", ":", "\n", "            ", "temp", "=", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "0", ",", "self", ".", "world_size", ")", ",", "\n", "size", "=", "(", "2", ",", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", ",", "\n", "replace", "=", "False", ")", "# randomize agents initial positions", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "                ", "self", ".", "agent_state", ".", "append", "(", "[", "temp", "[", "0", "]", "[", "i", "]", ",", "temp", "[", "1", "]", "[", "i", "]", ",", "0", "]", ")", "# Perception Agent", "\n", "", "for", "i", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "self", ".", "agent_state", ".", "append", "(", "[", "temp", "[", "0", "]", "[", "i", "+", "self", ".", "perception_agent_num", "]", ",", "temp", "[", "1", "]", "[", "i", "+", "self", ".", "perception_agent_num", "]", ",", "1", "]", ")", "# Action Agent", "\n", "\n", "# update state matrix", "\n", "", "", "self", ".", "state_matrix_update", "(", ")", "\n", "\n", "# initialize the adjacency matrices", "\n", "self", ".", "adjacent_agents_PnP", ",", "self", ".", "adjacent_agents_PnA", ",", "self", ".", "adjacent_agents_AnA", "=", "self", ".", "get_adjacency_matrices", "(", ")", "\n", "\n", "# initialize task success rates", "\n", "self", ".", "perception_complete", ",", "self", ".", "action_complete", "=", "0.0", ",", "0.0", "\n", "\n", "# initialize rewards", "\n", "self", ".", "old_reward_without_adjacent", "=", "0.0", "\n", "self", ".", "global_reward", "=", "0.0", "\n", "self", ".", "reward", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.env_step": [[108, 210], ["FireCommander_Base.FireCommanderEasy.agent_state_update", "FireCommander_Base.FireCommanderEasy.state_matrix_update", "range", "range", "FireCommander_Base.FireCommanderEasy.state_matrix_update", "FireCommander_Base.FireCommanderEasy.get_adjacency_matrices", "FireCommander_Base.FireCommanderEasy.get_local_reward", "Agent_Util.sensing", "numpy.unique", "FireCommander_Base.FireCommanderEasy.FOV_list.append", "FireCommander_Base.FireCommanderEasy.get_global_reward1", "len", "len", "FireCommander_Base.FireCommanderEasy.state[].copy", "FireCommander_Base.FireCommanderEasy.state.copy", "numpy.concatenate", "len", "Agent_Util.pruning", "numpy.concatenate", "sum", "sum", "FireCommander_Base.FireCommanderEasy.get_global_reward2", "list", "zip", "zip", "zip", "len", "len", "len", "len", "list", "len", "len", "list", "FireCommander_Base.FireCommanderEasy.state[].copy", "len", "Agent_Util.pruning", "numpy.concatenate", "len", "FireCommander_Base.FireCommanderEasy.get_global_reward3", "list", "list", "list", "list", "list", "list", "list", "FireCommander_Base.FireCommanderEasy.state[].copy", "len", "list", "len", "FireCommander_Base.FireCommanderEasy.get_global_reward3", "ValueError", "zip", "zip", "list", "list", "len", "list", "len", "list"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.agent_state_update", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.state_matrix_update", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.state_matrix_update", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_adjacency_matrices", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_local_reward", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.sensing", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_global_reward1", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.pruning", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_global_reward2", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.pruning", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_global_reward3", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_global_reward3"], ["", "def", "env_step", "(", "self", ",", "action", ",", "step", "=", "0", ",", "a_c_threshold", "=", "1.0", ",", "r_func", "=", "None", ",", "global_penalty", "=", "-", "0.1", ",", "local_P_reward", "=", "0.1", ",", "local_A_reward", "=", "0.1", ",", "\n", "A_penalty", "=", "-", "0.05", ",", "max_steps", "=", "1000", ")", ":", "\n", "# update the firespot positions (in current simple FireCommander firespots are left stationary, thus commented)", "\n", "# to include moving firespoots (fire propoagation), consider allowing firepropagation using the line below (line 113)", "\n", "# make sure to check the format of the propagate_fire() function from the Wildfire_Model class and modify accordingly", "\n", "# self.firespot_loci = propagate_fire()", "\n", "\n", "# update agents' states", "\n", "        ", "self", ".", "agent_state_update", "(", "action", ")", "\n", "\n", "# update the state space", "\n", "self", ".", "state_matrix_update", "(", ")", "\n", "\n", "# update the Perception agents' contribution", "\n", "self", ".", "FOV_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "sensed_num_prev", "=", "self", ".", "sensed_contribution", "[", "i", "]", "# remember how many spots have been detected so far", "\n", "this_sensed_list", ",", "FOV", "=", "Agent_Util", ".", "sensing", "(", "self", ".", "state", "[", "0", "]", ".", "copy", "(", ")", ",", "self", ".", "state", "[", "i", "+", "1", "]", ",", "self", ".", "world_size", ",", "self", ".", "vision", ",", "self", ".", "state", ".", "copy", "(", ")", ",", "\n", "self", ".", "feat_dim", ",", "self", ".", "perception_agent_num", ",", "self", ".", "action_agent_num", ")", "# sensing", "\n", "self", ".", "sensed_list", "=", "np", ".", "unique", "(", "np", ".", "concatenate", "(", "(", "self", ".", "sensed_list", ",", "this_sensed_list", ")", ",", "axis", "=", "0", ")", ")", "# adding new sensing results to the list", "\n", "self", ".", "FOV_list", ".", "append", "(", "FOV", ")", "# gather FOVs in a list for CNN input", "\n", "self", ".", "sensed_contribution", "[", "i", "]", "+=", "len", "(", "list", "(", "this_sensed_list", ")", ")", "-", "sensed_num_prev", "# compute contributions", "\n", "\n", "# update the Action agents' contribution", "\n", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ",", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "if", "(", "action", "[", "i", "]", "==", "4", ")", "and", "self", ".", "water_dump_action", ":", "# perform pruning only if agents action says so", "\n", "                ", "pruned_num_prev", "=", "self", ".", "pruned_contribution", "[", "i", "-", "self", ".", "perception_agent_num", "]", "# remember how many spots have been pruned so far", "\n", "this_pruned_list", ",", "self", ".", "sensed_list", ",", "self", ".", "firespot_loci", "=", "Agent_Util", ".", "pruning", "(", "self", ".", "state", "[", "0", "]", ".", "copy", "(", ")", ",", "self", ".", "state", "[", "i", "+", "1", "]", ",", "self", ".", "sensed_list", ",", "\n", "self", ".", "firespot_loci", ",", "self", ".", "world_size", ")", "# pruning", "\n", "self", ".", "pruned_list", "=", "np", ".", "concatenate", "(", "(", "self", ".", "pruned_list", ",", "this_pruned_list", ")", ",", "axis", "=", "0", ")", "# adding new sensing results to the list", "\n", "self", ".", "pruned_contribution", "[", "i", "-", "self", ".", "perception_agent_num", "]", "+=", "len", "(", "list", "(", "this_pruned_list", ")", ")", "-", "pruned_num_prev", "# compute contributions", "\n", "", "elif", "not", "self", ".", "water_dump_action", ":", "\n", "                ", "pruned_num_prev", "=", "self", ".", "pruned_contribution", "[", "i", "-", "self", ".", "perception_agent_num", "]", "# remember how many spots have been pruned so far", "\n", "this_pruned_list", ",", "self", ".", "sensed_list", ",", "self", ".", "firespot_loci", "=", "Agent_Util", ".", "pruning", "(", "self", ".", "state", "[", "0", "]", ".", "copy", "(", ")", ",", "self", ".", "state", "[", "i", "+", "1", "]", ",", "self", ".", "sensed_list", ",", "\n", "self", ".", "firespot_loci", ",", "self", ".", "world_size", ")", "# pruning", "\n", "self", ".", "pruned_list", "=", "np", ".", "concatenate", "(", "(", "self", ".", "pruned_list", ",", "this_pruned_list", ")", ",", "axis", "=", "0", ")", "# adding new sensing results to the list", "\n", "self", ".", "pruned_contribution", "[", "i", "-", "self", ".", "perception_agent_num", "]", "+=", "len", "(", "list", "(", "this_pruned_list", ")", ")", "-", "pruned_num_prev", "# compute contributions", "\n", "", "else", ":", "\n", "                ", "continue", "\n", "\n", "# update the state space", "\n", "", "", "self", ".", "state_matrix_update", "(", ")", "\n", "\n", "# update the adjacency matrices", "\n", "self", ".", "adjacent_agents_PnP", ",", "self", ".", "adjacent_agents_PnA", ",", "self", ".", "adjacent_agents_AnA", "=", "self", ".", "get_adjacency_matrices", "(", ")", "\n", "\n", "# compute rewards", "\n", "all_adjacencies", "=", "self", ".", "adjacent_agents_PnP", "+", "self", ".", "adjacent_agents_AnA", "+", "self", ".", "adjacent_agents_PnA", "\n", "\n", "# compute the global reward", "\n", "if", "r_func", "==", "'RF1'", ":", "\n", "            ", "self", ".", "global_reward", "=", "self", ".", "get_global_reward1", "(", "sum", "(", "self", ".", "sensed_contribution", ")", ",", "sum", "(", "self", ".", "pruned_contribution", ")", ",", "all_adjacencies", ")", "\n", "", "elif", "r_func", "==", "'RF2'", ":", "\n", "            ", "self", ".", "global_reward", "=", "self", ".", "get_global_reward2", "(", "len", "(", "list", "(", "self", ".", "firespot_loci", ")", ")", ")", "\n", "", "elif", "r_func", "==", "'RF3'", ":", "\n", "            ", "self", ".", "global_reward", "=", "self", ".", "get_global_reward3", "(", "len", "(", "list", "(", "self", ".", "firespot_loci", ")", ")", ",", "action", ",", "global_penalty", "=", "global_penalty", ",", "A_penalty", "=", "A_penalty", ")", "\n", "", "elif", "r_func", "is", "None", ":", "\n", "            ", "self", ".", "global_reward", "=", "self", ".", "get_global_reward3", "(", "len", "(", "list", "(", "self", ".", "firespot_loci", ")", ")", ",", "action", ",", "global_penalty", "=", "global_penalty", ",", "A_penalty", "=", "A_penalty", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! The specified Global Reward Function doesn't exist. Options: RF1, RF2, RF3\"", ")", "\n", "\n", "# compute the local reward", "\n", "", "self", ".", "local_reward", "=", "self", ".", "get_local_reward", "(", "\n", "self", ".", "sensed_contribution", ",", "self", ".", "pruned_contribution", ",", "len", "(", "list", "(", "self", ".", "firespot_loci", ")", ")", ",", "action", ",", "local_P_reward", "=", "local_P_reward", ",", "\n", "local_A_reward", "=", "local_A_reward", ",", "A_penalty", "=", "A_penalty", ",", "global_penalty", "=", "global_penalty", ")", "\n", "\n", "# calculate the mixed reward with local reward ratio", "\n", "local_ratio_list", "=", "[", "self", ".", "local_reward_ratio", "]", "*", "(", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", "\n", "global_ratio_list", "=", "[", "1", "-", "self", ".", "local_reward_ratio", "]", "*", "(", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", "\n", "global_reward_list", "=", "[", "self", ".", "global_reward", "]", "*", "(", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", "\n", "\n", "global_reward_list_scaled", "=", "[", "x", "*", "y", "for", "x", ",", "y", "in", "zip", "(", "global_ratio_list", ",", "global_reward_list", ")", "]", "\n", "local_reward_list_scaled", "=", "[", "x", "*", "y", "for", "x", ",", "y", "in", "zip", "(", "local_ratio_list", ",", "self", ".", "local_reward", ")", "]", "\n", "\n", "self", ".", "reward", "=", "[", "x", "+", "y", "for", "x", ",", "y", "in", "zip", "(", "local_reward_list_scaled", ",", "global_reward_list_scaled", ")", "]", "\n", "\n", "# compute performances", "\n", "# perception performance:: (sensed + pruned) / (active + pruned)", "\n", "self", ".", "perception_complete", "=", "(", "len", "(", "list", "(", "self", ".", "sensed_list", ")", ")", "+", "len", "(", "list", "(", "self", ".", "pruned_list", ")", ")", ")", "/", "(", "len", "(", "list", "(", "self", ".", "firespot_loci", ")", ")", "+", "len", "(", "list", "(", "self", ".", "pruned_list", ")", ")", ")", "\n", "\n", "# action performance::  (pruned) / (active + pruned)", "\n", "self", ".", "action_complete", "=", "len", "(", "list", "(", "self", ".", "pruned_list", ")", ")", "/", "(", "len", "(", "list", "(", "self", ".", "firespot_loci", ")", ")", "+", "len", "(", "list", "(", "self", ".", "pruned_list", ")", ")", ")", "\n", "# if all the firespots have been put out, finish the game", "\n", "if", "self", ".", "action_complete", ">=", "a_c_threshold", ":", "\n", "            ", "self", ".", "done", "=", "True", "\n", "self", ".", "outcom_flg", "=", "True", "\n", "if", "self", ".", "termination_rewrad", ":", "\n", "                ", "episode_return", "=", "[", "10.0", "*", "self", ".", "fireSpots_Num", "]", "*", "(", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", "\n", "self", ".", "reward", "=", "[", "x", "+", "y", "for", "x", ",", "y", "in", "zip", "(", "self", ".", "reward", ",", "episode_return", ")", "]", "\n", "\n", "# step forward in game", "\n", "", "", "step", "+=", "1", "\n", "\n", "# if a certain number of steps are passed but no good results are achieved, break since the training is not going well", "\n", "if", "not", "self", ".", "done", "and", "(", "step", ">=", "max_steps", ")", ":", "\n", "            ", "self", ".", "done", "=", "True", "\n", "if", "self", ".", "termination_rewrad", ":", "\n", "                ", "episode_return", "=", "[", "-", "10.0", "*", "(", "self", ".", "fireSpots_Num", "-", "len", "(", "list", "(", "self", ".", "pruned_list", ")", ")", ")", "]", "*", "(", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", "\n", "self", ".", "reward", "=", "[", "x", "+", "y", "for", "x", ",", "y", "in", "zip", "(", "self", ".", "reward", ",", "episode_return", ")", "]", "\n", "\n", "", "", "return", "self", ".", "state", ",", "self", ".", "reward", ",", "self", ".", "done", ",", "self", ".", "outcom_flg", ",", "step", ",", "self", ".", "perception_complete", ",", "self", ".", "action_complete", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.state_matrix_update": [[212, 277], ["numpy.zeros", "range", "FireCommander_Base.FireCommanderEasy.state[].reshape", "FireCommander_Base.FireCommanderEasy.state[].reshape", "FireCommander_Base.FireCommanderEasy.state[].reshape", "range", "range", "ValueError", "FireCommander_Base.FireCommanderEasy.firespot_loci.astype", "FireCommander_Base.FireCommanderEasy.sensed_list.astype", "FireCommander_Base.FireCommanderEasy.pruned_list.astype", "min", "max", "min", "max", "min", "min", "min", "max", "max", "max", "max", "min", "min", "max", "min", "max", "min", "min", "min", "max", "max", "max", "max", "min", "min", "min", "max", "max", "min", "min", "min", "max", "max", "max", "max", "min", "min", "min", "min", "max", "max", "max", "max", "min", "min", "min", "min", "max", "max", "max", "max", "min"], "methods", ["None"], ["", "def", "state_matrix_update", "(", "self", ")", ":", "\n", "# clean-up the previous states", "\n", "        ", "self", ".", "state", "=", "np", ".", "zeros", "(", "[", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", "+", "1", ",", "self", ".", "world_size", ",", "self", ".", "world_size", "]", ",", "dtype", "=", "float", ")", "\n", "\n", "# update fire's state in state matrix (Dim 1)", "\n", "self", ".", "state", "[", "0", "]", ".", "reshape", "(", "1", ",", "self", ".", "world_size", "*", "self", ".", "world_size", ")", "[", "0", ",", "self", ".", "firespot_loci", ".", "astype", "(", "int", ")", "]", "=", "1", "\n", "self", ".", "state", "[", "0", "]", ".", "reshape", "(", "1", ",", "self", ".", "world_size", "*", "self", ".", "world_size", ")", "[", "0", ",", "self", ".", "sensed_list", ".", "astype", "(", "int", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "0", "]", ".", "reshape", "(", "1", ",", "self", ".", "world_size", "*", "self", ".", "world_size", ")", "[", "0", ",", "self", ".", "pruned_list", ".", "astype", "(", "int", ")", "]", "=", "3", "\n", "\n", "# update agents states in state matrix", "\n", "# P agents", "\n", "if", "self", ".", "vision", "==", "1", ":", "\n", "            ", "for", "i", "in", "range", "(", "1", ",", "self", ".", "perception_agent_num", "+", "1", ")", ":", "\n", "# mark P agents' scopes (1-hop)", "\n", "                ", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "1", ")", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "1", ")", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "1", ")", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "1", ")", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "1", ")", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "1", ")", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "1", ")", "]", "=", "2", "\n", "\n", "# P agent location", "\n", "self", ".", "state", "[", "i", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "]", "=", "1", "\n", "", "", "elif", "self", ".", "vision", "==", "2", ":", "\n", "            ", "for", "i", "in", "range", "(", "1", ",", "self", ".", "perception_agent_num", "+", "1", ")", ":", "\n", "# mark P agents' scopes (2-hop)", "\n", "                ", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "1", ")", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "1", ")", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "1", ")", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "1", ")", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "1", ")", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "1", ")", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "1", ")", "]", "=", "2", "\n", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "2", ")", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "2", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "2", ")", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "2", ")", "]", "=", "2", "\n", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "2", ")", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "2", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "2", ")", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "2", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "2", ")", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "2", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "2", ")", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "2", ")", "]", "=", "2", "\n", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "2", ")", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "2", ")", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "2", ")", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "1", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "2", ")", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "1", ")", "]", "=", "2", "\n", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "1", ")", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "2", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "+", "1", ")", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "2", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "1", ")", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "-", "2", ")", "]", "=", "2", "\n", "self", ".", "state", "[", "i", ",", "max", "(", "0", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", "-", "1", ")", ",", "min", "(", "self", ".", "world_size", "-", "1", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "+", "2", ")", "]", "=", "2", "\n", "\n", "# P agent location", "\n", "self", ".", "state", "[", "i", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "]", "=", "1", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\">>> Oops! Sorry, for now, only 1-hop and 2-hop visions are available options...\"", ")", "\n", "\n", "# A agents", "\n", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", "+", "1", ",", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", "+", "1", ")", ":", "\n", "            ", "self", ".", "state", "[", "i", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "0", "]", ",", "self", ".", "agent_state", "[", "i", "-", "1", "]", "[", "1", "]", "]", "=", "1", "# A agents locations", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.agent_state_update": [[279, 307], ["range", "range", "max", "max", "min", "min", "max", "max", "min", "min"], "methods", ["None"], ["", "", "def", "agent_state_update", "(", "self", ",", "action_type", ")", ":", "\n", "# Update P agents' states", "\n", "        ", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "if", "action_type", "[", "i", "]", "==", "0", ":", "# Action: Forward", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "1", ",", "0", ")", "\n", "", "elif", "action_type", "[", "i", "]", "==", "1", ":", "# Action: Backward", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "1", ",", "self", ".", "world_size", "-", "1", ")", "\n", "", "elif", "action_type", "[", "i", "]", "==", "2", ":", "# Action: Left", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "1", ",", "0", ")", "\n", "", "elif", "action_type", "[", "i", "]", "==", "3", ":", "# Action: Right", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "1", ",", "self", ".", "world_size", "-", "1", ")", "\n", "", "elif", "(", "action_type", "[", "i", "]", "==", "4", ")", "and", "self", ".", "no_op_action", "[", "0", "]", ":", "# Action: No-op", "\n", "                ", "continue", "\n", "\n", "# Update A agents' states", "\n", "", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ",", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "if", "action_type", "[", "i", "]", "==", "0", ":", "# Action: Forward", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "-", "1", ",", "0", ")", "\n", "", "elif", "action_type", "[", "i", "]", "==", "1", ":", "# Action: Backward", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "0", "]", "+", "1", ",", "self", ".", "world_size", "-", "1", ")", "\n", "", "elif", "action_type", "[", "i", "]", "==", "2", ":", "# Action: Left", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "max", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "-", "1", ",", "0", ")", "\n", "", "elif", "action_type", "[", "i", "]", "==", "3", ":", "# Action: Right", "\n", "                ", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "=", "min", "(", "self", ".", "agent_state", "[", "i", "]", "[", "1", "]", "+", "1", ",", "self", ".", "world_size", "-", "1", ")", "\n", "", "elif", "action_type", "[", "i", "]", "==", "4", ":", "# Action: Dump Extinguisher", "\n", "                ", "continue", "\n", "", "elif", "(", "action_type", "[", "i", "]", "==", "5", ")", "and", "self", ".", "no_op_action", "[", "1", "]", ":", "# Action: No-op", "\n", "                ", "continue", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_global_reward1": [[309, 343], ["list", "list", "range", "len", "range", "len", "len", "len", "list.remove", "len", "list.remove", "list.remove", "len"], "methods", ["None"], ["", "", "", "def", "get_global_reward1", "(", "self", ",", "num_sensed", ",", "num_pruned", ",", "all_adjacencies", ")", ":", "\n", "# compute performance rewards", "\n", "        ", "new_reward", "=", "2.0", "*", "num_sensed", "\n", "new_reward", "+=", "20.0", "*", "num_pruned", "\n", "\n", "im_reward", "=", "new_reward", "-", "self", ".", "old_reward_without_adjacent", "\n", "self", ".", "old_reward_without_adjacent", "=", "new_reward", "\n", "\n", "# computing adjacency rewards for homogeneous communicatiion channel", "\n", "uniques", "=", "list", "(", "range", "(", "0", ",", "len", "(", "self", ".", "agent_state", ")", ")", ")", "\n", "for", "pair", "in", "all_adjacencies", ":", "\n", "            ", "for", "idx", "in", "pair", ":", "\n", "                ", "if", "idx", "in", "uniques", ":", "\n", "                    ", "uniques", ".", "remove", "(", "idx", ")", "\n", "if", "len", "(", "uniques", ")", "==", "0", ":", "\n", "                        ", "break", "\n", "\n", "", "", "", "", "im_reward", "-=", "1.0", "*", "len", "(", "uniques", ")", "\n", "\n", "# computing adjacency rewards for homogeneous communicatiion channel", "\n", "uniques_hetero_cm", "=", "list", "(", "range", "(", "0", ",", "len", "(", "self", ".", "agent_state", ")", ")", ")", "\n", "for", "pair", "in", "all_adjacencies", ":", "\n", "            ", "if", "0", "<=", "pair", "[", "0", "]", "<", "self", ".", "perception_agent_num", ":", "# one way check is OK since heterogeneous communication is symmetric", "\n", "                ", "if", "self", ".", "perception_agent_num", "<=", "pair", "[", "1", "]", "<", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ":", "\n", "                    ", "if", "pair", "[", "0", "]", "in", "uniques_hetero_cm", ":", "\n", "                        ", "uniques_hetero_cm", ".", "remove", "(", "pair", "[", "0", "]", ")", "\n", "", "if", "pair", "[", "1", "]", "in", "uniques_hetero_cm", ":", "\n", "                        ", "uniques_hetero_cm", ".", "remove", "(", "pair", "[", "1", "]", ")", "\n", "", "if", "len", "(", "uniques_hetero_cm", ")", "==", "0", ":", "\n", "                        ", "break", "\n", "\n", "", "", "", "", "im_reward", "-=", "3.0", "*", "len", "(", "uniques_hetero_cm", ")", "\n", "\n", "return", "im_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_global_reward2": [[345, 354], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_global_reward2", "(", "num_firespots", ")", ":", "\n", "# computing performance rewards", "\n", "        ", "if", "num_firespots", ">", "0", ":", "\n", "            ", "im_reward", "=", "-", "1.0", "\n", "", "else", ":", "\n", "            ", "im_reward", "=", "0.0", "\n", "\n", "", "return", "im_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_global_reward3": [[356, 366], ["range"], "methods", ["None"], ["", "def", "get_global_reward3", "(", "self", ",", "num_firespots", ",", "action", ",", "global_penalty", "=", "-", "0.1", ",", "A_penalty", "=", "-", "0.05", ")", ":", "\n", "# computing performance rewards", "\n", "        ", "im_reward", "=", "global_penalty", "*", "num_firespots", "\n", "\n", "# penalty for water dumping action", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ",", "self", ".", "perception_agent_num", "+", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "if", "action", "[", "i", "]", "==", "4", ":", "\n", "                ", "im_reward", "+=", "A_penalty", "\n", "\n", "", "", "return", "im_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_local_reward": [[368, 388], ["range", "len", "len", "len", "zip", "zip", "len", "zip", "len", "len"], "methods", ["None"], ["", "def", "get_local_reward", "(", "self", ",", "sensing_contributions", ",", "action_contributions", ",", "num_firespots", ",", "action", ",", "local_P_reward", "=", "0.1", ",", "local_A_reward", "=", "0.1", ",", "\n", "A_penalty", "=", "-", "0.05", ",", "global_penalty", "=", "-", "0.1", ")", ":", "\n", "# compute performance rewards", "\n", "        ", "if", "num_firespots", ">", "0", ":", "\n", "            ", "im_reward_list", "=", "[", "global_penalty", "]", "*", "len", "(", "action", ")", "\n", "", "else", ":", "\n", "            ", "im_reward_list", "=", "[", "0.0", "]", "*", "len", "(", "action", ")", "\n", "", "self", ".", "Perception_reward", "=", "[", "x", "*", "y", "for", "x", ",", "y", "in", "zip", "(", "[", "local_P_reward", "]", "*", "len", "(", "sensing_contributions", ")", ",", "sensing_contributions", ")", "]", "\n", "self", ".", "Action_reward", "=", "[", "x", "*", "y", "for", "x", ",", "y", "in", "zip", "(", "[", "local_A_reward", "]", "*", "len", "(", "action_contributions", ")", ",", "action_contributions", ")", "]", "\n", "\n", "# penalty for water dumping action", "\n", "A_actions", "=", "action", "[", "len", "(", "sensing_contributions", ")", ":", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "action_contributions", ")", ")", ":", "\n", "            ", "if", "A_actions", "[", "i", "]", "==", "4", ":", "\n", "                ", "self", ".", "Action_reward", "[", "i", "]", "+=", "A_penalty", "\n", "\n", "", "", "local_temp", "=", "self", ".", "Perception_reward", "+", "self", ".", "Action_reward", "\n", "self", ".", "local_reward", "=", "[", "x", "+", "y", "for", "x", ",", "y", "in", "zip", "(", "local_temp", ",", "im_reward_list", ")", "]", "\n", "\n", "return", "self", ".", "local_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_adjacency_matrices": [[390, 417], ["range", "range", "range", "range", "range", "range", "Agent_Util.adjacent_agents", "Agent_Util.adjacent_agents", "FireCommander_Base.FireCommanderEasy.adjacent_agents_PnA.append", "Agent_Util.adjacent_agents", "FireCommander_Base.FireCommanderEasy.adjacent_agents_PnP.append", "FireCommander_Base.FireCommanderEasy.adjacent_agents_AnA.append"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents", "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Cmplx1_Utilities.EnvUtilities.adjacent_agents"], ["", "def", "get_adjacency_matrices", "(", "self", ")", ":", "\n", "        ", "self", ".", "adjacent_agents_PnP", ",", "self", ".", "adjacent_agents_PnA", ",", "self", ".", "adjacent_agents_AnA", "=", "[", "]", ",", "[", "]", ",", "[", "]", "# clean-up the previous adjacencies", "\n", "# Perception-Perception adjacency", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "                ", "if", "i", "!=", "j", ":", "\n", "                    ", "pose1", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                        ", "self", ".", "adjacent_agents_PnP", ".", "append", "(", "[", "i", ",", "j", "]", ")", "\n", "# Perception-Action adjacency", "\n", "", "", "", "", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "pose1", "=", "self", ".", "agent_state", "[", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                    ", "self", ".", "adjacent_agents_PnA", ".", "append", "(", "[", "i", ",", "self", ".", "perception_agent_num", "+", "j", "]", ")", "\n", "# Action-Action adjacency", "\n", "", "", "", "for", "i", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "self", ".", "action_agent_num", ")", ":", "\n", "                ", "if", "i", "!=", "j", ":", "\n", "                    ", "pose1", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "i", "]", "\n", "pose2", "=", "self", ".", "agent_state", "[", "self", ".", "perception_agent_num", "+", "j", "]", "\n", "if", "Agent_Util", ".", "adjacent_agents", "(", "pose1", "[", "0", ":", "self", ".", "agent_pose_dim", "]", ",", "pose2", "[", "0", ":", "self", ".", "agent_pose_dim", "]", ",", "hop_num", "=", "self", ".", "comm_hop", ")", ":", "\n", "                        ", "self", ".", "adjacent_agents_AnA", ".", "append", "(", "[", "self", ".", "perception_agent_num", "+", "i", ",", "self", ".", "perception_agent_num", "+", "j", "]", ")", "\n", "\n", "", "", "", "", "return", "self", ".", "adjacent_agents_PnP", ",", "self", ".", "adjacent_agents_PnA", ",", "self", ".", "adjacent_agents_AnA", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_FOV": [[419, 433], ["len", "range", "Agent_Util.FOV_encoding", "FOV_list.append", "FireCommander_Base.FireCommanderEasy.state.copy"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.FOV_encoding"], ["", "def", "get_FOV", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "FOV_list", ")", ">", "0", ":", "\n", "            ", "return", "self", ".", "FOV_list", "\n", "", "else", ":", "\n", "            ", "FOV_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "# extracting 1-hot encoded FOV tensors", "\n", "                ", "FOV", "=", "Agent_Util", ".", "FOV_encoding", "(", "self", ".", "state", ".", "copy", "(", ")", ",", "self", ".", "state", "[", "i", "+", "1", "]", ",", "self", ".", "feat_dim", ",", "self", ".", "perception_agent_num", ",", "\n", "self", ".", "action_agent_num", ",", "self", ".", "world_size", ",", "self", ".", "vision", ")", "\n", "# creating the FOV list", "\n", "FOV_list", ".", "append", "(", "FOV", ")", "\n", "\n", "", "return", "FOV_list", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_FOV_vectorized": [[439, 452], ["range", "Agent_Util.FOV_vectorized_encoding", "FOV_list.append", "FireCommander_Base.FireCommanderEasy.state.copy"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.FOV_vectorized_encoding"], ["def", "get_FOV_vectorized", "(", "self", ")", ":", "\n", "        ", "FOV_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "perception_agent_num", ")", ":", "\n", "# extracting 1-hot encoded FOV tensors", "\n", "            ", "FOV", "=", "Agent_Util", ".", "FOV_vectorized_encoding", "(", "self", ".", "state", ".", "copy", "(", ")", ",", "\n", "self", ".", "state", "[", "i", "+", "1", "]", ",", "self", ".", "feat_dim", ",", "self", ".", "perception_agent_num", ",", "\n", "self", ".", "action_agent_num", ",", "self", ".", "world_size", ",", "self", ".", "vision", ")", "\n", "\n", "# creating the FOV list", "\n", "FOV_list", ".", "append", "(", "FOV", ")", "\n", "\n", "", "return", "FOV_list", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.get_agent_state_vector": [[453, 460], ["agent_state_vector.append", "Agent_Util.position_one_hot().tolist", "Agent_Util.position_one_hot"], "methods", ["home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base_Utilities.EnvUtilities.position_one_hot"], ["", "def", "get_agent_state_vector", "(", "self", ")", ":", "\n", "        ", "agent_state_vector", "=", "[", "]", "\n", "\n", "for", "state", "in", "self", ".", "agent_state", ":", "\n", "            ", "agent_state_vector", ".", "append", "(", "[", "Agent_Util", ".", "position_one_hot", "(", "state", "[", "0", "]", ",", "state", "[", "1", "]", ",", "self", ".", "world_size", ")", ".", "tolist", "(", ")", ",", "state", "[", "2", "]", "]", ")", "\n", "\n", "", "return", "agent_state_vector", "\n", "\n"]], "home.repos.pwc.inspect_result.EsiSeraj_FireCommander2020.MARL Package.FireCommander_Base.FireCommanderEasy.env_close": [[462, 465], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "env_close", "(", ")", ":", "\n", "        ", "return", "0", "\n", "\n"]]}