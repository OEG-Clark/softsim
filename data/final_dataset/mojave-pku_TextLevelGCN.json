{"home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.__init__": [[7, 41], ["os.path.join", "os.path.join", "f.read.split", "data_helper.DataHelper.get_content", "data_helper.DataHelper.label_to_onehot", "dict", "ValueError", "open", "f.read", "zip", "list", "os.path.join", "data_helper.DataHelper.get_vocab", "range", "map", "data_helper.DataHelper.build_vocab", "len", "doc.split", "data_helper.DataHelper.word2id"], "methods", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.get_content", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.label_to_onehot", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.get_vocab", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.build_vocab", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.word2id"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "mode", "=", "'train'", ",", "vocab", "=", "None", ")", ":", "\n", "        ", "allowed_data", "=", "[", "'r8'", ",", "'20ng'", ",", "'r52'", ",", "'mr'", ",", "'oh'", "]", "\n", "\n", "if", "dataset", "not", "in", "allowed_data", ":", "\n", "            ", "raise", "ValueError", "(", "'currently allowed data: %s'", "%", "','", ".", "join", "(", "allowed_data", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "dataset", "=", "dataset", "\n", "\n", "", "self", ".", "mode", "=", "mode", "\n", "\n", "self", ".", "base", "=", "os", ".", "path", ".", "join", "(", "'data'", ",", "self", ".", "dataset", ")", "\n", "\n", "self", ".", "current_set", "=", "os", ".", "path", ".", "join", "(", "self", ".", "base", ",", "'%s-%s-stemmed.txt'", "%", "(", "self", ".", "dataset", ",", "self", ".", "mode", ")", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "base", ",", "'label.txt'", ")", ")", "as", "f", ":", "\n", "            ", "labels", "=", "f", ".", "read", "(", ")", "\n", "", "self", ".", "labels_str", "=", "labels", ".", "split", "(", "'\\n'", ")", "\n", "\n", "content", ",", "label", "=", "self", ".", "get_content", "(", ")", "\n", "\n", "self", ".", "label", "=", "self", ".", "label_to_onehot", "(", "label", ")", "\n", "if", "vocab", "is", "None", ":", "\n", "            ", "self", ".", "vocab", "=", "[", "]", "\n", "\n", "try", ":", "\n", "                ", "self", ".", "get_vocab", "(", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "                ", "self", ".", "build_vocab", "(", "content", ",", "min_count", "=", "5", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "vocab", "=", "vocab", "\n", "\n", "", "self", ".", "d", "=", "dict", "(", "zip", "(", "self", ".", "vocab", ",", "range", "(", "len", "(", "self", ".", "vocab", ")", ")", ")", ")", "\n", "\n", "self", ".", "content", "=", "[", "list", "(", "map", "(", "lambda", "x", ":", "self", ".", "word2id", "(", "x", ")", ",", "doc", ".", "split", "(", "' '", ")", ")", ")", "for", "doc", "in", "content", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.label_to_onehot": [[42, 45], ["data_helper.DataHelper.labels_str.index"], "methods", ["None"], ["", "def", "label_to_onehot", "(", "self", ",", "label_str", ")", ":", "\n", "\n", "        ", "return", "[", "self", ".", "labels_str", ".", "index", "(", "l", ")", "for", "l", "in", "label_str", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.get_content": [[46, 64], ["zip", "open", "f.read", "enumerate", "line.split", "f.read.split", "len", "cleaned.append"], "methods", ["None"], ["", "def", "get_content", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "current_set", ")", "as", "f", ":", "\n", "            ", "all", "=", "f", ".", "read", "(", ")", "\n", "content", "=", "[", "line", ".", "split", "(", "'\\t'", ")", "for", "line", "in", "all", ".", "split", "(", "'\\n'", ")", "]", "\n", "", "if", "self", ".", "dataset", "==", "'20ng'", "or", "'r52'", ":", "\n", "            ", "cleaned", "=", "[", "]", "\n", "for", "i", ",", "pair", "in", "enumerate", "(", "content", ")", ":", "\n", "                ", "if", "len", "(", "pair", ")", "<", "2", ":", "\n", "# print(i, pair)", "\n", "                    ", "pass", "\n", "", "else", ":", "\n", "                    ", "cleaned", ".", "append", "(", "pair", ")", "\n", "", "", "", "else", ":", "\n", "            ", "cleaned", "=", "content", "\n", "\n", "", "label", ",", "content", "=", "zip", "(", "*", "cleaned", ")", "\n", "\n", "return", "content", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.word2id": [[65, 72], ["None"], "methods", ["None"], ["", "def", "word2id", "(", "self", ",", "word", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "result", "=", "self", ".", "d", "[", "word", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "result", "=", "self", ".", "d", "[", "'UNK'", "]", "\n", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.get_vocab": [[73, 77], ["open", "f.read", "f.read.split", "os.path.join"], "methods", ["None"], ["", "def", "get_vocab", "(", "self", ")", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "base", ",", "'vocab-5.txt'", ")", ")", "as", "f", ":", "\n", "            ", "vocab", "=", "f", ".", "read", "(", ")", "\n", "self", ".", "vocab", "=", "vocab", ".", "split", "(", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.build_vocab": [[78, 106], ["dict", "dict.keys", "results.insert", "c.split", "zip", "c.split", "open", "f.write", "results.append", "os.path.join", "vocab.append", "range", "len"], "methods", ["None"], ["", "", "def", "build_vocab", "(", "self", ",", "content", ",", "min_count", "=", "10", ")", ":", "\n", "        ", "vocab", "=", "[", "]", "\n", "\n", "for", "c", "in", "content", ":", "\n", "            ", "words", "=", "c", ".", "split", "(", "' '", ")", "\n", "for", "word", "in", "words", ":", "\n", "                ", "if", "word", "not", "in", "vocab", ":", "\n", "                    ", "vocab", ".", "append", "(", "word", ")", "\n", "\n", "", "", "", "freq", "=", "dict", "(", "zip", "(", "vocab", ",", "[", "0", "for", "i", "in", "range", "(", "len", "(", "vocab", ")", ")", "]", ")", ")", "\n", "\n", "for", "c", "in", "content", ":", "\n", "            ", "words", "=", "c", ".", "split", "(", "' '", ")", "\n", "for", "word", "in", "words", ":", "\n", "                ", "freq", "[", "word", "]", "+=", "1", "\n", "\n", "", "", "results", "=", "[", "]", "\n", "for", "word", "in", "freq", ".", "keys", "(", ")", ":", "\n", "            ", "if", "freq", "[", "word", "]", "<", "min_count", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "results", ".", "append", "(", "word", ")", "\n", "\n", "", "", "results", ".", "insert", "(", "0", ",", "'UNK'", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "base", ",", "'vocab-5.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "'\\n'", ".", "join", "(", "results", ")", ")", "\n", "\n", "", "self", ".", "vocab", "=", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.count_word_freq": [[107, 119], ["dict", "zip", "c.split", "open", "csv.writer", "list", "csv.writer.writerows", "os.path.join", "zip", "dict.keys", "dict.values", "range", "len"], "methods", ["None"], ["", "def", "count_word_freq", "(", "self", ",", "content", ")", ":", "\n", "        ", "freq", "=", "dict", "(", "zip", "(", "self", ".", "vocab", ",", "[", "0", "for", "i", "in", "range", "(", "len", "(", "self", ".", "vocab", ")", ")", "]", ")", ")", "\n", "\n", "for", "c", "in", "content", ":", "\n", "            ", "words", "=", "c", ".", "split", "(", "' '", ")", "\n", "for", "word", "in", "words", ":", "\n", "                ", "freq", "[", "word", "]", "+=", "1", "\n", "\n", "", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "base", ",", "'freq.csv'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "writer", "=", "csv", ".", "writer", "(", "f", ")", "\n", "results", "=", "list", "(", "zip", "(", "freq", ".", "keys", "(", ")", ",", "freq", ".", "values", "(", ")", ")", ")", "\n", "writer", ".", "writerows", "(", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.batch_iter": [[120, 131], ["range", "int", "range", "min", "len", "len", "torch.tensor().cuda", "torch.tensor"], "methods", ["None"], ["", "", "def", "batch_iter", "(", "self", ",", "batch_size", ",", "num_epoch", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "num_epoch", ")", ":", "\n", "            ", "num_per_epoch", "=", "int", "(", "len", "(", "self", ".", "content", ")", "/", "batch_size", ")", "\n", "for", "batch_id", "in", "range", "(", "num_per_epoch", ")", ":", "\n", "                ", "start", "=", "batch_id", "*", "batch_size", "\n", "end", "=", "min", "(", "(", "batch_id", "+", "1", ")", "*", "batch_size", ",", "len", "(", "self", ".", "content", ")", ")", "\n", "\n", "content", "=", "self", ".", "content", "[", "start", ":", "end", "]", "\n", "label", "=", "self", ".", "label", "[", "start", ":", "end", "]", "\n", "\n", "yield", "content", ",", "torch", ".", "tensor", "(", "label", ")", ".", "cuda", "(", ")", ",", "i", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.train.edges_mapping": [[16, 33], ["numpy.zeros", "range", "enumerate", "range", "max", "min", "len"], "function", ["None"], ["def", "edges_mapping", "(", "vocab_len", ",", "content", ",", "ngram", ")", ":", "\n", "    ", "count", "=", "1", "\n", "mapping", "=", "np", ".", "zeros", "(", "shape", "=", "(", "vocab_len", ",", "vocab_len", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "for", "doc", "in", "content", ":", "\n", "        ", "for", "i", ",", "src", "in", "enumerate", "(", "doc", ")", ":", "\n", "            ", "for", "dst_id", "in", "range", "(", "max", "(", "0", ",", "i", "-", "ngram", ")", ",", "min", "(", "len", "(", "doc", ")", ",", "i", "+", "ngram", "+", "1", ")", ")", ":", "\n", "                ", "dst", "=", "doc", "[", "dst_id", "]", "\n", "\n", "if", "mapping", "[", "src", ",", "dst", "]", "==", "0", ":", "\n", "                    ", "mapping", "[", "src", ",", "dst", "]", "=", "count", "\n", "count", "+=", "1", "\n", "\n", "", "", "", "", "for", "word", "in", "range", "(", "vocab_len", ")", ":", "\n", "        ", "mapping", "[", "word", ",", "word", "]", "=", "count", "\n", "count", "+=", "1", "\n", "\n", "", "return", "count", ",", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.train.get_time_dif": [[35, 40], ["time.time", "datetime.timedelta", "int", "round"], "function", ["None"], ["", "def", "get_time_dif", "(", "start_time", ")", ":", "\n", "    ", "\"\"\"\u83b7\u53d6\u5df2\u4f7f\u7528\u65f6\u95f4\"\"\"", "\n", "end_time", "=", "time", ".", "time", "(", ")", "\n", "time_dif", "=", "end_time", "-", "start_time", "\n", "return", "datetime", ".", "timedelta", "(", "seconds", "=", "int", "(", "round", "(", "time_dif", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.train.dev": [[42, 64], ["data_helper.DataHelper", "data_helper.DataHelper.batch_iter", "float", "correct.float.float", "torch.div", "model.eval", "model", "torch.argmax", "torch.sum", "len"], "function", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.batch_iter"], ["", "def", "dev", "(", "model", ",", "dataset", ")", ":", "\n", "    ", "data_helper", "=", "DataHelper", "(", "dataset", ",", "mode", "=", "'dev'", ")", "\n", "\n", "total_pred", "=", "0", "\n", "correct", "=", "0", "\n", "iter", "=", "0", "\n", "for", "content", ",", "label", ",", "_", "in", "data_helper", ".", "batch_iter", "(", "batch_size", "=", "64", ",", "num_epoch", "=", "1", ")", ":", "\n", "        ", "iter", "+=", "1", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "logits", "=", "model", "(", "content", ")", "\n", "pred", "=", "torch", ".", "argmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "\n", "correct_pred", "=", "torch", ".", "sum", "(", "pred", "==", "label", ")", "\n", "\n", "correct", "+=", "correct_pred", "\n", "total_pred", "+=", "len", "(", "content", ")", "\n", "\n", "", "total_pred", "=", "float", "(", "total_pred", ")", "\n", "correct", "=", "correct", ".", "float", "(", ")", "\n", "# print(torch.div(correct, total_pred))", "\n", "return", "torch", ".", "div", "(", "correct", ",", "total_pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.train.test": [[66, 90], ["torch.load", "data_helper.DataHelper", "data_helper.DataHelper.batch_iter", "float", "correct.float.float", "torch.div().to", "os.path.join", "torch.load.eval", "torch.load.", "torch.argmax", "torch.sum", "len", "torch.div"], "function", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.batch_iter"], ["", "def", "test", "(", "model_name", ",", "dataset", ")", ":", "\n", "    ", "model", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "'.'", ",", "model_name", "+", "'.pkl'", ")", ")", "\n", "\n", "data_helper", "=", "DataHelper", "(", "dataset", ",", "mode", "=", "'test'", ")", "\n", "\n", "total_pred", "=", "0", "\n", "correct", "=", "0", "\n", "iter", "=", "0", "\n", "for", "content", ",", "label", ",", "_", "in", "data_helper", ".", "batch_iter", "(", "batch_size", "=", "64", ",", "num_epoch", "=", "1", ")", ":", "\n", "        ", "iter", "+=", "1", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "logits", "=", "model", "(", "content", ")", "\n", "pred", "=", "torch", ".", "argmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "\n", "correct_pred", "=", "torch", ".", "sum", "(", "pred", "==", "label", ")", "\n", "\n", "correct", "+=", "correct_pred", "\n", "total_pred", "+=", "len", "(", "content", ")", "\n", "\n", "", "total_pred", "=", "float", "(", "total_pred", ")", "\n", "correct", "=", "correct", ".", "float", "(", ")", "\n", "# print(torch.div(correct, total_pred))", "\n", "return", "torch", ".", "div", "(", "correct", ",", "total_pred", ")", ".", "to", "(", "'cpu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.train.train": [[92, 177], ["print", "data_helper.DataHelper", "print", "torch.nn.CrossEntropyLoss", "torch.optim.Adam", "time.time", "data_helper.DataHelper.batch_iter", "os.path.exists", "print", "torch.load", "print", "pmi.cal_PMI", "model.Model", "print", "model.Model.cuda", "model.Model.parameters", "tqdm.tqdm", "model.Model.train", "model.Model.", "torch.nn.CrossEntropyLoss.", "torch.argmax", "torch.sum", "len", "loss_func.item", "torch.optim.Adam.zero_grad", "loss_func.backward", "torch.optim.Adam.step", "os.path.join", "os.path.join", "tqdm.tqdm.update", "train.dev", "print", "len", "tqdm.tqdm.close", "torch.save", "msg.format", "tqdm.tqdm", "train.get_time_dif", "float", "float"], "function", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.batch_iter", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pmi.cal_PMI", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.train.train", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.train.dev", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.train.get_time_dif"], ["", "def", "train", "(", "ngram", ",", "name", ",", "bar", ",", "drop_out", ",", "dataset", ",", "is_cuda", "=", "False", ",", "edges", "=", "True", ")", ":", "\n", "    ", "print", "(", "'load data helper.'", ")", "\n", "data_helper", "=", "DataHelper", "(", "dataset", ",", "mode", "=", "'train'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "'.'", ",", "name", "+", "'.pkl'", ")", ")", "and", "name", "!=", "'temp_model'", ":", "\n", "        ", "print", "(", "'load model from file.'", ")", "\n", "model", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "'.'", ",", "name", "+", "'.pkl'", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'new model.'", ")", "\n", "if", "name", "==", "'temp_model'", ":", "\n", "            ", "name", "=", "'temp_model_%s'", "%", "dataset", "\n", "# edges_num, edges_matrix = edges_mapping(len(data_helper.vocab), data_helper.content, ngram)", "\n", "", "edges_weights", ",", "edges_mappings", ",", "count", "=", "cal_PMI", "(", "dataset", "=", "dataset", ")", "\n", "\n", "model", "=", "Model", "(", "class_num", "=", "len", "(", "data_helper", ".", "labels_str", ")", ",", "hidden_size_node", "=", "200", ",", "\n", "vocab", "=", "data_helper", ".", "vocab", ",", "n_gram", "=", "ngram", ",", "drop_out", "=", "drop_out", ",", "edges_matrix", "=", "edges_mappings", ",", "edges_num", "=", "count", ",", "\n", "trainable_edges", "=", "edges", ",", "pmi", "=", "edges_weights", ",", "cuda", "=", "is_cuda", ")", "\n", "\n", "", "print", "(", "model", ")", "\n", "if", "is_cuda", ":", "\n", "        ", "print", "(", "'cuda'", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "", "loss_func", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "optim", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "weight_decay", "=", "1e-6", ")", "\n", "\n", "iter", "=", "0", "\n", "if", "bar", ":", "\n", "        ", "pbar", "=", "tqdm", ".", "tqdm", "(", "total", "=", "NUM_ITER_EVAL", ")", "\n", "", "best_acc", "=", "0.0", "\n", "last_best_epoch", "=", "0", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "total_loss", "=", "0.0", "\n", "total_correct", "=", "0", "\n", "total", "=", "0", "\n", "for", "content", ",", "label", ",", "epoch", "in", "data_helper", ".", "batch_iter", "(", "batch_size", "=", "32", ",", "num_epoch", "=", "200", ")", ":", "\n", "        ", "improved", "=", "''", "\n", "model", ".", "train", "(", ")", "\n", "\n", "logits", "=", "model", "(", "content", ")", "\n", "loss", "=", "loss_func", "(", "logits", ",", "label", ")", "\n", "\n", "pred", "=", "torch", ".", "argmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "\n", "correct", "=", "torch", ".", "sum", "(", "pred", "==", "label", ")", "\n", "\n", "total_correct", "+=", "correct", "\n", "total", "+=", "len", "(", "label", ")", "\n", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "optim", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optim", ".", "step", "(", ")", "\n", "\n", "iter", "+=", "1", "\n", "if", "bar", ":", "\n", "            ", "pbar", ".", "update", "(", ")", "\n", "", "if", "iter", "%", "NUM_ITER_EVAL", "==", "0", ":", "\n", "            ", "if", "bar", ":", "\n", "                ", "pbar", ".", "close", "(", ")", "\n", "\n", "", "val_acc", "=", "dev", "(", "model", ",", "dataset", "=", "dataset", ")", "\n", "if", "val_acc", ">", "best_acc", ":", "\n", "                ", "best_acc", "=", "val_acc", "\n", "last_best_epoch", "=", "epoch", "\n", "improved", "=", "'*'", "\n", "\n", "torch", ".", "save", "(", "model", ",", "name", "+", "'.pkl'", ")", "\n", "\n", "", "if", "epoch", "-", "last_best_epoch", ">=", "EARLY_STOP_EPOCH", ":", "\n", "                ", "return", "name", "\n", "", "msg", "=", "'Epoch: {0:>6} Iter: {1:>6}, Train Loss: {5:>7.2}, Train Acc: {6:>7.2%}'", "+", "'Val Acc: {2:>7.2%}, Time: {3}{4}'", "# + ' Time: {5} {6}'", "\n", "\n", "print", "(", "msg", ".", "format", "(", "epoch", ",", "iter", ",", "val_acc", ",", "get_time_dif", "(", "start_time", ")", ",", "improved", ",", "total_loss", "/", "NUM_ITER_EVAL", ",", "\n", "float", "(", "total_correct", ")", "/", "float", "(", "total", ")", ")", ")", "\n", "\n", "total_loss", "=", "0.0", "\n", "total_correct", "=", "0", "\n", "total", "=", "0", "\n", "if", "bar", ":", "\n", "                ", "pbar", "=", "tqdm", ".", "tqdm", "(", "total", "=", "NUM_ITER_EVAL", ")", "\n", "\n", "", "", "", "return", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.train.word_eval": [[179, 201], ["print", "data_helper.DataHelper", "train.edges_mapping", "torch.load", "torch.load.seq_edge_w.weight.to().detach().numpy", "data_helper.DataHelper.vocab.index", "range", "sorted", "print", "len", "os.path.join", "len", "results.items", "torch.load.seq_edge_w.weight.to().detach", "torch.load.seq_edge_w.weight.to"], "function", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.train.edges_mapping"], ["", "def", "word_eval", "(", ")", ":", "\n", "    ", "print", "(", "'load model from file.'", ")", "\n", "data_helper", "=", "DataHelper", "(", "'r8'", ")", "\n", "edges_num", ",", "edges_matrix", "=", "edges_mapping", "(", "len", "(", "data_helper", ".", "vocab", ")", ",", "data_helper", ".", "content", ",", "1", ")", "\n", "model", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "'word_eval_1.pkl'", ")", ")", "\n", "\n", "edges_weights", "=", "model", ".", "seq_edge_w", ".", "weight", ".", "to", "(", "'cpu'", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "core_word", "=", "'billion'", "\n", "core_index", "=", "data_helper", ".", "vocab", ".", "index", "(", "core_word", ")", "\n", "\n", "results", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "data_helper", ".", "vocab", ")", ")", ":", "\n", "        ", "word", "=", "data_helper", ".", "vocab", "[", "i", "]", "\n", "n_word", "=", "edges_matrix", "[", "i", ",", "core_index", "]", "\n", "# n_word = edges_matrix[i, i]", "\n", "if", "n_word", "!=", "0", ":", "\n", "            ", "results", "[", "word", "]", "=", "edges_weights", "[", "n_word", "]", "[", "0", "]", "\n", "\n", "", "", "sort_results", "=", "sorted", "(", "results", ".", "items", "(", ")", ",", "key", "=", "lambda", "d", ":", "d", "[", "1", "]", ")", "\n", "\n", "print", "(", "sort_results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pmi.cal_PMI": [[5, 62], ["data_helper.DataHelper", "data_helper.DataHelper.get_content", "numpy.zeros", "numpy.zeros", "numpy.sum", "numpy.zeros", "range", "numpy.nan_to_num", "numpy.maximum", "numpy.zeros", "range", "numpy.array", "torch.Tensor.reshape", "torch.Tensor", "len", "sentence.split.split", "enumerate", "len", "range", "len", "range", "len", "len", "max", "min", "range", "len", "len", "len", "numpy.log", "len", "len", "len", "len", "torch.Tensor.append"], "function", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.data_helper.DataHelper.get_content"], ["def", "cal_PMI", "(", "dataset", ":", "str", ",", "window_size", "=", "20", ")", ":", "\n", "    ", "helper", "=", "DataHelper", "(", "dataset", "=", "dataset", ",", "mode", "=", "\"train\"", ")", "\n", "content", ",", "_", "=", "helper", ".", "get_content", "(", ")", "\n", "pair_count_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "helper", ".", "vocab", ")", ",", "len", "(", "helper", ".", "vocab", ")", ")", ",", "dtype", "=", "int", ")", "\n", "word_count", "=", "np", ".", "zeros", "(", "len", "(", "helper", ".", "vocab", ")", ",", "dtype", "=", "int", ")", "\n", "\n", "for", "sentence", "in", "content", ":", "\n", "        ", "sentence", "=", "sentence", ".", "split", "(", "' '", ")", "\n", "for", "i", ",", "word", "in", "enumerate", "(", "sentence", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "word_count", "[", "helper", ".", "d", "[", "word", "]", "]", "+=", "1", "\n", "", "except", "KeyError", ":", "\n", "                ", "continue", "\n", "", "start_index", "=", "max", "(", "0", ",", "i", "-", "window_size", ")", "\n", "end_index", "=", "min", "(", "len", "(", "sentence", ")", ",", "i", "+", "window_size", ")", "\n", "for", "j", "in", "range", "(", "start_index", ",", "end_index", ")", ":", "\n", "                ", "if", "i", "==", "j", ":", "\n", "                    ", "continue", "\n", "", "else", ":", "\n", "                    ", "target_word", "=", "sentence", "[", "j", "]", "\n", "try", ":", "\n", "                        ", "pair_count_matrix", "[", "helper", ".", "d", "[", "word", "]", ",", "helper", ".", "d", "[", "target_word", "]", "]", "+=", "1", "\n", "", "except", "KeyError", ":", "\n", "                        ", "continue", "\n", "\n", "", "", "", "", "", "total_count", "=", "np", ".", "sum", "(", "word_count", ")", "\n", "word_count", "=", "word_count", "/", "total_count", "\n", "pair_count_matrix", "=", "pair_count_matrix", "/", "total_count", "\n", "\n", "pmi_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "helper", ".", "vocab", ")", ",", "len", "(", "helper", ".", "vocab", ")", ")", ",", "dtype", "=", "float", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "helper", ".", "vocab", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "len", "(", "helper", ".", "vocab", ")", ")", ":", "\n", "            ", "pmi_matrix", "[", "i", ",", "j", "]", "=", "np", ".", "log", "(", "\n", "pair_count_matrix", "[", "i", ",", "j", "]", "/", "(", "word_count", "[", "i", "]", "*", "word_count", "[", "j", "]", ")", "\n", ")", "\n", "\n", "", "", "pmi_matrix", "=", "np", ".", "nan_to_num", "(", "pmi_matrix", ")", "\n", "\n", "pmi_matrix", "=", "np", ".", "maximum", "(", "pmi_matrix", ",", "0.0", ")", "\n", "\n", "edges_weights", "=", "[", "0.0", "]", "\n", "count", "=", "1", "\n", "edges_mappings", "=", "np", ".", "zeros", "(", "(", "len", "(", "helper", ".", "vocab", ")", ",", "len", "(", "helper", ".", "vocab", ")", ")", ",", "dtype", "=", "int", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "helper", ".", "vocab", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "len", "(", "helper", ".", "vocab", ")", ")", ":", "\n", "            ", "if", "pmi_matrix", "[", "i", ",", "j", "]", "!=", "0", ":", "\n", "                ", "edges_weights", ".", "append", "(", "pmi_matrix", "[", "i", ",", "j", "]", ")", "\n", "edges_mappings", "[", "i", ",", "j", "]", "=", "count", "\n", "count", "+=", "1", "\n", "\n", "", "", "", "edges_weights", "=", "np", ".", "array", "(", "edges_weights", ")", "\n", "\n", "edges_weights", "=", "edges_weights", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "# print(edges_weights.shape)", "\n", "edges_weights", "=", "torch", ".", "Tensor", "(", "edges_weights", ")", "\n", "\n", "return", "edges_weights", ",", "edges_mappings", ",", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.__init__": [[29, 81], ["super().__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "print", "print", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "model.Model.node_hidden.weight.data.copy_", "len", "dict", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "len", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.nn.Embedding.from_pretrained", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "zip", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "model.Model.load_word2vec", "range", "len"], "methods", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.buildGraph.GraphBuilder.__init__", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.load_word2vec"], ["    ", "def", "__init__", "(", "self", ",", "\n", "class_num", ",", "\n", "hidden_size_node", ",", "\n", "vocab", ",", "\n", "n_gram", ",", "\n", "drop_out", ",", "\n", "edges_num", ",", "\n", "edges_matrix", ",", "\n", "max_length", "=", "350", ",", "\n", "trainable_edges", "=", "True", ",", "\n", "pmi", "=", "None", ",", "\n", "cuda", "=", "True", "\n", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "is_cuda", "=", "cuda", "\n", "self", ".", "vocab", "=", "vocab", "\n", "# print(len(vocab))", "\n", "self", ".", "seq_edge_w", "=", "torch", ".", "nn", ".", "Embedding", "(", "edges_num", ",", "1", ")", "\n", "print", "(", "edges_num", ")", "\n", "print", "(", "pmi", ".", "shape", ")", "\n", "\n", "self", ".", "node_hidden", "=", "torch", ".", "nn", ".", "Embedding", "(", "len", "(", "vocab", ")", ",", "hidden_size_node", ")", "\n", "\n", "self", ".", "seq_edge_w", "=", "torch", ".", "nn", ".", "Embedding", ".", "from_pretrained", "(", "pmi", ",", "freeze", "=", "True", ")", "\n", "\n", "self", ".", "edges_num", "=", "edges_num", "\n", "if", "trainable_edges", ":", "\n", "            ", "self", ".", "seq_edge_w", "=", "torch", ".", "nn", ".", "Embedding", ".", "from_pretrained", "(", "torch", ".", "ones", "(", "edges_num", ",", "1", ")", ",", "freeze", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "seq_edge_w", "=", "torch", ".", "nn", ".", "Embedding", ".", "from_pretrained", "(", "pmi", ",", "freeze", "=", "True", ")", "\n", "\n", "", "self", ".", "hidden_size_node", "=", "hidden_size_node", "\n", "\n", "self", ".", "node_hidden", ".", "weight", ".", "data", ".", "copy_", "(", "torch", ".", "tensor", "(", "self", ".", "load_word2vec", "(", "'glove.6B.200d.vec.txt'", ")", ")", ")", "\n", "self", ".", "node_hidden", ".", "weight", ".", "requires_grad", "=", "True", "\n", "\n", "self", ".", "len_vocab", "=", "len", "(", "vocab", ")", "\n", "\n", "self", ".", "ngram", "=", "n_gram", "\n", "\n", "self", ".", "d", "=", "dict", "(", "zip", "(", "self", ".", "vocab", ",", "range", "(", "len", "(", "self", ".", "vocab", ")", ")", ")", ")", "\n", "\n", "self", ".", "max_length", "=", "max_length", "\n", "\n", "self", ".", "edges_matrix", "=", "edges_matrix", "\n", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "p", "=", "drop_out", ")", "\n", "\n", "self", ".", "activation", "=", "torch", ".", "nn", ".", "ReLU", "(", ")", "\n", "\n", "self", ".", "Linear", "=", "torch", ".", "nn", ".", "Linear", "(", "hidden_size_node", ",", "class_num", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.word2id": [[82, 89], ["None"], "methods", ["None"], ["", "def", "word2id", "(", "self", ",", "word", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "result", "=", "self", ".", "d", "[", "word", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "result", "=", "self", ".", "d", "[", "'UNK'", "]", "\n", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.load_word2vec": [[90, 105], ["word2vec.load", "numpy.array", "numpy.array.append", "numpy.array.append"], "methods", ["None"], ["", "def", "load_word2vec", "(", "self", ",", "word2vec_file", ")", ":", "\n", "        ", "model", "=", "word2vec", ".", "load", "(", "word2vec_file", ")", "\n", "\n", "embedding_matrix", "=", "[", "]", "\n", "\n", "for", "word", "in", "self", ".", "vocab", ":", "\n", "            ", "try", ":", "\n", "                ", "embedding_matrix", ".", "append", "(", "model", "[", "word", "]", ")", "\n", "", "except", "KeyError", ":", "\n", "# print(word)", "\n", "                ", "embedding_matrix", ".", "append", "(", "model", "[", "'the'", "]", ")", "\n", "\n", "", "", "embedding_matrix", "=", "np", ".", "array", "(", "embedding_matrix", ")", "\n", "\n", "return", "embedding_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.add_all_edges": [[106, 124], ["list", "enumerate", "set", "edges.append", "old_edge_id.append", "edges.append", "old_edge_id.append"], "methods", ["None"], ["", "def", "add_all_edges", "(", "self", ",", "doc_ids", ":", "list", ",", "old_to_new", ":", "dict", ")", ":", "\n", "        ", "edges", "=", "[", "]", "\n", "old_edge_id", "=", "[", "]", "\n", "\n", "local_vocab", "=", "list", "(", "set", "(", "doc_ids", ")", ")", "\n", "\n", "for", "i", ",", "src_word_old", "in", "enumerate", "(", "local_vocab", ")", ":", "\n", "            ", "src", "=", "old_to_new", "[", "src_word_old", "]", "\n", "for", "dst_word_old", "in", "local_vocab", "[", "i", ":", "]", ":", "\n", "                ", "dst", "=", "old_to_new", "[", "dst_word_old", "]", "\n", "edges", ".", "append", "(", "[", "src", ",", "dst", "]", ")", "\n", "old_edge_id", ".", "append", "(", "self", ".", "edges_matrix", "[", "src_word_old", ",", "dst_word_old", "]", ")", "\n", "\n", "# self circle", "\n", "", "edges", ".", "append", "(", "[", "src", ",", "src", "]", ")", "\n", "old_edge_id", ".", "append", "(", "self", ".", "edges_matrix", "[", "src_word_old", ",", "src_word_old", "]", ")", "\n", "\n", "", "return", "edges", ",", "old_edge_id", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.add_seq_edges": [[125, 144], ["enumerate", "range", "edges.append", "old_edge_id.append", "max", "min", "edges.append", "old_edge_id.append", "len"], "methods", ["None"], ["", "def", "add_seq_edges", "(", "self", ",", "doc_ids", ":", "list", ",", "old_to_new", ":", "dict", ")", ":", "\n", "        ", "edges", "=", "[", "]", "\n", "old_edge_id", "=", "[", "]", "\n", "for", "index", ",", "src_word_old", "in", "enumerate", "(", "doc_ids", ")", ":", "\n", "            ", "src", "=", "old_to_new", "[", "src_word_old", "]", "\n", "for", "i", "in", "range", "(", "max", "(", "0", ",", "index", "-", "self", ".", "ngram", ")", ",", "min", "(", "index", "+", "self", ".", "ngram", "+", "1", ",", "len", "(", "doc_ids", ")", ")", ")", ":", "\n", "                ", "dst_word_old", "=", "doc_ids", "[", "i", "]", "\n", "dst", "=", "old_to_new", "[", "dst_word_old", "]", "\n", "\n", "# - first connect the new sub_graph", "\n", "edges", ".", "append", "(", "[", "src", ",", "dst", "]", ")", "\n", "# - then get the hidden from parent_graph", "\n", "old_edge_id", ".", "append", "(", "self", ".", "edges_matrix", "[", "src_word_old", ",", "dst_word_old", "]", ")", "\n", "\n", "# self circle", "\n", "", "edges", ".", "append", "(", "[", "src", ",", "src", "]", ")", "\n", "old_edge_id", ".", "append", "(", "self", ".", "edges_matrix", "[", "src_word_old", ",", "src_word_old", "]", ")", "\n", "\n", "", "return", "edges", ",", "old_edge_id", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.seq_to_graph": [[145, 188], ["dgl.DGLGraph", "set", "dict", "dgl.DGLGraph", "dgl.DGLGraph.add_nodes", "model.Model.node_hidden", "model.Model.add_seq_edges", "edges.extend", "torch.LongTensor.extend", "torch.LongTensor.extend", "zip", "dgl.DGLGraph.add_edges", "len", "zip", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "len", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor().cuda", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "model.Model.seq_edge_w", "range", "list", "print", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "list"], "methods", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.add_seq_edges"], ["", "def", "seq_to_graph", "(", "self", ",", "doc_ids", ":", "list", ")", "->", "dgl", ".", "DGLGraph", "(", ")", ":", "\n", "        ", "if", "len", "(", "doc_ids", ")", ">", "self", ".", "max_length", ":", "\n", "            ", "doc_ids", "=", "doc_ids", "[", ":", "self", ".", "max_length", "]", "\n", "\n", "", "local_vocab", "=", "set", "(", "doc_ids", ")", "\n", "\n", "old_to_new", "=", "dict", "(", "zip", "(", "local_vocab", ",", "range", "(", "len", "(", "local_vocab", ")", ")", ")", ")", "\n", "\n", "if", "self", ".", "is_cuda", ":", "\n", "            ", "local_vocab", "=", "torch", ".", "tensor", "(", "list", "(", "local_vocab", ")", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "local_vocab", "=", "torch", ".", "tensor", "(", "list", "(", "local_vocab", ")", ")", "\n", "\n", "", "sub_graph", "=", "dgl", ".", "DGLGraph", "(", ")", "\n", "\n", "sub_graph", ".", "add_nodes", "(", "len", "(", "local_vocab", ")", ")", "\n", "local_node_hidden", "=", "self", ".", "node_hidden", "(", "local_vocab", ")", "\n", "\n", "sub_graph", ".", "ndata", "[", "'h'", "]", "=", "local_node_hidden", "\n", "\n", "seq_edges", ",", "seq_old_edges_id", "=", "self", ".", "add_seq_edges", "(", "doc_ids", ",", "old_to_new", ")", "\n", "\n", "edges", ",", "old_edge_id", "=", "[", "]", ",", "[", "]", "\n", "# edges = []", "\n", "\n", "edges", ".", "extend", "(", "seq_edges", ")", "\n", "\n", "old_edge_id", ".", "extend", "(", "seq_old_edges_id", ")", "\n", "\n", "if", "self", ".", "is_cuda", ":", "\n", "            ", "old_edge_id", "=", "torch", ".", "LongTensor", "(", "old_edge_id", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "old_edge_id", "=", "torch", ".", "LongTensor", "(", "old_edge_id", ")", "\n", "\n", "", "srcs", ",", "dsts", "=", "zip", "(", "*", "edges", ")", "\n", "sub_graph", ".", "add_edges", "(", "srcs", ",", "dsts", ")", "\n", "try", ":", "\n", "            ", "seq_edges_w", "=", "self", ".", "seq_edge_w", "(", "old_edge_id", ")", "\n", "", "except", "RuntimeError", ":", "\n", "            ", "print", "(", "old_edge_id", ")", "\n", "", "sub_graph", ".", "edata", "[", "'w'", "]", "=", "seq_edges_w", "\n", "\n", "return", "sub_graph", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.forward": [[189, 207], ["dgl.batch", "dgl.batch.update_all", "dgl.sum_nodes", "model.Model.dropout", "model.Model.activation", "model.Model.Linear", "model.Model.seq_to_graph", "dgl.function.src_mul_edge", "dgl.function.max"], "methods", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.Model.seq_to_graph"], ["", "def", "forward", "(", "self", ",", "doc_ids", ",", "is_20ng", "=", "None", ")", ":", "\n", "        ", "sub_graphs", "=", "[", "self", ".", "seq_to_graph", "(", "doc", ")", "for", "doc", "in", "doc_ids", "]", "\n", "\n", "batch_graph", "=", "dgl", ".", "batch", "(", "sub_graphs", ")", "\n", "\n", "batch_graph", ".", "update_all", "(", "\n", "message_func", "=", "dgl", ".", "function", ".", "src_mul_edge", "(", "'h'", ",", "'w'", ",", "'weighted_message'", ")", ",", "\n", "reduce_func", "=", "dgl", ".", "function", ".", "max", "(", "'weighted_message'", ",", "'h'", ")", "\n", ")", "\n", "\n", "h1", "=", "dgl", ".", "sum_nodes", "(", "batch_graph", ",", "feat", "=", "'h'", ")", "\n", "\n", "drop1", "=", "self", ".", "dropout", "(", "h1", ")", "\n", "act1", "=", "self", ".", "activation", "(", "drop1", ")", "\n", "\n", "l", "=", "self", ".", "Linear", "(", "act1", ")", "\n", "\n", "return", "l", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.gcn_msg": [[8, 10], ["None"], "function", ["None"], ["def", "gcn_msg", "(", "edge", ")", ":", "\n", "    ", "return", "{", "'m'", ":", "edge", ".", "src", "[", "'h'", "]", ",", "'w'", ":", "edge", ".", "data", "[", "'w'", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.model.gcn_reduce": [[12, 26], ["torch.mul", "torch.mul", "torch.max", "torch.max", "torch.sigmoid", "torch.sigmoid"], "function", ["None"], ["", "def", "gcn_reduce", "(", "node", ")", ":", "\n", "    ", "w", "=", "node", ".", "mailbox", "[", "'w'", "]", "\n", "\n", "new_hidden", "=", "torch", ".", "mul", "(", "w", ",", "node", ".", "mailbox", "[", "'m'", "]", ")", "\n", "\n", "new_hidden", ",", "_", "=", "torch", ".", "max", "(", "new_hidden", ",", "1", ")", "\n", "\n", "node_eta", "=", "torch", ".", "sigmoid", "(", "node", ".", "data", "[", "'eta'", "]", ")", "\n", "# node_eta = F.leaky_relu(node.data['eta'])", "\n", "\n", "# new_hidden = node_eta * node.data['h'] + (1 - node_eta) * new_hidden", "\n", "# print(new_hidden.shape)", "\n", "\n", "return", "{", "'h'", ":", "new_hidden", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.Ohsumed.__init__": [[96, 98], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "base", "=", "'./ohsumed-first-20000-docs'", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.Ohsumed.cal_freq": [[99, 117], ["os.walk", "results.keys", "print", "open", "f.write", "len", "single_target.append", "results.keys"], "methods", ["None"], ["", "def", "cal_freq", "(", "self", ")", ":", "\n", "        ", "results", "=", "{", "}", "\n", "for", "_", ",", "_", ",", "file_names", "in", "os", ".", "walk", "(", "self", ".", "base", ")", ":", "\n", "            ", "for", "file", "in", "file_names", ":", "\n", "                ", "if", "file", "not", "in", "results", ".", "keys", "(", ")", ":", "\n", "                    ", "results", "[", "file", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "results", "[", "file", "]", "+=", "1", "\n", "\n", "", "", "", "single_target", "=", "[", "]", "\n", "for", "file", "in", "results", ".", "keys", "(", ")", ":", "\n", "            ", "if", "results", "[", "file", "]", "==", "1", ":", "\n", "                ", "single_target", ".", "append", "(", "file", ")", "\n", "\n", "", "", "with", "open", "(", "'ohsumed-single-index.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "','", ".", "join", "(", "single_target", ")", ")", "\n", "\n", "", "print", "(", "len", "(", "single_target", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.Ohsumed.make_set": [[118, 143], ["os.path.join", "os.walk", "random.shuffle", "open", "f.read", "f.read.split", "open", "f.write", "len", "open", "f.read", "pre_processing.Ohsumed.replace", "pre_processing.Ohsumed.clean_text", "result.append", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.Ohsumed.clean_text"], ["", "def", "make_set", "(", "self", ")", ":", "\n", "        ", "set", "=", "'train'", "\n", "current", "=", "os", ".", "path", ".", "join", "(", "self", ".", "base", ",", "set", ")", "\n", "result", "=", "[", "]", "\n", "\n", "with", "open", "(", "'ohsumed-single-index.txt'", ")", "as", "f", ":", "\n", "            ", "raw", "=", "f", ".", "read", "(", ")", "\n", "indexs", "=", "raw", ".", "split", "(", "','", ")", "\n", "\n", "", "for", "dir", ",", "_", ",", "file_names", "in", "os", ".", "walk", "(", "current", ")", ":", "\n", "            ", "if", "len", "(", "file_names", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "", "type", "=", "dir", "[", "-", "3", ":", "]", "\n", "for", "file", "in", "file_names", ":", "\n", "                ", "if", "file", "in", "indexs", ":", "\n", "                    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dir", ",", "file", ")", ")", "as", "f", ":", "\n", "                        ", "text", "=", "f", ".", "read", "(", ")", "\n", "text", "=", "text", ".", "replace", "(", "'\\n'", ",", "' '", ")", "\n", "text", "=", "self", ".", "clean_text", "(", "text", ")", "\n", "result", ".", "append", "(", "'\\t'", ".", "join", "(", "[", "type", ",", "text", "]", ")", ")", "\n", "\n", "", "", "", "", "random", ".", "shuffle", "(", "result", ")", "\n", "\n", "with", "open", "(", "'train-shuffled.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "'\\n'", ".", "join", "(", "result", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.Ohsumed.clean_text": [[144, 161], ["stop_words.extend", "nltk.stem.WordNetLemmatizer", "pre_processing.remove_short", "pre_processing.clean_str", "nltk.tokenize.word_tokenize", "nltk.stem.WordNetLemmatizer.lemmatize"], "methods", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.remove_short", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.clean_str"], ["", "", "@", "staticmethod", "\n", "def", "clean_text", "(", "text", ")", ":", "\n", "# stop_words = stopwords.words('english')", "\n", "        ", "stop_words", "=", "[", "]", "\n", "stop_words", ".", "extend", "(", "[", "'!'", ",", "','", ",", "'.'", ",", "'?'", ",", "'-s'", ",", "'-ly'", ",", "'</s> '", ",", "'s'", "]", ")", "\n", "stemmer", "=", "WordNetLemmatizer", "(", ")", "\n", "\n", "text", "=", "remove_short", "(", "text", ")", "\n", "text", "=", "clean_str", "(", "text", ")", "\n", "\n", "text", "=", "word_tokenize", "(", "text", ")", "\n", "\n", "text", "=", "[", "word", "for", "word", "in", "text", "if", "word", "not", "in", "stop_words", "]", "\n", "\n", "text", "=", "[", "stemmer", ".", "lemmatize", "(", "word", ")", "for", "word", "in", "text", "]", "\n", "\n", "return", "' '", ".", "join", "(", "text", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.clean_str": [[7, 28], ["re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub.strip().lower", "re.sub.strip"], "function", ["None"], ["def", "clean_str", "(", "string", ")", ":", "\n", "    ", "\"\"\"\n    Tokenization/string cleaning for all datasets except for SST.\n    Original taken from https://github.com/yoonkim/CNN_sentence/blob/master/process_data.py\n    \"\"\"", "\n", "string", "=", "re", ".", "sub", "(", "r\"[^A-Za-z0-9(),!?\\'\\`]\"", ",", "\" \"", ",", "string", ")", "\n", "# string = re.sub(r\"[0-9]\", \" \", string)", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'s\"", ",", "\" is\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'ve\"", ",", "\" have\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"n\\'t\"", ",", "\" not\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'re\"", ",", "\" are\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'d\"", ",", "\" would\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'ll\"", ",", "\" will\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\",\"", ",", "\" \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"!\"", ",", "\" \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\(\"", ",", "\" \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\)\"", ",", "\" \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\?\"", ",", "\" \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'\"", ",", "\" \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\s{2,}\"", ",", "\" \"", ",", "string", ")", "\n", "return", "string", ".", "strip", "(", ")", ".", "lower", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.remove_short": [[30, 39], ["string.split", "len", "results.append"], "function", ["None"], ["", "def", "remove_short", "(", "string", ")", ":", "\n", "    ", "results", "=", "[", "]", "\n", "for", "word", "in", "string", ".", "split", "(", "' '", ")", ":", "\n", "        ", "if", "len", "(", "word", ")", "<", "3", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "results", ".", "append", "(", "word", ")", "\n", "\n", "", "", "return", "' '", ".", "join", "(", "results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.stem_corpus": [[41, 78], ["nltk.stem.WordNetLemmatizer", "f.read.split", "f.read.split", "list", "random.shuffle", "open", "f.read", "open", "f.read", "pre_processing.clean_str", "pre_processing.remove_short", "nltk.tokenize.word_tokenize", "list.append", "zip", "open", "f.write", "labels.append", "labels.append", "ValueError", "len", "nltk.stem.WordNetLemmatizer.lemmatize"], "function", ["home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.clean_str", "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.remove_short"], ["", "def", "stem_corpus", "(", ")", ":", "\n", "    ", "stemmer", "=", "WordNetLemmatizer", "(", ")", "\n", "\n", "with", "open", "(", "'data/mr/text_train.txt'", ")", "as", "f", ":", "\n", "        ", "raw_text", "=", "f", ".", "read", "(", ")", "\n", "\n", "", "with", "open", "(", "'data/mr/label_train.txt'", ")", "as", "f", ":", "\n", "        ", "raw_labels", "=", "f", ".", "read", "(", ")", "\n", "\n", "", "labels", "=", "[", "]", "\n", "for", "raw_label", "in", "raw_labels", ".", "split", "(", "'\\n'", ")", ":", "\n", "        ", "if", "raw_label", "==", "'1'", ":", "\n", "            ", "labels", ".", "append", "(", "'pos'", ")", "\n", "", "elif", "raw_label", "==", "'0'", ":", "\n", "            ", "labels", ".", "append", "(", "'neg'", ")", "\n", "", "else", ":", "\n", "            ", "if", "len", "(", "raw_label", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "", "raise", "ValueError", "(", "raw_label", ")", "\n", "\n", "", "", "corpus", "=", "raw_text", ".", "split", "(", "'\\n'", ")", "\n", "corpus", "=", "[", "clean_str", "(", "doc", ")", "for", "doc", "in", "corpus", "]", "\n", "corpus", "=", "[", "remove_short", "(", "doc", ")", "for", "doc", "in", "corpus", "]", "\n", "\n", "tokenized_corpus", "=", "[", "word_tokenize", "(", "doc", ")", "for", "doc", "in", "corpus", "]", "\n", "\n", "results", "=", "[", "]", "\n", "\n", "for", "line", "in", "tokenized_corpus", ":", "\n", "        ", "results", ".", "append", "(", "' '", ".", "join", "(", "[", "stemmer", ".", "lemmatize", "(", "word", ")", "for", "word", "in", "line", "]", ")", ")", "\n", "\n", "", "results", "=", "list", "(", "zip", "(", "labels", ",", "results", ")", ")", "\n", "results", "=", "[", "'\\t'", ".", "join", "(", "line", ")", "for", "line", "in", "results", "]", "\n", "random", ".", "shuffle", "(", "results", ")", "\n", "\n", "with", "open", "(", "'data/mr/mr-train-stemmed.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "'\\n'", ".", "join", "(", "results", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.pre_processing.cut_datasets": [[80, 93], ["open", "f.read().split", "print", "int", "open", "f.write", "open", "f.write", "os.path.join", "len", "os.path.join", "os.path.join", "f.read", "len"], "function", ["None"], ["", "", "def", "cut_datasets", "(", ")", ":", "\n", "    ", "for", "dataset", "in", "[", "'r8'", ",", "'r52'", ",", "'oh'", "]", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "'.'", ",", "'data'", ",", "dataset", ",", "dataset", "+", "'-stemmed.txt'", ")", ")", "as", "f", ":", "\n", "            ", "all_cases", "=", "f", ".", "read", "(", ")", ".", "split", "(", "'\\n'", ")", "\n", "print", "(", "'datasets: '", ",", "dataset", ",", "', total length:'", ",", "len", "(", "all_cases", ")", ")", "\n", "cut_index", "=", "int", "(", "len", "(", "all_cases", ")", "*", "0.9", ")", "\n", "train_cases", "=", "all_cases", "[", ":", "cut_index", "]", "\n", "dev_cases", "=", "all_cases", "[", "cut_index", "+", "1", ":", "]", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "'.'", ",", "'data'", ",", "dataset", ",", "dataset", "+", "'-train-stemmed.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "'\\n'", ".", "join", "(", "train_cases", ")", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "'.'", ",", "'data'", ",", "dataset", ",", "dataset", "+", "'-dev-stemmed.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "'\\n'", ".", "join", "(", "dev_cases", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mojave-pku_TextLevelGCN.None.buildGraph.GraphBuilder.__init__": [[5, 23], ["dgl.DGLGraph", "dict", "buildGraph.GraphBuilder.graph.add_nodes", "torch.nn.Parameter", "range", "torch.nn.Parameter", "zip", "len", "torch.Tensor", "len", "buildGraph.GraphBuilder.graph.add_edges", "torch.Tensor", "range", "len", "range", "buildGraph.GraphBuilder.graph.number_of_edges", "len", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "words", ",", "hiddenSizeNode", ")", ":", "\n", "        ", "self", ".", "graph", "=", "dgl", ".", "DGLGraph", "(", ")", "\n", "self", ".", "word2id", "=", "dict", "(", "zip", "(", "words", ",", "range", "(", "len", "(", "words", ")", ")", ")", ")", "\n", "self", ".", "graph", ".", "add_nodes", "(", "len", "(", "words", ")", ")", "\n", "\n", "# add hidden para for nodes.", "\n", "self", ".", "graph", ".", "ndata", "[", "'h'", "]", "=", "torch", ".", "nn", ".", "Parameter", "(", "\n", "torch", ".", "Tensor", "(", "len", "(", "words", ")", ",", "hiddenSizeNode", ")", "\n", ")", "\n", "\n", "# all node are supposed to connected.", "\n", "# warning: self-connected enabled.", "\n", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", ":", "\n", "            ", "self", ".", "graph", ".", "add_edges", "(", "i", ",", "range", "(", "0", ",", "len", "(", "words", ")", ")", ")", "\n", "\n", "# add hidden para for edges. Only edge weight (size = 1 )", "\n", "", "self", ".", "graph", ".", "edata", "[", "'h'", "]", "=", "torch", ".", "nn", ".", "Parameter", "(", "\n", "torch", ".", "Tensor", "(", "self", ".", "graph", ".", "number_of_edges", "(", ")", ",", "1", ")", "\n", "\n"]]}