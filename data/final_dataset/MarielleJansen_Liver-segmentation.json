{"home.repos.pwc.inspect_result.MarielleJansen_Liver-segmentation.None.loadData.load_data": [[11, 112], ["loadData.load_data.load_train"], "function", ["None"], ["def", "load_data", "(", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "SimpleITK", "as", "sitk", "\n", "from", "os", "import", "path", "\n", "\n", "\n", "\n", "def", "read_image", "(", "filename", ")", ":", "\n", "        ", "image", "=", "sitk", ".", "ReadImage", "(", "filename", ")", "# Use ITK to read the image", "\n", "image", "=", "sitk", ".", "GetArrayFromImage", "(", "image", ")", "# Turn ITK image object into a numpy array", "\n", "return", "image", "\n", "\n", "#    train_i = np.asarray([2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20])", "\n", "#    test_i = np.asarray([1, 3, 4]) # exclude , 11", "\n", "\n", "", "def", "unit_load", "(", "nameImage", ",", "arg", ")", ":", "\n", "        ", "basedir", "=", "r'/input/Pre-processed-6channels'", "\n", "#basedir= r'H:\\Docker\\Pre-processed-6channels'", "\n", "# Load train data; find body mask and normalize", "\n", "train", "=", "read_image", "(", "path", ".", "join", "(", "basedir", ",", "str", "(", "arg", "[", "0", "]", ")", "+", "str", "(", "nameImage", ")", ")", ")", "\n", "train", "=", "train", ".", "astype", "(", "'float32'", ")", "\n", "bg", "=", "train", "[", "0", ",", "0", ",", "0", "]", "\n", "# Zero padding of 33 in axis 1 and 2", "\n", "train_zeros", "=", "np", ".", "ones", "(", "[", "train", ".", "shape", "[", "0", "]", ",", "train", ".", "shape", "[", "1", "]", "+", "66", ",", "train", ".", "shape", "[", "2", "]", "+", "66", "]", ")", "*", "bg", "\n", "train_zeros", "[", ":", ",", "33", ":", "-", "33", ",", "33", ":", "-", "33", "]", "=", "train", "\n", "train", "=", "train_zeros", "\n", "train", "/=", "100", "# normalization", "\n", "y_train", "=", "read_image", "(", "path", ".", "join", "(", "basedir", ",", "str", "(", "arg", "[", "0", "]", ")", "+", "'_targetMask.nii'", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "arg", ")", ")", ":", "\n", "            ", "train_1", "=", "read_image", "(", "path", ".", "join", "(", "basedir", ",", "str", "(", "arg", "[", "i", "]", ")", "+", "str", "(", "nameImage", ")", ")", ")", "\n", "train_1", "=", "train_1", ".", "astype", "(", "'float32'", ")", "\n", "bg", "=", "train_1", "[", "0", ",", "0", ",", "0", "]", "\n", "y_train_1", "=", "read_image", "(", "path", ".", "join", "(", "basedir", ",", "str", "(", "arg", "[", "i", "]", ")", "+", "'_targetMask.nii'", ")", ")", "\n", "# Zero padding of 33 in axis 1 and 2", "\n", "train_zeros", "=", "np", ".", "ones", "(", "[", "train_1", ".", "shape", "[", "0", "]", ",", "train_1", ".", "shape", "[", "1", "]", "+", "66", ",", "train_1", ".", "shape", "[", "2", "]", "+", "66", "]", ")", "*", "bg", "\n", "train_zeros", "[", ":", ",", "33", ":", "-", "33", ",", "33", ":", "-", "33", "]", "=", "train_1", "\n", "train_1", "=", "train_zeros", "\n", "train_1", "/=", "100", "# normalization", "\n", "\n", "train", "=", "np", ".", "concatenate", "(", "(", "train", ",", "train_1", ")", ",", "axis", "=", "0", ")", "\n", "y_train", "=", "np", ".", "concatenate", "(", "(", "y_train", ",", "y_train_1", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "return", "train", ",", "y_train", "\n", "\n", "", "def", "load_train", "(", ")", ":", "\n", "        ", "train_i", "=", "np", ".", "asarray", "(", "[", "2", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", "]", ")", "\n", "\n", "train_x", ",", "train_y", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_1.nii'", ",", "arg", "=", "train_i", ")", "\n", "train_x", "=", "train_x", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "train_y", "=", "train_y", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "train", ",", "_", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_2.nii'", ",", "arg", "=", "train_i", ")", "\n", "train_x", "=", "np", ".", "concatenate", "(", "(", "train_x", ",", "train", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n", "train", ",", "_", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_3.nii'", ",", "arg", "=", "train_i", ")", "\n", "train_x", "=", "np", ".", "concatenate", "(", "(", "train_x", ",", "train", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n", "train", ",", "_", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_4.nii'", ",", "arg", "=", "train_i", ")", "\n", "train_x", "=", "np", ".", "concatenate", "(", "(", "train_x", ",", "train", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n", "train", ",", "_", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_5.nii'", ",", "arg", "=", "train_i", ")", "\n", "train_x", "=", "np", ".", "concatenate", "(", "(", "train_x", ",", "train", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n", "train", ",", "_", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_6.nii'", ",", "arg", "=", "train_i", ")", "\n", "train_x", "=", "np", ".", "concatenate", "(", "(", "train_x", ",", "train", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n", "\n", "print", "(", "'Loading train set complete.'", ")", "\n", "return", "train_x", ",", "train_y", "\n", "\n", "", "def", "load_test", "(", ")", ":", "\n", "        ", "test_i", "=", "np", ".", "asarray", "(", "[", "1", ",", "3", ",", "4", "]", ")", "# exclude , 11", "\n", "\n", "test_x", ",", "test_y", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_1.nii'", ",", "arg", "=", "test_i", ")", "\n", "test_x", "=", "test_x", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "test_y", "=", "test_y", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "test", ",", "_", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_2.nii'", ",", "arg", "=", "test_i", ")", "\n", "test_x", "=", "np", ".", "concatenate", "(", "(", "test_x", ",", "test", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n", "test", ",", "_", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_3.nii'", ",", "arg", "=", "test_i", ")", "\n", "test_x", "=", "np", ".", "concatenate", "(", "(", "test_x", ",", "test", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n", "test", ",", "_", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_4.nii'", ",", "arg", "=", "test_i", ")", "\n", "test_x", "=", "np", ".", "concatenate", "(", "(", "test_x", ",", "test", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n", "test", ",", "_", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_5.nii'", ",", "arg", "=", "test_i", ")", "\n", "test_x", "=", "np", ".", "concatenate", "(", "(", "test_x", ",", "test", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n", "test", ",", "_", "=", "unit_load", "(", "nameImage", "=", "'_inputImage_6.nii'", ",", "arg", "=", "test_i", ")", "\n", "test_x", "=", "np", ".", "concatenate", "(", "(", "test_x", ",", "test", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "3", ")", "\n", "\n", "print", "(", "'Loading test set complete.'", ")", "\n", "return", "test_x", ",", "test_y", "\n", "\n", "\n", "", "train_x", ",", "train_y", "=", "load_train", "(", ")", "\n", "test_x", ",", "test_y", "=", "load_test", "(", ")", "\n", "\n", "return", "train_x", ",", "train_y", ",", "test_x", ",", "test_y", "\n", "", ""]], "home.repos.pwc.inspect_result.MarielleJansen_Liver-segmentation.None.LiverSegmentationCNN.dice_coef": [[20, 29], ["tensorflow.python.keras._impl.keras.backend.sum", "tensorflow.python.keras._impl.keras.backend.abs", "tensorflow.python.keras._impl.keras.backend.sum", "tensorflow.python.keras._impl.keras.backend.sum", "tensorflow.python.keras._impl.keras.backend.square", "tensorflow.python.keras._impl.keras.backend.square"], "function", ["None"], ["def", "dice_coef", "(", "y_true", ",", "y_pred", ",", "smooth", "=", "1e-5", ")", ":", "\n", "    ", "\"\"\"\n    Dice = (2*|X & Y|)/ (|X|+ |Y|)\n         =  2*sum(|A*B|)/(sum(A^2)+sum(B^2))\n    ref: https://arxiv.org/pdf/1606.04797v1.pdf\n    THIS IS NOT DICE BUT ...\n    \"\"\"", "\n", "intersection", "=", "K", ".", "sum", "(", "K", ".", "abs", "(", "y_true", "*", "y_pred", ")", ",", "axis", "=", "-", "1", ")", "\n", "return", "(", "2.", "*", "intersection", "+", "smooth", ")", "/", "(", "K", ".", "sum", "(", "K", ".", "square", "(", "y_true", ")", ",", "-", "1", ")", "+", "K", ".", "sum", "(", "K", ".", "square", "(", "y_pred", ")", ",", "-", "1", ")", "+", "smooth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MarielleJansen_Liver-segmentation.None.LiverSegmentationCNN.dice_coef_loss": [[30, 34], ["tensorflow.python.keras._impl.keras.backend.flatten", "tensorflow.python.keras._impl.keras.backend.flatten", "LiverSegmentationCNN.dice_coef"], "function", ["home.repos.pwc.inspect_result.MarielleJansen_Liver-segmentation.None.LiverSegmentationCNN.dice_coef"], ["", "def", "dice_coef_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "y_true", "=", "K", ".", "flatten", "(", "y_true", "[", ":", ",", ":", ",", ":", ",", "1", "]", ")", "\n", "y_pred", "=", "K", ".", "flatten", "(", "y_pred", "[", ":", ",", ":", ",", ":", ",", "1", "]", ")", "\n", "return", "1", "-", "dice_coef", "(", "y_true", ",", "y_pred", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MarielleJansen_Liver-segmentation.None.LiverSegmentationCNN.diff_loss": [[35, 40], ["tensorflow.python.keras._impl.keras.backend.flatten", "tensorflow.python.keras._impl.keras.backend.flatten", "tensorflow.python.keras._impl.keras.backend.sum", "tensorflow.python.keras._impl.keras.backend.abs"], "function", ["None"], ["", "def", "diff_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "y_true", "=", "K", ".", "flatten", "(", "y_true", ")", "\n", "y_pred", "=", "K", ".", "flatten", "(", "y_pred", ")", "\n", "diff", "=", "K", ".", "sum", "(", "K", ".", "abs", "(", "y_true", "-", "y_pred", ")", ")", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.MarielleJansen_Liver-segmentation.None.LiverSegmentationCNN.build_network": [[42, 91], ["tensorflow.python.keras.layers.Input", "tensorflow.python.keras.models.Model", "tensorflow.python.keras.models.Model.compile", "tensorflow.python.keras.layers.Conv2D", "tensorflow.python.keras.layers.BatchNormalization", "tensorflow.python.keras.layers.Activation", "tensorflow.python.keras.layers.Conv2D", "tensorflow.python.keras.layers.BatchNormalization", "tensorflow.python.keras.layers.Activation", "tensorflow.python.keras.layers.Conv2D", "tensorflow.python.keras.layers.BatchNormalization", "tensorflow.python.keras.layers.Activation", "tensorflow.python.keras.layers.Conv2D", "tensorflow.python.keras.layers.BatchNormalization", "tensorflow.python.keras.layers.Activation", "tensorflow.python.keras.layers.Conv2D", "tensorflow.python.keras.layers.BatchNormalization", "tensorflow.python.keras.layers.Activation", "tensorflow.python.keras.layers.Conv2D", "tensorflow.python.keras.layers.BatchNormalization", "tensorflow.python.keras.layers.Activation", "tensorflow.python.keras.layers.Conv2D", "tensorflow.python.keras.layers.BatchNormalization", "tensorflow.python.keras.layers.Activation", "tensorflow.python.keras.layers.Dropout", "tensorflow.python.keras.layers.Conv2D", "tensorflow.python.keras.optimizers.Adam"], "function", ["None"], ["", "def", "build_network", "(", "Inputshape", ",", "num_class", ")", ":", "\n", "    ", "input_img", "=", "Input", "(", "shape", "=", "Inputshape", ",", "name", "=", "'Input_image'", ")", "\n", "\n", "conv1", "=", "Conv2D", "(", "32", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "None", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "'glorot_uniform'", ",", "name", "=", "'conv1'", ")", "(", "input_img", ")", "\n", "conv1", "=", "BatchNormalization", "(", "axis", "=", "3", ",", "name", "=", "'BN1'", ")", "(", "conv1", ")", "\n", "conv1", "=", "Activation", "(", "activation", "=", "'relu'", ",", "name", "=", "'act_1'", ")", "(", "conv1", ")", "\n", "\n", "conv2", "=", "Conv2D", "(", "32", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "None", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "'glorot_uniform'", ",", "name", "=", "'conv2'", ")", "(", "conv1", ")", "\n", "conv2", "=", "BatchNormalization", "(", "axis", "=", "3", ",", "name", "=", "'BN2'", ")", "(", "conv2", ")", "\n", "conv2", "=", "Activation", "(", "activation", "=", "'relu'", ",", "name", "=", "'act_2'", ")", "(", "conv2", ")", "\n", "\n", "conv3", "=", "Conv2D", "(", "32", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "None", ",", "dilation_rate", "=", "2", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "'glorot_uniform'", ",", "name", "=", "'conv3'", ")", "(", "conv2", ")", "\n", "conv3", "=", "BatchNormalization", "(", "axis", "=", "3", ",", "name", "=", "'BN3'", ")", "(", "conv3", ")", "\n", "conv3", "=", "Activation", "(", "activation", "=", "'relu'", ",", "name", "=", "'act_3'", ")", "(", "conv3", ")", "\n", "\n", "conv4", "=", "Conv2D", "(", "32", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "None", ",", "dilation_rate", "=", "4", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "'glorot_uniform'", ",", "name", "=", "'conv4'", ")", "(", "conv3", ")", "\n", "conv4", "=", "BatchNormalization", "(", "axis", "=", "3", ",", "name", "=", "'BN4'", ")", "(", "conv4", ")", "\n", "conv4", "=", "Activation", "(", "activation", "=", "'relu'", ",", "name", "=", "'act_4'", ")", "(", "conv4", ")", "\n", "\n", "conv5", "=", "Conv2D", "(", "32", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "None", ",", "dilation_rate", "=", "8", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "'glorot_uniform'", ",", "name", "=", "'conv5'", ")", "(", "conv4", ")", "\n", "conv5", "=", "BatchNormalization", "(", "axis", "=", "3", ",", "name", "=", "'BN5'", ")", "(", "conv5", ")", "\n", "conv5", "=", "Activation", "(", "activation", "=", "'relu'", ",", "name", "=", "'act_5'", ")", "(", "conv5", ")", "\n", "\n", "conv6", "=", "Conv2D", "(", "32", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "None", ",", "dilation_rate", "=", "16", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "'glorot_uniform'", ",", "name", "=", "'conv6'", ")", "(", "conv5", ")", "\n", "conv6", "=", "BatchNormalization", "(", "axis", "=", "3", ",", "name", "=", "'BN6'", ")", "(", "conv6", ")", "\n", "conv6", "=", "Activation", "(", "activation", "=", "'relu'", ",", "name", "=", "'act_6'", ")", "(", "conv6", ")", "\n", "\n", "conv7", "=", "Conv2D", "(", "32", ",", "(", "3", ",", "3", ")", ",", "activation", "=", "None", ",", "dilation_rate", "=", "1", ",", "use_bias", "=", "True", ",", "\n", "kernel_initializer", "=", "'glorot_uniform'", ",", "name", "=", "'conv7'", ")", "(", "conv6", ")", "\n", "conv7", "=", "BatchNormalization", "(", "axis", "=", "3", ",", "name", "=", "'BN7'", ")", "(", "conv7", ")", "\n", "out", "=", "Activation", "(", "activation", "=", "'relu'", ",", "name", "=", "'act_7'", ")", "(", "conv7", ")", "\n", "\n", "dropout", "=", "Dropout", "(", "0.5", ")", "(", "out", ")", "\n", "outFinal", "=", "Conv2D", "(", "2", ",", "(", "1", ",", "1", ")", ",", "activation", "=", "'softmax'", ",", "\n", "kernel_initializer", "=", "'glorot_uniform'", ",", "name", "=", "'outFinal'", ")", "(", "dropout", ")", "\n", "\n", "\n", "FinalModel", "=", "Model", "(", "inputs", "=", "input_img", ",", "outputs", "=", "outFinal", ")", "\n", "loss_fn", "=", "dice_coef_loss", "\n", "FinalModel", ".", "compile", "(", "optimizer", "=", "optimizers", ".", "Adam", "(", "lr", "=", "0.001", ",", "decay", "=", "0.0", ")", ",", "\n", "loss", "=", "loss_fn", ",", "\n", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "return", "FinalModel", "\n", "\n"]], "home.repos.pwc.inspect_result.MarielleJansen_Liver-segmentation.None.LiverSegmentationCNN.iterate_in_mb_train": [[92, 122], ["numpy.random.choice", "range", "numpy.zeros", "numpy.ones", "int", "numpy.concatenate", "numpy.concatenate"], "function", ["None"], ["", "def", "iterate_in_mb_train", "(", "train_x", ",", "train_y", ")", ":", "\n", "    ", "global", "batch_size", "\n", "\n", "while", "True", ":", "\n", "        ", "i", "=", "np", ".", "random", ".", "choice", "(", "train_x", ".", "shape", "[", "0", "]", ",", "batch_size", ",", "replace", "=", "False", ")", "\n", "\n", "slices_input", "=", "train_x", "[", "i", "[", "0", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "slices_target", "=", "train_y", "[", "i", "[", "0", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "slices_input", "=", "slices_input", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "slices_target", "=", "slices_target", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "for", "p", "in", "range", "(", "1", ",", "int", "(", "batch_size", ")", ")", ":", "\n", "            ", "p_input", "=", "train_x", "[", "i", "[", "p", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "p_target", "=", "train_y", "[", "i", "[", "p", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "p_input", "=", "p_input", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "p_target", "=", "p_target", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "slices_input", "=", "np", ".", "concatenate", "(", "(", "slices_input", ",", "p_input", ")", ",", "axis", "=", "0", ")", "\n", "slices_target", "=", "np", ".", "concatenate", "(", "(", "slices_target", ",", "p_target", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "mb_labels", "=", "np", ".", "zeros", "(", "[", "slices_target", ".", "shape", "[", "0", "]", ",", "slices_target", ".", "shape", "[", "1", "]", ",", "slices_target", ".", "shape", "[", "2", "]", ",", "2", "]", ")", "\n", "neg_target", "=", "np", ".", "ones", "(", "[", "slices_target", ".", "shape", "[", "0", "]", ",", "slices_target", ".", "shape", "[", "1", "]", ",", "slices_target", ".", "shape", "[", "2", "]", ",", "1", "]", ")", "\n", "neg_target", "=", "neg_target", "-", "slices_target", "\n", "mb_labels", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "=", "neg_target", "\n", "mb_labels", "[", ":", ",", ":", ",", ":", ",", "1", ":", "2", "]", "=", "slices_target", "\n", "\n", "\n", "yield", "slices_input", ",", "mb_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.MarielleJansen_Liver-segmentation.None.LiverSegmentationCNN.iterate_in_mb_test": [[123, 153], ["numpy.random.choice", "range", "numpy.zeros", "numpy.ones", "int", "int", "numpy.concatenate", "numpy.concatenate"], "function", ["None"], ["", "", "def", "iterate_in_mb_test", "(", "test_x", ",", "test_y", ")", ":", "\n", "    ", "global", "batch_size", "\n", "\n", "while", "True", ":", "\n", "        ", "i", "=", "np", ".", "random", ".", "choice", "(", "test_x", ".", "shape", "[", "0", "]", ",", "int", "(", "batch_size", ")", ",", "replace", "=", "False", ")", "\n", "\n", "slices_input", "=", "test_x", "[", "i", "[", "0", "]", ",", ":", ",", ":", "]", "\n", "slices_target", "=", "test_y", "[", "i", "[", "0", "]", ",", ":", ",", ":", "]", "\n", "\n", "slices_input", "=", "slices_input", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "slices_target", "=", "slices_target", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "for", "p", "in", "range", "(", "1", ",", "int", "(", "batch_size", ")", ")", ":", "\n", "            ", "p_input", "=", "train_x", "[", "i", "[", "p", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "p_target", "=", "train_y", "[", "i", "[", "p", "]", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "p_input", "=", "p_input", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "p_target", "=", "p_target", "[", "np", ".", "newaxis", ",", ":", ",", ":", ",", ":", "]", "\n", "\n", "slices_input", "=", "np", ".", "concatenate", "(", "(", "slices_input", ",", "p_input", ")", ",", "axis", "=", "0", ")", "\n", "slices_target", "=", "np", ".", "concatenate", "(", "(", "slices_target", ",", "p_target", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "mb_labels", "=", "np", ".", "zeros", "(", "[", "slices_target", ".", "shape", "[", "0", "]", ",", "slices_target", ".", "shape", "[", "1", "]", ",", "slices_target", ".", "shape", "[", "2", "]", ",", "2", "]", ")", "\n", "neg_target", "=", "np", ".", "ones", "(", "[", "slices_target", ".", "shape", "[", "0", "]", ",", "slices_target", ".", "shape", "[", "1", "]", ",", "slices_target", ".", "shape", "[", "2", "]", ",", "1", "]", ")", "\n", "neg_target", "=", "neg_target", "-", "slices_target", "\n", "mb_labels", "[", ":", ",", ":", ",", ":", ",", "0", ":", "1", "]", "=", "neg_target", "\n", "mb_labels", "[", ":", ",", ":", ",", ":", ",", "1", ":", "2", "]", "=", "slices_target", "\n", "\n", "\n", "yield", "slices_input", ",", "mb_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.MarielleJansen_Liver-segmentation.None.LiverSegmentationCNN.imsave": [[155, 159], ["SimpleITK.GetImageFromArray", "SimpleITK.WriteImage"], "function", ["None"], ["", "", "def", "imsave", "(", "fname", ",", "arr", ")", ":", "\n", "#arr = np.swapaxes(arr, 0, 2)", "\n", "    ", "sitk_img", "=", "sitk", ".", "GetImageFromArray", "(", "arr", ")", "\n", "sitk", ".", "WriteImage", "(", "sitk_img", ",", "fname", ")", "\n", "\n"]]}