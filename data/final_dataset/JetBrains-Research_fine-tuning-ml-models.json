{"home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.fine_tune_and_calc_results.run_models_and_save_results": [[9, 26], ["os.path.join", "os.path.join", "scripts.code2seq.fine_tune.train_and_test", "os.path.join", "scripts.code2seq.fine_tune.train_and_test", "ValueError", "time.time_ns"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.train_and_test", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.train_and_test"], ["def", "run_models_and_save_results", "(", "project_name", ":", "str", ",", "model_type", ":", "str", ",", "model_path", ":", "str", ")", "->", "None", ":", "\n", "    ", "if", "model_type", "==", "\"code2seq\"", ":", "\n", "        ", "train_and_test", "=", "c2s_train_and_test", "\n", "", "elif", "model_type", "==", "\"treelstm\"", ":", "\n", "        ", "train_and_test", "=", "tl_train_and_test", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown model\"", ")", "\n", "\n", "", "dataset_path", "=", "os", ".", "path", ".", "join", "(", "PREPROCESSED_DATASETS_DIR", ",", "project_name", ")", "\n", "\n", "run_name", "=", "f\"{project_name}_{time_ns()}\"", "\n", "\n", "new_model_folder", "=", "os", ".", "path", ".", "join", "(", "EXPERIMENT_MODEL_DIR", ",", "run_name", ",", "\"new\"", ")", "\n", "train_and_test", "(", "dataset_path", ",", "new_model_folder", ")", "\n", "\n", "trained_model_folder", "=", "os", ".", "path", ".", "join", "(", "EXPERIMENT_MODEL_DIR", ",", "run_name", ",", "\"trained\"", ")", "\n", "train_and_test", "(", "dataset_path", ",", "trained_model_folder", ",", "model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.fine_tune_and_calc_results.evaluate_on_many_datasets": [[28, 34], ["open", "fine_tune_and_calc_results.run_models_and_save_results", "project.strip"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.fine_tune_and_calc_results.run_models_and_save_results"], ["", "def", "evaluate_on_many_datasets", "(", "filename", ":", "str", ",", "model_type", ":", "str", ",", "model_path", ":", "str", ")", "->", "None", ":", "\n", "    ", "\"\"\"Evaluate models on each project's dataset\"\"\"", "\n", "\n", "with", "open", "(", "filename", ",", "\"r\"", ")", "as", "projects_file", ":", "\n", "        ", "for", "project", "in", "projects_file", ":", "\n", "            ", "run_models_and_save_results", "(", "project", ".", "strip", "(", ")", ",", "model_type", ",", "model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.repos_to_code2seq.process_single_repo": [[10, 29], ["print", "scripts.preprocessing.clone_repos.clone_repo", "print", "scripts.preprocessing.mine_method_updates.run_comment_updater", "print", "print", "scripts.preprocessing.split_mined_methods.split_dataset", "print", "print", "scripts.preprocessing.preprocess.preprocess_complete", "print"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.clone_repos.clone_repo", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.mine_method_updates.run_comment_updater", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.split_mined_methods.split_dataset", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.preprocess_complete"], ["def", "process_single_repo", "(", "link", ":", "str", ",", "model_type", ":", "str", ",", "train_part", ":", "float", ")", "->", "str", ":", "\n", "    ", "\"\"\"Preprocess one repo into code2seq dataset\"\"\"", "\n", "\n", "print", "(", "\"Cloning repo\"", ",", "link", ")", "\n", "project_name", "=", "clone_repo", "(", "link", ")", "\n", "\n", "print", "(", "\"Running update mining...\"", ")", "\n", "run_comment_updater", "(", "project_name", ")", "\n", "print", "(", "\"Mining completed!\"", ")", "\n", "\n", "print", "(", "\"Extracting added methods...\"", ")", "\n", "raw_dataset", "=", "split_dataset", "(", "project_name", ",", "train_part", ")", "\n", "print", "(", "\"Extracted!\"", ")", "\n", "\n", "print", "(", "\"Preprocessing raw java to .c2s...\"", ")", "\n", "preprocess_complete", "(", "raw_dataset", ",", "model_type", ")", "\n", "print", "(", "\"Preprocessing finished!\"", ")", "\n", "\n", "return", "project_name", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.repos_to_code2seq.process_many_repos": [[31, 40], ["open", "open", "os.path.join", "repos_to_code2seq.process_single_repo", "projects_file.write", "link.strip"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.repos_to_code2seq.process_single_repo"], ["", "def", "process_many_repos", "(", "filename", ":", "str", ",", "model_type", ":", "str", ",", "train_part", ":", "float", ")", "->", "None", ":", "\n", "    ", "\"\"\"Start preprocessing for each repo and save its destination\"\"\"", "\n", "\n", "with", "open", "(", "filename", ",", "\"r\"", ")", "as", "links_file", ",", "open", "(", "\n", "os", ".", "path", ".", "join", "(", "PREPROCESSED_DATASETS_DIR", ",", "\"project_names.txt\"", ")", ",", "\"w\"", "\n", ")", "as", "projects_file", ":", "\n", "        ", "for", "link", "in", "links_file", ":", "\n", "            ", "project", "=", "process_single_repo", "(", "link", ".", "strip", "(", ")", ",", "model_type", ",", "train_part", ")", "\n", "projects_file", ".", "write", "(", "project", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.summarize_results.save_metric_plot": [[12, 34], ["numpy.asarray", "numpy.asarray", "numpy.asarray", "matplotlib.subplots", "metric_name.upper.upper", "ax.plot", "ax.plot", "ax.plot", "ax.legend", "matplotlib.ylabel", "fig.suptitle", "fig.savefig", "print", "print", "numpy.arange", "numpy.arange", "numpy.sort", "numpy.arange", "numpy.arange", "numpy.sort", "numpy.arange", "numpy.arange", "numpy.sort", "numpy.mean", "numpy.mean"], "function", ["None"], ["def", "save_metric_plot", "(", "metric_new", ",", "metric_trained_before", ",", "metric_trained_after", ",", "metric_name", ":", "str", ")", ":", "\n", "    ", "metric_new", "=", "np", ".", "asarray", "(", "metric_new", ")", "\n", "metric_trained_before", "=", "np", ".", "asarray", "(", "metric_trained_before", ")", "\n", "metric_trained_after", "=", "np", ".", "asarray", "(", "metric_trained_after", ")", "\n", "\n", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "\n", "metric_name", "=", "metric_name", ".", "upper", "(", ")", "\n", "ax", ".", "plot", "(", "numpy", ".", "arange", "(", "1", ",", "metric_new", ".", "shape", "[", "0", "]", "+", "1", ")", ",", "np", ".", "sort", "(", "metric_new", ")", ",", "\"o\"", ",", "label", "=", "\"From scratch\"", ")", "\n", "ax", ".", "plot", "(", "\n", "numpy", ".", "arange", "(", "1", ",", "metric_trained_before", ".", "shape", "[", "0", "]", "+", "1", ")", ",", "np", ".", "sort", "(", "metric_trained_before", ")", ",", "\"o\"", ",", "label", "=", "\"Pretrained\"", "\n", ")", "\n", "ax", ".", "plot", "(", "numpy", ".", "arange", "(", "1", ",", "metric_trained_after", ".", "shape", "[", "0", "]", "+", "1", ")", ",", "np", ".", "sort", "(", "metric_trained_after", ")", ",", "\"o\"", ",", "label", "=", "\"Fine-tuned\"", ")", "\n", "ax", ".", "legend", "(", ")", "\n", "\n", "plt", ".", "ylabel", "(", "metric_name", ")", "\n", "\n", "fig", ".", "suptitle", "(", "f\"{metric_name} distribution on test parts\"", ",", "fontweight", "=", "\"bold\"", ")", "\n", "fig", ".", "savefig", "(", "f\"{metric_name}_test.png\"", ")", "\n", "\n", "print", "(", "f\"{metric_name} mean improved\"", ",", "np", ".", "mean", "(", "metric_trained_after", "-", "metric_trained_before", ")", ")", "\n", "print", "(", "f\"{metric_name} mean from scratch\"", ",", "np", ".", "mean", "(", "metric_new", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.summarize_results.save_f1_test_plot": [[36, 59], ["os.listdir", "summarize_results.save_metric_plot", "os.path.join", "open", "ast.literal_eval", "print", "f1_new.append", "open", "ast.literal_eval", "f1_trained_before.append", "open", "ast.literal_eval", "f1_trained_after.append", "os.path.join", "f.readline().replace().replace", "os.path.join", "f.readline", "os.path.join", "f.readline", "print", "f.readline().replace", "f.readline"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.summarize_results.save_metric_plot"], ["", "def", "save_f1_test_plot", "(", ")", ":", "\n", "    ", "f1_new", "=", "[", "]", "\n", "f1_trained_before", "=", "[", "]", "\n", "f1_trained_after", "=", "[", "]", "\n", "for", "project", "in", "os", ".", "listdir", "(", "RESULTS_DIR", ")", ":", "\n", "        ", "project_folder", "=", "os", ".", "path", ".", "join", "(", "RESULTS_DIR", ",", "project", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "project_folder", ",", "\"new_after.jsonl\"", ")", ")", "as", "f", ":", "\n", "            ", "metrics", "=", "ast", ".", "literal_eval", "(", "f", ".", "readline", "(", ")", ".", "replace", "(", "\"'\"", ",", "'\"'", ")", ".", "replace", "(", "\"nan\"", ",", "\"0\"", ")", ")", "\n", "print", "(", "project", ",", "metrics", "[", "\"f1\"", "]", ")", "\n", "f1_new", ".", "append", "(", "metrics", "[", "\"f1\"", "]", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "project_folder", ",", "\"trained_before.jsonl\"", ")", ")", "as", "f", ":", "\n", "            ", "metrics", "=", "ast", ".", "literal_eval", "(", "f", ".", "readline", "(", ")", ")", "\n", "f1_trained_before", ".", "append", "(", "metrics", "[", "\"f1\"", "]", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "project_folder", ",", "\"trained_after.jsonl\"", ")", ")", "as", "f", ":", "\n", "            ", "metrics", "=", "ast", ".", "literal_eval", "(", "f", ".", "readline", "(", ")", ")", "\n", "f1_trained_after", ".", "append", "(", "metrics", "[", "\"f1\"", "]", ")", "\n", "if", "metrics", "[", "\"f1\"", "]", ">", "0.99", ":", "\n", "                ", "print", "(", "project", ")", "\n", "\n", "", "", "", "save_metric_plot", "(", "f1_new", ",", "f1_trained_before", ",", "f1_trained_after", ",", "\"f1\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.summarize_results.save_text_metric_plot": [[61, 81], ["os.listdir", "summarize_results.save_metric_plot", "os.path.join", "pandas.read_csv", "math.isnan", "metric_new.append", "pandas.read_csv", "metric_trained_before.append", "pandas.read_csv", "metric_trained_after.append", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.summarize_results.save_metric_plot"], ["", "def", "save_text_metric_plot", "(", "metric_name", ":", "str", ")", ":", "\n", "    ", "metric_new", "=", "[", "]", "\n", "metric_trained_before", "=", "[", "]", "\n", "metric_trained_after", "=", "[", "]", "\n", "for", "project", "in", "os", ".", "listdir", "(", "RESULTS_DIR", ")", ":", "\n", "        ", "project_folder", "=", "os", ".", "path", ".", "join", "(", "RESULTS_DIR", ",", "project", ")", "\n", "\n", "df_new", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "project_folder", ",", "\"new_after_metrics.csv\"", ")", ",", "index_col", "=", "0", ")", "\n", "val", "=", "df_new", ".", "at", "[", "\"means\"", ",", "metric_name", "]", "\n", "if", "math", ".", "isnan", "(", "val", ")", ":", "\n", "            ", "val", "=", "0", "\n", "", "metric_new", ".", "append", "(", "val", ")", "\n", "\n", "df_trained_before", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "project_folder", ",", "\"trained_before_metrics.csv\"", ")", ",", "index_col", "=", "0", ")", "\n", "metric_trained_before", ".", "append", "(", "df_trained_before", ".", "at", "[", "\"means\"", ",", "metric_name", "]", ")", "\n", "\n", "df_trained_after", "=", "pd", ".", "read_csv", "(", "os", ".", "path", ".", "join", "(", "project_folder", ",", "\"trained_after_metrics.csv\"", ")", ",", "index_col", "=", "0", ")", "\n", "metric_trained_after", ".", "append", "(", "df_trained_after", ".", "at", "[", "\"means\"", ",", "metric_name", "]", ")", "\n", "\n", "", "save_metric_plot", "(", "metric_new", ",", "metric_trained_before", ",", "metric_trained_after", ",", "metric_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.load_tools.setup_psiminer": [[6, 16], ["os.path.exists", "git.Repo.clone_from", "git.Repo.clone_from.head.reset", "utils.RunInDir", "os.system"], "function", ["None"], ["def", "setup_psiminer", "(", ")", "->", "None", ":", "\n", "    ", "\"\"\"Load psiminer if needed\"\"\"", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "PSIMINER_DIR", ")", ":", "\n", "        ", "link", "=", "\"https://github.com/JetBrains-Research/psiminer.git\"", "\n", "repo", "=", "git", ".", "Repo", ".", "clone_from", "(", "link", ",", "PSIMINER_DIR", ",", "multi_options", "=", "[", "\"-b master\"", "]", ")", "\n", "repo", ".", "head", ".", "reset", "(", "PSIMINER_COMMIT_ID", ",", "index", "=", "True", ",", "working_tree", "=", "True", ")", "\n", "\n", "with", "RunInDir", "(", "PSIMINER_DIR", ")", ":", "\n", "            ", "os", ".", "system", "(", "\"./gradlew clean build\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.load_tools.setup_comment_updater": [[18, 24], ["os.path.exists", "git.Repo.clone_from"], "function", ["None"], ["", "", "", "def", "setup_comment_updater", "(", ")", "->", "None", ":", "\n", "    ", "\"\"\"Load CommentUpdater if needed\"\"\"", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "COMMENT_UPDATER_DIR", ")", ":", "\n", "        ", "link", "=", "\"https://github.com/egor-bogomolov/MethodUpdateMiner.git\"", "\n", "git", ".", "Repo", ".", "clone_from", "(", "link", ",", "COMMENT_UPDATER_DIR", ",", "multi_options", "=", "[", "\"--depth 1 -b dev-postprocessing\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.fine_tune_snapshot.fine_tune_self": [[10, 47], ["os.path.basename", "os.path.join", "open", "open.readlines", "os.path.normpath", "os.path.join", "len", "tempfile.TemporaryDirectory", "open", "range", "os.path.join", "os.path.join", "os.makedirs", "shutil.copy", "print", "os.path.join", "code2seq.fine_tune.train_and_test", "print", "print", "str", "os.path.join", "open", "train.writelines", "train.writelines", "open", "val.writelines", "open", "test.writelines", "str", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.train_and_test"], ["def", "fine_tune_self", "(", "dataset_path", ":", "str", ",", "model_path", ":", "str", ",", "folds_number", ":", "int", ")", ":", "\n", "    ", "\"\"\"Do k-fold cross-validation and compare quality metrics before and after fine-tuning\"\"\"", "\n", "\n", "project_name", "=", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "normpath", "(", "dataset_path", ")", ")", "\n", "start_path", "=", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "NO_TYPES_PATH", ")", "\n", "dataset", "=", "open", "(", "os", ".", "path", ".", "join", "(", "start_path", ",", "f\"{NO_TYPES_PATH}.test.c2s\"", ")", ",", "\"r\"", ")", "\n", "samples", "=", "dataset", ".", "readlines", "(", ")", "\n", "folds_number", "+=", "1", "\n", "fold_size", "=", "len", "(", "samples", ")", "//", "folds_number", "\n", "\n", "with", "tempfile", ".", "TemporaryDirectory", "(", "dir", "=", "\".\"", ")", "as", "tmp", ",", "open", "(", "\"results.txt\"", ",", "\"w\"", ")", "as", "result_file", ":", "\n", "        ", "for", "i", "in", "range", "(", "folds_number", "-", "1", ")", ":", "\n", "            ", "preprocessed_path", "=", "os", ".", "path", ".", "join", "(", "tmp", ",", "str", "(", "i", "+", "1", ")", ")", "\n", "fold_path", "=", "os", ".", "path", ".", "join", "(", "preprocessed_path", ",", "NO_TYPES_PATH", ")", "\n", "os", ".", "makedirs", "(", "fold_path", ")", "\n", "copy", "(", "os", ".", "path", ".", "join", "(", "start_path", ",", "\"nodes_vocabulary.csv\"", ")", ",", "fold_path", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "fold_path", ",", "f\"{NO_TYPES_PATH}.train.c2s\"", ")", ",", "\"w+\"", ")", "as", "train", ":", "\n", "                ", "train", ".", "writelines", "(", "samples", "[", ":", "i", "*", "fold_size", "]", ")", "\n", "train", ".", "writelines", "(", "samples", "[", "(", "i", "+", "2", ")", "*", "fold_size", ":", "]", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "fold_path", ",", "f\"{NO_TYPES_PATH}.val.c2s\"", ")", ",", "\"w+\"", ")", "as", "val", ":", "\n", "                ", "val", ".", "writelines", "(", "samples", "[", "(", "i", "+", "1", ")", "*", "fold_size", ":", "(", "i", "+", "2", ")", "*", "fold_size", "]", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "fold_path", ",", "f\"{NO_TYPES_PATH}.test.c2s\"", ")", ",", "\"w+\"", ")", "as", "test", ":", "\n", "                ", "test", ".", "writelines", "(", "samples", "[", "i", "*", "fold_size", ":", "(", "i", "+", "1", ")", "*", "fold_size", "]", ")", "\n", "\n", "", "print", "(", "f\"Fold #{i}:\"", ",", "file", "=", "result_file", ")", "\n", "\n", "tuned_model_folder", "=", "os", ".", "path", ".", "join", "(", "\"models\"", ",", "\"fine_tuned\"", ",", "project_name", ",", "str", "(", "i", ")", ")", "\n", "trained_model_path", ",", "metrics_before", ",", "metrics_after", "=", "train_and_test", "(", "\n", "preprocessed_path", ",", "\n", "tuned_model_folder", ",", "\n", "model_path", ",", "\n", ")", "\n", "print", "(", "\"Metrics before:\"", ",", "metrics_before", ",", "file", "=", "result_file", ")", "\n", "print", "(", "\"Metrics after:\"", ",", "metrics_after", ",", "file", "=", "result_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.utils.RunInDir.__init__": [[26, 29], ["os.getcwd"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path_to_dir", ":", "str", ")", "->", "None", ":", "\n", "        ", "self", ".", "cwd", "=", "os", ".", "getcwd", "(", ")", "\n", "self", ".", "path_to_dir", "=", "path_to_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.utils.RunInDir.__enter__": [[30, 32], ["os.chdir"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", "->", "None", ":", "\n", "        ", "os", ".", "chdir", "(", "self", ".", "path_to_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.utils.RunInDir.__exit__": [[33, 35], ["os.chdir"], "methods", ["None"], ["", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_val", ",", "exc_tb", ")", "->", "None", ":", "\n", "        ", "os", ".", "chdir", "(", "self", ".", "cwd", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.save_metrics.prepare_nltk": [[10, 19], ["nltk.data.find", "nltk.data.find", "nltk.download", "nltk.download"], "function", ["None"], ["def", "prepare_nltk", "(", ")", "->", "None", ":", "\n", "    ", "try", ":", "\n", "        ", "nltk", ".", "data", ".", "find", "(", "\"tokenizers/punkt\"", ")", "\n", "", "except", "LookupError", ":", "\n", "        ", "nltk", ".", "download", "(", "\"punkt\"", ")", "\n", "", "try", ":", "\n", "        ", "nltk", ".", "data", ".", "find", "(", "\"corpora/wordnet\"", ")", "\n", "", "except", "LookupError", ":", "\n", "        ", "nltk", ".", "download", "(", "\"wordnet\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.save_metrics.calc_chrf": [[21, 25], ["sacrebleu.metrics.CHRF", "sacrebleu.metrics.CHRF.sentence_score"], "function", ["None"], ["", "", "def", "calc_chrf", "(", "target", ":", "str", ",", "prediction", ":", "str", ")", "->", "float", ":", "\n", "    ", "chrf_metric", "=", "CHRF", "(", ")", "\n", "result", "=", "chrf_metric", ".", "sentence_score", "(", "prediction", ",", "[", "target", "]", ")", "\n", "return", "result", ".", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.save_metrics.calc_bleu": [[27, 31], ["sacrebleu.metrics.BLEU", "sacrebleu.metrics.BLEU.sentence_score"], "function", ["None"], ["", "def", "calc_bleu", "(", "target", ":", "str", ",", "prediction", ":", "str", ")", "->", "float", ":", "\n", "    ", "bleu_metric", "=", "BLEU", "(", "effective_order", "=", "True", ",", "smooth_method", "=", "\"add-k\"", ")", "\n", "result", "=", "bleu_metric", ".", "sentence_score", "(", "prediction", ",", "[", "target", "]", ")", "\n", "return", "result", ".", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.save_metrics.calculate_metrics": [[33, 72], ["save_metrics.prepare_nltk", "pandas.DataFrame", "numpy.array", "numpy.mean", "numpy.array", "numpy.mean", "numpy.array", "numpy.mean", "pandas.DataFrame", "pandas.concat", "save_metrics.calc_bleu", "nltk.meteor", "save_metrics.calc_chrf", "bleus.append", "meteors.append", "chrfs.append", "len", "bleus.append", "meteors.append", "chrfs.append", "sample[].split", "sample[].split"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.save_metrics.prepare_nltk", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.save_metrics.calc_bleu", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.save_metrics.calc_chrf"], ["", "def", "calculate_metrics", "(", "samples", ")", "->", "pd", ".", "DataFrame", ":", "\n", "    ", "prepare_nltk", "(", ")", "\n", "\n", "result", "=", "pd", ".", "DataFrame", "(", ")", "\n", "bleus", "=", "[", "]", "\n", "meteors", "=", "[", "]", "\n", "chrfs", "=", "[", "]", "\n", "for", "sample", "in", "samples", ":", "\n", "        ", "if", "len", "(", "sample", ")", "!=", "2", ":", "\n", "            ", "bleus", ".", "append", "(", "0.0", ")", "\n", "meteors", ".", "append", "(", "0.0", ")", "\n", "chrfs", ".", "append", "(", "0.0", ")", "\n", "continue", "\n", "", "target", ",", "predicted", "=", "sample", "[", "0", "]", ".", "split", "(", "\"|\"", ")", ",", "sample", "[", "1", "]", ".", "split", "(", "\"|\"", ")", "\n", "target_sentence", ",", "predicted_sentence", "=", "\" \"", ".", "join", "(", "target", ")", ",", "\" \"", ".", "join", "(", "predicted", ")", "\n", "\n", "bleu_val", "=", "calc_bleu", "(", "target_sentence", ",", "predicted_sentence", ")", "\n", "meteor_val", "=", "meteor", "(", "[", "target_sentence", "]", ",", "predicted_sentence", ")", "\n", "chrf_val", "=", "calc_chrf", "(", "target_sentence", ",", "predicted_sentence", ")", "\n", "\n", "bleus", ".", "append", "(", "bleu_val", ")", "\n", "meteors", ".", "append", "(", "meteor_val", ")", "\n", "chrfs", ".", "append", "(", "chrf_val", ")", "\n", "\n", "", "bleu_values", "=", "np", ".", "array", "(", "bleus", ")", "\n", "bleu_mean", "=", "np", ".", "mean", "(", "bleu_values", ")", "\n", "meteor_values", "=", "np", ".", "array", "(", "meteors", ")", "\n", "meteor_mean", "=", "np", ".", "mean", "(", "meteor_values", ")", "\n", "chrf_values", "=", "np", ".", "array", "(", "chrfs", ")", "\n", "chrf_mean", "=", "np", ".", "mean", "(", "chrf_values", ")", "\n", "\n", "result", "[", "\"bleu\"", "]", "=", "bleu_values", "\n", "result", "[", "\"meteor\"", "]", "=", "meteor_values", "\n", "result", "[", "\"chrf\"", "]", "=", "chrf_values", "\n", "\n", "means", "=", "pd", ".", "DataFrame", "(", "[", "[", "bleu_mean", ",", "meteor_mean", ",", "chrf_mean", "]", "]", ",", "columns", "=", "[", "\"bleu\"", ",", "\"meteor\"", ",", "\"chrf\"", "]", ",", "index", "=", "[", "\"means\"", "]", ")", "\n", "result", "=", "pd", ".", "concat", "(", "[", "result", ",", "means", "]", ")", "\n", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.save_metrics.calculate_and_dump_metrics": [[74, 81], ["save_metrics.calculate_metrics", "calculate_metrics.to_csv", "open", "samples.append", "tuple", "line.strip().split", "line.strip"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.save_metrics.calculate_metrics"], ["", "def", "calculate_and_dump_metrics", "(", "input_file", ":", "str", ",", "output_file", ":", "str", ")", ":", "\n", "    ", "samples", "=", "[", "]", "\n", "with", "open", "(", "input_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "samples", ".", "append", "(", "tuple", "(", "line", ".", "strip", "(", ")", ".", "split", "(", ")", ")", ")", "\n", "", "", "metrics", "=", "calculate_metrics", "(", "samples", ")", "\n", "metrics", ".", "to_csv", "(", "output_file", ",", "index", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.fine_tune_history.fine_tune_history": [[10, 18], ["experiments.repos_to_code2seq.process_single_repo", "print", "os.path.join", "os.path.join", "code2seq.fine_tune.train_and_test", "print"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.experiments.repos_to_code2seq.process_single_repo", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.train_and_test"], ["def", "fine_tune_history", "(", "link", ":", "str", ",", "train_part", ":", "float", ",", "model_path", ":", "str", ")", ":", "\n", "    ", "project_name", "=", "process_single_repo", "(", "link", ",", "train_part", ")", "\n", "\n", "print", "(", "\"Model evaluating and trained...\"", ")", "\n", "dataset_path", "=", "os", ".", "path", ".", "join", "(", "PREPROCESSED_DATASETS_DIR", ",", "project_name", ")", "\n", "model_folder", "=", "os", ".", "path", ".", "join", "(", "\"models\"", ",", "\"history_fine_tuned\"", ",", "project_name", ")", "\n", "train_and_test", "(", "dataset_path", ",", "model_folder", ",", "model_path", ")", "\n", "print", "(", "\"Finished!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.split_mined_methods.write_classes": [[11, 20], ["range", "len", "open", "f.write", "f.write", "f.write", "os.path.join"], "function", ["None"], ["def", "write_classes", "(", "methods_list", ":", "List", "[", "Dict", "[", "str", ",", "str", "]", "]", ",", "folder", ":", "str", ")", "->", "None", ":", "\n", "    ", "\"\"\"Wrap methods into separate java classes and write them\"\"\"", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "methods_list", ")", ")", ":", "\n", "        ", "filename", "=", "f\"A{i}.java\"", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "folder", ",", "filename", ")", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "f'public class A{i} {\"{\"}\\n'", ")", "\n", "f", ".", "write", "(", "methods_list", "[", "i", "]", "[", "\"code\"", "]", ")", "\n", "f", ".", "write", "(", "\"}\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.split_mined_methods.filter_duplicates": [[22, 31], ["set", "method[].split", "filtered.append", "set.add"], "function", ["None"], ["", "", "", "def", "filter_duplicates", "(", "methods", ":", "List", ")", "->", "List", ":", "\n", "    ", "raw_codes", "=", "set", "(", ")", "\n", "filtered", "=", "[", "]", "\n", "for", "method", "in", "methods", ":", "\n", "        ", "clear_code", "=", "\"\"", ".", "join", "(", "method", "[", "\"code\"", "]", ".", "split", "(", ")", ")", "\n", "if", "clear_code", "not", "in", "raw_codes", ":", "\n", "            ", "filtered", ".", "append", "(", "method", ")", "\n", "raw_codes", ".", "add", "(", "clear_code", ")", "\n", "", "", "return", "filtered", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.split_mined_methods.split_dataset": [[33, 69], ["os.path.join", "os.path.join", "os.path.join", "os.makedirs", "os.path.join", "os.makedirs", "open", "filter_duplicates.sort", "split_mined_methods.filter_duplicates", "len", "os.path.join", "git.Repo", "git.Repo.head.reset", "shutil.copytree", "range", "split_mined_methods.write_classes", "split_mined_methods.write_classes", "os.path.join", "int", "list", "map"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.split_mined_methods.filter_duplicates", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.split_mined_methods.write_classes", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.split_mined_methods.write_classes"], ["", "def", "split_dataset", "(", "project_name", ":", "str", ",", "train_part", ":", "float", ")", "->", "str", ":", "\n", "    ", "\"\"\"Process data mined by CommentUpdater in order to separate in train, test and validation samples\"\"\"", "\n", "\n", "dataset_dir", "=", "os", ".", "path", ".", "join", "(", "EXTRACTED_METHODS_DIR", ",", "project_name", ")", "\n", "train_path", "=", "os", ".", "path", ".", "join", "(", "dataset_dir", ",", "\"train\"", ")", "\n", "val_path", "=", "os", ".", "path", ".", "join", "(", "dataset_dir", ",", "\"val\"", ",", "project_name", ")", "\n", "os", ".", "makedirs", "(", "val_path", ")", "\n", "test_path", "=", "os", ".", "path", ".", "join", "(", "dataset_dir", ",", "\"test\"", ",", "project_name", ")", "\n", "os", ".", "makedirs", "(", "test_path", ")", "\n", "\n", "raw_samples", "=", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_dir", ",", "f\"{project_name}.jsonl\"", ")", ",", "\"r\"", ")", "\n", "added_methods", "=", "[", "sample", "for", "sample", "in", "list", "(", "map", "(", "json", ".", "loads", ",", "raw_samples", ")", ")", "if", "sample", "[", "\"update\"", "]", "==", "\"ADD\"", "]", "\n", "added_methods", ".", "sort", "(", "key", "=", "lambda", "method", ":", "method", "[", "\"commitTime\"", "]", ")", "\n", "added_methods", "=", "filter_duplicates", "(", "added_methods", ")", "\n", "num_of_methods", "=", "len", "(", "added_methods", ")", "\n", "\n", "start_idx", "=", "int", "(", "train_part", "*", "num_of_methods", ")", "-", "1", "\n", "snapshot_commit", "=", "added_methods", "[", "start_idx", "]", "[", "\"commitId\"", "]", "\n", "source_dir", "=", "os", ".", "path", ".", "join", "(", "CLONED_REPOS_DIR", ",", "project_name", ")", "\n", "repo", "=", "git", ".", "Repo", "(", "source_dir", ")", "\n", "repo", ".", "head", ".", "reset", "(", "snapshot_commit", ",", "index", "=", "True", ",", "working_tree", "=", "True", ")", "\n", "copytree", "(", "source_dir", ",", "train_path", ")", "\n", "\n", "new_idx", "=", "start_idx", "+", "1", "\n", "for", "idx", "in", "range", "(", "start_idx", ",", "num_of_methods", ")", ":", "\n", "        ", "if", "added_methods", "[", "idx", "]", "[", "\"commitId\"", "]", "!=", "snapshot_commit", ":", "\n", "            ", "new_idx", "=", "idx", "\n", "break", "\n", "\n", "", "", "num_of_val_methods", "=", "(", "num_of_methods", "-", "new_idx", ")", "//", "2", "\n", "val_methods", "=", "added_methods", "[", "new_idx", ":", "new_idx", "+", "num_of_val_methods", "]", "\n", "test_methods", "=", "added_methods", "[", "new_idx", "+", "num_of_val_methods", ":", "]", "\n", "write_classes", "(", "val_methods", ",", "val_path", ")", "\n", "write_classes", "(", "test_methods", ",", "test_path", ")", "\n", "\n", "return", "dataset_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.clone_repos.clone_repo": [[7, 12], ["os.path.join", "git.Repo.clone_from", "[].split", "link.split"], "function", ["None"], ["def", "clone_repo", "(", "link", ":", "str", ")", "->", "str", ":", "\n", "    ", "project_name", "=", "link", ".", "split", "(", "\".git\"", ")", "[", "0", "]", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "\n", "cloned_path", "=", "os", ".", "path", ".", "join", "(", "CLONED_REPOS_DIR", ",", "project_name", ")", "\n", "git", ".", "Repo", ".", "clone_from", "(", "link", ",", "cloned_path", ")", "\n", "return", "project_name", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.mine_method_updates.run_comment_updater": [[12, 26], ["os.path.join", "os.makedirs", "os.path.join", "open", "os.path.join", "tempfile.TemporaryDirectory", "os.path.join", "open", "open.write", "open.close", "os.system", "os.path.abspath", "os.path.join"], "function", ["None"], ["def", "run_comment_updater", "(", "project_name", ":", "str", ")", "->", "None", ":", "\n", "    ", "result_path", "=", "os", ".", "path", ".", "join", "(", "EXTRACTED_METHODS_DIR", ",", "project_name", ")", "\n", "os", ".", "makedirs", "(", "result_path", ")", "\n", "stats_path", "=", "os", ".", "path", ".", "join", "(", "result_path", ",", "\"stats.json\"", ")", "\n", "open", "(", "stats_path", ",", "\"w\"", ")", "\n", "script_path", "=", "os", ".", "path", ".", "join", "(", "COMMENT_UPDATER_DIR", ",", "\"comment_update_miner.sh\"", ")", "\n", "with", "tempfile", ".", "TemporaryDirectory", "(", "dir", "=", "\"../..\"", ")", "as", "tmp_dir", ":", "\n", "        ", "input_path", "=", "os", ".", "path", ".", "join", "(", "tmp_dir", ",", "\"input.txt\"", ")", "\n", "f", "=", "open", "(", "input_path", ",", "\"w\"", ")", "\n", "f", ".", "write", "(", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "CLONED_REPOS_DIR", ",", "project_name", ")", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "cmd", "=", "f\"bash {script_path} {input_path} {result_path} {COMMENT_UPDATER_CONFIG_DIR} {stats_path}\"", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.add_missing_files": [[12, 17], ["os.path.join", "os.path.exists", "open().close", "open"], "function", ["None"], ["def", "add_missing_files", "(", "dataset_path", ":", "str", ",", "extension", ":", "str", ")", "->", "None", ":", "\n", "    ", "for", "file", "in", "[", "f\"train.{extension}\"", ",", "f\"val.{extension}\"", ",", "f\"test.{extension}\"", "]", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "file", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "file_path", ")", ":", "\n", "            ", "open", "(", "file_path", ",", "\"a\"", ")", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.dfs": [[19, 27], ["preprocess.dfs"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.dfs"], ["", "", "", "def", "dfs", "(", "vertex", ",", "tree", ":", "List", ")", "->", "str", ":", "\n", "    ", "subtree", "=", "\"{\"", "\n", "vertex_tokens", "=", "f\"{vertex['token']},{vertex['nodeType']},{vertex['tokenType']}\"", "\n", "subtree", "+=", "vertex_tokens", "\n", "for", "child", "in", "vertex", "[", "\"children\"", "]", ":", "\n", "        ", "subtree", "+=", "dfs", "(", "tree", "[", "child", "]", ",", "tree", ")", "\n", "", "subtree", "+=", "\"}\"", "\n", "return", "subtree", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.sample_to_string": [[29, 37], ["sorted", "preprocess.dfs", "ValueError", "sample.split", "json.loads"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.dfs"], ["", "def", "sample_to_string", "(", "sample", ":", "str", ",", "extension", ":", "str", ")", "->", "str", ":", "\n", "    ", "if", "extension", "==", "\"c2s\"", ":", "\n", "        ", "return", "\"\"", ".", "join", "(", "sorted", "(", "sample", ".", "split", "(", ")", ")", ")", "\n", "", "elif", "extension", "==", "\"jsonl\"", ":", "\n", "        ", "tree", "=", "json", ".", "loads", "(", "sample", ")", "[", "\"tree\"", "]", "\n", "return", "dfs", "(", "tree", "[", "0", "]", ",", "tree", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown extension\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.fix_output": [[39, 70], ["preprocess.add_missing_files", "set", "set", "print", "print", "print", "open", "set", "open", "open", "val.writelines", "open", "open", "test.writelines", "len", "len", "len", "os.path.join", "os.path.join", "preprocess.sample_to_string", "os.path.join", "os.path.join", "preprocess.sample_to_string", "os.path.join", "preprocess.sample_to_string", "val_samples.append", "set.add", "test_samples.append", "set.add"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.add_missing_files", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.sample_to_string", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.sample_to_string", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.sample_to_string"], ["", "", "def", "fix_output", "(", "dataset_path", ":", "str", ",", "extension", ":", "str", ")", "->", "None", ":", "\n", "    ", "add_missing_files", "(", "dataset_path", ",", "extension", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "f\"train.{extension}\"", ")", ",", "\"r\"", ")", "as", "train", ":", "\n", "        ", "train_samples_set", "=", "set", "(", "sample_to_string", "(", "sample", ",", "extension", ")", "for", "sample", "in", "train", ")", "\n", "\n", "", "val_samples", "=", "[", "]", "\n", "val_samples_set", "=", "set", "(", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "f\"val.{extension}\"", ")", ",", "\"r\"", ")", "as", "val", ":", "\n", "        ", "for", "sample", "in", "val", ":", "\n", "            ", "paths", "=", "sample_to_string", "(", "sample", ",", "extension", ")", "\n", "if", "paths", "not", "in", "train_samples_set", ":", "\n", "                ", "val_samples", ".", "append", "(", "sample", ")", "\n", "val_samples_set", ".", "add", "(", "paths", ")", "\n", "", "", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "f\"val.{extension}\"", ")", ",", "\"w\"", ")", "as", "val", ":", "\n", "        ", "val", ".", "writelines", "(", "val_samples", ")", "\n", "\n", "", "test_samples", "=", "[", "]", "\n", "test_samples_set", "=", "set", "(", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "f\"test.{extension}\"", ")", ",", "\"r\"", ")", "as", "test", ":", "\n", "        ", "for", "sample", "in", "test", ":", "\n", "            ", "paths", "=", "sample_to_string", "(", "sample", ",", "extension", ")", "\n", "if", "paths", "not", "in", "train_samples_set", "and", "paths", "not", "in", "val_samples_set", ":", "\n", "                ", "test_samples", ".", "append", "(", "sample", ")", "\n", "test_samples_set", ".", "add", "(", "paths", ")", "\n", "", "", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "f\"test.{extension}\"", ")", ",", "\"w\"", ")", "as", "test", ":", "\n", "        ", "test", ".", "writelines", "(", "test_samples", ")", "\n", "\n", "", "print", "(", "\"Train:\"", ",", "len", "(", "train_samples_set", ")", ")", "\n", "print", "(", "\"Val:\"", ",", "len", "(", "val_samples_set", ")", ")", "\n", "print", "(", "\"Test:\"", ",", "len", "(", "test_samples_set", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.run_psiminer": [[72, 85], ["os.system", "preprocess.fix_output", "os.system", "preprocess.fix_output", "ValueError"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.fix_output", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.fix_output"], ["", "def", "run_psiminer", "(", "source_folder", ":", "str", ",", "destination_folder", ":", "str", ",", "model_type", ":", "str", ")", "->", "None", ":", "\n", "    ", "\"\"\"Run psiminer and set correct filenames\"\"\"", "\n", "\n", "if", "model_type", "==", "\"code2seq\"", ":", "\n", "        ", "cmd", "=", "f'bash {PSIMINER_DIR}/psiminer.sh \"{source_folder}\" \"{destination_folder}\" {PSIMINER_CODE2SEQ_CONFIG}'", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "fix_output", "(", "destination_folder", ",", "\"c2s\"", ")", "\n", "", "elif", "model_type", "==", "\"treelstm\"", ":", "\n", "        ", "cmd", "=", "f'bash {PSIMINER_DIR}/psiminer.sh \"{source_folder}\" \"{destination_folder}\" {PSIMINER_TREELSTM_CONFIG}'", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "fix_output", "(", "destination_folder", ",", "\"jsonl\"", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Unknown model\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.preprocess_complete": [[87, 94], ["scripts.load_tools.setup_psiminer", "os.path.basename", "os.path.join", "preprocess.run_psiminer", "os.path.normpath"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.load_tools.setup_psiminer", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.run_psiminer"], ["", "", "def", "preprocess_complete", "(", "project_path", ":", "str", ",", "model_type", ":", "str", ")", "->", "None", ":", "\n", "    ", "\"\"\"Transform project into test, train and val data for code2seq\"\"\"", "\n", "\n", "setup_psiminer", "(", ")", "\n", "project_name", "=", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "normpath", "(", "project_path", ")", ")", "\n", "dataset_path", "=", "os", ".", "path", ".", "join", "(", "PREPROCESSED_DATASETS_DIR", ",", "project_name", ")", "\n", "run_psiminer", "(", "project_path", ",", "dataset_path", ",", "model_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.preprocess_single": [[96, 108], ["scripts.load_tools.setup_psiminer", "os.path.basename", "os.path.normpath", "tempfile.TemporaryDirectory", "os.path.join", "os.path.join", "os.makedirs", "os.makedirs", "shutil.copytree", "preprocess.preprocess_complete", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.scripts.load_tools.setup_psiminer", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.preprocess_complete"], ["", "def", "preprocess_single", "(", "project_path", ":", "str", ",", "model_type", ":", "str", ")", "->", "None", ":", "\n", "    ", "\"\"\"Transform project into test data for code2seq via psiminer\"\"\"", "\n", "\n", "setup_psiminer", "(", ")", "\n", "project_name", "=", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "normpath", "(", "project_path", ")", ")", "\n", "with", "tempfile", ".", "TemporaryDirectory", "(", "dir", "=", "\"..\"", ")", "as", "tmp", ":", "\n", "        ", "data_path", "=", "os", ".", "path", ".", "join", "(", "tmp", ",", "project_name", ")", "\n", "new_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"test\"", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"train\"", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "\"val\"", ")", ")", "\n", "copytree", "(", "project_path", ",", "new_path", ")", "\n", "preprocess_complete", "(", "data_path", ",", "model_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.treelstm.dump_results.decode": [[11, 13], ["i.item", "i.item"], "function", ["None"], ["def", "decode", "(", "sample", ":", "torch", ".", "Tensor", ",", "id_to_label", ":", "Dict", "[", "int", ",", "str", "]", ",", "ignore_index", ":", "List", "[", "int", "]", ")", "->", "List", "[", "str", "]", ":", "\n", "    ", "return", "[", "id_to_label", "[", "i", ".", "item", "(", ")", "]", "for", "i", "in", "sample", "if", "i", ".", "item", "(", ")", "not", "in", "ignore_index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.treelstm.dump_results.extract": [[15, 65], ["fine_tune.get_pretrained_model", "dgl.seed", "torch.device", "model.to", "model.eval", "commode_utils.metrics.SequentialF1Score", "datamodule.test_dataloader", "commode_utils.metrics.SequentialF1Score.compute", "datamodule.transfer_batch_to_device", "labels.to", "graph.to.to", "model", "zip", "open", "torch.cuda.is_available", "vocabulary.label_to_id.items", "torch.no_grad", "logits.argmax", "labels.t", "logits.argmax.t", "torch.Tensor", "all_predictions.append", "torch.stack().t().to", "torch.stack().t().to", "commode_utils.metrics.SequentialF1Score.update", "os.path.join", "all_targets.append", "open", "zip", "json.loads", "print", "dump_results.decode", "torch.stack().t", "torch.stack().t", "torch.stack", "torch.stack", "x.item"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_pretrained_model", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.dump_results.decode"], ["", "def", "extract", "(", "\n", "checkpoint_path", ":", "str", ",", "\n", "data_folder", ":", "str", ",", "\n", "is_from_scratch_model", ":", "bool", ",", "\n", "vocabulary_path", ":", "str", "=", "None", ",", "\n", "result_file", ":", "str", "=", "None", ",", "\n", ")", "->", "ClassificationMetrics", ":", "\n", "    ", "model", ",", "datamodule", ",", "config", ",", "vocabulary", "=", "get_pretrained_model", "(", "\n", "checkpoint_path", ",", "data_folder", ",", "is_from_scratch_model", ",", "vocabulary_path", "\n", ")", "\n", "dgl", ".", "seed", "(", "config", ".", "seed", ")", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "model", ".", "to", "(", "device", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "id_to_label", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "vocabulary", ".", "label_to_id", ".", "items", "(", ")", "}", "\n", "PAD", "=", "\"<PAD>\"", "\n", "SOS", "=", "\"<SOS>\"", "\n", "EOS", "=", "\"<EOS>\"", "\n", "UNK", "=", "\"<UNK>\"", "\n", "ignore_index", "=", "[", "vocabulary", ".", "label_to_id", "[", "i", "]", "for", "i", "in", "[", "SOS", ",", "EOS", ",", "PAD", "]", "]", "\n", "\n", "metrics", "=", "SequentialF1Score", "(", "vocabulary", ".", "label_to_id", "[", "PAD", "]", ",", "vocabulary", ".", "label_to_id", "[", "EOS", "]", ")", "\n", "all_predictions", "=", "[", "]", "\n", "for", "batch", "in", "datamodule", ".", "test_dataloader", "(", ")", ":", "\n", "        ", "datamodule", ".", "transfer_batch_to_device", "(", "batch", ",", "device", ",", "0", ")", "\n", "labels", ",", "graph", "=", "batch", "\n", "labels", ".", "to", "(", "device", ")", "\n", "graph", "=", "graph", ".", "to", "(", "device", ")", "\n", "logits", ",", "_", "=", "model", "(", "graph", ",", "labels", ".", "shape", "[", "0", "]", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "predictions", "=", "logits", ".", "argmax", "(", "-", "1", ")", "\n", "", "for", "y_true", ",", "y_pred", "in", "zip", "(", "labels", ".", "t", "(", ")", ",", "predictions", ".", "t", "(", ")", ")", ":", "\n", "            ", "y_pred_filtered", "=", "torch", ".", "Tensor", "(", "[", "x", "for", "x", "in", "y_pred", "if", "id_to_label", "[", "x", ".", "item", "(", ")", "]", "!=", "UNK", "]", ")", "\n", "all_predictions", ".", "append", "(", "\"|\"", ".", "join", "(", "decode", "(", "y_pred_filtered", ",", "id_to_label", ",", "ignore_index", ")", ")", ")", "\n", "\n", "pred", "=", "torch", ".", "stack", "(", "[", "y_pred_filtered", "]", ")", ".", "t", "(", ")", ".", "to", "(", "device", ")", "\n", "target", "=", "torch", ".", "stack", "(", "[", "y_true", "]", ")", ".", "t", "(", ")", ".", "to", "(", "device", ")", "\n", "metrics", ".", "update", "(", "pred", ",", "target", ")", "\n", "", "", "all_targets", "=", "[", "]", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "\"test.jsonl\"", ")", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "x", "=", "json", ".", "loads", "(", "line", ")", "[", "\"label\"", "]", "\n", "all_targets", ".", "append", "(", "x", ")", "\n", "", "", "if", "result_file", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "result_file", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "for", "(", "x", ",", "y", ")", "in", "zip", "(", "all_targets", ",", "all_predictions", ")", ":", "\n", "                ", "print", "(", "x", ",", "y", ",", "file", "=", "f", ")", "\n", "\n", "", "", "", "return", "metrics", ".", "compute", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.treelstm.restore_metrics.save_metrics": [[9, 13], ["open", "json.dump", "metrics.f1_score.item", "metrics.precision.item", "metrics.recall.item"], "function", ["None"], ["def", "save_metrics", "(", "metrics", ":", "ClassificationMetrics", ",", "path", ":", "str", ")", "->", "None", ":", "\n", "    ", "with", "open", "(", "path", ",", "\"w\"", ")", "as", "output", ":", "\n", "        ", "d", "=", "{", "\"f1\"", ":", "metrics", ".", "f1_score", ".", "item", "(", ")", ",", "\"precision\"", ":", "metrics", ".", "precision", ".", "item", "(", ")", ",", "\"recall\"", ":", "metrics", ".", "recall", ".", "item", "(", ")", "}", "\n", "json", ".", "dump", "(", "d", ",", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.treelstm.test_single.test_single": [[9, 33], ["fine_tune.get_pretrained_model", "pytorch_lightning.seed_everything", "dgl.seed", "pytorch_lightning.Trainer", "pytorch_lightning.Trainer.test", "torch.cuda.is_available", "open", "print"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_pretrained_model"], ["def", "test_single", "(", "\n", "model_path", ":", "str", ",", "\n", "project_path", ":", "str", ",", "\n", "is_from_scratch_model", ":", "bool", ",", "\n", "output", ":", "str", "=", "None", ",", "\n", "vocabulary_path", ":", "str", "=", "TREELSTM_VOCABULARY", ",", "\n", ")", ":", "\n", "    ", "\"\"\"Evaluate model\"\"\"", "\n", "\n", "model", ",", "data_module", ",", "config", ",", "vocabulary", "=", "get_pretrained_model", "(", "\n", "model_path", ",", "project_path", ",", "is_from_scratch_model", ",", "vocabulary_path", "\n", ")", "\n", "seed_everything", "(", "config", ".", "seed", ")", "\n", "dgl", ".", "seed", "(", "config", ".", "seed", ")", "\n", "\n", "gpu", "=", "1", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "None", "\n", "trainer", "=", "Trainer", "(", "gpus", "=", "gpu", ")", "\n", "results", "=", "trainer", ".", "test", "(", "model", "=", "model", ",", "datamodule", "=", "data_module", ")", "\n", "\n", "if", "output", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "output", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "print", "(", "*", "results", ",", "file", "=", "f", ")", "\n", "\n", "", "", "return", "results", "[", "0", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.treelstm.fine_tune.CustomVocabularyDataModule.__init__": [[21, 24], ["embeddings_for_trees.data.jsonl_data_module.JsonlASTDatamodule.__init__"], "methods", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.CustomVocabularyDataModule.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ":", "str", ",", "config", ":", "DictConfig", ",", "vocabulary_path", ":", "str", "=", "None", ")", ":", "\n", "        ", "self", ".", "_vocabulary_path", "=", "vocabulary_path", "\n", "super", "(", ")", ".", "__init__", "(", "config", ",", "data_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.treelstm.fine_tune.CustomVocabularyDataModule.setup_vocabulary": [[25, 33], ["embeddings_for_trees.data.vocabulary.Vocabulary", "print", "commode_utils.vocabulary.build_from_scratch", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "setup_vocabulary", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_vocabulary_path", "is", "None", ":", "\n", "            ", "print", "(", "\"Can't find vocabulary, building\"", ")", "\n", "build_from_scratch", "(", "join", "(", "self", ".", "_data_folder", ",", "f\"{self._train}.jsonl\"", ")", ",", "Vocabulary", ")", "\n", "vocabulary_path", "=", "join", "(", "self", ".", "_data_folder", ",", "Vocabulary", ".", "vocab_filename", ")", "\n", "", "else", ":", "\n", "            ", "vocabulary_path", "=", "self", ".", "_vocabulary_path", "\n", "", "return", "Vocabulary", "(", "vocabulary_path", ",", "self", ".", "_config", ".", "labels_count", ",", "self", ".", "_config", ".", "tokens_count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.treelstm.fine_tune.get_config_data_module_vocabulary": [[35, 49], ["omegaconf.DictConfig", "pytorch_lightning.seed_everything", "dgl.seed", "fine_tune.CustomVocabularyDataModule", "CustomVocabularyDataModule.setup", "omegaconf.OmegaConf.load"], "function", ["None"], ["", "", "def", "get_config_data_module_vocabulary", "(", "dataset_path", ":", "str", ",", "is_from_scratch", ":", "bool", ",", "vocabulary_path", ":", "str", "=", "None", ")", ":", "\n", "    ", "config", "=", "DictConfig", "(", "OmegaConf", ".", "load", "(", "TREELSTM_CONFIG", ")", ")", "\n", "config", ".", "data_folder", "=", "dataset_path", "\n", "if", "is_from_scratch", ":", "\n", "        ", "config", ".", "data", ".", "labels_count", "=", "None", "\n", "config", ".", "data", ".", "tokens_count", "=", "None", "\n", "\n", "", "seed_everything", "(", "config", ".", "seed", ")", "\n", "dgl", ".", "seed", "(", "config", ".", "seed", ")", "\n", "\n", "data_module", "=", "CustomVocabularyDataModule", "(", "config", ".", "data_folder", ",", "config", ".", "data", ",", "vocabulary_path", ")", "\n", "data_module", ".", "setup", "(", ")", "\n", "\n", "return", "config", ",", "data_module", ",", "data_module", ".", "vocabulary", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.treelstm.fine_tune.get_untrained_model": [[51, 57], ["fine_tune.get_config_data_module_vocabulary", "embeddings_for_trees.models.TreeLSTM2Seq"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_config_data_module_vocabulary"], ["", "def", "get_untrained_model", "(", "dataset_path", ":", "str", ")", ":", "\n", "    ", "config", ",", "data_module", ",", "vocabulary", "=", "get_config_data_module_vocabulary", "(", "dataset_path", ",", "True", ")", "\n", "\n", "model", "=", "TreeLSTM2Seq", "(", "config", ".", "model", ",", "config", ".", "optimizer", ",", "data_module", ".", "vocabulary", ",", "config", ".", "train", ".", "teacher_forcing", ")", "\n", "\n", "return", "model", ",", "data_module", ",", "config", ",", "vocabulary", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.treelstm.fine_tune.get_pretrained_model": [[59, 70], ["fine_tune.get_config_data_module_vocabulary", "embeddings_for_trees.models.TreeLSTM2Seq.load_from_checkpoint", "torch.device"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_config_data_module_vocabulary"], ["", "def", "get_pretrained_model", "(", "\n", "model_path", ":", "str", ",", "dataset_path", ":", "str", ",", "is_from_scratch", ":", "bool", ",", "vocabulary_path", ":", "Optional", "[", "str", "]", "=", "TREELSTM_VOCABULARY", "\n", ")", ":", "\n", "    ", "if", "vocabulary_path", "is", "None", ":", "\n", "        ", "vocabulary_path", "=", "TREELSTM_VOCABULARY", "\n", "\n", "", "config", ",", "data_module", ",", "vocabulary", "=", "get_config_data_module_vocabulary", "(", "dataset_path", ",", "is_from_scratch", ",", "vocabulary_path", ")", "\n", "\n", "model", "=", "TreeLSTM2Seq", ".", "load_from_checkpoint", "(", "model_path", ",", "map_location", "=", "torch", ".", "device", "(", "\"cpu\"", ")", ")", "\n", "\n", "return", "model", ",", "data_module", ",", "config", ",", "vocabulary", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.treelstm.fine_tune.train_and_test": [[72, 123], ["dgl.seed", "pytorch_lightning.callbacks.ModelCheckpoint", "pytorch_lightning.callbacks.EarlyStopping", "commode_utils.callbacks.PrintEpochResultCallback", "pytorch_lightning.callbacks.LearningRateMonitor", "pytorch_lightning.Trainer", "pytorch_lightning.Trainer.test", "pytorch_lightning.Trainer.fit", "pytorch_lightning.Trainer.test", "print", "print", "print", "print", "fine_tune.get_pretrained_model", "fine_tune.get_untrained_model", "torch.cuda.is_available"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_pretrained_model", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_untrained_model"], ["", "def", "train_and_test", "(", "dataset_path", ":", "str", ",", "model_folder", ":", "str", ",", "model_path", ":", "str", "=", "None", ")", "->", "Tuple", "[", "str", ",", "Any", ",", "Any", "]", ":", "\n", "    ", "\"\"\"Trains model and return a path to best checkpoint\"\"\"", "\n", "\n", "if", "model_path", "is", "not", "None", ":", "\n", "        ", "model", ",", "data_module", ",", "config", ",", "vocabulary", "=", "get_pretrained_model", "(", "model_path", ",", "dataset_path", ",", "is_from_scratch", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "model", ",", "data_module", ",", "config", ",", "vocabulary", "=", "get_untrained_model", "(", "dataset_path", ")", "\n", "\n", "", "params", "=", "config", ".", "train", "\n", "dgl", ".", "seed", "(", "config", ".", "seed", ")", "\n", "\n", "# define model checkpoint callback", "\n", "checkpoint_callback", "=", "ModelCheckpoint", "(", "\n", "dirpath", "=", "model_folder", ",", "\n", "every_n_epochs", "=", "params", ".", "save_every_epoch", ",", "\n", "monitor", "=", "\"val/loss\"", ",", "\n", "save_top_k", "=", "1", ",", "\n", ")", "\n", "\n", "# define other callbacks", "\n", "early_stopping_callback", "=", "EarlyStopping", "(", "patience", "=", "params", ".", "patience", ",", "monitor", "=", "\"val/loss\"", ",", "verbose", "=", "True", ",", "mode", "=", "\"min\"", ")", "\n", "print_epoch_result_callback", "=", "PrintEpochResultCallback", "(", "after_test", "=", "False", ")", "\n", "lr_logger", "=", "LearningRateMonitor", "(", "\"step\"", ")", "\n", "\n", "gpu", "=", "1", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "None", "\n", "trainer", "=", "Trainer", "(", "\n", "max_epochs", "=", "params", ".", "n_epochs", ",", "\n", "gradient_clip_val", "=", "params", ".", "clip_norm", ",", "\n", "deterministic", "=", "True", ",", "\n", "check_val_every_n_epoch", "=", "params", ".", "val_every_epoch", ",", "\n", "log_every_n_steps", "=", "params", ".", "log_every_n_steps", ",", "\n", "gpus", "=", "gpu", ",", "\n", "progress_bar_refresh_rate", "=", "config", ".", "progress_bar_refresh_rate", ",", "\n", "callbacks", "=", "[", "\n", "lr_logger", ",", "\n", "early_stopping_callback", ",", "\n", "checkpoint_callback", ",", "\n", "print_epoch_result_callback", ",", "\n", "]", ",", "\n", ")", "\n", "\n", "metrics_before", "=", "trainer", ".", "test", "(", "model", "=", "model", ",", "datamodule", "=", "data_module", ")", "\n", "trainer", ".", "fit", "(", "model", "=", "model", ",", "datamodule", "=", "data_module", ")", "\n", "metrics_after", "=", "trainer", ".", "test", "(", "ckpt_path", "=", "checkpoint_callback", ".", "best_model_path", ",", "datamodule", "=", "data_module", ")", "\n", "\n", "print", "(", "\"_\"", "*", "30", ")", "\n", "print", "(", "\"Metrics before:\"", ",", "metrics_before", ")", "\n", "print", "(", "\"Metrics after:\"", ",", "metrics_after", ")", "\n", "print", "(", "\"_\"", "*", "30", ")", "\n", "\n", "return", "checkpoint_callback", ".", "best_model_path", ",", "metrics_before", ",", "metrics_after", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.dump_results.decode": [[10, 12], ["i.item", "i.item"], "function", ["None"], ["\n", "def", "decode", "(", "sample", ":", "torch", ".", "Tensor", ",", "id_to_label", ":", "Dict", "[", "int", ",", "str", "]", ",", "ignore_index", ":", "List", "[", "int", "]", ")", "->", "List", "[", "str", "]", ":", "\n", "    ", "return", "[", "id_to_label", "[", "i", ".", "item", "(", ")", "]", "for", "i", "in", "sample", "if", "i", ".", "item", "(", ")", "not", "in", "ignore_index", "]", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.dump_results.extract": [[14, 60], ["fine_tune.get_pretrained_model", "torch.device", "model.to", "model.eval", "commode_utils.metrics.SequentialF1Score", "datamodule.test_dataloader", "commode_utils.metrics.SequentialF1Score.compute", "datamodule.transfer_batch_to_device", "model.logits_from_batch", "zip", "open", "torch.cuda.is_available", "vocabulary.label_to_id.items", "torch.no_grad", "logits.argmax", "batch.labels.t", "logits.argmax.t", "torch.Tensor", "all_predictions.append", "torch.stack().t().to", "torch.stack().t().to", "commode_utils.metrics.SequentialF1Score.update", "os.path.join", "all_targets.append", "open", "zip", "line.split", "print", "dump_results.decode", "torch.stack().t", "torch.stack().t", "torch.stack", "torch.stack", "x.item"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_pretrained_model", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.dump_results.decode"], ["\n", "", "def", "extract", "(", "\n", "checkpoint_path", ":", "str", ",", "\n", "data_folder", ":", "str", ",", "\n", "is_from_scratch_model", ":", "bool", ",", "\n", "vocabulary_path", ":", "str", "=", "None", ",", "\n", "result_file", ":", "str", "=", "None", ",", "\n", ")", "->", "ClassificationMetrics", ":", "\n", "    ", "model", ",", "datamodule", ",", "config", ",", "vocabulary", "=", "get_pretrained_model", "(", "\n", "checkpoint_path", ",", "data_folder", ",", "is_from_scratch_model", ",", "vocabulary_path", "\n", ")", "\n", "dgl", ".", "seed", "(", "config", ".", "seed", ")", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "model", ".", "to", "(", "device", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "id_to_label", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "vocabulary", ".", "label_to_id", ".", "items", "(", ")", "}", "\n", "PAD", "=", "\"<PAD>\"", "\n", "SOS", "=", "\"<SOS>\"", "\n", "EOS", "=", "\"<EOS>\"", "\n", "UNK", "=", "\"<UNK>\"", "\n", "ignore_index", "=", "[", "vocabulary", ".", "label_to_id", "[", "i", "]", "for", "i", "in", "[", "SOS", ",", "EOS", ",", "PAD", "]", "]", "\n", "\n", "metrics", "=", "SequentialF1Score", "(", "vocabulary", ".", "label_to_id", "[", "PAD", "]", ",", "vocabulary", ".", "label_to_id", "[", "EOS", "]", ")", "\n", "all_predictions", "=", "[", "]", "\n", "for", "batch", "in", "datamodule", ".", "test_dataloader", "(", ")", ":", "\n", "        ", "datamodule", ".", "transfer_batch_to_device", "(", "batch", ",", "device", ",", "0", ")", "\n", "labels", ",", "graph", "=", "batch", "\n", "labels", ".", "to", "(", "device", ")", "\n", "graph", "=", "graph", ".", "to", "(", "device", ")", "\n", "logits", ",", "_", "=", "model", "(", "graph", ",", "labels", ".", "shape", "[", "0", "]", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "predictions", "=", "logits", ".", "argmax", "(", "-", "1", ")", "\n", "", "for", "y_true", ",", "y_pred", "in", "zip", "(", "labels", ".", "t", "(", ")", ",", "predictions", ".", "t", "(", ")", ")", ":", "\n", "            ", "y_pred_filtered", "=", "torch", ".", "Tensor", "(", "[", "x", "for", "x", "in", "y_pred", "if", "id_to_label", "[", "x", ".", "item", "(", ")", "]", "!=", "UNK", "]", ")", "\n", "all_predictions", ".", "append", "(", "\"|\"", ".", "join", "(", "decode", "(", "y_pred_filtered", ",", "id_to_label", ",", "ignore_index", ")", ")", ")", "\n", "\n", "pred", "=", "torch", ".", "stack", "(", "[", "y_pred_filtered", "]", ")", ".", "t", "(", ")", ".", "to", "(", "device", ")", "\n", "target", "=", "torch", ".", "stack", "(", "[", "y_true", "]", ")", ".", "t", "(", ")", ".", "to", "(", "device", ")", "\n", "metrics", ".", "update", "(", "pred", ",", "target", ")", "\n", "", "", "all_targets", "=", "[", "]", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "data_folder", ",", "\"test.jsonl\"", ")", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "x", "=", "json", ".", "loads", "(", "line", ")", "[", "\"label\"", "]", "\n", "all_targets", ".", "append", "(", "x", ")", "\n", "", "", "if", "result_file", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "result_file", ",", "\"w\"", ")", "as", "f", ":", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.restore_metrics.save_metrics": [[9, 13], ["open", "json.dump", "metrics.f1_score.item", "metrics.precision.item", "metrics.recall.item"], "function", ["None"], ["def", "save_metrics", "(", "metrics", ":", "ClassificationMetrics", ",", "path", ":", "str", ")", "->", "None", ":", "\n", "    ", "with", "open", "(", "path", ",", "\"w\"", ")", "as", "output", ":", "\n", "        ", "d", "=", "{", "\"f1\"", ":", "metrics", ".", "f1_score", ".", "item", "(", ")", ",", "\"precision\"", ":", "metrics", ".", "precision", ".", "item", "(", ")", ",", "\"recall\"", ":", "metrics", ".", "recall", ".", "item", "(", ")", "}", "\n", "json", ".", "dump", "(", "d", ",", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.test_single.get_only_metrics": [[8, 14], ["None"], "function", ["None"], ["\n", "def", "test_single", "(", "\n", "model_path", ":", "str", ",", "\n", "project_path", ":", "str", ",", "\n", "is_from_scratch_model", ":", "bool", ",", "\n", "output", ":", "str", "=", "None", ",", "\n", "vocabulary_path", ":", "str", "=", "TREELSTM_VOCABULARY", ",", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.test_single.test_single": [[16, 39], ["fine_tune.get_pretrained_model", "pytorch_lightning.seed_everything", "pytorch_lightning.Trainer", "pytorch_lightning.Trainer.test", "test_single.get_only_metrics", "torch.cuda.is_available", "open", "print"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_pretrained_model", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.test_single.get_only_metrics"], ["    ", "\"\"\"Evaluate model\"\"\"", "\n", "\n", "model", ",", "data_module", ",", "config", ",", "vocabulary", "=", "get_pretrained_model", "(", "\n", "model_path", ",", "project_path", ",", "is_from_scratch_model", ",", "vocabulary_path", "\n", ")", "\n", "seed_everything", "(", "config", ".", "seed", ")", "\n", "dgl", ".", "seed", "(", "config", ".", "seed", ")", "\n", "\n", "gpu", "=", "1", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "None", "\n", "trainer", "=", "Trainer", "(", "gpus", "=", "gpu", ")", "\n", "results", "=", "trainer", ".", "test", "(", "model", "=", "model", ",", "datamodule", "=", "data_module", ")", "\n", "\n", "if", "output", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "output", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "print", "(", "*", "results", ",", "file", "=", "f", ")", "\n", "\n", "", "", "return", "results", "[", "0", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.test_all.test_all": [[10, 33], ["os.listdir", "os.listdir", "os.path.join", "scripts.preprocessing.preprocess.preprocess_single", "open", "csv.DictWriter", "csv.DictWriter.writeheader", "os.path.join", "print", "range", "csv.DictWriter.writerow", "scripts.code2seq.test_single.test_single", "len", "os.path.join"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.preprocessing.preprocess.preprocess_single", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.test_single.test_single"], ["def", "test_all", "(", "dataset_path", ":", "str", ",", "model_path", ":", "str", ",", "results_path", ":", "str", ")", ":", "\n", "    ", "\"\"\"Evaluate and store all\"\"\"", "\n", "\n", "project_names", "=", "os", ".", "listdir", "(", "dataset_path", ")", "\n", "for", "project_name", "in", "project_names", ":", "\n", "        ", "preprocess_single", "(", "os", ".", "path", ".", "join", "(", "dataset_path", ",", "project_name", ")", ",", "\"code2seq\"", ")", "\n", "\n", "", "project_names", "=", "os", ".", "listdir", "(", "PREPROCESSED_DATASETS_DIR", ")", "\n", "result_file", "=", "os", ".", "path", ".", "join", "(", "results_path", ",", "\"results.csv\"", ")", "\n", "header", "=", "[", "\"Project\"", ",", "\"F1\"", ",", "\"Precision\"", ",", "\"Recall\"", ",", "\"Loss\"", "]", "\n", "with", "open", "(", "result_file", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "writer", "=", "csv", ".", "DictWriter", "(", "f", ",", "fieldnames", "=", "header", ")", "\n", "writer", ".", "writeheader", "(", ")", "\n", "for", "project_name", "in", "project_names", ":", "\n", "            ", "print", "(", "project_name", ")", "\n", "try", ":", "\n", "                ", "metrics", "=", "test_single", "(", "model_path", ",", "os", ".", "path", ".", "join", "(", "PREPROCESSED_DATASETS_DIR", ",", "project_name", ")", ",", "False", ")", "\n", "", "except", ":", "\n", "                ", "metrics", "=", "[", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", "\n", "", "row", "=", "{", "\"Project\"", ":", "project_name", "}", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "header", ")", ")", ":", "\n", "                ", "row", "[", "header", "[", "i", "]", "]", "=", "metrics", "[", "i", "-", "1", "]", "\n", "", "writer", ".", "writerow", "(", "row", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.CustomVocabularyDataModule.__init__": [[18, 21], ["code2seq.data.path_context_data_module.PathContextDataModule.__init__"], "methods", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.CustomVocabularyDataModule.__init__"], ["\n", "\n", "class", "CustomVocabularyDataModule", "(", "JsonlASTDatamodule", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "data_dir", ":", "str", ",", "config", ":", "DictConfig", ",", "vocabulary_path", ":", "str", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.CustomVocabularyDataModule.setup_vocabulary": [[22, 30], ["code2seq.data.vocabulary.Vocabulary", "print", "code2seq.data.vocabulary.build_from_scratch", "os.path.join", "os.path.join"], "methods", ["None"], ["        ", "self", ".", "_vocabulary_path", "=", "vocabulary_path", "\n", "super", "(", ")", ".", "__init__", "(", "config", ",", "data_dir", ")", "\n", "\n", "", "def", "setup_vocabulary", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_vocabulary_path", "is", "None", ":", "\n", "            ", "print", "(", "\"Can't find vocabulary, building\"", ")", "\n", "build_from_scratch", "(", "join", "(", "self", ".", "_data_folder", ",", "f\"{self._train}.jsonl\"", ")", ",", "Vocabulary", ")", "\n", "vocabulary_path", "=", "join", "(", "self", ".", "_data_folder", ",", "Vocabulary", ".", "vocab_filename", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_config_data_module_vocabulary": [[32, 46], ["omegaconf.DictConfig", "print", "pytorch_lightning.seed_everything", "fine_tune.CustomVocabularyDataModule", "CustomVocabularyDataModule.setup", "omegaconf.OmegaConf.load"], "function", ["None"], ["", "return", "Vocabulary", "(", "vocabulary_path", ",", "self", ".", "_config", ".", "labels_count", ",", "self", ".", "_config", ".", "tokens_count", ")", "\n", "\n", "\n", "", "", "def", "get_config_data_module_vocabulary", "(", "dataset_path", ":", "str", ",", "is_from_scratch", ":", "bool", ",", "vocabulary_path", ":", "str", "=", "None", ")", ":", "\n", "    ", "config", "=", "DictConfig", "(", "OmegaConf", ".", "load", "(", "TREELSTM_CONFIG", ")", ")", "\n", "config", ".", "data_folder", "=", "dataset_path", "\n", "if", "is_from_scratch", ":", "\n", "        ", "config", ".", "data", ".", "labels_count", "=", "None", "\n", "config", ".", "data", ".", "tokens_count", "=", "None", "\n", "\n", "", "seed_everything", "(", "config", ".", "seed", ")", "\n", "dgl", ".", "seed", "(", "config", ".", "seed", ")", "\n", "\n", "data_module", "=", "CustomVocabularyDataModule", "(", "config", ".", "data_folder", ",", "config", ".", "data", ",", "vocabulary_path", ")", "\n", "data_module", ".", "setup", "(", ")", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_untrained_model": [[48, 54], ["fine_tune.get_config_data_module_vocabulary", "code2seq.model.Code2Seq"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_config_data_module_vocabulary"], ["return", "config", ",", "data_module", ",", "data_module", ".", "vocabulary", "\n", "\n", "\n", "", "def", "get_untrained_model", "(", "dataset_path", ":", "str", ")", ":", "\n", "    ", "config", ",", "data_module", ",", "vocabulary", "=", "get_config_data_module_vocabulary", "(", "dataset_path", ",", "True", ")", "\n", "\n", "model", "=", "TreeLSTM2Seq", "(", "config", ".", "model", ",", "config", ".", "optimizer", ",", "data_module", ".", "vocabulary", ",", "config", ".", "train", ".", "teacher_forcing", ")", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_pretrained_model": [[56, 72], ["fine_tune.get_config_data_module_vocabulary", "code2seq.model.Code2Seq.load_from_checkpoint", "torch.device"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_config_data_module_vocabulary"], ["return", "model", ",", "data_module", ",", "config", ",", "vocabulary", "\n", "\n", "\n", "", "def", "get_pretrained_model", "(", "\n", "model_path", ":", "str", ",", "dataset_path", ":", "str", ",", "is_from_scratch", ":", "bool", ",", "vocabulary_path", ":", "Optional", "[", "str", "]", "=", "TREELSTM_VOCABULARY", "\n", ")", ":", "\n", "    ", "if", "vocabulary_path", "is", "None", ":", "\n", "        ", "vocabulary_path", "=", "TREELSTM_VOCABULARY", "\n", "\n", "", "config", ",", "data_module", ",", "vocabulary", "=", "get_config_data_module_vocabulary", "(", "dataset_path", ",", "is_from_scratch", ",", "vocabulary_path", ")", "\n", "\n", "model", "=", "TreeLSTM2Seq", ".", "load_from_checkpoint", "(", "model_path", ",", "map_location", "=", "torch", ".", "device", "(", "\"cpu\"", ")", ")", "\n", "\n", "return", "model", ",", "data_module", ",", "config", ",", "vocabulary", "\n", "\n", "\n", "", "def", "train_and_test", "(", "dataset_path", ":", "str", ",", "model_folder", ":", "str", ",", "model_path", ":", "str", "=", "None", ")", "->", "Tuple", "[", "str", ",", "Any", ",", "Any", "]", ":", "\n"]], "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.train_and_test": [[74, 127], ["pytorch_lightning.seed_everything", "pytorch_lightning.callbacks.ModelCheckpoint", "pytorch_lightning.callbacks.EarlyStopping", "commode_utils.callbacks.PrintEpochResultCallback", "pytorch_lightning.callbacks.LearningRateMonitor", "pytorch_lightning.Trainer", "pytorch_lightning.Trainer.test", "pytorch_lightning.Trainer.fit", "pytorch_lightning.Trainer.test", "print", "print", "print", "print", "fine_tune.get_pretrained_model", "fine_tune.get_untrained_model", "torch.cuda.is_available"], "function", ["home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_pretrained_model", "home.repos.pwc.inspect_result.JetBrains-Research_fine-tuning-ml-models.code2seq.fine_tune.get_untrained_model"], ["\n", "if", "model_path", "is", "not", "None", ":", "\n", "        ", "model", ",", "data_module", ",", "config", ",", "vocabulary", "=", "get_pretrained_model", "(", "model_path", ",", "dataset_path", ",", "is_from_scratch", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "model", ",", "data_module", ",", "config", ",", "vocabulary", "=", "get_untrained_model", "(", "dataset_path", ")", "\n", "\n", "", "params", "=", "config", ".", "train", "\n", "dgl", ".", "seed", "(", "config", ".", "seed", ")", "\n", "\n", "# define model checkpoint callback", "\n", "checkpoint_callback", "=", "ModelCheckpoint", "(", "\n", "dirpath", "=", "model_folder", ",", "\n", "every_n_epochs", "=", "params", ".", "save_every_epoch", ",", "\n", "monitor", "=", "\"val/loss\"", ",", "\n", "save_top_k", "=", "1", ",", "\n", ")", "\n", "\n", "# define other callbacks", "\n", "early_stopping_callback", "=", "EarlyStopping", "(", "patience", "=", "params", ".", "patience", ",", "monitor", "=", "\"val/loss\"", ",", "verbose", "=", "True", ",", "mode", "=", "\"min\"", ")", "\n", "print_epoch_result_callback", "=", "PrintEpochResultCallback", "(", "after_test", "=", "False", ")", "\n", "lr_logger", "=", "LearningRateMonitor", "(", "\"step\"", ")", "\n", "\n", "gpu", "=", "1", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "None", "\n", "trainer", "=", "Trainer", "(", "\n", "max_epochs", "=", "params", ".", "n_epochs", ",", "\n", "gradient_clip_val", "=", "params", ".", "clip_norm", ",", "\n", "deterministic", "=", "True", ",", "\n", "check_val_every_n_epoch", "=", "params", ".", "val_every_epoch", ",", "\n", "log_every_n_steps", "=", "params", ".", "log_every_n_steps", ",", "\n", "gpus", "=", "gpu", ",", "\n", "progress_bar_refresh_rate", "=", "config", ".", "progress_bar_refresh_rate", ",", "\n", "callbacks", "=", "[", "\n", "lr_logger", ",", "\n", "early_stopping_callback", ",", "\n", "checkpoint_callback", ",", "\n", "print_epoch_result_callback", ",", "\n", "]", ",", "\n", ")", "\n", "\n", "metrics_before", "=", "trainer", ".", "test", "(", "model", "=", "model", ",", "datamodule", "=", "data_module", ")", "\n", "trainer", ".", "fit", "(", "model", "=", "model", ",", "datamodule", "=", "data_module", ")", "\n", "metrics_after", "=", "trainer", ".", "test", "(", "ckpt_path", "=", "checkpoint_callback", ".", "best_model_path", ",", "datamodule", "=", "data_module", ")", "\n", "\n", "print", "(", "\"_\"", "*", "30", ")", "\n", "print", "(", "\"Metrics before:\"", ",", "metrics_before", ")", "\n", "print", "(", "\"Metrics after:\"", ",", "metrics_after", ")", "\n", "print", "(", "\"_\"", "*", "30", ")", "\n", "\n", "return", "checkpoint_callback", ".", "best_model_path", ",", "metrics_before", ",", "metrics_after", "\n", "\n", "\n", "", "if", "__name__", "==", "\"__main__\"", ":", "\n", "    ", "arg_parser", "=", "ArgumentParser", "(", ")", "\n", "arg_parser", ".", "add_argument", "(", "\"project\"", ",", "type", "=", "str", ",", "help", "=", "\"Path to preprocessed project dataset\"", ")", "\n"]]}