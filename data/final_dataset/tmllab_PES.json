{"home.repos.pwc.inspect_result.tmllab_PES.None.PES_semi.create_model": [[58, 62], ["networks.ResNet.PreActResNet18", "networks.ResNet.PreActResNet18.cuda"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.PreActResNet18"], ["", "def", "create_model", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "model", "=", "PreActResNet18", "(", "num_classes", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_semi.linear_rampup": [[64, 67], ["numpy.clip", "float"], "function", ["None"], ["", "def", "linear_rampup", "(", "current", ",", "warm_up", "=", "20", ",", "rampup_length", "=", "16", ")", ":", "\n", "    ", "current", "=", "np", ".", "clip", "(", "(", "current", "-", "warm_up", ")", "/", "rampup_length", ",", "0.0", ",", "1.0", ")", "\n", "return", "args", ".", "lambda_u", "*", "float", "(", "current", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_semi.MixMatch_train": [[70, 143], ["net.train", "common.tools.AverageMeter", "common.tools.AverageMeter", "common.tools.AverageMeter", "iter", "iter", "int", "range", "print", "inputs_x.size", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "numpy.random.beta", "max", "net", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "optimizer.zero_grad", "loss.backward", "optimizer.step", "common.tools.AverageMeter.update", "common.tools.AverageMeter.update", "common.tools.AverageMeter.update", "iter.next", "iter.next", "torch.zeros().scatter_.view", "inputs_x.cuda", "inputs_x2.cuda", "torch.zeros().scatter_.cuda", "inputs_u.cuda", "inputs_u2.cuda", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "net", "net", "targets_u.detach.detach", "torch.cat.size", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sum.item", "torch.mean.item", "loss.item", "len", "iter", "iter.next", "iter", "iter.next", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "ptu.sum", "PES_semi.linear_rampup", "len", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.log_softmax"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.train", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.None.PES_noisylabels.linear_rampup"], ["", "def", "MixMatch_train", "(", "epoch", ",", "net", ",", "optimizer", ",", "labeled_trainloader", ",", "unlabeled_trainloader", ",", "class_weights", ")", ":", "\n", "    ", "net", ".", "train", "(", ")", "\n", "if", "epoch", ">=", "args", ".", "num_epochs", "/", "2", ":", "\n", "        ", "args", ".", "alpha", "=", "0.75", "\n", "\n", "", "losses", "=", "AverageMeter", "(", "'Loss'", ",", "':6.2f'", ")", "\n", "losses_lx", "=", "AverageMeter", "(", "'Loss_Lx'", ",", "':6.2f'", ")", "\n", "losses_lu", "=", "AverageMeter", "(", "'Loss_Lu'", ",", "':6.5f'", ")", "\n", "\n", "labeled_train_iter", "=", "iter", "(", "labeled_trainloader", ")", "\n", "unlabeled_train_iter", "=", "iter", "(", "unlabeled_trainloader", ")", "\n", "num_iter", "=", "int", "(", "50000", "/", "args", ".", "batch_size", ")", "\n", "for", "batch_idx", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "inputs_x", ",", "inputs_x2", ",", "targets_x", "=", "labeled_train_iter", ".", "next", "(", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "labeled_train_iter", "=", "iter", "(", "labeled_trainloader", ")", "\n", "inputs_x", ",", "inputs_x2", ",", "targets_x", "=", "labeled_train_iter", ".", "next", "(", ")", "\n", "\n", "", "try", ":", "\n", "            ", "inputs_u", ",", "inputs_u2", "=", "unlabeled_train_iter", ".", "next", "(", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "unlabeled_train_iter", "=", "iter", "(", "unlabeled_trainloader", ")", "\n", "inputs_u", ",", "inputs_u2", "=", "unlabeled_train_iter", ".", "next", "(", ")", "\n", "\n", "", "batch_size", "=", "inputs_x", ".", "size", "(", "0", ")", "\n", "targets_x", "=", "torch", ".", "zeros", "(", "batch_size", ",", "args", ".", "num_class", ")", ".", "scatter_", "(", "1", ",", "targets_x", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "inputs_x", ",", "inputs_x2", ",", "targets_x", "=", "inputs_x", ".", "cuda", "(", ")", ",", "inputs_x2", ".", "cuda", "(", ")", ",", "targets_x", ".", "cuda", "(", ")", "\n", "inputs_u", ",", "inputs_u2", "=", "inputs_u", ".", "cuda", "(", ")", ",", "inputs_u2", ".", "cuda", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs_u11", "=", "net", "(", "inputs_u", ")", "\n", "outputs_u12", "=", "net", "(", "inputs_u2", ")", "\n", "\n", "pu", "=", "(", "torch", ".", "softmax", "(", "outputs_u11", ",", "dim", "=", "1", ")", "+", "torch", ".", "softmax", "(", "outputs_u12", ",", "dim", "=", "1", ")", ")", "/", "2", "\n", "ptu", "=", "pu", "**", "(", "1", "/", "args", ".", "T", ")", "# temparature sharpening", "\n", "\n", "targets_u", "=", "ptu", "/", "ptu", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# normalize", "\n", "targets_u", "=", "targets_u", ".", "detach", "(", ")", "\n", "\n", "", "all_inputs", "=", "torch", ".", "cat", "(", "[", "inputs_x", ",", "inputs_x2", ",", "inputs_u", ",", "inputs_u2", "]", ",", "dim", "=", "0", ")", "\n", "all_targets", "=", "torch", ".", "cat", "(", "[", "targets_x", ",", "targets_x", ",", "targets_u", ",", "targets_u", "]", ",", "dim", "=", "0", ")", "\n", "\n", "idx", "=", "torch", ".", "randperm", "(", "all_inputs", ".", "size", "(", "0", ")", ")", "\n", "input_a", ",", "input_b", "=", "all_inputs", ",", "all_inputs", "[", "idx", "]", "\n", "target_a", ",", "target_b", "=", "all_targets", ",", "all_targets", "[", "idx", "]", "\n", "\n", "mixmatch_l", "=", "np", ".", "random", ".", "beta", "(", "args", ".", "alpha", ",", "args", ".", "alpha", ")", "\n", "mixmatch_l", "=", "max", "(", "mixmatch_l", ",", "1", "-", "mixmatch_l", ")", "\n", "\n", "mixed_input", "=", "mixmatch_l", "*", "input_a", "+", "(", "1", "-", "mixmatch_l", ")", "*", "input_b", "\n", "mixed_target", "=", "mixmatch_l", "*", "target_a", "+", "(", "1", "-", "mixmatch_l", ")", "*", "target_b", "\n", "\n", "logits", "=", "net", "(", "mixed_input", ")", "\n", "logits_x", "=", "logits", "[", ":", "batch_size", "*", "2", "]", "\n", "logits_u", "=", "logits", "[", "batch_size", "*", "2", ":", "]", "\n", "\n", "Lx_mean", "=", "-", "torch", ".", "mean", "(", "F", ".", "log_softmax", "(", "logits_x", ",", "dim", "=", "1", ")", "*", "mixed_target", "[", ":", "batch_size", "*", "2", "]", ",", "0", ")", "\n", "Lx", "=", "torch", ".", "sum", "(", "Lx_mean", "*", "class_weights", ")", "\n", "\n", "probs_u", "=", "torch", ".", "softmax", "(", "logits_u", ",", "dim", "=", "1", ")", "\n", "Lu", "=", "torch", ".", "mean", "(", "(", "probs_u", "-", "mixed_target", "[", "batch_size", "*", "2", ":", "]", ")", "**", "2", ")", "\n", "loss", "=", "Lx", "+", "linear_rampup", "(", "epoch", "+", "batch_idx", "/", "num_iter", ",", "args", ".", "T1", ")", "*", "Lu", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "losses_lx", ".", "update", "(", "Lx", ".", "item", "(", ")", ",", "batch_size", "*", "2", ")", "\n", "losses_lu", ".", "update", "(", "Lu", ".", "item", "(", ")", ",", "len", "(", "logits", ")", "-", "batch_size", "*", "2", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "len", "(", "logits", ")", ")", "\n", "\n", "", "print", "(", "losses", ",", "losses_lx", ",", "losses_lu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_semi.splite_confident": [[145, 165], ["torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "range", "len", "confident_indexs.append", "unconfident_indexs.append"], "function", ["None"], ["", "def", "splite_confident", "(", "outs", ",", "clean_targets", ",", "noisy_targets", ")", ":", "\n", "    ", "probs", ",", "preds", "=", "torch", ".", "max", "(", "outs", ".", "data", ",", "1", ")", "\n", "\n", "confident_correct_num", "=", "0", "\n", "unconfident_correct_num", "=", "0", "\n", "confident_indexs", "=", "[", "]", "\n", "unconfident_indexs", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "noisy_targets", ")", ")", ":", "\n", "        ", "if", "preds", "[", "i", "]", "==", "noisy_targets", "[", "i", "]", ":", "\n", "            ", "confident_indexs", ".", "append", "(", "i", ")", "\n", "if", "clean_targets", "[", "i", "]", "==", "preds", "[", "i", "]", ":", "\n", "                ", "confident_correct_num", "+=", "1", "\n", "", "", "else", ":", "\n", "            ", "unconfident_indexs", ".", "append", "(", "i", ")", "\n", "if", "clean_targets", "[", "i", "]", "==", "preds", "[", "i", "]", ":", "\n", "                ", "unconfident_correct_num", "+=", "1", "\n", "\n", "# print(getTime(), \"confident and unconfident num:\", len(confident_indexs), round(confident_correct_num / len(confident_indexs) * 100, 2), len(unconfident_indexs), round(unconfident_correct_num / len(unconfident_indexs) * 100, 2))", "\n", "", "", "", "return", "confident_indexs", ",", "unconfident_indexs", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_semi.update_trainloader": [[167, 196], ["common.NoisyUtil.Semi_Unlabeled_Dataset", "torch.utils.data.DataLoader", "common.tools.predict_softmax", "PES_semi.splite_confident", "common.NoisyUtil.Semi_Labeled_Dataset", "common.NoisyUtil.Semi_Unlabeled_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "numpy.zeros", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "int", "int", "numpy.errstate", "len", "len", "numpy.mean", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.predict_softmax", "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.splite_confident"], ["", "def", "update_trainloader", "(", "model", ",", "train_data", ",", "clean_targets", ",", "noisy_targets", ")", ":", "\n", "    ", "predict_dataset", "=", "Semi_Unlabeled_Dataset", "(", "train_data", ",", "transform_train", ")", "\n", "predict_loader", "=", "DataLoader", "(", "dataset", "=", "predict_dataset", ",", "batch_size", "=", "args", ".", "batch_size", "*", "2", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "soft_outs", "=", "predict_softmax", "(", "predict_loader", ",", "model", ")", "\n", "\n", "confident_indexs", ",", "unconfident_indexs", "=", "splite_confident", "(", "soft_outs", ",", "clean_targets", ",", "noisy_targets", ")", "\n", "confident_dataset", "=", "Semi_Labeled_Dataset", "(", "train_data", "[", "confident_indexs", "]", ",", "noisy_targets", "[", "confident_indexs", "]", ",", "transform_train", ")", "\n", "unconfident_dataset", "=", "Semi_Unlabeled_Dataset", "(", "train_data", "[", "unconfident_indexs", "]", ",", "transform_train", ")", "\n", "\n", "uncon_batch", "=", "int", "(", "args", ".", "batch_size", "/", "2", ")", "if", "len", "(", "unconfident_indexs", ")", ">", "len", "(", "confident_indexs", ")", "else", "int", "(", "len", "(", "unconfident_indexs", ")", "/", "(", "len", "(", "confident_indexs", ")", "+", "len", "(", "unconfident_indexs", ")", ")", "*", "args", ".", "batch_size", ")", "\n", "con_batch", "=", "args", ".", "batch_size", "-", "uncon_batch", "\n", "\n", "labeled_trainloader", "=", "DataLoader", "(", "dataset", "=", "confident_dataset", ",", "batch_size", "=", "con_batch", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "unlabeled_trainloader", "=", "DataLoader", "(", "dataset", "=", "unconfident_dataset", ",", "batch_size", "=", "uncon_batch", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "# Loss function", "\n", "train_nums", "=", "np", ".", "zeros", "(", "args", ".", "num_class", ",", "dtype", "=", "int", ")", "\n", "for", "item", "in", "noisy_targets", "[", "confident_indexs", "]", ":", "\n", "        ", "train_nums", "[", "item", "]", "+=", "1", "\n", "\n", "# zeros are not calculated by mean", "\n", "# avoid too large numbers that may result in out of range of loss.", "\n", "", "with", "np", ".", "errstate", "(", "divide", "=", "'ignore'", ")", ":", "\n", "        ", "cw", "=", "np", ".", "mean", "(", "train_nums", "[", "train_nums", "!=", "0", "]", ")", "/", "train_nums", "\n", "cw", "[", "cw", "==", "np", ".", "inf", "]", "=", "0", "\n", "cw", "[", "cw", ">", "3", "]", "=", "3", "\n", "", "class_weights", "=", "torch", ".", "FloatTensor", "(", "cw", ")", ".", "cuda", "(", ")", "\n", "# print(\"Category\", train_nums, \"precent\", class_weights)", "\n", "return", "labeled_trainloader", ",", "unlabeled_trainloader", ",", "class_weights", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_semi.noisy_refine": [[198, 217], ["model.parameters", "model.renew_layers", "model.cuda", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "range", "model.parameters", "model.parameters", "common.tools.train", "common.tools.evaluate", "str"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet.renew_layers", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.train", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.evaluate"], ["", "def", "noisy_refine", "(", "model", ",", "train_loader", ",", "num_layer", ",", "refine_times", ")", ":", "\n", "    ", "if", "refine_times", "<=", "0", ":", "\n", "        ", "return", "model", "\n", "# frezon all layers and add a new final layer", "\n", "", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "model", ".", "renew_layers", "(", "num_layer", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "optimizer_adam", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "PES_lr", ")", "\n", "for", "epoch", "in", "range", "(", "refine_times", ")", ":", "\n", "        ", "train", "(", "model", ",", "train_loader", ",", "optimizer_adam", ",", "ceriation", ",", "epoch", ")", "\n", "_", ",", "test_acc", "=", "evaluate", "(", "model", ",", "test_loader", ",", "ceriation", ",", "\"Epoch \"", "+", "str", "(", "epoch", ")", "+", "\" Test Acc:\"", ")", "\n", "\n", "", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "True", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.ClothingData.read_key_list": [[4, 14], ["open", "print", "open.readlines", "open.close", "numpy.array", "line.strip.strip", "keyList.append"], "function", ["None"], ["def", "read_key_list", "(", "file_name", ")", ":", "\n", "    ", "keyList", "=", "[", "]", "\n", "fo", "=", "open", "(", "file_name", ",", "\"r\"", ")", "\n", "print", "(", "\"Read file:\"", ",", "fo", ".", "name", ")", "\n", "for", "line", "in", "fo", ".", "readlines", "(", ")", ":", "\n", "        ", "line", "=", "line", ".", "strip", "(", ")", "\n", "keyList", ".", "append", "(", "line", ")", "\n", "\n", "", "fo", ".", "close", "(", ")", "\n", "return", "np", ".", "array", "(", "keyList", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.ClothingData.read_share_list": [[16, 32], ["open", "print", "open.readlines", "open.close", "line.strip().split", "numpy.array", "numpy.array", "numpy.array", "len", "key_list.append", "noisy_labels_list.append", "clean_labels_list.append", "print", "line.strip"], "function", ["None"], ["", "def", "read_share_list", "(", "file_name", ")", ":", "\n", "    ", "key_list", "=", "[", "]", "\n", "noisy_labels_list", "=", "[", "]", "\n", "clean_labels_list", "=", "[", "]", "\n", "fo", "=", "open", "(", "file_name", ",", "\"r\"", ")", "\n", "print", "(", "\"Read file:\"", ",", "fo", ".", "name", ")", "\n", "for", "line", "in", "fo", ".", "readlines", "(", ")", ":", "\n", "        ", "strs", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\";;\"", ")", "\n", "if", "(", "len", "(", "strs", ")", "==", "3", ")", ":", "\n", "            ", "key_list", ".", "append", "(", "strs", "[", "0", "]", ")", "\n", "noisy_labels_list", ".", "append", "(", "strs", "[", "1", "]", ")", "\n", "clean_labels_list", ".", "append", "(", "strs", "[", "2", "]", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "line", ")", "\n", "", "", "fo", ".", "close", "(", ")", "\n", "return", "np", ".", "array", "(", "key_list", ")", ",", "np", ".", "array", "(", "noisy_labels_list", ",", "dtype", "=", "np", ".", "int", ")", ",", "np", ".", "array", "(", "clean_labels_list", ",", "dtype", "=", "np", ".", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.ClothingData.read_kv_map": [[34, 47], ["open", "print", "open.readlines", "open.close", "line.strip.strip", "line.strip.split", "len", "print"], "function", ["None"], ["", "def", "read_kv_map", "(", "file_name", ")", ":", "\n", "    ", "kv_map", "=", "{", "}", "\n", "fo", "=", "open", "(", "file_name", ",", "\"r\"", ")", "\n", "print", "(", "\"Read file:\"", ",", "fo", ".", "name", ")", "\n", "for", "line", "in", "fo", ".", "readlines", "(", ")", ":", "\n", "        ", "line", "=", "line", ".", "strip", "(", ")", "\n", "kv_strs", "=", "line", ".", "split", "(", "\" \"", ")", "\n", "if", "(", "len", "(", "kv_strs", ")", "==", "2", ")", ":", "\n", "            ", "kv_map", "[", "kv_strs", "[", "0", "]", "]", "=", "kv_strs", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "print", "(", "line", ")", "\n", "", "", "fo", ".", "close", "(", ")", "\n", "return", "kv_map", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.ClothingData.get_value_from_kv": [[49, 58], ["numpy.array", "labels.append", "print"], "function", ["None"], ["", "def", "get_value_from_kv", "(", "keys", ",", "kvs", ")", ":", "\n", "    ", "labels", "=", "[", "]", "\n", "for", "key", "in", "keys", ":", "\n", "        ", "if", "(", "key", "in", "kvs", ")", ":", "\n", "            ", "labels", ".", "append", "(", "kvs", "[", "key", "]", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "key", ",", "\"dose not exists in kvs...\"", ")", "\n", "\n", "", "", "return", "np", ".", "array", "(", "labels", ",", "dtype", "=", "np", ".", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_noisylabels.create_model": [[66, 70], ["networks.ResNet.ResNet34", "networks.ResNet.ResNet34.cuda"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet34"], ["", "def", "create_model", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "model", "=", "ResNet34", "(", "num_classes", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_noisylabels.write_logs": [[72, 78], ["open", "open.write", "open.close", "open.write", "str", "str", "str", "common.tools.getTime", "common.tools.getTime"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.getTime", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.getTime"], ["", "def", "write_logs", "(", "title", ",", "args", ",", "best_test_acc", ")", ":", "\n", "    ", "f", "=", "open", "(", "\"./logs/results.txt\"", ",", "\"a\"", ")", "\n", "if", "args", "is", "not", "None", ":", "\n", "        ", "f", ".", "write", "(", "\"\\n\"", "+", "getTime", "(", ")", "+", "\" \"", "+", "str", "(", "args", ")", "+", "\"\\n\"", ")", "\n", "", "f", ".", "write", "(", "getTime", "(", ")", "+", "\" \"", "+", "title", "+", "\" seed-\"", "+", "str", "(", "args", ".", "seed", ")", "+", "\", Best Test Acc: \"", "+", "str", "(", "best_test_acc", ")", "+", "\"\\n\"", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_noisylabels.linear_rampup": [[80, 83], ["numpy.clip", "float"], "function", ["None"], ["", "def", "linear_rampup", "(", "current", ",", "warm_up", "=", "20", ",", "rampup_length", "=", "16", ")", ":", "\n", "    ", "current", "=", "np", ".", "clip", "(", "(", "current", "-", "warm_up", ")", "/", "rampup_length", ",", "0.0", ",", "1.0", ")", "\n", "return", "args", ".", "lambda_u", "*", "float", "(", "current", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_noisylabels.MixMatch_train": [[86, 159], ["net.train", "common.tools.AverageMeter", "common.tools.AverageMeter", "common.tools.AverageMeter", "iter", "iter", "int", "range", "print", "inputs_x.size", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.zeros().scatter_", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "numpy.random.beta", "max", "net", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "optimizer.zero_grad", "loss.backward", "optimizer.step", "common.tools.AverageMeter.update", "common.tools.AverageMeter.update", "common.tools.AverageMeter.update", "iter.next", "iter.next", "torch.zeros().scatter_.view", "inputs_x.cuda", "inputs_x2.cuda", "torch.zeros().scatter_.cuda", "inputs_u.cuda", "inputs_u2.cuda", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "net", "net", "targets_u.detach.detach", "torch.cat.size", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.sum.item", "torch.mean.item", "loss.item", "len", "iter", "iter.next", "iter", "iter.next", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "ptu.sum", "PES_noisylabels.linear_rampup", "len", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.log_softmax"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.train", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.None.PES_noisylabels.linear_rampup"], ["", "def", "MixMatch_train", "(", "epoch", ",", "net", ",", "optimizer", ",", "labeled_trainloader", ",", "unlabeled_trainloader", ",", "class_weights", ")", ":", "\n", "    ", "net", ".", "train", "(", ")", "\n", "if", "epoch", ">=", "args", ".", "num_epochs", "/", "2", ":", "\n", "        ", "args", ".", "alpha", "=", "0.75", "\n", "\n", "", "losses", "=", "AverageMeter", "(", "'Loss'", ",", "':6.2f'", ")", "\n", "losses_lx", "=", "AverageMeter", "(", "'Loss_Lx'", ",", "':6.2f'", ")", "\n", "losses_lu", "=", "AverageMeter", "(", "'Loss_Lu'", ",", "':6.5f'", ")", "\n", "\n", "labeled_train_iter", "=", "iter", "(", "labeled_trainloader", ")", "\n", "unlabeled_train_iter", "=", "iter", "(", "unlabeled_trainloader", ")", "\n", "num_iter", "=", "int", "(", "50000", "/", "args", ".", "batch_size", ")", "\n", "for", "batch_idx", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "inputs_x", ",", "inputs_x2", ",", "targets_x", "=", "labeled_train_iter", ".", "next", "(", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "labeled_train_iter", "=", "iter", "(", "labeled_trainloader", ")", "\n", "inputs_x", ",", "inputs_x2", ",", "targets_x", "=", "labeled_train_iter", ".", "next", "(", ")", "\n", "\n", "", "try", ":", "\n", "            ", "inputs_u", ",", "inputs_u2", "=", "unlabeled_train_iter", ".", "next", "(", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "unlabeled_train_iter", "=", "iter", "(", "unlabeled_trainloader", ")", "\n", "inputs_u", ",", "inputs_u2", "=", "unlabeled_train_iter", ".", "next", "(", ")", "\n", "\n", "", "batch_size", "=", "inputs_x", ".", "size", "(", "0", ")", "\n", "targets_x", "=", "torch", ".", "zeros", "(", "batch_size", ",", "args", ".", "num_class", ")", ".", "scatter_", "(", "1", ",", "targets_x", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "inputs_x", ",", "inputs_x2", ",", "targets_x", "=", "inputs_x", ".", "cuda", "(", ")", ",", "inputs_x2", ".", "cuda", "(", ")", ",", "targets_x", ".", "cuda", "(", ")", "\n", "inputs_u", ",", "inputs_u2", "=", "inputs_u", ".", "cuda", "(", ")", ",", "inputs_u2", ".", "cuda", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs_u11", "=", "net", "(", "inputs_u", ")", "\n", "outputs_u12", "=", "net", "(", "inputs_u2", ")", "\n", "\n", "pu", "=", "(", "torch", ".", "softmax", "(", "outputs_u11", ",", "dim", "=", "1", ")", "+", "torch", ".", "softmax", "(", "outputs_u12", ",", "dim", "=", "1", ")", ")", "/", "2", "\n", "ptu", "=", "pu", "**", "(", "1", "/", "args", ".", "T", ")", "# temparature sharpening", "\n", "\n", "targets_u", "=", "ptu", "/", "ptu", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# normalize", "\n", "targets_u", "=", "targets_u", ".", "detach", "(", ")", "\n", "\n", "", "all_inputs", "=", "torch", ".", "cat", "(", "[", "inputs_x", ",", "inputs_x2", ",", "inputs_u", ",", "inputs_u2", "]", ",", "dim", "=", "0", ")", "\n", "all_targets", "=", "torch", ".", "cat", "(", "[", "targets_x", ",", "targets_x", ",", "targets_u", ",", "targets_u", "]", ",", "dim", "=", "0", ")", "\n", "\n", "idx", "=", "torch", ".", "randperm", "(", "all_inputs", ".", "size", "(", "0", ")", ")", "\n", "input_a", ",", "input_b", "=", "all_inputs", ",", "all_inputs", "[", "idx", "]", "\n", "target_a", ",", "target_b", "=", "all_targets", ",", "all_targets", "[", "idx", "]", "\n", "\n", "mixmatch_l", "=", "np", ".", "random", ".", "beta", "(", "args", ".", "alpha", ",", "args", ".", "alpha", ")", "\n", "mixmatch_l", "=", "max", "(", "mixmatch_l", ",", "1", "-", "mixmatch_l", ")", "\n", "\n", "mixed_input", "=", "mixmatch_l", "*", "input_a", "+", "(", "1", "-", "mixmatch_l", ")", "*", "input_b", "\n", "mixed_target", "=", "mixmatch_l", "*", "target_a", "+", "(", "1", "-", "mixmatch_l", ")", "*", "target_b", "\n", "\n", "logits", "=", "net", "(", "mixed_input", ")", "\n", "logits_x", "=", "logits", "[", ":", "batch_size", "*", "2", "]", "\n", "logits_u", "=", "logits", "[", "batch_size", "*", "2", ":", "]", "\n", "\n", "Lx_mean", "=", "-", "torch", ".", "mean", "(", "F", ".", "log_softmax", "(", "logits_x", ",", "dim", "=", "1", ")", "*", "mixed_target", "[", ":", "batch_size", "*", "2", "]", ",", "0", ")", "\n", "Lx", "=", "torch", ".", "sum", "(", "Lx_mean", "*", "class_weights", ")", "\n", "\n", "probs_u", "=", "torch", ".", "softmax", "(", "logits_u", ",", "dim", "=", "1", ")", "\n", "Lu", "=", "torch", ".", "mean", "(", "(", "probs_u", "-", "mixed_target", "[", "batch_size", "*", "2", ":", "]", ")", "**", "2", ")", "\n", "loss", "=", "Lx", "+", "linear_rampup", "(", "epoch", "+", "batch_idx", "/", "num_iter", ",", "args", ".", "T1", ")", "*", "Lu", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "losses_lx", ".", "update", "(", "Lx", ".", "item", "(", ")", ",", "batch_size", "*", "2", ")", "\n", "losses_lu", ".", "update", "(", "Lu", ".", "item", "(", ")", ",", "len", "(", "logits", ")", "-", "batch_size", "*", "2", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "len", "(", "logits", ")", ")", "\n", "\n", "", "print", "(", "losses", ",", "losses_lx", ",", "losses_lu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_noisylabels.splite_confident": [[161, 181], ["torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "range", "len", "confident_indexs.append", "unconfident_indexs.append"], "function", ["None"], ["", "def", "splite_confident", "(", "outs", ",", "clean_targets", ",", "noisy_targets", ")", ":", "\n", "    ", "probs", ",", "preds", "=", "torch", ".", "max", "(", "outs", ".", "data", ",", "1", ")", "\n", "\n", "confident_correct_num", "=", "0", "\n", "unconfident_correct_num", "=", "0", "\n", "confident_indexs", "=", "[", "]", "\n", "unconfident_indexs", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "noisy_targets", ")", ")", ":", "\n", "        ", "if", "preds", "[", "i", "]", "==", "noisy_targets", "[", "i", "]", ":", "\n", "            ", "confident_indexs", ".", "append", "(", "i", ")", "\n", "if", "clean_targets", "[", "i", "]", "==", "preds", "[", "i", "]", ":", "\n", "                ", "confident_correct_num", "+=", "1", "\n", "", "", "else", ":", "\n", "            ", "unconfident_indexs", ".", "append", "(", "i", ")", "\n", "if", "clean_targets", "[", "i", "]", "==", "preds", "[", "i", "]", ":", "\n", "                ", "unconfident_correct_num", "+=", "1", "\n", "\n", "# print(getTime(), \"confident and unconfident num:\", len(confident_indexs), round(confident_correct_num / len(confident_indexs) * 100, 2), len(unconfident_indexs), round(unconfident_correct_num / len(unconfident_indexs) * 100, 2))", "\n", "", "", "", "return", "confident_indexs", ",", "unconfident_indexs", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_noisylabels.update_trainloader": [[183, 212], ["common.NoisyUtil.Semi_Unlabeled_Dataset", "torch.utils.data.DataLoader", "common.tools.predict_softmax", "PES_noisylabels.splite_confident", "common.NoisyUtil.Semi_Labeled_Dataset", "common.NoisyUtil.Semi_Unlabeled_Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "numpy.zeros", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "int", "int", "numpy.errstate", "len", "len", "numpy.mean", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.predict_softmax", "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.splite_confident"], ["", "def", "update_trainloader", "(", "model", ",", "train_data", ",", "clean_targets", ",", "noisy_targets", ")", ":", "\n", "    ", "predict_dataset", "=", "Semi_Unlabeled_Dataset", "(", "train_data", ",", "transform_train", ")", "\n", "predict_loader", "=", "DataLoader", "(", "dataset", "=", "predict_dataset", ",", "batch_size", "=", "args", ".", "batch_size", "*", "2", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "soft_outs", "=", "predict_softmax", "(", "predict_loader", ",", "model", ")", "\n", "\n", "confident_indexs", ",", "unconfident_indexs", "=", "splite_confident", "(", "soft_outs", ",", "clean_targets", ",", "noisy_targets", ")", "\n", "confident_dataset", "=", "Semi_Labeled_Dataset", "(", "train_data", "[", "confident_indexs", "]", ",", "noisy_targets", "[", "confident_indexs", "]", ",", "transform_train", ")", "\n", "unconfident_dataset", "=", "Semi_Unlabeled_Dataset", "(", "train_data", "[", "unconfident_indexs", "]", ",", "transform_train", ")", "\n", "\n", "uncon_batch", "=", "int", "(", "args", ".", "batch_size", "/", "2", ")", "if", "len", "(", "unconfident_indexs", ")", ">", "len", "(", "confident_indexs", ")", "else", "int", "(", "len", "(", "unconfident_indexs", ")", "/", "(", "len", "(", "confident_indexs", ")", "+", "len", "(", "unconfident_indexs", ")", ")", "*", "args", ".", "batch_size", ")", "\n", "con_batch", "=", "args", ".", "batch_size", "-", "uncon_batch", "\n", "\n", "labeled_trainloader", "=", "DataLoader", "(", "dataset", "=", "confident_dataset", ",", "batch_size", "=", "con_batch", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "unlabeled_trainloader", "=", "DataLoader", "(", "dataset", "=", "unconfident_dataset", ",", "batch_size", "=", "uncon_batch", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "# Loss function", "\n", "train_nums", "=", "np", ".", "zeros", "(", "args", ".", "num_class", ",", "dtype", "=", "int", ")", "\n", "for", "item", "in", "noisy_targets", "[", "confident_indexs", "]", ":", "\n", "        ", "train_nums", "[", "item", "]", "+=", "1", "\n", "\n", "# zeros are not calculated by mean", "\n", "# avoid too large numbers that may result in out of range of loss.", "\n", "", "with", "np", ".", "errstate", "(", "divide", "=", "'ignore'", ")", ":", "\n", "        ", "cw", "=", "np", ".", "mean", "(", "train_nums", "[", "train_nums", "!=", "0", "]", ")", "/", "train_nums", "\n", "cw", "[", "cw", "==", "np", ".", "inf", "]", "=", "0", "\n", "cw", "[", "cw", ">", "3", "]", "=", "3", "\n", "", "class_weights", "=", "torch", ".", "FloatTensor", "(", "cw", ")", ".", "cuda", "(", ")", "\n", "# print(\"Category\", train_nums, \"precent\", class_weights)", "\n", "return", "labeled_trainloader", ",", "unlabeled_trainloader", ",", "class_weights", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_noisylabels.noisy_refine": [[214, 233], ["model.parameters", "model.renew_layers", "model.cuda", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "range", "model.parameters", "model.parameters", "common.tools.train", "common.tools.evaluate", "str"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet.renew_layers", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.train", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.evaluate"], ["", "def", "noisy_refine", "(", "model", ",", "train_loader", ",", "num_layer", ",", "refine_times", ")", ":", "\n", "    ", "if", "refine_times", "<=", "0", ":", "\n", "        ", "return", "model", "\n", "# frezon all layers and add a new final layer", "\n", "", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "model", ".", "renew_layers", "(", "num_layer", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "optimizer_adam", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "PES_lr", ")", "\n", "for", "epoch", "in", "range", "(", "refine_times", ")", ":", "\n", "        ", "train", "(", "model", ",", "train_loader", ",", "optimizer_adam", ",", "ceriation", ",", "epoch", ")", "\n", "_", ",", "test_acc", "=", "evaluate", "(", "model", ",", "test_loader", ",", "ceriation", ",", "\"Epoch \"", "+", "str", "(", "epoch", ")", "+", "\" Test Acc:\"", ")", "\n", "\n", "", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "True", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_cs.create_model": [[56, 65], ["networks.ResNet.ResNet34.cuda", "networks.ResNet.ResNet18", "print", "networks.ResNet.ResNet34"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet18", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet34"], ["", "def", "create_model", "(", "name", "=", "\"resnet18\"", ",", "input_channel", "=", "3", ",", "num_classes", "=", "10", ")", ":", "\n", "    ", "if", "(", "name", "==", "\"resnet18\"", ")", ":", "\n", "        ", "model", "=", "ResNet18", "(", "num_classes", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"create ResNet34\"", ")", "\n", "model", "=", "ResNet34", "(", "num_classes", ")", "\n", "\n", "", "model", ".", "cuda", "(", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_cs.splite_confident": [[67, 80], ["torch.max", "torch.max", "torch.max", "torch.max", "range", "len", "confident_indexs.append"], "function", ["None"], ["", "def", "splite_confident", "(", "outs", ",", "clean_targets", ",", "noisy_targets", ")", ":", "\n", "    ", "probs", ",", "preds", "=", "torch", ".", "max", "(", "outs", ".", "data", ",", "1", ")", "\n", "confident_correct_num", "=", "0", "\n", "confident_indexs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "noisy_targets", ")", ")", ":", "\n", "        ", "if", "preds", "[", "i", "]", "==", "noisy_targets", "[", "i", "]", ":", "\n", "            ", "confident_indexs", ".", "append", "(", "i", ")", "\n", "\n", "if", "clean_targets", "[", "i", "]", "==", "preds", "[", "i", "]", ":", "\n", "                ", "confident_correct_num", "+=", "1", "\n", "\n", "# print(getTime(), \"Confident:\", len(confident_indexs), round(confident_correct_num / len(confident_indexs) * 100, 2))", "\n", "", "", "", "return", "confident_indexs", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_cs.update_trainloader": [[82, 103], ["common.NoisyUtil.Semi_Unlabeled_Dataset", "torch.utils.data.DataLoader", "common.tools.predict_softmax", "PES_cs.splite_confident", "common.NoisyUtil.Train_Dataset", "torch.utils.data.DataLoader", "numpy.zeros", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.CrossEntropyLoss().cuda", "numpy.errstate", "numpy.mean", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.CrossEntropyLoss"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.predict_softmax", "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.splite_confident"], ["", "def", "update_trainloader", "(", "model", ",", "train_data", ",", "clean_targets", ",", "noisy_targets", ",", "fixed_confident_indexs", "=", "None", ")", ":", "\n", "    ", "predict_dataset", "=", "Semi_Unlabeled_Dataset", "(", "train_data", ",", "transform_train", ")", "\n", "predict_loader", "=", "DataLoader", "(", "dataset", "=", "predict_dataset", ",", "batch_size", "=", "args", ".", "batch_size", "*", "2", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "soft_outs", "=", "predict_softmax", "(", "predict_loader", ",", "model", ")", "\n", "confident_indexs", "=", "splite_confident", "(", "soft_outs", ",", "clean_targets", ",", "noisy_targets", ")", "\n", "confident_dataset", "=", "Train_Dataset", "(", "train_data", "[", "confident_indexs", "]", ",", "noisy_targets", "[", "confident_indexs", "]", ",", "transform_train", ")", "\n", "train_loader", "=", "DataLoader", "(", "dataset", "=", "confident_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "# Loss function", "\n", "train_nums", "=", "np", ".", "zeros", "(", "args", ".", "num_class", ",", "dtype", "=", "int", ")", "\n", "for", "item", "in", "noisy_targets", "[", "confident_indexs", "]", ":", "\n", "        ", "train_nums", "[", "item", "]", "+=", "1", "\n", "\n", "", "with", "np", ".", "errstate", "(", "divide", "=", "'ignore'", ")", ":", "\n", "        ", "cw", "=", "np", ".", "mean", "(", "train_nums", "[", "train_nums", "!=", "0", "]", ")", "/", "train_nums", "\n", "cw", "[", "cw", "==", "np", ".", "inf", "]", "=", "0", "\n", "\n", "", "class_weights", "=", "torch", ".", "FloatTensor", "(", "cw", ")", ".", "cuda", "(", ")", "\n", "# print(\"Category\", train_nums, \"precent\", class_weights)", "\n", "ceriation", "=", "nn", ".", "CrossEntropyLoss", "(", "weight", "=", "class_weights", ")", ".", "cuda", "(", ")", "\n", "return", "train_loader", ",", "ceriation", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_cs.noisy_refine": [[105, 126], ["PES_cs.update_trainloader", "model.parameters", "model.renew_layers", "model.cuda", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "range", "model.parameters", "model.parameters", "common.tools.train", "common.tools.evaluate", "str"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.update_trainloader", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet.renew_layers", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.train", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.evaluate"], ["", "def", "noisy_refine", "(", "model", ",", "train_loader", ",", "num_layer", ",", "refine_times", ")", ":", "\n", "    ", "if", "refine_times", "<=", "0", ":", "\n", "        ", "return", "model", "\n", "\n", "", "update_trainloader", "(", "model", ",", "train_data", ",", "train_clean_labels", ",", "train_noisy_labels", ")", "\n", "# frezon all layers and add a new final layer", "\n", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "model", ".", "renew_layers", "(", "num_layer", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "optimizer_refine", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "PES_lr", ")", "\n", "for", "epoch", "in", "range", "(", "refine_times", ")", ":", "\n", "        ", "train", "(", "model", ",", "train_loader", ",", "optimizer_refine", ",", "ceriation", ",", "epoch", ")", "\n", "_", ",", "test_acc", "=", "evaluate", "(", "model", ",", "test_loader", ",", "ceriation", ",", "\"Refine:\"", "+", "str", "(", "epoch", ")", ")", "\n", "\n", "", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "True", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.Clothing1M_Dataset.__init__": [[61, 74], ["numpy.array", "numpy.array", "len", "print", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "labels", ",", "root_dir", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "train_data", "=", "np", ".", "array", "(", "data", ")", "\n", "self", ".", "train_labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "self", ".", "root_dir", "=", "root_dir", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "train_labels", ")", "\n", "\n", "if", "transform", "is", "None", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transform", "\n", "\n", "", "self", ".", "target_transform", "=", "target_transform", "\n", "print", "(", "\"NewDataset length:\"", ",", "self", ".", "length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.Clothing1M_Dataset.__getitem__": [[75, 88], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "PIL.Image.open().convert", "PES_Clothing1M.Clothing1M_Dataset.transform", "PES_Clothing1M.Clothing1M_Dataset.target_transform", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.target_transform"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img_paths", ",", "target", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "\n", "img_paths", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_dir", ",", "img_paths", ")", "\n", "img", "=", "Image", ".", "open", "(", "img_paths", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.Clothing1M_Dataset.__len__": [[89, 91], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.Clothing1M_Dataset.getData": [[92, 94], ["None"], "methods", ["None"], ["", "def", "getData", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "train_data", ",", "self", ".", "train_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.Clothing1M_Unlabeled_Dataset.__init__": [[97, 108], ["numpy.array", "len", "print", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "root_dir", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "train_data", "=", "np", ".", "array", "(", "data", ")", "\n", "self", ".", "root_dir", "=", "root_dir", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "train_data", ")", "\n", "\n", "if", "transform", "is", "None", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transform", "\n", "\n", "", "print", "(", "\"NewDataset length:\"", ",", "self", ".", "length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.Clothing1M_Unlabeled_Dataset.__getitem__": [[109, 119], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "PIL.Image.open().convert", "PES_Clothing1M.Clothing1M_Unlabeled_Dataset.transform", "PES_Clothing1M.Clothing1M_Unlabeled_Dataset.transform", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img_paths", "=", "self", ".", "train_data", "[", "index", "]", "\n", "img_paths", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_dir", ",", "img_paths", ")", "\n", "img", "=", "Image", ".", "open", "(", "img_paths", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img1", "=", "self", ".", "transform", "(", "img", ")", "\n", "img2", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "img1", ",", "img2", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.Clothing1M_Unlabeled_Dataset.__len__": [[120, 122], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.create_model": [[124, 137], ["torchvision.models.resnet50", "torchvision.models.resnet50", "torch.Linear", "torchvision.models.resnet50.to"], "function", ["None"], ["", "", "def", "create_model", "(", "pretrained", ")", ":", "\n", "    ", "if", "(", "pretrained", "==", "'Yes'", ")", ":", "\n", "        ", "pretrain", "=", "True", "\n", "", "else", ":", "\n", "        ", "pretrain", "=", "False", "\n", "\n", "", "model", "=", "torchvision", ".", "models", ".", "resnet50", "(", "pretrained", "=", "pretrain", ")", "\n", "model", ".", "fc", "=", "nn", ".", "Linear", "(", "2048", ",", "args", ".", "num_classes", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", ":", "\n", "        ", "model", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.splite_confident": [[139, 158], ["torch.max", "torch.max", "torch.max", "torch.max", "range", "print", "len", "common.tools.getTime", "len", "len", "confident_indexs.append", "confident_indexs.append", "unconfident_indexs.append", "unconfident_indexs.append"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.getTime"], ["", "def", "splite_confident", "(", "outs", ",", "noisy_targets", ",", "portion_index", "=", "None", ")", ":", "\n", "    ", "probs", ",", "preds", "=", "torch", ".", "max", "(", "outs", ".", "data", ",", "1", ")", "\n", "\n", "confident_indexs", "=", "[", "]", "\n", "unconfident_indexs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "noisy_targets", ")", ")", ":", "\n", "        ", "if", "preds", "[", "i", "]", "==", "noisy_targets", "[", "i", "]", ":", "\n", "            ", "if", "portion_index", "is", "None", ":", "\n", "                ", "confident_indexs", ".", "append", "(", "i", ")", "\n", "", "else", ":", "\n", "                ", "confident_indexs", ".", "append", "(", "portion_index", "[", "i", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "portion_index", "is", "None", ":", "\n", "                ", "unconfident_indexs", ".", "append", "(", "i", ")", "\n", "", "else", ":", "\n", "                ", "unconfident_indexs", ".", "append", "(", "portion_index", "[", "i", "]", ")", "\n", "\n", "", "", "", "print", "(", "getTime", "(", ")", ",", "\"confident and unconfident num:\"", ",", "len", "(", "confident_indexs", ")", ",", "len", "(", "unconfident_indexs", ")", ")", "\n", "return", "confident_indexs", ",", "unconfident_indexs", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.update_trainloader": [[160, 180], ["PES_Clothing1M.Clothing1M_Unlabeled_Dataset", "torch.utils.data.DataLoader", "common.tools.predict_softmax", "PES_Clothing1M.splite_confident", "torch.max", "torch.max", "torch.max", "torch.max", "PES_Clothing1M.Clothing1M_Dataset", "torch.utils.data.DataLoader", "numpy.zeros", "print", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.CrossEntropyLoss().to", "numpy.mean", "numpy.mean", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.CrossEntropyLoss", "numpy.mean", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.predict_softmax", "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.splite_confident"], ["", "def", "update_trainloader", "(", "model", ",", "train_data", ",", "noisy_targets", ",", "fixed_confident_indexs", "=", "None", ")", ":", "\n", "    ", "predict_dataset", "=", "Clothing1M_Unlabeled_Dataset", "(", "train_data", ",", "args", ".", "data_root", ",", "transform", ")", "\n", "predict_loader", "=", "DataLoader", "(", "dataset", "=", "predict_dataset", ",", "batch_size", "=", "args", ".", "batch_size", "*", "2", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "soft_outs", "=", "predict_softmax", "(", "predict_loader", ",", "model", ")", "\n", "\n", "confident_indexs", ",", "unconfident_indexs", "=", "splite_confident", "(", "soft_outs", ",", "noisy_targets", ")", "\n", "_", ",", "preds", "=", "torch", ".", "max", "(", "soft_outs", ".", "data", ",", "1", ")", "\n", "\n", "train_dataset", "=", "Clothing1M_Dataset", "(", "train_data", "[", "confident_indexs", "]", ",", "preds", "[", "confident_indexs", "]", ",", "args", ".", "data_root", ",", "transform", ",", "target_transform", ")", "\n", "trainloader", "=", "DataLoader", "(", "dataset", "=", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "# Loss function", "\n", "train_nums", "=", "np", ".", "zeros", "(", "args", ".", "num_classes", ",", "dtype", "=", "int", ")", "\n", "for", "item", "in", "preds", "[", "confident_indexs", "]", ":", "\n", "        ", "train_nums", "[", "item", "]", "+=", "1", "\n", "", "print", "(", "\"train categroy mean\"", ",", "np", ".", "mean", "(", "train_nums", ",", "dtype", "=", "int", ")", ",", "\"category\"", ",", "train_nums", ",", "\"precent\"", ",", "np", ".", "mean", "(", "train_nums", ")", "/", "train_nums", ")", "\n", "class_weights", "=", "torch", ".", "FloatTensor", "(", "np", ".", "mean", "(", "train_nums", ")", "/", "train_nums", "*", "val_nums", "/", "np", ".", "mean", "(", "val_nums", ")", ")", ".", "to", "(", "device", ")", "\n", "ceriation", "=", "nn", ".", "CrossEntropyLoss", "(", "weight", "=", "class_weights", ")", ".", "to", "(", "device", ")", "\n", "\n", "return", "trainloader", ",", "None", ",", "ceriation", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.noisy_refine": [[182, 203], ["print", "model.parameters", "torch.Linear", "model.cuda", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "iter", "range", "model.parameters", "model.parameters", "PES_Clothing1M.train"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.train"], ["", "def", "noisy_refine", "(", "model", ",", "train_loader", ",", "refine_ceriation", ",", "refine_times", ")", ":", "\n", "    ", "if", "refine_times", "<=", "0", ":", "\n", "        ", "return", "model", "\n", "# frezon all layers and add a new final layer", "\n", "", "print", "(", "\"Begin to refine network...\"", ")", "\n", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "model", ".", "fc", "=", "nn", ".", "Linear", "(", "2048", ",", "args", ".", "num_classes", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "optimizer_adam", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "PES_lr", ")", "\n", "train_iter", "=", "iter", "(", "train_loader", ")", "\n", "for", "iter_index", "in", "range", "(", "refine_times", ")", ":", "\n", "        ", "train", "(", "model", ",", "train_iter", ",", "refine_ceriation", ",", "optimizer_adam", ",", "args", ".", "num_iters_epoch", ")", "\n", "# _, test_acc = evaluate(model, test_loader, refine_ceriation, \"PES Test Acc:\")", "\n", "\n", "", "for", "param", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "True", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.train": [[205, 241], ["common.tools.AverageMeter", "common.tools.AverageMeter", "common.tools.AverageMeter", "common.tools.AverageMeter", "common.tools.ProgressMeter", "time.time", "int", "range", "common.tools.ProgressMeter.display", "len", "model.train", "common.tools.AverageMeter.update", "train_optimizer.zero_grad", "model", "ceriation", "ceriation.backward", "train_optimizer.step", "common.tools.accuracy", "common.tools.AverageMeter.update", "common.tools.AverageMeter.update", "common.tools.AverageMeter.update", "time.time", "train_iter.next", "images.to.to", "labels.to.to", "ceriation.item", "images[].size", "images[].size", "len", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter.display", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.train", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.accuracy", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update"], ["", "def", "train", "(", "model", ",", "train_iter", ",", "ceriation", ",", "train_optimizer", ",", "num_prints", "=", "1", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", "'Time'", ",", "':6.3f'", ")", "\n", "data_time", "=", "AverageMeter", "(", "'Data'", ",", "':6.3f'", ")", "\n", "losses", "=", "AverageMeter", "(", "'Loss'", ",", "':6.3f'", ")", "\n", "top1", "=", "AverageMeter", "(", "'Acc@1'", ",", "':6.2f'", ")", "\n", "progress", "=", "ProgressMeter", "(", "\n", "len", "(", "train_iter", ")", ",", "\n", "[", "batch_time", ",", "data_time", ",", "losses", ",", "top1", "]", ",", "prefix", "=", "\"Train \"", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "num_iter", "=", "int", "(", "(", "len", "(", "train_iter", ")", "-", "1", ")", "/", "num_prints", ")", "\n", "for", "batch_idx", "in", "range", "(", "num_iter", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "images", ",", "labels", "=", "train_iter", ".", "next", "(", ")", "\n", "images", "=", "images", ".", "to", "(", "device", ",", "non_blocking", "=", "True", ")", "\n", "labels", "=", "labels", ".", "to", "(", "device", ",", "non_blocking", "=", "True", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "break", "\n", "\n", "", "model", ".", "train", "(", ")", "\n", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "train_optimizer", ".", "zero_grad", "(", ")", "\n", "logits", "=", "model", "(", "images", ")", "\n", "loss", "=", "ceriation", "(", "logits", ",", "labels", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "train_optimizer", ".", "step", "(", ")", "\n", "\n", "acc1", ",", "acc5", "=", "accuracy", "(", "logits", ",", "labels", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "images", "[", "0", "]", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ",", "images", "[", "0", "]", ".", "size", "(", "0", ")", ")", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "progress", ".", "display", "(", "batch_idx", ")", "\n", "return", "top1", ".", "avg", ",", "losses", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.target_transform": [[261, 265], ["numpy.array", "torch.from_numpy().long", "torch.from_numpy().long", "torch.from_numpy().long", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["def", "target_transform", "(", "label", ")", ":", "\n", "    ", "label", "=", "np", ".", "array", "(", "label", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "target", "=", "torch", ".", "from_numpy", "(", "label", ")", ".", "long", "(", ")", "\n", "return", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.BasicBlock.__init__": [[19, 31], ["torch.Module.__init__", "ResNet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "ResNet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter.__init__", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.conv3x3", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.conv3x3"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.BasicBlock.forward": [[33, 39], ["torch.relu", "torch.relu", "ResNet.BasicBlock.bn2", "ResNet.BasicBlock.shortcut", "torch.relu", "torch.relu", "ResNet.BasicBlock.bn1", "ResNet.BasicBlock.conv2", "ResNet.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.PreActBlock.__init__": [[45, 56], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "ResNet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "ResNet.conv3x3", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter.__init__", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.conv3x3", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.conv3x3"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.PreActBlock.forward": [[58, 65], ["torch.relu", "torch.relu", "ResNet.PreActBlock.shortcut", "ResNet.PreActBlock.conv1", "ResNet.PreActBlock.conv2", "ResNet.PreActBlock.bn1", "torch.relu", "torch.relu", "ResNet.PreActBlock.bn2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.Bottleneck.__init__": [[70, 84], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.Bottleneck.forward": [[86, 93], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "ResNet.Bottleneck.bn3", "ResNet.Bottleneck.shortcut", "torch.relu", "torch.relu", "ResNet.Bottleneck.bn1", "ResNet.Bottleneck.bn2", "ResNet.Bottleneck.conv3", "ResNet.Bottleneck.conv1", "ResNet.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.PreActBottleneck.__init__": [[99, 112], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "PreActBottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.PreActBottleneck.forward": [[114, 122], ["torch.relu", "torch.relu", "ResNet.PreActBottleneck.shortcut", "ResNet.PreActBottleneck.conv1", "ResNet.PreActBottleneck.conv2", "ResNet.PreActBottleneck.conv3", "ResNet.PreActBottleneck.bn1", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "ResNet.PreActBottleneck.bn2", "ResNet.PreActBottleneck.bn3"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", "\n", "shortcut", "=", "self", ".", "shortcut", "(", "out", ")", "\n", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "conv3", "(", "F", ".", "relu", "(", "self", ".", "bn3", "(", "out", ")", ")", ")", "\n", "out", "+=", "shortcut", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet.__init__": [[125, 139], ["torch.Module.__init__", "ResNet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "ResNet.ResNet._make_layer", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter.__init__", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.conv3x3", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet._make_layer", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet._make_layer", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet._make_layer", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "block", "=", "block", "\n", "self", ".", "num_blocks", "=", "num_blocks", "\n", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "3", ",", "64", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet._make_layer": [[140, 147], ["torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet.forward": [[148, 167], ["ResNet.ResNet.conv1", "ResNet.ResNet.bn1", "torch.relu", "torch.relu", "ResNet.ResNet.layer1", "ResNet.ResNet.layer2", "ResNet.ResNet.layer3", "ResNet.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "ResNet.ResNet.view", "ResNet.ResNet.linear", "ResNet.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "lin", "=", "0", ",", "lout", "=", "5", ")", ":", "\n", "        ", "out", "=", "x", "\n", "if", "lin", "<", "1", "and", "lout", ">", "-", "1", ":", "\n", "            ", "out", "=", "self", ".", "conv1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "", "if", "lin", "<", "2", "and", "lout", ">", "0", ":", "\n", "            ", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "", "if", "lin", "<", "3", "and", "lout", ">", "1", ":", "\n", "            ", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "", "if", "lin", "<", "4", "and", "lout", ">", "2", ":", "\n", "            ", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "", "if", "lin", "<", "5", "and", "lout", ">", "3", ":", "\n", "            ", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "", "if", "lout", ">", "4", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "representation", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "representation", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet.renew_layers": [[168, 186], ["print", "torch.Linear", "torch.Linear", "print", "ResNet.ResNet._make_layer", "print", "ResNet.ResNet._make_layer", "print", "ResNet.ResNet._make_layer"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet._make_layer", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet._make_layer", "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet._make_layer"], ["", "def", "renew_layers", "(", "self", ",", "last_num_layers", ")", ":", "\n", "        ", "if", "last_num_layers", ">=", "3", ":", "\n", "            ", "print", "(", "\"re-initalize block 2\"", ")", "\n", "self", ".", "in_planes", "=", "64", "# reset input dimension to 1th block output", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "self", ".", "block", ",", "128", ",", "self", ".", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "\n", "", "if", "last_num_layers", ">=", "2", ":", "\n", "            ", "print", "(", "\"re-initalize block 3\"", ")", "\n", "self", ".", "in_planes", "=", "128", "# reset input dimension to 2th block output", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "self", ".", "block", ",", "256", ",", "self", ".", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "\n", "", "if", "last_num_layers", ">=", "1", ":", "\n", "            ", "print", "(", "\"re-initalize block 4\"", ")", "\n", "self", ".", "in_planes", "=", "256", "# reset input dimension to 3th block output", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "self", ".", "block", ",", "512", ",", "self", ".", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "\n", "", "print", "(", "\"re-initalize the final layer\"", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", ",", "self", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet.update_num_layers": [[187, 189], ["None"], "methods", ["None"], ["", "def", "update_num_layers", "(", "self", ",", "last_num_layers", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.conv3x3": [[12, 14], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.PreActResNet18": [[191, 193], ["ResNet.ResNet"], "function", ["None"], ["", "", "def", "PreActResNet18", "(", "num_classes", ")", ":", "\n", "    ", "return", "ResNet", "(", "PreActBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet18": [[194, 196], ["ResNet.ResNet"], "function", ["None"], ["", "def", "ResNet18", "(", "num_classes", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.networks.ResNet.ResNet34": [[197, 199], ["ResNet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", "num_classes", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Train_Dataset.__init__": [[199, 209], ["numpy.array", "numpy.array", "len", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "labels", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "train_data", "=", "np", ".", "array", "(", "data", ")", "\n", "self", ".", "train_labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "train_labels", ")", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n", "if", "transform", "is", "None", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Train_Dataset.__getitem__": [[210, 222], ["PIL.fromarray", "NoisyUtil.Train_Dataset.transform", "NoisyUtil.Train_Dataset.target_transform"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.target_transform"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", ",", "target", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Train_Dataset.__len__": [[223, 225], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Train_Dataset.getData": [[226, 228], ["None"], "methods", ["None"], ["", "def", "getData", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "train_data", ",", "self", ".", "train_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Semi_Labeled_Dataset.__init__": [[231, 241], ["numpy.array", "numpy.array", "len", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "labels", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "train_data", "=", "np", ".", "array", "(", "data", ")", "\n", "self", ".", "train_labels", "=", "np", ".", "array", "(", "labels", ")", "\n", "self", ".", "length", "=", "len", "(", "self", ".", "train_labels", ")", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n", "if", "transform", "is", "None", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Semi_Labeled_Dataset.__getitem__": [[242, 255], ["PIL.fromarray", "NoisyUtil.Semi_Labeled_Dataset.transform", "NoisyUtil.Semi_Labeled_Dataset.transform", "NoisyUtil.Semi_Labeled_Dataset.target_transform"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.None.PES_Clothing1M.target_transform"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", ",", "target", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "out1", "=", "self", ".", "transform", "(", "img", ")", "\n", "out2", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "out1", ",", "out2", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Semi_Labeled_Dataset.__len__": [[256, 258], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Semi_Labeled_Dataset.getData": [[259, 261], ["None"], "methods", ["None"], ["", "def", "getData", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "train_data", ",", "self", ".", "train_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Semi_Unlabeled_Dataset.__init__": [[264, 272], ["numpy.array", "torchvision.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "train_data", "=", "np", ".", "array", "(", "data", ")", "\n", "self", ".", "length", "=", "self", ".", "train_data", ".", "shape", "[", "0", "]", "\n", "\n", "if", "transform", "is", "None", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Semi_Unlabeled_Dataset.__getitem__": [[273, 282], ["PIL.fromarray", "NoisyUtil.Semi_Unlabeled_Dataset.transform", "NoisyUtil.Semi_Unlabeled_Dataset.transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", "=", "self", ".", "train_data", "[", "index", "]", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "out1", "=", "self", ".", "transform", "(", "img", ")", "\n", "out2", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "out1", ",", "out2", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Semi_Unlabeled_Dataset.__len__": [[283, 285], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.Semi_Unlabeled_Dataset.getData": [[286, 288], ["None"], "methods", ["None"], ["", "def", "getData", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "train_data", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.dataset_split": [[14, 62], ["clean_train_labels.squeeze.squeeze", "get_instance_noisy_label.squeeze", "int", "numpy.random.seed", "numpy.random.choice", "numpy.arange", "numpy.delete", "print", "NoisyUtil.noisify_pairflip", "int", "torch.from_numpy.type", "torch.from_numpy", "torch.from_numpy", "zip", "NoisyUtil.get_instance_noisy_label", "len", "range", "torch.is_tensor", "torch.is_tensor", "torch.from_numpy", "torch.from_numpy", "NoisyUtil.noisify_oneflip", "NoisyUtil.noisify_multiclass_symmetric", "len", "int"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.noisify_pairflip", "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.get_instance_noisy_label", "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.noisify_oneflip", "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.noisify_multiclass_symmetric"], ["def", "dataset_split", "(", "train_images", ",", "train_labels", ",", "noise_rate", "=", "0.5", ",", "noise_type", "=", "'symmetric'", ",", "split_per", "=", "0.9", ",", "random_seed", "=", "1", ",", "num_classes", "=", "10", ",", "include_noise", "=", "False", ")", ":", "\n", "\n", "    ", "if", "include_noise", ":", "\n", "        ", "noise_rate", "=", "noise_rate", "*", "(", "1", "-", "1", "/", "num_classes", ")", "\n", "print", "(", "\"include_noise True, new real nosie rate:\"", ",", "noise_rate", ")", "\n", "\n", "", "clean_train_labels", "=", "train_labels", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "if", "(", "noise_type", "==", "'pairflip'", ")", ":", "\n", "        ", "noisy_labels", ",", "real_noise_rate", ",", "transition_matrix", "=", "noisify_pairflip", "(", "clean_train_labels", ",", "noise", "=", "noise_rate", ",", "\n", "random_state", "=", "random_seed", ",", "nb_classes", "=", "num_classes", ")", "\n", "\n", "", "elif", "(", "noise_type", "==", "'instance'", ")", ":", "\n", "        ", "norm_std", "=", "0.1", "\n", "if", "(", "len", "(", "train_images", ".", "shape", ")", "==", "2", ")", ":", "\n", "            ", "feature_size", "=", "train_images", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "feature_size", "=", "1", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "train_images", ".", "shape", ")", ")", ":", "\n", "                ", "feature_size", "=", "int", "(", "feature_size", "*", "train_images", ".", "shape", "[", "i", "]", ")", "\n", "\n", "", "", "if", "torch", ".", "is_tensor", "(", "train_images", ")", "is", "False", ":", "\n", "            ", "data", "=", "torch", ".", "from_numpy", "(", "train_images", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "train_images", "\n", "\n", "", "data", "=", "data", ".", "type", "(", "torch", ".", "FloatTensor", ")", "\n", "targets", "=", "torch", ".", "from_numpy", "(", "train_labels", ")", "\n", "dataset", "=", "zip", "(", "data", ",", "targets", ")", "\n", "noisy_labels", "=", "get_instance_noisy_label", "(", "noise_rate", ",", "dataset", ",", "targets", ",", "num_classes", ",", "feature_size", ",", "norm_std", ",", "random_seed", ")", "\n", "", "elif", "(", "noise_type", "==", "'oneflip'", ")", ":", "\n", "        ", "noisy_labels", ",", "real_noise_rate", ",", "transition_matrix", "=", "noisify_oneflip", "(", "clean_train_labels", ",", "noise", "=", "noise_rate", ",", "random_state", "=", "random_seed", ",", "nb_classes", "=", "num_classes", ")", "\n", "", "else", ":", "\n", "        ", "noisy_labels", ",", "real_noise_rate", ",", "transition_matrix", "=", "noisify_multiclass_symmetric", "(", "clean_train_labels", ",", "noise", "=", "noise_rate", ",", "\n", "random_state", "=", "random_seed", ",", "nb_classes", "=", "num_classes", ")", "\n", "\n", "", "clean_train_labels", "=", "clean_train_labels", ".", "squeeze", "(", ")", "\n", "noisy_labels", "=", "noisy_labels", ".", "squeeze", "(", ")", "\n", "num_samples", "=", "int", "(", "noisy_labels", ".", "shape", "[", "0", "]", ")", "\n", "np", ".", "random", ".", "seed", "(", "random_seed", ")", "\n", "train_set_index", "=", "np", ".", "random", ".", "choice", "(", "num_samples", ",", "int", "(", "num_samples", "*", "split_per", ")", ",", "replace", "=", "False", ")", "\n", "index", "=", "np", ".", "arange", "(", "train_images", ".", "shape", "[", "0", "]", ")", "\n", "val_set_index", "=", "np", ".", "delete", "(", "index", ",", "train_set_index", ")", "\n", "\n", "train_set", ",", "val_set", "=", "train_images", "[", "train_set_index", ",", ":", "]", ",", "train_images", "[", "val_set_index", ",", ":", "]", "\n", "train_labels", ",", "val_labels", "=", "noisy_labels", "[", "train_set_index", "]", ",", "noisy_labels", "[", "val_set_index", "]", "\n", "train_clean_labels", ",", "val_clean_labels", "=", "clean_train_labels", "[", "train_set_index", "]", ",", "clean_train_labels", "[", "val_set_index", "]", "\n", "\n", "return", "train_set", ",", "val_set", ",", "train_labels", ",", "val_labels", ",", "train_clean_labels", ",", "val_clean_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.get_instance_noisy_label": [[64, 105], ["numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "scipy.stats.truncnorm", "stats.truncnorm.rvs", "isinstance", "torch.cuda.is_available", "torch.cuda.is_available", "numpy.random.randn", "torch.cuda.is_available", "torch.cuda.is_available", "enumerate", "torch.stack().cpu().numpy", "torch.stack().cpu().numpy", "zip", "numpy.array", "int", "int", "int", "torch.FloatTensor", "torch.FloatTensor", "labels.cuda.cuda", "torch.FloatTensor().cuda", "torch.FloatTensor().cuda", "torch.FloatTensor", "torch.FloatTensor", "torch.cuda.is_available", "torch.cuda.is_available", "x.reshape.view().mm().squeeze", "torch.stack().cpu().numpy.append", "numpy.random.choice", "x.reshape.cuda", "x.reshape.reshape", "torch.softmax", "torch.stack().cpu", "torch.stack().cpu", "range", "range", "range", "int", "int", "torch.FloatTensor", "torch.FloatTensor", "x.reshape.view().mm", "range", "torch.stack", "torch.stack", "x.reshape.view"], "function", ["None"], ["", "def", "get_instance_noisy_label", "(", "n", ",", "newdataset", ",", "labels", ",", "num_classes", ",", "feature_size", ",", "norm_std", ",", "seed", ")", ":", "\n", "    ", "label_num", "=", "num_classes", "\n", "np", ".", "random", ".", "seed", "(", "int", "(", "seed", ")", ")", "\n", "torch", ".", "manual_seed", "(", "int", "(", "seed", ")", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "int", "(", "seed", ")", ")", "\n", "\n", "P", "=", "[", "]", "\n", "flip_distribution", "=", "stats", ".", "truncnorm", "(", "(", "0", "-", "n", ")", "/", "norm_std", ",", "(", "1", "-", "n", ")", "/", "norm_std", ",", "loc", "=", "n", ",", "scale", "=", "norm_std", ")", "\n", "flip_rate", "=", "flip_distribution", ".", "rvs", "(", "labels", ".", "shape", "[", "0", "]", ")", "\n", "\n", "if", "isinstance", "(", "labels", ",", "list", ")", ":", "\n", "        ", "labels", "=", "torch", ".", "FloatTensor", "(", "labels", ")", "\n", "", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "labels", "=", "labels", ".", "cuda", "(", ")", "\n", "\n", "", "W", "=", "np", ".", "random", ".", "randn", "(", "label_num", ",", "feature_size", ",", "label_num", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "W", "=", "torch", ".", "FloatTensor", "(", "W", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "        ", "W", "=", "torch", ".", "FloatTensor", "(", "W", ")", "\n", "", "for", "i", ",", "(", "x", ",", "y", ")", "in", "enumerate", "(", "newdataset", ")", ":", "\n", "        ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "x", "=", "x", ".", "cuda", "(", ")", "\n", "x", "=", "x", ".", "reshape", "(", "feature_size", ")", "\n", "\n", "", "A", "=", "x", ".", "view", "(", "1", ",", "-", "1", ")", ".", "mm", "(", "W", "[", "y", "]", ")", ".", "squeeze", "(", "0", ")", "\n", "A", "[", "y", "]", "=", "-", "inf", "\n", "A", "=", "flip_rate", "[", "i", "]", "*", "F", ".", "softmax", "(", "A", ",", "dim", "=", "0", ")", "\n", "A", "[", "y", "]", "+=", "1", "-", "flip_rate", "[", "i", "]", "\n", "P", ".", "append", "(", "A", ")", "\n", "", "P", "=", "torch", ".", "stack", "(", "P", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "l1", "=", "[", "i", "for", "i", "in", "range", "(", "label_num", ")", "]", "\n", "new_label", "=", "[", "np", ".", "random", ".", "choice", "(", "l1", ",", "p", "=", "P", "[", "i", "]", ")", "for", "i", "in", "range", "(", "labels", ".", "shape", "[", "0", "]", ")", "]", "\n", "\n", "record", "=", "[", "[", "0", "for", "_", "in", "range", "(", "label_num", ")", "]", "for", "i", "in", "range", "(", "label_num", ")", "]", "\n", "\n", "for", "a", ",", "b", "in", "zip", "(", "labels", ",", "new_label", ")", ":", "\n", "        ", "a", ",", "b", "=", "int", "(", "a", ")", ",", "int", "(", "b", ")", "\n", "record", "[", "a", "]", "[", "b", "]", "+=", "1", "\n", "\n", "", "return", "np", ".", "array", "(", "new_label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.noisify_oneflip": [[107, 121], ["numpy.eye", "NoisyUtil.multiclass_noisify"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.multiclass_noisify"], ["", "def", "noisify_oneflip", "(", "y_train", ",", "noise", ",", "random_state", "=", "1", ",", "nb_classes", "=", "10", ")", ":", "\n", "    ", "P", "=", "np", ".", "eye", "(", "nb_classes", ")", "\n", "n", "=", "noise", "\n", "\n", "if", "n", ">", "0.0", ":", "\n", "# 0 -> 1", "\n", "        ", "P", "[", "1", ",", "1", "]", ",", "P", "[", "1", ",", "2", "]", "=", "1.", "-", "n", ",", "n", "\n", "y_train_noisy", "=", "multiclass_noisify", "(", "y_train", ",", "P", "=", "P", ",", "\n", "random_state", "=", "random_state", ")", "\n", "actual_noise", "=", "(", "y_train_noisy", "!=", "y_train", ")", ".", "mean", "(", ")", "\n", "assert", "actual_noise", ">", "0.0", "\n", "y_train", "=", "y_train_noisy", "\n", "\n", "", "return", "y_train", ",", "actual_noise", ",", "P", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.noisify_pairflip": [[124, 142], ["numpy.eye", "range", "NoisyUtil.multiclass_noisify"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.multiclass_noisify"], ["", "def", "noisify_pairflip", "(", "y_train", ",", "noise", ",", "random_state", "=", "1", ",", "nb_classes", "=", "10", ")", ":", "\n", "    ", "P", "=", "np", ".", "eye", "(", "nb_classes", ")", "\n", "n", "=", "noise", "\n", "\n", "if", "n", ">", "0.0", ":", "\n", "# 0 -> 1", "\n", "        ", "P", "[", "0", ",", "0", "]", ",", "P", "[", "0", ",", "1", "]", "=", "1.", "-", "n", ",", "n", "\n", "for", "i", "in", "range", "(", "1", ",", "nb_classes", "-", "1", ")", ":", "\n", "            ", "P", "[", "i", ",", "i", "]", ",", "P", "[", "i", ",", "i", "+", "1", "]", "=", "1.", "-", "n", ",", "n", "\n", "", "P", "[", "nb_classes", "-", "1", ",", "nb_classes", "-", "1", "]", ",", "P", "[", "nb_classes", "-", "1", ",", "0", "]", "=", "1.", "-", "n", ",", "n", "\n", "\n", "y_train_noisy", "=", "multiclass_noisify", "(", "y_train", ",", "P", "=", "P", ",", "\n", "random_state", "=", "random_state", ")", "\n", "actual_noise", "=", "(", "y_train_noisy", "!=", "y_train", ")", ".", "mean", "(", ")", "\n", "assert", "actual_noise", ">", "0.0", "\n", "y_train", "=", "y_train_noisy", "\n", "\n", "", "return", "y_train", ",", "actual_noise", ",", "P", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.noisify_multiclass_symmetric": [[144, 163], ["numpy.ones", "range", "NoisyUtil.multiclass_noisify"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.multiclass_noisify"], ["", "def", "noisify_multiclass_symmetric", "(", "y_train", ",", "noise", ",", "random_state", "=", "None", ",", "nb_classes", "=", "10", ")", ":", "\n", "    ", "P", "=", "np", ".", "ones", "(", "(", "nb_classes", ",", "nb_classes", ")", ")", "\n", "n", "=", "noise", "\n", "P", "=", "(", "n", "/", "(", "nb_classes", "-", "1", ")", ")", "*", "P", "\n", "\n", "if", "n", ">", "0.0", ":", "\n", "# 0 -> 1", "\n", "        ", "P", "[", "0", ",", "0", "]", "=", "1.", "-", "n", "\n", "for", "i", "in", "range", "(", "1", ",", "nb_classes", "-", "1", ")", ":", "\n", "            ", "P", "[", "i", ",", "i", "]", "=", "1.", "-", "n", "\n", "", "P", "[", "nb_classes", "-", "1", ",", "nb_classes", "-", "1", "]", "=", "1.", "-", "n", "\n", "\n", "y_train_noisy", "=", "multiclass_noisify", "(", "y_train", ",", "P", "=", "P", ",", "\n", "random_state", "=", "random_state", ")", "\n", "actual_noise", "=", "(", "y_train_noisy", "!=", "y_train", ")", ".", "mean", "(", ")", "\n", "assert", "actual_noise", ">", "0.0", "\n", "y_train", "=", "y_train_noisy", "\n", "\n", "", "return", "y_train", ",", "actual_noise", ",", "P", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.multiclass_noisify": [[166, 188], ["numpy.testing.assert_array_almost_equal", "y.copy", "numpy.random.RandomState", "numpy.arange", "numpy.max", "P.sum", "numpy.ones", "isinstance", "np.random.RandomState.multinomial", "numpy.where"], "function", ["None"], ["", "def", "multiclass_noisify", "(", "y", ",", "P", ",", "random_state", "=", "1", ")", ":", "\n", "    ", "assert", "P", ".", "shape", "[", "0", "]", "==", "P", ".", "shape", "[", "1", "]", "\n", "assert", "np", ".", "max", "(", "y", ")", "<", "P", ".", "shape", "[", "0", "]", "\n", "\n", "# row stochastic matrix", "\n", "assert_array_almost_equal", "(", "P", ".", "sum", "(", "axis", "=", "1", ")", ",", "np", ".", "ones", "(", "P", ".", "shape", "[", "1", "]", ")", ")", "\n", "assert", "(", "P", ">=", "0.0", ")", ".", "all", "(", ")", "\n", "\n", "m", "=", "y", ".", "shape", "[", "0", "]", "\n", "new_y", "=", "y", ".", "copy", "(", ")", "\n", "flipper", "=", "np", ".", "random", ".", "RandomState", "(", "random_state", ")", "\n", "\n", "for", "idx", "in", "np", ".", "arange", "(", "m", ")", ":", "\n", "        ", "i", "=", "y", "[", "idx", "]", "\n", "# i is np.array, such as [1]", "\n", "if", "not", "isinstance", "(", "i", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "i", "=", "[", "i", "]", "\n", "# draw a vector with only an 1", "\n", "", "flipped", "=", "flipper", ".", "multinomial", "(", "1", ",", "P", "[", "i", ",", ":", "]", "[", "0", "]", ",", "1", ")", "[", "0", "]", "\n", "new_y", "[", "idx", "]", "=", "np", ".", "where", "(", "flipped", "==", "1", ")", "[", "0", "]", "\n", "\n", "", "return", "new_y", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.noisify": [[190, 196], ["NoisyUtil.noisify_pairflip", "NoisyUtil.noisify_multiclass_symmetric"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.noisify_pairflip", "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.noisify_multiclass_symmetric"], ["", "def", "noisify", "(", "dataset", "=", "'mnist'", ",", "nb_classes", "=", "10", ",", "train_labels", "=", "None", ",", "noise_type", "=", "None", ",", "noise_rate", "=", "0", ",", "random_state", "=", "1", ")", ":", "\n", "    ", "if", "noise_type", "==", "'pairflip'", ":", "\n", "        ", "train_noisy_labels", ",", "actual_noise_rate", "=", "noisify_pairflip", "(", "train_labels", ",", "noise_rate", ",", "random_state", "=", "1", ",", "nb_classes", "=", "nb_classes", ")", "\n", "", "if", "noise_type", "==", "'symmetric'", ":", "\n", "        ", "train_noisy_labels", ",", "actual_noise_rate", "=", "noisify_multiclass_symmetric", "(", "train_labels", ",", "noise_rate", ",", "random_state", "=", "1", ",", "nb_classes", "=", "nb_classes", ")", "\n", "", "return", "train_noisy_labels", ",", "actual_noise_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.getNoisyData": [[290, 302], ["NoisyUtil.dataset_split", "torchvision.datasets.CIFAR10", "numpy.array", "torchvision.datasets.CIFAR100"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.dataset_split"], ["", "", "def", "getNoisyData", "(", "seed", ",", "dataset", ",", "data_root", ",", "data_percent", ",", "noise_type", ",", "noise_rate", ",", "include_noise", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    return train_data, val_data, train_noisy_labels, val_noisy_labels, train_clean_labels, val_clean_labels\n    \"\"\"", "\n", "if", "dataset", "==", "\"CIFAR10\"", "or", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "num_classes", "=", "10", "\n", "train_set", "=", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "False", ")", "\n", "", "elif", "dataset", "==", "\"CIFAR100\"", "or", "dataset", "==", "\"cifar100\"", ":", "\n", "        ", "num_classes", "=", "100", "\n", "train_set", "=", "CIFAR100", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "False", ")", "\n", "\n", "", "return", "dataset_split", "(", "train_set", ".", "data", ",", "np", ".", "array", "(", "train_set", ".", "targets", ")", ",", "noise_rate", ",", "noise_type", ",", "data_percent", ",", "seed", ",", "num_classes", ",", "include_noise", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.getDataLoaders": [[304, 341], ["NoisyUtil.dataset_split", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "isinstance", "ValueError", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "numpy.array", "print", "NoisyUtil.Train_Dataset", "NoisyUtil.Train_Dataset", "NoisyUtil.Train_Dataset", "NoisyUtil.Train_Dataset", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.dataset_split"], ["", "def", "getDataLoaders", "(", "seed", ",", "dataset", ",", "data_root", ",", "data_percent", ",", "noise_type", ",", "noise_rate", ",", "batch_size", ",", "is_clean", "=", "False", ",", "no_aug", "=", "False", ")", ":", "\n", "\n", "    ", "if", "not", "isinstance", "(", "noise_rate", ",", "float", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"noise_rate is not float\"", ")", "\n", "\n", "", "if", "dataset", "==", "\"CIFAR10\"", "or", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", "]", ")", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", "]", ")", "\n", "num_classes", "=", "10", "\n", "train_set", "=", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "False", ")", "\n", "test_set", "=", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "False", ",", "transform", "=", "transform_test", ",", "download", "=", "True", ")", "\n", "", "elif", "dataset", "==", "\"CIFAR100\"", "or", "dataset", "==", "\"cifar100\"", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", "]", ")", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", "]", ")", "\n", "num_classes", "=", "100", "\n", "train_set", "=", "CIFAR100", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "False", ")", "\n", "test_set", "=", "CIFAR100", "(", "root", "=", "data_root", ",", "train", "=", "False", ",", "transform", "=", "transform_test", ",", "download", "=", "True", ")", "\n", "\n", "", "train_data", ",", "val_data", ",", "train_noisy_labels", ",", "val_noisy_labels", ",", "train_clean_labels", ",", "val_clean_labels", "=", "dataset_split", "(", "train_set", ".", "data", ",", "np", ".", "array", "(", "train_set", ".", "targets", ")", ",", "noise_rate", ",", "noise_type", ",", "data_percent", ",", "seed", ",", "num_classes", ")", "\n", "\n", "if", "no_aug", ":", "\n", "        ", "transform_train", "=", "transform_test", "\n", "\n", "", "if", "is_clean", ":", "\n", "        ", "print", "(", "\"train with clean labels\"", ")", "\n", "train_dataset", "=", "Train_Dataset", "(", "train_data", ",", "train_clean_labels", ",", "transform_train", ")", "\n", "val_dataset", "=", "Train_Dataset", "(", "val_data", ",", "val_clean_labels", ",", "transform_test", ")", "\n", "", "else", ":", "\n", "        ", "train_dataset", "=", "Train_Dataset", "(", "train_data", ",", "train_noisy_labels", ",", "transform_train", ")", "\n", "val_dataset", "=", "Train_Dataset", "(", "val_data", ",", "val_noisy_labels", ",", "transform_test", ")", "\n", "\n", "", "train_loader", "=", "DataLoader", "(", "dataset", "=", "train_dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "val_loader", "=", "DataLoader", "(", "dataset", "=", "val_dataset", ",", "batch_size", "=", "batch_size", "*", "2", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "test_loader", "=", "DataLoader", "(", "dataset", "=", "test_set", ",", "batch_size", "=", "batch_size", "*", "2", ",", "shuffle", "=", "False", ",", "num_workers", "=", "8", ",", "pin_memory", "=", "True", ")", "\n", "\n", "return", "train_loader", ",", "val_loader", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.NoisyUtil.get_transition_matrix": [[343, 367], ["numpy.ones", "range", "numpy.eye", "range"], "function", ["None"], ["", "def", "get_transition_matrix", "(", "dataset", ",", "noise_type", ",", "noise_rate", ")", ":", "\n", "    ", "if", "dataset", "==", "\"CIFAR10\"", "or", "dataset", "==", "\"cifar10\"", ":", "\n", "        ", "nb_classes", "=", "10", "\n", "", "elif", "dataset", "==", "\"CIFAR100\"", "or", "dataset", "==", "\"cifar100\"", ":", "\n", "        ", "nb_classes", "=", "100", "\n", "\n", "", "if", "noise_type", "==", "\"symmetric\"", ":", "\n", "        ", "transition_matrix", "=", "np", ".", "ones", "(", "(", "nb_classes", ",", "nb_classes", ")", ")", "\n", "transition_matrix", "=", "(", "noise_rate", "/", "(", "nb_classes", "-", "1", ")", ")", "*", "transition_matrix", "\n", "if", "noise_rate", ">", "0.0", ":", "\n", "            ", "transition_matrix", "[", "0", ",", "0", "]", "=", "1.", "-", "noise_rate", "\n", "for", "i", "in", "range", "(", "1", ",", "nb_classes", "-", "1", ")", ":", "\n", "                ", "transition_matrix", "[", "i", ",", "i", "]", "=", "1.", "-", "noise_rate", "\n", "transition_matrix", "[", "nb_classes", "-", "1", ",", "nb_classes", "-", "1", "]", "=", "1.", "-", "noise_rate", "\n", "\n", "", "", "", "elif", "noise_type", "==", "\"pairflip\"", ":", "\n", "        ", "transition_matrix", "=", "np", ".", "eye", "(", "nb_classes", ")", "\n", "if", "noise_rate", ">", "0.0", ":", "\n", "            ", "transition_matrix", "[", "0", ",", "0", "]", ",", "transition_matrix", "[", "0", ",", "1", "]", "=", "1.", "-", "noise_rate", ",", "noise_rate", "\n", "for", "i", "in", "range", "(", "1", ",", "nb_classes", "-", "1", ")", ":", "\n", "                ", "transition_matrix", "[", "i", ",", "i", "]", ",", "transition_matrix", "[", "i", ",", "i", "+", "1", "]", "=", "1.", "-", "noise_rate", ",", "noise_rate", "\n", "", "transition_matrix", "[", "nb_classes", "-", "1", ",", "nb_classes", "-", "1", "]", ",", "transition_matrix", "[", "nb_classes", "-", "1", ",", "0", "]", "=", "1.", "-", "noise_rate", ",", "noise_rate", "\n", "\n", "", "", "return", "transition_matrix", "\n", "", ""]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.__init__": [[20, 24], ["tools.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "':f'", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.reset": [[25, 30], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update": [[31, 36], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.__str__": [[37, 40], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "'{name} {avg'", "+", "self", ".", "fmt", "+", "'}'", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter.__init__": [[43, 47], ["tools.ProgressMeter._get_batch_fmtstr"], "methods", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter._get_batch_fmtstr"], ["    ", "def", "__init__", "(", "self", ",", "num_batches", ",", "meters", ",", "prefix", "=", "\"\"", ")", ":", "\n", "        ", "self", ".", "batch_fmtstr", "=", "self", ".", "_get_batch_fmtstr", "(", "num_batches", ")", "\n", "self", ".", "meters", "=", "meters", "\n", "self", ".", "prefix", "=", "prefix", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter.display": [[48, 52], ["print", "str", "tools.ProgressMeter.batch_fmtstr.format"], "methods", ["None"], ["", "def", "display", "(", "self", ",", "batch", ")", ":", "\n", "        ", "entries", "=", "[", "self", ".", "prefix", "+", "self", ".", "batch_fmtstr", ".", "format", "(", "batch", ")", "]", "\n", "entries", "+=", "[", "str", "(", "meter", ")", "for", "meter", "in", "self", ".", "meters", "]", "\n", "print", "(", "'\\t'", ".", "join", "(", "entries", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter._get_batch_fmtstr": [[53, 57], ["len", "str", "str", "fmt.format"], "methods", ["None"], ["", "def", "_get_batch_fmtstr", "(", "self", ",", "num_batches", ")", ":", "\n", "        ", "num_digits", "=", "len", "(", "str", "(", "num_batches", "//", "1", ")", ")", "\n", "fmt", "=", "'{:'", "+", "str", "(", "num_digits", ")", "+", "'d}'", "\n", "return", "'['", "+", "fmt", "+", "'/'", "+", "fmt", ".", "format", "(", "num_batches", ")", "+", "']'", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.getTime": [[12, 15], ["datetime.datetime.now", "datetime.datetime.now.strftime"], "function", ["None"], ["def", "getTime", "(", ")", ":", "\n", "    ", "time_stamp", "=", "datetime", ".", "datetime", ".", "now", "(", ")", "\n", "return", "time_stamp", ".", "strftime", "(", "'%H:%M:%S'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.accuracy": [[59, 73], ["torch.no_grad", "torch.no_grad", "max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].reshape().float().sum", "res.append", "correct[].reshape().float().sum.mul_", "target.view", "correct[].reshape().float", "correct[].reshape"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "reshape", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.train": [[75, 111], ["tools.AverageMeter", "tools.AverageMeter", "tools.AverageMeter", "tools.AverageMeter", "tools.ProgressMeter", "model.train", "time.time", "enumerate", "tools.ProgressMeter.display", "len", "tools.AverageMeter.update", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "model", "ceriation", "tools.accuracy", "tools.AverageMeter.update", "tools.AverageMeter.update", "optimizer.zero_grad", "ceriation.backward", "optimizer.step", "tools.AverageMeter.update", "time.time", "AverageMeter.avg.to().item", "ceriation.item", "images[].size", "images[].size", "time.time", "torch.autograd.Variable", "torch.autograd.Variable", "time.time", "AverageMeter.avg.to"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.train", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.ProgressMeter.display", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.accuracy", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update"], ["", "", "def", "train", "(", "model", ",", "train_loader", ",", "optimizer", ",", "ceriation", ",", "epoch", ")", ":", "\n", "    ", "batch_time", "=", "AverageMeter", "(", "'Time'", ",", "':6.2f'", ")", "\n", "data_time", "=", "AverageMeter", "(", "'Data'", ",", "':6.2f'", ")", "\n", "losses", "=", "AverageMeter", "(", "'Loss'", ",", "':6.2f'", ")", "\n", "top1", "=", "AverageMeter", "(", "'Acc@1'", ",", "':6.2f'", ")", "\n", "progress", "=", "ProgressMeter", "(", "\n", "len", "(", "train_loader", ")", ",", "\n", "[", "batch_time", ",", "data_time", ",", "losses", ",", "top1", "]", ",", "\n", "prefix", "=", "\"Train Epoch: [{}]\"", ".", "format", "(", "epoch", ")", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "images", ",", "labels", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "# measure data loading time", "\n", "        ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "images", "=", "Variable", "(", "images", ")", ".", "cuda", "(", ")", "\n", "labels", "=", "Variable", "(", "labels", ")", ".", "cuda", "(", ")", "\n", "\n", "logist", "=", "model", "(", "images", ")", "\n", "loss", "=", "ceriation", "(", "logist", ",", "labels", ")", "\n", "\n", "acc1", ",", "acc5", "=", "accuracy", "(", "logist", ",", "labels", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "images", "[", "0", "]", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ",", "images", "[", "0", "]", ".", "size", "(", "0", ")", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "progress", ".", "display", "(", "0", ")", "\n", "return", "losses", ".", "avg", ",", "top1", ".", "avg", ".", "to", "(", "\"cpu\"", ",", "torch", ".", "float", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.evaluate": [[113, 135], ["tools.AverageMeter", "tools.AverageMeter", "model.eval", "torch.no_grad", "torch.no_grad", "enumerate", "print", "AverageMeter.avg.to().item", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "model", "ceriation", "tools.accuracy", "tools.AverageMeter.update", "tools.AverageMeter.update", "tools.getTime", "round", "ceriation.item", "images[].size", "images[].size", "AverageMeter.avg.item", "AverageMeter.avg.to", "torch.autograd.Variable", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.accuracy", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.getTime"], ["", "def", "evaluate", "(", "model", ",", "eva_loader", ",", "ceriation", ",", "prefix", ",", "ignore", "=", "-", "1", ")", ":", "\n", "    ", "losses", "=", "AverageMeter", "(", "'Loss'", ",", "':3.2f'", ")", "\n", "top1", "=", "AverageMeter", "(", "'Acc@1'", ",", "':3.2f'", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "images", ",", "labels", ")", "in", "enumerate", "(", "eva_loader", ")", ":", "\n", "            ", "images", "=", "Variable", "(", "images", ")", ".", "cuda", "(", ")", "\n", "labels", "=", "Variable", "(", "labels", ")", ".", "cuda", "(", ")", "\n", "\n", "logist", "=", "model", "(", "images", ")", "\n", "\n", "loss", "=", "ceriation", "(", "logist", ",", "labels", ")", "\n", "acc1", ",", "acc5", "=", "accuracy", "(", "logist", ",", "labels", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "images", "[", "0", "]", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ",", "images", "[", "0", "]", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "", "if", "prefix", "!=", "\"\"", ":", "\n", "        ", "print", "(", "getTime", "(", ")", ",", "prefix", ",", "round", "(", "top1", ".", "avg", ".", "item", "(", ")", ",", "2", ")", ")", "\n", "\n", "", "return", "losses", ".", "avg", ",", "top1", ".", "avg", ".", "to", "(", "\"cpu\"", ",", "torch", ".", "float", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.evaluateWithBoth": [[137, 157], ["tools.AverageMeter", "model1.eval", "model2.eval", "AverageMeter.avg.to().item", "torch.no_grad", "torch.no_grad", "enumerate", "print", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "model1", "model2", "tools.accuracy", "tools.AverageMeter.update", "tools.getTime", "round", "AverageMeter.avg.to", "images[].size", "AverageMeter.avg.item", "torch.autograd.Variable", "torch.autograd.Variable", "torch.softmax", "torch.softmax"], "function", ["home.repos.pwc.inspect_result.tmllab_PES.common.tools.accuracy", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.AverageMeter.update", "home.repos.pwc.inspect_result.tmllab_PES.common.tools.getTime"], ["", "def", "evaluateWithBoth", "(", "model1", ",", "model2", ",", "eva_loader", ",", "prefix", ")", ":", "\n", "    ", "top1", "=", "AverageMeter", "(", "'Acc@1'", ",", "':3.2f'", ")", "\n", "model1", ".", "eval", "(", ")", "\n", "model2", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "images", ",", "labels", ")", "in", "enumerate", "(", "eva_loader", ")", ":", "\n", "            ", "images", "=", "Variable", "(", "images", ")", ".", "cuda", "(", ")", "\n", "labels", "=", "Variable", "(", "labels", ")", ".", "cuda", "(", ")", "\n", "\n", "logist1", "=", "model1", "(", "images", ")", "\n", "logist2", "=", "model2", "(", "images", ")", "\n", "logist", "=", "(", "F", ".", "softmax", "(", "logist1", ",", "dim", "=", "1", ")", "+", "F", ".", "softmax", "(", "logist2", ",", "dim", "=", "1", ")", ")", "/", "2", "\n", "acc1", ",", "acc5", "=", "accuracy", "(", "logist", ",", "labels", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ",", "images", "[", "0", "]", ".", "size", "(", "0", ")", ")", "\n", "\n", "", "", "if", "prefix", "!=", "\"\"", ":", "\n", "        ", "print", "(", "getTime", "(", ")", ",", "prefix", ",", "round", "(", "top1", ".", "avg", ".", "item", "(", ")", ",", "2", ")", ")", "\n", "\n", "", "return", "top1", ".", "avg", ".", "to", "(", "\"cpu\"", ",", "torch", ".", "float", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.predict": [[159, 175], ["model.eval", "torch.no_grad", "torch.no_grad", "torch.cat().cpu", "torch.cat().cpu", "torch.cat().cpu", "torch.cat().cpu", "torch.cuda.is_available", "torch.cuda.is_available", "torch.autograd.Variable().cuda", "model", "torch.softmax", "torch.max", "torch.max", "preds.append", "probs.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.Variable"], "function", ["None"], ["", "def", "predict", "(", "predict_loader", ",", "model", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "preds", "=", "[", "]", "\n", "probs", "=", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "images", ",", "_", "in", "predict_loader", ":", "\n", "            ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                ", "images", "=", "Variable", "(", "images", ")", ".", "cuda", "(", ")", "\n", "logits", "=", "model", "(", "images", ")", "\n", "outputs", "=", "F", ".", "softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "prob", ",", "pred", "=", "torch", ".", "max", "(", "outputs", ".", "data", ",", "1", ")", "\n", "preds", ".", "append", "(", "pred", ")", "\n", "probs", ".", "append", "(", "prob", ")", "\n", "\n", "", "", "", "return", "torch", ".", "cat", "(", "preds", ",", "dim", "=", "0", ")", ".", "cpu", "(", ")", ",", "torch", ".", "cat", "(", "probs", ",", "dim", "=", "0", ")", ".", "cpu", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tmllab_PES.common.tools.predict_softmax": [[177, 192], ["model.eval", "torch.cat().cpu", "torch.cat().cpu", "torch.no_grad", "torch.no_grad", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cat", "torch.cat", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "model", "model", "softmax_outs.append", "torch.autograd.Variable", "torch.autograd.Variable", "torch.softmax", "torch.softmax"], "function", ["None"], ["", "def", "predict_softmax", "(", "predict_loader", ",", "model", ")", ":", "\n", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "softmax_outs", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "images1", ",", "images2", "in", "predict_loader", ":", "\n", "            ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                ", "images1", "=", "Variable", "(", "images1", ")", ".", "cuda", "(", ")", "\n", "images2", "=", "Variable", "(", "images2", ")", ".", "cuda", "(", ")", "\n", "logits1", "=", "model", "(", "images1", ")", "\n", "logits2", "=", "model", "(", "images2", ")", "\n", "outputs", "=", "(", "F", ".", "softmax", "(", "logits1", ",", "dim", "=", "1", ")", "+", "F", ".", "softmax", "(", "logits2", ",", "dim", "=", "1", ")", ")", "/", "2", "\n", "softmax_outs", ".", "append", "(", "outputs", ")", "\n", "\n", "", "", "", "return", "torch", ".", "cat", "(", "softmax_outs", ",", "dim", "=", "0", ")", ".", "cpu", "(", ")", "\n", "", ""]]}