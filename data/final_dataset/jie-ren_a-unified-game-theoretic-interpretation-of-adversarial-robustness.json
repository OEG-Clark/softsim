{"home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.plot.draw_hist": [[11, 27], ["matplotlib.subplots", "ax.bar", "ax.bar", "ax.set_xlabel", "ax.set_ylabel", "ax.set_title", "numpy.arange", "ax.set_xticks", "ax.set_xticklabels", "ax.legend", "fig.tight_layout", "matplotlib.savefig", "matplotlib.close"], "function", ["None"], ["def", "draw_hist", "(", "arch", ",", "orders", ",", "ori_mean", ",", "adv_mean", ",", "save_name", ")", ":", "\n", "    ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "bar_width", "=", "0.02", "\n", "errorbar_config", "=", "{", "'capsize'", ":", "3", "}", "\n", "ax", ".", "bar", "(", "orders", ",", "ori_mean", ",", "bar_width", ",", "yerr", "=", "None", ",", "error_kw", "=", "errorbar_config", ",", "label", "=", "\"ori_img\"", ")", "\n", "ax", ".", "bar", "(", "orders", "+", "bar_width", ",", "adv_mean", ",", "bar_width", ",", "yerr", "=", "None", ",", "error_kw", "=", "errorbar_config", ",", "label", "=", "\"adv_img\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"ratio of pixels\"", ")", "\n", "ax", ".", "set_ylabel", "(", "\"interaction\"", ")", "\n", "ax", ".", "set_title", "(", "arch", ")", "\n", "x", "=", "np", ".", "arange", "(", "0.1", ",", "1.1", ",", "0.1", ")", "\n", "ax", ".", "set_xticks", "(", "x", "+", "bar_width", "/", "2", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "'0.1'", ",", "'0.2'", ",", "'0.3'", ",", "'0.4'", ",", "'0.5'", ",", "'0.6'", ",", "'0.7'", ",", "'0.8'", ",", "'0.9'", ",", "'1.0'", "]", ")", "\n", "ax", ".", "legend", "(", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "save_name", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.plot.draw_inter_diff": [[29, 40], ["matplotlib.subplots", "ax.plot", "ax.fill_between", "ax.set_xlabel", "ax.set_ylabel", "ax.set_title", "ax.set_xticks", "fig.tight_layout", "matplotlib.savefig", "matplotlib.close", "numpy.arange"], "function", ["None"], ["", "def", "draw_inter_diff", "(", "arch", ",", "orders", ",", "diff", ",", "save_name", ")", ":", "\n", "    ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "ax", ".", "plot", "(", "orders", ",", "diff", ",", "color", "=", "'green'", ")", "\n", "ax", ".", "fill_between", "(", "orders", ",", "0", ",", "diff", ",", "facecolor", "=", "'green'", ",", "alpha", "=", "0.3", ")", "\n", "ax", ".", "set_xlabel", "(", "'ratio of pixels'", ")", "\n", "ax", ".", "set_ylabel", "(", "\"interaction difference\"", ")", "\n", "ax", ".", "set_title", "(", "arch", ")", "\n", "ax", ".", "set_xticks", "(", "np", ".", "arange", "(", "0.1", ",", "1.1", ",", "0.1", ")", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "save_name", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.plot.draw_curve": [[42, 54], ["matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "matplotlib.legend", "matplotlib.xticks", "matplotlib.tight_layout", "matplotlib.savefig", "matplotlib.close", "numpy.arange"], "function", ["None"], ["", "def", "draw_curve", "(", "arch", ",", "orders", ",", "ori_data", ",", "adv_data", ",", "save_name", ",", "ylabel", "=", "'disentanglement'", ")", ":", "\n", "    ", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "orders", ",", "ori_data", ",", "label", "=", "'ori_model'", ")", "\n", "plt", ".", "plot", "(", "orders", ",", "adv_data", ",", "label", "=", "'adv_model'", ")", "\n", "plt", ".", "xlabel", "(", "'ratio of pixels'", ")", "\n", "plt", ".", "ylabel", "(", "ylabel", ")", "\n", "plt", ".", "title", "(", "arch", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xticks", "(", "np", ".", "arange", "(", "0.1", ",", "1.1", ",", "0.1", ")", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "save_name", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.plot.get_disentanglement": [[56, 91], ["os.path.join", "os.path.join", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "orders_disen.append", "adv_orders_disen.append", "numpy.array", "numpy.array", "int", "numpy.load", "numpy.load", "numpy.abs", "numpy.mean", "np.array.append", "np.array.append", "numpy.abs", "numpy.mean", "np.array.append", "np.array.append", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "os.path.join", "os.path.join", "numpy.mean", "numpy.abs", "numpy.mean", "numpy.abs"], "function", ["None"], ["", "def", "get_disentanglement", "(", "args", ",", "all_imgs", ")", ":", "\n", "\n", "    ", "orders_disen", "=", "[", "]", "\n", "adv_orders_disen", "=", "[", "]", "\n", "for", "r", "in", "args", ".", "ratios", ":", "\n", "        ", "order", "=", "\"ratio{}\"", ".", "format", "(", "int", "(", "r", "*", "100", ")", ")", "\n", "inters_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "interaction_dir", ",", "\"ori_model\"", ",", "order", ")", "\n", "inters_dir_advmodel", "=", "os", ".", "path", ".", "join", "(", "args", ".", "interaction_dir", ",", "\"adv_model\"", ",", "order", ")", "\n", "r_inters_2", ",", "r_inters_3", "=", "[", "]", ",", "[", "]", "\n", "adv_r_inters_2", ",", "adv_r_inters_3", "=", "[", "]", ",", "[", "]", "\n", "for", "t", "in", "all_imgs", ":", "\n", "            ", "tmp", "=", "t", "+", "\"_interaction.npy\"", "\n", "inter", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "inters_dir", ",", "tmp", ")", ")", "\n", "adv_inter", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "inters_dir_advmodel", ",", "tmp", ")", ")", "\n", "\n", "inter_2", "=", "np", ".", "abs", "(", "np", ".", "mean", "(", "inter", ",", "axis", "=", "1", ")", ")", "\n", "inter_3", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "inter", ")", ",", "axis", "=", "1", ")", "\n", "r_inters_2", ".", "append", "(", "inter_2", ")", "\n", "r_inters_3", ".", "append", "(", "inter_3", ")", "\n", "\n", "adv_inter_2", "=", "np", ".", "abs", "(", "np", ".", "mean", "(", "adv_inter", ",", "axis", "=", "1", ")", ")", "\n", "adv_inter_3", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "adv_inter", ")", ",", "axis", "=", "1", ")", "\n", "adv_r_inters_2", ".", "append", "(", "adv_inter_2", ")", "\n", "adv_r_inters_3", ".", "append", "(", "adv_inter_3", ")", "\n", "\n", "", "r_inters_2", "=", "np", ".", "array", "(", "r_inters_2", ")", "\n", "r_inters_3", "=", "np", ".", "array", "(", "r_inters_3", ")", "\n", "adv_r_inters_2", "=", "np", ".", "array", "(", "adv_r_inters_2", ")", "\n", "adv_r_inters_3", "=", "np", ".", "array", "(", "adv_r_inters_3", ")", "\n", "disen_ori", "=", "np", ".", "mean", "(", "r_inters_2", ")", "/", "np", ".", "mean", "(", "r_inters_3", ")", "\n", "orders_disen", ".", "append", "(", "disen_ori", ")", "\n", "disen_adv", "=", "np", ".", "mean", "(", "adv_r_inters_2", ")", "/", "np", ".", "mean", "(", "adv_r_inters_3", ")", "\n", "adv_orders_disen", ".", "append", "(", "disen_adv", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "orders_disen", ")", ",", "np", ".", "array", "(", "adv_orders_disen", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.plot.get_interaction_all": [[93, 132], ["os.path.join", "numpy.array", "numpy.array", "orders_inter_mean.append", "orders_inter_std.append", "adv_orders_inter_mean.append", "adv_orders_inter_std.append", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "int", "int", "numpy.load", "numpy.mean", "np.array.append", "numpy.load", "numpy.mean", "np.array.append", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "get_interaction_all", "(", "args", ",", "all_imgs", ",", "use_coef", "=", "False", ")", ":", "\n", "\n", "    ", "orders_inter_mean", "=", "[", "]", "\n", "orders_inter_std", "=", "[", "]", "\n", "adv_orders_inter_mean", "=", "[", "]", "\n", "adv_orders_inter_std", "=", "[", "]", "\n", "for", "r", "in", "args", ".", "ratios", ":", "\n", "        ", "order", "=", "\"ratio{}\"", ".", "format", "(", "int", "(", "r", "*", "100", ")", ")", "\n", "coef", "=", "1", "\n", "if", "use_coef", ":", "\n", "# coefficient for m-order interaction", "\n", "            ", "tot_N", "=", "args", ".", "grid_size", "**", "2", "\n", "m", "=", "int", "(", "(", "tot_N", "-", "2", ")", "*", "r", ")", "# m-order", "\n", "coef", "=", "(", "tot_N", "-", "1", "-", "m", ")", "*", "1.0", "/", "tot_N", "/", "(", "tot_N", "-", "1", ")", "\n", "\n", "", "inters_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "inter_dir", ",", "order", ")", "\n", "r_inters", "=", "[", "]", "# interactions for all imgs of this order", "\n", "adv_r_inters", "=", "[", "]", "\n", "for", "t", "in", "all_imgs", ":", "\n", "            ", "tmp", "=", "t", "+", "\"_interaction.npy\"", "\n", "inter", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "inters_dir", ",", "tmp", ")", ")", "# (pair_num, sample_num)", "\n", "inter", "=", "np", ".", "mean", "(", "inter", ",", "axis", "=", "1", ")", "# pair_num", "\n", "inter", "=", "coef", "*", "inter", "\n", "r_inters", ".", "append", "(", "inter", ")", "\n", "\n", "adv_inter", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "inters_dir", ",", "\"adv_\"", "+", "tmp", ")", ")", "\n", "adv_inter", "=", "np", ".", "mean", "(", "adv_inter", ",", "axis", "=", "1", ")", "# pair_num", "\n", "adv_inter", "=", "coef", "*", "adv_inter", "\n", "adv_r_inters", ".", "append", "(", "adv_inter", ")", "\n", "\n", "", "r_inters", "=", "np", ".", "array", "(", "r_inters", ")", "# (imgs_num, pair_num)", "\n", "adv_r_inters", "=", "np", ".", "array", "(", "adv_r_inters", ")", "\n", "\n", "orders_inter_mean", ".", "append", "(", "np", ".", "mean", "(", "r_inters", ")", ")", "\n", "orders_inter_std", ".", "append", "(", "np", ".", "std", "(", "r_inters", ",", "ddof", "=", "1", ")", ")", "# unbiased std", "\n", "adv_orders_inter_mean", ".", "append", "(", "np", ".", "mean", "(", "adv_r_inters", ")", ")", "\n", "adv_orders_inter_std", ".", "append", "(", "np", ".", "std", "(", "adv_r_inters", ",", "ddof", "=", "1", ")", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "orders_inter_mean", ")", ",", "np", ".", "array", "(", "orders_inter_std", ")", ",", "np", ".", "array", "(", "adv_orders_inter_mean", ")", ",", "np", ".", "array", "(", "adv_orders_inter_std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.compute_interactions.compute_order_interaction_img": [[26, 59], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "ori_logits.reshape.reshape", "adv_logits.reshape.reshape", "time.time", "range", "numpy.array().reshape", "numpy.array().reshape", "print", "print", "numpy.save", "numpy.save", "os.path.join", "os.path.join", "range", "os.path.join", "os.path.join", "torch.log_softmax", "torch.log_softmax", "np.array().reshape.append", "np.array().reshape.append", "numpy.array", "numpy.array", "score_ori.item", "score_adv.item", "time.time"], "function", ["None"], ["def", "compute_order_interaction_img", "(", "img_name", ",", "lbl", ",", "args", ",", "save_dir", ",", "netout_dir", ")", ":", "\n", "    ", "ori_interaction", "=", "[", "]", "# save order interactions of point-pairs in ori image", "\n", "adv_interaction", "=", "[", "]", "# save order interactions of point-pairs in adv image", "\n", "\n", "ori_logits", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "netout_dir", ",", "'{}_output.pt'", ".", "format", "(", "img_name", ")", ")", ")", "# (pair_num*sample_num*4, 1000)", "\n", "adv_logits", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "netout_dir", ",", "'adv_{}_output.pt'", ".", "format", "(", "img_name", ")", ")", ")", "\n", "\n", "ori_logits", "=", "ori_logits", ".", "reshape", "(", "(", "args", ".", "pair_num", ",", "args", ".", "sample_num", "*", "4", ",", "1000", ")", ")", "\n", "adv_logits", "=", "adv_logits", ".", "reshape", "(", "(", "args", ".", "pair_num", ",", "args", ".", "sample_num", "*", "4", ",", "1000", ")", ")", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "pair_num", ")", ":", "\n", "        ", "output_ori", "=", "ori_logits", "[", "i", ",", ":", ",", ":", "]", "\n", "output_adv", "=", "adv_logits", "[", "i", ",", ":", ",", ":", "]", "\n", "\n", "y_ori", "=", "F", ".", "log_softmax", "(", "output_ori", ",", "dim", "=", "1", ")", "[", ":", ",", "lbl", "[", "0", "]", "]", "\n", "y_adv", "=", "F", ".", "log_softmax", "(", "output_adv", ",", "dim", "=", "1", ")", "[", ":", ",", "lbl", "[", "0", "]", "]", "\n", "\n", "for", "k", "in", "range", "(", "args", ".", "sample_num", ")", ":", "\n", "            ", "score_ori", "=", "y_ori", "[", "4", "*", "k", "]", "+", "y_ori", "[", "4", "*", "k", "+", "3", "]", "-", "y_ori", "[", "4", "*", "k", "+", "1", "]", "-", "y_ori", "[", "4", "*", "k", "+", "2", "]", "\n", "score_adv", "=", "y_adv", "[", "4", "*", "k", "]", "+", "y_adv", "[", "4", "*", "k", "+", "3", "]", "-", "y_adv", "[", "4", "*", "k", "+", "1", "]", "-", "y_adv", "[", "4", "*", "k", "+", "2", "]", "\n", "# cur_score = cur_score - inter_order_0", "\n", "ori_interaction", ".", "append", "(", "score_ori", ".", "item", "(", ")", ")", "\n", "adv_interaction", ".", "append", "(", "score_adv", ".", "item", "(", ")", ")", "\n", "\n", "", "", "ori_interaction", "=", "np", ".", "array", "(", "ori_interaction", ")", ".", "reshape", "(", "-", "1", ",", "args", ".", "sample_num", ")", "\n", "adv_interaction", "=", "np", ".", "array", "(", "adv_interaction", ")", ".", "reshape", "(", "-", "1", ",", "args", ".", "sample_num", ")", "\n", "assert", "ori_interaction", ".", "shape", "[", "0", "]", "==", "args", ".", "pair_num", "\n", "\n", "print", "(", "'Image: %s, time: %.3f'", "%", "(", "img_name", ",", "time", ".", "time", "(", ")", "-", "tic", ")", ")", "\n", "print", "(", "'--------------------------'", ")", "\n", "tmp", "=", "\"img{}_interaction.npy\"", ".", "format", "(", "img_name", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "tmp", ")", ",", "ori_interaction", ")", "# (pair_num, sample_num)", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"adv_\"", "+", "tmp", ")", ",", "adv_interaction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.compute_interactions.prepare": [[61, 96], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "tools.newlib.ImageNetSelectedDataset", "print", "print", "robu.datasets.ImageNet", "robu.model_utils.make_and_restore_model", "print", "robu.datasets.ImageNet", "robu.model_utils.make_and_restore_model", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.make_and_restore_model", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.make_and_restore_model"], ["", "def", "prepare", "(", "args", ")", ":", "\n", "# prepare data---------------", "\n", "# Only for ImageNet", "\n", "    ", "if", "args", ".", "dataset_name", "==", "\"imagenet\"", ":", "\n", "        ", "class_num", "=", "1000", "\n", "args", ".", "img_size", "=", "224", "\n", "args", ".", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "args", ".", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "args", ".", "transform", "=", "transform", "\n", "# need args.root, args.img_size, args.seed", "\n", "dataset", "=", "ImageNetSelectedDataset", "(", "train", "=", "False", ",", "args", "=", "args", ",", "selected_num", "=", "args", ".", "base_num", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"No such dataset %s!\"", "%", "args", ".", "dataset_name", ")", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ")", "# bs=1", "\n", "\n", "# prepare models----------------", "\n", "if", "args", ".", "adv_model", ":", "\n", "        ", "print", "(", "'Load adversarial model.'", ")", "\n", "ds", "=", "robustdatasets", ".", "ImageNet", "(", "args", ".", "root", ")", "\n", "model", ",", "_", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "dataset", "=", "ds", ",", "\n", "resume_path", "=", "args", ".", "adv_model_path", ",", "\n", "pytorch_pretrained", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Load pytorch pretrained model.'", ")", "\n", "ds", "=", "robustdatasets", ".", "ImageNet", "(", "args", ".", "root", ")", "\n", "model", ",", "_", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "dataset", "=", "ds", ",", "\n", "resume_path", "=", "args", ".", "std_model_path", ",", "\n", "pytorch_pretrained", "=", "False", ")", "\n", "\n", "", "return", "model", ",", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.compute_interactions.compute_interactions": [[98, 129], ["model.to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model.eval", "enumerate", "image_name[].replace", "print", "img.to.to", "lbl.to.to", "numpy.load", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "model", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "os.path.join", "tools.newlib.normalize", "print", "os.path.join", "os.path.join", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int", "os.path.exists", "os.makedirs", "compute_interactions.compute_order_interaction_img", "compute_interactions.compute_order_interaction_img"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.normalize", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_order_interaction_img", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_order_interaction_img"], ["", "def", "compute_interactions", "(", "args", ",", "model", ",", "dataloader", ")", ":", "\n", "    ", "device", "=", "0", "# Do not modify", "\n", "model", ".", "to", "(", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "for", "i", ",", "(", "image_name", ",", "img", ",", "lbl", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "img_name", "=", "image_name", "[", "0", "]", ".", "replace", "(", "'.JPEG'", ",", "''", ")", "\n", "if", "not", "(", "img_name", "+", "'.npy'", "in", "args", ".", "selected_imgs", ")", ":", "\n", "                ", "continue", "\n", "", "print", "(", "\"img: %d\"", "%", "i", ",", "image_name", ",", "'label:'", ",", "lbl", ")", "\n", "\n", "img", "=", "img", ".", "to", "(", "device", ")", "\n", "lbl", "=", "lbl", ".", "to", "(", "device", ")", "\n", "\n", "img_adv", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "adv_dir", ",", "\"{}.npy\"", ".", "format", "(", "img_name", ")", ")", ")", "# ours", "\n", "img_adv", "=", "torch", ".", "from_numpy", "(", "img_adv", ")", ".", "to", "(", "device", ")", "\n", "adv_output", ",", "_", "=", "model", "(", "normalize", "(", "img_adv", ")", ")", "\n", "target_lbl", "=", "torch", ".", "argmax", "(", "adv_output", ",", "dim", "=", "1", ")", "\n", "\n", "for", "r", "in", "args", ".", "ratios", ":", "\n", "                ", "print", "(", "'Ratio:'", ",", "r", ")", "\n", "save_name", "=", "\"ratio{}\"", ".", "format", "(", "int", "(", "r", "*", "100", ")", ")", "\n", "res_dir", "=", "os", ".", "path", ".", "join", "(", "'./'", ",", "args", ".", "save_dir", ",", "save_name", ")", "\n", "netout_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "netout_dir", ",", "save_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "res_dir", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "res_dir", ")", "\n", "", "if", "args", ".", "out_type", "==", "'GT'", ":", "\n", "                    ", "compute_order_interaction_img", "(", "img_name", ",", "lbl", ",", "args", ",", "res_dir", ",", "netout_dir", ")", "\n", "", "elif", "args", ".", "out_type", "==", "'Target'", ":", "\n", "                    ", "compute_order_interaction_img", "(", "img_name", ",", "target_lbl", ",", "args", ",", "res_dir", ",", "netout_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.compute_interactions.main": [[131, 193], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "str", "tools.newlib.seed_torch", "compute_interactions.prepare", "compute_interactions.compute_interactions", "print", "os.listdir", "print", "os.listdir", "os.path.exists", "os.makedirs", "open", "f.writelines", "f.writelines", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.newlib.seed_torch", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.prepare", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_interactions"], ["", "", "", "", "", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--root'", ",", "default", "=", "'/data/renjie/data/ImageNet'", ",", "type", "=", "str", ",", "help", "=", "\"dataset path\"", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "\"GPU ID\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--seed\"", ",", "default", "=", "0", ",", "type", "=", "int", ",", "help", "=", "\"random seed\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset_name\"", ",", "default", "=", "\"imagenet\"", ",", "type", "=", "str", ",", "\n", "help", "=", "\"dataset name, currently only support 'imagenet'\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--base_num'", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'# of images randomly sampled from the dataset'", ")", "\n", "parser", ".", "add_argument", "(", "\"--grid_size\"", ",", "default", "=", "16", ",", "type", "=", "int", ",", "help", "=", "'number of grids of each img'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--ratios\"", ",", "default", "=", "[", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "0.6", ",", "0.7", ",", "0.8", ",", "0.85", ",", "0.9", ",", "0.95", ",", "1", "]", ",", "type", "=", "list", ",", "help", "=", "'ratios of context'", ")", "\n", "parser", ".", "add_argument", "(", "\"--sample_num\"", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'sample num of S'", ")", "\n", "parser", ".", "add_argument", "(", "\"--pair_num\"", ",", "default", "=", "200", ",", "type", "=", "int", ",", "help", "=", "'number of point pair of each test img'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--distance'", ",", "default", "=", "'l_inf'", ",", "type", "=", "str", ",", "help", "=", "\"type of adversarial attacks, currently only support 'l_inf'\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--targeted\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"targeted\"", ",", "help", "=", "\"whether use the targeted attack (True for targeted attack, False for untargeted attack)\"", ")", "\n", "parser", ".", "add_argument", "(", "'--out_type'", ",", "default", "=", "'GT'", ",", "type", "=", "str", ",", "help", "=", "\"the type of the output used to compute interaction. 'GT' for the ground-truth label, 'Target' for the target label\"", ")", "# GT; Target", "\n", "\n", "# for robustness library", "\n", "parser", ".", "add_argument", "(", "\"--adv_model\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"adv_model\"", ",", "help", "=", "\"the type of model (True for adversarially learned DNN, False for standardly learned DNN)\"", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "default", "=", "\"resnet18\"", ",", "type", "=", "str", ",", "help", "=", "\"model name\"", ")", "\n", "parser", ".", "add_argument", "(", "'--adv_model_path'", ",", "type", "=", "str", ",", "default", "=", "'pretrained_models/resnet18_linf_eps8.0.ckpt'", ",", "\n", "help", "=", "\"model path of the adversarially learned DNN\"", ")", "\n", "parser", ".", "add_argument", "(", "'--std_model_path'", ",", "type", "=", "str", ",", "default", "=", "'pretrained_models/resnet18_l2_eps0.ckpt'", ",", "\n", "help", "=", "\"model path of the standardly learned DNN\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "str", "(", "args", ".", "device", ")", "\n", "seed_torch", "(", "args", ".", "seed", ")", "\n", "\n", "if", "not", "args", ".", "targeted", ":", "\n", "        ", "args", ".", "img_adv", "=", "'advImgs_untarget'", "\n", "prefix", "=", "\"{}/{}/untarget/\"", ".", "format", "(", "args", ".", "distance", ",", "args", ".", "arch", ")", "\n", "", "else", ":", "\n", "        ", "args", ".", "img_adv", "=", "'advImgs_target'", "\n", "prefix", "=", "\"{}/{}/target/\"", ".", "format", "(", "args", ".", "distance", ",", "args", ".", "arch", ")", "\n", "\n", "", "if", "args", ".", "adv_model", ":", "\n", "        ", "print", "(", "'Adversarial Model.'", ")", "\n", "model_type", "=", "'adv_model'", "\n", "args", ".", "selected_imgs", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "prefix", "+", "args", ".", "img_adv", ",", "\"adv_model\"", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Pytorch pretrained Model'", ")", "\n", "model_type", "=", "'ori_model'", "\n", "args", ".", "selected_imgs", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "prefix", "+", "args", ".", "img_adv", ",", "\"ori_model\"", ")", ")", "\n", "\n", "\n", "", "args", ".", "save_dir", "=", "prefix", "+", "\"saved_interactions_\"", "+", "args", ".", "out_type", "+", "'/'", "+", "model_type", "\n", "args", ".", "adv_dir", "=", "prefix", "+", "args", ".", "img_adv", "+", "'/'", "+", "model_type", "\n", "args", ".", "netout_dir", "=", "prefix", "+", "\"saved_logits\"", "+", "'/'", "+", "model_type", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "save_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "save_dir", ")", "\n", "\n", "# save arguments", "\n", "", "with", "open", "(", "args", ".", "save_dir", "+", "'/result.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "writelines", "(", "\"decive:{}  seed:{}  base_num:{}  arch:{}\\n\"", ".", "format", "(", "args", ".", "device", ",", "args", ".", "seed", ",", "args", ".", "base_num", ",", "args", ".", "arch", ")", ")", "\n", "f", ".", "writelines", "(", "\"img_adv:{}\\n\"", ".", "format", "(", "args", ".", "adv_dir", ")", ")", "\n", "\n", "", "model", ",", "dataloader", "=", "prepare", "(", "args", ")", "\n", "compute_interactions", "(", "args", ",", "model", ",", "dataloader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.gene_pairs.gene_local_points": [[9, 52], ["range", "numpy.array", "range", "numpy.array", "range", "np.array.append", "numpy.random.randint", "numpy.random.randint", "numpy.random.shuffle", "list", "np.array.append"], "function", ["None"], ["def", "gene_local_points", "(", "grid_size", ",", "pair_num", ",", "local_size", "=", "1", ")", ":", "\n", "    ", "neighbor", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "-", "local_size", ",", "local_size", "+", "1", ")", ":", "\n", "        ", "for", "h", "in", "range", "(", "-", "local_size", ",", "local_size", "+", "1", ")", ":", "\n", "            ", "if", "j", "==", "0", "and", "h", "==", "0", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "item", "=", "[", "j", ",", "h", "]", "\n", "neighbor", ".", "append", "(", "item", ")", "\n", "\n", "", "", "", "neighbor", "=", "np", ".", "array", "(", "neighbor", ")", "\n", "\n", "tot_pairs", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "pair_num", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "x1", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "grid_size", ")", "\n", "y1", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "grid_size", ")", "\n", "point1", "=", "x1", "*", "grid_size", "+", "y1", "\n", "\n", "np", ".", "random", ".", "shuffle", "(", "neighbor", ")", "\n", "x2", "=", "x1", "+", "neighbor", "[", "0", "]", "[", "0", "]", "\n", "y2", "=", "y1", "+", "neighbor", "[", "0", "]", "[", "1", "]", "\n", "if", "x2", "<", "0", ":", "\n", "                ", "x2", "=", "0", "\n", "", "elif", "x2", ">=", "grid_size", ":", "\n", "                ", "x2", "=", "grid_size", "-", "1", "\n", "", "if", "y2", "<", "0", ":", "\n", "                ", "y2", "=", "0", "\n", "", "elif", "y2", ">=", "grid_size", ":", "\n", "                ", "y2", "=", "grid_size", "-", "1", "\n", "", "point2", "=", "x2", "*", "grid_size", "+", "y2", "\n", "\n", "if", "point1", "==", "point2", ":", "# bugFix", "\n", "                ", "continue", "\n", "\n", "", "if", "[", "point1", ",", "point2", "]", "in", "tot_pairs", "or", "[", "point2", ",", "point1", "]", "in", "tot_pairs", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "break", "\n", "", "", "tot_pairs", ".", "append", "(", "list", "(", "[", "point1", ",", "point2", "]", ")", ")", "\n", "\n", "", "tot_pairs", "=", "np", ".", "array", "(", "tot_pairs", ")", "\n", "return", "tot_pairs", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.gene_pairs.main": [[53, 124], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "numpy.random.seed", "parser.parse_args.selected_imgs.sort", "os.path.join", "os.listdir", "os.path.join", "os.listdir", "os.path.join", "os.path.exists", "os.makedirs", "im.replace", "print", "os.path.join", "os.path.join", "os.path.join", "im.startswith", "os.path.exists", "os.makedirs", "gene_pairs.gene_local_points", "numpy.save", "print", "enumerate", "os.path.join", "numpy.array", "numpy.save", "list", "list.remove", "list.remove", "int", "range", "np.array.append", "range", "players_thispair.append", "int", "numpy.random.choice"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.gene_pairs.gene_local_points"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--seed\"", ",", "default", "=", "0", ",", "type", "=", "int", ",", "help", "=", "\"random seed\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--ratios\"", ",", "default", "=", "[", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "0.6", ",", "0.7", ",", "0.8", ",", "0.85", ",", "0.9", ",", "0.95", ",", "1", "]", ",", "type", "=", "list", ",", "\n", "help", "=", "'ratios of context'", ")", "\n", "parser", ".", "add_argument", "(", "\"--sample_num\"", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'sample num of S'", ")", "\n", "parser", ".", "add_argument", "(", "\"--grid_size\"", ",", "default", "=", "16", ",", "type", "=", "int", ",", "help", "=", "'number of grids of each img'", ")", "\n", "parser", ".", "add_argument", "(", "\"--pair_num\"", ",", "default", "=", "200", ",", "type", "=", "int", ",", "help", "=", "'number of point pair of each test img'", ")", "\n", "parser", ".", "add_argument", "(", "\"--targeted\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"targeted\"", ",", "help", "=", "\"whether use the targeted attack (True for targeted attack, False for untargeted attack)\"", ")", "\n", "# prefix of save path", "\n", "parser", ".", "add_argument", "(", "'--distance'", ",", "default", "=", "'l_inf'", ",", "type", "=", "str", ",", "help", "=", "\"type of adversarial attacks, currently only support 'l_inf'\"", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "default", "=", "\"resnet18\"", ",", "type", "=", "str", ",", "help", "=", "\"model name\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--adv_model\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"adv_model\"", ",", "help", "=", "\"the type of model (True for adversarially learned DNN, False for standardly learned DNN)\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "if", "not", "args", ".", "targeted", ":", "\n", "        ", "args", ".", "img_adv", "=", "\"advImgs_untarget\"", "\n", "prefix", "=", "\"{}/{}/untarget/\"", ".", "format", "(", "args", ".", "distance", ",", "args", ".", "arch", ")", "\n", "", "else", ":", "\n", "        ", "args", ".", "img_adv", "=", "\"advImgs_target\"", "\n", "prefix", "=", "\"{}/{}/target/\"", ".", "format", "(", "args", ".", "distance", ",", "args", ".", "arch", ")", "\n", "\n", "", "if", "args", ".", "adv_model", ":", "\n", "        ", "args", ".", "selected_imgs", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "prefix", "+", "args", ".", "img_adv", ",", "\"adv_model\"", ")", ")", "\n", "args", ".", "point_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "img_adv", ",", "\"adv_model\"", ",", "\"points\"", ")", "\n", "", "else", ":", "\n", "        ", "args", ".", "selected_imgs", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "prefix", "+", "args", ".", "img_adv", ",", "\"ori_model\"", ")", ")", "\n", "args", ".", "point_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "img_adv", ",", "\"ori_model\"", ",", "\"points\"", ")", "\n", "\n", "", "args", ".", "selected_imgs", ".", "sort", "(", ")", "\n", "\n", "point_dir", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "args", ".", "point_path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "point_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "point_dir", ")", "\n", "\n", "# gene pairs for each image", "\n", "", "for", "im", "in", "args", ".", "selected_imgs", ":", "\n", "        ", "if", "not", "im", ".", "startswith", "(", "'ILSVRC'", ")", ":", "\n", "            ", "continue", "\n", "", "img_name", "=", "im", ".", "replace", "(", "'.npy'", ",", "''", ")", "\n", "print", "(", "'Image '", ",", "img_name", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "point_dir", ",", "\"img{}\"", ".", "format", "(", "img_name", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_path", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_path", ")", "\n", "\n", "tot_pairs", "=", "gene_local_points", "(", "args", ".", "grid_size", ",", "args", ".", "pair_num", ",", "local_size", "=", "1", ")", "\n", "np", ".", "save", "(", "save_path", "+", "'/points.npy'", ",", "tot_pairs", ")", "\n", "\n", "# tot_pairs = np.load(save_path + '/points.npy')", "\n", "for", "r", "in", "args", ".", "ratios", ":", "\n", "                ", "print", "(", "'Ratio:'", ",", "r", ")", "\n", "players", "=", "[", "]", "\n", "for", "p", ",", "pt", "in", "enumerate", "(", "tot_pairs", ")", ":", "\n", "                    ", "point1", ",", "point2", "=", "pt", "[", "0", "]", ",", "pt", "[", "1", "]", "\n", "# m-order interactions", "\n", "context", "=", "list", "(", "range", "(", "args", ".", "grid_size", "**", "2", ")", ")", "\n", "context", ".", "remove", "(", "point1", ")", "\n", "context", ".", "remove", "(", "point2", ")", "\n", "\n", "players_thispair", "=", "[", "]", "\n", "m", "=", "int", "(", "(", "args", ".", "grid_size", "**", "2", "-", "2", ")", "*", "r", ")", "# m-order", "\n", "for", "k", "in", "range", "(", "args", ".", "sample_num", ")", ":", "\n", "                        ", "players_thispair", ".", "append", "(", "np", ".", "random", ".", "choice", "(", "context", ",", "m", ",", "replace", "=", "False", ")", ")", "\n", "\n", "", "players", ".", "append", "(", "players_thispair", ")", "\n", "\n", "", "player_save_path", "=", "os", ".", "path", ".", "join", "(", "point_dir", ",", "\"img{}/ratio{}_S.npy\"", ".", "format", "(", "img_name", ",", "int", "(", "r", "*", "100", ")", ")", ")", "\n", "players", "=", "np", ".", "array", "(", "players", ")", "\n", "np", ".", "save", "(", "player_save_path", ",", "players", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.m_order_interaction_logit.compute_order_interaction_img": [[24, 81], ["model.to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model.eval", "img.size", "time.time", "numpy.load", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "print", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "int", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "F.interpolate().float.view", "torch.interpolate().float", "forward_mask.append", "os.path.join", "os.path.join", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "img.expand().clone", "img_adv.expand().clone", "model", "model", "ori_logits.append", "adv_logits.append", "int", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.interpolate", "len", "len", "output_ori.detach", "output_adv.detach", "F.interpolate().float.clone", "img.expand", "img_adv.expand", "time.time"], "function", ["None"], ["def", "compute_order_interaction_img", "(", "model", ",", "img", ",", "img_adv", ",", "img_name", ",", "point_list", ",", "args", ",", "save_dir", ",", "r", ")", ":", "\n", "    ", "device", "=", "0", "# Do not modify", "\n", "model", ".", "to", "(", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "img_size", "=", "args", ".", "img_size", "\n", "channels", "=", "img", ".", "size", "(", "1", ")", "\n", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "players", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "point_path", ",", "\"img{}/ratio{}_S.npy\"", ".", "format", "(", "img_name", ",", "int", "(", "r", "*", "100", ")", ")", ")", ")", "\n", "ori_logits", "=", "[", "]", "\n", "adv_logits", "=", "[", "]", "\n", "\n", "forward_mask", "=", "[", "]", "\n", "for", "p", ",", "pt", "in", "enumerate", "(", "point_list", ")", ":", "\n", "            ", "point1", ",", "point2", "=", "pt", "[", "0", "]", ",", "pt", "[", "1", "]", "\n", "\n", "players_thispair", "=", "players", "[", "p", "]", "\n", "m", "=", "int", "(", "(", "args", ".", "grid_size", "**", "2", "-", "2", ")", "*", "r", ")", "# m-order", "\n", "mask", "=", "torch", ".", "zeros", "(", "(", "4", "*", "args", ".", "sample_num", ",", "channels", ",", "args", ".", "grid_size", "*", "args", ".", "grid_size", ")", ")", ".", "to", "(", "device", ")", "\n", "\n", "for", "k", "in", "range", "(", "args", ".", "sample_num", ")", ":", "\n", "                ", "mask", "[", "4", "*", "k", ":", "4", "*", "(", "k", "+", "1", ")", ",", ":", ",", "players_thispair", "[", "k", "]", "]", "=", "1", "# S", "\n", "mask", "[", "4", "*", "k", "+", "1", ",", ":", ",", "point1", "]", "=", "1", "# S U {i}", "\n", "mask", "[", "4", "*", "k", "+", "2", ",", ":", ",", "point2", "]", "=", "1", "# S U {j}", "\n", "mask", "[", "4", "*", "k", ",", ":", ",", "point1", "]", "=", "1", "\n", "mask", "[", "4", "*", "k", ",", ":", ",", "point2", "]", "=", "1", "# S U {i,j}", "\n", "", "mask", "=", "mask", ".", "view", "(", "4", "*", "args", ".", "sample_num", ",", "channels", ",", "args", ".", "grid_size", ",", "args", ".", "grid_size", ")", "\n", "mask", "=", "F", ".", "interpolate", "(", "mask", ".", "clone", "(", ")", ",", "size", "=", "[", "img_size", ",", "img_size", "]", ",", "mode", "=", "\"nearest\"", ")", ".", "float", "(", ")", "\n", "\n", "forward_mask", ".", "append", "(", "mask", ")", "\n", "if", "(", "len", "(", "forward_mask", ")", "<", "args", ".", "cal_batch", "//", "args", ".", "sample_num", ")", "and", "(", "p", "<", "args", ".", "pair_num", "-", "1", ")", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "forward_batch", "=", "len", "(", "forward_mask", ")", "*", "args", ".", "sample_num", "\n", "batch_mask", "=", "torch", ".", "cat", "(", "forward_mask", ",", "dim", "=", "0", ")", "\n", "expand_img", "=", "img", ".", "expand", "(", "4", "*", "forward_batch", ",", "-", "1", ",", "img_size", ",", "img_size", ")", ".", "clone", "(", ")", "\n", "expand_img_adv", "=", "img_adv", ".", "expand", "(", "4", "*", "forward_batch", ",", "-", "1", ",", "img_size", ",", "img_size", ")", ".", "clone", "(", ")", "\n", "masked_img", "=", "batch_mask", "*", "expand_img", "\n", "masked_img_adv", "=", "batch_mask", "*", "expand_img_adv", "\n", "\n", "output_ori", ",", "_", "=", "model", "(", "masked_img", ")", "# (cal_batch*4, 1000)", "\n", "output_adv", ",", "_", "=", "model", "(", "masked_img_adv", ")", "\n", "\n", "ori_logits", ".", "append", "(", "output_ori", ".", "detach", "(", ")", ")", "\n", "adv_logits", ".", "append", "(", "output_adv", ".", "detach", "(", ")", ")", "\n", "forward_mask", "=", "[", "]", "\n", "\n", "", "", "all_ori_logits", "=", "torch", ".", "cat", "(", "ori_logits", ",", "dim", "=", "0", ")", "# (pair_num*sample_num*4, 1000)", "\n", "all_adv_logits", "=", "torch", ".", "cat", "(", "adv_logits", ",", "dim", "=", "0", ")", "\n", "\n", "print", "(", "'Image: %s, time: %.3f'", "%", "(", "img_name", ",", "time", ".", "time", "(", ")", "-", "tic", ")", ")", "\n", "print", "(", "'--------------------------'", ")", "\n", "tmp", "=", "\"{}_output.pt\"", ".", "format", "(", "img_name", ")", "\n", "torch", ".", "save", "(", "all_ori_logits", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "tmp", ")", ")", "\n", "torch", ".", "save", "(", "all_adv_logits", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"adv_\"", "+", "tmp", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.m_order_interaction_logit.compute_interactions": [[84, 115], ["model.to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model.eval", "enumerate", "image_name[].replace", "print", "tools.newlib.normalize.to", "lbl.to.to", "numpy.load", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "tools.newlib.normalize", "tools.newlib.normalize", "os.path.join", "numpy.load", "os.path.join", "print", "os.path.join", "m_order_interaction_logit.compute_order_interaction_img", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.normalize", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.normalize", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_order_interaction_img"], ["", "", "def", "compute_interactions", "(", "args", ",", "model", ",", "dataloader", ")", ":", "\n", "    ", "device", "=", "0", "# Do not modify", "\n", "model", ".", "to", "(", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "for", "i", ",", "(", "image_name", ",", "img", ",", "lbl", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "img_name", "=", "image_name", "[", "0", "]", ".", "replace", "(", "'.JPEG'", ",", "''", ")", "\n", "if", "not", "(", "img_name", "+", "'.npy'", "in", "args", ".", "selected_imgs", ")", ":", "\n", "                ", "continue", "\n", "", "print", "(", "\"img: %d\"", "%", "i", ",", "image_name", ",", "'label:'", ",", "lbl", ")", "\n", "\n", "img", "=", "img", ".", "to", "(", "device", ")", "\n", "lbl", "=", "lbl", ".", "to", "(", "device", ")", "\n", "\n", "img_adv", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "adv_dir", ",", "\"{}.npy\"", ".", "format", "(", "img_name", ")", ")", ")", "# ours", "\n", "img_adv", "=", "torch", ".", "from_numpy", "(", "img_adv", ")", ".", "to", "(", "device", ")", "\n", "\n", "img", "=", "normalize", "(", "img", ")", "\n", "img_adv", "=", "normalize", "(", "img_adv", ")", "\n", "\n", "points_for_img", "=", "os", ".", "path", ".", "join", "(", "args", ".", "point_path", ",", "\"img{}\"", ".", "format", "(", "img_name", ")", ",", "'points.npy'", ")", "\n", "point_list", "=", "np", ".", "load", "(", "points_for_img", ")", "\n", "\n", "for", "r", "in", "args", ".", "ratios", ":", "\n", "                ", "print", "(", "'Ratio:'", ",", "r", ")", "\n", "save_name", "=", "\"ratio{}\"", ".", "format", "(", "int", "(", "r", "*", "100", ")", ")", "\n", "res_dir", "=", "os", ".", "path", ".", "join", "(", "'./'", ",", "args", ".", "save_dir", ",", "save_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "res_dir", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "res_dir", ")", "\n", "", "compute_order_interaction_img", "(", "model", ",", "img", ",", "img_adv", ",", "img_name", ",", "point_list", ",", "args", ",", "res_dir", ",", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.m_order_interaction_logit.prepare": [[116, 151], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "tools.newlib.ImageNetSelectedDataset", "print", "print", "robu.datasets.ImageNet", "robu.model_utils.make_and_restore_model", "print", "robu.datasets.ImageNet", "robu.model_utils.make_and_restore_model", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.make_and_restore_model", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.make_and_restore_model"], ["", "", "", "", "def", "prepare", "(", "args", ")", ":", "\n", "# prepare data---------------", "\n", "# Only for ImageNet", "\n", "    ", "if", "args", ".", "dataset_name", "==", "\"imagenet\"", ":", "\n", "        ", "class_num", "=", "1000", "\n", "args", ".", "img_size", "=", "224", "\n", "args", ".", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "args", ".", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "args", ".", "transform", "=", "transform", "\n", "# need args.root, args.img_size, args.seed", "\n", "dataset", "=", "ImageNetSelectedDataset", "(", "train", "=", "False", ",", "args", "=", "args", ",", "selected_num", "=", "args", ".", "base_num", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"No such dataset %s!\"", "%", "args", ".", "dataset_name", ")", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ")", "# bs=1", "\n", "\n", "# prepare models----------------", "\n", "if", "args", ".", "adv_model", ":", "\n", "        ", "print", "(", "'Load adversarial model.'", ")", "\n", "ds", "=", "robustdatasets", ".", "ImageNet", "(", "args", ".", "root", ")", "\n", "model", ",", "_", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "dataset", "=", "ds", ",", "\n", "resume_path", "=", "args", ".", "adv_model_path", ",", "\n", "pytorch_pretrained", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Load pytorch pretrained model.'", ")", "\n", "ds", "=", "robustdatasets", ".", "ImageNet", "(", "args", ".", "root", ")", "\n", "model", ",", "_", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "dataset", "=", "ds", ",", "\n", "resume_path", "=", "args", ".", "std_model_path", ",", "\n", "pytorch_pretrained", "=", "False", ")", "\n", "\n", "", "return", "model", ",", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.m_order_interaction_logit.main": [[153, 218], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "str", "tools.newlib.seed_torch", "os.path.join", "m_order_interaction_logit.prepare", "m_order_interaction_logit.compute_interactions", "print", "os.listdir", "os.path.join", "print", "os.listdir", "os.path.join", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "open", "f.writelines", "f.writelines", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.newlib.seed_torch", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.prepare", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_interactions"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--root'", ",", "default", "=", "'/data/renjie/data/ImageNet'", ",", "type", "=", "str", ",", "help", "=", "\"dataset path\"", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "\"GPU ID\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--seed\"", ",", "default", "=", "0", ",", "type", "=", "int", ",", "help", "=", "\"random seed\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--grid_size\"", ",", "default", "=", "16", ",", "type", "=", "int", ",", "help", "=", "'number of grids of each img'", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset_name\"", ",", "default", "=", "\"imagenet\"", ",", "type", "=", "str", ",", "help", "=", "\"dataset name, currently only support 'imagenet'\"", ")", "\n", "parser", ".", "add_argument", "(", "'--base_num'", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'# of images randomly sampled from the dataset'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--ratios\"", ",", "default", "=", "[", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "0.6", ",", "0.7", ",", "0.8", ",", "0.85", ",", "0.9", ",", "0.95", ",", "1", "]", ",", "type", "=", "list", ",", "help", "=", "'ratios of context'", ")", "\n", "parser", ".", "add_argument", "(", "\"--sample_num\"", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'sample num of S'", ")", "\n", "parser", ".", "add_argument", "(", "\"--pair_num\"", ",", "default", "=", "200", ",", "type", "=", "int", ",", "help", "=", "'number of point pair of each test img'", ")", "\n", "# cal_batch should be divisible by sample_num", "\n", "parser", ".", "add_argument", "(", "\"--cal_batch\"", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'calculate # of images per batch'", ")", "\n", "# for robustness library", "\n", "parser", ".", "add_argument", "(", "\"--targeted\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"targeted\"", ",", "help", "=", "\"whether use the targeted attack\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--adv_model\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"adv_model\"", ",", "help", "=", "\"the type of model (True for adversarially learned DNN, False for standardly learned DNN)\"", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "default", "=", "\"resnet18\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--distance'", ",", "default", "=", "'l_inf'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--adv_model_path'", ",", "type", "=", "str", ",", "default", "=", "'pretrained_models/resnet18_linf_eps8.0.ckpt'", ",", "\n", "help", "=", "\"model path of the adversarially learned DNN\"", ")", "\n", "parser", ".", "add_argument", "(", "'--std_model_path'", ",", "type", "=", "str", ",", "default", "=", "'pretrained_models/resnet18_l2_eps0.ckpt'", ",", "\n", "help", "=", "\"model path of the standardly learned DNN\"", ")", "\n", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "args", ".", "targetet", "=", "True", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "str", "(", "args", ".", "device", ")", "\n", "seed_torch", "(", "args", ".", "seed", ")", "\n", "\n", "if", "not", "args", ".", "targeted", ":", "\n", "        ", "args", ".", "img_adv", "=", "'advImgs_untarget'", "\n", "prefix", "=", "\"{}/{}/untarget/\"", ".", "format", "(", "args", ".", "distance", ",", "args", ".", "arch", ")", "\n", "", "else", ":", "\n", "        ", "args", ".", "img_adv", "=", "'advImgs_target'", "\n", "prefix", "=", "\"{}/{}/target/\"", ".", "format", "(", "args", ".", "distance", ",", "args", ".", "arch", ")", "\n", "\n", "\n", "", "if", "args", ".", "adv_model", ":", "\n", "        ", "print", "(", "'Adversarial Model.'", ")", "\n", "args", ".", "save_dir", "=", "prefix", "+", "\"saved_logits\"", "+", "'/adv_model/'", "\n", "args", ".", "adv_dir", "=", "prefix", "+", "args", ".", "img_adv", "+", "'/adv_model/'", "\n", "args", ".", "selected_imgs", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "prefix", "+", "args", ".", "img_adv", ",", "\"adv_model\"", ")", ")", "\n", "args", ".", "point_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "img_adv", ",", "\"adv_model\"", ",", "\"points\"", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Pytorch pretrained Model'", ")", "\n", "args", ".", "save_dir", "=", "prefix", "+", "\"saved_logits\"", "+", "'/ori_model/'", "\n", "args", ".", "adv_dir", "=", "prefix", "+", "args", ".", "img_adv", "+", "'/ori_model/'", "\n", "args", ".", "selected_imgs", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "prefix", "+", "args", ".", "img_adv", ",", "\"ori_model\"", ")", ")", "\n", "args", ".", "point_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "img_adv", ",", "\"ori_model\"", ",", "\"points\"", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "save_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "save_dir", ")", "\n", "\n", "", "args", ".", "point_path", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "args", ".", "point_path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "point_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "point_path", ")", "\n", "\n", "# save arguments", "\n", "", "with", "open", "(", "args", ".", "save_dir", "+", "'result.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "writelines", "(", "\"decive:{}  seed:{}  base_num:{}  arch:{}  cal_batch:{}\\n\"", ".", "format", "(", "args", ".", "device", ",", "args", ".", "seed", ",", "args", ".", "base_num", ",", "args", ".", "arch", ",", "args", ".", "cal_batch", ")", ")", "\n", "f", ".", "writelines", "(", "\"img_adv:{}  point_path:{}\\n\"", ".", "format", "(", "args", ".", "adv_dir", ",", "args", ".", "point_path", ")", ")", "\n", "\n", "", "model", ",", "dataloader", "=", "prepare", "(", "args", ")", "\n", "compute_interactions", "(", "args", ",", "model", ",", "dataloader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.gene_adv_imgs_untarget.gene_advs": [[32, 78], ["model.to", "print", "int", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model.eval", "enumerate", "print", "image_name[].replace", "img.to.to", "lbl.to.to", "model", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "print", "print", "print", "tools.newlib.normalize", "torch.argmax.item", "torch.argmax.item", "lbl.to.item", "tools.attack.attack_magnitude_untarget().to", "model", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "print", "tools.newlib.normalize", "print", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "img_adv.detach().cpu().numpy.detach().cpu().numpy", "numpy.save", "res.append", "tools.attack.attack_magnitude_untarget", "lbl.to.item", "torch.argmax.item", "torch.sqrt.item", "torch.norm().pow", "torch.norm().pow", "torch.norm().pow", "torch.norm().pow", "torch.norm().pow", "torch.norm().pow", "img_adv.detach().cpu().numpy.detach().cpu", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "img_adv.detach().cpu().numpy.detach"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.normalize", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.normalize", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.gene_adv_imgs.attack_magnitude_untarget"], ["def", "gene_advs", "(", "model", ",", "dataloader", ",", "args", ",", "save_dir", ",", "threshold", ")", ":", "\n", "    ", "device", "=", "args", ".", "device", "if", "args", ".", "device", "==", "\"cpu\"", "else", "int", "(", "args", ".", "device", ")", "\n", "model", ".", "to", "(", "device", ")", "\n", "res", "=", "[", "]", "\n", "count", "=", "0", "# num of correct classifications", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "for", "i", ",", "(", "image_name", ",", "img", ",", "lbl", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "print", "(", "\"img: %d\"", "%", "i", ",", "image_name", ",", "'label:'", ",", "lbl", ")", "\n", "img_name", "=", "image_name", "[", "0", "]", ".", "replace", "(", "'.JPEG'", ",", "''", ")", "\n", "img", "=", "img", ".", "to", "(", "device", ")", "\n", "lbl", "=", "lbl", ".", "to", "(", "device", ")", "\n", "\n", "ori_output", ",", "_", "=", "model", "(", "normalize", "(", "img", ")", ")", "\n", "pred_ori", "=", "torch", ".", "argmax", "(", "ori_output", ",", "dim", "=", "1", ")", "\n", "print", "(", "'pred:'", ",", "pred_ori", ".", "item", "(", ")", ")", "\n", "pred_logit", "=", "ori_output", "[", ":", ",", "pred_ori", "[", "0", "]", "]", "\n", "print", "(", "'pred logit:'", ",", "pred_logit", ")", "\n", "\n", "# untarget attack", "\n", "if", "pred_ori", ".", "item", "(", ")", "==", "lbl", ".", "item", "(", ")", ":", "\n", "                ", "count", "+=", "1", "\n", "img_adv", "=", "attack_magnitude_untarget", "(", "model", ",", "img", ",", "lbl", ",", "pred_logit", ",", "device", ",", "step_size", "=", "args", ".", "step_size", ",", "epsilon", "=", "args", ".", "epsilon", ",", "\n", "perturb_steps", "=", "args", ".", "perturb_steps", ",", "threshold", "=", "threshold", ",", "distance", "=", "args", ".", "distance", ",", "\n", "isnormalize", "=", "True", ",", "mean", "=", "args", ".", "mean", ",", "std", "=", "args", ".", "std", ")", ".", "to", "(", "device", ")", "\n", "\n", "output", ",", "_", "=", "model", "(", "normalize", "(", "img_adv", ")", ")", "\n", "pred_adv", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "out_gt", "=", "output", "[", ":", ",", "lbl", "[", "0", "]", "]", "\n", "dist", "=", "pred_logit", "-", "out_gt", "\n", "if", "dist", ">", "threshold", "and", "dist", "<=", "(", "threshold", "+", "0.5", ")", ":", "\n", "                    ", "print", "(", "\"Dist\"", ",", "dist", ")", "\n", "delta", "=", "torch", ".", "abs", "(", "img_adv", "-", "img", ")", "\n", "avg_delta", "=", "torch", ".", "sqrt", "(", "torch", ".", "norm", "(", "delta", ",", "p", "=", "2", ")", ".", "pow", "(", "2", ")", "/", "(", "224", "*", "224", "*", "3", ")", ")", "\n", "img_adv", "=", "img_adv", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "np", ".", "save", "(", "save_dir", "+", "'/{}.npy'", ".", "format", "(", "img_name", ")", ",", "img_adv", ")", "\n", "tmp", "=", "\"{}  label:{}  untarget label:{}  avg delta:{}\"", ".", "format", "(", "image_name", "[", "0", "]", ",", "lbl", ".", "item", "(", ")", ",", "\n", "pred_adv", ".", "item", "(", ")", ",", "\n", "avg_delta", ".", "item", "(", ")", ")", "\n", "res", ".", "append", "(", "tmp", ")", "\n", "", "", "else", ":", "\n", "                ", "print", "(", "'Predict incorrectly.'", ")", "\n", "", "print", "(", "'----------------------------'", ")", "\n", "\n", "", "", "print", "(", "count", ",", "'images are classified correctly.'", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.gene_adv_imgs_untarget.prepare": [[80, 115], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.Compose", "tools.newlib.ImageNetSelectedDataset", "print", "print", "robu.datasets.ImageNet", "robu.model_utils.make_and_restore_model", "print", "robu.datasets.ImageNet", "robu.model_utils.make_and_restore_model", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.make_and_restore_model", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.make_and_restore_model"], ["", "def", "prepare", "(", "args", ")", ":", "\n", "# prepare data-----------------", "\n", "# Only for ImageNet", "\n", "    ", "if", "args", ".", "dataset_name", "==", "\"imagenet\"", ":", "\n", "        ", "class_num", "=", "1000", "\n", "args", ".", "img_size", "=", "224", "\n", "args", ".", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "args", ".", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "args", ".", "transform", "=", "transform", "\n", "\n", "dataset", "=", "ImageNetSelectedDataset", "(", "train", "=", "False", ",", "args", "=", "args", ",", "selected_num", "=", "args", ".", "base_num", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"No such dataset %s!\"", "%", "args", ".", "dataset_name", ")", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ")", "# bs=1", "\n", "\n", "# prepare model------------------", "\n", "if", "args", ".", "adv_model", ":", "\n", "        ", "print", "(", "'Load adversarial model.'", ")", "\n", "ds", "=", "robustdatasets", ".", "ImageNet", "(", "args", ".", "root", ")", "\n", "model", ",", "_", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "dataset", "=", "ds", ",", "\n", "resume_path", "=", "args", ".", "adv_model_path", ",", "\n", "pytorch_pretrained", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Load pytorch pretrained model.'", ")", "\n", "ds", "=", "robustdatasets", ".", "ImageNet", "(", "args", ".", "root", ")", "\n", "model", ",", "_", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "dataset", "=", "ds", ",", "\n", "resume_path", "=", "args", ".", "std_model_path", ",", "\n", "pytorch_pretrained", "=", "False", ")", "\n", "\n", "", "return", "model", ",", "dataloader", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.None.gene_adv_imgs_untarget.main": [[117, 158], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "tools.newlib.seed_torch", "os.path.join", "gene_adv_imgs_untarget.prepare", "gene_adv_imgs_untarget.gene_advs", "os.path.exists", "os.makedirs", "open", "f.writelines", "f.writelines", "open", "f.writelines"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.newlib.seed_torch", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.prepare", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.gene_adv_imgs.gene_advs"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--root'", ",", "default", "=", "'/data/renjie/data/ImageNet'", ",", "type", "=", "str", ",", "help", "=", "\"dataset path\"", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "\"GPU ID\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--seed\"", ",", "default", "=", "0", ",", "type", "=", "int", ",", "help", "=", "\"random seed\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset_name\"", ",", "default", "=", "\"imagenet\"", ",", "type", "=", "str", ",", "help", "=", "\"dataset name, currently only support 'imagenet'\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--base_num'", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'# of images randomly sampled from the dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--distance'", ",", "default", "=", "'l_inf'", ",", "type", "=", "str", ",", "help", "=", "\"type of adversarial attacks, currently only support 'l_inf'\"", ")", "\n", "parser", ".", "add_argument", "(", "'--epsilon'", ",", "default", "=", "32", "/", "255", ",", "type", "=", "float", ",", "help", "=", "\"epsilon for the PGD attack\"", ")", "\n", "parser", ".", "add_argument", "(", "'--step_size'", ",", "default", "=", "2", "/", "255", ",", "type", "=", "float", ",", "help", "=", "\"step_size for the PGD attack\"", ")", "\n", "parser", ".", "add_argument", "(", "'--perturb_steps'", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "\"perturb_steps for the PGD attack\"", ")", "\n", "parser", ".", "add_argument", "(", "'--threshold'", ",", "default", "=", "8.0", ",", "type", "=", "float", ",", "help", "=", "\"threshold of the attacking utility for the PGD attack\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--adv_model\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"adv_model\"", ",", "help", "=", "\"the type of model (True for adversarially learned DNN, False for standardly learned DNN)\"", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "default", "=", "\"resnet18\"", ",", "type", "=", "str", ",", "help", "=", "\"model name\"", ")", "\n", "parser", ".", "add_argument", "(", "'--adv_model_path'", ",", "type", "=", "str", ",", "default", "=", "'pretrained_models/resnet18_linf_eps8.0.ckpt'", ",", "help", "=", "\"model path of the adversarially learned DNN\"", ")", "\n", "parser", ".", "add_argument", "(", "'--std_model_path'", ",", "type", "=", "str", ",", "default", "=", "'pretrained_models/resnet18_l2_eps0.ckpt'", ",", "help", "=", "\"model path of the standardly learned DNN\"", ")", "\n", "parser", ".", "add_argument", "(", "'--save_dir'", ",", "default", "=", "'advImgs_untarget'", ",", "type", "=", "str", ",", "help", "=", "\"path to save the generated adversarial images\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "seed_torch", "(", "args", ".", "seed", ")", "\n", "\n", "# save path for generated adv_imgs based on ori_model or adv_model", "\n", "save_name", "=", "\"adv_model\"", "if", "args", ".", "adv_model", "else", "\"ori_model\"", "\n", "save_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "distance", ",", "args", ".", "arch", ",", "\"untarget\"", ",", "args", ".", "save_dir", ",", "save_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "\n", "# save arguments", "\n", "", "with", "open", "(", "save_dir", "+", "'/result.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "writelines", "(", "\"decive:{}  seed:{}  base_num:{}  arch:{}\\n\"", ".", "format", "(", "args", ".", "device", ",", "args", ".", "seed", ",", "args", ".", "base_num", ",", "args", ".", "arch", ")", ")", "\n", "f", ".", "writelines", "(", "\"untarget attack: distance:{}   epsion:{}  step_size:{}  perturb_steps:{}  threshold:{}\\n\"", ".", "format", "(", "args", ".", "distance", ",", "args", ".", "epsilon", ",", "args", ".", "step_size", ",", "args", ".", "perturb_steps", ",", "args", ".", "threshold", ")", ")", "\n", "\n", "# main functions", "\n", "", "model", ",", "dataloader", "=", "prepare", "(", "args", ")", "\n", "res", "=", "gene_advs", "(", "model", ",", "dataloader", ",", "args", ",", "save_dir", ",", "args", ".", "threshold", ")", "\n", "\n", "with", "open", "(", "save_dir", "+", "'/result.txt'", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "for", "im", "in", "res", ":", "\n", "            ", "f", ".", "writelines", "(", "im", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.newlib.ImageNetSelectedDataset.__init__": [[31, 56], ["os.path.join", "os.listdir", "newlib.ImageNetSelectedDataset.img_class.sort", "newlib.seed_torch", "range", "random.sample", "len", "len", "os.listdir", "os.listdir.sort", "newlib.ImageNetSelectedDataset.imgs.extend", "newlib.ImageNetSelectedDataset.labels.extend", "list", "os.path.join", "range", "newlib.ImageNetSelectedDataset.name_list.append", "newlib.ImageNetSelectedDataset.label_list.append", "range", "len", "len"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.newlib.seed_torch"], ["    ", "def", "__init__", "(", "self", ",", "train", ",", "args", ",", "selected_num", "=", "60", ")", ":", "\n", "        ", "assert", "not", "train", ",", "'ImageNet train dataset does not exist'", "\n", "self", ".", "root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "'val'", ")", "\n", "self", ".", "img_class", "=", "os", ".", "listdir", "(", "self", ".", "root", ")", "\n", "self", ".", "img_class", ".", "sort", "(", ")", "\n", "self", ".", "imgs", "=", "[", "]", "\n", "self", ".", "labels", "=", "[", "]", "\n", "self", ".", "transformation", "=", "args", ".", "transform", "\n", "\n", "seed_torch", "(", "args", ".", "seed", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "img_class", ")", ")", ":", "\n", "            ", "cls", "=", "self", ".", "img_class", "[", "i", "]", "\n", "imgs", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "cls", ")", ")", "\n", "imgs", ".", "sort", "(", ")", "\n", "self", ".", "imgs", ".", "extend", "(", "imgs", ")", "\n", "labels", "=", "[", "i", "for", "k", "in", "range", "(", "len", "(", "imgs", ")", ")", "]", "\n", "self", ".", "labels", ".", "extend", "(", "labels", ")", "\n", "\n", "", "img_id", "=", "random", ".", "sample", "(", "list", "(", "range", "(", "len", "(", "self", ".", "imgs", ")", ")", ")", ",", "selected_num", ")", "\n", "self", ".", "name_list", ",", "self", ".", "label_list", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "i", "in", "img_id", ":", "\n", "            ", "self", ".", "name_list", ".", "append", "(", "self", ".", "imgs", "[", "i", "]", ")", ",", "self", ".", "label_list", ".", "append", "(", "self", ".", "labels", "[", "i", "]", ")", "\n", "\n", "", "self", ".", "size", "=", "len", "(", "self", ".", "name_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.newlib.ImageNetSelectedDataset.__getitem__": [[57, 63], ["newlib.ImageNetSelectedDataset.transformation", "PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "label", "=", "self", ".", "label_list", "[", "idx", "]", "\n", "image", "=", "self", ".", "transformation", "(", "\n", "Image", ".", "open", "(", "self", ".", "root", "+", "'/{}/'", ".", "format", "(", "self", ".", "img_class", "[", "label", "]", ")", "+", "self", ".", "name_list", "[", "idx", "]", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "image_name", "=", "self", ".", "name_list", "[", "idx", "]", "\n", "return", "image_name", ",", "image", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.newlib.ImageNetSelectedDataset.__len__": [[64, 66], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.newlib.seed_torch": [[10, 17], ["random.seed", "str", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed"], "function", ["None"], ["def", "seed_torch", "(", "seed", "=", "0", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "os", ".", "environ", "[", "'PYTHONHASHSEED'", "]", "=", "str", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.newlib.normalize": [[18, 23], ["torch.tensor().view().expand().to", "torch.tensor().view().expand().to", "torch.tensor().view().expand", "torch.tensor().view().expand", "torch.tensor().view", "torch.tensor().view", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "def", "normalize", "(", "x", ")", ":", "\n", "    ", "mean", "=", "torch", ".", "tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "view", "(", "3", ",", "1", ",", "1", ")", ".", "expand", "(", "x", ".", "shape", "[", "0", "]", ",", "3", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "2", "]", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "std", "=", "torch", ".", "tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "view", "(", "3", ",", "1", ",", "1", ")", ".", "expand", "(", "x", ".", "shape", "[", "0", "]", ",", "3", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "2", "]", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "out", "=", "(", "x", "-", "mean", ")", "/", "std", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.newlib.update_lr": [[24, 28], ["enumerate"], "function", ["None"], ["", "def", "update_lr", "(", "optimizer", ",", "lr", ")", ":", "\n", "    ", "for", "ix", ",", "param_group", "in", "enumerate", "(", "optimizer", ".", "param_groups", ")", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "[", "0", "]", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.normalize": [[6, 10], ["torch.tensor().view().expand().to", "torch.tensor().view().expand().to", "torch.tensor().view().expand().to", "torch.tensor().view().expand().to", "torch.tensor().view().expand", "torch.tensor().view().expand", "torch.tensor().view().expand", "torch.tensor().view().expand", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "function", ["None"], ["def", "normalize", "(", "x", ",", "mean", ",", "std", ")", ":", "\n", "    ", "mean", "=", "torch", ".", "tensor", "(", "mean", ")", ".", "view", "(", "3", ",", "1", ",", "1", ")", ".", "expand", "(", "x", ".", "shape", "[", "0", "]", ",", "3", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "2", "]", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "std", "=", "torch", ".", "tensor", "(", "std", ")", ".", "view", "(", "3", ",", "1", ",", "1", ")", ".", "expand", "(", "x", ".", "shape", "[", "0", "]", ",", "3", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "2", "]", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "return", "(", "x", "-", "mean", ")", "/", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.attack_magnitude_untarget": [[13, 101], ["model.eval", "torch.clamp", "torch.clamp", "range", "print", "torch.clamp.requires_grad_", "x_natural.detach", "torch.zeros_like().to().detach", "torch.zeros_like().to().detach", "delta.renorm.normal_", "delta.renorm.view", "delta.view.norm().view", "torch.zeros_like().uniform_", "torch.zeros_like().uniform_", "torch.enable_grad", "torch.enable_grad", "torch.cross_entropy", "torch.autograd.grad", "torch.autograd.grad", "torch.argmax", "torch.argmax", "torch.randn().to().detach", "torch.randn().to().detach", "delta.renorm.size", "delta.renorm.size", "x_natural.detach", "model", "model", "torch.min", "torch.min", "torch.clamp", "torch.clamp", "model", "model", "torch.zeros_like().to", "torch.zeros_like().to", "delta.view.norm", "torch.zeros_like", "torch.zeros_like", "attack.normalize", "type", "torch.clamp.detach", "torch.max", "torch.max", "torch.norm().view", "torch.norm().view", "delta.renorm.renorm", "torch.clamp", "torch.clamp", "attack.normalize", "type", "print", "torch.randn().to", "torch.randn().to", "torch.sign", "torch.sign", "torch.clamp.detach", "torch.zeros_like", "torch.zeros_like", "grad.detach", "torch.norm", "torch.norm", "torch.randn", "torch.randn", "grad.view"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.normalize", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.normalize"], ["", "def", "attack_magnitude_untarget", "(", "model", ",", "\n", "x_natural", ",", "\n", "y", ",", "\n", "ori_logit", ",", "\n", "device", ",", "\n", "step_size", "=", "2", "/", "255", ",", "\n", "epsilon", "=", "16", "/", "255", ",", "\n", "perturb_steps", "=", "100", ",", "\n", "threshold", "=", "4.0", ",", "\n", "distance", "=", "'l_inf'", ",", "\n", "isnormalize", "=", "True", ",", "\n", "mean", "=", "None", ",", "\n", "std", "=", "None", "\n", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "if", "distance", "==", "'l_inf'", ":", "\n", "        ", "x_adv", "=", "x_natural", ".", "detach", "(", ")", "+", "0.001", "*", "torch", ".", "randn", "(", "x_natural", ".", "shape", ")", ".", "to", "(", "device", ")", ".", "detach", "(", ")", "# random start", "\n", "", "elif", "distance", "==", "'l_2'", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "x_natural", ")", ".", "to", "(", "device", ")", ".", "detach", "(", ")", "\n", "delta", ".", "normal_", "(", ")", "\n", "d_flat", "=", "delta", ".", "view", "(", "delta", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "n", "=", "d_flat", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "delta", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", "\n", "r", "=", "torch", ".", "zeros_like", "(", "n", ")", ".", "uniform_", "(", "0", ",", "1", ")", "\n", "delta", "*=", "r", "/", "n", "*", "epsilon", "\n", "x_adv", "=", "x_natural", ".", "detach", "(", ")", "+", "delta", "\n", "\n", "", "x_adv", "=", "torch", ".", "clamp", "(", "x_adv", ",", "min", "=", "0", ",", "max", "=", "1", ")", "# x_adv is in [0,1]", "\n", "\n", "for", "_", "in", "range", "(", "perturb_steps", ")", ":", "\n", "        ", "x_adv", ".", "requires_grad_", "(", ")", "\n", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "if", "isnormalize", ":", "\n", "                ", "outs", "=", "model", "(", "normalize", "(", "x_adv", ",", "mean", ",", "std", ")", ")", "\n", "", "else", ":", "\n", "                ", "outs", "=", "model", "(", "x_adv", ")", "\n", "", "if", "(", "type", "(", "outs", ")", ".", "__name__", "==", "'tuple'", ")", ":", "\n", "                ", "output", "=", "outs", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "output", "=", "outs", "\n", "", "loss_ce", "=", "F", ".", "cross_entropy", "(", "output", ",", "y", ")", "\n", "\n", "", "grad", "=", "torch", ".", "autograd", ".", "grad", "(", "loss_ce", ",", "[", "x_adv", "]", ")", "[", "0", "]", "\n", "is_valid", "=", "False", "\n", "while", "not", "is_valid", ":", "\n", "            ", "if", "distance", "==", "'l_inf'", ":", "\n", "                ", "x_adv_tmp", "=", "x_adv", ".", "detach", "(", ")", "+", "step_size", "*", "torch", ".", "sign", "(", "grad", ".", "detach", "(", ")", ")", "\n", "x_adv_tmp", "=", "torch", ".", "min", "(", "torch", ".", "max", "(", "x_adv_tmp", ",", "x_natural", "-", "epsilon", ")", ",", "x_natural", "+", "epsilon", ")", "\n", "x_adv_tmp", "=", "torch", ".", "clamp", "(", "x_adv_tmp", ",", "0.0", ",", "1.0", ")", "\n", "", "elif", "distance", "==", "'l_2'", ":", "\n", "                ", "g_norm", "=", "torch", ".", "norm", "(", "grad", ".", "view", "(", "grad", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "scaled_g", "=", "grad", "/", "(", "g_norm", "+", "1e-10", ")", "\n", "x_adv_tmp", "=", "x_adv", ".", "detach", "(", ")", "+", "step_size", "*", "scaled_g", "\n", "delta", "=", "x_adv_tmp", "-", "x_natural", "\n", "delta", "=", "delta", ".", "renorm", "(", "p", "=", "2", ",", "dim", "=", "0", ",", "maxnorm", "=", "epsilon", ")", "\n", "x_adv_tmp", "=", "torch", ".", "clamp", "(", "x_natural", "+", "delta", ",", "0.0", ",", "1.0", ")", "\n", "\n", "", "if", "isnormalize", ":", "\n", "                ", "outs", "=", "model", "(", "normalize", "(", "x_adv_tmp", ",", "mean", ",", "std", ")", ")", "\n", "", "else", ":", "\n", "                ", "outs", "=", "model", "(", "x_adv_tmp", ")", "\n", "", "if", "type", "(", "outs", ")", ".", "__name__", "==", "'tuple'", ":", "\n", "                ", "output", "=", "outs", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "output", "=", "outs", "\n", "\n", "", "pred_adv", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "if", "pred_adv", "[", "0", "]", "==", "y", "[", "0", "]", ":", "\n", "                ", "x_adv", "=", "x_adv_tmp", "\n", "break", "# to next iteration", "\n", "# out_adv = output[:, pred_adv[0]]", "\n", "", "out_gt", "=", "output", "[", ":", ",", "y", "[", "0", "]", "]", "\n", "dist", "=", "ori_logit", "-", "out_gt", "\n", "if", "step_size", "<", "1e-6", ":", "\n", "                ", "return", "x_adv_tmp", "\n", "# print('step_size:', step_size)", "\n", "# print('dist:', ori_logit, out_gt, dist)", "\n", "", "if", "dist", ">", "threshold", "+", "0.5", ":", "\n", "                ", "is_valid", "=", "False", "\n", "step_size", "/=", "2", "\n", "", "elif", "dist", ">", "threshold", ":", "\n", "                ", "print", "(", "'Successful attacking to threshold.'", ")", "\n", "return", "x_adv_tmp", "\n", "", "else", ":", "\n", "                ", "is_valid", "=", "True", "\n", "x_adv", "=", "x_adv_tmp", "\n", "\n", "", "", "", "print", "(", "'Not successful to threshold after attacking {} steps.'", ".", "format", "(", "perturb_steps", ")", ")", "\n", "return", "x_adv", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.attack_magnitude_target": [[104, 187], ["model.eval", "torch.clamp", "torch.clamp", "range", "print", "torch.clamp.requires_grad_", "x_natural.detach", "torch.zeros_like().to().detach", "torch.zeros_like().to().detach", "delta.renorm.normal_", "delta.renorm.view", "delta.view.norm().view", "torch.zeros_like().uniform_", "torch.zeros_like().uniform_", "torch.enable_grad", "torch.enable_grad", "torch.autograd.grad", "torch.autograd.grad", "torch.randn().to().detach", "torch.randn().to().detach", "delta.renorm.size", "delta.renorm.size", "x_natural.detach", "model", "model", "torch.min", "torch.min", "torch.clamp", "torch.clamp", "model", "model", "torch.zeros_like().to", "torch.zeros_like().to", "delta.view.norm", "torch.zeros_like", "torch.zeros_like", "attack.normalize", "type", "torch.clamp.detach", "torch.max", "torch.max", "torch.norm().view", "torch.norm().view", "delta.renorm.renorm", "torch.clamp", "torch.clamp", "attack.normalize", "type", "print", "torch.randn().to", "torch.randn().to", "torch.sign", "torch.sign", "torch.clamp.detach", "torch.zeros_like", "torch.zeros_like", "grad.detach", "torch.norm", "torch.norm", "torch.randn", "torch.randn", "grad.view"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.normalize", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.attack.normalize"], ["", "def", "attack_magnitude_target", "(", "model", ",", "\n", "x_natural", ",", "\n", "y", ",", "\n", "target_y", ",", "\n", "device", ",", "\n", "step_size", "=", "2", "/", "255", ",", "\n", "epsilon", "=", "16", "/", "255", ",", "\n", "perturb_steps", "=", "100", ",", "\n", "threshold", "=", "5.0", ",", "\n", "distance", "=", "'l_inf'", ",", "\n", "isnormalize", "=", "True", ",", "\n", "mean", "=", "None", ",", "\n", "std", "=", "None", "\n", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "if", "distance", "==", "'l_inf'", ":", "\n", "        ", "x_adv", "=", "x_natural", ".", "detach", "(", ")", "+", "0.001", "*", "torch", ".", "randn", "(", "x_natural", ".", "shape", ")", ".", "to", "(", "device", ")", ".", "detach", "(", ")", "# random start", "\n", "", "elif", "distance", "==", "'l_2'", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "x_natural", ")", ".", "to", "(", "device", ")", ".", "detach", "(", ")", "\n", "delta", ".", "normal_", "(", ")", "\n", "d_flat", "=", "delta", ".", "view", "(", "delta", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "n", "=", "d_flat", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "delta", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", "\n", "r", "=", "torch", ".", "zeros_like", "(", "n", ")", ".", "uniform_", "(", "0", ",", "1", ")", "\n", "delta", "*=", "r", "/", "n", "*", "epsilon", "\n", "x_adv", "=", "x_natural", ".", "detach", "(", ")", "+", "delta", "\n", "", "x_adv", "=", "torch", ".", "clamp", "(", "x_adv", ",", "min", "=", "0", ",", "max", "=", "1", ")", "# x_adv is in [0,1]", "\n", "\n", "for", "_", "in", "range", "(", "perturb_steps", ")", ":", "\n", "        ", "x_adv", ".", "requires_grad_", "(", ")", "\n", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "if", "isnormalize", ":", "\n", "                ", "outs", "=", "model", "(", "normalize", "(", "x_adv", ",", "mean", ",", "std", ")", ")", "\n", "", "else", ":", "\n", "                ", "outs", "=", "model", "(", "x_adv", ")", "\n", "", "if", "(", "type", "(", "outs", ")", ".", "__name__", "==", "'tuple'", ")", ":", "\n", "                ", "output", "=", "outs", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "output", "=", "outs", "\n", "", "loss", "=", "output", "[", ":", ",", "target_y", "]", "-", "output", "[", ":", ",", "y", "]", "\n", "\n", "", "grad", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "[", "x_adv", "]", ")", "[", "0", "]", "# \u662f\u653e\u5165x_adv\u8fd8\u662f  normalize(x_adv)", "\n", "is_valid", "=", "False", "\n", "while", "not", "is_valid", ":", "\n", "            ", "if", "distance", "==", "'l_inf'", ":", "\n", "                ", "x_adv_tmp", "=", "x_adv", ".", "detach", "(", ")", "+", "step_size", "*", "torch", ".", "sign", "(", "grad", ".", "detach", "(", ")", ")", "\n", "x_adv_tmp", "=", "torch", ".", "min", "(", "torch", ".", "max", "(", "x_adv_tmp", ",", "x_natural", "-", "epsilon", ")", ",", "x_natural", "+", "epsilon", ")", "\n", "x_adv_tmp", "=", "torch", ".", "clamp", "(", "x_adv_tmp", ",", "0.0", ",", "1.0", ")", "\n", "", "elif", "distance", "==", "'l_2'", ":", "\n", "                ", "g_norm", "=", "torch", ".", "norm", "(", "grad", ".", "view", "(", "grad", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "scaled_g", "=", "grad", "/", "(", "g_norm", "+", "1e-10", ")", "\n", "x_adv_tmp", "=", "x_adv", ".", "detach", "(", ")", "+", "step_size", "*", "scaled_g", "\n", "# print('change mean:', torch.mean(step_size * scaled_g))", "\n", "delta", "=", "x_adv_tmp", "-", "x_natural", "\n", "delta", "=", "delta", ".", "renorm", "(", "p", "=", "2", ",", "dim", "=", "0", ",", "maxnorm", "=", "epsilon", ")", "\n", "x_adv_tmp", "=", "torch", ".", "clamp", "(", "x_natural", "+", "delta", ",", "0.0", ",", "1.0", ")", "\n", "\n", "", "if", "isnormalize", ":", "\n", "                ", "outs", "=", "model", "(", "normalize", "(", "x_adv_tmp", ",", "mean", ",", "std", ")", ")", "\n", "", "else", ":", "\n", "                ", "outs", "=", "model", "(", "x_adv_tmp", ")", "\n", "\n", "", "if", "type", "(", "outs", ")", ".", "__name__", "==", "'tuple'", ":", "\n", "                ", "output", "=", "outs", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "output", "=", "outs", "\n", "\n", "", "out_gt", "=", "output", "[", ":", ",", "y", "[", "0", "]", "]", "\n", "out_target", "=", "output", "[", ":", ",", "target_y", "[", "0", "]", "]", "\n", "dist", "=", "out_gt", "-", "out_target", "\n", "# print('gt - target dist:', dist)", "\n", "# print('*********')", "\n", "if", "dist", "<", "threshold", "-", "0.5", ":", "\n", "                ", "is_valid", "=", "False", "\n", "step_size", "/=", "2", "\n", "", "elif", "dist", ">", "threshold", ":", "\n", "                ", "is_valid", "=", "True", "\n", "x_adv", "=", "x_adv_tmp", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Successful attacking.'", ")", "\n", "return", "x_adv_tmp", "\n", "\n", "", "", "", "print", "(", "'Not successful after attacking {} steps.'", ".", "format", "(", "perturb_steps", ")", ")", "\n", "return", "x_adv", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.__init__": [[28, 70], ["breeds_helpers.ClassHierarchy._make_parent_graph", "breeds_helpers.ClassHierarchy._make_level_dict", "breeds_helpers.ClassHierarchy.node_to_level.items", "open", "json.load", "open", "open", "breeds_helpers.ClassHierarchy.level_to_nodes[].append", "os.path.exists", "Exception", "os.path.join", "os.path.join", "l.strip().split", "os.path.join", "l.strip().split", "os.path.join", "f.readlines", "f.readlines", "l.strip", "l.strip"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy._make_parent_graph", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy._make_level_dict"], ["def", "__init__", "(", "self", ",", "info_dir", ",", "root_wnid", "=", "'n00001740'", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            info_dir (str) : Path to hierarchy information files. Contains a \n                \"class_hierarchy.txt\" file with one edge per line, a\n                \"node_names.txt\" mapping nodes to names, and \"class_info.json\".\n        \"\"\"", "\n", "\n", "for", "f", "in", "REQUIRED_FILES", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "info_dir", ",", "f", ")", ")", ":", "\n", "                ", "raise", "Exception", "(", "f\"Missing files: `info_dir` does not \"", "\n", "\"contain required file {f}\"", ")", "\n", "\n", "# Details about dataset class names (leaves), IDS", "\n", "", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "info_dir", ",", "\"dataset_class_info.json\"", ")", ")", "as", "f", ":", "\n", "            ", "class_info", "=", "json", ".", "load", "(", "f", ")", "\n", "\n", "# Hierarchy represented as edges between parent & child nodes.", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "info_dir", ",", "\"class_hierarchy.txt\"", ")", ")", "as", "f", ":", "\n", "            ", "edges", "=", "[", "l", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "l", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n", "# Information (names, IDs) for intermediate nodes in hierarchy.", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "info_dir", ",", "\"node_names.txt\"", ")", ")", "as", "f", ":", "\n", "            ", "mapping", "=", "[", "l", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "for", "l", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n", "\n", "# Original dataset classes", "\n", "", "self", ".", "LEAF_IDS", "=", "[", "c", "[", "1", "]", "for", "c", "in", "class_info", "]", "\n", "self", ".", "LEAF_ID_TO_NAME", "=", "{", "c", "[", "1", "]", ":", "c", "[", "2", "]", "for", "c", "in", "class_info", "}", "\n", "self", ".", "LEAF_ID_TO_NUM", "=", "{", "c", "[", "1", "]", ":", "c", "[", "0", "]", "for", "c", "in", "class_info", "}", "\n", "self", ".", "LEAF_NUM_TO_NAME", "=", "{", "c", "[", "0", "]", ":", "c", "[", "2", "]", "for", "c", "in", "class_info", "}", "\n", "\n", "# Full hierarchy", "\n", "self", ".", "HIER_NODE_NAME", "=", "{", "w", "[", "0", "]", ":", "w", "[", "1", "]", "for", "w", "in", "mapping", "}", "\n", "self", ".", "graph", "=", "self", ".", "_make_parent_graph", "(", "self", ".", "LEAF_IDS", ",", "edges", ")", "\n", "\n", "# Arrange nodes in levels (top-down)", "\n", "self", ".", "node_to_level", "=", "self", ".", "_make_level_dict", "(", "self", ".", "graph", ",", "root", "=", "root_wnid", ")", "\n", "self", ".", "level_to_nodes", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "self", ".", "node_to_level", ".", "items", "(", ")", ":", "\n", "            ", "if", "v", "not", "in", "self", ".", "level_to_nodes", ":", "self", ".", "level_to_nodes", "[", "v", "]", "=", "[", "]", "\n", "self", ".", "level_to_nodes", "[", "v", "]", ".", "append", "(", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy._make_parent_graph": [[71, 110], ["networkx.DiGraph", "networkx.DiGraph", "set", "full_graph_dir[].update", "networkx.DiGraph.predecessors", "networkx.DiGraph.nodes", "set.append", "graph_dir[].update"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.update", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.update"], ["", "", "@", "staticmethod", "\n", "def", "_make_parent_graph", "(", "nodes", ",", "edges", ")", ":", "\n", "        ", "\"\"\"\n        Obtain networkx representation of class hierarchy.\n\n        Args:\n            nodes [str] : List of node names to traverse upwards.\n            edges [(str, str)] : Tuples of parent-child pairs.\n\n        Return:\n            networkx representation of the graph.\n        \"\"\"", "\n", "\n", "# create full graph", "\n", "full_graph_dir", "=", "{", "}", "\n", "for", "p", ",", "c", "in", "edges", ":", "\n", "            ", "if", "p", "not", "in", "full_graph_dir", ":", "\n", "                ", "full_graph_dir", "[", "p", "]", "=", "{", "c", ":", "1", "}", "\n", "", "else", ":", "\n", "                ", "full_graph_dir", "[", "p", "]", ".", "update", "(", "{", "c", ":", "1", "}", ")", "\n", "\n", "", "", "FG", "=", "nx", ".", "DiGraph", "(", "full_graph_dir", ")", "\n", "\n", "# perform backward BFS to get the relevant graph", "\n", "graph_dir", "=", "{", "}", "\n", "todo", "=", "[", "n", "for", "n", "in", "nodes", "if", "n", "in", "FG", ".", "nodes", "(", ")", "]", "# skip nodes not in graph", "\n", "while", "todo", ":", "\n", "            ", "curr", "=", "todo", "\n", "todo", "=", "[", "]", "\n", "for", "w", "in", "curr", ":", "\n", "                ", "for", "p", "in", "FG", ".", "predecessors", "(", "w", ")", ":", "\n", "                    ", "if", "p", "not", "in", "graph_dir", ":", "\n", "                        ", "graph_dir", "[", "p", "]", "=", "{", "w", ":", "1", "}", "\n", "", "else", ":", "\n", "                        ", "graph_dir", "[", "p", "]", ".", "update", "(", "{", "w", ":", "1", "}", ")", "\n", "", "todo", ".", "append", "(", "p", ")", "\n", "", "", "todo", "=", "set", "(", "todo", ")", "\n", "\n", "", "return", "nx", ".", "DiGraph", "(", "graph_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy._make_level_dict": [[111, 138], ["graph.successors", "max", "todo.append"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_make_level_dict", "(", "graph", ",", "root", ")", ":", "\n", "        ", "\"\"\"\n        Map nodes to their level within the hierarchy (top-down).\n\n        Args:\n            graph (networkx graph( : Graph representation of the hierarchy\n            root (str) : Hierarchy root.\n\n        Return:\n            Dictionary mapping node names to integer level.\n        \"\"\"", "\n", "\n", "level_dict", "=", "{", "}", "\n", "todo", "=", "[", "(", "root", ",", "0", ")", "]", "# (node, depth)", "\n", "while", "todo", ":", "\n", "            ", "curr", "=", "todo", "\n", "todo", "=", "[", "]", "\n", "for", "n", ",", "d", "in", "curr", ":", "\n", "                ", "if", "n", "not", "in", "level_dict", ":", "\n", "                    ", "level_dict", "[", "n", "]", "=", "d", "\n", "", "else", ":", "\n", "                    ", "level_dict", "[", "n", "]", "=", "max", "(", "d", ",", "level_dict", "[", "n", "]", ")", "# keep longest path", "\n", "", "for", "c", "in", "graph", ".", "successors", "(", "n", ")", ":", "\n", "                    ", "todo", ".", "append", "(", "(", "c", ",", "d", "+", "1", ")", ")", "\n", "\n", "", "", "", "return", "level_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.leaves_reachable": [[139, 165], ["set", "set", "leaves.union.union.union", "breeds_helpers.ClassHierarchy.graph.successors", "leaves.union.union.add", "set.append"], "methods", ["None"], ["", "def", "leaves_reachable", "(", "self", ",", "n", ")", ":", "\n", "        ", "\"\"\"\n        Determine the leaves (ImageNet classes) reachable for a give node.\n\n        Args:\n            n (str) : WordNet ID of node\n\n        Returns:\n            leaves (list): List of WordNet IDs of the ImageNet descendants\n        \"\"\"", "\n", "leaves", "=", "set", "(", ")", "\n", "todo", "=", "[", "n", "]", "\n", "while", "todo", ":", "\n", "            ", "curr", "=", "todo", "\n", "todo", "=", "[", "]", "\n", "for", "w", "in", "curr", ":", "\n", "                ", "for", "c", "in", "self", ".", "graph", ".", "successors", "(", "w", ")", ":", "\n", "                    ", "if", "c", "in", "self", ".", "LEAF_IDS", ":", "\n", "                        ", "leaves", ".", "add", "(", "c", ")", "\n", "", "else", ":", "\n", "                        ", "todo", ".", "append", "(", "c", ")", "\n", "", "", "", "todo", "=", "set", "(", "todo", ")", "\n", "\n", "# If the node itself is an ImageNet node", "\n", "", "if", "n", "in", "self", ".", "LEAF_IDS", ":", "leaves", "=", "leaves", ".", "union", "(", "[", "n", "]", ")", "\n", "return", "leaves", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.node_name": [[166, 174], ["None"], "methods", ["None"], ["", "def", "node_name", "(", "self", ",", "n", ")", ":", "\n", "        ", "\"\"\"\n        Determine the name of a node.\n        \"\"\"", "\n", "if", "n", "in", "self", ".", "HIER_NODE_NAME", ":", "\n", "            ", "return", "self", ".", "HIER_NODE_NAME", "[", "n", "]", "\n", "", "else", ":", "\n", "            ", "return", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.print_node_info": [[175, 192], ["print", "len", "breeds_helpers.ClassHierarchy.leaves_reachable"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.leaves_reachable"], ["", "", "def", "print_node_info", "(", "self", ",", "nodes", ")", ":", "\n", "        ", "\"\"\"\n        Prints basic information (name, number of ImageNet descendants) \n        about a given set of nodes.\n\n        Args:\n            nodes (list) : List of WordNet IDs for relevant nodes\n        \"\"\"", "\n", "\n", "for", "n", "in", "nodes", ":", "\n", "            ", "if", "n", "in", "self", ".", "HIER_NODE_NAME", ":", "\n", "                ", "print_str", "=", "f\"{n}: {self.HIER_NODE_NAME[n]}\"", "\n", "", "else", ":", "\n", "                ", "print_str", "=", "n", "\n", "\n", "", "print_str", "+=", "f\" ({len(self.leaves_reachable(n))})\"", "\n", "print", "(", "print_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.traverse": [[193, 217], ["breeds_helpers.ClassHierarchy.traverse", "todo.extend", "todo.extend", "breeds_helpers.ClassHierarchy.graph.successors", "breeds_helpers.ClassHierarchy.graph.predecessors"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.traverse"], ["", "", "def", "traverse", "(", "self", ",", "nodes", ",", "direction", "=", "'down'", ",", "depth", "=", "100", ")", ":", "\n", "        ", "\"\"\"\n        Find all nodes accessible from a set of given nodes.\n\n        Args:\n            nodes (list) : List of WordNet IDs for relevant nodes\n            direction (\"up\"/\"down\"): Traversal direction\n            depth (int): Maximum depth to traverse (from nodes)\n\n        Returns:\n            Set of nodes reachable within the desired depth, in the\n            desired direction.\n        \"\"\"", "\n", "\n", "if", "not", "nodes", "or", "depth", "==", "0", ":", "\n", "            ", "return", "nodes", "\n", "\n", "", "todo", "=", "[", "]", "\n", "for", "n", "in", "nodes", ":", "\n", "            ", "if", "direction", "==", "'down'", ":", "\n", "                ", "todo", ".", "extend", "(", "self", ".", "graph", ".", "successors", "(", "n", ")", ")", "\n", "", "else", ":", "\n", "                ", "todo", ".", "extend", "(", "self", ".", "graph", ".", "predecessors", "(", "n", ")", ")", "\n", "", "", "return", "nodes", "+", "self", ".", "traverse", "(", "todo", ",", "direction", "=", "direction", ",", "depth", "=", "depth", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.get_nodes_at_level": [[218, 239], ["set", "set", "breeds_helpers.ClassHierarchy.traverse"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.traverse"], ["", "def", "get_nodes_at_level", "(", "self", ",", "L", ",", "ancestor", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Find all superclasses at a specified depth within a subtree\n        of the hierarchy.\n\n        Args:\n            L (int): Depth in hierarchy (from root node)\n            ancestor (str): (optional) WordNet ID that can be used to\n                            restrict the subtree in which superclasses\n                            are found\n\n        Returns:\n            nodes (list): Set of superclasses at that depth in \n                                   the hierarchy\n        \"\"\"", "\n", "if", "ancestor", "is", "not", "None", ":", "\n", "            ", "valid", "=", "set", "(", "self", ".", "traverse", "(", "[", "ancestor", "]", ",", "direction", "=", "\"down\"", ")", ")", "\n", "\n", "", "nodes", "=", "set", "(", "[", "v", "for", "v", "in", "self", ".", "level_to_nodes", "[", "L", "]", "\n", "if", "ancestor", "is", "None", "or", "v", "in", "valid", "]", ")", "\n", "return", "nodes", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.BreedsDatasetGenerator.__init__": [[244, 246], ["breeds_helpers.ClassHierarchy"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "info_dir", ",", "root_wnid", "=", "'n00001740'", ")", ":", "\n", "        ", "self", ".", "hierarchy", "=", "ClassHierarchy", "(", "info_dir", ",", "root_wnid", "=", "root_wnid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.BreedsDatasetGenerator.split_superclass": [[247, 345], ["numpy.random.RandomState", "sorted", "sorted", "len", "sorted", "sorted", "desc_map.items", "sum", "desc_map.values", "rng.choice", "list", "list", "list", "desc_node_list.extend", "sorted", "len", "len", "set().intersection", "G.successors", "G.successors", "breeds_helpers.BreedsDatasetGenerator.hierarchy.leaves_reachable", "len", "len", "max", "split[].extend", "split[].extend", "len", "desc_map.values", "split[].extend", "len", "min", "split[].extend", "split[].extend", "len", "set", "len", "spare.extend", "split[].extend", "len", "spare.extend", "len"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.leaves_reachable"], ["", "def", "split_superclass", "(", "self", ",", "superclass_wnid", ",", "Nsubclasses", ",", "balanced", ",", "\n", "split_type", ",", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "2", ")", ")", ":", "\n", "\n", "        ", "\"\"\"\n        Split superclass into two disjoint sets of subclasses.\n\n        Args:\n            superclass_wnid (str): WordNet ID of superclass node\n            Nsubclasses (int): Number of subclasses per superclass\n                               (not used when balanced is True)\n            balanced (bool): Whether or not the dataset should be\n                             balanced over superclasses\n            split_type (\"good\"/\"bad\"/\"rand\"): Whether the subclass\n                             partitioning should be more or less \n                             adversarial or random\n            rng (RandomState): Random number generator\n\n        Returns:\n            class_ranges (tuple): Tuple of lists of subclasses\n        \"\"\"", "\n", "\n", "# Find a descendant of the superclass that has at least two children        ", "\n", "G", "=", "self", ".", "hierarchy", ".", "graph", "\n", "node", ",", "desc", "=", "superclass_wnid", ",", "sorted", "(", "list", "(", "G", ".", "successors", "(", "superclass_wnid", ")", ")", ")", "\n", "while", "len", "(", "desc", ")", "==", "1", ":", "\n", "            ", "node", "=", "desc", "[", "0", "]", "\n", "desc", "=", "sorted", "(", "list", "(", "G", ".", "successors", "(", "node", ")", ")", ")", "\n", "\n", "# Map each descendant to its ImageNet subclasses", "\n", "", "desc_map", "=", "{", "}", "\n", "for", "d", "in", "desc", ":", "\n", "            ", "desc_map", "[", "d", "]", "=", "sorted", "(", "list", "(", "self", ".", "hierarchy", ".", "leaves_reachable", "(", "d", ")", ")", ")", "\n", "\n", "# Map sorted by nodes that have the maximum number of children", "\n", "", "desc_sorted", "=", "sorted", "(", "desc_map", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "-", "len", "(", "x", "[", "1", "]", ")", ")", "\n", "\n", "# If not balanced, we will pick as many subclasses as possible", "\n", "# from this superclass (ignoring Nsubclasses)", "\n", "assert", "Nsubclasses", ">=", "2", "\n", "if", "not", "balanced", ":", "\n", "            ", "S", "=", "sum", "(", "[", "len", "(", "d", ")", "for", "d", "in", "desc_map", ".", "values", "(", ")", "]", ")", "\n", "assert", "S", ">=", "Nsubclasses", "\n", "Nsubclasses", "=", "S", "\n", "if", "Nsubclasses", "%", "2", "!=", "0", ":", "\n", "                ", "Nsubclasses", "-=", "1", "\n", "\n", "# Split superclasses into two disjoint sets", "\n", "", "", "assert", "Nsubclasses", "%", "2", "==", "0", "\n", "Nh", "=", "Nsubclasses", "//", "2", "\n", "\n", "if", "split_type", "==", "\"rand\"", ":", "\n", "# If split is random, aggregate all subclasses, subsample", "\n", "# the desired number, and then partition into two", "\n", "            ", "desc_node_list", "=", "[", "]", "\n", "for", "d", "in", "desc_map", ".", "values", "(", ")", ":", "\n", "                ", "desc_node_list", ".", "extend", "(", "d", ")", "\n", "", "sel", "=", "rng", ".", "choice", "(", "sorted", "(", "desc_node_list", ")", ",", "Nh", "*", "2", ",", "replace", "=", "False", ")", "\n", "split", "=", "(", "sel", "[", ":", "Nh", "]", ",", "sel", "[", "Nh", ":", "]", ")", "\n", "", "else", ":", "\n", "# If split is good, we will partition similar subclasses across", "\n", "# both domains. If it is bad, similar subclasses will feature in", "\n", "# one or the other", "\n", "\n", "            ", "split", ",", "spare", "=", "(", "[", "]", ",", "[", "]", ")", ",", "[", "]", "\n", "\n", "for", "k", ",", "v", "in", "desc_sorted", ":", "\n", "                ", "l", "=", "[", "len", "(", "s", ")", "for", "s", "in", "split", "]", "\n", "if", "split_type", "==", "\"bad\"", ":", "\n", "                    ", "if", "l", "[", "0", "]", "<=", "l", "[", "1", "]", "and", "l", "[", "0", "]", "<", "Nh", ":", "\n", "                        ", "if", "len", "(", "v", ")", ">", "Nh", "-", "l", "[", "0", "]", ":", "spare", ".", "extend", "(", "v", "[", "Nh", "-", "l", "[", "0", "]", ":", "]", ")", "\n", "split", "[", "0", "]", ".", "extend", "(", "v", "[", ":", "Nh", "-", "l", "[", "0", "]", "]", ")", "\n", "", "elif", "l", "[", "1", "]", "<", "Nh", ":", "\n", "                        ", "if", "len", "(", "v", ")", ">", "Nh", "-", "l", "[", "1", "]", ":", "spare", ".", "extend", "(", "v", "[", "Nh", "-", "l", "[", "1", "]", ":", "]", ")", "\n", "split", "[", "1", "]", ".", "extend", "(", "v", "[", ":", "Nh", "-", "l", "[", "1", "]", "]", ")", "\n", "", "", "else", ":", "\n", "                    ", "if", "len", "(", "v", ")", "==", "1", ":", "\n", "                        ", "i1", "=", "1", "if", "l", "[", "0", "]", "<", "Nh", "else", "0", "\n", "", "else", ":", "\n", "                        ", "i1", "=", "min", "(", "len", "(", "v", ")", "//", "2", ",", "Nh", "-", "l", "[", "0", "]", ")", "\n", "\n", "", "if", "l", "[", "0", "]", "<", "Nh", ":", "\n", "                        ", "split", "[", "0", "]", ".", "extend", "(", "v", "[", ":", "i1", "]", ")", "\n", "", "if", "l", "[", "1", "]", "<", "Nh", ":", "\n", "                        ", "split", "[", "1", "]", ".", "extend", "(", "v", "[", "i1", ":", "i1", "+", "Nh", "-", "l", "[", "1", "]", "]", ")", "\n", "\n", "", "", "", "if", "split_type", "==", "\"bad\"", ":", "\n", "                ", "l", "=", "[", "len", "(", "s", ")", "+", "0", "for", "s", "in", "split", "]", "\n", "assert", "max", "(", "l", ")", "==", "Nh", "\n", "if", "l", "[", "0", "]", "<", "Nh", ":", "\n", "                    ", "split", "[", "0", "]", ".", "extend", "(", "spare", "[", ":", "Nh", "-", "l", "[", "0", "]", "]", ")", "\n", "", "if", "l", "[", "1", "]", "<", "Nh", ":", "\n", "                    ", "split", "[", "1", "]", ".", "extend", "(", "spare", "[", ":", "Nh", "-", "l", "[", "1", "]", "]", ")", "\n", "\n", "", "", "", "assert", "len", "(", "split", "[", "0", "]", ")", "==", "len", "(", "split", "[", "1", "]", ")", "and", "not", "set", "(", "split", "[", "0", "]", ")", ".", "intersection", "(", "split", "[", "1", "]", ")", "\n", "class_ranges", "=", "(", "[", "self", ".", "hierarchy", ".", "LEAF_ID_TO_NUM", "[", "s", "]", "for", "s", "in", "split", "[", "0", "]", "]", ",", "\n", "[", "self", ".", "hierarchy", ".", "LEAF_ID_TO_NUM", "[", "s", "]", "for", "s", "in", "split", "[", "1", "]", "]", ")", "\n", "\n", "return", "class_ranges", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.BreedsDatasetGenerator.get_superclasses": [[346, 434], ["numpy.random.RandomState", "sorted", "numpy.min", "enumerate", "list", "hierarchy.print_node_info", "breeds_helpers.BreedsDatasetGenerator.hierarchy.leaves_reachable", "in_desc.append", "breeds_helpers.BreedsDatasetGenerator.hierarchy.node_name", "enumerate", "hierarchy.get_nodes_at_level", "sorted", "len", "range", "list", "sorted", "breeds_helpers.BreedsDatasetGenerator.split_superclass", "subclass_splits[].append", "subclass_splits[].append", "list", "max", "len", "len", "len", "len", "numpy.random.RandomState.choice", "zip"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.print_node_info", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.leaves_reachable", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.node_name", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.ClassHierarchy.get_nodes_at_level", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.BreedsDatasetGenerator.split_superclass"], ["", "def", "get_superclasses", "(", "self", ",", "level", ",", "Nsubclasses", "=", "None", ",", "\n", "split", "=", "None", ",", "ancestor", "=", "None", ",", "balanced", "=", "True", ",", "\n", "random_seed", "=", "2", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Obtain a dataset composed of ImageNet superclasses with a desired\n        set of properties. \n        (Optional) By specifying a split, one can parition the subclasses\n        into two disjoint datasets (with the same superclasses).\n\n        Args:\n            level (int): Depth in hierarchy (from root node)\n            Nsubclasses (int): Minimum number of subclasses per superclass\n            balanced (bool): Whether or not the dataset should be\n                             balanced over superclasses\n            split (\"good\"/\"bad\"/\"rand\"/None): If None, superclasses are\n                             not partitioned into two disjoint datasets.\n                             If not None, determines whether the subclass\n                             partitioning should be more or less \n                             adversarial or random\n            rng (RandomState): Random number generator\n\n        Returns:\n            superclasses (list): WordNet IDs of superclasses\n            subclass_splits (tuple): Tuple entries correspond to the source \n                                     and target domains respectively. A \n                                     tuple entry is a list, where each \n                                     element is a list of subclasses to \n                                     be included in a given superclass in\n                                     that domain. If split is None,\n                                     the second tuple element is empty.\n            label_map (dict): Map from (super)class number to superclass name \n        \"\"\"", "\n", "\n", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "random_seed", ")", "\n", "hierarchy", "=", "self", ".", "hierarchy", "\n", "\n", "# Identify superclasses at this level", "\n", "rel_nodes", "=", "sorted", "(", "list", "(", "hierarchy", ".", "get_nodes_at_level", "(", "\n", "level", ",", "ancestor", "=", "ancestor", ")", ")", ")", "\n", "if", "verbose", ":", "hierarchy", ".", "print_node_info", "(", "rel_nodes", ")", "\n", "\n", "# Count number of subclasses", "\n", "in_desc", "=", "[", "]", "\n", "for", "n", "in", "rel_nodes", ":", "\n", "            ", "dcurr", "=", "self", ".", "hierarchy", ".", "leaves_reachable", "(", "n", ")", "\n", "in_desc", ".", "append", "(", "sorted", "(", "list", "(", "dcurr", ")", ")", ")", "\n", "", "min_desc", "=", "np", ".", "min", "(", "[", "len", "(", "d", ")", "for", "d", "in", "in_desc", "]", ")", "\n", "assert", "min_desc", ">", "0", "\n", "\n", "# Determine number of subclasses to include per superclass", "\n", "if", "Nsubclasses", "is", "None", ":", "\n", "            ", "if", "balanced", ":", "\n", "                ", "Nsubclasses", "=", "min_desc", "\n", "if", "Nsubclasses", "%", "2", "!=", "0", ":", "Nsubclasses", "=", "max", "(", "2", ",", "Nsubclasses", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "Nsubclasses", "=", "1", "if", "split", "is", "None", "else", "2", "\n", "\n", "# Find superclasses that have sufficient subclasses", "\n", "", "", "superclass_idx", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "rel_nodes", ")", ")", "\n", "if", "len", "(", "in_desc", "[", "i", "]", ")", ">=", "Nsubclasses", "]", "\n", "superclasses", ",", "all_subclasses", "=", "[", "rel_nodes", "[", "i", "]", "for", "i", "in", "superclass_idx", "]", ",", "[", "in_desc", "[", "i", "]", "for", "i", "in", "superclass_idx", "]", "\n", "\n", "# Superclass names", "\n", "label_map", "=", "{", "}", "\n", "for", "ri", ",", "r", "in", "enumerate", "(", "superclasses", ")", ":", "\n", "            ", "label_map", "[", "ri", "]", "=", "self", ".", "hierarchy", ".", "node_name", "(", "r", ")", "\n", "\n", "", "if", "split", "is", "None", ":", "\n", "\n", "            ", "if", "balanced", ":", "\n", "                ", "Ns", "=", "[", "Nsubclasses", "]", "*", "len", "(", "all_subclasses", ")", "\n", "", "else", ":", "\n", "                ", "Ns", "=", "[", "len", "(", "d", ")", "for", "d", "in", "all_subclasses", "]", "\n", "", "wnids", "=", "[", "list", "(", "rng", ".", "choice", "(", "d", ",", "n", ",", "replace", "=", "False", ")", ")", "\n", "for", "n", ",", "d", "in", "zip", "(", "Ns", ",", "all_subclasses", ")", "]", "\n", "subclass_ranges", "=", "[", "[", "self", ".", "hierarchy", ".", "LEAF_ID_TO_NUM", "[", "w", "]", "for", "w", "in", "c", "]", "for", "c", "in", "wnids", "]", "\n", "subclass_splits", "=", "(", "subclass_ranges", ",", "[", "]", ")", "\n", "", "else", ":", "\n", "            ", "subclass_splits", "=", "(", "[", "]", ",", "[", "]", ")", "\n", "for", "sci", ",", "sc", "in", "enumerate", "(", "sorted", "(", "superclasses", ")", ")", ":", "\n", "                ", "class_tup", "=", "self", ".", "split_superclass", "(", "sc", ",", "Nsubclasses", "=", "Nsubclasses", ",", "\n", "balanced", "=", "balanced", ",", "\n", "split_type", "=", "split", ",", "rng", "=", "rng", ")", "\n", "subclass_splits", "[", "0", "]", ".", "append", "(", "class_tup", "[", "0", "]", ")", "\n", "subclass_splits", "[", "1", "]", ".", "append", "(", "class_tup", "[", "1", "]", ")", "\n", "\n", "", "", "return", "superclasses", ",", "subclass_splits", ",", "label_map", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.setup_breeds": [[16, 23], ["print", "os.path.exists", "os.makedirs", "urllib.request.urlretrieve", "os.path.join"], "function", ["None"], ["def", "setup_breeds", "(", "info_dir", ",", "url", "=", "BREEDS_URL", ")", ":", "\n", "    ", "print", "(", "f\"Downloading files from {url} to {info_dir}\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "info_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "info_dir", ")", "\n", "", "for", "f", "in", "REQUIRED_FILES", ":", "\n", "        ", "urllib", ".", "request", ".", "urlretrieve", "(", "f\"{url}/{f}?raw=true\"", ",", "\n", "os", ".", "path", ".", "join", "(", "info_dir", ",", "f", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.print_dataset_info": [[435, 481], ["len", "enumerate", "pandas.DataFrame", "data.update", "data.update", "label_map.items", "data[].append", "data[].append", "data[].append", "data[].append", "breeds_helpers.print_dataset_info.print_names"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.update", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.update"], ["", "", "def", "print_dataset_info", "(", "superclasses", ",", "\n", "subclass_splits", ",", "\n", "label_map", ",", "\n", "label_map_sub", ")", ":", "\n", "    ", "\"\"\"\n    Obtain a dataframe with information about the \n    superclasses/subclasses included in the dataset.\n\n    Args:\n    superclasses (list): WordNet IDs of superclasses\n    subclass_splits (tuple): Tuple entries correspond to the source \n                             and target domains respectively. A \n                             tuple entry is a list, where each \n                             element is a list of subclasses to \n                             be included in a given superclass in\n                             that domain. If split is None,\n                             the second tuple element is empty.\n    label_map (dict): Map from (super)class number to superclass name \n    label_map_sub (dict):  Map from subclass number to subclass name \n                              (equivalent to label map for original dataset)\n    Returns:\n        dataDf (pandas DataFrame): Columns contain relevant information \n                                about the datast\n        \n    \"\"\"", "\n", "def", "print_names", "(", "class_idx", ")", ":", "\n", "        ", "return", "[", "f'{label_map_sub[r].split(\",\")[0]} ({r})'", "\n", "for", "r", "in", "class_idx", "]", "\n", "", "data", "=", "{", "'superclass'", ":", "[", "]", "}", "\n", "contains_split", "=", "len", "(", "subclass_splits", "[", "1", "]", ")", "\n", "if", "contains_split", ":", "\n", "        ", "data", ".", "update", "(", "{", "'subclasses (source)'", ":", "[", "]", ",", "\n", "'subclasses (target)'", ":", "[", "]", "}", ")", "\n", "", "else", ":", "\n", "        ", "data", ".", "update", "(", "{", "'subclasses'", ":", "[", "]", "}", ")", "\n", "\n", "", "for", "i", ",", "(", "k", ",", "v", ")", "in", "enumerate", "(", "label_map", ".", "items", "(", ")", ")", ":", "\n", "        ", "data", "[", "'superclass'", "]", ".", "append", "(", "f'{v}'", ")", "\n", "if", "contains_split", ":", "\n", "            ", "data", "[", "'subclasses (source)'", "]", ".", "append", "(", "print_names", "(", "subclass_splits", "[", "0", "]", "[", "i", "]", ")", ")", "\n", "data", "[", "'subclasses (target)'", "]", ".", "append", "(", "print_names", "(", "subclass_splits", "[", "1", "]", "[", "i", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "data", "[", "'subclasses'", "]", ".", "append", "(", "print_names", "(", "subclass_splits", "[", "0", "]", "[", "i", "]", ")", ")", "\n", "\n", "", "", "dataDf", "=", "pd", ".", "DataFrame", "(", "data", ")", "\n", "return", "dataDf", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.make_entity13": [[484, 511], ["breeds_helpers.BreedsDatasetGenerator", "breeds_helpers.BreedsDatasetGenerator.get_superclasses"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_superclasses"], ["", "def", "make_entity13", "(", "info_dir", ",", "split", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Obtain superclass/subclass information for the ENTITY-13 dataset\n    Args:\n        info_dir (str) : Path to ImageNet information files\n        split (\"good\"/\"bad\"/\"rand\"/None): Nature of subclass\n    Returns:\n        superclasses (list): WordNet IDs of superclasses\n        subclass_splits (tuple): Tuple entries correspond to the source \n                                 and target domains respectively. A \n                                 tuple entry is a list, where each \n                                 element is a list of subclasses to \n                                 be included in a given superclass in\n                                 that domain. If split is None,\n                                 the second tuple element is empty.\n        label_map (dict): Map from (super)class number to superclass name \n\n    \"\"\"", "\n", "\n", "DG", "=", "BreedsDatasetGenerator", "(", "info_dir", ")", "\n", "return", "DG", ".", "get_superclasses", "(", "level", "=", "3", ",", "\n", "ancestor", "=", "None", ",", "\n", "Nsubclasses", "=", "20", ",", "\n", "split", "=", "split", ",", "\n", "balanced", "=", "True", ",", "\n", "random_seed", "=", "2", ",", "\n", "verbose", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.make_entity30": [[512, 538], ["breeds_helpers.BreedsDatasetGenerator", "breeds_helpers.BreedsDatasetGenerator.get_superclasses"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_superclasses"], ["", "def", "make_entity30", "(", "info_dir", ",", "split", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Obtain superclass/subclass information for the ENTITY-30 dataset\n    Args:\n        info_dir (str) : Path to ImageNet information files\n        split (\"good\"/\"bad\"/\"rand\"/None): Nature of subclass\n    Returns:\n        superclasses (list): WordNet IDs of superclasses\n        subclass_splits (tuple): Tuple entries correspond to the source \n                                 and target domains respectively. A \n                                 tuple entry is a list, where each \n                                 element is a list of subclasses to \n                                 be included in a given superclass in\n                                 that domain. If split is None,\n                                 the second tuple element is empty.\n        label_map (dict): Map from (super)class number to superclass name \n\n    \"\"\"", "\n", "DG", "=", "BreedsDatasetGenerator", "(", "info_dir", ")", "\n", "return", "DG", ".", "get_superclasses", "(", "level", "=", "4", ",", "\n", "ancestor", "=", "None", ",", "\n", "Nsubclasses", "=", "8", ",", "\n", "split", "=", "split", ",", "\n", "balanced", "=", "True", ",", "\n", "random_seed", "=", "2", ",", "\n", "verbose", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.make_living17": [[539, 565], ["breeds_helpers.BreedsDatasetGenerator", "breeds_helpers.BreedsDatasetGenerator.get_superclasses"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_superclasses"], ["", "def", "make_living17", "(", "info_dir", ",", "split", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Obtain superclass/subclass information for the LIVING-17 dataset\n    Args:\n        info_dir (str) : Path to ImageNet information files\n        split (\"good\"/\"bad\"/\"rand\"/None): Nature of subclass\n    Returns:\n        superclasses (list): WordNet IDs of superclasses\n        subclass_splits (tuple): Tuple entries correspond to the source \n                                 and target domains respectively. A \n                                 tuple entry is a list, where each \n                                 element is a list of subclasses to \n                                 be included in a given superclass in\n                                 that domain. If split is None,\n                                 the second tuple element is empty.\n        label_map (dict): Map from (super)class number to superclass name \n\n    \"\"\"", "\n", "DG", "=", "BreedsDatasetGenerator", "(", "info_dir", ")", "\n", "return", "DG", ".", "get_superclasses", "(", "level", "=", "5", ",", "\n", "ancestor", "=", "\"n00004258\"", ",", "\n", "Nsubclasses", "=", "4", ",", "\n", "split", "=", "split", ",", "\n", "balanced", "=", "True", ",", "\n", "random_seed", "=", "2", ",", "\n", "verbose", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.breeds_helpers.make_nonliving26": [[566, 592], ["breeds_helpers.BreedsDatasetGenerator", "breeds_helpers.BreedsDatasetGenerator.get_superclasses"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_superclasses"], ["", "def", "make_nonliving26", "(", "info_dir", ",", "split", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Obtain superclass/subclass information for the NONLIVING-26 dataset.\n    Args:\n        info_dir (str) : Path to ImageNet information files\n        split (\"good\"/\"bad\"/\"rand\"/None): Nature of subclass\n    Returns:\n        superclasses (list): WordNet IDs of superclasses\n        subclass_splits (tuple): Tuple entries correspond to the source \n                                 and target domains respectively. A \n                                 tuple entry is a list, where each \n                                 element is a list of subclasses to \n                                 be included in a given superclass in\n                                 that domain. If split is None,\n                                 the second tuple element is empty.\n        label_map (dict): Map from (super)class number to superclass name \n\n    \"\"\"", "\n", "DG", "=", "BreedsDatasetGenerator", "(", "info_dir", ")", "\n", "return", "DG", ".", "get_superclasses", "(", "level", "=", "5", ",", "\n", "ancestor", "=", "\"n00021939\"", ",", "\n", "Nsubclasses", "=", "4", ",", "\n", "split", "=", "split", ",", "\n", "balanced", "=", "True", ",", "\n", "random_seed", "=", "2", ",", "\n", "verbose", "=", "False", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.DatasetFolder.__init__": [[84, 106], ["folder.DatasetFolder._find_classes", "folder.make_dataset", "label_mapping", "len", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.OIDatasetFolder._find_classes", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.make_dataset"], ["def", "__init__", "(", "self", ",", "root", ",", "loader", ",", "extensions", ",", "transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "label_mapping", "=", "None", ")", ":", "\n", "        ", "classes", ",", "class_to_idx", "=", "self", ".", "_find_classes", "(", "root", ")", "\n", "if", "label_mapping", "is", "not", "None", ":", "\n", "            ", "classes", ",", "class_to_idx", "=", "label_mapping", "(", "classes", ",", "class_to_idx", ")", "\n", "\n", "", "samples", "=", "make_dataset", "(", "root", ",", "class_to_idx", ",", "extensions", ")", "\n", "if", "len", "(", "samples", ")", "==", "0", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "\"Found 0 files in subfolders of: \"", "+", "root", "+", "\"\\n\"", "\n", "\"Supported extensions are: \"", "+", "\",\"", ".", "join", "(", "extensions", ")", ")", ")", "\n", "\n", "", "self", ".", "root", "=", "root", "\n", "self", ".", "loader", "=", "loader", "\n", "self", ".", "extensions", "=", "extensions", "\n", "\n", "self", ".", "classes", "=", "classes", "\n", "self", ".", "class_to_idx", "=", "class_to_idx", "\n", "self", ".", "samples", "=", "samples", "\n", "self", ".", "targets", "=", "[", "s", "[", "1", "]", "for", "s", "in", "samples", "]", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.DatasetFolder._find_classes": [[107, 128], ["classes.sort", "range", "os.scandir", "os.scandir", "os.scandir", "os.scandir", "d.is_dir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.isdir", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_find_classes", "(", "self", ",", "dir", ")", ":", "\n", "        ", "\"\"\"\n        Finds the class folders in a dataset.\n\n        Args:\n            dir (string): Root directory path.\n\n        Returns:\n            tuple: (classes, class_to_idx) where classes are relative to (dir), and class_to_idx is a dictionary.\n\n        Ensures:\n            No class is a subdirectory of another.\n        \"\"\"", "\n", "if", "sys", ".", "version_info", ">=", "(", "3", ",", "5", ")", ":", "\n", "# Faster and available in Python 3.5 and above", "\n", "            ", "classes", "=", "[", "d", ".", "name", "for", "d", "in", "os", ".", "scandir", "(", "dir", ")", "if", "d", ".", "is_dir", "(", ")", "]", "\n", "", "else", ":", "\n", "            ", "classes", "=", "[", "d", "for", "d", "in", "os", ".", "listdir", "(", "dir", ")", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "dir", ",", "d", ")", ")", "]", "\n", "", "classes", ".", "sort", "(", ")", "\n", "class_to_idx", "=", "{", "classes", "[", "i", "]", ":", "i", "for", "i", "in", "range", "(", "len", "(", "classes", ")", ")", "}", "\n", "return", "classes", ",", "class_to_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.DatasetFolder.__getitem__": [[129, 145], ["folder.DatasetFolder.loader", "folder.DatasetFolder.transform", "folder.DatasetFolder.target_transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            tuple: (sample, target) where target is class_index of the target class.\n        \"\"\"", "\n", "path", ",", "target", "=", "self", ".", "samples", "[", "index", "]", "\n", "sample", "=", "self", ".", "loader", "(", "path", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "sample", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.DatasetFolder.__len__": [[146, 148], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.DatasetFolder.__repr__": [[149, 158], ["folder.DatasetFolder.__len__", "folder.DatasetFolder.transform.__repr__().replace", "folder.DatasetFolder.target_transform.__repr__().replace", "folder.DatasetFolder.transform.__repr__", "folder.DatasetFolder.target_transform.__repr__", "len", "len"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.data_utils.ModelNet_Loader.__len__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.Node.__repr__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.Node.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "fmt_str", "=", "'Dataset '", "+", "self", ".", "__class__", ".", "__name__", "+", "'\\n'", "\n", "fmt_str", "+=", "'    Number of datapoints: {}\\n'", ".", "format", "(", "self", ".", "__len__", "(", ")", ")", "\n", "fmt_str", "+=", "'    Root Location: {}\\n'", ".", "format", "(", "self", ".", "root", ")", "\n", "tmp", "=", "'    Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}\\n'", ".", "format", "(", "tmp", ",", "self", ".", "transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "tmp", "=", "'    Target Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}'", ".", "format", "(", "tmp", ",", "self", ".", "target_transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "return", "fmt_str", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.ImageFolder.__init__": [[211, 218], ["folder.DatasetFolder.__init__"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "root", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "loader", "=", "default_loader", ",", "label_mapping", "=", "None", ")", ":", "\n", "        ", "super", "(", "ImageFolder", ",", "self", ")", ".", "__init__", "(", "root", ",", "loader", ",", "IMG_EXTENSIONS", ",", "\n", "transform", "=", "transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "label_mapping", "=", "label_mapping", ")", "\n", "self", ".", "imgs", "=", "self", ".", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.TensorDataset.__init__": [[228, 232], ["all", "tensors[].size", "tensor.size"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "*", "tensors", ",", "transform", "=", "None", ")", ":", "\n", "        ", "assert", "all", "(", "tensors", "[", "0", "]", ".", "size", "(", "0", ")", "==", "tensor", ".", "size", "(", "0", ")", "for", "tensor", "in", "tensors", ")", "\n", "self", ".", "tensors", "=", "tensors", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.TensorDataset.__getitem__": [[233, 244], ["tuple", "torchvision.transforms.Compose", "torchvision.transforms.Compose.", "torchvision.transforms.ToPILImage"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "im", ",", "targ", "=", "tuple", "(", "tensor", "[", "index", "]", "for", "tensor", "in", "self", ".", "tensors", ")", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "real_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToPILImage", "(", ")", ",", "\n", "self", ".", "transform", "\n", "]", ")", "\n", "im", "=", "real_transform", "(", "im", ")", "\n", "\n", "", "return", "im", ",", "targ", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.TensorDataset.__len__": [[245, 247], ["folder.TensorDataset.tensors[].size"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "tensors", "[", "0", "]", ".", "size", "(", "0", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.has_file_allowed_extension": [[12, 24], ["filename.lower", "any", "filename.lower.endswith"], "function", ["None"], ["def", "has_file_allowed_extension", "(", "filename", ",", "extensions", ")", ":", "\n", "    ", "\"\"\"Checks if a file is an allowed extension.\n\n    Args:\n        filename (string): path to a file\n        extensions (iterable of strings): extensions to consider (lowercase)\n\n    Returns:\n        bool: True if the filename ends with one of given extensions\n    \"\"\"", "\n", "filename_lower", "=", "filename", ".", "lower", "(", ")", "\n", "return", "any", "(", "filename_lower", ".", "endswith", "(", "ext", ")", "for", "ext", "in", "extensions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.is_image_file": [[26, 36], ["folder.has_file_allowed_extension"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.has_file_allowed_extension"], ["", "def", "is_image_file", "(", "filename", ")", ":", "\n", "    ", "\"\"\"Checks if a file is an allowed image extension.\n\n    Args:\n        filename (string): path to a file\n\n    Returns:\n        bool: True if the filename ends with a known image extension\n    \"\"\"", "\n", "return", "has_file_allowed_extension", "(", "filename", ",", "IMG_EXTENSIONS", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.make_dataset": [[38, 54], ["os.path.expanduser", "os.path.expanduser", "sorted", "class_to_idx.keys", "os.path.join", "os.path.join", "sorted", "os.path.isdir", "os.path.isdir", "os.walk", "os.walk", "sorted", "folder.has_file_allowed_extension", "os.path.join", "os.path.join", "images.append"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.has_file_allowed_extension"], ["", "def", "make_dataset", "(", "dir", ",", "class_to_idx", ",", "extensions", ")", ":", "\n", "    ", "images", "=", "[", "]", "\n", "dir", "=", "os", ".", "path", ".", "expanduser", "(", "dir", ")", "\n", "for", "target", "in", "sorted", "(", "class_to_idx", ".", "keys", "(", ")", ")", ":", "\n", "        ", "d", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "target", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "d", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "for", "root", ",", "_", ",", "fnames", "in", "sorted", "(", "os", ".", "walk", "(", "d", ")", ")", ":", "\n", "            ", "for", "fname", "in", "sorted", "(", "fnames", ")", ":", "\n", "                ", "if", "has_file_allowed_extension", "(", "fname", ",", "extensions", ")", ":", "\n", "                    ", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "fname", ")", "\n", "item", "=", "(", "path", ",", "class_to_idx", "[", "target", "]", ")", "\n", "images", ".", "append", "(", "item", ")", "\n", "\n", "", "", "", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.pil_loader": [[163, 168], ["open", "PIL.Image.open", "Image.open.convert"], "function", ["None"], ["def", "pil_loader", "(", "path", ")", ":", "\n", "# open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.accimage_loader": [[170, 177], ["accimage.Image", "folder.pil_loader"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.pil_loader"], ["", "", "def", "accimage_loader", "(", "path", ")", ":", "\n", "    ", "import", "accimage", "\n", "try", ":", "\n", "        ", "return", "accimage", ".", "Image", "(", "path", ")", "\n", "", "except", "IOError", ":", "\n", "# Potentially a decoding problem, fall back to PIL.Image", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.default_loader": [[179, 185], ["get_image_backend", "folder.accimage_loader", "folder.pil_loader"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.accimage_loader", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.folder.pil_loader"], ["", "", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "from", "torchvision", "import", "get_image_backend", "\n", "if", "get_image_backend", "(", ")", "==", "'accimage'", ":", "\n", "        ", "return", "accimage_loader", "(", "path", ")", "\n", "", "else", ":", "\n", "        ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.vis_tools.get_axis": [[7, 16], ["max"], "function", ["None"], ["def", "get_axis", "(", "axarr", ",", "H", ",", "W", ",", "i", ",", "j", ")", ":", "\n", "    ", "H", ",", "W", "=", "H", "-", "1", ",", "W", "-", "1", "\n", "if", "not", "(", "H", "or", "W", ")", ":", "\n", "        ", "ax", "=", "axarr", "\n", "", "elif", "not", "(", "H", "and", "W", ")", ":", "\n", "        ", "ax", "=", "axarr", "[", "max", "(", "i", ",", "j", ")", "]", "\n", "", "else", ":", "\n", "        ", "ax", "=", "axarr", "[", "i", "]", "[", "j", "]", "\n", "", "return", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.vis_tools.show_image_row": [[17, 35], ["matplotlib.subplots", "range", "matplotlib.show", "len", "len", "range", "matplotlib.savefig", "vis_tools.get_axis", "get_axis.imshow", "get_axis.xaxis.set_ticks", "get_axis.yaxis.set_ticks", "get_axis.xaxis.set_ticklabels", "get_axis.yaxis.set_ticklabels", "[].permute", "get_axis.set_ylabel", "get_axis.set_title"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.vis_tools.get_axis"], ["", "def", "show_image_row", "(", "xlist", ",", "ylist", "=", "None", ",", "fontsize", "=", "12", ",", "size", "=", "(", "2.5", ",", "2.5", ")", ",", "tlist", "=", "None", ",", "filename", "=", "None", ")", ":", "\n", "    ", "H", ",", "W", "=", "len", "(", "xlist", ")", ",", "len", "(", "xlist", "[", "0", "]", ")", "\n", "fig", ",", "axarr", "=", "plt", ".", "subplots", "(", "H", ",", "W", ",", "figsize", "=", "(", "size", "[", "0", "]", "*", "W", ",", "size", "[", "1", "]", "*", "H", ")", ")", "\n", "for", "w", "in", "range", "(", "W", ")", ":", "\n", "        ", "for", "h", "in", "range", "(", "H", ")", ":", "\n", "            ", "ax", "=", "get_axis", "(", "axarr", ",", "H", ",", "W", ",", "h", ",", "w", ")", "\n", "ax", ".", "imshow", "(", "xlist", "[", "h", "]", "[", "w", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "ax", ".", "xaxis", ".", "set_ticks", "(", "[", "]", ")", "\n", "ax", ".", "yaxis", ".", "set_ticks", "(", "[", "]", ")", "\n", "ax", ".", "xaxis", ".", "set_ticklabels", "(", "[", "]", ")", "\n", "ax", ".", "yaxis", ".", "set_ticklabels", "(", "[", "]", ")", "\n", "if", "ylist", "and", "w", "==", "0", ":", "\n", "                ", "ax", ".", "set_ylabel", "(", "ylist", "[", "h", "]", ",", "fontsize", "=", "fontsize", ")", "\n", "", "if", "tlist", ":", "\n", "                ", "ax", ".", "set_title", "(", "tlist", "[", "h", "]", "[", "w", "]", ",", "fontsize", "=", "fontsize", ")", "\n", "", "", "", "if", "filename", "is", "not", "None", ":", "\n", "        ", "plt", ".", "savefig", "(", "filename", ",", "bbox_inches", "=", "'tight'", ")", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.vis_tools.show_image_column": [[37, 55], ["matplotlib.subplots", "range", "matplotlib.show", "len", "len", "range", "matplotlib.savefig", "vis_tools.get_axis", "get_axis.imshow", "get_axis.xaxis.set_ticks", "get_axis.yaxis.set_ticks", "get_axis.xaxis.set_ticklabels", "get_axis.yaxis.set_ticklabels", "[].permute", "get_axis.set_title", "get_axis.set_title"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.vis_tools.get_axis"], ["", "def", "show_image_column", "(", "xlist", ",", "ylist", "=", "None", ",", "fontsize", "=", "12", ",", "size", "=", "(", "2.5", ",", "2.5", ")", ",", "tlist", "=", "None", ",", "filename", "=", "None", ")", ":", "\n", "    ", "W", ",", "H", "=", "len", "(", "xlist", ")", ",", "len", "(", "xlist", "[", "0", "]", ")", "\n", "fig", ",", "axarr", "=", "plt", ".", "subplots", "(", "H", ",", "W", ",", "figsize", "=", "(", "size", "[", "0", "]", "*", "W", ",", "size", "[", "1", "]", "*", "H", ")", ")", "\n", "for", "w", "in", "range", "(", "W", ")", ":", "\n", "        ", "for", "h", "in", "range", "(", "H", ")", ":", "\n", "            ", "ax", "=", "get_axis", "(", "axarr", ",", "H", ",", "W", ",", "h", ",", "w", ")", "\n", "ax", ".", "imshow", "(", "xlist", "[", "w", "]", "[", "h", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "ax", ".", "xaxis", ".", "set_ticks", "(", "[", "]", ")", "\n", "ax", ".", "yaxis", ".", "set_ticks", "(", "[", "]", ")", "\n", "ax", ".", "xaxis", ".", "set_ticklabels", "(", "[", "]", ")", "\n", "ax", ".", "yaxis", ".", "set_ticklabels", "(", "[", "]", ")", "\n", "if", "ylist", "and", "h", "==", "0", ":", "\n", "                ", "ax", ".", "set_title", "(", "ylist", "[", "w", "]", ",", "fontsize", "=", "fontsize", ")", "\n", "", "if", "tlist", ":", "\n", "                ", "ax", ".", "set_title", "(", "tlist", "[", "w", "]", "[", "h", "]", ",", "fontsize", "=", "fontsize", ")", "\n", "", "", "", "if", "filename", "is", "not", "None", ":", "\n", "        ", "plt", ".", "savefig", "(", "filename", ",", "bbox_inches", "=", "'tight'", ")", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.vis_tools.filter_data": [[56, 64], ["zip", "metadata_int[].tolist", "len", "metadata[].isin", "isinstance"], "function", ["None"], ["", "def", "filter_data", "(", "metadata", ",", "criteria", ",", "value", ")", ":", "\n", "    ", "crit", "=", "[", "True", "]", "*", "len", "(", "metadata", ")", "\n", "for", "c", ",", "v", "in", "zip", "(", "criteria", ",", "value", ")", ":", "\n", "        ", "v", "=", "[", "v", "]", "if", "not", "isinstance", "(", "v", ",", "list", ")", "else", "v", "\n", "crit", "&=", "metadata", "[", "c", "]", ".", "isin", "(", "v", ")", "\n", "", "metadata_int", "=", "metadata", "[", "crit", "]", "\n", "exp_ids", "=", "metadata_int", "[", "'exp_id'", "]", ".", "tolist", "(", ")", "\n", "return", "exp_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.vis_tools.plot_axis": [[65, 69], ["ax.plot", "ax.set_xlabel", "ax.set_ylabel"], "function", ["None"], ["", "def", "plot_axis", "(", "ax", ",", "x", ",", "y", ",", "xlabel", ",", "ylabel", ",", "**", "kwargs", ")", ":", "\n", "    ", "ax", ".", "plot", "(", "x", ",", "y", ",", "**", "kwargs", ")", "\n", "ax", ".", "set_xlabel", "(", "xlabel", ",", "fontsize", "=", "14", ")", "\n", "ax", ".", "set_ylabel", "(", "ylabel", ",", "fontsize", "=", "14", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.vis_tools.plot_tsne": [[71, 79], ["sklearn.decomposition.PCA().fit_transform", "sklearn.manifold.TSNE().fit_transform", "seaborn.color_palette", "matplotlib.scatter", "matplotlib.show", "len", "sklearn.decomposition.PCA", "sklearn.manifold.TSNE", "numpy.unique", "zip", "range", "len", "numpy.unique"], "function", ["None"], ["", "def", "plot_tsne", "(", "x", ",", "y", ",", "npca", "=", "50", ",", "markersize", "=", "10", ")", ":", "\n", "    ", "Xlow", "=", "PCA", "(", "n_components", "=", "npca", ")", ".", "fit_transform", "(", "x", ")", "\n", "Y", "=", "manifold", ".", "TSNE", "(", "n_components", "=", "2", ")", ".", "fit_transform", "(", "Xlow", ")", "\n", "palette", "=", "sns", ".", "color_palette", "(", "\"Paired\"", ",", "len", "(", "np", ".", "unique", "(", "y", ")", ")", ")", "\n", "color_dict", "=", "{", "l", ":", "c", "for", "l", ",", "c", "in", "zip", "(", "range", "(", "len", "(", "np", ".", "unique", "(", "y", ")", ")", ")", ",", "palette", ")", "}", "\n", "colors", "=", "[", "color_dict", "[", "l", "]", "for", "l", "in", "y", "]", "\n", "plt", ".", "scatter", "(", "Y", "[", ":", ",", "0", "]", ",", "Y", "[", ":", ",", "1", "]", ",", "markersize", ",", "colors", ",", "'o'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.OIDatasetFolder.__init__": [[126, 160], ["openimgs_helpers.OIDatasetFolder._find_classes", "openimgs_helpers.get_image_annotations_mode", "openimgs_helpers.make_dataset", "label_mapping", "len", "RuntimeError", "class_to_idx.items"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.OIDatasetFolder._find_classes", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.get_image_annotations_mode", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.make_dataset"], ["def", "__init__", "(", "self", ",", "root", ",", "train", "=", "True", ",", "extensions", "=", "IMG_EXTENSIONS", ",", "\n", "loader", "=", "default_loader", ",", "transform", "=", "None", ",", "\n", "target_transform", "=", "target_transform_oi", ",", "label_mapping", "=", "None", ",", "\n", "download", "=", "False", ")", ":", "\n", "        ", "classes", ",", "class_to_idx", ",", "code_to_class", "=", "self", ".", "_find_classes", "(", "root", ")", "\n", "class_to_idx_comp", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "class_to_idx", ".", "items", "(", ")", "}", "\n", "if", "label_mapping", "is", "not", "None", ":", "\n", "            ", "classes", ",", "class_to_idx", "=", "label_mapping", "(", "classes", ",", "class_to_idx", ")", "\n", "\n", "", "mode", "=", "\"train\"", "if", "train", "else", "\"test\"", "\n", "sample_info", "=", "get_image_annotations_mode", "(", "code_to_class", ",", "\n", "mode", "=", "mode", ",", "\n", "data_dir", "=", "root", ")", "\n", "\n", "\n", "samples", "=", "make_dataset", "(", "root", ",", "mode", ",", "sample_info", ",", "\n", "class_to_idx", ",", "class_to_idx_comp", ",", "\n", "extensions", ")", "\n", "if", "len", "(", "samples", ")", "==", "0", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "\"Found 0 files in subfolders of: \"", "+", "root", "+", "\"\\n\"", "\n", "\"Supported extensions are: \"", "+", "\",\"", ".", "join", "(", "extensions", ")", ")", ")", "\n", "\n", "", "self", ".", "root", "=", "root", "\n", "self", ".", "loader", "=", "loader", "\n", "self", ".", "extensions", "=", "extensions", "\n", "\n", "self", ".", "classes", "=", "classes", "\n", "self", ".", "class_to_idx", "=", "class_to_idx", "\n", "self", ".", "samples", "=", "samples", "\n", "self", ".", "targets", "=", "[", "s", "[", "1", "]", "for", "s", "in", "samples", "]", "\n", "self", ".", "all_targets", "=", "[", "s", "[", "2", "]", "for", "s", "in", "samples", "]", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.OIDatasetFolder._find_classes": [[161, 169], ["openimgs_helpers.load_class_desc", "load_class_desc.values", "enumerate"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.load_class_desc"], ["", "def", "_find_classes", "(", "self", ",", "dir", ")", ":", "\n", "        ", "\"\"\"\n        Finds the class folders in a dataset.\n        \"\"\"", "\n", "code_to_class", "=", "load_class_desc", "(", "dir", ")", "\n", "classes", "=", "[", "v", "for", "v", "in", "code_to_class", ".", "values", "(", ")", "]", "\n", "class_to_idx", "=", "{", "code_to_class", "[", "k", "]", ":", "i", "for", "i", ",", "k", "in", "enumerate", "(", "code_to_class", ")", "}", "\n", "return", "classes", ",", "class_to_idx", ",", "code_to_class", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.OIDatasetFolder.__getitem__": [[170, 186], ["openimgs_helpers.OIDatasetFolder.loader", "openimgs_helpers.OIDatasetFolder.transform", "openimgs_helpers.OIDatasetFolder.target_transform", "openimgs_helpers.OIDatasetFolder.target_transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n        Returns:\n            tuple: (sample, target) where target is class_index of the target class.\n        \"\"\"", "\n", "path", ",", "target", ",", "comp_target", "=", "self", ".", "samples", "[", "index", "]", "\n", "sample", "=", "self", ".", "loader", "(", "path", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "comp_target", "=", "self", ".", "target_transform", "(", "comp_target", ")", "\n", "", "return", "sample", ",", "target", ",", "comp_target", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.OIDatasetFolder.__len__": [[187, 189], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.OIDatasetFolder.__repr__": [[190, 199], ["openimgs_helpers.OIDatasetFolder.__len__", "openimgs_helpers.OIDatasetFolder.transform.__repr__().replace", "openimgs_helpers.OIDatasetFolder.target_transform.__repr__().replace", "openimgs_helpers.OIDatasetFolder.transform.__repr__", "openimgs_helpers.OIDatasetFolder.target_transform.__repr__", "len", "len"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.data_utils.ModelNet_Loader.__len__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.Node.__repr__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.Node.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "fmt_str", "=", "'Dataset '", "+", "self", ".", "__class__", ".", "__name__", "+", "'\\n'", "\n", "fmt_str", "+=", "'    Number of datapoints: {}\\n'", ".", "format", "(", "self", ".", "__len__", "(", ")", ")", "\n", "fmt_str", "+=", "'    Root Location: {}\\n'", ".", "format", "(", "self", ".", "root", ")", "\n", "tmp", "=", "'    Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}\\n'", ".", "format", "(", "tmp", ",", "self", ".", "transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "tmp", "=", "'    Target Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}'", ".", "format", "(", "tmp", ",", "self", ".", "target_transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "return", "fmt_str", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.load_class_desc": [[12, 25], ["open", "enumerate", "os.path.join", "csv.reader", "row[].split", "row[].split"], "function", ["None"], ["def", "load_class_desc", "(", "data_dir", ")", ":", "\n", "    ", "\"\"\"Returns map from cid to class name.\"\"\"", "\n", "\n", "class_names", "=", "{", "}", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "\"metadata\"", ",", "\"class-descriptions-boxable.csv\"", ")", ",", "newline", "=", "\"\"", ")", "as", "csvfile", ":", "\n", "        ", "for", "ri", ",", "row", "in", "enumerate", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "' '", ",", "quotechar", "=", "'|'", ")", ")", ":", "\n", "            ", "cid", "=", "row", "[", "0", "]", ".", "split", "(", "','", ")", "[", "0", "]", "\n", "cname", "=", "' '", ".", "join", "(", "[", "row", "[", "0", "]", ".", "split", "(", "','", ")", "[", "1", "]", "]", "+", "row", "[", "1", ":", "]", ")", "\n", "assert", "cid", "not", "in", "class_names", "\n", "class_names", "[", "cid", "]", "=", "cname", "\n", "\n", "", "", "return", "class_names", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.get_image_annotations_mode": [[26, 75], ["os.path.join", "os.path.join", "set", "open", "enumerate", "open", "enumerate", "csv.reader", "tuple", "[].append", "[].append", "csv.reader", "row[].split", "tuple", "len", "row[].split", "len", "len", "float", "numpy.unique"], "function", ["None"], ["", "def", "get_image_annotations_mode", "(", "class_names", ",", "data_dir", ",", "mode", "=", "\"train\"", ")", ":", "\n", "    ", "\"\"\"Returns map from img number to label (along with verification\n       source and confidence)\"\"\"", "\n", "\n", "assert", "mode", "in", "set", "(", "[", "\"train\"", ",", "\"test\"", ",", "\"validation\"", "]", ")", "\n", "lab_dir", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "\n", "\"labels\"", ",", "\n", "f\"{mode}-annotations-human-imagelabels-boxable.csv\"", ")", "\n", "prefix", "=", "\"oidv6-\"", "if", "mode", "==", "\"train\"", "else", "\"\"", "\n", "anno_dir", "=", "os", ".", "path", ".", "join", "(", "data_dir", ",", "\n", "\"boxes\"", ",", "\n", "f\"{prefix}{mode}-annotations-bbox.csv\"", ")", "\n", "\n", "img_to_label", "=", "{", "}", "\n", "with", "open", "(", "lab_dir", ",", "newline", "=", "\"\"", ")", "as", "csvfile", ":", "\n", "        ", "for", "ri", ",", "row", "in", "enumerate", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "' '", ",", "quotechar", "=", "'|'", ")", ")", ":", "\n", "            ", "if", "ri", "==", "0", ":", "continue", "\n", "\n", "assert", "len", "(", "row", ")", "==", "1", "\n", "im_id", ",", "ver", ",", "cno", ",", "conf", "=", "tuple", "(", "row", "[", "0", "]", ".", "split", "(", "\",\"", ")", ")", "\n", "cno", "=", "class_names", "[", "cno", "]", "\n", "\n", "if", "im_id", "not", "in", "img_to_label", ":", "\n", "                ", "img_to_label", "[", "im_id", "]", "=", "{", "}", "\n", "\n", "", "if", "cno", "not", "in", "img_to_label", "[", "im_id", "]", ":", "\n", "                ", "img_to_label", "[", "im_id", "]", "[", "cno", "]", "=", "{", "'ver'", ":", "[", "]", ",", "'conf'", ":", "[", "]", "}", "\n", "", "img_to_label", "[", "im_id", "]", "[", "cno", "]", "[", "'ver'", "]", ".", "append", "(", "ver", ")", "\n", "img_to_label", "[", "im_id", "]", "[", "cno", "]", "[", "'conf'", "]", ".", "append", "(", "conf", ")", "\n", "\n", "\n", "", "", "for", "im_id", "in", "img_to_label", ":", "\n", "        ", "for", "lab", "in", "img_to_label", "[", "im_id", "]", ":", "\n", "            ", "assert", "len", "(", "np", ".", "unique", "(", "img_to_label", "[", "im_id", "]", "[", "lab", "]", "[", "'conf'", "]", ")", ")", "==", "1", "\n", "img_to_label", "[", "im_id", "]", "[", "lab", "]", "[", "'conf'", "]", "=", "img_to_label", "[", "im_id", "]", "[", "lab", "]", "[", "'conf'", "]", "[", "0", "]", "\n", "\n", "", "", "with", "open", "(", "anno_dir", ",", "newline", "=", "\"\"", ")", "as", "csvfile", ":", "\n", "        ", "for", "ri", ",", "row", "in", "enumerate", "(", "csv", ".", "reader", "(", "csvfile", ",", "delimiter", "=", "' '", ",", "quotechar", "=", "'|'", ")", ")", ":", "\n", "            ", "if", "ri", "==", "0", ":", "continue", "\n", "assert", "len", "(", "row", ")", "==", "1", "\n", "rs", "=", "row", "[", "0", "]", ".", "split", "(", "\",\"", ")", "\n", "im_id", ",", "src", ",", "cno", "=", "tuple", "(", "rs", "[", ":", "3", "]", ")", "\n", "cno", "=", "class_names", "[", "cno", "]", "\n", "\n", "box", "=", "[", "float", "(", "v", ")", "for", "v", "in", "rs", "[", "4", ":", "8", "]", "]", "\n", "if", "'box'", "not", "in", "img_to_label", "[", "im_id", "]", "[", "cno", "]", "or", "src", "==", "'activemil'", ":", "\n", "                ", "img_to_label", "[", "im_id", "]", "[", "cno", "]", "[", "'box'", "]", "=", "box", "\n", "\n", "", "", "", "return", "img_to_label", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.make_dataset": [[77, 107], ["set", "len", "sample_info.items", "class_to_idx.keys", "set", "os.path.join", "set", "set", "pos_labels.intersection.intersection", "neg_labels.intersection.intersection", "class_to_idx.values", "images.append", "len", "v.keys", "v.keys"], "function", ["None"], ["", "def", "make_dataset", "(", "dir", ",", "mode", ",", "sample_info", ",", "\n", "class_to_idx", ",", "class_to_idx_comp", ",", "extensions", ")", ":", "\n", "\n", "    ", "images", "=", "[", "]", "\n", "allowed_labels", "=", "set", "(", "class_to_idx", ".", "keys", "(", ")", ")", "\n", "Nclasses", "=", "len", "(", "set", "(", "class_to_idx", ".", "values", "(", ")", ")", ")", "\n", "\n", "for", "k", ",", "v", "in", "sample_info", ".", "items", "(", ")", ":", "\n", "\n", "        ", "img_path", "=", "os", ".", "path", ".", "join", "(", "dir", ",", "\"images\"", ",", "mode", ",", "k", "+", "\".jpg\"", ")", "\n", "\n", "pos_labels", "=", "set", "(", "[", "l", "for", "l", "in", "v", ".", "keys", "(", ")", "if", "v", "[", "l", "]", "[", "'conf'", "]", "[", "0", "]", "==", "'1'", "]", ")", "\n", "neg_labels", "=", "set", "(", "[", "l", "for", "l", "in", "v", ".", "keys", "(", ")", "if", "v", "[", "l", "]", "[", "'conf'", "]", "[", "0", "]", "==", "'0'", "]", ")", "\n", "\n", "pos_labels", "=", "pos_labels", ".", "intersection", "(", "allowed_labels", ")", "\n", "neg_labels", "=", "neg_labels", ".", "intersection", "(", "allowed_labels", ")", "\n", "if", "Nclasses", "==", "601", "or", "len", "(", "pos_labels", ")", "!=", "0", ":", "\n", "            ", "label", "=", "[", "0", "]", "*", "Nclasses", "\n", "all_labels", "=", "[", "0", "]", "*", "601", "\n", "for", "p", "in", "pos_labels", ":", "\n", "                ", "label", "[", "class_to_idx", "[", "p", "]", "]", "=", "1", "\n", "all_labels", "[", "class_to_idx_comp", "[", "p", "]", "]", "=", "1", "\n", "", "for", "n", "in", "neg_labels", ":", "\n", "                ", "if", "label", "[", "class_to_idx", "[", "n", "]", "]", "==", "0", ":", "\n", "                    ", "label", "[", "class_to_idx", "[", "n", "]", "]", "=", "-", "1", "\n", "", "all_labels", "[", "class_to_idx_comp", "[", "n", "]", "]", "=", "-", "1", "\n", "", "item", "=", "(", "img_path", ",", "label", ",", "all_labels", ")", "\n", "images", ".", "append", "(", "item", ")", "\n", "\n", "", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.get_label_map": [[200, 204], ["openimgs_helpers.load_class_desc", "enumerate", "load_class_desc.values"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.load_class_desc"], ["", "", "def", "get_label_map", "(", "data_dir", ")", ":", "\n", "    ", "CLASS_NAMES", "=", "load_class_desc", "(", "data_dir", ")", "\n", "label_map", "=", "{", "i", ":", "v", "for", "i", ",", "v", "in", "enumerate", "(", "CLASS_NAMES", ".", "values", "(", ")", ")", "}", "\n", "return", "label_map", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.openimgs_helpers.get_labels": [[205, 213], ["enumerate", "targ.numpy", "pos_labels.append", "neg_labels.append"], "function", ["None"], ["", "def", "get_labels", "(", "targ", ",", "label_map", ")", ":", "\n", "    ", "pos_labels", ",", "neg_labels", "=", "[", "]", ",", "[", "]", "\n", "for", "ti", ",", "t", "in", "enumerate", "(", "targ", ".", "numpy", "(", ")", ")", ":", "\n", "        ", "if", "t", "==", "1", ":", "\n", "            ", "pos_labels", ".", "append", "(", "f\"+ {label_map[ti]}\"", ")", "\n", "", "elif", "t", "==", "-", "1", ":", "\n", "            ", "neg_labels", ".", "append", "(", "f\"- {label_map[ti]}\"", ")", "\n", "", "", "return", "\", \"", ".", "join", "(", "pos_labels", ")", "+", "\" | \"", "+", "\", \"", ".", "join", "(", "neg_labels", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.Node.__init__": [[10, 24], ["set"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "wnid", ",", "parent_wnid", "=", "None", ",", "name", "=", "\"\"", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            wnid (str) : WordNet ID for synset represented by node\n            parent_wnid (str) : WordNet ID for synset of node's parent\n            name (str) : word/human-interpretable description of synset \n        \"\"\"", "\n", "\n", "self", ".", "wnid", "=", "wnid", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "class_num", "=", "-", "1", "\n", "self", ".", "parent_wnid", "=", "parent_wnid", "\n", "self", ".", "descendant_count_in", "=", "0", "\n", "self", ".", "descendants_all", "=", "set", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.Node.add_child": [[25, 33], ["None"], "methods", ["None"], ["", "def", "add_child", "(", "self", ",", "child", ")", ":", "\n", "        ", "\"\"\"\n        Add child to given node.\n\n        Args:\n            child (Node) : Node object for child\n        \"\"\"", "\n", "child", ".", "parent_wnid", "=", "self", ".", "wnid", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.Node.__str__": [[34, 36], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "f'Name: ({self.name}), ImageNet Class: ({self.class_num}), Descendants: ({self.descendant_count_in})'", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.Node.__repr__": [[37, 39], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "f'Name: ({self.name}), ImageNet Class: ({self.class_num}), Descendants: ({self.descendant_count_in})'", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.__init__": [[44, 92], ["imagenet_helpers.ImageNetHierarchy.load_imagenet_info", "all", "sorted", "open", "f.readlines", "imagenet_helpers.ImageNetHierarchy.tree.pop", "sorted", "os.path.join", "line.strip().split", "imagenet_helpers.ImageNetHierarchy.get_node", "imagenet_helpers.ImageNetHierarchy.get_node", "imagenet_helpers.ImageNetHierarchy.add_child", "imagenet_helpers.ImageNetHierarchy.tree[].descendants_all.update", "imagenet_helpers.ImageNetHierarchy.tree[].descendants_all.add", "imagenet_helpers.ImageNetHierarchy.tree.values", "line.strip", "len", "imagenet_helpers.ImageNetHierarchy.tree.items"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.load_imagenet_info", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_node", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_node", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.Node.add_child", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.update"], ["def", "__init__", "(", "self", ",", "ds_path", ",", "ds_info_path", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            ds_path (str) : Path to ImageNet dataset\n            ds_info_path (str) : Path to supplementary files for the ImageNet dataset \n                                 ('wordnet.is_a.txt', 'words.txt' and 'imagenet_class_index.json')\n                                 which can be obtained from http://image-net.org/download-API.\n\n        \"\"\"", "\n", "self", ".", "tree", "=", "{", "}", "\n", "\n", "ret", "=", "self", ".", "load_imagenet_info", "(", "ds_path", ",", "ds_info_path", ")", "\n", "self", ".", "in_wnids", ",", "self", ".", "wnid_to_name", ",", "self", ".", "wnid_to_num", ",", "self", ".", "num_to_name", "=", "ret", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "ds_info_path", ",", "'wordnet.is_a.txt'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "                ", "parent_wnid", ",", "child_wnid", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", "' '", ")", "\n", "parentNode", "=", "self", ".", "get_node", "(", "parent_wnid", ")", "\n", "childNode", "=", "self", ".", "get_node", "(", "child_wnid", ")", "\n", "parentNode", ".", "add_child", "(", "childNode", ")", "\n", "\n", "", "", "for", "wnid", "in", "self", ".", "in_wnids", ":", "\n", "            ", "self", ".", "tree", "[", "wnid", "]", ".", "descendant_count_in", "=", "0", "\n", "self", ".", "tree", "[", "wnid", "]", ".", "class_num", "=", "self", ".", "wnid_to_num", "[", "wnid", "]", "\n", "\n", "", "for", "wnid", "in", "self", ".", "in_wnids", ":", "\n", "            ", "node", "=", "self", ".", "tree", "[", "wnid", "]", "\n", "while", "node", ".", "parent_wnid", "is", "not", "None", ":", "\n", "                ", "self", ".", "tree", "[", "node", ".", "parent_wnid", "]", ".", "descendant_count_in", "+=", "1", "\n", "self", ".", "tree", "[", "node", ".", "parent_wnid", "]", ".", "descendants_all", ".", "update", "(", "node", ".", "descendants_all", ")", "\n", "self", ".", "tree", "[", "node", ".", "parent_wnid", "]", ".", "descendants_all", ".", "add", "(", "node", ".", "wnid", ")", "\n", "node", "=", "self", ".", "tree", "[", "node", ".", "parent_wnid", "]", "\n", "\n", "", "", "del_nodes", "=", "[", "wnid", "for", "wnid", "in", "self", ".", "tree", "if", "(", "self", ".", "tree", "[", "wnid", "]", ".", "descendant_count_in", "==", "0", "and", "self", ".", "tree", "[", "wnid", "]", ".", "class_num", "==", "-", "1", ")", "]", "\n", "for", "d", "in", "del_nodes", ":", "\n", "            ", "self", ".", "tree", ".", "pop", "(", "d", ",", "None", ")", "\n", "\n", "", "assert", "all", "(", "[", "k", ".", "descendant_count_in", ">", "0", "or", "k", ".", "class_num", "!=", "-", "1", "for", "k", "in", "self", ".", "tree", ".", "values", "(", ")", "]", ")", "\n", "\n", "self", ".", "wnid_sorted", "=", "sorted", "(", "sorted", "(", "[", "(", "k", ",", "v", ".", "descendant_count_in", ",", "len", "(", "v", ".", "descendants_all", ")", ")", "for", "k", ",", "v", "in", "self", ".", "tree", ".", "items", "(", ")", "\n", "]", ",", "\n", "key", "=", "lambda", "x", ":", "x", "[", "2", "]", ",", "\n", "reverse", "=", "True", "\n", ")", ",", "\n", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "\n", "reverse", "=", "True", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.load_imagenet_info": [[94, 120], ["os.listdir", "open", "os.path.join", "os.path.join", "l.strip", "open", "json.load", "open.readlines", "l.split", "l.split", "os.path.join", "int", "int", "json.load.items", "json.load.items"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "load_imagenet_info", "(", "ds_path", ",", "ds_info_path", ")", ":", "\n", "        ", "\"\"\"\n        Get information about mapping between ImageNet wnids/class numbers/class names.\n\n        Args:\n            ds_path (str) : Path to ImageNet dataset\n            ds_info_path (str) : Path to supplementary files for the ImageNet dataset \n                                 ('wordnet.is_a.txt', 'words.txt', 'imagenet_class_index.json')\n                                 which can be obtained from http://image-net.org/download-API.\n\n        \"\"\"", "\n", "files", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "ds_path", ",", "'train'", ")", ")", "\n", "in_wnids", "=", "[", "f", "for", "f", "in", "files", "if", "f", "[", "0", "]", "==", "'n'", "]", "\n", "\n", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "ds_info_path", ",", "'words.txt'", ")", ")", "\n", "wnid_to_name", "=", "[", "l", ".", "strip", "(", ")", "for", "l", "in", "f", ".", "readlines", "(", ")", "]", "\n", "wnid_to_name", "=", "{", "l", ".", "split", "(", "'\\t'", ")", "[", "0", "]", ":", "l", ".", "split", "(", "'\\t'", ")", "[", "1", "]", "for", "l", "in", "wnid_to_name", "}", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "ds_info_path", ",", "'imagenet_class_index.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "base_map", "=", "json", ".", "load", "(", "f", ")", "\n", "wnid_to_num", "=", "{", "v", "[", "0", "]", ":", "int", "(", "k", ")", "for", "k", ",", "v", "in", "base_map", ".", "items", "(", ")", "}", "\n", "num_to_name", "=", "{", "int", "(", "k", ")", ":", "v", "[", "1", "]", "for", "k", ",", "v", "in", "base_map", ".", "items", "(", ")", "}", "\n", "\n", "", "return", "in_wnids", ",", "wnid_to_name", ",", "wnid_to_num", ",", "num_to_name", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_node": [[121, 134], ["imagenet_helpers.Node"], "methods", ["None"], ["", "def", "get_node", "(", "self", ",", "wnid", ")", ":", "\n", "        ", "\"\"\"\n        Add node to tree.\n\n        Args:\n            wnid (str) : WordNet ID for synset represented by node\n\n        Returns:\n            A node object representing the specified wnid.\n        \"\"\"", "\n", "if", "wnid", "not", "in", "self", ".", "tree", ":", "\n", "            ", "self", ".", "tree", "[", "wnid", "]", "=", "Node", "(", "wnid", ",", "name", "=", "self", ".", "wnid_to_name", "[", "wnid", "]", ")", "\n", "", "return", "self", ".", "tree", "[", "wnid", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.is_ancestor": [[136, 148], ["None"], "methods", ["None"], ["", "def", "is_ancestor", "(", "self", ",", "ancestor_wnid", ",", "child_wnid", ")", ":", "\n", "        ", "\"\"\"\n        Check if a node is an ancestor of another.\n\n        Args:\n            ancestor_wnid (str) : WordNet ID for synset represented by ancestor node\n            child_wnid (str) : WordNet ID for synset represented by child node\n\n        Returns:\n            A boolean variable indicating whether or not the node is an ancestor\n        \"\"\"", "\n", "return", "(", "child_wnid", "in", "self", ".", "tree", "[", "ancestor_wnid", "]", ".", "descendants_all", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_descendants": [[150, 168], ["set", "set"], "methods", ["None"], ["", "def", "get_descendants", "(", "self", ",", "node_wnid", ",", "in_imagenet", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Get all descendants of a given node.\n\n        Args:\n            node_wnid (str) : WordNet ID for synset for node\n            in_imagenet (bool) : If True, only considers descendants among \n                                ImageNet synsets, else considers all possible\n                                descendants in the WordNet hierarchy\n\n        Returns:\n            A set of wnids corresponding to all the descendants\n        \"\"\"", "\n", "if", "in_imagenet", ":", "\n", "            ", "return", "set", "(", "[", "self", ".", "wnid_to_num", "[", "ww", "]", "for", "ww", "in", "self", ".", "tree", "[", "node_wnid", "]", ".", "descendants_all", "\n", "if", "ww", "in", "set", "(", "self", ".", "in_wnids", ")", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "tree", "[", "node_wnid", "]", ".", "descendants_all", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_superclasses": [[169, 220], ["imagenet_helpers.ImageNetHierarchy.get_subclasses", "any", "len", "imagenet_helpers.ImageNetHierarchy.is_ancestor", "superclass_info.append", "enumerate", "range", "imagenet_helpers.ImageNetHierarchy.is_ancestor", "imagenet_helpers.ImageNetHierarchy.is_ancestor", "len", "len", "superclass_info.pop", "itertools.product"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_subclasses", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.is_ancestor", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.is_ancestor", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.is_ancestor"], ["", "", "def", "get_superclasses", "(", "self", ",", "n_superclasses", ",", "\n", "ancestor_wnid", "=", "None", ",", "superclass_lowest", "=", "None", ",", "\n", "balanced", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Get superclasses by grouping together classes from the ImageNet dataset.\n\n        Args:\n            n_superclasses (int) : Number of superclasses desired\n            ancestor_wnid (str) : (optional) WordNet ID that can be used to specify\n                                common ancestor for the selected superclasses\n            superclass_lowest (set of str) : (optional) Set of WordNet IDs of nodes\n                                that shouldn't be further sub-classes\n            balanced (bool) : If True, all the superclasses will have the same number\n                            of ImageNet subclasses\n\n        Returns:\n            superclass_wnid (list): List of WordNet IDs of superclasses\n            class_ranges (list of sets): List of ImageNet subclasses per superclass\n            label_map (dict): Mapping from class number to human-interpretable description\n                            for each superclass\n        \"\"\"", "\n", "\n", "assert", "superclass_lowest", "is", "None", "or", "not", "any", "(", "[", "self", ".", "is_ancestor", "(", "s1", ",", "s2", ")", "for", "s1", ",", "s2", "in", "product", "(", "superclass_lowest", ",", "superclass_lowest", ")", "]", ")", "\n", "\n", "superclass_info", "=", "[", "]", "\n", "for", "(", "wnid", ",", "ndesc_in", ",", "ndesc_all", ")", "in", "self", ".", "wnid_sorted", ":", "\n", "\n", "            ", "if", "len", "(", "superclass_info", ")", "==", "n_superclasses", ":", "\n", "                ", "break", "\n", "\n", "", "if", "ancestor_wnid", "is", "None", "or", "self", ".", "is_ancestor", "(", "ancestor_wnid", ",", "wnid", ")", ":", "\n", "                ", "keep_wnid", "=", "[", "True", "]", "*", "(", "len", "(", "superclass_info", ")", "+", "1", ")", "\n", "superclass_info", ".", "append", "(", "(", "wnid", ",", "ndesc_in", ")", ")", "\n", "\n", "for", "ii", ",", "(", "w", ",", "d", ")", "in", "enumerate", "(", "superclass_info", ")", ":", "\n", "                    ", "if", "self", ".", "is_ancestor", "(", "w", ",", "wnid", ")", ":", "\n", "                        ", "if", "superclass_lowest", "and", "w", "in", "superclass_lowest", ":", "\n", "                            ", "keep_wnid", "[", "-", "1", "]", "=", "False", "\n", "", "else", ":", "\n", "                            ", "keep_wnid", "[", "ii", "]", "=", "False", "\n", "\n", "", "", "", "for", "ii", "in", "range", "(", "len", "(", "superclass_info", ")", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "                    ", "if", "not", "keep_wnid", "[", "ii", "]", ":", "\n", "                        ", "superclass_info", ".", "pop", "(", "ii", ")", "\n", "\n", "", "", "", "", "superclass_wnid", "=", "[", "w", "for", "w", ",", "_", "in", "superclass_info", "]", "\n", "class_ranges", ",", "label_map", "=", "self", ".", "get_subclasses", "(", "superclass_wnid", ",", "\n", "balanced", "=", "balanced", ")", "\n", "\n", "return", "superclass_wnid", ",", "class_ranges", ",", "label_map", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_subclasses": [[222, 251], ["min", "enumerate", "range", "imagenet_helpers.ImageNetHierarchy.get_descendants", "class_ranges.append", "len", "range", "set", "len", "len", "len", "class_ranges[].intersection", "enumerate", "sorted", "list"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.ImageNetHierarchy.get_descendants"], ["", "def", "get_subclasses", "(", "self", ",", "superclass_wnid", ",", "balanced", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        Get ImageNet subclasses for a given set of superclasses from the WordNet \n        hierarchy. \n\n        Args:\n            superclass_wnid (list): List of WordNet IDs of superclasses\n            balanced (bool) : If True, all the superclasses will have the same number\n                            of ImageNet subclasses\n\n        Returns:\n            class_ranges (list of sets): List of ImageNet subclasses per superclass\n            label_map (dict): Mapping from class number to human-interpretable description\n                            for each superclass\n        \"\"\"", "\n", "ndesc_min", "=", "min", "(", "[", "self", ".", "tree", "[", "w", "]", ".", "descendant_count_in", "for", "w", "in", "superclass_wnid", "]", ")", "\n", "class_ranges", ",", "label_map", "=", "[", "]", ",", "{", "}", "\n", "for", "ii", ",", "w", "in", "enumerate", "(", "superclass_wnid", ")", ":", "\n", "            ", "descendants", "=", "self", ".", "get_descendants", "(", "w", ",", "in_imagenet", "=", "True", ")", "\n", "if", "balanced", "and", "len", "(", "descendants", ")", ">", "ndesc_min", ":", "\n", "                ", "descendants", "=", "set", "(", "[", "dd", "for", "ii", ",", "dd", "in", "enumerate", "(", "sorted", "(", "list", "(", "descendants", ")", ")", ")", "if", "ii", "<", "ndesc_min", "]", ")", "\n", "", "class_ranges", ".", "append", "(", "descendants", ")", "\n", "label_map", "[", "ii", "]", "=", "self", ".", "tree", "[", "w", "]", ".", "name", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "class_ranges", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "class_ranges", ")", ")", ":", "\n", "                ", "assert", "(", "len", "(", "class_ranges", "[", "i", "]", ".", "intersection", "(", "class_ranges", "[", "j", "]", ")", ")", "==", "0", ")", "\n", "\n", "", "", "return", "class_ranges", ",", "label_map", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.imagenet_helpers.common_superclass_wnid": [[252, 355], ["ValueError"], "function", ["None"], ["", "", "def", "common_superclass_wnid", "(", "group_name", ")", ":", "\n", "    ", "\"\"\"\n        Get WordNet IDs of common superclasses. \n\n        Args:\n            group_name (str): Name of group\n\n        Returns:\n            superclass_wnid (list): List of WordNet IDs of superclasses\n        \"\"\"", "\n", "common_groups", "=", "{", "\n", "\n", "# ancestor_wnid = 'n00004258'", "\n", "'living_9'", ":", "[", "'n02084071'", ",", "#dog, domestic dog, Canis familiaris", "\n", "'n01503061'", ",", "# bird", "\n", "'n01767661'", ",", "# arthropod", "\n", "'n01661091'", ",", "# reptile, reptilian", "\n", "'n02469914'", ",", "# primate", "\n", "'n02512053'", ",", "# fish", "\n", "'n02120997'", ",", "# feline, felid", "\n", "'n02401031'", ",", "# bovid", "\n", "'n01627424'", ",", "# amphibian", "\n", "]", ",", "\n", "\n", "'mixed_10'", ":", "[", "\n", "'n02084071'", ",", "#dog,", "\n", "'n01503061'", ",", "#bird ", "\n", "'n02159955'", ",", "#insect ", "\n", "'n02484322'", ",", "#monkey ", "\n", "'n02958343'", ",", "#car ", "\n", "'n02120997'", ",", "#feline ", "\n", "'n04490091'", ",", "#truck ", "\n", "'n13134947'", ",", "#fruit ", "\n", "'n12992868'", ",", "#fungus ", "\n", "'n02858304'", ",", "#boat ", "\n", "]", ",", "\n", "\n", "'mixed_13'", ":", "[", "'n02084071'", ",", "#dog,", "\n", "'n01503061'", ",", "#bird (52)", "\n", "'n02159955'", ",", "#insect (27)", "\n", "'n03405725'", ",", "#furniture (21)", "\n", "'n02512053'", ",", "#fish (16),", "\n", "'n02484322'", ",", "#monkey (13)", "\n", "'n02958343'", ",", "#car (10)", "\n", "'n02120997'", ",", "#feline (8),", "\n", "'n04490091'", ",", "#truck (7)", "\n", "'n13134947'", ",", "#fruit (7)", "\n", "'n12992868'", ",", "#fungus (7)", "\n", "'n02858304'", ",", "#boat (6)  ", "\n", "'n03082979'", ",", "#computer(6)", "\n", "]", ",", "\n", "\n", "# Dataset from Geirhos et al., 2018: arXiv:1811.12231", "\n", "'geirhos_16'", ":", "[", "'n02686568'", ",", "#aircraft (3)", "\n", "'n02131653'", ",", "#bear (3)", "\n", "'n02834778'", ",", "#bicycle (2)", "\n", "'n01503061'", ",", "#bird (52)", "\n", "'n02858304'", ",", "#boat (6)", "\n", "'n02876657'", ",", "#bottle (7)", "\n", "'n02958343'", ",", "#car (10)", "\n", "'n02121808'", ",", "#cat (5)", "\n", "'n03001627'", ",", "#char (4)", "\n", "'n03046257'", ",", "#clock (3)", "\n", "'n02084071'", ",", "#dog (116)", "\n", "'n02503517'", ",", "#elephant (2)", "\n", "'n03614532'", ",", "#keyboard (3)", "\n", "'n03623556'", ",", "#knife (2)", "\n", "'n03862676'", ",", "#oven (2)", "\n", "'n04490091'", ",", "#truck (7)", "\n", "]", ",", "\n", "'big_12'", ":", "[", "'n02084071'", ",", "#dog (100+)", "\n", "'n04341686'", ",", "#structure (55)", "\n", "'n01503061'", ",", "#bird (52)", "\n", "'n03051540'", ",", "#clothing (48)", "\n", "'n04576211'", ",", "#wheeled vehicle", "\n", "'n01661091'", ",", "#reptile, reptilian (36)", "\n", "'n02075296'", ",", "#carnivore", "\n", "'n02159955'", ",", "#insect (27)", "\n", "'n03800933'", ",", "#musical instrument (26)", "\n", "'n07555863'", ",", "#food (24)", "\n", "'n03405725'", ",", "#furniture (21)", "\n", "'n02469914'", ",", "#primate (20)", "\n", "]", ",", "\n", "'mid_12'", ":", "[", "'n02084071'", ",", "#dog (100+)", "\n", "'n01503061'", ",", "#bird (52)", "\n", "'n04576211'", ",", "#wheeled vehicle", "\n", "'n01661091'", ",", "#reptile, reptilian (36)", "\n", "'n02075296'", ",", "#carnivore", "\n", "'n02159955'", ",", "#insect (27)", "\n", "'n03800933'", ",", "#musical instrument (26)", "\n", "'n07555863'", ",", "#food (24)", "\n", "'n03419014'", ",", "#garment (24)", "\n", "'n03405725'", ",", "#furniture (21)", "\n", "'n02469914'", ",", "#primate (20)", "\n", "'n02512053'", ",", "#fish (16)", "\n", "]", "\n", "}", "\n", "\n", "if", "group_name", "in", "common_groups", ":", "\n", "        ", "superclass_wnid", "=", "common_groups", "[", "group_name", "]", "\n", "return", "superclass_wnid", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"Custom group does not exist\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.custom_modules.FakeReLU.forward": [[6, 9], ["input.clamp"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "clamp", "(", "min", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.custom_modules.FakeReLU.backward": [[10, 13], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "return", "grad_output", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.custom_modules.FakeReLUM.forward": [[15, 17], ["FakeReLU.apply"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "FakeReLU", ".", "apply", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.custom_modules.SequentialWithArgs.forward": [[19, 28], ["list", "len", "range", "custom_modules.SequentialWithArgs._modules.values"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "input", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "vs", "=", "list", "(", "self", ".", "_modules", ".", "values", "(", ")", ")", "\n", "l", "=", "len", "(", "vs", ")", "\n", "for", "i", "in", "range", "(", "l", ")", ":", "\n", "            ", "if", "i", "==", "l", "-", "1", ":", "\n", "                ", "input", "=", "vs", "[", "i", "]", "(", "input", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "                ", "input", "=", "vs", "[", "i", "]", "(", "input", ")", "\n", "", "", "return", "input", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.InputNormalize.__init__": [[90, 97], ["super().__init__", "helpers.InputNormalize.register_buffer", "helpers.InputNormalize.register_buffer"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "new_mean", ",", "new_std", ")", ":", "\n", "        ", "super", "(", "InputNormalize", ",", "self", ")", ".", "__init__", "(", ")", "\n", "new_std", "=", "new_std", "[", "...", ",", "None", ",", "None", "]", "\n", "new_mean", "=", "new_mean", "[", "...", ",", "None", ",", "None", "]", "\n", "\n", "self", ".", "register_buffer", "(", "\"new_mean\"", ",", "new_mean", ")", "\n", "self", ".", "register_buffer", "(", "\"new_std\"", ",", "new_std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.InputNormalize.forward": [[98, 102], ["torch.clamp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "ch", ".", "clamp", "(", "x", ",", "0", ",", "1", ")", "\n", "x_normalized", "=", "(", "x", "-", "self", ".", "new_mean", ")", "/", "self", ".", "new_std", "\n", "return", "x_normalized", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.DataPrefetcher.__init__": [[104, 111], ["torch.cuda.Stream"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "loader", ",", "stop_after", "=", "None", ")", ":", "\n", "        ", "self", ".", "loader", "=", "loader", "\n", "self", ".", "dataset", "=", "loader", ".", "dataset", "\n", "self", ".", "stream", "=", "ch", ".", "cuda", ".", "Stream", "(", ")", "\n", "self", ".", "stop_after", "=", "stop_after", "\n", "self", ".", "next_input", "=", "None", "\n", "self", ".", "next_target", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.DataPrefetcher.__len__": [[112, 114], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.DataPrefetcher.preload": [[115, 125], ["next", "torch.cuda.stream", "helpers.DataPrefetcher.next_input.cuda", "helpers.DataPrefetcher.next_target.cuda"], "methods", ["None"], ["", "def", "preload", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "self", ".", "next_input", ",", "self", ".", "next_target", "=", "next", "(", "self", ".", "loaditer", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "self", ".", "next_input", "=", "None", "\n", "self", ".", "next_target", "=", "None", "\n", "return", "\n", "", "with", "ch", ".", "cuda", ".", "stream", "(", "self", ".", "stream", ")", ":", "\n", "            ", "self", ".", "next_input", "=", "self", ".", "next_input", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "self", ".", "next_target", "=", "self", ".", "next_target", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.DataPrefetcher.__iter__": [[126, 139], ["iter", "helpers.DataPrefetcher.preload", "torch.cuda.current_stream().wait_stream", "helpers.DataPrefetcher.preload", "torch.cuda.current_stream", "type"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.DataPrefetcher.preload", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.DataPrefetcher.preload"], ["", "", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "count", "=", "0", "\n", "self", ".", "loaditer", "=", "iter", "(", "self", ".", "loader", ")", "\n", "self", ".", "preload", "(", ")", "\n", "while", "self", ".", "next_input", "is", "not", "None", ":", "\n", "            ", "ch", ".", "cuda", ".", "current_stream", "(", ")", ".", "wait_stream", "(", "self", ".", "stream", ")", "\n", "input", "=", "self", ".", "next_input", "\n", "target", "=", "self", ".", "next_target", "\n", "self", ".", "preload", "(", ")", "\n", "count", "+=", "1", "\n", "yield", "input", ",", "target", "\n", "if", "type", "(", "self", ".", "stop_after", ")", "is", "int", "and", "(", "count", ">", "self", ".", "stop_after", ")", ":", "\n", "                ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.__init__": [[142, 144], ["helpers.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.reset": [[145, 150], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.update": [[151, 156], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.has_attr": [[11, 19], ["getattr"], "function", ["None"], ["def", "has_attr", "(", "obj", ",", "k", ")", ":", "\n", "    ", "\"\"\"Checks both that obj.k exists and is not equal to None\"\"\"", "\n", "try", ":", "\n", "        ", "return", "(", "getattr", "(", "obj", ",", "k", ")", "is", "not", "None", ")", "\n", "", "except", "KeyError", "as", "e", ":", "\n", "        ", "return", "False", "\n", "", "except", "AttributeError", "as", "e", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.calc_est_grad": [[20, 37], ["len", "torch.no_grad", "x.repeat", "torch.randn_like", "ch.cat.view().norm().view", "torch.cat", "torch.cat", "func().view", "ch.cat.view().norm", "len", "func", "y.repeat", "func().view.view", "ch.cat.view", "ch.cat.view"], "function", ["None"], ["", "", "def", "calc_est_grad", "(", "func", ",", "x", ",", "y", ",", "rad", ",", "num_samples", ")", ":", "\n", "    ", "B", ",", "*", "_", "=", "x", ".", "shape", "\n", "Q", "=", "num_samples", "//", "2", "\n", "N", "=", "len", "(", "x", ".", "shape", ")", "-", "1", "\n", "with", "ch", ".", "no_grad", "(", ")", ":", "\n", "# Q * B * C * H * W", "\n", "        ", "extender", "=", "[", "1", "]", "*", "N", "\n", "queries", "=", "x", ".", "repeat", "(", "Q", ",", "*", "extender", ")", "\n", "noise", "=", "ch", ".", "randn_like", "(", "queries", ")", "\n", "norm", "=", "noise", ".", "view", "(", "B", "*", "Q", ",", "-", "1", ")", ".", "norm", "(", "dim", "=", "-", "1", ")", ".", "view", "(", "B", "*", "Q", ",", "*", "extender", ")", "\n", "noise", "=", "noise", "/", "norm", "\n", "noise", "=", "ch", ".", "cat", "(", "[", "-", "noise", ",", "noise", "]", ")", "\n", "queries", "=", "ch", ".", "cat", "(", "[", "queries", ",", "queries", "]", ")", "\n", "y_shape", "=", "[", "1", "]", "*", "(", "len", "(", "y", ".", "shape", ")", "-", "1", ")", "\n", "l", "=", "func", "(", "queries", "+", "rad", "*", "noise", ",", "y", ".", "repeat", "(", "2", "*", "Q", ",", "*", "y_shape", ")", ")", ".", "view", "(", "-", "1", ",", "*", "extender", ")", "\n", "grad", "=", "(", "l", ".", "view", "(", "2", "*", "Q", ",", "B", ",", "*", "extender", ")", "*", "noise", ".", "view", "(", "2", "*", "Q", ",", "B", ",", "*", "noise", ".", "shape", "[", "1", ":", "]", ")", ")", ".", "mean", "(", "dim", "=", "0", ")", "\n", "", "return", "grad", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.ckpt_at_epoch": [[38, 40], ["None"], "function", ["None"], ["", "def", "ckpt_at_epoch", "(", "num", ")", ":", "\n", "    ", "return", "'%s_%s'", "%", "(", "num", ",", "constants", ".", "CKPT_NAME", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.accuracy": [[41, 84], ["torch.no_grad", "max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "len", "target.view().expand_as", "correct[].view().float", "correct[].view().float.sum", "res.append", "res_exact.append", "correct_k.sum.mul_", "torch.round().eq().float().mean", "target.view", "correct[].view", "torch.round().eq().float", "torch.round().eq", "torch.round", "torch.round", "torch.sigmoid"], "function", ["None"], ["", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ",", "exact", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n        Computes the top-k accuracy for the specified values of k\n\n        Args:\n            output (ch.tensor) : model output (N, classes) or (N, attributes) \n                for sigmoid/multitask binary classification\n            target (ch.tensor) : correct labels (N,) [multiclass] or (N,\n                attributes) [multitask binary]\n            topk (tuple) : for each item \"k\" in this tuple, this method\n                will return the top-k accuracy\n            exact (bool) : whether to return aggregate statistics (if\n                False) or per-example correctness (if True)\n\n        Returns:\n            A list of top-k accuracies.\n    \"\"\"", "\n", "with", "ch", ".", "no_grad", "(", ")", ":", "\n", "# Binary Classification", "\n", "        ", "if", "len", "(", "target", ".", "shape", ")", ">", "1", ":", "\n", "            ", "assert", "output", ".", "shape", "==", "target", ".", "shape", ",", "\"Detected binary classification but output shape != target shape\"", "\n", "return", "[", "ch", ".", "round", "(", "ch", ".", "sigmoid", "(", "output", ")", ")", ".", "eq", "(", "ch", ".", "round", "(", "target", ")", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "]", ",", "[", "-", "1.0", "]", "\n", "\n", "", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "res_exact", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", "\n", "ck_sum", "=", "correct_k", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "ck_sum", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "res_exact", ".", "append", "(", "correct_k", ")", "\n", "\n", "", "if", "not", "exact", ":", "\n", "            ", "return", "res", "\n", "", "else", ":", "\n", "            ", "return", "res_exact", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.get_label_mapping": [[158, 171], ["helpers.restricted_label_mapping", "ValueError", "helpers.custom_label_mapping"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.restricted_label_mapping", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.custom_label_mapping"], ["", "", "def", "get_label_mapping", "(", "dataset_name", ",", "ranges", ")", ":", "\n", "    ", "if", "dataset_name", "==", "'imagenet'", ":", "\n", "        ", "label_mapping", "=", "None", "\n", "", "elif", "dataset_name", "==", "'restricted_imagenet'", ":", "\n", "        ", "def", "label_mapping", "(", "classes", ",", "class_to_idx", ")", ":", "\n", "            ", "return", "restricted_label_mapping", "(", "classes", ",", "class_to_idx", ",", "ranges", "=", "ranges", ")", "\n", "", "", "elif", "dataset_name", "==", "'custom_imagenet'", ":", "\n", "        ", "def", "label_mapping", "(", "classes", ",", "class_to_idx", ")", ":", "\n", "            ", "return", "custom_label_mapping", "(", "classes", ",", "class_to_idx", ",", "ranges", "=", "ranges", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'No such dataset_name %s'", "%", "dataset_name", ")", "\n", "\n", "", "return", "label_mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.restricted_label_mapping": [[172, 187], ["class_to_idx.items", "list().sort", "set", "enumerate", "range", "list", "mapping.keys"], "function", ["None"], ["", "def", "restricted_label_mapping", "(", "classes", ",", "class_to_idx", ",", "ranges", ")", ":", "\n", "    ", "range_sets", "=", "[", "\n", "set", "(", "range", "(", "s", ",", "e", "+", "1", ")", ")", "for", "s", ",", "e", "in", "ranges", "\n", "]", "\n", "\n", "# add wildcard", "\n", "# range_sets.append(set(range(0, 1002)))", "\n", "mapping", "=", "{", "}", "\n", "for", "class_name", ",", "idx", "in", "class_to_idx", ".", "items", "(", ")", ":", "\n", "        ", "for", "new_idx", ",", "range_set", "in", "enumerate", "(", "range_sets", ")", ":", "\n", "            ", "if", "idx", "in", "range_set", ":", "\n", "                ", "mapping", "[", "class_name", "]", "=", "new_idx", "\n", "# assert class_name in mapping", "\n", "", "", "", "filtered_classes", "=", "list", "(", "mapping", ".", "keys", "(", ")", ")", ".", "sort", "(", ")", "\n", "return", "filtered_classes", ",", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.custom_label_mapping": [[188, 198], ["class_to_idx.items", "list().sort", "enumerate", "list", "mapping.keys"], "function", ["None"], ["", "def", "custom_label_mapping", "(", "classes", ",", "class_to_idx", ",", "ranges", ")", ":", "\n", "\n", "    ", "mapping", "=", "{", "}", "\n", "for", "class_name", ",", "idx", "in", "class_to_idx", ".", "items", "(", ")", ":", "\n", "        ", "for", "new_idx", ",", "range_set", "in", "enumerate", "(", "ranges", ")", ":", "\n", "            ", "if", "idx", "in", "range_set", ":", "\n", "                ", "mapping", "[", "class_name", "]", "=", "new_idx", "\n", "\n", "", "", "", "filtered_classes", "=", "list", "(", "mapping", ".", "keys", "(", ")", ")", ".", "sort", "(", ")", "\n", "return", "filtered_classes", ",", "mapping", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.PerEpochLoader.__init__": [[107, 113], ["loaders.PerEpochLoader.compute_loader", "iter"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.PerEpochLoader.compute_loader"], ["def", "__init__", "(", "self", ",", "loader", ",", "func", ",", "do_tqdm", "=", "True", ")", ":", "\n", "        ", "self", ".", "orig_loader", "=", "loader", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "do_tqdm", "=", "do_tqdm", "\n", "self", ".", "data_loader", "=", "self", ".", "compute_loader", "(", ")", "\n", "self", ".", "loader", "=", "iter", "(", "self", ".", "data_loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.PerEpochLoader.compute_loader": [[114, 118], ["loaders.TransformedLoader"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.TransformedLoader"], ["", "def", "compute_loader", "(", "self", ")", ":", "\n", "        ", "return", "TransformedLoader", "(", "self", ".", "orig_loader", ",", "self", ".", "func", ",", "None", ",", "\n", "self", ".", "orig_loader", ".", "num_workers", ",", "self", ".", "orig_loader", ".", "batch_size", ",", "\n", "do_tqdm", "=", "self", ".", "do_tqdm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.PerEpochLoader.__len__": [[119, 121], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "orig_loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.PerEpochLoader.__getattr__": [[122, 124], ["getattr"], "methods", ["None"], ["", "def", "__getattr__", "(", "self", ",", "attr", ")", ":", "\n", "        ", "return", "getattr", "(", "self", ".", "data_loader", ",", "attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.PerEpochLoader.__iter__": [[125, 127], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.PerEpochLoader.__next__": [[128, 137], ["loaders.PerEpochLoader.func", "next", "loaders.PerEpochLoader.compute_loader", "iter"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.PerEpochLoader.compute_loader"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "next", "(", "self", ".", "loader", ")", "\n", "", "except", "StopIteration", "as", "e", ":", "\n", "            ", "self", ".", "data_loader", "=", "self", ".", "compute_loader", "(", ")", "\n", "self", ".", "loader", "=", "iter", "(", "self", ".", "data_loader", ")", "\n", "raise", "StopIteration", "\n", "\n", "", "return", "self", ".", "func", "(", "im", ",", "targ", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.LambdaLoader.__init__": [[156, 168], ["iter"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "loader", ",", "func", ")", ":", "\n", "        ", "'''\n        Args:\n            loader (PyTorch dataloader) : loader for dataset (*required*).\n            func (function) : fixed transformation to be applied to \n                every batch in real-time (*required*). It takes in \n                (images, labels) and returns (images, labels) of the \n                same shape.\n        '''", "\n", "self", ".", "data_loader", "=", "loader", "\n", "self", ".", "loader", "=", "iter", "(", "self", ".", "data_loader", ")", "\n", "self", ".", "func", "=", "func", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.LambdaLoader.__len__": [[169, 171], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data_loader", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.LambdaLoader.__iter__": [[172, 174], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.LambdaLoader.__getattr__": [[187, 189], ["getattr"], "methods", ["None"], ["", "def", "__getattr__", "(", "self", ",", "attr", ")", ":", "\n", "        ", "return", "getattr", "(", "self", ".", "data_loader", ",", "attr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.LambdaLoader.__next__": [[178, 186], ["loaders.LambdaLoader.func", "next", "iter"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "im", ",", "targ", "=", "next", "(", "self", ".", "loader", ")", "\n", "", "except", "StopIteration", "as", "e", ":", "\n", "            ", "self", ".", "loader", "=", "iter", "(", "self", ".", "data_loader", ")", "\n", "raise", "StopIteration", "\n", "\n", "", "return", "self", ".", "func", "(", "im", ",", "targ", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.make_loaders": [[23, 99], ["print", "torch.utils.data.DataLoader", "os.path.join", "os.path.join", "tools.folder.ImageFolder", "custom_class", "any", "len", "torch.utils.data.Subset", "torch.utils.data.DataLoader", "os.path.exists", "os.path.join", "os.path.exists", "ValueError", "tools.folder.ImageFolder", "custom_class", "hasattr", "vals.values", "getattr", "numpy.random.RandomState", "np.random.RandomState.choice", "list", "numpy.arange", "numpy.arange", "range"], "function", ["None"], ["def", "make_loaders", "(", "workers", ",", "batch_size", ",", "transforms", ",", "data_path", ",", "data_aug", "=", "True", ",", "\n", "custom_class", "=", "None", ",", "dataset", "=", "\"\"", ",", "label_mapping", "=", "None", ",", "subset", "=", "None", ",", "\n", "subset_type", "=", "'rand'", ",", "subset_start", "=", "0", ",", "val_batch_size", "=", "None", ",", "\n", "only_val", "=", "False", ",", "shuffle_train", "=", "True", ",", "shuffle_val", "=", "True", ",", "seed", "=", "1", ",", "\n", "custom_class_args", "=", "None", ")", ":", "\n", "    ", "'''\n    **INTERNAL FUNCTION**\n\n    This is an internal function that makes a loader for any dataset. You\n    probably want to call dataset.make_loaders for a specific dataset,\n    which only requires workers and batch_size. For example:\n\n    >>> cifar_dataset = CIFAR10('/path/to/cifar')\n    >>> train_loader, val_loader = cifar_dataset.make_loaders(workers=10, batch_size=128)\n    >>> # train_loader and val_loader are just PyTorch dataloaders\n    '''", "\n", "print", "(", "f\"==> Preparing dataset {dataset}..\"", ")", "\n", "transform_train", ",", "transform_test", "=", "transforms", "\n", "if", "not", "data_aug", ":", "\n", "        ", "transform_train", "=", "transform_test", "\n", "\n", "", "if", "not", "val_batch_size", ":", "\n", "        ", "val_batch_size", "=", "batch_size", "\n", "\n", "", "if", "not", "custom_class", ":", "\n", "        ", "train_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'train'", ")", "\n", "test_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'val'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "test_path", ")", ":", "\n", "            ", "test_path", "=", "os", ".", "path", ".", "join", "(", "data_path", ",", "'test'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "test_path", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Test data must be stored in dataset/test or {0}\"", ".", "format", "(", "test_path", ")", ")", "\n", "\n", "", "if", "not", "only_val", ":", "\n", "            ", "train_set", "=", "folder", ".", "ImageFolder", "(", "root", "=", "train_path", ",", "transform", "=", "transform_train", ",", "\n", "label_mapping", "=", "label_mapping", ")", "\n", "", "test_set", "=", "folder", ".", "ImageFolder", "(", "root", "=", "test_path", ",", "transform", "=", "transform_test", ",", "\n", "label_mapping", "=", "label_mapping", ")", "\n", "", "else", ":", "\n", "        ", "if", "custom_class_args", "is", "None", ":", "custom_class_args", "=", "{", "}", "\n", "if", "not", "only_val", ":", "\n", "            ", "train_set", "=", "custom_class", "(", "root", "=", "data_path", ",", "train", "=", "True", ",", "download", "=", "True", ",", "\n", "transform", "=", "transform_train", ",", "**", "custom_class_args", ")", "\n", "", "test_set", "=", "custom_class", "(", "root", "=", "data_path", ",", "train", "=", "False", ",", "download", "=", "True", ",", "\n", "transform", "=", "transform_test", ",", "**", "custom_class_args", ")", "\n", "\n", "", "if", "not", "only_val", ":", "\n", "        ", "attrs", "=", "[", "\"samples\"", ",", "\"train_data\"", ",", "\"data\"", "]", "\n", "vals", "=", "{", "attr", ":", "hasattr", "(", "train_set", ",", "attr", ")", "for", "attr", "in", "attrs", "}", "\n", "assert", "any", "(", "vals", ".", "values", "(", ")", ")", ",", "f\"dataset must expose one of {attrs}\"", "\n", "train_sample_count", "=", "len", "(", "getattr", "(", "train_set", ",", "[", "k", "for", "k", "in", "vals", "if", "vals", "[", "k", "]", "]", "[", "0", "]", ")", ")", "\n", "\n", "", "if", "(", "not", "only_val", ")", "and", "(", "subset", "is", "not", "None", ")", "and", "(", "subset", "<=", "train_sample_count", ")", ":", "\n", "        ", "assert", "not", "only_val", "\n", "if", "subset_type", "==", "'rand'", ":", "\n", "            ", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "subset", "=", "rng", ".", "choice", "(", "list", "(", "range", "(", "train_sample_count", ")", ")", ",", "size", "=", "subset", "+", "subset_start", ",", "replace", "=", "False", ")", "\n", "subset", "=", "subset", "[", "subset_start", ":", "]", "\n", "", "elif", "subset_type", "==", "'first'", ":", "\n", "            ", "subset", "=", "np", ".", "arange", "(", "subset_start", ",", "subset_start", "+", "subset", ")", "\n", "", "else", ":", "\n", "            ", "subset", "=", "np", ".", "arange", "(", "train_sample_count", "-", "subset", ",", "train_sample_count", ")", "\n", "\n", "", "train_set", "=", "Subset", "(", "train_set", ",", "subset", ")", "\n", "\n", "", "if", "not", "only_val", ":", "\n", "        ", "train_loader", "=", "DataLoader", "(", "train_set", ",", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "shuffle_train", ",", "num_workers", "=", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "", "test_loader", "=", "DataLoader", "(", "test_set", ",", "batch_size", "=", "val_batch_size", ",", "\n", "shuffle", "=", "shuffle_val", ",", "num_workers", "=", "workers", ",", "pin_memory", "=", "True", ")", "\n", "\n", "if", "only_val", ":", "\n", "        ", "return", "None", ",", "test_loader", "\n", "\n", "", "return", "train_loader", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.loaders.TransformedLoader": [[190, 256], ["len", "enumerate", "tools.folder.TensorDataset", "torch.utils.data.DataLoader", "tqdm", "func", "torch.cat", "torch.cat", "new_ims.append", "new_targs.append", "new_ims.append", "new_targs.append", "im.cpu", "targ.cpu", "float", "new_im.cpu", "new_targ.cpu", "float"], "function", ["None"], ["", "", "def", "TransformedLoader", "(", "loader", ",", "func", ",", "transforms", ",", "workers", "=", "None", ",", "\n", "batch_size", "=", "None", ",", "do_tqdm", "=", "False", ",", "augment", "=", "False", ",", "fraction", "=", "1.0", ",", "\n", "shuffle", "=", "True", ")", ":", "\n", "    ", "'''\n    This is a function that allows one to apply any given (fixed) \n    transformation to the output from the loader *once*. \n\n    For instance, you could use for applications such as assigning\n    random labels to all the images (before training).\n\n    The TransformedLoader also supports the application of addiotional\n    transformations (such as standard data augmentation) after the fixed\n    function.\n\n    For more information see :ref:`our detailed walkthrough <using-custom-loaders>`\n\n    Args:\n        loader (PyTorch dataloader) : loader for dataset\n        func (function) : fixed transformation to be applied once. It takes \n        in (images, labels) and returns (images, labels) with the same shape \n        in every dimension except for the first, i.e., batch dimension \n        (which can be any length).\n        transforms (torchvision.transforms) : transforms to apply \n            to the training images from the dataset (after func) (*required*).\n        workers (int) : number of workers for data fetching (*required*).\n        batch_size (int) : batch size for the data loaders (*required*).\n        do_tqdm (bool) : if True, show a tqdm progress bar for the attack.\n        augment (bool) : if True,  the output loader contains both the original\n            (untransformed), and new transformed image-label pairs.\n        fraction (float): fraction of image-label pairs in the output loader \n            which are transformed. The remainder is just original image-label \n            pairs from loader. \n        shuffle (bool) : whether or not the resulting loader should shuffle every \n            epoch (defaults to True)\n\n    Returns:\n        A loader and validation loader according to the\n        parameters given. These are standard PyTorch data loaders, and\n        thus can just be used via:\n\n        >>> output_loader = ds.make_loaders(loader,\n                                            assign_random_labels,\n                                            workers=8, \n                                            batch_size=128) \n        >>> for im, lab in output_loader:\n        >>>     # Do stuff...\n    '''", "\n", "\n", "new_ims", "=", "[", "]", "\n", "new_targs", "=", "[", "]", "\n", "total_len", "=", "len", "(", "loader", ")", "\n", "enum_loader", "=", "enumerate", "(", "loader", ")", "\n", "\n", "it", "=", "enum_loader", "if", "not", "do_tqdm", "else", "tqdm", "(", "enum_loader", ",", "total", "=", "total_len", ")", "\n", "for", "i", ",", "(", "im", ",", "targ", ")", "in", "it", ":", "\n", "        ", "new_im", ",", "new_targ", "=", "func", "(", "im", ",", "targ", ")", "\n", "if", "augment", "or", "(", "i", "/", "float", "(", "total_len", ")", ">", "fraction", ")", ":", "\n", "              ", "new_ims", ".", "append", "(", "im", ".", "cpu", "(", ")", ")", "\n", "new_targs", ".", "append", "(", "targ", ".", "cpu", "(", ")", ")", "\n", "", "if", "i", "/", "float", "(", "total_len", ")", "<=", "fraction", ":", "\n", "            ", "new_ims", ".", "append", "(", "new_im", ".", "cpu", "(", ")", ")", "\n", "new_targs", ".", "append", "(", "new_targ", ".", "cpu", "(", ")", ")", "\n", "\n", "", "", "dataset", "=", "folder", ".", "TensorDataset", "(", "ch", ".", "cat", "(", "new_ims", ",", "0", ")", ",", "ch", ".", "cat", "(", "new_targs", ",", "0", ")", ",", "transform", "=", "transforms", ")", "\n", "return", "ch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "num_workers", "=", "workers", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.defaults.add_args_to_parser": [[140, 164], ["parser.add_argument", "type", "type"], "function", ["None"], ["def", "add_args_to_parser", "(", "arg_list", ",", "parser", ")", ":", "\n", "    ", "\"\"\"\n    Adds arguments from one of the argument lists above to a passed-in\n    arparse.ArgumentParser object. Formats helpstrings according to the\n    defaults, but does NOT set the actual argparse defaults (*important*).\n\n    Args:\n        arg_list (list) : A list of the same format as the lists above, i.e.\n            containing entries of the form [NAME, TYPE/CHOICES, HELP, DEFAULT]\n        parser (argparse.ArgumentParser) : An ArgumentParser object to which the\n            arguments will be added\n\n    Returns:\n        The original parser, now with the arguments added in.\n    \"\"\"", "\n", "for", "arg_name", ",", "arg_type", ",", "arg_help", ",", "arg_default", "in", "arg_list", ":", "\n", "        ", "has_choices", "=", "(", "type", "(", "arg_type", ")", "==", "list", ")", "\n", "kwargs", "=", "{", "\n", "'type'", ":", "type", "(", "arg_type", "[", "0", "]", ")", "if", "has_choices", "else", "arg_type", ",", "\n", "'help'", ":", "f\"{arg_help} (default: {arg_default})\"", "\n", "}", "\n", "if", "has_choices", ":", "kwargs", "[", "'choices'", "]", "=", "arg_type", "\n", "parser", ".", "add_argument", "(", "f'--{arg_name}'", ",", "**", "kwargs", ")", "\n", "", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.defaults.check_and_fill_args": [[165, 190], ["arg_name.replace", "tools.helpers.has_attr", "ValueError", "setattr", "setattr"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.has_attr"], ["", "def", "check_and_fill_args", "(", "args", ",", "arg_list", ",", "ds_class", ")", ":", "\n", "    ", "\"\"\"\n    Fills in defaults based on an arguments list (e.g., TRAINING_ARGS) and a\n    dataset class (e.g., datasets.CIFAR).\n\n    Args:\n        args (object) : Any object subclass exposing :samp:`setattr` and\n            :samp:`getattr` (e.g. cox.utils.Parameters)\n        arg_list (list) : A list of the same format as the lists above, i.e.\n            containing entries of the form [NAME, TYPE/CHOICES, HELP, DEFAULT]\n        ds_class (type) : A dataset class name (i.e. a\n            :class:`robustness.datasets.DataSet` subclass name)\n\n    Returns:\n        args (object): The :samp:`args` object with all the defaults filled in according to :samp:`arg_list` defaults.\n    \"\"\"", "\n", "for", "arg_name", ",", "_", ",", "_", ",", "arg_default", "in", "arg_list", ":", "\n", "        ", "name", "=", "arg_name", ".", "replace", "(", "\"-\"", ",", "\"_\"", ")", "\n", "if", "helpers", ".", "has_attr", "(", "args", ",", "name", ")", ":", "continue", "\n", "if", "arg_default", "==", "REQ", ":", "raise", "ValueError", "(", "f\"{arg_name} required\"", ")", "\n", "elif", "arg_default", "==", "BY_DATASET", ":", "\n", "            ", "setattr", "(", "args", ",", "name", ",", "TRAINING_DEFAULTS", "[", "ds_class", "]", "[", "name", "]", ")", "\n", "", "elif", "arg_default", "is", "not", "None", ":", "\n", "            ", "setattr", "(", "args", ",", "name", ",", "arg_default", ")", "\n", "", "", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.main.main": [[32, 61], ["os.path.expandvars", "dataset.make_loaders", "helpers.DataPrefetcher", "helpers.DataPrefetcher", "make_and_restore_model", "print", "train_model", "dir", "eval_model", "bool"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.make_loaders", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.make_and_restore_model"], ["def", "main", "(", "args", ",", "store", "=", "None", ")", ":", "\n", "    ", "'''Given arguments from `setup_args` and a store from `setup_store`,\n    trains as a model. Check out the argparse object in this file for\n    argument options.\n    '''", "\n", "# MAKE DATASET AND LOADERS", "\n", "data_path", "=", "os", ".", "path", ".", "expandvars", "(", "args", ".", "data", ")", "\n", "dataset", "=", "DATASETS", "[", "args", ".", "dataset", "]", "(", "data_path", ")", "\n", "\n", "train_loader", ",", "val_loader", "=", "dataset", ".", "make_loaders", "(", "args", ".", "workers", ",", "\n", "args", ".", "batch_size", ",", "data_aug", "=", "bool", "(", "args", ".", "data_aug", ")", ")", "\n", "\n", "train_loader", "=", "helpers", ".", "DataPrefetcher", "(", "train_loader", ")", "\n", "val_loader", "=", "helpers", ".", "DataPrefetcher", "(", "val_loader", ")", "\n", "loaders", "=", "(", "train_loader", ",", "val_loader", ")", "\n", "\n", "# MAKE MODEL", "\n", "model", ",", "checkpoint", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "\n", "dataset", "=", "dataset", ",", "resume_path", "=", "args", ".", "resume", ")", "\n", "if", "'module'", "in", "dir", "(", "model", ")", ":", "model", "=", "model", ".", "module", "\n", "\n", "print", "(", "args", ")", "\n", "if", "args", ".", "eval_only", ":", "\n", "        ", "return", "eval_model", "(", "args", ",", "model", ",", "val_loader", ",", "store", "=", "store", ")", "\n", "\n", "", "if", "not", "args", ".", "resume_optimizer", ":", "checkpoint", "=", "None", "\n", "model", "=", "train_model", "(", "args", ",", "model", ",", "loaders", ",", "store", "=", "store", ",", "\n", "checkpoint", "=", "checkpoint", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.main.setup_args": [[62, 85], ["check_and_fill_args", "check_and_fill_args", "cox.utils.override_json", "cox.utils.override_json", "cox.utils.override_json", "check_and_fill_args", "check_and_fill_args"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.defaults.check_and_fill_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.defaults.check_and_fill_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.defaults.check_and_fill_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.defaults.check_and_fill_args"], ["", "def", "setup_args", "(", "args", ")", ":", "\n", "    ", "'''\n    Fill the args object with reasonable defaults from\n    :mod:`robustness.defaults`, and also perform a sanity check to make sure no\n    args are missing.\n    '''", "\n", "# override non-None values with optional config_path", "\n", "if", "args", ".", "config_path", ":", "\n", "        ", "args", "=", "cox", ".", "utils", ".", "override_json", "(", "args", ",", "args", ".", "config_path", ")", "\n", "\n", "", "ds_class", "=", "DATASETS", "[", "args", ".", "dataset", "]", "\n", "args", "=", "check_and_fill_args", "(", "args", ",", "defaults", ".", "CONFIG_ARGS", ",", "ds_class", ")", "\n", "\n", "if", "not", "args", ".", "eval_only", ":", "\n", "        ", "args", "=", "check_and_fill_args", "(", "args", ",", "defaults", ".", "TRAINING_ARGS", ",", "ds_class", ")", "\n", "\n", "", "if", "args", ".", "adv_train", "or", "args", ".", "adv_eval", ":", "\n", "        ", "args", "=", "check_and_fill_args", "(", "args", ",", "defaults", ".", "PGD_ARGS", ",", "ds_class", ")", "\n", "\n", "", "args", "=", "check_and_fill_args", "(", "args", ",", "defaults", ".", "MODEL_LOADER_ARGS", ",", "ds_class", ")", "\n", "if", "args", ".", "eval_only", ":", "assert", "args", ".", "resume", "is", "not", "None", ",", "\"Must provide a resume path if only evaluating\"", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.main.setup_store_with_metadata": [[86, 108], ["cox.store.Store", "cox.store.Store", "cox.store.Store", "cox.store.schema_from_dict", "cox.store.schema_from_dict", "cox.store.schema_from_dict", "cox.store.Store.add_table", "store[].append_row", "git.Repo", "os.path.dirname", "os.path.realpath"], "function", ["None"], ["", "def", "setup_store_with_metadata", "(", "args", ")", ":", "\n", "    ", "'''\n    Sets up a store for training according to the arguments object. See the\n    argparse object above for options.\n    '''", "\n", "# Add git commit to args", "\n", "try", ":", "\n", "        ", "repo", "=", "git", ".", "Repo", "(", "path", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "realpath", "(", "__file__", ")", ")", ",", "\n", "search_parent_directories", "=", "True", ")", "\n", "version", "=", "repo", ".", "head", ".", "object", ".", "hexsha", "\n", "", "except", "git", ".", "exc", ".", "InvalidGitRepositoryError", ":", "\n", "        ", "version", "=", "__version__", "\n", "", "args", ".", "version", "=", "version", "\n", "\n", "# Create the store", "\n", "store", "=", "cox", ".", "store", ".", "Store", "(", "args", ".", "out_dir", ",", "args", ".", "exp_name", ")", "\n", "args_dict", "=", "args", ".", "__dict__", "\n", "schema", "=", "cox", ".", "store", ".", "schema_from_dict", "(", "args_dict", ")", "\n", "store", ".", "add_table", "(", "'metadata'", ",", "schema", ")", "\n", "store", "[", "'metadata'", "]", ".", "append_row", "(", "args_dict", ")", "\n", "\n", "return", "store", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.FeatureExtractor.__init__": [[23, 36], ["super().__init__", "layer_func", "layer_func.register_forward_hook", "module.register_buffer"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "submod", ",", "layers", ")", ":", "\n", "# layers must be in order", "\n", "        ", "super", "(", "FeatureExtractor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "submod", "=", "submod", "\n", "self", ".", "layers", "=", "layers", "\n", "self", ".", "n", "=", "0", "\n", "\n", "for", "layer_func", "in", "layers", ":", "\n", "            ", "layer", "=", "layer_func", "(", "self", ".", "submod", ")", "\n", "def", "hook", "(", "module", ",", "_", ",", "output", ")", ":", "\n", "                ", "module", ".", "register_buffer", "(", "'activations'", ",", "output", ")", "\n", "\n", "", "layer", ".", "register_forward_hook", "(", "hook", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.FeatureExtractor.forward": [[37, 44], ["model_utils.FeatureExtractor.submod", "layer_fn"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "# self.layer_outputs = {}", "\n", "out", "=", "self", ".", "submod", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "activs", "=", "[", "layer_fn", "(", "self", ".", "submod", ")", ".", "activations", "for", "layer_fn", "in", "self", ".", "layers", "]", "\n", "return", "[", "out", "]", "+", "activs", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.DummyModel.__init__": [[46, 49], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.DummyModel.forward": [[50, 52], ["model_utils.DummyModel.model"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.make_and_restore_model": [[53, 113], ["attacker.AttackerModel", "ch.nn.DataParallel.cuda", "model_utils.DummyModel", "isinstance", "dataset.get_model", "os.path.isfile", "print", "torch.load", "ch.nn.DataParallel.load_state_dict", "print", "torch.nn.DataParallel", "isinstance", "ValueError", "sd.items", "len"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.OpenImages.get_model"], ["", "", "def", "make_and_restore_model", "(", "*", "_", ",", "arch", ",", "dataset", ",", "resume_path", "=", "None", ",", "\n", "parallel", "=", "False", ",", "pytorch_pretrained", "=", "False", ",", "add_custom_forward", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Makes a model and (optionally) restores it from a checkpoint.\n\n    Args:\n        arch (str|nn.Module): Model architecture identifier or otherwise a\n            torch.nn.Module instance with the classifier\n        dataset (Dataset class [see datasets.py])\n        resume_path (str): optional path to checkpoint saved with the \n            robustness library (ignored if ``arch`` is not a string)\n        not a string\n        parallel (bool): if True, wrap the model in a DataParallel \n            (defaults to False)\n        pytorch_pretrained (bool): if True, try to load a standard-trained \n            checkpoint from the torchvision library (throw error if failed)\n        add_custom_forward (bool): ignored unless arch is an instance of\n            nn.Module (and not a string). Normally, architectures should have a\n            forward() function which accepts arguments ``with_latent``,\n            ``fake_relu``, and ``no_relu`` to allow for adversarial manipulation\n            (see `here`<https://robustness.readthedocs.io/en/latest/example_usage/training_lib_part_2.html#training-with-custom-architectures>\n            for more info). If this argument is True, then these options will\n            not be passed to forward(). (Useful if you just want to train a\n            model and don't care about these arguments, and are passing in an\n            arch that you don't want to edit forward() for, e.g.  a pretrained model)\n    Returns: \n        A tuple consisting of the model (possibly loaded with checkpoint), and the checkpoint itself\n    \"\"\"", "\n", "if", "(", "not", "isinstance", "(", "arch", ",", "str", ")", ")", "and", "add_custom_forward", ":", "\n", "        ", "arch", "=", "DummyModel", "(", "arch", ")", "\n", "\n", "", "classifier_model", "=", "dataset", ".", "get_model", "(", "arch", ",", "pytorch_pretrained", ")", "if", "isinstance", "(", "arch", ",", "str", ")", "else", "arch", "\n", "\n", "model", "=", "AttackerModel", "(", "classifier_model", ",", "dataset", ")", "\n", "\n", "# optionally resume from a checkpoint", "\n", "checkpoint", "=", "None", "\n", "if", "resume_path", "and", "os", ".", "path", ".", "isfile", "(", "resume_path", ")", ":", "\n", "        ", "print", "(", "\"=> loading checkpoint '{}'\"", ".", "format", "(", "resume_path", ")", ")", "\n", "checkpoint", "=", "ch", ".", "load", "(", "resume_path", ",", "pickle_module", "=", "dill", ")", "\n", "\n", "# Makes us able to load models saved with legacy versions", "\n", "state_dict_path", "=", "'model'", "\n", "if", "not", "(", "'model'", "in", "checkpoint", ")", ":", "\n", "            ", "state_dict_path", "=", "'state_dict'", "\n", "\n", "", "sd", "=", "checkpoint", "[", "state_dict_path", "]", "\n", "sd", "=", "{", "k", "[", "len", "(", "'module.'", ")", ":", "]", ":", "v", "for", "k", ",", "v", "in", "sd", ".", "items", "(", ")", "}", "\n", "model", ".", "load_state_dict", "(", "sd", ")", "\n", "print", "(", "\"=> loaded checkpoint '{}' (epoch {})\"", ".", "format", "(", "resume_path", ",", "checkpoint", "[", "'epoch'", "]", ")", ")", "\n", "", "elif", "resume_path", ":", "\n", "        ", "error_msg", "=", "\"=> no checkpoint found at '{}'\"", ".", "format", "(", "resume_path", ")", "\n", "raise", "ValueError", "(", "error_msg", ")", "\n", "\n", "", "if", "parallel", ":", "\n", "        ", "model", "=", "ch", ".", "nn", ".", "DataParallel", "(", "model", ")", "\n", "", "model", "=", "model", ".", "cuda", "(", ")", "\n", "\n", "return", "model", ",", "checkpoint", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.model_dataset_from_store": [[114, 154], ["df.to_dict", "zip", "Parameters.update", "Parameters", "os.path.expandvars", "model_utils.make_and_restore_model", "type", "cox.store.Store", "os.path.join", "Parameters.items", "m.get_object", "m.get_pickle", "os.path.join", "isinstance", "os.path.join", "cond", "fn", "Parameters.items", "ckpt_at_epoch"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.update", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.model_utils.make_and_restore_model", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.ckpt_at_epoch"], ["", "def", "model_dataset_from_store", "(", "s", ",", "overwrite_params", "=", "{", "}", ",", "which", "=", "'last'", ")", ":", "\n", "    ", "'''\n    Given a store directory corresponding to a trained model, return the\n    original model, dataset object, and args corresponding to the arguments.\n    '''", "\n", "# which options: {'best', 'last', integer}", "\n", "if", "type", "(", "s", ")", "is", "tuple", ":", "\n", "        ", "s", ",", "e", "=", "s", "\n", "s", "=", "cox", ".", "store", ".", "Store", "(", "s", ",", "e", ",", "mode", "=", "'r'", ")", "\n", "\n", "", "m", "=", "s", "[", "'metadata'", "]", "\n", "df", "=", "s", "[", "'metadata'", "]", ".", "df", "\n", "\n", "args", "=", "df", ".", "to_dict", "(", ")", "\n", "args", "=", "{", "k", ":", "v", "[", "0", "]", "for", "k", ",", "v", "in", "args", ".", "items", "(", ")", "}", "\n", "fns", "=", "[", "lambda", "x", ":", "m", ".", "get_object", "(", "x", ")", ",", "lambda", "x", ":", "m", ".", "get_pickle", "(", "x", ")", "]", "\n", "conds", "=", "[", "lambda", "x", ":", "m", ".", "schema", "[", "x", "]", "==", "s", ".", "OBJECT", ",", "lambda", "x", ":", "m", ".", "schema", "[", "x", "]", "==", "s", ".", "PICKLE", "]", "\n", "for", "fn", ",", "cond", "in", "zip", "(", "fns", ",", "conds", ")", ":", "\n", "        ", "args", "=", "{", "k", ":", "(", "fn", "(", "v", ")", "if", "cond", "(", "k", ")", "else", "v", ")", "for", "k", ",", "v", "in", "args", ".", "items", "(", ")", "}", "\n", "\n", "", "args", ".", "update", "(", "overwrite_params", ")", "\n", "args", "=", "Parameters", "(", "args", ")", "\n", "\n", "data_path", "=", "os", ".", "path", ".", "expandvars", "(", "args", ".", "data", ")", "\n", "if", "not", "data_path", ":", "\n", "        ", "data_path", "=", "'/tmp/'", "\n", "\n", "", "dataset", "=", "DATASETS", "[", "args", ".", "dataset", "]", "(", "data_path", ")", "\n", "\n", "if", "which", "==", "'last'", ":", "\n", "        ", "resume", "=", "os", ".", "path", ".", "join", "(", "s", ".", "path", ",", "constants", ".", "CKPT_NAME", ")", "\n", "", "elif", "which", "==", "'best'", ":", "\n", "        ", "resume", "=", "os", ".", "path", ".", "join", "(", "s", ".", "path", ",", "constants", ".", "CKPT_NAME_BEST", ")", "\n", "", "else", ":", "\n", "        ", "assert", "isinstance", "(", "which", ",", "int", ")", ",", "\"'which' must be one of {'best', 'last', int}\"", "\n", "resume", "=", "os", ".", "path", ".", "join", "(", "s", ".", "path", ",", "ckpt_at_epoch", "(", "which", ")", ")", "\n", "\n", "", "model", ",", "_", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "dataset", "=", "dataset", ",", "\n", "resume_path", "=", "resume", ",", "parallel", "=", "False", ")", "\n", "return", "model", ",", "dataset", ",", "args", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.AttackerStep.__init__": [[21, 33], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "orig_input", ",", "eps", ",", "step_size", ",", "use_grad", "=", "True", ")", ":", "\n", "        ", "'''\n        Initialize the attacker step with a given perturbation magnitude.\n\n        Args:\n            eps (float): the perturbation magnitude\n            orig_input (ch.tensor): the original input\n        '''", "\n", "self", ".", "orig_input", "=", "orig_input", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "step_size", "=", "step_size", "\n", "self", ".", "use_grad", "=", "use_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.AttackerStep.project": [[34, 47], ["None"], "methods", ["None"], ["", "def", "project", "(", "self", ",", "x", ")", ":", "\n", "        ", "'''\n        Given an input x, project it back into the feasible set\n\n        Args:\n            ch.tensor x : the input to project back into the feasible set.\n\n        Returns:\n            A `ch.tensor` that is the input projected back into\n            the feasible set, that is,\n        .. math:: \\min_{x' \\in S} \\|x' - x\\|_2\n        '''", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.AttackerStep.step": [[48, 61], ["None"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "x", ",", "g", ")", ":", "\n", "        ", "'''\n        Given a gradient, make the appropriate step according to the\n        perturbation constraint (e.g. dual norm maximization for :math:`\\ell_p`\n        norms).\n\n        Parameters:\n            g (ch.tensor): the raw gradient\n\n        Returns:\n            The new input, a ch.tensor for the next step.\n        '''", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.AttackerStep.random_perturb": [[62, 67], ["None"], "methods", ["None"], ["", "def", "random_perturb", "(", "self", ",", "x", ")", ":", "\n", "        ", "'''\n        Given a starting input, take a random step within the feasible set\n        '''", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.AttackerStep.to_image": [[68, 77], ["None"], "methods", ["None"], ["", "def", "to_image", "(", "self", ",", "x", ")", ":", "\n", "        ", "'''\n        Given an input (which may be in an alternative parameterization),\n        convert it to a valid image (this is implemented as the identity\n        function by default as most of the time we use the pixel\n        parameterization, but for alternative parameterizations this functino\n        must be overriden).\n        '''", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.LinfStep.project": [[88, 94], ["torch.clamp", "torch.clamp"], "methods", ["None"], ["def", "project", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "diff", "=", "x", "-", "self", ".", "orig_input", "\n", "diff", "=", "ch", ".", "clamp", "(", "diff", ",", "-", "self", ".", "eps", ",", "self", ".", "eps", ")", "\n", "return", "ch", ".", "clamp", "(", "diff", "+", "self", ".", "orig_input", ",", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.LinfStep.step": [[95, 100], ["torch.sign"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "x", ",", "g", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "step", "=", "ch", ".", "sign", "(", "g", ")", "*", "self", ".", "step_size", "\n", "return", "x", "+", "step", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.LinfStep.random_perturb": [[101, 106], ["torch.clamp", "torch.rand_like"], "methods", ["None"], ["", "def", "random_perturb", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "new_x", "=", "x", "+", "2", "*", "(", "ch", ".", "rand_like", "(", "x", ")", "-", "0.5", ")", "*", "self", ".", "eps", "\n", "return", "ch", ".", "clamp", "(", "new_x", ",", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.L2Step.project": [[115, 121], ["diff.renorm.renorm.renorm", "torch.clamp"], "methods", ["None"], ["def", "project", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "diff", "=", "x", "-", "self", ".", "orig_input", "\n", "diff", "=", "diff", ".", "renorm", "(", "p", "=", "2", ",", "dim", "=", "0", ",", "maxnorm", "=", "self", ".", "eps", ")", "\n", "return", "ch", ".", "clamp", "(", "self", ".", "orig_input", "+", "diff", ",", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.L2Step.step": [[122, 129], ["torch.norm().view", "len", "torch.norm", "g.view"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "x", ",", "g", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "l", "=", "len", "(", "x", ".", "shape", ")", "-", "1", "\n", "g_norm", "=", "ch", ".", "norm", "(", "g", ".", "view", "(", "g", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "*", "(", "[", "1", "]", "*", "l", ")", ")", "\n", "scaled_g", "=", "g", "/", "(", "g_norm", "+", "1e-10", ")", "\n", "return", "x", "+", "scaled_g", "*", "self", ".", "step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.L2Step.random_perturb": [[130, 137], ["torch.randn_like", "torch.randn_like.view().norm().view", "torch.clamp", "len", "torch.randn_like.view().norm", "torch.randn_like.view"], "methods", ["None"], ["", "def", "random_perturb", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "l", "=", "len", "(", "x", ".", "shape", ")", "-", "1", "\n", "rp", "=", "ch", ".", "randn_like", "(", "x", ")", "\n", "rp_norm", "=", "rp", ".", "view", "(", "rp", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ".", "norm", "(", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "*", "(", "[", "1", "]", "*", "l", ")", ")", "\n", "return", "ch", ".", "clamp", "(", "x", "+", "self", ".", "eps", "*", "rp", "/", "(", "rp_norm", "+", "1e-10", ")", ",", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.UnconstrainedStep.project": [[143, 147], ["torch.clamp"], "methods", ["None"], ["def", "project", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "ch", ".", "clamp", "(", "x", ",", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.UnconstrainedStep.step": [[148, 152], ["None"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "x", ",", "g", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "x", "+", "g", "*", "self", ".", "step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.UnconstrainedStep.random_perturb": [[153, 158], ["torch.clamp", "torch.rand_like"], "methods", ["None"], ["", "def", "random_perturb", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "new_x", "=", "x", "+", "(", "ch", ".", "rand_like", "(", "x", ")", "-", "0.5", ")", ".", "renorm", "(", "p", "=", "2", ",", "dim", "=", "0", ",", "maxnorm", "=", "step_size", ")", "\n", "return", "ch", ".", "clamp", "(", "new_x", ",", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.FourierStep.project": [[165, 169], ["None"], "methods", ["None"], ["def", "project", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.FourierStep.step": [[170, 174], ["None"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "x", ",", "g", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "x", "+", "g", "*", "self", ".", "step_size", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.FourierStep.random_perturb": [[175, 179], ["None"], "methods", ["None"], ["", "def", "random_perturb", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.FourierStep.to_image": [[180, 184], ["torch.sigmoid", "torch.irfft"], "methods", ["None"], ["", "def", "to_image", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "ch", ".", "sigmoid", "(", "ch", ".", "irfft", "(", "x", ",", "2", ",", "normalized", "=", "True", ",", "onesided", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.RandomStep.__init__": [[189, 192], ["attack_steps.AttackerStep.__init__"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "use_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.RandomStep.project": [[193, 197], ["None"], "methods", ["None"], ["", "def", "project", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.RandomStep.step": [[198, 202], ["torch.randn_like"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "x", ",", "g", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "x", "+", "self", ".", "step_size", "*", "ch", ".", "randn_like", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attack_steps.RandomStep.random_perturb": [[203, 207], ["None"], "methods", ["None"], ["", "def", "random_perturb", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.data_augmentation.Lighting.__init__": [[22, 26], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "alphastd", ",", "eigval", ",", "eigvec", ")", ":", "\n", "        ", "self", ".", "alphastd", "=", "alphastd", "\n", "self", ".", "eigval", "=", "eigval", "\n", "self", ".", "eigvec", "=", "eigvec", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.data_augmentation.Lighting.__call__": [[27, 38], ["img.new().resize_().normal_", "data_augmentation.Lighting.eigvec.type_as().clone().mul().mul().sum().squeeze", "img.add", "data_augmentation.Lighting.view().expand_as", "img.new().resize_", "data_augmentation.Lighting.eigvec.type_as().clone().mul().mul().sum", "data_augmentation.Lighting.view", "img.new", "data_augmentation.Lighting.eigvec.type_as().clone().mul().mul", "data_augmentation.Lighting.eigval.view().expand", "data_augmentation.Lighting.eigvec.type_as().clone().mul", "img.new().resize_().normal_.view().expand", "data_augmentation.Lighting.eigval.view", "data_augmentation.Lighting.eigvec.type_as().clone", "img.new().resize_().normal_.view", "data_augmentation.Lighting.eigvec.type_as"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "self", ".", "alphastd", "==", "0", ":", "\n", "            ", "return", "img", "\n", "\n", "", "alpha", "=", "img", ".", "new", "(", ")", ".", "resize_", "(", "3", ")", ".", "normal_", "(", "0", ",", "self", ".", "alphastd", ")", "\n", "rgb", "=", "self", ".", "eigvec", ".", "type_as", "(", "img", ")", ".", "clone", "(", ")", ".", "mul", "(", "alpha", ".", "view", "(", "1", ",", "3", ")", ".", "expand", "(", "3", ",", "3", ")", ")", ".", "mul", "(", "self", ".", "eigval", ".", "view", "(", "1", ",", "3", ")", ".", "expand", "(", "3", ",", "3", ")", ")", ".", "sum", "(", "1", ")", ".", "squeeze", "(", ")", "\n", "\n", "return", "img", ".", "add", "(", "rgb", ".", "view", "(", "3", ",", "1", ",", "1", ")", ".", "expand_as", "(", "img", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attacker.Attacker.__init__": [[60, 71], ["super().__init__", "tools.helpers.InputNormalize"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "model", ",", "dataset", ")", ":", "\n", "        ", "\"\"\"\n        Initialize the Attacker\n\n        Args:\n            nn.Module model : the PyTorch model to attack\n            Dataset dataset : dataset the model is trained on, only used to get mean and std for normalization\n        \"\"\"", "\n", "super", "(", "Attacker", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "normalize", "=", "helpers", ".", "InputNormalize", "(", "dataset", ".", "mean", ",", "dataset", ".", "std", ")", "\n", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attacker.Attacker.forward": [[72, 252], ["step.project.detach.cuda", "torch.nn.CrossEntropyLoss", "step_class", "step_class.project.detach", "isinstance", "attacker.Attacker.model", "range", "attacker.Attacker.forward.calc_loss"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "target", ",", "*", "_", ",", "constraint", ",", "eps", ",", "step_size", ",", "iterations", ",", "\n", "random_start", "=", "False", ",", "random_restarts", "=", "False", ",", "do_tqdm", "=", "False", ",", "\n", "targeted", "=", "False", ",", "custom_loss", "=", "None", ",", "should_normalize", "=", "True", ",", "\n", "orig_input", "=", "None", ",", "use_best", "=", "True", ",", "return_image", "=", "True", ",", "\n", "est_grad", "=", "None", ",", "mixed_precision", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        Implementation of forward (finds adversarial examples). Note that\n        this does **not** perform inference and should not be called\n        directly; refer to :meth:`robustness.attacker.AttackerModel.forward`\n        for the function you should actually be calling.\n\n        Args:\n            x, target (ch.tensor) : see :meth:`robustness.attacker.AttackerModel.forward`\n            constraint\n                (\"2\"|\"inf\"|\"unconstrained\"|\"fourier\"|:class:`~robustness.attack_steps.AttackerStep`)\n                : threat model for adversarial attacks (:math:`\\ell_2` ball,\n                :math:`\\ell_\\infty` ball, :math:`[0, 1]^n`, Fourier basis, or\n                custom AttackerStep subclass).\n            eps (float) : radius for threat model.\n            step_size (float) : step size for adversarial attacks.\n            iterations (int): number of steps for adversarial attacks.\n            random_start (bool) : if True, start the attack with a random step.\n            random_restarts (bool) : if True, do many random restarts and\n                take the worst attack (in terms of loss) per input.\n            do_tqdm (bool) : if True, show a tqdm progress bar for the attack.\n            targeted (bool) : if True (False), minimize (maximize) the loss.\n            custom_loss (function|None) : if provided, used instead of the\n                criterion as the loss to maximize/minimize during\n                adversarial attack. The function should take in\n                :samp:`model, x, target` and return a tuple of the form\n                :samp:`loss, None`, where loss is a tensor of size N\n                (per-element loss).\n            should_normalize (bool) : If False, don't normalize the input\n                (not recommended unless normalization is done in the\n                custom_loss instead).\n            orig_input (ch.tensor|None) : If not None, use this as the\n                center of the perturbation set, rather than :samp:`x`.\n            use_best (bool) : If True, use the best (in terms of loss)\n                iterate of the attack process instead of just the last one.\n            return_image (bool) : If True (default), then return the adversarial\n                example as an image, otherwise return it in its parameterization\n                (for example, the Fourier coefficients if 'constraint' is\n                'fourier')\n            est_grad (tuple|None) : If not None (default), then these are\n                :samp:`(query_radius [R], num_queries [N])` to use for estimating the\n                gradient instead of autograd. We use the spherical gradient\n                estimator, shown below, along with antithetic sampling [#f1]_\n                to reduce variance:\n                :math:`\\\\nabla_x f(x) \\\\approx \\\\sum_{i=0}^N f(x + R\\\\cdot\n                \\\\vec{\\\\delta_i})\\\\cdot \\\\vec{\\\\delta_i}`, where\n                :math:`\\delta_i` are randomly sampled from the unit ball.\n            mixed_precision (bool) : if True, use mixed-precision calculations\n                to compute the adversarial examples / do the inference.\n        Returns:\n            An adversarial example for x (i.e. within a feasible set\n            determined by `eps` and `constraint`, but classified as:\n\n            * `target` (if `targeted == True`)\n            *  not `target` (if `targeted == False`)\n\n        .. [#f1] This means that we actually draw :math:`N/2` random vectors\n            from the unit ball, and then use :math:`\\delta_{N/2+i} =\n            -\\delta_{i}`.\n        \"\"\"", "\n", "# Can provide a different input to make the feasible set around", "\n", "# instead of the initial point", "\n", "if", "orig_input", "is", "None", ":", "orig_input", "=", "x", ".", "detach", "(", ")", "\n", "orig_input", "=", "orig_input", ".", "cuda", "(", ")", "\n", "\n", "# Multiplier for gradient ascent [untargeted] or descent [targeted]", "\n", "m", "=", "-", "1", "if", "targeted", "else", "1", "\n", "\n", "# Initialize step class and attacker criterion", "\n", "criterion", "=", "ch", ".", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "step_class", "=", "STEPS", "[", "constraint", "]", "if", "isinstance", "(", "constraint", ",", "str", ")", "else", "constraint", "\n", "step", "=", "step_class", "(", "eps", "=", "eps", ",", "orig_input", "=", "orig_input", ",", "step_size", "=", "step_size", ")", "\n", "\n", "def", "calc_loss", "(", "inp", ",", "target", ")", ":", "\n", "            ", "'''\n            Calculates the loss of an input with respect to target labels\n            Uses custom loss (if provided) otherwise the criterion\n            '''", "\n", "if", "should_normalize", ":", "\n", "                ", "inp", "=", "self", ".", "normalize", "(", "inp", ")", "\n", "", "output", "=", "self", ".", "model", "(", "inp", ")", "\n", "if", "custom_loss", ":", "\n", "                ", "return", "custom_loss", "(", "self", ".", "model", ",", "inp", ",", "target", ")", "\n", "\n", "", "return", "criterion", "(", "output", ",", "target", ")", ",", "output", "\n", "\n", "# Main function for making adversarial examples", "\n", "", "def", "get_adv_examples", "(", "x", ")", ":", "\n", "# Random start (to escape certain types of gradient masking)", "\n", "            ", "if", "random_start", ":", "\n", "                ", "x", "=", "step", ".", "random_perturb", "(", "x", ")", "\n", "\n", "", "iterator", "=", "range", "(", "iterations", ")", "\n", "if", "do_tqdm", ":", "iterator", "=", "tqdm", "(", "iterator", ")", "\n", "\n", "# Keep track of the \"best\" (worst-case) loss and its", "\n", "# corresponding input", "\n", "best_loss", "=", "None", "\n", "best_x", "=", "None", "\n", "\n", "# A function that updates the best loss and best input", "\n", "def", "replace_best", "(", "loss", ",", "bloss", ",", "x", ",", "bx", ")", ":", "\n", "                ", "if", "bloss", "is", "None", ":", "\n", "                    ", "bx", "=", "x", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "bloss", "=", "loss", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "", "else", ":", "\n", "                    ", "replace", "=", "m", "*", "bloss", "<", "m", "*", "loss", "\n", "bx", "[", "replace", "]", "=", "x", "[", "replace", "]", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "bloss", "[", "replace", "]", "=", "loss", "[", "replace", "]", "\n", "\n", "", "return", "bloss", ",", "bx", "\n", "\n", "# PGD iterates", "\n", "", "for", "_", "in", "iterator", ":", "\n", "                ", "x", "=", "x", ".", "clone", "(", ")", ".", "detach", "(", ")", ".", "requires_grad_", "(", "True", ")", "\n", "losses", ",", "out", "=", "calc_loss", "(", "step", ".", "to_image", "(", "x", ")", ",", "target", ")", "\n", "assert", "losses", ".", "shape", "[", "0", "]", "==", "x", ".", "shape", "[", "0", "]", ",", "'Shape of losses must match input!'", "\n", "\n", "loss", "=", "ch", ".", "mean", "(", "losses", ")", "\n", "\n", "if", "step", ".", "use_grad", ":", "\n", "                    ", "if", "(", "est_grad", "is", "None", ")", "and", "mixed_precision", ":", "\n", "                        ", "with", "amp", ".", "scale_loss", "(", "loss", ",", "[", "]", ")", "as", "sl", ":", "\n", "                            ", "sl", ".", "backward", "(", ")", "\n", "", "grad", "=", "x", ".", "grad", ".", "detach", "(", ")", "\n", "x", ".", "grad", ".", "zero_", "(", ")", "\n", "", "elif", "(", "est_grad", "is", "None", ")", ":", "\n", "                        ", "grad", ",", "=", "ch", ".", "autograd", ".", "grad", "(", "m", "*", "loss", ",", "[", "x", "]", ")", "\n", "", "else", ":", "\n", "                        ", "f", "=", "lambda", "_x", ",", "_y", ":", "m", "*", "calc_loss", "(", "step", ".", "to_image", "(", "_x", ")", ",", "_y", ")", "[", "0", "]", "\n", "grad", "=", "helpers", ".", "calc_est_grad", "(", "f", ",", "x", ",", "target", ",", "*", "est_grad", ")", "\n", "", "", "else", ":", "\n", "                    ", "grad", "=", "None", "\n", "\n", "", "with", "ch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "args", "=", "[", "losses", ",", "best_loss", ",", "x", ",", "best_x", "]", "\n", "best_loss", ",", "best_x", "=", "replace_best", "(", "*", "args", ")", "if", "use_best", "else", "(", "losses", ",", "x", ")", "\n", "\n", "x", "=", "step", ".", "step", "(", "x", ",", "grad", ")", "\n", "x", "=", "step", ".", "project", "(", "x", ")", "\n", "if", "do_tqdm", ":", "iterator", ".", "set_description", "(", "\"Current loss: {l}\"", ".", "format", "(", "l", "=", "loss", ")", ")", "\n", "\n", "# Save computation (don't compute last loss) if not use_best", "\n", "", "", "if", "not", "use_best", ":", "\n", "                ", "ret", "=", "x", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "return", "step", ".", "to_image", "(", "ret", ")", "if", "return_image", "else", "ret", "\n", "\n", "", "losses", ",", "_", "=", "calc_loss", "(", "step", ".", "to_image", "(", "x", ")", ",", "target", ")", "\n", "args", "=", "[", "losses", ",", "best_loss", ",", "x", ",", "best_x", "]", "\n", "best_loss", ",", "best_x", "=", "replace_best", "(", "*", "args", ")", "\n", "return", "step", ".", "to_image", "(", "best_x", ")", "if", "return_image", "else", "best_x", "\n", "\n", "# Random restarts: repeat the attack and find the worst-case", "\n", "# example for each input in the batch", "\n", "", "if", "random_restarts", ":", "\n", "            ", "to_ret", "=", "None", "\n", "\n", "orig_cpy", "=", "x", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "for", "_", "in", "range", "(", "random_restarts", ")", ":", "\n", "                ", "adv", "=", "get_adv_examples", "(", "orig_cpy", ")", "\n", "\n", "if", "to_ret", "is", "None", ":", "\n", "                    ", "to_ret", "=", "adv", ".", "detach", "(", ")", "\n", "\n", "", "_", ",", "output", "=", "calc_loss", "(", "adv", ",", "target", ")", "\n", "corr", ",", "=", "helpers", ".", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ",", "exact", "=", "True", ")", "\n", "corr", "=", "corr", ".", "byte", "(", ")", "\n", "misclass", "=", "~", "corr", "\n", "to_ret", "[", "misclass", "]", "=", "adv", "[", "misclass", "]", "\n", "\n", "", "adv_ret", "=", "to_ret", "\n", "", "else", ":", "\n", "            ", "adv_ret", "=", "get_adv_examples", "(", "x", ")", "\n", "\n", "", "return", "adv_ret", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attacker.AttackerModel.__init__": [[271, 276], ["super().__init__", "tools.helpers.InputNormalize", "attacker.Attacker"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "model", ",", "dataset", ")", ":", "\n", "        ", "super", "(", "AttackerModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "normalizer", "=", "helpers", ".", "InputNormalize", "(", "dataset", ".", "mean", ",", "dataset", ".", "std", ")", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "attacker", "=", "Attacker", "(", "model", ",", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.attacker.AttackerModel.forward": [[277, 335], ["attacker.AttackerModel.model", "bool", "attacker.AttackerModel.eval", "attacker.AttackerModel.attacker", "print", "ValueError", "attacker.AttackerModel.train"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ",", "isNormalized", "=", "False", ",", "target", "=", "None", ",", "make_adv", "=", "False", ",", "with_latent", "=", "False", ",", "\n", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ",", "with_image", "=", "True", ",", "**", "attacker_kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Main function for running inference and generating adversarial\n        examples for a model.\n\n        Parameters:\n            inp (ch.tensor) : input to do inference on [N x input_shape] (e.g. NCHW)\n            target (ch.tensor) : ignored if `make_adv == False`. Otherwise,\n                labels for adversarial attack.\n            make_adv (bool) : whether to make an adversarial example for\n                the model. If true, returns a tuple of the form\n                :samp:`(model_prediction, adv_input)` where\n                :samp:`model_prediction` is a tensor with the *logits* from\n                the network.\n            with_latent (bool) : also return the second-last layer along\n                with the logits. Output becomes of the form\n                :samp:`((model_logits, model_layer), adv_input)` if\n                :samp:`make_adv==True`, otherwise :samp:`(model_logits, model_layer)`.\n            fake_relu (bool) : useful for activation maximization. If\n                :samp:`True`, replace the ReLUs in the last layer with\n                \"fake ReLUs,\" which are ReLUs in the forwards pass but\n                identity in the backwards pass (otherwise, maximizing a\n                ReLU which is dead is impossible as there is no gradient).\n            no_relu (bool) : If :samp:`True`, return the latent output with\n                the (pre-ReLU) output of the second-last layer, instead of the\n                post-ReLU output. Requires :samp:`fake_relu=False`, and has no\n                visible effect without :samp:`with_latent=True`.\n            with_image (bool) : if :samp:`False`, only return the model output\n                (even if :samp:`make_adv == True`).\n\n        \"\"\"", "\n", "if", "make_adv", ":", "\n", "            ", "assert", "target", "is", "not", "None", "\n", "prev_training", "=", "bool", "(", "self", ".", "training", ")", "\n", "self", ".", "eval", "(", ")", "\n", "adv", "=", "self", ".", "attacker", "(", "inp", ",", "target", ",", "**", "attacker_kwargs", ")", "\n", "if", "prev_training", ":", "\n", "                ", "self", ".", "train", "(", ")", "\n", "\n", "", "inp", "=", "adv", "\n", "\n", "# if isNormalized:", "\n", "#     normalized_inp = self.normalizer(inp)", "\n", "# else:", "\n", "#     normalized_inp = inp", "\n", "", "normalized_inp", "=", "inp", "\n", "\n", "if", "no_relu", "and", "(", "not", "with_latent", ")", ":", "\n", "            ", "print", "(", "\"WARNING: 'no_relu' has no visible effect if 'with_latent is False.\"", ")", "\n", "", "if", "no_relu", "and", "fake_relu", ":", "\n", "            ", "raise", "ValueError", "(", "\"Options 'no_relu' and 'fake_relu' are exclusive\"", ")", "\n", "\n", "", "output", "=", "self", ".", "model", "(", "normalized_inp", ",", "with_latent", "=", "with_latent", ",", "\n", "fake_relu", "=", "fake_relu", ",", "no_relu", "=", "no_relu", ")", "\n", "if", "with_image", ":", "\n", "            ", "return", "(", "output", ",", "inp", ")", "\n", "", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.__init__": [[49, 91], ["torchvision.datasets.DataSet.__dict__.update", "set", "set", "len", "ValueError", "set", "set", "len", "ValueError", "kwargs.get", "kwargs.keys", "kwargs.keys"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.AverageMeter.update"], ["def", "__init__", "(", "self", ",", "ds_name", ",", "data_path", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            ds_name (str) : string identifier for the dataset\n            data_path (str) : path to the dataset \n            num_classes (int) : *required kwarg*, the number of classes in\n                the dataset\n            mean (ch.tensor) : *required kwarg*, the mean to normalize the\n                dataset with (e.g.  :samp:`ch.tensor([0.4914, 0.4822,\n                0.4465])` for CIFAR-10)\n            std (ch.tensor) : *required kwarg*, the standard deviation to\n                normalize the dataset with (e.g. :samp:`ch.tensor([0.2023,\n                0.1994, 0.2010])` for CIFAR-10)\n            custom_class (type) : *required kwarg*, a\n                :samp:`torchvision.models` class corresponding to the\n                dataset, if it exists (otherwise :samp:`None`)\n            label_mapping (dict[int,str]) : *required kwarg*, a dictionary\n                mapping from class numbers to human-interpretable class\n                names (can be :samp:`None`)\n            transform_train (torchvision.transforms) : *required kwarg*, \n                transforms to apply to the training images from the\n                dataset\n            transform_test (torchvision.transforms) : *required kwarg*,\n                transforms to apply to the validation images from the\n                dataset\n        \"\"\"", "\n", "required_args", "=", "[", "'num_classes'", ",", "'mean'", ",", "'std'", ",", "\n", "'transform_train'", ",", "'transform_test'", "]", "\n", "optional_args", "=", "[", "'custom_class'", ",", "'label_mapping'", ",", "'custom_class_args'", "]", "\n", "\n", "missing_args", "=", "set", "(", "required_args", ")", "-", "set", "(", "kwargs", ".", "keys", "(", ")", ")", "\n", "if", "len", "(", "missing_args", ")", ">", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Missing required args %s\"", "%", "missing_args", ")", "\n", "\n", "", "extra_args", "=", "set", "(", "kwargs", ".", "keys", "(", ")", ")", "-", "set", "(", "required_args", "+", "optional_args", ")", "\n", "if", "len", "(", "extra_args", ")", ">", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Got unrecognized args %s\"", "%", "extra_args", ")", "\n", "", "final_kwargs", "=", "{", "k", ":", "kwargs", ".", "get", "(", "k", ",", "None", ")", "for", "k", "in", "required_args", "+", "optional_args", "}", "\n", "\n", "self", ".", "ds_name", "=", "ds_name", "\n", "self", ".", "data_path", "=", "data_path", "\n", "self", ".", "__dict__", ".", "update", "(", "final_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.override_args": [[92, 103], ["type", "ValueError", "isinstance"], "methods", ["None"], ["", "def", "override_args", "(", "self", ",", "default_args", ",", "kwargs", ")", ":", "\n", "        ", "'''\n        Convenience method for overriding arguments. (Internal)\n        '''", "\n", "for", "k", "in", "kwargs", ":", "\n", "            ", "if", "not", "(", "k", "in", "default_args", ")", ":", "continue", "\n", "req_type", "=", "type", "(", "default_args", "[", "k", "]", ")", "\n", "no_nones", "=", "(", "default_args", "[", "k", "]", "is", "not", "None", ")", "and", "(", "kwargs", "[", "k", "]", "is", "not", "None", ")", "\n", "if", "no_nones", "and", "(", "not", "isinstance", "(", "kwargs", "[", "k", "]", ",", "req_type", ")", ")", ":", "\n", "                ", "raise", "ValueError", "(", "f\"Argument {k} should have type {req_type}\"", ")", "\n", "", "", "return", "{", "**", "default_args", ",", "**", "kwargs", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.get_model": [[104, 121], ["None"], "methods", ["None"], ["", "def", "get_model", "(", "self", ",", "arch", ",", "pretrained", ")", ":", "\n", "        ", "'''\n        Should be overriden by subclasses. Also, you will probably never\n        need to call this function, and should instead by using\n        `model_utils.make_and_restore_model </source/robustness.model_utils.html>`_.\n\n        Args:\n            arch (str) : name of architecture \n            pretrained (bool): whether to try to load torchvision \n                pretrained checkpoint\n\n        Returns:\n            A model with the given architecture that works for each\n            dataset (e.g. with the right input/output dimensions).\n        '''", "\n", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.make_loaders": [[122, 177], ["loaders.make_loaders"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.make_loaders"], ["", "def", "make_loaders", "(", "self", ",", "workers", ",", "batch_size", ",", "data_aug", "=", "True", ",", "subset", "=", "None", ",", "\n", "subset_start", "=", "0", ",", "subset_type", "=", "'rand'", ",", "val_batch_size", "=", "None", ",", "\n", "only_val", "=", "False", ",", "shuffle_train", "=", "True", ",", "shuffle_val", "=", "True", ",", "subset_seed", "=", "None", ")", ":", "\n", "        ", "'''\n        Args:\n            workers (int) : number of workers for data fetching (*required*).\n                batch_size (int) : batch size for the data loaders (*required*).\n            data_aug (bool) : whether or not to do train data augmentation.\n            subset (None|int) : if given, the returned training data loader\n                will only use a subset of the training data; this should be a\n                number specifying the number of training data points to use.\n            subset_start (int) : only used if `subset` is not None; this specifies the\n                starting index of the subset.\n            subset_type (\"rand\"|\"first\"|\"last\") : only used if `subset is\n                not `None`; \"rand\" selects the subset randomly, \"first\"\n                uses the first `subset` images of the training data, and\n                \"last\" uses the last `subset` images of the training data.\n            seed (int) : only used if `subset == \"rand\"`; allows one to fix\n                the random seed used to generate the subset (defaults to 1).\n            val_batch_size (None|int) : if not `None`, specifies a\n                different batch size for the validation set loader.\n            only_val (bool) : If `True`, returns `None` in place of the\n                training data loader\n            shuffle_train (bool) : Whether or not to shuffle the training data\n                in the returned DataLoader.\n            shuffle_val (bool) : Whether or not to shuffle the test data in the\n                returned DataLoader.\n\n        Returns:\n            A training loader and validation loader according to the\n            parameters given. These are standard PyTorch data loaders, and\n            thus can just be used via:\n\n            >>> train_loader, val_loader = ds.make_loaders(workers=8, batch_size=128) \n            >>> for im, lab in train_loader:\n            >>>     # Do stuff...\n        '''", "\n", "transforms", "=", "(", "self", ".", "transform_train", ",", "self", ".", "transform_test", ")", "\n", "return", "loaders", ".", "make_loaders", "(", "workers", "=", "workers", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "transforms", "=", "transforms", ",", "\n", "data_path", "=", "self", ".", "data_path", ",", "\n", "data_aug", "=", "data_aug", ",", "\n", "dataset", "=", "self", ".", "ds_name", ",", "\n", "label_mapping", "=", "self", ".", "label_mapping", ",", "\n", "custom_class", "=", "self", ".", "custom_class", ",", "\n", "val_batch_size", "=", "val_batch_size", ",", "\n", "subset", "=", "subset", ",", "\n", "subset_start", "=", "subset_start", ",", "\n", "subset_type", "=", "subset_type", ",", "\n", "only_val", "=", "only_val", ",", "\n", "seed", "=", "subset_seed", ",", "\n", "shuffle_train", "=", "shuffle_train", ",", "\n", "shuffle_val", "=", "shuffle_val", ",", "\n", "custom_class_args", "=", "self", ".", "custom_class_args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.ImageNet.__init__": [[190, 204], ["torchvision.datasets.ImageNet.override_args", "torchvision.datasets.DataSet.__init__", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.override_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "data_path", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "ds_kwargs", "=", "{", "\n", "'num_classes'", ":", "1000", ",", "\n", "'mean'", ":", "ch", ".", "tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ",", "\n", "'std'", ":", "ch", ".", "tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "'custom_class'", ":", "None", ",", "\n", "'label_mapping'", ":", "None", ",", "\n", "'transform_train'", ":", "da", ".", "TRAIN_TRANSFORMS_IMAGENET", ",", "\n", "'transform_test'", ":", "da", ".", "TEST_TRANSFORMS_IMAGENET", "\n", "}", "\n", "ds_kwargs", "=", "self", ".", "override_args", "(", "ds_kwargs", ",", "kwargs", ")", "\n", "super", "(", "ImageNet", ",", "self", ")", ".", "__init__", "(", "'imagenet'", ",", "data_path", ",", "**", "ds_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.ImageNet.get_model": [[205, 210], ["None"], "methods", ["None"], ["", "def", "get_model", "(", "self", ",", "arch", ",", "pretrained", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "imagenet_models", ".", "__dict__", "[", "arch", "]", "(", "num_classes", "=", "self", ".", "num_classes", ",", "\n", "pretrained", "=", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.Places365.__init__": [[221, 235], ["torchvision.datasets.Places365.override_args", "torchvision.datasets.DataSet.__init__", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "data_augmentation.TRAIN_TRANSFORMS_DEFAULT", "data_augmentation.TEST_TRANSFORMS_DEFAULT"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.override_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "data_path", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "ds_kwargs", "=", "{", "\n", "'num_classes'", ":", "365", ",", "\n", "'mean'", ":", "ch", ".", "tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ",", "\n", "'std'", ":", "ch", ".", "tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "'custom_class'", ":", "None", ",", "\n", "'label_mapping'", ":", "None", ",", "\n", "'transform_train'", ":", "da", ".", "TRAIN_TRANSFORMS_DEFAULT", "(", "256", ")", ",", "\n", "'transform_test'", ":", "da", ".", "TEST_TRANSFORMS_DEFAULT", "(", "256", ")", "\n", "}", "\n", "ds_kwargs", "=", "self", ".", "override_args", "(", "ds_kwargs", ",", "kwargs", ")", "\n", "super", "(", "Places365", ",", "self", ")", ".", "__init__", "(", "'places365'", ",", "data_path", ",", "**", "ds_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.Places365.get_model": [[236, 241], ["None"], "methods", ["None"], ["", "def", "get_model", "(", "self", ",", "arch", ",", "pretrained", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "return", "imagenet_models", ".", "__dict__", "[", "arch", "]", "(", "num_classes", "=", "self", ".", "num_classes", ",", "\n", "pretrained", "=", "pretrained", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.RestrictedImageNet.__init__": [[265, 282], ["torchvision.datasets.RestrictedImageNet.override_args", "torchvision.datasets.DataSet.__init__", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "tools.helpers.get_label_mapping"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.override_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.get_label_mapping"], ["def", "__init__", "(", "self", ",", "data_path", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "ds_name", "=", "'restricted_imagenet'", "\n", "ds_kwargs", "=", "{", "\n", "'num_classes'", ":", "len", "(", "constants", ".", "RESTRICTED_IMAGNET_RANGES", ")", ",", "\n", "'mean'", ":", "ch", ".", "tensor", "(", "[", "0.4717", ",", "0.4499", ",", "0.3837", "]", ")", ",", "\n", "'std'", ":", "ch", ".", "tensor", "(", "[", "0.2600", ",", "0.2516", ",", "0.2575", "]", ")", ",", "\n", "'custom_class'", ":", "None", ",", "\n", "'label_mapping'", ":", "get_label_mapping", "(", "ds_name", ",", "\n", "constants", ".", "RESTRICTED_IMAGNET_RANGES", ")", ",", "\n", "'transform_train'", ":", "da", ".", "TRAIN_TRANSFORMS_IMAGENET", ",", "\n", "'transform_test'", ":", "da", ".", "TEST_TRANSFORMS_IMAGENET", "\n", "}", "\n", "ds_kwargs", "=", "self", ".", "override_args", "(", "ds_kwargs", ",", "kwargs", ")", "\n", "super", "(", "RestrictedImageNet", ",", "self", ")", ".", "__init__", "(", "ds_name", ",", "\n", "data_path", ",", "**", "ds_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.RestrictedImageNet.get_model": [[283, 289], ["ValueError"], "methods", ["None"], ["", "def", "get_model", "(", "self", ",", "arch", ",", "pretrained", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "if", "pretrained", ":", "\n", "            ", "raise", "ValueError", "(", "\"Dataset doesn't support pytorch_pretrained\"", ")", "\n", "", "return", "imagenet_models", ".", "__dict__", "[", "arch", "]", "(", "num_classes", "=", "self", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.CustomImageNet.__init__": [[301, 318], ["torchvision.datasets.CustomImageNet.override_args", "torchvision.datasets.DataSet.__init__", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "tools.helpers.get_label_mapping"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.override_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.get_label_mapping"], ["def", "__init__", "(", "self", ",", "data_path", ",", "custom_grouping", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "ds_name", "=", "'custom_imagenet'", "\n", "ds_kwargs", "=", "{", "\n", "'num_classes'", ":", "len", "(", "custom_grouping", ")", ",", "\n", "'mean'", ":", "ch", ".", "tensor", "(", "[", "0.4717", ",", "0.4499", ",", "0.3837", "]", ")", ",", "\n", "'std'", ":", "ch", ".", "tensor", "(", "[", "0.2600", ",", "0.2516", ",", "0.2575", "]", ")", ",", "\n", "'custom_class'", ":", "None", ",", "\n", "'label_mapping'", ":", "get_label_mapping", "(", "ds_name", ",", "\n", "custom_grouping", ")", ",", "\n", "'transform_train'", ":", "da", ".", "TRAIN_TRANSFORMS_IMAGENET", ",", "\n", "'transform_test'", ":", "da", ".", "TEST_TRANSFORMS_IMAGENET", "\n", "}", "\n", "ds_kwargs", "=", "self", ".", "override_args", "(", "ds_kwargs", ",", "kwargs", ")", "\n", "super", "(", "CustomImageNet", ",", "self", ")", ".", "__init__", "(", "ds_name", ",", "\n", "data_path", ",", "**", "ds_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.CustomImageNet.get_model": [[319, 325], ["ValueError"], "methods", ["None"], ["", "def", "get_model", "(", "self", ",", "arch", ",", "pretrained", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "if", "pretrained", ":", "\n", "            ", "raise", "ValueError", "(", "\"Dataset doesn't support pytorch_pretrained\"", ")", "\n", "", "return", "imagenet_models", ".", "__dict__", "[", "arch", "]", "(", "num_classes", "=", "self", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.CIFAR.__init__": [[347, 361], ["torchvision.datasets.CIFAR.override_args", "torchvision.datasets.DataSet.__init__", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "data_augmentation.TRAIN_TRANSFORMS_DEFAULT", "data_augmentation.TEST_TRANSFORMS_DEFAULT"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.override_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "data_path", "=", "'/tmp/'", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "ds_kwargs", "=", "{", "\n", "'num_classes'", ":", "10", ",", "\n", "'mean'", ":", "ch", ".", "tensor", "(", "[", "0.4914", ",", "0.4822", ",", "0.4465", "]", ")", ",", "\n", "'std'", ":", "ch", ".", "tensor", "(", "[", "0.2023", ",", "0.1994", ",", "0.2010", "]", ")", ",", "\n", "'custom_class'", ":", "datasets", ".", "CIFAR10", ",", "\n", "'label_mapping'", ":", "None", ",", "\n", "'transform_train'", ":", "da", ".", "TRAIN_TRANSFORMS_DEFAULT", "(", "32", ")", ",", "\n", "'transform_test'", ":", "da", ".", "TEST_TRANSFORMS_DEFAULT", "(", "32", ")", "\n", "}", "\n", "ds_kwargs", "=", "self", ".", "override_args", "(", "ds_kwargs", ",", "kwargs", ")", "\n", "super", "(", "CIFAR", ",", "self", ")", ".", "__init__", "(", "'cifar'", ",", "data_path", ",", "**", "ds_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.CIFAR.get_model": [[362, 368], ["ValueError"], "methods", ["None"], ["", "def", "get_model", "(", "self", ",", "arch", ",", "pretrained", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "if", "pretrained", ":", "\n", "            ", "raise", "ValueError", "(", "'CIFAR does not support pytorch_pretrained=True'", ")", "\n", "", "return", "cifar_models", ".", "__dict__", "[", "arch", "]", "(", "num_classes", "=", "self", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.CINIC.__init__": [[381, 395], ["torchvision.datasets.CINIC.override_args", "torchvision.datasets.DataSet.__init__", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "data_augmentation.TRAIN_TRANSFORMS_DEFAULT", "data_augmentation.TEST_TRANSFORMS_DEFAULT"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.override_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "data_path", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "ds_kwargs", "=", "{", "\n", "'num_classes'", ":", "10", ",", "\n", "'mean'", ":", "ch", ".", "tensor", "(", "[", "0.47889522", ",", "0.47227842", ",", "0.43047404", "]", ")", ",", "\n", "'std'", ":", "ch", ".", "tensor", "(", "[", "0.24205776", ",", "0.23828046", ",", "0.25874835", "]", ")", ",", "\n", "'custom_class'", ":", "None", ",", "\n", "'label_mapping'", ":", "None", ",", "\n", "'transform_train'", ":", "da", ".", "TRAIN_TRANSFORMS_DEFAULT", "(", "32", ")", ",", "\n", "'transform_test'", ":", "da", ".", "TEST_TRANSFORMS_DEFAULT", "(", "32", ")", "\n", "}", "\n", "ds_kwargs", "=", "self", ".", "override_args", "(", "ds_kwargs", ",", "kwargs", ")", "\n", "super", "(", "CINIC", ",", "self", ")", ".", "__init__", "(", "'cinic'", ",", "data_path", ",", "**", "ds_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.CINIC.get_model": [[396, 402], ["ValueError"], "methods", ["None"], ["", "def", "get_model", "(", "self", ",", "arch", ",", "pretrained", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "if", "pretrained", ":", "\n", "            ", "raise", "ValueError", "(", "'CINIC does not support pytorch_pretrained=True'", ")", "\n", "", "return", "cifar_models", ".", "__dict__", "[", "arch", "]", "(", "num_classes", "=", "self", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.A2B.__init__": [[419, 437], ["torchvision.datasets.A2B.override_args", "torchvision.datasets.DataSet.__init__", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.override_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "data_path", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "ds_name", "=", "pathlib", ".", "Path", "(", "data_path", ")", ".", "parts", "[", "-", "1", "]", "\n", "valid_names", "=", "[", "'horse2zebra'", ",", "'apple2orange'", ",", "'summer2winter_yosemite'", "]", "\n", "assert", "ds_name", "in", "valid_names", ",", "f\"path must end in one of {valid_names}, not {ds_name}\"", "\n", "ds_kwargs", "=", "{", "\n", "'num_classes'", ":", "2", ",", "\n", "'mean'", ":", "ch", ".", "tensor", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", ",", "\n", "'custom_class'", ":", "None", ",", "\n", "'std'", ":", "ch", ".", "tensor", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", ",", "\n", "'transform_train'", ":", "da", ".", "TRAIN_TRANSFORMS_IMAGENET", ",", "\n", "'label_mapping'", ":", "None", ",", "\n", "'transform_test'", ":", "da", ".", "TEST_TRANSFORMS_IMAGENET", "\n", "}", "\n", "ds_kwargs", "=", "self", ".", "override_args", "(", "ds_kwargs", ",", "kwargs", ")", "\n", "super", "(", "A2B", ",", "self", ")", ".", "__init__", "(", "ds_name", ",", "data_path", ",", "**", "ds_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.A2B.get_model": [[438, 444], ["ValueError"], "methods", ["None"], ["", "def", "get_model", "(", "self", ",", "arch", ",", "pretrained", "=", "False", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "if", "pretrained", ":", "\n", "            ", "raise", "ValueError", "(", "'A2B does not support pytorch_pretrained=True'", ")", "\n", "", "return", "imagenet_models", ".", "__dict__", "[", "arch", "]", "(", "num_classes", "=", "self", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.OpenImages.__init__": [[460, 481], ["torchvision.datasets.OpenImages.override_args", "torchvision.datasets.DataSet.__init__", "len", "tools.helpers.get_label_mapping", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.DataSet.override_args", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.tools.helpers.get_label_mapping"], ["def", "__init__", "(", "self", ",", "data_path", ",", "custom_grouping", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "if", "custom_grouping", "is", "None", ":", "\n", "            ", "num_classes", "=", "601", "\n", "label_mapping", "=", "None", "\n", "", "else", ":", "\n", "            ", "num_classes", "=", "len", "(", "custom_grouping", ")", "\n", "label_mapping", "=", "get_label_mapping", "(", "\"custom_imagenet\"", ",", "custom_grouping", ")", "\n", "\n", "", "ds_kwargs", "=", "{", "\n", "'num_classes'", ":", "num_classes", ",", "\n", "'mean'", ":", "ch", ".", "tensor", "(", "[", "0.4859", ",", "0.4131", ",", "0.3083", "]", ")", ",", "\n", "'std'", ":", "ch", ".", "tensor", "(", "[", "0.2919", ",", "0.2507", ",", "0.2273", "]", ")", ",", "\n", "'custom_class'", ":", "openimgs_helpers", ".", "OIDatasetFolder", ",", "\n", "'label_mapping'", ":", "label_mapping", ",", "\n", "'transform_train'", ":", "da", ".", "TRAIN_TRANSFORMS_IMAGENET", ",", "\n", "'transform_test'", ":", "da", ".", "TEST_TRANSFORMS_IMAGENET", "\n", "}", "\n", "ds_kwargs", "=", "self", ".", "override_args", "(", "ds_kwargs", ",", "kwargs", ")", "\n", "super", "(", "OpenImages", ",", "self", ")", ".", "__init__", "(", "'openimages'", ",", "data_path", ",", "**", "ds_kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.robu.datasets.OpenImages.get_model": [[482, 488], ["ValueError"], "methods", ["None"], ["", "def", "get_model", "(", "self", ",", "arch", ",", "pretrained", ")", ":", "\n", "        ", "\"\"\"\n        \"\"\"", "\n", "if", "pretrained", ":", "\n", "            ", "raise", "ValueError", "(", "'OpenImages does not support pytorch_pretrained=True'", ")", "\n", "", "return", "imagenet_models", ".", "__dict__", "[", "arch", "]", "(", "num_classes", "=", "self", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.vgg.VGG.__init__": [[13, 17], ["torch.Module.__init__", "vgg.VGG._make_layers", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.vgg.VGG._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "512", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.vgg.VGG.forward": [[18, 27], ["vgg.VGG.features", "vgg.VGG.view", "vgg.VGG.classifier", "vgg.VGG.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "with_latent", "=", "False", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "assert", "(", "not", "fake_relu", ")", "and", "(", "not", "no_relu", ")", ",", "\"fake_relu and no_relu not yet supported for this architecture\"", "\n", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "latent", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "latent", ")", "\n", "if", "with_latent", ":", "\n", "            ", "return", "out", ",", "latent", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.vgg.VGG._make_layers": [[28, 41], ["torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.vgg.VGG11": [[42, 44], ["vgg.VGG"], "function", ["None"], ["", "", "def", "VGG11", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG11'", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.vgg.VGG13": [[45, 47], ["vgg.VGG"], "function", ["None"], ["", "def", "VGG13", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG13'", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.vgg.VGG16": [[48, 50], ["vgg.VGG"], "function", ["None"], ["", "def", "VGG16", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG16'", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.vgg.VGG19": [[51, 53], ["vgg.VGG"], "function", ["None"], ["", "def", "VGG19", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG19'", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.BasicConv2d.__init__": [[7, 12], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "output_channels", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "input_channels", ",", "output_channels", ",", "bias", "=", "False", ",", "**", "kwargs", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "output_channels", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.BasicConv2d.forward": [[13, 19], ["inception.BasicConv2d.conv", "inception.BasicConv2d.bn", "inception.BasicConv2d.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionA.__init__": [[23, 41], ["torch.Module.__init__", "inception.BasicConv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "torch.AvgPool2d", "torch.AvgPool2d", "inception.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "pool_features", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1x1", "=", "BasicConv2d", "(", "input_channels", ",", "64", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "branch5x5", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "input_channels", ",", "48", ",", "kernel_size", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "48", ",", "64", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", "\n", ")", "\n", "\n", "self", ".", "branch3x3", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "input_channels", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "64", ",", "96", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "96", ",", "96", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", ")", "\n", "\n", "self", ".", "branchpool", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "input_channels", ",", "pool_features", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionA.forward": [[43, 61], ["inception.InceptionA.branch1x1", "inception.InceptionA.branch5x5", "inception.InceptionA.branch3x3", "inception.InceptionA.branchpool", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#x -> 1x1(same)", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "#x -> 1x1 -> 5x5(same)", "\n", "branch5x5", "=", "self", ".", "branch5x5", "(", "x", ")", "\n", "#branch5x5 = self.branch5x5_2(branch5x5)", "\n", "\n", "#x -> 1x1 -> 3x3 -> 3x3(same)", "\n", "branch3x3", "=", "self", ".", "branch3x3", "(", "x", ")", "\n", "\n", "#x -> pool -> 1x1(same)", "\n", "branchpool", "=", "self", ".", "branchpool", "(", "x", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch5x5", ",", "branch3x3", ",", "branchpool", "]", "\n", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionB.__init__": [[66, 78], ["torch.Module.__init__", "inception.BasicConv2d", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "branch3x3", "=", "BasicConv2d", "(", "input_channels", ",", "384", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "branch3x3stack", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "input_channels", ",", "64", ",", "kernel_size", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "64", ",", "96", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "96", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", ")", "\n", "\n", "self", ".", "branchpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionB.forward": [[79, 97], ["inception.InceptionB.branch3x3", "inception.InceptionB.branch3x3stack", "inception.InceptionB.branchpool", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#x - > 3x3(downsample)", "\n", "        ", "branch3x3", "=", "self", ".", "branch3x3", "(", "x", ")", "\n", "\n", "#x -> 3x3 -> 3x3(downsample)", "\n", "branch3x3stack", "=", "self", ".", "branch3x3stack", "(", "x", ")", "\n", "\n", "#x -> avgpool(downsample)", "\n", "branchpool", "=", "self", ".", "branchpool", "(", "x", ")", "\n", "\n", "#\"\"\"We can use two parallel stride 2 blocks: P and C. P is a pooling ", "\n", "#layer (either average or maximum pooling) the activation, both of ", "\n", "#them are stride 2 the filter banks of which are concatenated as in ", "\n", "#figure 10.\"\"\"", "\n", "outputs", "=", "[", "branch3x3", ",", "branch3x3stack", ",", "branchpool", "]", "\n", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionC.__init__": [[100, 126], ["torch.Module.__init__", "inception.BasicConv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "torch.AvgPool2d", "torch.AvgPool2d", "inception.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ",", "channels_7x7", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1x1", "=", "BasicConv2d", "(", "input_channels", ",", "192", ",", "kernel_size", "=", "1", ")", "\n", "\n", "c7", "=", "channels_7x7", "\n", "\n", "#In theory, we could go even further and argue that one can replace any n x n ", "\n", "#convolution by a 1 x n convolution followed by a n x 1 convolution and the ", "\n", "#computational cost saving increases dramatically as n grows (see figure 6).", "\n", "self", ".", "branch7x7", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "input_channels", ",", "c7", ",", "kernel_size", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "c7", ",", "c7", ",", "kernel_size", "=", "(", "7", ",", "1", ")", ",", "padding", "=", "(", "3", ",", "0", ")", ")", ",", "\n", "BasicConv2d", "(", "c7", ",", "192", ",", "kernel_size", "=", "(", "1", ",", "7", ")", ",", "padding", "=", "(", "0", ",", "3", ")", ")", "\n", ")", "\n", "\n", "self", ".", "branch7x7stack", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "input_channels", ",", "c7", ",", "kernel_size", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "c7", ",", "c7", ",", "kernel_size", "=", "(", "7", ",", "1", ")", ",", "padding", "=", "(", "3", ",", "0", ")", ")", ",", "\n", "BasicConv2d", "(", "c7", ",", "c7", ",", "kernel_size", "=", "(", "1", ",", "7", ")", ",", "padding", "=", "(", "0", ",", "3", ")", ")", ",", "\n", "BasicConv2d", "(", "c7", ",", "c7", ",", "kernel_size", "=", "(", "7", ",", "1", ")", ",", "padding", "=", "(", "3", ",", "0", ")", ")", ",", "\n", "BasicConv2d", "(", "c7", ",", "192", ",", "kernel_size", "=", "(", "1", ",", "7", ")", ",", "padding", "=", "(", "0", ",", "3", ")", ")", "\n", ")", "\n", "\n", "self", ".", "branch_pool", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "input_channels", ",", "192", ",", "kernel_size", "=", "1", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionC.forward": [[128, 145], ["inception.InceptionC.branch1x1", "inception.InceptionC.branch7x7", "inception.InceptionC.branch7x7stack", "inception.InceptionC.branch_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#x -> 1x1(same)", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "#x -> 1layer 1*7 and 7*1 (same)", "\n", "branch7x7", "=", "self", ".", "branch7x7", "(", "x", ")", "\n", "\n", "#x-> 2layer 1*7 and 7*1(same)", "\n", "branch7x7stack", "=", "self", ".", "branch7x7stack", "(", "x", ")", "\n", "\n", "#x-> avgpool (same)", "\n", "branchpool", "=", "self", ".", "branch_pool", "(", "x", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch7x7", ",", "branch7x7stack", ",", "branchpool", "]", "\n", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionD.__init__": [[148, 164], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "branch3x3", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "input_channels", ",", "192", ",", "kernel_size", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "192", ",", "320", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", ")", "\n", "\n", "self", ".", "branch7x7", "=", "nn", ".", "Sequential", "(", "\n", "BasicConv2d", "(", "input_channels", ",", "192", ",", "kernel_size", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "(", "1", ",", "7", ")", ",", "padding", "=", "(", "0", ",", "3", ")", ")", ",", "\n", "BasicConv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "(", "7", ",", "1", ")", ",", "padding", "=", "(", "3", ",", "0", ")", ")", ",", "\n", "BasicConv2d", "(", "192", ",", "192", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", ")", "\n", "\n", "self", ".", "branchpool", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionD.forward": [[165, 179], ["inception.InceptionD.branch3x3", "inception.InceptionD.branch7x7", "inception.InceptionD.branchpool", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#x -> 1x1 -> 3x3(downsample)", "\n", "        ", "branch3x3", "=", "self", ".", "branch3x3", "(", "x", ")", "\n", "\n", "#x -> 1x1 -> 1x7 -> 7x1 -> 3x3 (downsample)", "\n", "branch7x7", "=", "self", ".", "branch7x7", "(", "x", ")", "\n", "\n", "#x -> avgpool (downsample)", "\n", "branchpool", "=", "self", ".", "branchpool", "(", "x", ")", "\n", "\n", "outputs", "=", "[", "branch3x3", ",", "branch7x7", ",", "branchpool", "]", "\n", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionE.__init__": [[183, 199], ["torch.Module.__init__", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "inception.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "branch1x1", "=", "BasicConv2d", "(", "input_channels", ",", "320", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "branch3x3_1", "=", "BasicConv2d", "(", "input_channels", ",", "384", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "branch3x3_2a", "=", "BasicConv2d", "(", "384", ",", "384", ",", "kernel_size", "=", "(", "1", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "branch3x3_2b", "=", "BasicConv2d", "(", "384", ",", "384", ",", "kernel_size", "=", "(", "3", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "0", ")", ")", "\n", "\n", "self", ".", "branch3x3stack_1", "=", "BasicConv2d", "(", "input_channels", ",", "448", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "branch3x3stack_2", "=", "BasicConv2d", "(", "448", ",", "384", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "branch3x3stack_3a", "=", "BasicConv2d", "(", "384", ",", "384", ",", "kernel_size", "=", "(", "1", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "1", ")", ")", "\n", "self", ".", "branch3x3stack_3b", "=", "BasicConv2d", "(", "384", ",", "384", ",", "kernel_size", "=", "(", "3", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "0", ")", ")", "\n", "\n", "self", ".", "branch_pool", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "BasicConv2d", "(", "input_channels", ",", "192", ",", "kernel_size", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionE.forward": [[201, 236], ["inception.InceptionE.branch1x1", "inception.InceptionE.branch3x3_1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inception.InceptionE.branch3x3stack_1", "inception.InceptionE.branch3x3stack_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inception.InceptionE.branch_pool", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "inception.InceptionE.branch3x3_2a", "inception.InceptionE.branch3x3_2b", "inception.InceptionE.branch3x3stack_3a", "inception.InceptionE.branch3x3stack_3b"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "#x -> 1x1 (same)", "\n", "        ", "branch1x1", "=", "self", ".", "branch1x1", "(", "x", ")", "\n", "\n", "# x -> 1x1 -> 3x1", "\n", "# x -> 1x1 -> 1x3", "\n", "# concatenate(3x1, 1x3)", "\n", "#\"\"\"7. Inception modules with expanded the filter bank outputs. ", "\n", "#This architecture is used on the coarsest (8 x 8) grids to promote ", "\n", "#high dimensional representations, as suggested by principle ", "\n", "#2 of Section 2.\"\"\"", "\n", "branch3x3", "=", "self", ".", "branch3x3_1", "(", "x", ")", "\n", "branch3x3", "=", "[", "\n", "self", ".", "branch3x3_2a", "(", "branch3x3", ")", ",", "\n", "self", ".", "branch3x3_2b", "(", "branch3x3", ")", "\n", "]", "\n", "branch3x3", "=", "torch", ".", "cat", "(", "branch3x3", ",", "1", ")", "\n", "\n", "# x -> 1x1 -> 3x3 -> 1x3", "\n", "# x -> 1x1 -> 3x3 -> 3x1", "\n", "#concatenate(1x3, 3x1)", "\n", "branch3x3stack", "=", "self", ".", "branch3x3stack_1", "(", "x", ")", "\n", "branch3x3stack", "=", "self", ".", "branch3x3stack_2", "(", "branch3x3stack", ")", "\n", "branch3x3stack", "=", "[", "\n", "self", ".", "branch3x3stack_3a", "(", "branch3x3stack", ")", ",", "\n", "self", ".", "branch3x3stack_3b", "(", "branch3x3stack", ")", "\n", "]", "\n", "branch3x3stack", "=", "torch", ".", "cat", "(", "branch3x3stack", ",", "1", ")", "\n", "\n", "branchpool", "=", "self", ".", "branch_pool", "(", "x", ")", "\n", "\n", "outputs", "=", "[", "branch1x1", ",", "branch3x3", ",", "branch3x3stack", ",", "branchpool", "]", "\n", "\n", "return", "torch", ".", "cat", "(", "outputs", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionV3.__init__": [[239, 270], ["torch.Module.__init__", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.BasicConv2d", "inception.InceptionA", "inception.InceptionA", "inception.InceptionA", "inception.InceptionB", "inception.InceptionC", "inception.InceptionC", "inception.InceptionC", "inception.InceptionC", "inception.InceptionD", "inception.InceptionE", "inception.InceptionE", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Dropout2d", "torch.Dropout2d", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Conv2d_1a_3x3", "=", "BasicConv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "Conv2d_2a_3x3", "=", "BasicConv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "Conv2d_2b_3x3", "=", "BasicConv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "Conv2d_3b_1x1", "=", "BasicConv2d", "(", "64", ",", "80", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "Conv2d_4a_3x3", "=", "BasicConv2d", "(", "80", ",", "192", ",", "kernel_size", "=", "3", ")", "\n", "\n", "#naive inception module", "\n", "self", ".", "Mixed_5b", "=", "InceptionA", "(", "192", ",", "pool_features", "=", "32", ")", "\n", "self", ".", "Mixed_5c", "=", "InceptionA", "(", "256", ",", "pool_features", "=", "64", ")", "\n", "self", ".", "Mixed_5d", "=", "InceptionA", "(", "288", ",", "pool_features", "=", "64", ")", "\n", "\n", "#downsample", "\n", "self", ".", "Mixed_6a", "=", "InceptionB", "(", "288", ")", "\n", "\n", "self", ".", "Mixed_6b", "=", "InceptionC", "(", "768", ",", "channels_7x7", "=", "128", ")", "\n", "self", ".", "Mixed_6c", "=", "InceptionC", "(", "768", ",", "channels_7x7", "=", "160", ")", "\n", "self", ".", "Mixed_6d", "=", "InceptionC", "(", "768", ",", "channels_7x7", "=", "160", ")", "\n", "self", ".", "Mixed_6e", "=", "InceptionC", "(", "768", ",", "channels_7x7", "=", "192", ")", "\n", "\n", "#downsample", "\n", "self", ".", "Mixed_7a", "=", "InceptionD", "(", "768", ")", "\n", "\n", "self", ".", "Mixed_7b", "=", "InceptionE", "(", "1280", ")", "\n", "self", ".", "Mixed_7c", "=", "InceptionE", "(", "2048", ")", "\n", "\n", "#6*6 feature size", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout2d", "(", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "2048", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.InceptionV3.forward": [[271, 323], ["inception.InceptionV3.Conv2d_1a_3x3", "inception.InceptionV3.Conv2d_2a_3x3", "inception.InceptionV3.Conv2d_2b_3x3", "inception.InceptionV3.Conv2d_3b_1x1", "inception.InceptionV3.Conv2d_4a_3x3", "inception.InceptionV3.Mixed_5b", "inception.InceptionV3.Mixed_5c", "inception.InceptionV3.Mixed_5d", "inception.InceptionV3.Mixed_6a", "inception.InceptionV3.Mixed_6b", "inception.InceptionV3.Mixed_6c", "inception.InceptionV3.Mixed_6d", "inception.InceptionV3.Mixed_6e", "inception.InceptionV3.Mixed_7a", "inception.InceptionV3.Mixed_7b", "inception.InceptionV3.Mixed_7c", "inception.InceptionV3.avgpool", "inception.InceptionV3.dropout", "inception.InceptionV3.view", "inception.InceptionV3.linear", "inception.InceptionV3.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "with_latent", "=", "False", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "assert", "(", "not", "fake_relu", ")", "and", "(", "not", "no_relu", ")", ",", "\"fake_relu and no_relu not yet supported for this architecture\"", "\n", "#32 -> 30", "\n", "x", "=", "self", ".", "Conv2d_1a_3x3", "(", "x", ")", "\n", "x", "=", "self", ".", "Conv2d_2a_3x3", "(", "x", ")", "\n", "x", "=", "self", ".", "Conv2d_2b_3x3", "(", "x", ")", "\n", "x", "=", "self", ".", "Conv2d_3b_1x1", "(", "x", ")", "\n", "x", "=", "self", ".", "Conv2d_4a_3x3", "(", "x", ")", "\n", "\n", "#30 -> 30", "\n", "x", "=", "self", ".", "Mixed_5b", "(", "x", ")", "\n", "x", "=", "self", ".", "Mixed_5c", "(", "x", ")", "\n", "x", "=", "self", ".", "Mixed_5d", "(", "x", ")", "\n", "\n", "#30 -> 14", "\n", "#Efficient Grid Size Reduction to avoid representation", "\n", "#bottleneck", "\n", "x", "=", "self", ".", "Mixed_6a", "(", "x", ")", "\n", "\n", "#14 -> 14", "\n", "#\"\"\"In practice, we have found that employing this factorization does not ", "\n", "#work well on early layers, but it gives very good results on medium ", "\n", "#grid-sizes (On m x m feature maps, where m ranges between 12 and 20). ", "\n", "#On that level, very good results can be achieved by using 1 x 7 convolutions ", "\n", "#followed by 7 x 1 convolutions.\"\"\"", "\n", "x", "=", "self", ".", "Mixed_6b", "(", "x", ")", "\n", "x", "=", "self", ".", "Mixed_6c", "(", "x", ")", "\n", "x", "=", "self", ".", "Mixed_6d", "(", "x", ")", "\n", "x", "=", "self", ".", "Mixed_6e", "(", "x", ")", "\n", "\n", "#14 -> 6", "\n", "#Efficient Grid Size Reduction", "\n", "x", "=", "self", ".", "Mixed_7a", "(", "x", ")", "\n", "\n", "#6 -> 6", "\n", "#We are using this solution only on the coarsest grid, ", "\n", "#since that is the place where producing high dimensional ", "\n", "#sparse representation is the most critical as the ratio of ", "\n", "#local processing (by 1 x 1 convolutions) is increased compared ", "\n", "#to the spatial aggregation.\"\"\"", "\n", "x", "=", "self", ".", "Mixed_7b", "(", "x", ")", "\n", "x", "=", "self", ".", "Mixed_7c", "(", "x", ")", "\n", "\n", "#6 -> 1", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "latent", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "latent", ")", "\n", "if", "with_latent", ":", "\n", "            ", "return", "out", ",", "latent", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.inception.inceptionv3": [[325, 327], ["inception.InceptionV3"], "function", ["None"], ["", "", "def", "inceptionv3", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "InceptionV3", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.BasicBlock.__init__": [[15, 30], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.BasicBlock.forward": [[31, 38], ["torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn2", "resnet.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn1", "resnet.BasicBlock.conv2", "tools.custom_modules.FakeReLU.apply", "resnet.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "fake_relu", "=", "False", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "if", "fake_relu", ":", "\n", "            ", "return", "FakeReLU", ".", "apply", "(", "out", ")", "\n", "", "return", "F", ".", "relu", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.Bottleneck.__init__": [[43, 58], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.Bottleneck.forward": [[60, 68], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn3", "resnet.Bottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet.Bottleneck.bn1", "resnet.Bottleneck.bn2", "resnet.Bottleneck.conv3", "tools.custom_modules.FakeReLU.apply", "resnet.Bottleneck.conv1", "resnet.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "fake_relu", "=", "False", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "if", "fake_relu", ":", "\n", "            ", "return", "FakeReLU", ".", "apply", "(", "out", ")", "\n", "", "return", "F", ".", "relu", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet.__init__": [[72, 87], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "int"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ",", "feat_scale", "=", "1", ",", "wm", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "widths", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "widths", "=", "[", "int", "(", "w", "*", "wm", ")", "for", "w", "in", "widths", "]", "\n", "\n", "self", ".", "in_planes", "=", "widths", "[", "0", "]", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "in_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "in_planes", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "widths", "[", "0", "]", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "widths", "[", "1", "]", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "widths", "[", "2", "]", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "widths", "[", "3", "]", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "feat_scale", "*", "widths", "[", "3", "]", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet._make_layer": [[88, 95], ["tools.custom_modules.SequentialWithArgs", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "SequentialWithArgs", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet.forward": [[96, 110], ["torch.relu", "torch.relu", "torch.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d.view", "resnet.ResNet.linear", "resnet.ResNet.bn1", "torch.avg_pool2d.size", "resnet.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "with_latent", "=", "False", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "assert", "(", "not", "no_relu", ")", ",", "\"no_relu not yet supported for this architecture\"", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ",", "fake_relu", "=", "fake_relu", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "pre_out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "final", "=", "self", ".", "linear", "(", "pre_out", ")", "\n", "if", "with_latent", ":", "\n", "            ", "return", "final", ",", "pre_out", "\n", "", "return", "final", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet18": [[111, 113], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet18", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet18Wide": [[114, 116], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet18Wide", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "wm", "=", "5", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet18Thin": [[117, 119], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet18Thin", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "wd", "=", ".75", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet34": [[120, 122], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet50": [[123, 125], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet101": [[126, 128], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet152": [[129, 131], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet152", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.test": [[139, 143], ["resnet.ResNet18", "ResNet18.", "print", "torch.randn", "torch.randn", "torch.randn", "net.size"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.resnet.ResNet18"], ["def", "test", "(", ")", ":", "\n", "    ", "net", "=", "ResNet18", "(", ")", "\n", "y", "=", "net", "(", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.Bottleneck.__init__": [[11, 17], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "growth_rate", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "4", "*", "growth_rate", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "4", "*", "growth_rate", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "4", "*", "growth_rate", ",", "growth_rate", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.Bottleneck.forward": [[18, 23], ["densenet.Bottleneck.conv1", "densenet.Bottleneck.conv2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "densenet.Bottleneck.bn1", "densenet.Bottleneck.bn2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "conv2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "out", ")", ")", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out", ",", "x", "]", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.Transition.__init__": [[26, 30], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ")", ":", "\n", "        ", "super", "(", "Transition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.Transition.forward": [[31, 35], ["densenet.Transition.conv", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.relu", "torch.relu", "torch.relu", "densenet.Transition.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet.__init__": [[38, 68], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "int", "densenet.Transition", "densenet.DenseNet._make_dense_layers", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Linear", "torch.Linear", "torch.Linear", "math.floor", "math.floor", "math.floor"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet._make_dense_layers", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet._make_dense_layers"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "nblocks", ",", "growth_rate", "=", "12", ",", "reduction", "=", "0.5", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "DenseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "growth_rate", "=", "growth_rate", "\n", "\n", "num_planes", "=", "2", "*", "growth_rate", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "num_planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "dense1", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "0", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "0", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans1", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense2", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "1", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "1", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans2", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense3", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "2", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "2", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans3", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense4", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "3", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "3", "]", "*", "growth_rate", "\n", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "num_planes", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "num_planes", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet._make_dense_layers": [[69, 75], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_dense_layers", "(", "self", ",", "block", ",", "in_planes", ",", "nblock", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nblock", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "in_planes", ",", "self", ".", "growth_rate", ")", ")", "\n", "in_planes", "+=", "self", ".", "growth_rate", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet.forward": [[76, 94], ["densenet.DenseNet.conv1", "densenet.DenseNet.trans1", "densenet.DenseNet.trans2", "densenet.DenseNet.trans3", "densenet.DenseNet.dense4", "torch.avg_pool2d.view", "torch.avg_pool2d.clone", "densenet.DenseNet.linear", "densenet.DenseNet.dense1", "densenet.DenseNet.dense2", "densenet.DenseNet.dense3", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d.size", "tools.custom_modules.FakeReLU.apply", "torch.relu", "torch.relu", "torch.relu", "densenet.DenseNet.bn", "densenet.DenseNet.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "with_latent", "=", "False", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "assert", "not", "no_relu", ",", "\"DenseNet has no pre-ReLU activations, no_relu not supported\"", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "trans1", "(", "self", ".", "dense1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans2", "(", "self", ".", "dense2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans3", "(", "self", ".", "dense3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "dense4", "(", "out", ")", "\n", "if", "fake_relu", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "FakeReLU", ".", "apply", "(", "self", ".", "bn", "(", "out", ")", ")", ",", "4", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "out", ")", ")", ",", "4", ")", "\n", "", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "latent", "=", "out", ".", "clone", "(", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "if", "with_latent", ":", "\n", "            ", "return", "out", ",", "latent", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet121": [[95, 97], ["densenet.DenseNet"], "function", ["None"], ["", "", "def", "DenseNet121", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "24", ",", "16", "]", ",", "growth_rate", "=", "32", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet169": [[98, 100], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet169", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "32", ",", "32", "]", ",", "growth_rate", "=", "32", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet201": [[101, 103], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet201", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "48", ",", "32", "]", ",", "growth_rate", "=", "32", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.DenseNet161": [[104, 106], ["densenet.DenseNet"], "function", ["None"], ["", "def", "DenseNet161", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "36", ",", "24", "]", ",", "growth_rate", "=", "48", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.densenet_cifar": [[107, 109], ["densenet.DenseNet"], "function", ["None"], ["", "def", "densenet_cifar", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "24", ",", "16", "]", ",", "growth_rate", "=", "12", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.test": [[115, 120], ["densenet.densenet_cifar", "torch.randn", "torch.randn", "torch.randn", "densenet_cifar.", "print"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.cifar_models.densenet.densenet_cifar"], ["def", "test", "(", ")", ":", "\n", "    ", "net", "=", "densenet_cifar", "(", ")", "\n", "x", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", "\n", "y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.VGG.__init__": [[24, 41], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "tools.custom_modules.FakeReLUM", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "vgg.VGG._initialize_weights"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.VGG._initialize_weights"], ["if", "with_latent", ":", "\n", "            ", "return", "out", ",", "latent", "\n", "", "return", "out", "\n", "\n", "", "def", "_make_layers", "(", "self", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.VGG.forward": [[42, 56], ["vgg.VGG.features", "vgg.VGG.avgpool", "vgg.VGG.view", "vgg.VGG.size", "vgg.VGG.last_relu_fake", "vgg.VGG.last_relu"], "methods", ["None"], ["", "", "def", "VGG11", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG11'", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "VGG13", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG13'", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "VGG16", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG16'", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "VGG19", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "VGG", "(", "'VGG19'", ",", "**", "kwargs", ")", "\n", "\n", "", "vgg11", "=", "VGG11", "\n", "vgg13", "=", "VGG13", "\n", "vgg16", "=", "VGG16", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.VGG._initialize_weights": [[57, 69], ["vgg.VGG.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["vgg19", "=", "VGG19", "\n", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.make_layers": [[70, 84], ["torch.Sequential", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg._vgg": [[94, 103], ["vgg.VGG", "vgg.make_layers", "torchvision.models.utils.load_state_dict_from_url", "VGG.load_state_dict"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.make_layers"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.vgg11": [[105, 114], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg._vgg"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.vgg11_bn": [[116, 125], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg._vgg"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.vgg13": [[127, 136], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg._vgg"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.vgg13_bn": [[138, 147], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg._vgg"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.vgg16": [[149, 158], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg._vgg"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.vgg16_bn": [[160, 169], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg._vgg"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.vgg19": [[171, 180], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg._vgg"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg.vgg19_bn": [[182, 191], ["vgg._vgg"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.vgg._vgg"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.BasicBlock.__init__": [[42, 59], ["torch.Module.__init__", "resnet.conv3x3", "norm_layer", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "norm_layer", "ValueError", "NotImplementedError"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv3x3", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv3x3"], ["\n", "def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.BasicBlock.forward": [[60, 80], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample", "tools.custom_modules.FakeReLU.apply"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "fake_relu", "=", "False", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "if", "fake_relu", ":", "\n", "            ", "return", "FakeReLU", ".", "apply", "(", "out", ")", "\n", "", "return", "F", ".", "relu", "(", "out", ")", "\n", "\n", "\n", "", "", "class", "ResNet", "(", "nn", ".", "Module", ")", ":", "\n", "# feat_scale lets us deal with CelebA, other non-32x32 datasets", "\n", "    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ",", "feat_scale", "=", "1", ",", "wm", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "widths", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "widths", "=", "[", "int", "(", "w", "*", "wm", ")", "for", "w", "in", "widths", "]", "\n", "\n", "self", ".", "in_planes", "=", "widths", "[", "0", "]", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "in_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.Bottleneck.__init__": [[86, 102], ["torch.Module.__init__", "resnet.conv1x1", "norm_layer", "resnet.conv3x3", "norm_layer", "resnet.conv1x1", "norm_layer", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv1x1", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv3x3", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv1x1"], ["self", ".", "linear", "=", "nn", ".", "Linear", "(", "feat_scale", "*", "widths", "[", "3", "]", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "SequentialWithArgs", "(", "*", "layers", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "with_latent", "=", "False", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "assert", "(", "not", "no_relu", ")", ",", "\"no_relu not yet supported for this architecture\"", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.Bottleneck.forward": [[103, 127], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample", "tools.custom_modules.FakeReLU.apply"], "methods", ["None"], ["out", "=", "self", ".", "layer4", "(", "out", ",", "fake_relu", "=", "fake_relu", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "pre_out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "final", "=", "self", ".", "linear", "(", "pre_out", ")", "\n", "if", "with_latent", ":", "\n", "            ", "return", "final", ",", "pre_out", "\n", "", "return", "final", "\n", "\n", "", "", "def", "ResNet18", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "ResNet18Wide", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "wm", "=", "5", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "ResNet18Thin", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "wd", "=", ".75", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "ResNet34", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "ResNet50", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "ResNet101", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.ResNet.__init__": [[131, 181], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "resnet.ResNet.modules", "len", "ValueError", "isinstance", "resnet.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer"], ["\n", "", "resnet50", "=", "ResNet50", "\n", "resnet18", "=", "ResNet18", "\n", "resnet101", "=", "ResNet101", "\n", "resnet152", "=", "ResNet152", "\n", "resnet18wide", "=", "ResNet18Wide", "\n", "\n", "# resnet18thin = ResNet18Thin", "\n", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "ResNet18", "(", ")", "\n", "y", "=", "net", "(", "torch", ".", "randn", "(", "1", ",", "3", ",", "32", ",", "32", ")", ")", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.ResNet._make_layer": [[182, 205], ["layers.append", "range", "tools.custom_modules.SequentialWithArgs", "torch.Sequential", "torch.Sequential", "block", "layers.append", "resnet.conv1x1", "norm_layer", "block"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv1x1"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.ResNet._forward": [[207, 224], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "resnet.ResNet.fc"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.conv3x3": [[27, 31], ["torch.Conv2d"], "function", ["None"], ["nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ",", "fake_relu", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.conv1x1": [[33, 36], ["torch.Conv2d"], "function", ["None"], ["out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "if", "fake_relu", ":", "\n", "            ", "return", "FakeReLU", ".", "apply", "(", "out", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet": [[229, 236], ["resnet.ResNet", "torch.hub.load_state_dict_from_url", "ResNet.load_state_dict"], "function", ["None"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.resnet18": [[238, 248], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.resnet34": [[251, 261], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.resnet50": [[264, 274], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.resnet101": [[277, 287], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.resnet152": [[290, 300], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.resnext50_32x4d": [[303, 315], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.resnext101_32x8d": [[318, 330], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.wide_resnet50_2": [[333, 349], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.wide_resnet50_3": [[351, 360], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.wide_resnet50_4": [[362, 371], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.wide_resnet50_5": [[373, 382], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.wide_resnet50_6": [[384, 393], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet.wide_resnet101_2": [[395, 411], ["resnet._resnet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.resnet._resnet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseLayer.__init__": [[24, 38], ["torch.Module.__init__", "float", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["\n", "", "", "class", "Transition", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ")", ":", "\n", "        ", "super", "(", "Transition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "2", ")", "\n", "return", "out", "\n", "\n", "\n", "", "", "class", "DenseNet", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "block", ",", "nblocks", ",", "growth_rate", "=", "12", ",", "reduction", "=", "0.5", ",", "num_classes", "=", "10", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseLayer.bn_function": [[39, 44], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "densenet._DenseLayer.conv1", "densenet._DenseLayer.relu1", "densenet._DenseLayer.norm1"], "methods", ["None"], ["        ", "super", "(", "DenseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "growth_rate", "=", "growth_rate", "\n", "\n", "num_planes", "=", "2", "*", "growth_rate", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "num_planes", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseLayer.any_requires_grad": [[46, 52], ["None"], "methods", ["None"], ["num_planes", "+=", "nblocks", "[", "0", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans1", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense2", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "1", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "1", "]", "*", "growth_rate", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseLayer.call_checkpoint_bottleneck": [[54, 60], ["torch.checkpoint", "torch.checkpoint", "torch.checkpoint", "torch.checkpoint", "densenet._DenseLayer.bn_function"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseLayer.bn_function"], ["self", ".", "trans2", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n", "num_planes", "=", "out_planes", "\n", "\n", "self", ".", "dense3", "=", "self", ".", "_make_dense_layers", "(", "block", ",", "num_planes", ",", "nblocks", "[", "2", "]", ")", "\n", "num_planes", "+=", "nblocks", "[", "2", "]", "*", "growth_rate", "\n", "out_planes", "=", "int", "(", "math", ".", "floor", "(", "num_planes", "*", "reduction", ")", ")", "\n", "self", ".", "trans3", "=", "Transition", "(", "num_planes", ",", "out_planes", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseLayer.forward": [[73, 92], ["isinstance", "densenet._DenseLayer.conv2", "densenet._DenseLayer.any_requires_grad", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "densenet._DenseLayer.call_checkpoint_bottleneck", "densenet._DenseLayer.bn_function", "densenet._DenseLayer.relu2", "torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "Exception", "densenet._DenseLayer.norm2"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseLayer.any_requires_grad", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseLayer.call_checkpoint_bottleneck", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseLayer.bn_function"], ["in_planes", "+=", "self", ".", "growth_rate", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "with_latent", "=", "False", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "assert", "not", "no_relu", ",", "\"DenseNet has no pre-ReLU activations, no_relu not supported\"", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "trans1", "(", "self", ".", "dense1", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans2", "(", "self", ".", "dense2", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "trans3", "(", "self", ".", "dense3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "dense4", "(", "out", ")", "\n", "if", "fake_relu", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "FakeReLU", ".", "apply", "(", "self", ".", "bn", "(", "out", ")", ")", ",", "4", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "F", ".", "relu", "(", "self", ".", "bn", "(", "out", ")", ")", ",", "4", ")", "\n", "", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "latent", "=", "out", ".", "clone", "(", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "if", "with_latent", ":", "\n", "            ", "return", "out", ",", "latent", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseBlock.__init__": [[97, 108], ["torch.ModuleDict.__init__", "range", "densenet._DenseLayer", "densenet._DenseBlock.add_module"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["\n", "", "def", "DenseNet169", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "32", ",", "32", "]", ",", "growth_rate", "=", "32", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "DenseNet201", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "48", ",", "32", "]", ",", "growth_rate", "=", "32", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "DenseNet161", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "36", ",", "24", "]", ",", "growth_rate", "=", "48", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "densenet_cifar", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "DenseNet", "(", "Bottleneck", ",", "[", "6", ",", "12", ",", "24", ",", "16", "]", ",", "growth_rate", "=", "12", ",", "**", "kwargs", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._DenseBlock.forward": [[109, 115], ["densenet._DenseBlock.items", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "layer", "features.append"], "methods", ["None"], ["\n", "", "densenet121", "=", "DenseNet121", "\n", "densenet161", "=", "DenseNet161", "\n", "densenet169", "=", "DenseNet169", "\n", "densenet201", "=", "DenseNet201", "\n", "\n", "def", "test", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._Transition.__init__": [[118, 125], ["torch.Sequential.__init__", "densenet._Transition.add_module", "densenet._Transition.add_module", "densenet._Transition.add_module", "densenet._Transition.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["y", "=", "net", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet.DenseNet.__init__": [[145, 193], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "enumerate", "densenet.DenseNet.features.add_module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "densenet.DenseNet.modules", "collections.OrderedDict", "densenet._DenseBlock", "densenet.DenseNet.features.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "isinstance", "densenet._Transition", "densenet.DenseNet.features.add_module", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "len", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet.DenseNet.forward": [[194, 210], ["densenet.DenseNet.features", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.adaptive_avg_pool2d", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.relu.clone", "densenet.DenseNet.classifier", "tools.custom_modules.FakeReLU.apply", "torch.relu", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._load_state_dict": [[211, 227], ["re.compile", "torch.hub.load_state_dict_from_url", "list", "model.load_state_dict", "torch.hub.load_state_dict_from_url.keys", "re.compile.match", "pattern.match.group", "pattern.match.group"], "function", ["None"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._densenet": [[229, 235], ["densenet.DenseNet", "densenet._load_state_dict"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._load_state_dict"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet.densenet121": [[237, 249], ["densenet._densenet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._densenet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet.densenet161": [[252, 264], ["densenet._densenet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._densenet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet.densenet169": [[267, 279], ["densenet._densenet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._densenet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet.densenet201": [[282, 294], ["densenet._densenet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.densenet._densenet"], []], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.alexnet.AlexNet.__init__": [[12, 40], ["torch.Module.__init__", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.ReLU", "tools.custom_modules.FakeReLUM", "torch.Linear", "torch.Conv2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.ReLU", "torch.MaxPool2d", "torch.Dropout", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "super", "(", "AlexNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "11", ",", "stride", "=", "4", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "192", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "192", ",", "384", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "384", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "6", ",", "6", ")", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "256", "*", "6", "*", "6", ",", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "\n", ")", "\n", "self", ".", "last_relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "last_relu_fake", "=", "FakeReLUM", "(", ")", "\n", "self", ".", "last_layer", "=", "nn", ".", "Linear", "(", "4096", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.alexnet.AlexNet.forward": [[41, 55], ["alexnet.AlexNet.features", "alexnet.AlexNet.avgpool", "x.view.view.view", "alexnet.AlexNet.classifier", "alexnet.AlexNet.last_layer", "x.view.view.size", "alexnet.AlexNet.last_relu_fake", "alexnet.AlexNet.last_relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "with_latent", "=", "False", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "256", "*", "6", "*", "6", ")", "\n", "x_latent", "=", "self", ".", "classifier", "(", "x", ")", "\n", "x_relu", "=", "self", ".", "last_relu_fake", "(", "x_latent", ")", "if", "fake_relu", "else", "self", ".", "last_relu", "(", "x_latent", ")", "\n", "x_out", "=", "self", ".", "last_layer", "(", "x_relu", ")", "\n", "\n", "if", "with_latent", "and", "no_relu", ":", "\n", "            ", "return", "x_out", ",", "x_latent", "\n", "", "if", "with_latent", ":", "\n", "            ", "return", "x_out", ",", "x_relu", "\n", "", "return", "x_out", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.alexnet.alexnet": [[56, 70], ["alexnet.AlexNet", "torchvision.models.utils.load_state_dict_from_url", "AlexNet.load_state_dict"], "function", ["None"], ["", "", "def", "alexnet", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"AlexNet model architecture from the\n    `\"One weird trick...\" <https://arxiv.org/abs/1404.5997>`_ paper.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "model", "=", "AlexNet", "(", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "state_dict", "=", "load_state_dict_from_url", "(", "model_urls", "[", "'alexnet'", "]", ",", "\n", "progress", "=", "progress", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.BasicBlock.__init__": [[23, 32], ["torch.Module.__init__", "leaky_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "leaky_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv3x3", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.BasicBlock.forward": [[33, 54], ["leaky_resnet.BasicBlock.conv1", "leaky_resnet.BasicBlock.bn1", "leaky_resnet.BasicBlock.relu", "leaky_resnet.BasicBlock.conv2", "leaky_resnet.BasicBlock.bn2", "leaky_resnet.BasicBlock.clone", "leaky_resnet.BasicBlock.relu", "leaky_resnet.BasicBlock.downsample", "tools.custom_modules.FakeReLU.apply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "pre_out", "=", "out", ".", "clone", "(", ")", "\n", "\n", "if", "fake_relu", ":", "\n", "            ", "return", "FakeReLU", ".", "apply", "(", "out", ")", "\n", "", "if", "no_relu", ":", "\n", "            ", "return", "out", "\n", "", "return", "self", ".", "relu", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.Bottleneck.__init__": [[58, 69], ["torch.Module.__init__", "leaky_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "leaky_resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "leaky_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv1x1", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv3x3", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "planes", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.Bottleneck.forward": [[70, 95], ["leaky_resnet.Bottleneck.conv1", "leaky_resnet.Bottleneck.bn1", "leaky_resnet.Bottleneck.relu", "leaky_resnet.Bottleneck.conv2", "leaky_resnet.Bottleneck.bn2", "leaky_resnet.Bottleneck.relu", "leaky_resnet.Bottleneck.conv3", "leaky_resnet.Bottleneck.bn3", "leaky_resnet.Bottleneck.relu", "leaky_resnet.Bottleneck.downsample", "tools.custom_modules.FakeReLU.apply"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "\n", "if", "fake_relu", ":", "\n", "            ", "return", "FakeReLU", ".", "apply", "(", "out", ")", "\n", "", "if", "no_relu", ":", "\n", "            ", "return", "out", "\n", "\n", "", "return", "self", ".", "relu", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet.__init__": [[97, 128], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "leaky_resnet.ResNet._make_layer", "leaky_resnet.ResNet._make_layer", "leaky_resnet.ResNet._make_layer", "leaky_resnet.ResNet._make_layer", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "leaky_resnet.ResNet.modules", "isinstance", "leaky_resnet.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ",", "zero_init_residual", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "LeakyReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet._make_layer": [[129, 144], ["layers.append", "range", "tools.custom_modules.SequentialWithArgs", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "leaky_resnet.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "SequentialWithArgs", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.ResNet.forward": [[145, 162], ["leaky_resnet.ResNet.conv1", "leaky_resnet.ResNet.bn1", "leaky_resnet.ResNet.relu", "leaky_resnet.ResNet.maxpool", "leaky_resnet.ResNet.layer1", "leaky_resnet.ResNet.layer2", "leaky_resnet.ResNet.layer3", "leaky_resnet.ResNet.layer4", "leaky_resnet.ResNet.avgpool", "leaky_resnet.ResNet.view", "leaky_resnet.ResNet.fc", "leaky_resnet.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "with_latent", "=", "False", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ",", "fake_relu", "=", "fake_relu", ",", "no_relu", "=", "no_relu", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "pre_out", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "final", "=", "self", ".", "fc", "(", "pre_out", ")", "\n", "if", "with_latent", ":", "\n", "            ", "return", "final", ",", "pre_out", "\n", "", "return", "final", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv3x3": [[9, 13], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.conv1x1": [[15, 18], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.leaky_resnet18": [[163, 172], ["leaky_resnet.ResNet"], "function", ["None"], ["", "", "def", "leaky_resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "raise", "NotImplementedError", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.leaky_resnet34": [[174, 183], ["leaky_resnet.ResNet"], "function", ["None"], ["", "def", "leaky_resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "raise", "NotImplementedError", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.leaky_resnet50": [[185, 194], ["leaky_resnet.ResNet"], "function", ["None"], ["", "def", "leaky_resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "raise", "NotImplementedError", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.leaky_resnet101": [[196, 205], ["leaky_resnet.ResNet"], "function", ["None"], ["", "def", "leaky_resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "raise", "NotImplementedError", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.leaky_resnet.leaky_resnet152": [[207, 216], ["leaky_resnet.ResNet"], "function", ["None"], ["", "def", "leaky_resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "raise", "NotImplementedError", "\n", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.squeezenet.Fire.__init__": [[18, 30], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "squeeze_planes", ",", "\n", "expand1x1_planes", ",", "expand3x3_planes", ")", ":", "\n", "        ", "super", "(", "Fire", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "squeeze", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "squeeze_planes", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "squeeze_activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "expand1x1", "=", "nn", ".", "Conv2d", "(", "squeeze_planes", ",", "expand1x1_planes", ",", "\n", "kernel_size", "=", "1", ")", "\n", "self", ".", "expand1x1_activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "expand3x3", "=", "nn", ".", "Conv2d", "(", "squeeze_planes", ",", "expand3x3_planes", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "expand3x3_activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.squeezenet.Fire.forward": [[31, 37], ["squeezenet.Fire.squeeze_activation", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "squeezenet.Fire.squeeze", "squeezenet.Fire.expand1x1_activation", "squeezenet.Fire.expand3x3_activation", "squeezenet.Fire.expand1x1", "squeezenet.Fire.expand3x3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "squeeze_activation", "(", "self", ".", "squeeze", "(", "x", ")", ")", "\n", "return", "torch", ".", "cat", "(", "[", "\n", "self", ".", "expand1x1_activation", "(", "self", ".", "expand1x1", "(", "x", ")", ")", ",", "\n", "self", ".", "expand3x3_activation", "(", "self", ".", "expand3x3", "(", "x", ")", ")", "\n", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.squeezenet.SqueezeNet.__init__": [[41, 99], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "tools.custom_modules.FakeReLUM", "squeezenet.SqueezeNet.modules", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "isinstance", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "squeezenet.Fire", "squeezenet.Fire", "squeezenet.Fire", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "squeezenet.Fire", "squeezenet.Fire", "squeezenet.Fire", "squeezenet.Fire", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "squeezenet.Fire", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ValueError", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "squeezenet.Fire", "squeezenet.Fire", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "squeezenet.Fire", "squeezenet.Fire", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "squeezenet.Fire", "squeezenet.Fire", "squeezenet.Fire", "squeezenet.Fire", "torch.normal_", "torch.normal_", "torch.normal_", "torch.kaiming_uniform_", "torch.kaiming_uniform_", "torch.kaiming_uniform_", "torch.constant_", "torch.constant_", "torch.constant_"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "version", "=", "'1_0'", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "super", "(", "SqueezeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "if", "version", "==", "'1_0'", ":", "\n", "            ", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "96", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", ",", "\n", "Fire", "(", "96", ",", "16", ",", "64", ",", "64", ")", ",", "\n", "Fire", "(", "128", ",", "16", ",", "64", ",", "64", ")", ",", "\n", "Fire", "(", "128", ",", "32", ",", "128", ",", "128", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", ",", "\n", "Fire", "(", "256", ",", "32", ",", "128", ",", "128", ")", ",", "\n", "Fire", "(", "256", ",", "48", ",", "192", ",", "192", ")", ",", "\n", "Fire", "(", "384", ",", "48", ",", "192", ",", "192", ")", ",", "\n", "Fire", "(", "384", ",", "64", ",", "256", ",", "256", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", ",", "\n", "Fire", "(", "512", ",", "64", ",", "256", ",", "256", ")", ",", "\n", ")", "\n", "", "elif", "version", "==", "'1_1'", ":", "\n", "            ", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", ",", "\n", "Fire", "(", "64", ",", "16", ",", "64", ",", "64", ")", ",", "\n", "Fire", "(", "128", ",", "16", ",", "64", ",", "64", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", ",", "\n", "Fire", "(", "128", ",", "32", ",", "128", ",", "128", ")", ",", "\n", "Fire", "(", "256", ",", "32", ",", "128", ",", "128", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", ",", "\n", "Fire", "(", "256", ",", "48", ",", "192", ",", "192", ")", ",", "\n", "Fire", "(", "384", ",", "48", ",", "192", ",", "192", ")", ",", "\n", "Fire", "(", "384", ",", "64", ",", "256", ",", "256", ")", ",", "\n", "Fire", "(", "512", ",", "64", ",", "256", ",", "256", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"Unsupported SqueezeNet version {version}:\"", "\n", "\"1_0 or 1_1 expected\"", ".", "format", "(", "version", "=", "version", ")", ")", "\n", "\n", "# Final convolution is initialized differently from the rest", "\n", "", "final_conv", "=", "nn", ".", "Conv2d", "(", "512", ",", "self", ".", "num_classes", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", ",", "\n", "final_conv", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", ")", "\n", "self", ".", "last_relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "last_relu_fake", "=", "FakeReLUM", "(", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "if", "m", "is", "final_conv", ":", "\n", "                    ", "init", ".", "normal_", "(", "m", ".", "weight", ",", "mean", "=", "0.0", ",", "std", "=", "0.01", ")", "\n", "", "else", ":", "\n", "                    ", "init", ".", "kaiming_uniform_", "(", "m", ".", "weight", ")", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.squeezenet.SqueezeNet.forward": [[100, 112], ["squeezenet.SqueezeNet.features", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten", "squeezenet.SqueezeNet.last_relu", "squeezenet.SqueezeNet.classifier_last_relu_fake"], "methods", ["None"], ["", "", "", "", "def", "forward", "(", "self", ",", "x", ",", "with_latent", "=", "False", ",", "fake_relu", "=", "False", ",", "no_relu", "=", "False", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x_latent", "=", "self", ".", "classifier", "[", ":", "2", "]", "(", "x", ")", "\n", "x_relu", "=", "self", ".", "last_relu", "(", "x_latent", ")", "if", "not", "fake_relu", "else", "self", ".", "classifier_last_relu_fake", "(", "x_latent", ")", "\n", "x_out", "=", "self", ".", "classifier", "[", "-", "1", ":", "]", "(", "x_relu", ")", "\n", "x_out", "=", "torch", ".", "flatten", "(", "x_out", ",", "1", ")", "\n", "\n", "if", "with_latent", "and", "no_relu", ":", "\n", "            ", "return", "x_out", ",", "x_latent", "# potentially will need to flatten x_latent", "\n", "", "if", "with_latent", ":", "\n", "            ", "return", "x_out", ",", "x_relu", "# potentially will need to flatten x_relu ", "\n", "", "return", "x_out", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.squeezenet._squeezenet": [[114, 122], ["squeezenet.SqueezeNet", "torchvision.models.utils.load_state_dict_from_url", "SqueezeNet.load_state_dict"], "function", ["None"], ["", "", "def", "_squeezenet", "(", "version", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "SqueezeNet", "(", "version", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "arch", "=", "'squeezenet'", "+", "version", "\n", "state_dict", "=", "load_state_dict_from_url", "(", "model_urls", "[", "arch", "]", ",", "\n", "progress", "=", "progress", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.squeezenet.squeezenet1_0": [[124, 134], ["squeezenet._squeezenet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.squeezenet._squeezenet"], ["", "def", "squeezenet1_0", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"SqueezeNet model architecture from the `\"SqueezeNet: AlexNet-level\n    accuracy with 50x fewer parameters and <0.5MB model size\"\n    <https://arxiv.org/abs/1602.07360>`_ paper.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_squeezenet", "(", "'1_0'", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.squeezenet.squeezenet1_1": [[137, 148], ["squeezenet._squeezenet"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.imagenet_models.squeezenet._squeezenet"], ["", "def", "squeezenet1_1", "(", "pretrained", "=", "False", ",", "progress", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"SqueezeNet 1.1 model from the `official SqueezeNet repo\n    <https://github.com/DeepScale/SqueezeNet/tree/master/SqueezeNet_v1.1>`_.\n    SqueezeNet 1.1 has 2.4x less computation and slightly fewer parameters\n    than SqueezeNet 1.0, without sacrificing accuracy.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "return", "_squeezenet", "(", "'1_1'", ",", "pretrained", ",", "progress", ",", "**", "kwargs", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.data_utils.ModelNet_Loader.__init__": [[92, 100], ["torch.utils.data.Dataset.__init__", "data_utils.make_dataset_modelnet40_10k"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.data_utils.make_dataset_modelnet40_10k"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "num_points", ",", "partition", "=", "'train'", ")", ":", "\n", "        ", "super", "(", "ModelNet_Loader", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "opt", "=", "opt", "\n", "self", ".", "partition", "=", "partition", "\n", "self", ".", "num_points", "=", "num_points", "\n", "\n", "self", ".", "dataset", "=", "make_dataset_modelnet40_10k", "(", "opt", ",", "self", ".", "partition", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.data_utils.ModelNet_Loader.__len__": [[101, 103], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.data_utils.ModelNet_Loader.__getitem__": [[104, 115], ["numpy.load", "pointcloud.astype.astype.astype"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "file_name", ",", "pc_np_file", ",", "class_id", "=", "self", ".", "dataset", "[", "index", "]", "\n", "\n", "data", "=", "np", ".", "load", "(", "pc_np_file", ")", "\n", "\n", "pointcloud", "=", "data", "[", "0", ":", "self", ".", "num_points", ",", "0", ":", "3", "]", "# Nx3", "\n", "\n", "# convert to tensor", "\n", "pointcloud", "=", "pointcloud", ".", "astype", "(", "np", ".", "float32", ")", "# Nx3", "\n", "\n", "return", "file_name", ",", "pointcloud", ",", "class_id", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.data_utils.set_random": [[8, 17], ["random.seed", "str", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all"], "function", ["None"], ["def", "set_random", "(", "seed", "=", "0", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "os", ".", "environ", "[", "'PYTHONHASHSEED'", "]", "=", "str", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.data_utils.make_dataset_modelnet40_10k": [[19, 57], ["open", "open.close", "enumerate", "os.path.join", "str.rstrip", "open", "open.close", "shape_list.index", "dataset.append", "open.readlines", "os.path.join", "str.rstrip", "open", "open.close", "Exception", "os.path.join", "open.readlines", "os.path.join", "str.rstrip", "open.readlines"], "function", ["None"], ["", "def", "make_dataset_modelnet40_10k", "(", "opt", ",", "mode", ")", ":", "\n", "    ", "dataset", "=", "[", "]", "\n", "\n", "DATA_DIR", "=", "opt", ".", "root", "\n", "\n", "if", "opt", ".", "dataset", "==", "'modelnet10'", ":", "\n", "        ", "classes", "=", "10", "\n", "", "else", ":", "\n", "        ", "classes", "=", "40", "\n", "\n", "", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "DATA_DIR", ",", "'modelnet%d_shape_names.txt'", "%", "classes", ")", ")", "\n", "shape_list", "=", "[", "str", ".", "rstrip", "(", ")", "for", "str", "in", "f", ".", "readlines", "(", ")", "]", "\n", "f", ".", "close", "(", ")", "\n", "\n", "if", "'train'", "==", "mode", ":", "\n", "        ", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "DATA_DIR", ",", "'modelnet%d_train_dgcnn_0216.txt'", "%", "classes", ")", ",", "\n", "'r'", ")", "# rqh, revise, original: modelnet%d_train.txt", "\n", "lines", "=", "[", "str", ".", "rstrip", "(", ")", "for", "str", "in", "f", ".", "readlines", "(", ")", "]", "\n", "f", ".", "close", "(", ")", "\n", "", "elif", "'test'", "==", "mode", ":", "\n", "        ", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "DATA_DIR", ",", "'modelnet%d_test.txt'", "%", "classes", ")", ",", "'r'", ")", "\n", "lines", "=", "[", "str", ".", "rstrip", "(", ")", "for", "str", "in", "f", ".", "readlines", "(", ")", "]", "\n", "f", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Network mode error.'", ")", "\n", "\n", "", "for", "i", ",", "name", "in", "enumerate", "(", "lines", ")", ":", "\n", "# locate the folder name", "\n", "        ", "folder", "=", "name", "[", "0", ":", "-", "5", "]", "\n", "file_name", "=", "name", "\n", "\n", "# get the label", "\n", "label", "=", "shape_list", ".", "index", "(", "folder", ")", "\n", "\n", "item", "=", "(", "file_name", ",", "os", ".", "path", ".", "join", "(", "DATA_DIR", ",", "folder", ",", "file_name", "+", "'.npy'", ")", ",", "label", ")", "\n", "dataset", ".", "append", "(", "item", ")", "\n", "\n", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.data_utils.get_folder_name_list": [[59, 66], ["os.path.join", "open", "open.close", "os.path.join", "str.rstrip", "open.readlines"], "function", ["None"], ["", "def", "get_folder_name_list", "(", ")", ":", "\n", "# BASE_DIR = os.path.dirname(os.path.abspath(__file__))", "\n", "    ", "DATA_DIR", "=", "os", ".", "path", ".", "join", "(", "'data'", ",", "'modelnet40_numpy'", ")", "\n", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "DATA_DIR", ",", "'modelnet10_train_dgcnn_0216.txt'", ")", ",", "'r'", ")", "\n", "lines", "=", "[", "str", ".", "rstrip", "(", ")", "for", "str", "in", "f", ".", "readlines", "(", ")", "]", "\n", "f", ".", "close", "(", ")", "\n", "return", "lines", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.data_utils.square_distance": [[68, 89], ["torch.sum().view", "torch.sum().view", "torch.matmul", "dst.permute", "torch.sum", "torch.sum"], "function", ["None"], ["", "def", "square_distance", "(", "src", ",", "dst", ")", ":", "\n", "    ", "\"\"\" Calculate Euclid distance between each two points.\n\n    src^T * dst = xn * xm + yn * ym + zn * zm\uff1b\n    sum(src^2, dim=-1) = xn*xn + yn*yn + zn*zn;\n    sum(dst^2, dim=-1) = xm*xm + ym*ym + zm*zm;\n    dist = (xn - xm)^2 + (yn - ym)^2 + (zn - zm)^2\n         = sum(src**2,dim=-1)+sum(dst**2,dim=-1)-2*src^T*dst\n\n    Input:\n        src: source points, [B, N, C]\n        dst: target points, [B, M, C]\n    Output:\n        dist: per-point square distance, [B, N, M]\n    \"\"\"", "\n", "B", ",", "N", ",", "_", "=", "src", ".", "shape", "\n", "_", ",", "M", ",", "_", "=", "dst", ".", "shape", "\n", "dist", "=", "-", "2", "*", "torch", ".", "matmul", "(", "src", ",", "dst", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "dist", "+=", "torch", ".", "sum", "(", "src", "**", "2", ",", "-", "1", ")", ".", "view", "(", "B", ",", "N", ",", "1", ")", "\n", "dist", "+=", "torch", ".", "sum", "(", "dst", "**", "2", ",", "-", "1", ")", ".", "view", "(", "B", ",", "1", ",", "M", ")", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.plot.draw_hist": [[10, 25], ["matplotlib.subplots", "ax.bar", "ax.bar", "ax.set_xlabel", "ax.set_ylabel", "numpy.arange", "ax.set_xticks", "ax.set_xticklabels", "ax.legend", "fig.tight_layout", "matplotlib.savefig", "matplotlib.close"], "function", ["None"], ["\n", "def", "draw_hist", "(", "arch", ",", "orders", ",", "ori_mean", ",", "adv_mean", ",", "save_name", ")", ":", "\n", "    ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "bar_width", "=", "0.02", "\n", "errorbar_config", "=", "{", "'capsize'", ":", "3", "}", "\n", "ax", ".", "bar", "(", "orders", ",", "ori_mean", ",", "bar_width", ",", "yerr", "=", "None", ",", "error_kw", "=", "errorbar_config", ",", "label", "=", "\"ori_img\"", ")", "\n", "ax", ".", "bar", "(", "orders", "+", "bar_width", ",", "adv_mean", ",", "bar_width", ",", "yerr", "=", "None", ",", "error_kw", "=", "errorbar_config", ",", "label", "=", "\"adv_img\"", ")", "\n", "ax", ".", "set_xlabel", "(", "\"ratio of pixels\"", ")", "\n", "ax", ".", "set_ylabel", "(", "\"interaction\"", ")", "\n", "ax", ".", "set_title", "(", "arch", ")", "\n", "x", "=", "np", ".", "arange", "(", "0.1", ",", "1.1", ",", "0.1", ")", "\n", "ax", ".", "set_xticks", "(", "x", "+", "bar_width", "/", "2", ")", "\n", "ax", ".", "set_xticklabels", "(", "[", "'0.1'", ",", "'0.2'", ",", "'0.3'", ",", "'0.4'", ",", "'0.5'", ",", "'0.6'", ",", "'0.7'", ",", "'0.8'", ",", "'0.9'", ",", "'1.0'", "]", ")", "\n", "ax", ".", "legend", "(", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "save_name", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.plot.get_interaction_all": [[28, 56], ["os.path.join", "numpy.array", "numpy.array", "orders_inter_mean.append", "adv_orders_inter_mean.append", "numpy.array", "numpy.array", "int", "numpy.load", "numpy.mean", "np.array.append", "numpy.load", "numpy.mean", "np.array.append", "numpy.mean", "numpy.mean", "os.path.join", "os.path.join"], "function", ["None"], ["\n", "", "def", "draw_inter_diff", "(", "arch", ",", "orders", ",", "diff", ",", "save_name", ")", ":", "\n", "    ", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", ")", "\n", "ax", ".", "plot", "(", "orders", ",", "diff", ",", "color", "=", "'green'", ")", "\n", "ax", ".", "fill_between", "(", "orders", ",", "0", ",", "diff", ",", "facecolor", "=", "'green'", ",", "alpha", "=", "0.3", ")", "\n", "ax", ".", "set_xlabel", "(", "'ratio of pixels'", ")", "\n", "ax", ".", "set_ylabel", "(", "\"interaction difference\"", ")", "\n", "ax", ".", "set_title", "(", "arch", ")", "\n", "ax", ".", "set_xticks", "(", "np", ".", "arange", "(", "0.1", ",", "1.1", ",", "0.1", ")", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "save_name", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "\n", "", "def", "draw_curve", "(", "arch", ",", "orders", ",", "ori_data", ",", "adv_data", ",", "save_name", ",", "ylabel", "=", "'disentanglement'", ")", ":", "\n", "    ", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "plot", "(", "orders", ",", "ori_data", ",", "label", "=", "'ori_model'", ")", "\n", "plt", ".", "plot", "(", "orders", ",", "adv_data", ",", "label", "=", "'adv_model'", ")", "\n", "plt", ".", "xlabel", "(", "'ratio of pixels'", ")", "\n", "plt", ".", "ylabel", "(", "ylabel", ")", "\n", "plt", ".", "title", "(", "arch", ")", "\n", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xticks", "(", "np", ".", "arange", "(", "0.1", ",", "1.1", ",", "0.1", ")", ")", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "plt", ".", "savefig", "(", "save_name", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "# all original imgs on ori_model and adv_model", "\n", "", "def", "get_disentanglement", "(", "args", ",", "all_imgs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.compute_interactions.compute_order_interaction_img": [[20, 51], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "ori_logits.reshape.reshape", "adv_logits.reshape.reshape", "time.time", "range", "numpy.array().reshape", "numpy.array().reshape", "print", "print", "numpy.save", "numpy.save", "os.path.join", "os.path.join", "range", "os.path.join", "os.path.join", "torch.log_softmax", "torch.log_softmax", "np.array().reshape.append", "np.array().reshape.append", "numpy.array", "numpy.array", "score_ori.item", "score_adv.item", "time.time"], "function", ["None"], ["# robustness library", "\n", "from", "robu", ".", "model_utils", "import", "make_and_restore_model", "\n", "from", "robu", "import", "datasets", "as", "robustdatasets", "\n", "\n", "\n", "\n", "def", "compute_order_interaction_img", "(", "img_name", ",", "lbl", ",", "args", ",", "save_dir", ",", "netout_dir", ")", ":", "\n", "    ", "ori_interaction", "=", "[", "]", "# save order interactions of point-pairs in ori image", "\n", "adv_interaction", "=", "[", "]", "# save order interactions of point-pairs in adv image", "\n", "\n", "ori_logits", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "netout_dir", ",", "'{}_output.pt'", ".", "format", "(", "img_name", ")", ")", ")", "# (pair_num*sample_num*4, 1000)", "\n", "adv_logits", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "netout_dir", ",", "'adv_{}_output.pt'", ".", "format", "(", "img_name", ")", ")", ")", "\n", "\n", "ori_logits", "=", "ori_logits", ".", "reshape", "(", "(", "args", ".", "pair_num", ",", "args", ".", "sample_num", "*", "4", ",", "1000", ")", ")", "\n", "adv_logits", "=", "adv_logits", ".", "reshape", "(", "(", "args", ".", "pair_num", ",", "args", ".", "sample_num", "*", "4", ",", "1000", ")", ")", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "pair_num", ")", ":", "\n", "        ", "output_ori", "=", "ori_logits", "[", "i", ",", ":", ",", ":", "]", "\n", "output_adv", "=", "adv_logits", "[", "i", ",", ":", ",", ":", "]", "\n", "\n", "y_ori", "=", "F", ".", "log_softmax", "(", "output_ori", ",", "dim", "=", "1", ")", "[", ":", ",", "lbl", "[", "0", "]", "]", "\n", "y_adv", "=", "F", ".", "log_softmax", "(", "output_adv", ",", "dim", "=", "1", ")", "[", ":", ",", "lbl", "[", "0", "]", "]", "\n", "\n", "for", "k", "in", "range", "(", "args", ".", "sample_num", ")", ":", "\n", "            ", "score_ori", "=", "y_ori", "[", "4", "*", "k", "]", "+", "y_ori", "[", "4", "*", "k", "+", "3", "]", "-", "y_ori", "[", "4", "*", "k", "+", "1", "]", "-", "y_ori", "[", "4", "*", "k", "+", "2", "]", "\n", "score_adv", "=", "y_adv", "[", "4", "*", "k", "]", "+", "y_adv", "[", "4", "*", "k", "+", "3", "]", "-", "y_adv", "[", "4", "*", "k", "+", "1", "]", "-", "y_adv", "[", "4", "*", "k", "+", "2", "]", "\n", "# cur_score = cur_score - inter_order_0", "\n", "ori_interaction", ".", "append", "(", "score_ori", ".", "item", "(", ")", ")", "\n", "adv_interaction", ".", "append", "(", "score_adv", ".", "item", "(", ")", ")", "\n", "\n", "", "", "ori_interaction", "=", "np", ".", "array", "(", "ori_interaction", ")", ".", "reshape", "(", "-", "1", ",", "args", ".", "sample_num", ")", "\n", "adv_interaction", "=", "np", ".", "array", "(", "adv_interaction", ")", ".", "reshape", "(", "-", "1", ",", "args", ".", "sample_num", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.compute_interactions.compute_interactions": [[53, 73], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "img.to.to", "lbl.to.to", "print", "os.path.join", "os.path.join", "compute_interactions.compute_order_interaction_img", "int", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_order_interaction_img"], ["\n", "print", "(", "'Image: %s, time: %.3f'", "%", "(", "img_name", ",", "time", ".", "time", "(", ")", "-", "tic", ")", ")", "\n", "print", "(", "'--------------------------'", ")", "\n", "tmp", "=", "\"img{}_interaction.npy\"", ".", "format", "(", "img_name", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "tmp", ")", ",", "ori_interaction", ")", "# (pair_num, sample_num)", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"adv_\"", "+", "tmp", ")", ",", "adv_interaction", ")", "\n", "\n", "\n", "", "def", "prepare", "(", "args", ")", ":", "\n", "# prepare data---------------", "\n", "# Only for ImageNet", "\n", "    ", "if", "args", ".", "dataset_name", "==", "\"imagenet\"", ":", "\n", "        ", "class_num", "=", "1000", "\n", "args", ".", "img_size", "=", "224", "\n", "args", ".", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "args", ".", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.compute_interactions.main": [[75, 109], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "str", "data_utils.set_random", "os.path.join", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "torch.utils.data.DataLoader", "compute_interactions.compute_interactions", "os.path.join", "os.path.exists", "os.makedirs", "data_utils.ModelNet_Loader"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.gene_adv_imgs.set_random", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_interactions"], ["# need args.root, args.img_size, args.seed", "\n", "dataset", "=", "ImageNetSelectedDataset", "(", "train", "=", "False", ",", "args", "=", "args", ",", "selected_num", "=", "args", ".", "base_num", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"No such dataset %s!\"", "%", "args", ".", "dataset_name", ")", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ")", "# bs=1", "\n", "\n", "# prepare models----------------", "\n", "if", "args", ".", "adv_model", ":", "\n", "        ", "print", "(", "'Load adversarial model.'", ")", "\n", "ds", "=", "robustdatasets", ".", "ImageNet", "(", "args", ".", "root", ")", "\n", "model", ",", "_", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "dataset", "=", "ds", ",", "\n", "resume_path", "=", "args", ".", "adv_model_path", ",", "\n", "pytorch_pretrained", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Load pytorch pretrained model.'", ")", "\n", "ds", "=", "robustdatasets", ".", "ImageNet", "(", "args", ".", "root", ")", "\n", "model", ",", "_", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "dataset", "=", "ds", ",", "\n", "resume_path", "=", "args", ".", "std_model_path", ",", "\n", "pytorch_pretrained", "=", "False", ")", "\n", "\n", "", "return", "model", ",", "dataloader", "\n", "\n", "\n", "", "def", "compute_interactions", "(", "args", ",", "model", ",", "dataloader", ")", ":", "\n", "    ", "device", "=", "0", "# Do not modify", "\n", "model", ".", "to", "(", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "for", "i", ",", "(", "image_name", ",", "img", ",", "lbl", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "img_name", "=", "image_name", "[", "0", "]", ".", "replace", "(", "'.JPEG'", ",", "''", ")", "\n", "if", "not", "(", "img_name", "+", "'.npy'", "in", "args", ".", "selected_imgs", ")", ":", "\n", "                ", "continue", "\n", "", "print", "(", "\"img: %d\"", "%", "i", ",", "image_name", ",", "'label:'", ",", "lbl", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.gene_adv_imgs.set_random": [[18, 27], ["random.seed", "str", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all"], "function", ["None"], ["def", "set_random", "(", "seed", "=", "0", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "os", ".", "environ", "[", "'PYTHONHASHSEED'", "]", "=", "str", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.gene_adv_imgs.prepare": [[29, 50], ["torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "PointNet2ClsMsg().to.load_state_dict", "PointNet2ClsMsg().to.eval", "data_utils.ModelNet_Loader", "models.pointnet2.PointNet2ClsMsg().to", "ValueError", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "models.pointnet2.PointNet2ClsMsg"], "function", ["None"], ["", "def", "prepare", "(", "args", ")", ":", "\n", "    ", "test_loader", "=", "DataLoader", "(", "ModelNet_Loader", "(", "args", ",", "partition", "=", "'train'", ",", "num_points", "=", "args", ".", "num_points", ")", ",", "num_workers", "=", "8", ",", "\n", "batch_size", "=", "1", ",", "shuffle", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "if", "args", ".", "arch", "==", "'pointnet2'", ":", "\n", "        ", "args", ".", "k", "=", "20", "\n", "model", "=", "PointNet2ClsMsg", "(", "args", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "\"The network architecture is not supported!\"", ")", "\n", "", "state_dict", "=", "torch", ".", "load", "(", "args", ".", "model_path", ",", "map_location", "=", "device", ")", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "\n", "# only for model trained on 2 gpus", "\n", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "        ", "name", "=", "k", "[", "7", ":", "]", "\n", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "model", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "model", "=", "model", ".", "eval", "(", ")", "\n", "return", "model", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.gene_adv_imgs.attack_magnitude_untarget": [[52, 120], ["model.eval", "torch.clamp", "torch.clamp", "torch.clamp", "range", "print", "torch.clamp.requires_grad_", "x_natural.detach", "torch.zeros_like().to().detach", "torch.zeros_like().to().detach", "torch.zeros_like().to().detach", "delta.renorm.normal_", "delta.renorm.view", "delta.view.norm().view", "torch.zeros_like().uniform_", "torch.zeros_like().uniform_", "torch.zeros_like().uniform_", "torch.enable_grad", "torch.enable_grad", "torch.enable_grad", "model", "torch.cross_entropy", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "model", "torch.argmax", "torch.argmax", "torch.argmax", "print", "print", "torch.randn().to().detach", "torch.randn().to().detach", "torch.randn().to().detach", "delta.renorm.size", "delta.renorm.size", "x_natural.detach", "torch.min", "torch.min", "torch.min", "torch.clamp", "torch.clamp", "torch.clamp", "torch.zeros_like().to", "torch.zeros_like().to", "torch.zeros_like().to", "delta.view.norm", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.clamp.detach", "torch.max", "torch.max", "torch.max", "torch.norm().view", "torch.norm().view", "torch.norm().view", "delta.renorm.renorm", "torch.clamp", "torch.clamp", "torch.clamp", "print", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.sign", "torch.sign", "torch.sign", "torch.clamp.detach", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "grad.detach", "torch.norm", "torch.norm", "torch.norm", "torch.randn", "torch.randn", "torch.randn", "grad.view"], "function", ["None"], ["", "def", "attack_magnitude_untarget", "(", "model", ",", "\n", "x_natural", ",", "\n", "y", ",", "\n", "ori_logit", ",", "\n", "device", ",", "\n", "step_size", "=", "2", "/", "255", ",", "\n", "epsilon", "=", "16", "/", "255", ",", "\n", "perturb_steps", "=", "100", ",", "\n", "threshold", "=", "4.0", ",", "\n", "distance", "=", "'l_inf'", "\n", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "if", "distance", "==", "'l_inf'", ":", "\n", "        ", "x_adv", "=", "x_natural", ".", "detach", "(", ")", "+", "0.001", "*", "torch", ".", "randn", "(", "x_natural", ".", "shape", ")", ".", "to", "(", "device", ")", ".", "detach", "(", ")", "# random start", "\n", "", "elif", "distance", "==", "'l_2'", ":", "\n", "        ", "delta", "=", "torch", ".", "zeros_like", "(", "x_natural", ")", ".", "to", "(", "device", ")", ".", "detach", "(", ")", "# (B,3,1024)", "\n", "delta", ".", "normal_", "(", ")", "\n", "d_flat", "=", "delta", ".", "view", "(", "delta", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "n", "=", "d_flat", ".", "norm", "(", "p", "=", "2", ",", "dim", "=", "1", ")", ".", "view", "(", "delta", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "r", "=", "torch", ".", "zeros_like", "(", "n", ")", ".", "uniform_", "(", "0", ",", "1", ")", "\n", "delta", "*=", "r", "/", "n", "*", "epsilon", "\n", "x_adv", "=", "x_natural", ".", "detach", "(", ")", "+", "delta", "\n", "", "x_adv", "=", "torch", ".", "clamp", "(", "x_adv", ",", "min", "=", "-", "1.0", ",", "max", "=", "1.0", ")", "\n", "\n", "for", "_", "in", "range", "(", "perturb_steps", ")", ":", "\n", "        ", "x_adv", ".", "requires_grad_", "(", ")", "\n", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "output", "=", "model", "(", "x_adv", ")", "\n", "loss_ce", "=", "F", ".", "cross_entropy", "(", "output", ",", "y", ")", "\n", "\n", "", "grad", "=", "torch", ".", "autograd", ".", "grad", "(", "loss_ce", ",", "[", "x_adv", "]", ")", "[", "0", "]", "\n", "is_valid", "=", "False", "\n", "while", "not", "is_valid", ":", "\n", "            ", "if", "distance", "==", "'l_inf'", ":", "\n", "                ", "x_adv_tmp", "=", "x_adv", ".", "detach", "(", ")", "+", "step_size", "*", "torch", ".", "sign", "(", "grad", ".", "detach", "(", ")", ")", "\n", "x_adv_tmp", "=", "torch", ".", "min", "(", "torch", ".", "max", "(", "x_adv_tmp", ",", "x_natural", "-", "epsilon", ")", ",", "x_natural", "+", "epsilon", ")", "\n", "x_adv_tmp", "=", "torch", ".", "clamp", "(", "x_adv_tmp", ",", "-", "1.0", ",", "1.0", ")", "\n", "", "elif", "distance", "==", "'l_2'", ":", "\n", "                ", "g_norm", "=", "torch", ".", "norm", "(", "grad", ".", "view", "(", "grad", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "scaled_g", "=", "grad", "/", "(", "g_norm", "+", "1e-10", ")", "\n", "x_adv_tmp", "=", "x_adv", ".", "detach", "(", ")", "+", "step_size", "*", "scaled_g", "\n", "delta", "=", "x_adv_tmp", "-", "x_natural", "\n", "delta", "=", "delta", ".", "renorm", "(", "p", "=", "2", ",", "dim", "=", "0", ",", "maxnorm", "=", "epsilon", ")", "\n", "x_adv_tmp", "=", "torch", ".", "clamp", "(", "x_natural", "+", "delta", ",", "-", "1.0", ",", "1.0", ")", "\n", "\n", "", "output", "=", "model", "(", "x_adv_tmp", ")", "\n", "pred_adv", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "if", "pred_adv", "[", "0", "]", "==", "y", "[", "0", "]", ":", "\n", "                ", "x_adv", "=", "x_adv_tmp", "\n", "break", "# to next iteration", "\n", "", "out_gt", "=", "output", "[", ":", ",", "y", "[", "0", "]", "]", "\n", "dist", "=", "ori_logit", "-", "out_gt", "\n", "if", "step_size", "<", "1e-6", ":", "\n", "                ", "return", "x_adv_tmp", "\n", "", "print", "(", "'step_size:'", ",", "step_size", ")", "\n", "print", "(", "'dist:'", ",", "ori_logit", ",", "out_gt", ",", "dist", ")", "\n", "if", "dist", ">", "threshold", "+", "0.5", ":", "\n", "                ", "is_valid", "=", "False", "\n", "step_size", "/=", "2", "\n", "", "elif", "dist", ">", "threshold", ":", "\n", "                ", "print", "(", "'Successful attacking to threshold.'", ")", "\n", "return", "x_adv_tmp", "\n", "", "else", ":", "\n", "                ", "is_valid", "=", "True", "\n", "x_adv", "=", "x_adv_tmp", "\n", "\n", "", "", "", "print", "(", "'Not successful to threshold after attacking {} steps.'", ".", "format", "(", "perturb_steps", ")", ")", "\n", "return", "x_adv", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.gene_adv_imgs.gene_advs": [[122, 166], ["torch.device", "torch.device", "torch.device", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "print", "img.permute.to", "lbl.to.to", "img.permute.permute", "model", "torch.argmax", "torch.argmax", "torch.argmax", "print", "print", "torch.argmax.item", "lbl.to.item", "attack_magnitude_untarget().to", "model", "torch.argmax", "torch.argmax", "torch.argmax", "print", "print", "torch.abs", "torch.abs", "torch.abs", "torch.sqrt", "torch.sqrt", "torch.sqrt", "img_adv.detach().cpu().numpy.detach().cpu().numpy", "numpy.save", "res.append", "gene_adv_imgs.attack_magnitude_untarget", "lbl.to.item", "torch.argmax.item", "torch.sqrt.item", "torch.norm().pow", "torch.norm().pow", "torch.norm().pow", "img_adv.detach().cpu().numpy.detach().cpu", "torch.norm", "torch.norm", "torch.norm", "img_adv.detach().cpu().numpy.detach"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.gene_adv_imgs.attack_magnitude_untarget"], ["", "def", "gene_advs", "(", "model", ",", "dataloader", ",", "args", ",", "save_dir", ",", "threshold", ")", ":", "\n", "    ", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "res", "=", "[", "]", "\n", "count", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "image_name", ",", "img", ",", "lbl", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "if", "i", ">=", "args", ".", "selected_num", ":", "\n", "                ", "break", "\n", "", "img_name", "=", "image_name", "[", "0", "]", "\n", "print", "(", "\"img: %d\"", "%", "i", ",", "img_name", ",", "'label:'", ",", "lbl", ")", "\n", "B", ",", "N", "=", "img", ".", "shape", "[", "0", "]", ",", "args", ".", "num_points", "\n", "img", "=", "img", ".", "to", "(", "device", ")", "# (B, 1024, 3), here B=1", "\n", "lbl", "=", "lbl", ".", "to", "(", "device", ")", "# (B,)", "\n", "img", "=", "img", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "# (B,3,1024)", "\n", "\n", "ori_output", "=", "model", "(", "img", ")", "# (B,Classes=10)", "\n", "pred_ori", "=", "torch", ".", "argmax", "(", "ori_output", ",", "dim", "=", "1", ")", "\n", "pred_logit", "=", "ori_output", "[", ":", ",", "pred_ori", "[", "0", "]", "]", "\n", "print", "(", "'pred:'", ",", "pred_ori", ",", "'pred logit:'", ",", "pred_logit", ")", "\n", "\n", "if", "pred_ori", ".", "item", "(", ")", "==", "lbl", ".", "item", "(", ")", ":", "\n", "                ", "count", "+=", "1", "\n", "img_adv", "=", "attack_magnitude_untarget", "(", "model", ",", "img", ",", "lbl", ",", "pred_logit", ",", "device", ",", "step_size", "=", "args", ".", "step_size", ",", "epsilon", "=", "args", ".", "epsilon", ",", "\n", "perturb_steps", "=", "args", ".", "perturb_steps", ",", "threshold", "=", "threshold", ",", "distance", "=", "args", ".", "distance", ")", ".", "to", "(", "device", ")", "\n", "output", "=", "model", "(", "img_adv", ")", "\n", "pred_adv", "=", "torch", ".", "argmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "out_gt", "=", "output", "[", ":", ",", "lbl", "[", "0", "]", "]", "\n", "dist", "=", "pred_logit", "-", "out_gt", "\n", "if", "dist", ">", "threshold", "and", "dist", "<=", "(", "threshold", "+", "0.5", ")", ":", "\n", "                    ", "print", "(", "\"Dist\"", ",", "dist", ")", "\n", "delta", "=", "torch", ".", "abs", "(", "img_adv", "-", "img", ")", "\n", "avg_delta", "=", "torch", ".", "sqrt", "(", "torch", ".", "norm", "(", "delta", ",", "p", "=", "2", ")", ".", "pow", "(", "2", ")", "/", "(", "N", "*", "3", ")", ")", "\n", "img_adv", "=", "img_adv", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "np", ".", "save", "(", "save_dir", "+", "'/{}.npy'", ".", "format", "(", "img_name", ")", ",", "img_adv", ")", "\n", "tmp", "=", "\"{}  label:{}  untarget label:{}  avg delta:{}\"", ".", "format", "(", "img_name", ",", "lbl", ".", "item", "(", ")", ",", "\n", "pred_adv", ".", "item", "(", ")", ",", "\n", "avg_delta", ".", "item", "(", ")", ")", "\n", "res", ".", "append", "(", "tmp", ")", "\n", "", "", "else", ":", "\n", "                ", "print", "(", "'Predict incorrectly.'", ")", "\n", "", "print", "(", "'----------------------------'", ")", "\n", "\n", "", "", "print", "(", "count", ",", "'images are classified correctly.'", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.gene_pairs.main": [[12, 96], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "numpy.random.seed", "os.path.join", "os.listdir", "parser.parse_args.selected_imgs.sort", "os.path.join", "torch.utils.data.DataLoader", "numpy.load", "torch.from_numpy", "enumerate", "os.path.join", "os.path.exists", "os.makedirs", "data_utils.ModelNet_Loader", "print", "data_fps.squeeze.squeeze", "os.path.join", "os.path.exists", "os.makedirs", "range", "numpy.array", "numpy.save", "print", "enumerate", "os.path.join", "numpy.array", "numpy.save", "numpy.random.randint", "numpy.random.choice", "torch.norm", "torch.sort", "list", "list.remove", "list.remove", "int", "range", "np.array.append", "np.array.append", "range", "players_thispair.append", "int", "list", "numpy.random.choice"], "function", ["None"], ["        ", "for", "h", "in", "range", "(", "-", "local_size", ",", "local_size", "+", "1", ")", ":", "\n", "            ", "if", "j", "==", "0", "and", "h", "==", "0", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "item", "=", "[", "j", ",", "h", "]", "\n", "neighbor", ".", "append", "(", "item", ")", "\n", "\n", "", "", "", "neighbor", "=", "np", ".", "array", "(", "neighbor", ")", "\n", "\n", "tot_pairs", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "pair_num", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "x1", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "grid_size", ")", "\n", "y1", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "grid_size", ")", "\n", "point1", "=", "x1", "*", "grid_size", "+", "y1", "\n", "\n", "np", ".", "random", ".", "shuffle", "(", "neighbor", ")", "\n", "x2", "=", "x1", "+", "neighbor", "[", "0", "]", "[", "0", "]", "\n", "y2", "=", "y1", "+", "neighbor", "[", "0", "]", "[", "1", "]", "\n", "if", "x2", "<", "0", ":", "\n", "                ", "x2", "=", "0", "\n", "", "elif", "x2", ">=", "grid_size", ":", "\n", "                ", "x2", "=", "grid_size", "-", "1", "\n", "", "if", "y2", "<", "0", ":", "\n", "                ", "y2", "=", "0", "\n", "", "elif", "y2", ">=", "grid_size", ":", "\n", "                ", "y2", "=", "grid_size", "-", "1", "\n", "", "point2", "=", "x2", "*", "grid_size", "+", "y2", "\n", "\n", "if", "point1", "==", "point2", ":", "# bugFix", "\n", "                ", "continue", "\n", "\n", "", "if", "[", "point1", ",", "point2", "]", "in", "tot_pairs", "or", "[", "point2", ",", "point1", "]", "in", "tot_pairs", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "break", "\n", "", "", "tot_pairs", ".", "append", "(", "list", "(", "[", "point1", ",", "point2", "]", ")", ")", "\n", "\n", "", "tot_pairs", "=", "np", ".", "array", "(", "tot_pairs", ")", "\n", "return", "tot_pairs", "\n", "\n", "", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--seed\"", ",", "default", "=", "0", ",", "type", "=", "int", ",", "help", "=", "\"random seed\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--ratios\"", ",", "default", "=", "[", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "0.6", ",", "0.7", ",", "0.8", ",", "0.85", ",", "0.9", ",", "0.95", ",", "1", "]", ",", "type", "=", "list", ",", "\n", "help", "=", "'ratios of context'", ")", "\n", "parser", ".", "add_argument", "(", "\"--sample_num\"", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'sample num of S'", ")", "\n", "parser", ".", "add_argument", "(", "\"--grid_size\"", ",", "default", "=", "16", ",", "type", "=", "int", ",", "help", "=", "'number of grids of each img'", ")", "\n", "parser", ".", "add_argument", "(", "\"--pair_num\"", ",", "default", "=", "200", ",", "type", "=", "int", ",", "help", "=", "'number of point pair of each test img'", ")", "\n", "parser", ".", "add_argument", "(", "\"--targeted\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"targeted\"", ",", "help", "=", "\"whether use the targeted attack (True for targeted attack, False for untargeted attack)\"", ")", "\n", "# prefix of save path", "\n", "parser", ".", "add_argument", "(", "'--distance'", ",", "default", "=", "'l_inf'", ",", "type", "=", "str", ",", "help", "=", "\"type of adversarial attacks, currently only support 'l_inf'\"", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "default", "=", "\"resnet18\"", ",", "type", "=", "str", ",", "help", "=", "\"model name\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--adv_model\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"adv_model\"", ",", "help", "=", "\"the type of model (True for adversarially learned DNN, False for standardly learned DNN)\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "\n", "if", "not", "args", ".", "targeted", ":", "\n", "        ", "args", ".", "img_adv", "=", "\"advImgs_untarget\"", "\n", "prefix", "=", "\"{}/{}/untarget/\"", ".", "format", "(", "args", ".", "distance", ",", "args", ".", "arch", ")", "\n", "", "else", ":", "\n", "        ", "args", ".", "img_adv", "=", "\"advImgs_target\"", "\n", "prefix", "=", "\"{}/{}/target/\"", ".", "format", "(", "args", ".", "distance", ",", "args", ".", "arch", ")", "\n", "\n", "", "if", "args", ".", "adv_model", ":", "\n", "        ", "args", ".", "selected_imgs", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "prefix", "+", "args", ".", "img_adv", ",", "\"adv_model\"", ")", ")", "\n", "args", ".", "point_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "img_adv", ",", "\"adv_model\"", ",", "\"points\"", ")", "\n", "", "else", ":", "\n", "        ", "args", ".", "selected_imgs", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "prefix", "+", "args", ".", "img_adv", ",", "\"ori_model\"", ")", ")", "\n", "args", ".", "point_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "img_adv", ",", "\"ori_model\"", ",", "\"points\"", ")", "\n", "\n", "", "args", ".", "selected_imgs", ".", "sort", "(", ")", "\n", "\n", "point_dir", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "args", ".", "point_path", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "point_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "point_dir", ")", "\n", "\n", "# gene pairs for each image", "\n", "", "for", "im", "in", "args", ".", "selected_imgs", ":", "\n", "        ", "if", "not", "im", ".", "startswith", "(", "'ILSVRC'", ")", ":", "\n", "            ", "continue", "\n", "", "img_name", "=", "im", ".", "replace", "(", "'.npy'", ",", "''", ")", "\n", "print", "(", "'Image '", ",", "img_name", ")", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "point_dir", ",", "\"img{}\"", ".", "format", "(", "img_name", ")", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.prepare": [[22, 43], ["torch.utils.data.DataLoader", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "PointNet2ClsMsg().to.load_state_dict", "PointNet2ClsMsg().to.eval", "data_utils.ModelNet_Loader", "models.pointnet2.PointNet2ClsMsg().to", "ValueError", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "models.pointnet2.PointNet2ClsMsg"], "function", ["None"], ["\n", "\n", "def", "compute_order_interaction_img", "(", "model", ",", "img", ",", "img_adv", ",", "img_name", ",", "point_list", ",", "args", ",", "save_dir", ",", "r", ")", ":", "\n", "    ", "device", "=", "0", "# Do not modify", "\n", "model", ".", "to", "(", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "img_size", "=", "args", ".", "img_size", "\n", "channels", "=", "img", ".", "size", "(", "1", ")", "\n", "\n", "tic", "=", "time", ".", "time", "(", ")", "\n", "players", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "point_path", ",", "\"img{}/ratio{}_S.npy\"", ".", "format", "(", "img_name", ",", "int", "(", "r", "*", "100", ")", ")", ")", ")", "\n", "ori_logits", "=", "[", "]", "\n", "adv_logits", "=", "[", "]", "\n", "\n", "forward_mask", "=", "[", "]", "\n", "for", "p", ",", "pt", "in", "enumerate", "(", "point_list", ")", ":", "\n", "            ", "point1", ",", "point2", "=", "pt", "[", "0", "]", ",", "pt", "[", "1", "]", "\n", "\n", "players_thispair", "=", "players", "[", "p", "]", "\n", "m", "=", "int", "(", "(", "args", ".", "grid_size", "**", "2", "-", "2", ")", "*", "r", ")", "# m-order", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_order_interaction_img": [[45, 102], ["model.to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "model.eval", "img.size", "time.time", "numpy.load", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "print", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "int", "range", "os.path.join", "os.path.join", "img.expand().clone", "img_adv.expand().clone", "model", "model", "ori_logits.append", "adv_logits.append", "int", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "masked_img.permute", "masked_img_adv.permute", "model.detach", "model.detach", "img.expand", "img_adv.expand", "time.time"], "function", ["None"], ["\n", "for", "k", "in", "range", "(", "args", ".", "sample_num", ")", ":", "\n", "                ", "mask", "[", "4", "*", "k", ":", "4", "*", "(", "k", "+", "1", ")", ",", ":", ",", "players_thispair", "[", "k", "]", "]", "=", "1", "# S", "\n", "mask", "[", "4", "*", "k", "+", "1", ",", ":", ",", "point1", "]", "=", "1", "# S U {i}", "\n", "mask", "[", "4", "*", "k", "+", "2", ",", ":", ",", "point2", "]", "=", "1", "# S U {j}", "\n", "mask", "[", "4", "*", "k", ",", ":", ",", "point1", "]", "=", "1", "\n", "mask", "[", "4", "*", "k", ",", ":", ",", "point2", "]", "=", "1", "# S U {i,j}", "\n", "", "mask", "=", "mask", ".", "view", "(", "4", "*", "args", ".", "sample_num", ",", "channels", ",", "args", ".", "grid_size", ",", "args", ".", "grid_size", ")", "\n", "mask", "=", "F", ".", "interpolate", "(", "mask", ".", "clone", "(", ")", ",", "size", "=", "[", "img_size", ",", "img_size", "]", ",", "mode", "=", "\"nearest\"", ")", ".", "float", "(", ")", "\n", "\n", "forward_mask", ".", "append", "(", "mask", ")", "\n", "if", "(", "len", "(", "forward_mask", ")", "<", "args", ".", "cal_batch", "//", "args", ".", "sample_num", ")", "and", "(", "p", "<", "args", ".", "pair_num", "-", "1", ")", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "forward_batch", "=", "len", "(", "forward_mask", ")", "*", "args", ".", "sample_num", "\n", "batch_mask", "=", "torch", ".", "cat", "(", "forward_mask", ",", "dim", "=", "0", ")", "\n", "expand_img", "=", "img", ".", "expand", "(", "4", "*", "forward_batch", ",", "-", "1", ",", "img_size", ",", "img_size", ")", ".", "clone", "(", ")", "\n", "expand_img_adv", "=", "img_adv", ".", "expand", "(", "4", "*", "forward_batch", ",", "-", "1", ",", "img_size", ",", "img_size", ")", ".", "clone", "(", ")", "\n", "masked_img", "=", "batch_mask", "*", "expand_img", "\n", "masked_img_adv", "=", "batch_mask", "*", "expand_img_adv", "\n", "\n", "output_ori", ",", "_", "=", "model", "(", "masked_img", ")", "# (cal_batch*4, 1000)", "\n", "output_adv", ",", "_", "=", "model", "(", "masked_img_adv", ")", "\n", "\n", "ori_logits", ".", "append", "(", "output_ori", ".", "detach", "(", ")", ")", "\n", "adv_logits", ".", "append", "(", "output_adv", ".", "detach", "(", ")", ")", "\n", "forward_mask", "=", "[", "]", "\n", "\n", "", "", "all_ori_logits", "=", "torch", ".", "cat", "(", "ori_logits", ",", "dim", "=", "0", ")", "# (pair_num*sample_num*4, 1000)", "\n", "all_adv_logits", "=", "torch", ".", "cat", "(", "adv_logits", ",", "dim", "=", "0", ")", "\n", "\n", "print", "(", "'Image: %s, time: %.3f'", "%", "(", "img_name", ",", "time", ".", "time", "(", ")", "-", "tic", ")", ")", "\n", "print", "(", "'--------------------------'", ")", "\n", "tmp", "=", "\"{}_output.pt\"", ".", "format", "(", "img_name", ")", "\n", "torch", ".", "save", "(", "all_ori_logits", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "tmp", ")", ")", "\n", "torch", ".", "save", "(", "all_adv_logits", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"adv_\"", "+", "tmp", ")", ")", "\n", "\n", "\n", "\n", "", "", "def", "compute_interactions", "(", "args", ",", "model", ",", "dataloader", ")", ":", "\n", "    ", "device", "=", "0", "# Do not modify", "\n", "model", ".", "to", "(", "device", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "for", "i", ",", "(", "image_name", ",", "img", ",", "lbl", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "img_name", "=", "image_name", "[", "0", "]", ".", "replace", "(", "'.JPEG'", ",", "''", ")", "\n", "if", "not", "(", "img_name", "+", "'.npy'", "in", "args", ".", "selected_imgs", ")", ":", "\n", "                ", "continue", "\n", "", "print", "(", "\"img: %d\"", "%", "i", ",", "image_name", ",", "'label:'", ",", "lbl", ")", "\n", "\n", "img", "=", "img", ".", "to", "(", "device", ")", "\n", "lbl", "=", "lbl", ".", "to", "(", "device", ")", "\n", "\n", "img_adv", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "adv_dir", ",", "\"{}.npy\"", ".", "format", "(", "img_name", ")", ")", ")", "# ours", "\n", "img_adv", "=", "torch", ".", "from_numpy", "(", "img_adv", ")", ".", "to", "(", "device", ")", "\n", "\n", "img", "=", "normalize", "(", "img", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.cal_region_id": [[104, 109], ["data_utils.square_distance", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin", "torch.argmin.squeeze"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.square_distance"], ["\n", "points_for_img", "=", "os", ".", "path", ".", "join", "(", "args", ".", "point_path", ",", "\"img{}\"", ".", "format", "(", "img_name", ")", ",", "'points.npy'", ")", "\n", "point_list", "=", "np", ".", "load", "(", "points_for_img", ")", "\n", "\n", "for", "r", "in", "args", ".", "ratios", ":", "\n", "                ", "print", "(", "'Ratio:'", ",", "r", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_interactions": [[111, 145], ["model.to", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "numpy.load", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "enumerate", "print", "img.to.to", "lbl.to.to", "m_order_interaction_logit.cal_region_id", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "torch.mean().squeeze", "numpy.load", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "torch.from_numpy().to", "img_adv.permute.permute", "os.path.join", "numpy.load", "os.path.join", "print", "os.path.join", "m_order_interaction_logit.compute_order_interaction_img", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.cal_region_id", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_order_interaction_img"], ["res_dir", "=", "os", ".", "path", ".", "join", "(", "'./'", ",", "args", ".", "save_dir", ",", "save_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "res_dir", ")", ":", "\n", "                    ", "os", ".", "makedirs", "(", "res_dir", ")", "\n", "", "compute_order_interaction_img", "(", "model", ",", "img", ",", "img_adv", ",", "img_name", ",", "point_list", ",", "args", ",", "res_dir", ",", "r", ")", "\n", "\n", "", "", "", "", "def", "prepare", "(", "args", ")", ":", "\n", "# prepare data---------------", "\n", "# Only for ImageNet", "\n", "    ", "if", "args", ".", "dataset_name", "==", "\"imagenet\"", ":", "\n", "        ", "class_num", "=", "1000", "\n", "args", ".", "img_size", "=", "224", "\n", "args", ".", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", "\n", "args", ".", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "\n", "]", ")", "\n", "args", ".", "transform", "=", "transform", "\n", "# need args.root, args.img_size, args.seed", "\n", "dataset", "=", "ImageNetSelectedDataset", "(", "train", "=", "False", ",", "args", "=", "args", ",", "selected_num", "=", "args", ".", "base_num", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"No such dataset %s!\"", "%", "args", ".", "dataset_name", ")", "\n", "", "dataloader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ")", "# bs=1", "\n", "\n", "# prepare models----------------", "\n", "if", "args", ".", "adv_model", ":", "\n", "        ", "print", "(", "'Load adversarial model.'", ")", "\n", "ds", "=", "robustdatasets", ".", "ImageNet", "(", "args", ".", "root", ")", "\n", "model", ",", "_", "=", "make_and_restore_model", "(", "arch", "=", "args", ".", "arch", ",", "dataset", "=", "ds", ",", "\n", "resume_path", "=", "args", ".", "adv_model_path", ",", "\n", "pytorch_pretrained", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Load pytorch pretrained model.'", ")", "\n", "ds", "=", "robustdatasets", ".", "ImageNet", "(", "args", ".", "root", ")", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.main": [[147, 179], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "str", "data_utils.set_random", "os.path.join", "os.path.join", "os.listdir", "os.path.join", "os.path.join", "m_order_interaction_logit.prepare", "m_order_interaction_logit.compute_interactions", "os.path.join"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.gene_adv_imgs.set_random", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.prepare", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.PointNet.m_order_interaction_logit.compute_interactions"], ["resume_path", "=", "args", ".", "std_model_path", ",", "\n", "pytorch_pretrained", "=", "False", ")", "\n", "\n", "", "return", "model", ",", "dataloader", "\n", "\n", "\n", "", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--root'", ",", "default", "=", "'/data/renjie/data/ImageNet'", ",", "type", "=", "str", ",", "help", "=", "\"dataset path\"", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "help", "=", "\"GPU ID\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--seed\"", ",", "default", "=", "0", ",", "type", "=", "int", ",", "help", "=", "\"random seed\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--grid_size\"", ",", "default", "=", "16", ",", "type", "=", "int", ",", "help", "=", "'number of grids of each img'", ")", "\n", "parser", ".", "add_argument", "(", "\"--dataset_name\"", ",", "default", "=", "\"imagenet\"", ",", "type", "=", "str", ",", "help", "=", "\"dataset name, currently only support 'imagenet'\"", ")", "\n", "parser", ".", "add_argument", "(", "'--base_num'", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'# of images randomly sampled from the dataset'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--ratios\"", ",", "default", "=", "[", "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "0.6", ",", "0.7", ",", "0.8", ",", "0.85", ",", "0.9", ",", "0.95", ",", "1", "]", ",", "type", "=", "list", ",", "help", "=", "'ratios of context'", ")", "\n", "parser", ".", "add_argument", "(", "\"--sample_num\"", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'sample num of S'", ")", "\n", "parser", ".", "add_argument", "(", "\"--pair_num\"", ",", "default", "=", "200", ",", "type", "=", "int", ",", "help", "=", "'number of point pair of each test img'", ")", "\n", "# cal_batch should be divisible by sample_num", "\n", "parser", ".", "add_argument", "(", "\"--cal_batch\"", ",", "default", "=", "100", ",", "type", "=", "int", ",", "help", "=", "'calculate # of images per batch'", ")", "\n", "# for robustness library", "\n", "parser", ".", "add_argument", "(", "\"--targeted\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"targeted\"", ",", "help", "=", "\"whether use the targeted attack\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--adv_model\"", ",", "action", "=", "\"store_true\"", ",", "dest", "=", "\"adv_model\"", ",", "help", "=", "\"the type of model (True for adversarially learned DNN, False for standardly learned DNN)\"", ")", "\n", "parser", ".", "add_argument", "(", "'--arch'", ",", "default", "=", "\"resnet18\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--distance'", ",", "default", "=", "'l_inf'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--adv_model_path'", ",", "type", "=", "str", ",", "default", "=", "'pretrained_models/resnet18_linf_eps8.0.ckpt'", ",", "\n", "help", "=", "\"model path of the adversarially learned DNN\"", ")", "\n", "parser", ".", "add_argument", "(", "'--std_model_path'", ",", "type", "=", "str", ",", "default", "=", "'pretrained_models/resnet18_l2_eps0.ckpt'", ",", "\n", "help", "=", "\"model path of the standardly learned DNN\"", ")", "\n", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "args", ".", "targetet", "=", "True", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNetSetAbstraction.__init__": [[139, 152], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "pointnet2.PointNetSetAbstraction.mlp_convs.append", "pointnet2.PointNetSetAbstraction.mlp_bns.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "npoint", ",", "radius", ",", "nsample", ",", "in_channel", ",", "mlp", ",", "group_all", ")", ":", "\n", "        ", "super", "(", "PointNetSetAbstraction", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "radius", "=", "radius", "\n", "self", ".", "nsample", "=", "nsample", "\n", "self", ".", "mlp_convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlp_bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "last_channel", "=", "in_channel", "\n", "for", "out_channel", "in", "mlp", ":", "\n", "            ", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "last_channel", ",", "out_channel", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channel", ")", ")", "\n", "last_channel", "=", "out_channel", "\n", "", "self", ".", "group_all", "=", "group_all", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNetSetAbstraction.forward": [[153, 179], ["xyz.permute.permute.permute", "torch.relu.permute", "enumerate", "new_xyz.permute.permute.permute", "points.permute.permute.permute", "pointnet2.sample_and_group_all", "pointnet2.sample_and_group", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "bn", "conv"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.sample_and_group_all", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.sample_and_group"], ["", "def", "forward", "(", "self", ",", "xyz", ",", "points", ")", ":", "\n", "        ", "\"\"\"\n        Input: \n            xyz: input points position data, [B, C, N]\n            points: input points data, [B, D, N]\n        Return:\n            new_xyz: sampled points position data, [B, C, S]\n            new_points_concat: sample points feature data, [B, D', S]\n        \"\"\"", "\n", "xyz", "=", "xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "            ", "points", "=", "points", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "", "if", "self", ".", "group_all", ":", "\n", "            ", "new_xyz", ",", "new_points", "=", "sample_and_group_all", "(", "xyz", ",", "points", ")", "\n", "", "else", ":", "\n", "            ", "new_xyz", ",", "new_points", "=", "sample_and_group", "(", "self", ".", "npoint", ",", "self", ".", "radius", ",", "self", ".", "nsample", ",", "xyz", ",", "points", ")", "\n", "\n", "", "new_points", "=", "new_points", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "mlp_convs", ")", ":", "\n", "            ", "bn", "=", "self", ".", "mlp_bns", "[", "i", "]", "\n", "new_points", "=", "F", ".", "relu", "(", "bn", "(", "conv", "(", "new_points", ")", ")", ")", "\n", "\n", "", "new_points", "=", "torch", ".", "max", "(", "new_points", ",", "2", ")", "[", "0", "]", "\n", "new_xyz", "=", "new_xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "return", "new_xyz", ",", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNetSetAbstractionMsg.__init__": [[181, 198], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "len", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "pointnet2.PointNetSetAbstractionMsg.conv_blocks.append", "pointnet2.PointNetSetAbstractionMsg.bn_blocks.append", "torch.ModuleList.append", "torch.ModuleList.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "npoint", ",", "radius_list", ",", "nsample_list", ",", "in_channel", ",", "mlp_list", ")", ":", "\n", "        ", "super", "(", "PointNetSetAbstractionMsg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "radius_list", "=", "radius_list", "\n", "self", ".", "nsample_list", "=", "nsample_list", "\n", "self", ".", "conv_blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "bn_blocks", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "mlp_list", ")", ")", ":", "\n", "            ", "convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "last_channel", "=", "in_channel", "+", "3", "\n", "for", "out_channel", "in", "mlp_list", "[", "i", "]", ":", "\n", "                ", "convs", ".", "append", "(", "nn", ".", "Conv2d", "(", "last_channel", ",", "out_channel", ",", "1", ")", ")", "\n", "bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channel", ")", ")", "\n", "last_channel", "=", "out_channel", "\n", "", "self", ".", "conv_blocks", ".", "append", "(", "convs", ")", "\n", "self", ".", "bn_blocks", ".", "append", "(", "bns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNetSetAbstractionMsg.forward": [[199, 244], ["xyz.permute.permute.permute", "pointnet2.index_points", "enumerate", "new_xyz.permute.permute.permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "points.permute.permute.permute", "pointnet2.farthest_point_sample", "pointnet2.query_ball_point", "pointnet2.index_points", "new_xyz.permute.permute.view", "torch.relu.permute", "range", "new_points_list.append", "pointnet2.index_points", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "len", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "bn", "conv"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.index_points", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.farthest_point_sample", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.query_ball_point", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.index_points", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.index_points"], ["", "", "def", "forward", "(", "self", ",", "xyz", ",", "points", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n            xyz: input points position data, [B, C, N]\n            fps_index: fps_index [B, 512]\n            points: input points data, [B, D, N]\n        Return:\n            new_xyz: sampled points position data, [B, C, S]\n            new_points_concat: sample points feature data, [B, D', S]\n        \"\"\"", "\n", "xyz", "=", "xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "            ", "points", "=", "points", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "S", "=", "self", ".", "npoint", "\n", "# fps = farthest_point_sample(xyz, S)", "\n", "# new_xyz = index_points(xyz, fps)", "\n", "\n", "new_xyz", "=", "index_points", "(", "xyz", ",", "farthest_point_sample", "(", "xyz", ",", "S", ")", ")", "\n", "\n", "new_points_list", "=", "[", "]", "\n", "for", "i", ",", "radius", "in", "enumerate", "(", "self", ".", "radius_list", ")", ":", "\n", "            ", "K", "=", "self", ".", "nsample_list", "[", "i", "]", "\n", "group_idx", "=", "query_ball_point", "(", "radius", ",", "K", ",", "xyz", ",", "new_xyz", ")", "\n", "grouped_xyz", "=", "index_points", "(", "xyz", ",", "group_idx", ")", "\n", "grouped_xyz", "-=", "new_xyz", ".", "view", "(", "B", ",", "S", ",", "1", ",", "C", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "                ", "grouped_points", "=", "index_points", "(", "points", ",", "group_idx", ")", "\n", "grouped_points", "=", "torch", ".", "cat", "(", "[", "grouped_points", ",", "grouped_xyz", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "grouped_points", "=", "grouped_xyz", "\n", "\n", "", "grouped_points", "=", "grouped_points", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "#[B, D, K, S]", "\n", "for", "j", "in", "range", "(", "len", "(", "self", ".", "conv_blocks", "[", "i", "]", ")", ")", ":", "\n", "                ", "conv", "=", "self", ".", "conv_blocks", "[", "i", "]", "[", "j", "]", "\n", "bn", "=", "self", ".", "bn_blocks", "[", "i", "]", "[", "j", "]", "\n", "grouped_points", "=", "F", ".", "relu", "(", "bn", "(", "conv", "(", "grouped_points", ")", ")", ")", "\n", "", "new_points", "=", "torch", ".", "max", "(", "grouped_points", ",", "2", ")", "[", "0", "]", "#[B, D', S]", "\n", "new_points_list", ".", "append", "(", "new_points", ")", "\n", "\n", "", "new_xyz", "=", "new_xyz", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "#new_xyz = farthest_point_sample(xyz, S)", "\n", "new_points_concat", "=", "torch", ".", "cat", "(", "new_points_list", ",", "dim", "=", "1", ")", "\n", "return", "new_xyz", ",", "new_points_concat", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNetFeaturePropagation.__init__": [[246, 255], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "pointnet2.PointNetFeaturePropagation.mlp_convs.append", "pointnet2.PointNetFeaturePropagation.mlp_bns.append", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channel", ",", "mlp", ")", ":", "\n", "        ", "super", "(", "PointNetFeaturePropagation", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp_convs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlp_bns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "last_channel", "=", "in_channel", "\n", "for", "out_channel", "in", "mlp", ":", "\n", "            ", "self", ".", "mlp_convs", ".", "append", "(", "nn", ".", "Conv1d", "(", "last_channel", ",", "out_channel", ",", "1", ")", ")", "\n", "self", ".", "mlp_bns", ".", "append", "(", "nn", ".", "BatchNorm1d", "(", "out_channel", ")", ")", "\n", "last_channel", "=", "out_channel", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNetFeaturePropagation.forward": [[256, 295], ["xyz1.permute.permute.permute", "xyz2.permute.permute.permute", "points2.permute.permute.permute", "torch.relu.permute", "enumerate", "points2.permute.permute.repeat", "pointnet2.square_distance", "square_distance.sort", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "points1.permute.permute.permute", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "bn", "pointnet2.index_points", "weight.view", "conv", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.square_distance", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.index_points"], ["", "", "def", "forward", "(", "self", ",", "xyz1", ",", "xyz2", ",", "points1", ",", "points2", ")", ":", "\n", "        ", "\"\"\"\n        Input:\n            xyz1: input points position data, [B, C, N]\n            xyz2: sampled input points position data, [B, C, S]\n            points1: input points data, [B, D, N]\n            points2: input points data, [B, D, S]\n        Return:\n            new_points: upsampled points data, [B, D', N]\n        \"\"\"", "\n", "xyz1", "=", "xyz1", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "xyz2", "=", "xyz2", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "\n", "points2", "=", "points2", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "B", ",", "N", ",", "C", "=", "xyz1", ".", "shape", "\n", "_", ",", "S", ",", "_", "=", "xyz2", ".", "shape", "\n", "\n", "if", "S", "==", "1", ":", "\n", "            ", "interpolated_points", "=", "points2", ".", "repeat", "(", "1", ",", "N", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "dists", "=", "square_distance", "(", "xyz1", ",", "xyz2", ")", "\n", "dists", ",", "idx", "=", "dists", ".", "sort", "(", "dim", "=", "-", "1", ")", "\n", "dists", ",", "idx", "=", "dists", "[", ":", ",", ":", ",", ":", "3", "]", ",", "idx", "[", ":", ",", ":", ",", ":", "3", "]", "#[B, N, 3]", "\n", "dists", "[", "dists", "<", "1e-10", "]", "=", "1e-10", "\n", "weight", "=", "1.0", "/", "dists", "#[B, N, 3]", "\n", "weight", "=", "weight", "/", "torch", ".", "sum", "(", "weight", ",", "dim", "=", "-", "1", ")", ".", "view", "(", "B", ",", "N", ",", "1", ")", "#[B, N, 3]", "\n", "interpolated_points", "=", "torch", ".", "sum", "(", "index_points", "(", "points2", ",", "idx", ")", "*", "weight", ".", "view", "(", "B", ",", "N", ",", "3", ",", "1", ")", ",", "dim", "=", "2", ")", "\n", "\n", "", "if", "points1", "is", "not", "None", ":", "\n", "            ", "points1", "=", "points1", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "new_points", "=", "torch", ".", "cat", "(", "[", "points1", ",", "interpolated_points", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "new_points", "=", "interpolated_points", "\n", "\n", "", "new_points", "=", "new_points", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "mlp_convs", ")", ":", "\n", "            ", "bn", "=", "self", ".", "mlp_bns", "[", "i", "]", "\n", "new_points", "=", "F", ".", "relu", "(", "bn", "(", "conv", "(", "new_points", ")", ")", ")", "\n", "", "return", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__": [[298, 318], ["torch.Module.__init__", "pointnet2.PointNetSetAbstractionMsg", "pointnet2.PointNetSetAbstractionMsg", "pointnet2.PointNetSetAbstraction", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "PointNet2ClsMsg", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "k", "=", "self", ".", "args", ".", "k", "# no use", "\n", "if", "self", ".", "args", ".", "dataset", "==", "'scanobject'", ":", "\n", "            ", "self", ".", "output_channels", "=", "15", "\n", "", "elif", "self", ".", "args", ".", "dataset", "==", "'modelnet40'", ":", "\n", "            ", "self", ".", "output_channels", "=", "40", "\n", "", "else", ":", "self", ".", "output_channels", "=", "10", "\n", "\n", "self", ".", "sa1", "=", "PointNetSetAbstractionMsg", "(", "512", ",", "[", "0.1", ",", "0.2", ",", "0.4", "]", ",", "[", "16", ",", "32", ",", "128", "]", ",", "0", ",", "[", "[", "32", ",", "32", ",", "64", "]", ",", "[", "64", ",", "64", ",", "128", "]", ",", "[", "64", ",", "96", ",", "128", "]", "]", ")", "\n", "self", ".", "sa2", "=", "PointNetSetAbstractionMsg", "(", "128", ",", "[", "0.2", ",", "0.4", ",", "0.8", "]", ",", "[", "32", ",", "64", ",", "128", "]", ",", "320", ",", "[", "[", "64", ",", "64", ",", "128", "]", ",", "[", "128", ",", "128", ",", "256", "]", ",", "[", "128", ",", "128", ",", "256", "]", "]", ")", "\n", "self", ".", "sa3", "=", "PointNetSetAbstraction", "(", "None", ",", "None", ",", "None", ",", "640", "+", "3", ",", "[", "256", ",", "512", ",", "1024", "]", ",", "True", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "1024", ",", "512", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "drop1", "=", "nn", ".", "Dropout", "(", "0.4", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "512", ",", "256", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "self", ".", "drop2", "=", "nn", ".", "Dropout", "(", "0.4", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "256", ",", "self", ".", "output_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.PointNet2ClsMsg.forward": [[319, 332], ["pointnet2.PointNet2ClsMsg.sa1", "pointnet2.PointNet2ClsMsg.sa2", "pointnet2.PointNet2ClsMsg.sa3", "l3_points.view", "pointnet2.PointNet2ClsMsg.drop1", "pointnet2.PointNet2ClsMsg.drop2", "pointnet2.PointNet2ClsMsg.fc3", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "pointnet2.PointNet2ClsMsg.bn1", "pointnet2.PointNet2ClsMsg.bn2", "pointnet2.PointNet2ClsMsg.fc1", "pointnet2.PointNet2ClsMsg.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xyz", ")", ":", "# rqh, add fps_index", "\n", "\n", "        ", "B", ",", "_", ",", "_", "=", "xyz", ".", "shape", "\n", "l1_xyz", ",", "l1_points", "=", "self", ".", "sa1", "(", "xyz", ",", "None", ")", "\n", "l2_xyz", ",", "l2_points", "=", "self", ".", "sa2", "(", "l1_xyz", ",", "l1_points", ")", "\n", "l3_xyz", ",", "l3_points", "=", "self", ".", "sa3", "(", "l2_xyz", ",", "l2_points", ")", "\n", "\n", "x", "=", "l3_points", ".", "view", "(", "B", ",", "1024", ")", "\n", "x", "=", "self", ".", "drop1", "(", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "fc1", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "self", ".", "drop2", "(", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "fc2", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "self", ".", "fc3", "(", "x", ")", "\n", "#x = F.log_softmax(x, -1)", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.timeit": [[8, 11], ["print", "time.time", "time.time"], "function", ["None"], ["def", "timeit", "(", "tag", ",", "t", ")", ":", "\n", "    ", "print", "(", "\"{}: {}s\"", ".", "format", "(", "tag", ",", "time", "(", ")", "-", "t", ")", ")", "\n", "return", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.square_distance": [[12, 26], ["torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "dst.permute", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["", "def", "square_distance", "(", "src", ",", "dst", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        src: source points, [B, N, C]\n        dst: target points, [B, M, C]\n    Output:\n        dist: per-point square distance, [B, N, M]\n    \"\"\"", "\n", "B", ",", "N", ",", "_", "=", "src", ".", "shape", "\n", "_", ",", "M", ",", "_", "=", "dst", ".", "shape", "\n", "dist", "=", "-", "2", "*", "torch", ".", "matmul", "(", "src", ",", "dst", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "dist", "+=", "torch", ".", "sum", "(", "src", "**", "2", ",", "-", "1", ")", ".", "view", "(", "B", ",", "N", ",", "1", ")", "\n", "dist", "+=", "torch", ".", "sum", "(", "dst", "**", "2", ",", "-", "1", ")", ".", "view", "(", "B", ",", "1", ",", "M", ")", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.index_points": [[27, 44], ["list", "list", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "len", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "function", ["None"], ["", "def", "index_points", "(", "points", ",", "idx", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        points: input points data, [B, N, C]\n        idx: sample index data, [B, D1, D2, ..., Dn]\n    Return:\n        new_points:, indexed points data, [B, D1, D2, ..., Dn, C]\n    \"\"\"", "\n", "device", "=", "points", ".", "device", "\n", "B", "=", "points", ".", "shape", "[", "0", "]", "\n", "view_shape", "=", "list", "(", "idx", ".", "shape", ")", "\n", "view_shape", "[", "1", ":", "]", "=", "[", "1", "]", "*", "(", "len", "(", "view_shape", ")", "-", "1", ")", "\n", "repeat_shape", "=", "list", "(", "idx", ".", "shape", ")", "\n", "repeat_shape", "[", "0", "]", "=", "1", "\n", "batch_indices", "=", "torch", ".", "arange", "(", "B", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", ".", "view", "(", "view_shape", ")", ".", "repeat", "(", "repeat_shape", ")", "\n", "new_points", "=", "points", "[", "batch_indices", ",", "idx", ",", ":", "]", "\n", "return", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.farthest_point_sample": [[45, 69], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "range", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "xyz[].view", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.max", "torch.max", "torch.max", "torch.max", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "farthest_point_sample", "(", "xyz", ",", "npoint", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        xyz: pointcloud data, [B, N, C]\n        npoint: number of samples\n    Return:\n        centroids: sampled pointcloud data, [B, npoint]\n    \"\"\"", "\n", "device", "=", "xyz", ".", "device", "\n", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "S", "=", "npoint", "\n", "centroids", "=", "torch", ".", "zeros", "(", "B", ",", "S", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "distance", "=", "torch", ".", "ones", "(", "B", ",", "N", ")", ".", "to", "(", "device", ")", "*", "1e10", "\n", "# farthest = torch.randint(0, N, (B,), dtype=torch.long).to(device)", "\n", "farthest", "=", "torch", ".", "zeros", "(", "B", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "# rqh, debug1230", "\n", "batch_indices", "=", "torch", ".", "arange", "(", "B", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", "\n", "for", "i", "in", "range", "(", "S", ")", ":", "\n", "        ", "centroids", "[", ":", ",", "i", "]", "=", "farthest", "\n", "centroid", "=", "xyz", "[", "batch_indices", ",", "farthest", ",", ":", "]", ".", "view", "(", "B", ",", "1", ",", "3", ")", "\n", "dist", "=", "torch", ".", "sum", "(", "(", "xyz", "-", "centroid", ")", "**", "2", ",", "-", "1", ")", "\n", "mask", "=", "dist", "<", "distance", "\n", "distance", "[", "mask", "]", "=", "dist", "[", "mask", "]", "\n", "farthest", "=", "torch", ".", "max", "(", "distance", ",", "-", "1", ")", "[", "1", "]", "\n", "", "return", "centroids", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.query_ball_point": [[70, 92], ["torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "torch.arange().to().view().repeat", "pointnet2.square_distance", "group_idx[].view().repeat", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view", "torch.arange().to().view().repeat.sort", "group_idx[].view", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.square_distance"], ["", "def", "query_ball_point", "(", "radius", ",", "nsample", ",", "xyz", ",", "new_xyz", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        radius: local region radius\n        nsample: max sample number in local region\n        xyz: all points, [B, N, C]\n        new_xyz: query points, [B, S, C]\n    Return:\n        group_idx: grouped points index, [B, S, nsample]\n    \"\"\"", "\n", "device", "=", "xyz", ".", "device", "\n", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "_", ",", "S", ",", "_", "=", "new_xyz", ".", "shape", "\n", "K", "=", "nsample", "\n", "group_idx", "=", "torch", ".", "arange", "(", "N", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "device", ")", ".", "view", "(", "1", ",", "1", ",", "N", ")", ".", "repeat", "(", "[", "B", ",", "S", ",", "1", "]", ")", "\n", "sqrdists", "=", "square_distance", "(", "new_xyz", ",", "xyz", ")", "\n", "group_idx", "[", "sqrdists", ">", "radius", "**", "2", "]", "=", "N", "\n", "group_idx", "=", "group_idx", ".", "sort", "(", "dim", "=", "-", "1", ")", "[", "0", "]", "[", ":", ",", ":", ",", ":", "K", "]", "\n", "group_first", "=", "group_idx", "[", ":", ",", ":", ",", "0", "]", ".", "view", "(", "B", ",", "S", ",", "1", ")", ".", "repeat", "(", "[", "1", ",", "1", ",", "K", "]", ")", "\n", "mask", "=", "group_idx", "==", "N", "\n", "group_idx", "[", "mask", "]", "=", "group_first", "[", "mask", "]", "\n", "return", "group_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.sample_and_group": [[93, 118], ["pointnet2.index_points", "pointnet2.query_ball_point", "pointnet2.index_points", "index_points.view", "pointnet2.farthest_point_sample", "pointnet2.index_points", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "function", ["home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.index_points", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.query_ball_point", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.index_points", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.farthest_point_sample", "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.index_points"], ["", "def", "sample_and_group", "(", "npoint", ",", "radius", ",", "nsample", ",", "xyz", ",", "points", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        npoint:\n        radius:\n        nsample:\n        xyz: input points position data, [B, N, C]\n        points: input points data, [B, N, D]\n    Return:\n        new_xyz: sampled points position data, [B, 1, C]\n        new_points: sampled points data, [B, 1, N, C+D]\n    \"\"\"", "\n", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "S", "=", "npoint", "\n", "\n", "new_xyz", "=", "index_points", "(", "xyz", ",", "farthest_point_sample", "(", "xyz", ",", "npoint", ")", ")", "\n", "idx", "=", "query_ball_point", "(", "radius", ",", "nsample", ",", "xyz", ",", "new_xyz", ")", "\n", "grouped_xyz", "=", "index_points", "(", "xyz", ",", "idx", ")", "\n", "grouped_xyz", "-=", "new_xyz", ".", "view", "(", "B", ",", "S", ",", "1", ",", "C", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "        ", "grouped_points", "=", "index_points", "(", "points", ",", "idx", ")", "\n", "new_points", "=", "torch", ".", "cat", "(", "[", "grouped_xyz", ",", "grouped_points", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "new_points", "=", "grouped_xyz", "\n", "", "return", "new_xyz", ",", "new_points", "\n", "\n"]], "home.repos.pwc.inspect_result.jie-ren_a-unified-game-theoretic-interpretation-of-adversarial-robustness.models.pointnet2.sample_and_group_all": [[119, 137], ["torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "xyz.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "points.view"], "function", ["None"], ["", "def", "sample_and_group_all", "(", "xyz", ",", "points", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        xyz: input points position data, [B, N, C]\n        points: input points data, [B, N, D]\n    Return:\n        new_xyz: sampled points position data, [B, 1, C]\n        new_points: sampled points data, [B, 1, N, C+D]\n    \"\"\"", "\n", "device", "=", "xyz", ".", "device", "\n", "B", ",", "N", ",", "C", "=", "xyz", ".", "shape", "\n", "new_xyz", "=", "torch", ".", "zeros", "(", "B", ",", "1", ",", "C", ")", ".", "to", "(", "device", ")", "\n", "grouped_xyz", "=", "xyz", ".", "view", "(", "B", ",", "1", ",", "N", ",", "C", ")", "\n", "if", "points", "is", "not", "None", ":", "\n", "        ", "new_points", "=", "torch", ".", "cat", "(", "[", "grouped_xyz", ",", "points", ".", "view", "(", "B", ",", "1", ",", "N", ",", "-", "1", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "new_points", "=", "grouped_xyz", "\n", "", "return", "new_xyz", ",", "new_points", "\n", "\n"]]}