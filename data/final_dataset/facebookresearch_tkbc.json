{"home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.process_wikidata.get_be": [[19, 33], ["re.search", "re.search", "int", "int", "re.search.group", "re.search.group"], "function", ["None"], ["def", "get_be", "(", "begin", ",", "end", ")", ":", "\n", "    ", "begin", "=", "re", ".", "search", "(", "r'([+-]\\d+)-(\\d+)-(\\d+)'", ",", "begin", ")", "\n", "end", "=", "re", ".", "search", "(", "r'([+-]\\d+)-(\\d+)-(\\d+)'", ",", "end", ")", "\n", "if", "begin", "is", "None", ":", "\n", "        ", "begin", "=", "(", "-", "math", ".", "inf", ",", "0", ",", "0", ")", "\n", "", "else", ":", "\n", "        ", "begin", "=", "(", "int", "(", "begin", ".", "group", "(", "1", ")", ")", ",", "0", ",", "0", ")", "\n", "\n", "", "if", "end", "is", "None", ":", "\n", "        ", "end", "=", "(", "math", ".", "inf", ",", "0", ",", "0", ")", "\n", "", "else", ":", "\n", "        ", "end", "=", "(", "int", "(", "end", ".", "group", "(", "1", ")", ")", ",", "0", ",", "0", ")", "\n", "\n", "", "return", "begin", ",", "end", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.process_wikidata.prepare_dataset_rels": [[35, 168], ["print", "print", "len", "len", "zip", "numpy.array", "open", "pickle.dump", "open.close", "event_list.items", "set", "set", "set", "os.path.join", "open", "open.readlines", "open.close", "sorted", "os.makedirs", "open", "pickle.dump", "open.close", "os.path.join", "os.path.join", "open", "open.readlines", "open", "pickle.dump", "open.close", "print", "print", "open", "print", "pickle.dump", "open.close", "line.strip().split", "process_wikidata.get_be", "timestamps.add", "timestamps.add", "entities.add", "entities.add", "relations.add", "enumerate", "enumerate", "enumerate", "len", "len", "len", "os.path.join", "input", "os.path.join", "line.strip().split", "process_wikidata.get_be", "event_list[].append", "event_list[].append", "numpy.array().astype", "len", "sorted", "len", "sorted", "sorted", "sys.exit", "examples.append", "line.strip", "line.strip", "pathlib.Path", "numpy.array", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.process_wikidata.get_be", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.process_wikidata.get_be"], ["", "def", "prepare_dataset_rels", "(", "path", ",", "name", ")", ":", "\n", "    ", "\"\"\"\n    Given a path to a folder containing tab separated files :\n     train, test, valid\n    In the format :\n    (lhs)\\t(rel)\\t(rhs)\\t(type)\\t(timestamp)\\n\n    Maps each entity, relation+type and timestamp to a unique id, create corresponding folder\n    name in pkg/data, with mapped train/test/valid files.\n    Also create to_skip_lhs / to_skip_rhs for filtered metrics and\n    rel_id / ent_id for analysis.\n    \"\"\"", "\n", "files", "=", "[", "'train'", ",", "'valid'", ",", "'test'", "]", "\n", "entities", ",", "relations", ",", "timestamps", "=", "set", "(", ")", ",", "set", "(", ")", ",", "set", "(", ")", "\n", "for", "f", "in", "files", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "f", ")", "\n", "to_read", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "for", "line", "in", "to_read", ".", "readlines", "(", ")", ":", "\n", "            ", "v", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "lhs", ",", "rel", ",", "rhs", ",", "begin", ",", "end", "=", "v", "\n", "\n", "begin", ",", "end", "=", "get_be", "(", "begin", ",", "end", ")", "\n", "\n", "timestamps", ".", "add", "(", "begin", ")", "\n", "timestamps", ".", "add", "(", "end", ")", "\n", "entities", ".", "add", "(", "lhs", ")", "\n", "entities", ".", "add", "(", "rhs", ")", "\n", "relations", ".", "add", "(", "rel", ")", "\n", "\n", "", "to_read", ".", "close", "(", ")", "\n", "\n", "", "print", "(", "f\"{len(timestamps)} timestamps\"", ")", "\n", "\n", "entities_to_id", "=", "{", "x", ":", "i", "for", "(", "i", ",", "x", ")", "in", "enumerate", "(", "sorted", "(", "entities", ")", ")", "}", "\n", "relations_to_id", "=", "{", "x", ":", "i", "for", "(", "i", ",", "x", ")", "in", "enumerate", "(", "sorted", "(", "relations", ")", ")", "}", "\n", "\n", "# we need to sort timestamps and associate them to actual dates", "\n", "all_ts", "=", "sorted", "(", "timestamps", ")", "[", "1", ":", "-", "1", "]", "\n", "timestamps_to_id", "=", "{", "x", ":", "i", "for", "(", "i", ",", "x", ")", "in", "enumerate", "(", "all_ts", ")", "}", "\n", "# print(timestamps_to_id)", "\n", "\n", "print", "(", "\"{} entities, {} relations over {} timestamps\"", ".", "format", "(", "len", "(", "entities", ")", ",", "len", "(", "relations", ")", ",", "len", "(", "timestamps", ")", ")", ")", "\n", "n_relations", "=", "len", "(", "relations", ")", "\n", "n_entities", "=", "len", "(", "entities", ")", "\n", "\n", "try", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "DATA_PATH", ",", "name", ")", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "        ", "r", "=", "input", "(", "f\"{e}\\nContinue ? [y/n]\"", ")", "\n", "if", "r", "!=", "\"y\"", ":", "\n", "            ", "sys", ".", "exit", "(", ")", "\n", "\n", "# write ent to id / rel to id", "\n", "", "", "for", "(", "dic", ",", "f", ")", "in", "zip", "(", "[", "entities_to_id", ",", "relations_to_id", ",", "timestamps_to_id", "]", ",", "[", "'ent_id'", ",", "'rel_id'", ",", "'ts_id'", "]", ")", ":", "\n", "        ", "ff", "=", "open", "(", "os", ".", "path", ".", "join", "(", "DATA_PATH", ",", "name", ",", "f", ")", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "dic", ",", "ff", ")", "\n", "ff", ".", "close", "(", ")", "\n", "\n", "# dump the time differences between timestamps for continuity regularizer", "\n", "# ignores number of days in a month but who cares", "\n", "# ts_to_int = [x[0] * 365 + x[1] * 30 + x[2] for x in all_ts]", "\n", "", "ts_to_int", "=", "[", "x", "[", "0", "]", "for", "x", "in", "all_ts", "]", "\n", "ts", "=", "np", ".", "array", "(", "ts_to_int", ",", "dtype", "=", "'float'", ")", "\n", "diffs", "=", "ts", "[", "1", ":", "]", "-", "ts", "[", ":", "-", "1", "]", "# remove last timestamp from time diffs. it's not really a timestamp", "\n", "out", "=", "open", "(", "os", ".", "path", ".", "join", "(", "DATA_PATH", ",", "name", ",", "'ts_diffs.pickle'", ")", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "diffs", ",", "out", ")", "\n", "out", ".", "close", "(", ")", "\n", "\n", "# map train/test/valid with the ids", "\n", "event_list", "=", "{", "\n", "'all'", ":", "[", "]", ",", "\n", "}", "\n", "for", "f", "in", "files", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "f", ")", "\n", "to_read", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "examples", "=", "[", "]", "\n", "ignore", "=", "0", "\n", "total", "=", "0", "\n", "full_intervals", "=", "0", "\n", "half_intervals", "=", "0", "\n", "point", "=", "0", "\n", "for", "line", "in", "to_read", ".", "readlines", "(", ")", ":", "\n", "            ", "v", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "lhs", ",", "rel", ",", "rhs", ",", "begin", ",", "end", "=", "v", "\n", "begin_t", ",", "end_t", "=", "get_be", "(", "begin", ",", "end", ")", "\n", "total", "+=", "1", "\n", "\n", "begin", "=", "begin_t", "\n", "end", "=", "end_t", "\n", "\n", "if", "begin_t", "[", "0", "]", "==", "-", "math", ".", "inf", ":", "\n", "                ", "begin", "=", "all_ts", "[", "0", "]", "\n", "if", "not", "end_t", "[", "0", "]", "==", "math", ".", "inf", ":", "\n", "                    ", "half_intervals", "+=", "1", "\n", "", "", "if", "end_t", "[", "0", "]", "==", "math", ".", "inf", ":", "\n", "                ", "end", "=", "all_ts", "[", "-", "1", "]", "\n", "if", "not", "begin_t", "[", "0", "]", "==", "-", "math", ".", "inf", ":", "\n", "                    ", "half_intervals", "+=", "1", "\n", "\n", "", "", "if", "begin_t", "[", "0", "]", ">", "-", "math", ".", "inf", "and", "end_t", "[", "0", "]", "<", "math", ".", "inf", ":", "\n", "                ", "if", "begin_t", "[", "0", "]", "==", "end_t", "[", "0", "]", ":", "\n", "                    ", "point", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "full_intervals", "+=", "1", "\n", "\n", "", "", "begin", "=", "timestamps_to_id", "[", "begin", "]", "\n", "end", "=", "timestamps_to_id", "[", "end", "]", "\n", "\n", "if", "begin", ">", "end", ":", "\n", "                ", "ignore", "+=", "1", "\n", "continue", "\n", "\n", "", "lhs", "=", "entities_to_id", "[", "lhs", "]", "\n", "rel", "=", "relations_to_id", "[", "rel", "]", "\n", "rhs", "=", "entities_to_id", "[", "rhs", "]", "\n", "\n", "event_list", "[", "'all'", "]", ".", "append", "(", "(", "begin", ",", "-", "1", ",", "(", "lhs", ",", "rel", ",", "rhs", ")", ")", ")", "\n", "event_list", "[", "'all'", "]", ".", "append", "(", "(", "end", ",", "+", "1", ",", "(", "lhs", ",", "rel", ",", "rhs", ")", ")", ")", "\n", "\n", "try", ":", "\n", "                ", "examples", ".", "append", "(", "[", "lhs", ",", "rel", ",", "rhs", ",", "begin", ",", "end", "]", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "continue", "\n", "", "", "out", "=", "open", "(", "Path", "(", "DATA_PATH", ")", "/", "name", "/", "(", "f", "+", "'.pickle'", ")", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "np", ".", "array", "(", "examples", ")", ".", "astype", "(", "'uint64'", ")", ",", "out", ")", "\n", "out", ".", "close", "(", ")", "\n", "print", "(", "f\"Ignored {ignore} events.\"", ")", "\n", "print", "(", "f\"Total : {total} // Full : {full_intervals} // Half : {half_intervals} // Point : {point}\"", ")", "\n", "\n", "", "for", "k", ",", "v", "in", "event_list", ".", "items", "(", ")", ":", "\n", "        ", "out", "=", "open", "(", "Path", "(", "DATA_PATH", ")", "/", "name", "/", "(", "'event_list_'", "+", "k", "+", "'.pickle'", ")", ",", "'wb'", ")", "\n", "print", "(", "\"Dumping all events\"", ",", "len", "(", "v", ")", ")", "\n", "pickle", ".", "dump", "(", "sorted", "(", "v", ")", ",", "out", ")", "\n", "out", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.get_rhs": [[13, 16], ["None"], "methods", ["None"], ["    ", "@", "abstractmethod", "\n", "def", "get_rhs", "(", "self", ",", "chunk_begin", ":", "int", ",", "chunk_size", ":", "int", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.get_queries": [[17, 20], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_queries", "(", "self", ",", "queries", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.score": [[21, 24], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "score", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.forward_over_time": [[25, 28], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "forward_over_time", "(", "self", ",", "x", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.get_ranking": [[29, 82], ["torch.ones", "len", "torch.no_grad", "models.TKBCModel.get_rhs", "len", "models.TKBCModel.get_queries", "models.TKBCModel.score", "enumerate", "torch.sum().cpu", "torch.any", "torch.any", "torch.any", "torch.any", "torch.isinf", "torch.isnan", "torch.isinf", "torch.isnan", "queries[].item", "torch.sum", "int", "query[].item", "query[].item", "query[].item", "torch.LongTensor", "torch.LongTensor"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.get_rhs", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.get_queries", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.score"], ["", "def", "get_ranking", "(", "\n", "self", ",", "queries", ":", "torch", ".", "Tensor", ",", "\n", "filters", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", ",", "List", "[", "int", "]", "]", ",", "\n", "batch_size", ":", "int", "=", "1000", ",", "chunk_size", ":", "int", "=", "-", "1", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Returns filtered ranking for each queries.\n        :param queries: a torch.LongTensor of quadruples (lhs, rel, rhs, timestamp)\n        :param filters: filters[(lhs, rel, ts)] gives the elements to filter from ranking\n        :param batch_size: maximum number of queries processed at once\n        :param chunk_size: maximum number of candidates processed at once\n        :return:\n        \"\"\"", "\n", "if", "chunk_size", "<", "0", ":", "\n", "            ", "chunk_size", "=", "self", ".", "sizes", "[", "2", "]", "\n", "", "ranks", "=", "torch", ".", "ones", "(", "len", "(", "queries", ")", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "c_begin", "=", "0", "\n", "while", "c_begin", "<", "self", ".", "sizes", "[", "2", "]", ":", "\n", "                ", "b_begin", "=", "0", "\n", "rhs", "=", "self", ".", "get_rhs", "(", "c_begin", ",", "chunk_size", ")", "\n", "while", "b_begin", "<", "len", "(", "queries", ")", ":", "\n", "                    ", "these_queries", "=", "queries", "[", "b_begin", ":", "b_begin", "+", "batch_size", "]", "\n", "q", "=", "self", ".", "get_queries", "(", "these_queries", ")", "\n", "\n", "scores", "=", "q", "@", "rhs", "\n", "targets", "=", "self", ".", "score", "(", "these_queries", ")", "\n", "assert", "not", "torch", ".", "any", "(", "torch", ".", "isinf", "(", "scores", ")", ")", ",", "\"inf scores\"", "\n", "assert", "not", "torch", ".", "any", "(", "torch", ".", "isnan", "(", "scores", ")", ")", ",", "\"nan scores\"", "\n", "assert", "not", "torch", ".", "any", "(", "torch", ".", "isinf", "(", "targets", ")", ")", ",", "\"inf targets\"", "\n", "assert", "not", "torch", ".", "any", "(", "torch", ".", "isnan", "(", "targets", ")", ")", ",", "\"nan targets\"", "\n", "\n", "# set filtered and true scores to -1e6 to be ignored", "\n", "# take care that scores are chunked", "\n", "for", "i", ",", "query", "in", "enumerate", "(", "these_queries", ")", ":", "\n", "                        ", "filter_out", "=", "filters", "[", "(", "query", "[", "0", "]", ".", "item", "(", ")", ",", "query", "[", "1", "]", ".", "item", "(", ")", ",", "query", "[", "3", "]", ".", "item", "(", ")", ")", "]", "\n", "filter_out", "+=", "[", "queries", "[", "b_begin", "+", "i", ",", "2", "]", ".", "item", "(", ")", "]", "\n", "if", "chunk_size", "<", "self", ".", "sizes", "[", "2", "]", ":", "\n", "                            ", "filter_in_chunk", "=", "[", "\n", "int", "(", "x", "-", "c_begin", ")", "for", "x", "in", "filter_out", "\n", "if", "c_begin", "<=", "x", "<", "c_begin", "+", "chunk_size", "\n", "]", "\n", "scores", "[", "i", ",", "torch", ".", "LongTensor", "(", "filter_in_chunk", ")", "]", "=", "-", "1e6", "\n", "", "else", ":", "\n", "                            ", "scores", "[", "i", ",", "torch", ".", "LongTensor", "(", "filter_out", ")", "]", "=", "-", "1e6", "\n", "", "", "ranks", "[", "b_begin", ":", "b_begin", "+", "batch_size", "]", "+=", "torch", ".", "sum", "(", "\n", "(", "scores", ">=", "targets", ")", ".", "float", "(", ")", ",", "dim", "=", "1", "\n", ")", ".", "cpu", "(", ")", "\n", "\n", "b_begin", "+=", "batch_size", "\n", "\n", "", "c_begin", "+=", "chunk_size", "\n", "", "", "return", "ranks", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.get_auc": [[83, 108], ["torch.no_grad", "numpy.concatenate", "numpy.concatenate", "len", "models.TKBCModel.forward_over_time", "all_scores.append", "all_truth.append", "models.TKBCModel.cpu().numpy", "torch.any", "truth.cpu().numpy", "torch.arange().cuda", "models.TKBCModel.cpu", "torch.isinf", "torch.isnan", "truth.cpu", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.forward_over_time"], ["", "def", "get_auc", "(", "\n", "self", ",", "queries", ":", "torch", ".", "Tensor", ",", "batch_size", ":", "int", "=", "1000", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Returns filtered ranking for each queries.\n        :param queries: a torch.LongTensor of quadruples (lhs, rel, rhs, begin, end)\n        :param batch_size: maximum number of queries processed at once\n        :return:\n        \"\"\"", "\n", "all_scores", ",", "all_truth", "=", "[", "]", ",", "[", "]", "\n", "all_ts_ids", "=", "None", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "b_begin", "=", "0", "\n", "while", "b_begin", "<", "len", "(", "queries", ")", ":", "\n", "                ", "these_queries", "=", "queries", "[", "b_begin", ":", "b_begin", "+", "batch_size", "]", "\n", "scores", "=", "self", ".", "forward_over_time", "(", "these_queries", ")", "\n", "all_scores", ".", "append", "(", "scores", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "if", "all_ts_ids", "is", "None", ":", "\n", "                    ", "all_ts_ids", "=", "torch", ".", "arange", "(", "0", ",", "scores", ".", "shape", "[", "1", "]", ")", ".", "cuda", "(", ")", "[", "None", ",", ":", "]", "\n", "", "assert", "not", "torch", ".", "any", "(", "torch", ".", "isinf", "(", "scores", ")", "+", "torch", ".", "isnan", "(", "scores", ")", ")", ",", "\"inf or nan scores\"", "\n", "truth", "=", "(", "all_ts_ids", "<=", "these_queries", "[", ":", ",", "4", "]", "[", ":", ",", "None", "]", ")", "*", "(", "all_ts_ids", ">=", "these_queries", "[", ":", ",", "3", "]", "[", ":", ",", "None", "]", ")", "\n", "all_truth", ".", "append", "(", "truth", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "b_begin", "+=", "batch_size", "\n", "\n", "", "", "return", "np", ".", "concatenate", "(", "all_truth", ")", ",", "np", ".", "concatenate", "(", "all_scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.get_time_ranking": [[109, 149], ["torch.ones", "len", "torch.no_grad", "models.TKBCModel.get_queries", "models.TKBCModel.score", "models.TKBCModel.get_rhs", "enumerate", "torch.sum().cpu", "zip", "max", "torch.sum", "query[].item", "int"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.get_queries", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.score", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.get_rhs"], ["", "def", "get_time_ranking", "(", "\n", "self", ",", "queries", ":", "torch", ".", "Tensor", ",", "filters", ":", "List", "[", "List", "[", "int", "]", "]", ",", "chunk_size", ":", "int", "=", "-", "1", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Returns filtered ranking for a batch of queries ordered by timestamp.\n        :param queries: a torch.LongTensor of quadruples (lhs, rel, rhs, timestamp)\n        :param filters: ordered filters\n        :param chunk_size: maximum number of candidates processed at once\n        :return:\n        \"\"\"", "\n", "if", "chunk_size", "<", "0", ":", "\n", "            ", "chunk_size", "=", "self", ".", "sizes", "[", "2", "]", "\n", "", "ranks", "=", "torch", ".", "ones", "(", "len", "(", "queries", ")", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "c_begin", "=", "0", "\n", "q", "=", "self", ".", "get_queries", "(", "queries", ")", "\n", "targets", "=", "self", ".", "score", "(", "queries", ")", "\n", "while", "c_begin", "<", "self", ".", "sizes", "[", "2", "]", ":", "\n", "                ", "rhs", "=", "self", ".", "get_rhs", "(", "c_begin", ",", "chunk_size", ")", "\n", "scores", "=", "q", "@", "rhs", "\n", "# set filtered and true scores to -1e6 to be ignored", "\n", "# take care that scores are chunked", "\n", "for", "i", ",", "(", "query", ",", "filter", ")", "in", "enumerate", "(", "zip", "(", "queries", ",", "filters", ")", ")", ":", "\n", "                    ", "filter_out", "=", "filter", "+", "[", "query", "[", "2", "]", ".", "item", "(", ")", "]", "\n", "if", "chunk_size", "<", "self", ".", "sizes", "[", "2", "]", ":", "\n", "                        ", "filter_in_chunk", "=", "[", "\n", "int", "(", "x", "-", "c_begin", ")", "for", "x", "in", "filter_out", "\n", "if", "c_begin", "<=", "x", "<", "c_begin", "+", "chunk_size", "\n", "]", "\n", "max_to_filter", "=", "max", "(", "filter_in_chunk", "+", "[", "-", "1", "]", ")", "\n", "assert", "max_to_filter", "<", "scores", ".", "shape", "[", "1", "]", ",", "f\"fuck {scores.shape[1]} {max_to_filter}\"", "\n", "scores", "[", "i", ",", "filter_in_chunk", "]", "=", "-", "1e6", "\n", "", "else", ":", "\n", "                        ", "scores", "[", "i", ",", "filter_out", "]", "=", "-", "1e6", "\n", "", "", "ranks", "+=", "torch", ".", "sum", "(", "\n", "(", "scores", ">=", "targets", ")", ".", "float", "(", ")", ",", "dim", "=", "1", "\n", ")", ".", "cpu", "(", ")", "\n", "\n", "c_begin", "+=", "chunk_size", "\n", "", "", "return", "ranks", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.ComplEx.__init__": [[152, 166], ["super().__init__", "torch.nn.ModuleList", "torch.nn.Embedding"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.optimizers.IKBCOptimizer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "sizes", ":", "Tuple", "[", "int", ",", "int", ",", "int", ",", "int", "]", ",", "rank", ":", "int", ",", "\n", "init_size", ":", "float", "=", "1e-3", "\n", ")", ":", "\n", "        ", "super", "(", "ComplEx", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sizes", "=", "sizes", "\n", "self", ".", "rank", "=", "rank", "\n", "\n", "self", ".", "embeddings", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Embedding", "(", "s", ",", "2", "*", "rank", ",", "sparse", "=", "True", ")", "\n", "for", "s", "in", "[", "sizes", "[", "0", "]", ",", "sizes", "[", "1", "]", "]", "\n", "]", ")", "\n", "self", ".", "embeddings", "[", "0", "]", ".", "weight", ".", "data", "*=", "init_size", "\n", "self", ".", "embeddings", "[", "1", "]", ".", "weight", ".", "data", "*=", "init_size", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.ComplEx.has_time": [[167, 170], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "has_time", "(", ")", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.ComplEx.forward_over_time": [[171, 173], ["NotImplementedError"], "methods", ["None"], ["", "def", "forward_over_time", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"no.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.ComplEx.score": [[174, 187], ["torch.sum"], "methods", ["None"], ["", "def", "score", "(", "self", ",", "x", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "2", "]", ")", "\n", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rhs", "=", "rhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "return", "torch", ".", "sum", "(", "\n", "(", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", ")", "*", "rhs", "[", "0", "]", "+", "\n", "(", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "+", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", ")", "*", "rhs", "[", "1", "]", ",", "\n", "1", ",", "keepdim", "=", "True", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.ComplEx.forward": [[189, 208], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "right[].transpose", "right[].transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "2", "]", ")", "\n", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rhs", "=", "rhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "right", "=", "self", ".", "embeddings", "[", "0", "]", ".", "weight", "\n", "right", "=", "right", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "right", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "return", "(", "\n", "(", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", ")", "@", "right", "[", "0", "]", ".", "transpose", "(", "0", ",", "1", ")", "+", "\n", "(", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "+", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", ")", "@", "right", "[", "1", "]", ".", "transpose", "(", "0", ",", "1", ")", "\n", ")", ",", "(", "\n", "torch", ".", "sqrt", "(", "lhs", "[", "0", "]", "**", "2", "+", "lhs", "[", "1", "]", "**", "2", ")", ",", "\n", "torch", ".", "sqrt", "(", "rel", "[", "0", "]", "**", "2", "+", "rel", "[", "1", "]", "**", "2", ")", ",", "\n", "torch", ".", "sqrt", "(", "rhs", "[", "0", "]", "**", "2", "+", "rhs", "[", "1", "]", "**", "2", ")", "\n", ")", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.ComplEx.get_rhs": [[209, 213], ["models.ComplEx.embeddings[].weight.data[].transpose"], "methods", ["None"], ["", "def", "get_rhs", "(", "self", ",", "chunk_begin", ":", "int", ",", "chunk_size", ":", "int", ")", ":", "\n", "        ", "return", "self", ".", "embeddings", "[", "0", "]", ".", "weight", ".", "data", "[", "\n", "chunk_begin", ":", "chunk_begin", "+", "chunk_size", "\n", "]", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.ComplEx.get_queries": [[214, 224], ["torch.cat"], "methods", ["None"], ["", "def", "get_queries", "(", "self", ",", "queries", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "queries", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "queries", "[", ":", ",", "1", "]", ")", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "return", "torch", ".", "cat", "(", "[", "\n", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", ",", "\n", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "+", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", "\n", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TComplEx.__init__": [[227, 244], ["super().__init__", "torch.nn.ModuleList", "torch.nn.Embedding"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.optimizers.IKBCOptimizer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "sizes", ":", "Tuple", "[", "int", ",", "int", ",", "int", ",", "int", "]", ",", "rank", ":", "int", ",", "\n", "no_time_emb", "=", "False", ",", "init_size", ":", "float", "=", "1e-2", "\n", ")", ":", "\n", "        ", "super", "(", "TComplEx", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sizes", "=", "sizes", "\n", "self", ".", "rank", "=", "rank", "\n", "\n", "self", ".", "embeddings", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Embedding", "(", "s", ",", "2", "*", "rank", ",", "sparse", "=", "True", ")", "\n", "for", "s", "in", "[", "sizes", "[", "0", "]", ",", "sizes", "[", "1", "]", ",", "sizes", "[", "3", "]", "]", "\n", "]", ")", "\n", "self", ".", "embeddings", "[", "0", "]", ".", "weight", ".", "data", "*=", "init_size", "\n", "self", ".", "embeddings", "[", "1", "]", ".", "weight", ".", "data", "*=", "init_size", "\n", "self", ".", "embeddings", "[", "2", "]", ".", "weight", ".", "data", "*=", "init_size", "\n", "\n", "self", ".", "no_time_emb", "=", "no_time_emb", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TComplEx.has_time": [[245, 248], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "has_time", "(", ")", ":", "\n", "        ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TComplEx.score": [[249, 266], ["torch.sum"], "methods", ["None"], ["", "def", "score", "(", "self", ",", "x", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "2", "]", ")", "\n", "time", "=", "self", ".", "embeddings", "[", "2", "]", "(", "x", "[", ":", ",", "3", "]", ")", "\n", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rhs", "=", "rhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "time", "=", "time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "return", "torch", ".", "sum", "(", "\n", "(", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "*", "time", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", "*", "time", "[", "0", "]", "-", "\n", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", "*", "time", "[", "1", "]", "-", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "*", "time", "[", "1", "]", ")", "*", "rhs", "[", "0", "]", "+", "\n", "(", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", "*", "time", "[", "0", "]", "+", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "*", "time", "[", "0", "]", "+", "\n", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "*", "time", "[", "1", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", "*", "time", "[", "1", "]", ")", "*", "rhs", "[", "1", "]", ",", "\n", "1", ",", "keepdim", "=", "True", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TComplEx.forward": [[268, 293], ["torch.sqrt", "torch.sqrt", "torch.sqrt", "right[].t", "right[].t"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "2", "]", ")", "\n", "time", "=", "self", ".", "embeddings", "[", "2", "]", "(", "x", "[", ":", ",", "3", "]", ")", "\n", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rhs", "=", "rhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "time", "=", "time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "right", "=", "self", ".", "embeddings", "[", "0", "]", ".", "weight", "\n", "right", "=", "right", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "right", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "rt", "=", "rel", "[", "0", "]", "*", "time", "[", "0", "]", ",", "rel", "[", "1", "]", "*", "time", "[", "0", "]", ",", "rel", "[", "0", "]", "*", "time", "[", "1", "]", ",", "rel", "[", "1", "]", "*", "time", "[", "1", "]", "\n", "full_rel", "=", "rt", "[", "0", "]", "-", "rt", "[", "3", "]", ",", "rt", "[", "1", "]", "+", "rt", "[", "2", "]", "\n", "\n", "return", "(", "\n", "(", "lhs", "[", "0", "]", "*", "full_rel", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "full_rel", "[", "1", "]", ")", "@", "right", "[", "0", "]", ".", "t", "(", ")", "+", "\n", "(", "lhs", "[", "1", "]", "*", "full_rel", "[", "0", "]", "+", "lhs", "[", "0", "]", "*", "full_rel", "[", "1", "]", ")", "@", "right", "[", "1", "]", ".", "t", "(", ")", "\n", ")", ",", "(", "\n", "torch", ".", "sqrt", "(", "lhs", "[", "0", "]", "**", "2", "+", "lhs", "[", "1", "]", "**", "2", ")", ",", "\n", "torch", ".", "sqrt", "(", "full_rel", "[", "0", "]", "**", "2", "+", "full_rel", "[", "1", "]", "**", "2", ")", ",", "\n", "torch", ".", "sqrt", "(", "rhs", "[", "0", "]", "**", "2", "+", "rhs", "[", "1", "]", "**", "2", ")", "\n", ")", ",", "self", ".", "embeddings", "[", "2", "]", ".", "weight", "[", ":", "-", "1", "]", "if", "self", ".", "no_time_emb", "else", "self", ".", "embeddings", "[", "2", "]", ".", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TComplEx.forward_over_time": [[294, 310], ["time[].t", "time[].t"], "methods", ["None"], ["", "def", "forward_over_time", "(", "self", ",", "x", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "2", "]", ")", "\n", "time", "=", "self", ".", "embeddings", "[", "2", "]", ".", "weight", "\n", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rhs", "=", "rhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "time", "=", "time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "return", "(", "\n", "(", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "*", "rhs", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", "*", "rhs", "[", "0", "]", "-", "\n", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", "*", "rhs", "[", "1", "]", "+", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "*", "rhs", "[", "1", "]", ")", "@", "time", "[", "0", "]", ".", "t", "(", ")", "+", "\n", "(", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", "*", "rhs", "[", "0", "]", "-", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "*", "rhs", "[", "0", "]", "+", "\n", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "*", "rhs", "[", "1", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", "*", "rhs", "[", "1", "]", ")", "@", "time", "[", "1", "]", ".", "t", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TComplEx.get_rhs": [[312, 316], ["models.TComplEx.embeddings[].weight.data[].transpose"], "methods", ["None"], ["", "def", "get_rhs", "(", "self", ",", "chunk_begin", ":", "int", ",", "chunk_size", ":", "int", ")", ":", "\n", "        ", "return", "self", ".", "embeddings", "[", "0", "]", ".", "weight", ".", "data", "[", "\n", "chunk_begin", ":", "chunk_begin", "+", "chunk_size", "\n", "]", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TComplEx.get_queries": [[317, 330], ["torch.cat"], "methods", ["None"], ["", "def", "get_queries", "(", "self", ",", "queries", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "queries", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "queries", "[", ":", ",", "1", "]", ")", "\n", "time", "=", "self", ".", "embeddings", "[", "2", "]", "(", "queries", "[", ":", ",", "3", "]", ")", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "time", "=", "time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "return", "torch", ".", "cat", "(", "[", "\n", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "*", "time", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", "*", "time", "[", "0", "]", "-", "\n", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", "*", "time", "[", "1", "]", "-", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "*", "time", "[", "1", "]", ",", "\n", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", "*", "time", "[", "0", "]", "+", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "*", "time", "[", "0", "]", "+", "\n", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "*", "time", "[", "1", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", "*", "time", "[", "1", "]", "\n", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.__init__": [[333, 351], ["super().__init__", "torch.nn.ModuleList", "torch.nn.Embedding"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.optimizers.IKBCOptimizer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "sizes", ":", "Tuple", "[", "int", ",", "int", ",", "int", ",", "int", "]", ",", "rank", ":", "int", ",", "\n", "no_time_emb", "=", "False", ",", "init_size", ":", "float", "=", "1e-2", "\n", ")", ":", "\n", "        ", "super", "(", "TNTComplEx", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sizes", "=", "sizes", "\n", "self", ".", "rank", "=", "rank", "\n", "\n", "self", ".", "embeddings", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Embedding", "(", "s", ",", "2", "*", "rank", ",", "sparse", "=", "True", ")", "\n", "for", "s", "in", "[", "sizes", "[", "0", "]", ",", "sizes", "[", "1", "]", ",", "sizes", "[", "3", "]", ",", "sizes", "[", "1", "]", "]", "# last embedding modules contains no_time embeddings", "\n", "]", ")", "\n", "self", ".", "embeddings", "[", "0", "]", ".", "weight", ".", "data", "*=", "init_size", "\n", "self", ".", "embeddings", "[", "1", "]", ".", "weight", ".", "data", "*=", "init_size", "\n", "self", ".", "embeddings", "[", "2", "]", ".", "weight", ".", "data", "*=", "init_size", "\n", "self", ".", "embeddings", "[", "3", "]", ".", "weight", ".", "data", "*=", "init_size", "\n", "\n", "self", ".", "no_time_emb", "=", "no_time_emb", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.has_time": [[352, 355], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "has_time", "(", ")", ":", "\n", "        ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.score": [[356, 376], ["torch.sum"], "methods", ["None"], ["", "def", "score", "(", "self", ",", "x", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rel_no_time", "=", "self", ".", "embeddings", "[", "3", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "2", "]", ")", "\n", "time", "=", "self", ".", "embeddings", "[", "2", "]", "(", "x", "[", ":", ",", "3", "]", ")", "\n", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rhs", "=", "rhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "time", "=", "time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rnt", "=", "rel_no_time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel_no_time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "rt", "=", "rel", "[", "0", "]", "*", "time", "[", "0", "]", ",", "rel", "[", "1", "]", "*", "time", "[", "0", "]", ",", "rel", "[", "0", "]", "*", "time", "[", "1", "]", ",", "rel", "[", "1", "]", "*", "time", "[", "1", "]", "\n", "full_rel", "=", "(", "rt", "[", "0", "]", "-", "rt", "[", "3", "]", ")", "+", "rnt", "[", "0", "]", ",", "(", "rt", "[", "1", "]", "+", "rt", "[", "2", "]", ")", "+", "rnt", "[", "1", "]", "\n", "\n", "return", "torch", ".", "sum", "(", "\n", "(", "lhs", "[", "0", "]", "*", "full_rel", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "full_rel", "[", "1", "]", ")", "*", "rhs", "[", "0", "]", "+", "\n", "(", "lhs", "[", "1", "]", "*", "full_rel", "[", "0", "]", "+", "lhs", "[", "0", "]", "*", "full_rel", "[", "1", "]", ")", "*", "rhs", "[", "1", "]", ",", "\n", "1", ",", "keepdim", "=", "True", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.forward": [[378, 410], ["torch.sqrt", "torch.sqrt", "math.pow", "torch.sqrt", "math.pow", "torch.sqrt", "right[].t", "right[].t"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rel_no_time", "=", "self", ".", "embeddings", "[", "3", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "2", "]", ")", "\n", "time", "=", "self", ".", "embeddings", "[", "2", "]", "(", "x", "[", ":", ",", "3", "]", ")", "\n", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rhs", "=", "rhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "time", "=", "time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "rnt", "=", "rel_no_time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel_no_time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "right", "=", "self", ".", "embeddings", "[", "0", "]", ".", "weight", "\n", "right", "=", "right", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "right", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "rt", "=", "rel", "[", "0", "]", "*", "time", "[", "0", "]", ",", "rel", "[", "1", "]", "*", "time", "[", "0", "]", ",", "rel", "[", "0", "]", "*", "time", "[", "1", "]", ",", "rel", "[", "1", "]", "*", "time", "[", "1", "]", "\n", "rrt", "=", "rt", "[", "0", "]", "-", "rt", "[", "3", "]", ",", "rt", "[", "1", "]", "+", "rt", "[", "2", "]", "\n", "full_rel", "=", "rrt", "[", "0", "]", "+", "rnt", "[", "0", "]", ",", "rrt", "[", "1", "]", "+", "rnt", "[", "1", "]", "\n", "\n", "regularizer", "=", "(", "\n", "math", ".", "pow", "(", "2", ",", "1", "/", "3", ")", "*", "torch", ".", "sqrt", "(", "lhs", "[", "0", "]", "**", "2", "+", "lhs", "[", "1", "]", "**", "2", ")", ",", "\n", "torch", ".", "sqrt", "(", "rrt", "[", "0", "]", "**", "2", "+", "rrt", "[", "1", "]", "**", "2", ")", ",", "\n", "torch", ".", "sqrt", "(", "rnt", "[", "0", "]", "**", "2", "+", "rnt", "[", "1", "]", "**", "2", ")", ",", "\n", "math", ".", "pow", "(", "2", ",", "1", "/", "3", ")", "*", "torch", ".", "sqrt", "(", "rhs", "[", "0", "]", "**", "2", "+", "rhs", "[", "1", "]", "**", "2", ")", "\n", ")", "\n", "return", "(", "(", "\n", "(", "lhs", "[", "0", "]", "*", "full_rel", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "full_rel", "[", "1", "]", ")", "@", "right", "[", "0", "]", ".", "t", "(", ")", "+", "\n", "(", "lhs", "[", "1", "]", "*", "full_rel", "[", "0", "]", "+", "lhs", "[", "0", "]", "*", "full_rel", "[", "1", "]", ")", "@", "right", "[", "1", "]", ".", "t", "(", ")", "\n", ")", ",", "regularizer", ",", "\n", "self", ".", "embeddings", "[", "2", "]", ".", "weight", "[", ":", "-", "1", "]", "if", "self", ".", "no_time_emb", "else", "self", ".", "embeddings", "[", "2", "]", ".", "weight", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.forward_over_time": [[412, 440], ["torch.sum", "time[].t", "time[].t"], "methods", ["None"], ["", "def", "forward_over_time", "(", "self", ",", "x", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "x", "[", ":", ",", "2", "]", ")", "\n", "time", "=", "self", ".", "embeddings", "[", "2", "]", ".", "weight", "\n", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rhs", "=", "rhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "time", "=", "time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "rel_no_time", "=", "self", ".", "embeddings", "[", "3", "]", "(", "x", "[", ":", ",", "1", "]", ")", "\n", "rnt", "=", "rel_no_time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel_no_time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "score_time", "=", "(", "\n", "(", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "*", "rhs", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", "*", "rhs", "[", "0", "]", "-", "\n", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", "*", "rhs", "[", "1", "]", "+", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "*", "rhs", "[", "1", "]", ")", "@", "time", "[", "0", "]", ".", "t", "(", ")", "+", "\n", "(", "lhs", "[", "1", "]", "*", "rel", "[", "0", "]", "*", "rhs", "[", "0", "]", "-", "lhs", "[", "0", "]", "*", "rel", "[", "1", "]", "*", "rhs", "[", "0", "]", "+", "\n", "lhs", "[", "0", "]", "*", "rel", "[", "0", "]", "*", "rhs", "[", "1", "]", "-", "lhs", "[", "1", "]", "*", "rel", "[", "1", "]", "*", "rhs", "[", "1", "]", ")", "@", "time", "[", "1", "]", ".", "t", "(", ")", "\n", ")", "\n", "base", "=", "torch", ".", "sum", "(", "\n", "(", "lhs", "[", "0", "]", "*", "rnt", "[", "0", "]", "*", "rhs", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "rnt", "[", "1", "]", "*", "rhs", "[", "0", "]", "-", "\n", "lhs", "[", "1", "]", "*", "rnt", "[", "0", "]", "*", "rhs", "[", "1", "]", "+", "lhs", "[", "0", "]", "*", "rnt", "[", "1", "]", "*", "rhs", "[", "1", "]", ")", "+", "\n", "(", "lhs", "[", "1", "]", "*", "rnt", "[", "1", "]", "*", "rhs", "[", "0", "]", "-", "lhs", "[", "0", "]", "*", "rnt", "[", "0", "]", "*", "rhs", "[", "0", "]", "+", "\n", "lhs", "[", "0", "]", "*", "rnt", "[", "1", "]", "*", "rhs", "[", "1", "]", "-", "lhs", "[", "1", "]", "*", "rnt", "[", "0", "]", "*", "rhs", "[", "1", "]", ")", ",", "\n", "dim", "=", "1", ",", "keepdim", "=", "True", "\n", ")", "\n", "return", "score_time", "+", "base", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.get_rhs": [[441, 445], ["models.TNTComplEx.embeddings[].weight.data[].transpose"], "methods", ["None"], ["", "def", "get_rhs", "(", "self", ",", "chunk_begin", ":", "int", ",", "chunk_size", ":", "int", ")", ":", "\n", "        ", "return", "self", ".", "embeddings", "[", "0", "]", ".", "weight", ".", "data", "[", "\n", "chunk_begin", ":", "chunk_begin", "+", "chunk_size", "\n", "]", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.get_queries": [[446, 464], ["torch.cat"], "methods", ["None"], ["", "def", "get_queries", "(", "self", ",", "queries", ":", "torch", ".", "Tensor", ")", ":", "\n", "        ", "lhs", "=", "self", ".", "embeddings", "[", "0", "]", "(", "queries", "[", ":", ",", "0", "]", ")", "\n", "rel", "=", "self", ".", "embeddings", "[", "1", "]", "(", "queries", "[", ":", ",", "1", "]", ")", "\n", "rel_no_time", "=", "self", ".", "embeddings", "[", "3", "]", "(", "queries", "[", ":", ",", "1", "]", ")", "\n", "time", "=", "self", ".", "embeddings", "[", "2", "]", "(", "queries", "[", ":", ",", "3", "]", ")", "\n", "\n", "lhs", "=", "lhs", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "lhs", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rel", "=", "rel", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "time", "=", "time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "rnt", "=", "rel_no_time", "[", ":", ",", ":", "self", ".", "rank", "]", ",", "rel_no_time", "[", ":", ",", "self", ".", "rank", ":", "]", "\n", "\n", "rt", "=", "rel", "[", "0", "]", "*", "time", "[", "0", "]", ",", "rel", "[", "1", "]", "*", "time", "[", "0", "]", ",", "rel", "[", "0", "]", "*", "time", "[", "1", "]", ",", "rel", "[", "1", "]", "*", "time", "[", "1", "]", "\n", "full_rel", "=", "(", "rt", "[", "0", "]", "-", "rt", "[", "3", "]", ")", "+", "rnt", "[", "0", "]", ",", "(", "rt", "[", "1", "]", "+", "rt", "[", "2", "]", ")", "+", "rnt", "[", "1", "]", "\n", "\n", "return", "torch", ".", "cat", "(", "[", "\n", "lhs", "[", "0", "]", "*", "full_rel", "[", "0", "]", "-", "lhs", "[", "1", "]", "*", "full_rel", "[", "1", "]", ",", "\n", "lhs", "[", "1", "]", "*", "full_rel", "[", "0", "]", "+", "lhs", "[", "0", "]", "*", "full_rel", "[", "1", "]", "\n", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.process_icews.prepare_dataset": [[16, 107], ["print", "len", "len", "os.makedirs", "zip", "print", "to_skip.items", "open", "pickle.dump", "open.close", "pickle.load", "counters.items", "open", "pickle.dump", "open.close", "set", "set", "set", "os.path.join", "open", "open.readlines", "open.close", "os.path.join", "open", "dic.items", "open.close", "os.path.join", "open", "open.readlines", "open", "pickle.dump", "open.close", "collections.defaultdict", "collections.defaultdict", "pickle.load", "skip.items", "open", "numpy.zeros", "numpy.zeros", "numpy.zeros", "line.strip().split", "entities.add", "entities.add", "relations.add", "timestamps.add", "enumerate", "enumerate", "enumerate", "len", "len", "len", "os.path.join", "open.write", "line.strip().split", "numpy.array().astype", "open", "[].add", "[].add", "sorted", "numpy.sum", "sorted", "sorted", "sorted", "pickle.load.append", "list", "pathlib.Path", "pathlib.Path", "line.strip", "line.strip", "pathlib.Path", "numpy.array", "pathlib.Path", "pathlib.Path"], "function", ["None"], ["def", "prepare_dataset", "(", "path", ",", "name", ")", ":", "\n", "    ", "\"\"\"\n    Given a path to a folder containing tab separated files :\n     train, test, valid\n    In the format :\n    (lhs)\\t(rel)\\t(rhs)\\t(timestamp)\\n\n    Maps each entity and relation to a unique id, create corresponding folder\n    name in pkg/data, with mapped train/test/valid files.\n    Also create to_skip_lhs / to_skip_rhs for filtered metrics and\n    rel_id / ent_id for analysis.\n    \"\"\"", "\n", "files", "=", "[", "'train'", ",", "'valid'", ",", "'test'", "]", "\n", "entities", ",", "relations", ",", "timestamps", "=", "set", "(", ")", ",", "set", "(", ")", ",", "set", "(", ")", "\n", "for", "f", "in", "files", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "f", ")", "\n", "to_read", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "for", "line", "in", "to_read", ".", "readlines", "(", ")", ":", "\n", "            ", "lhs", ",", "rel", ",", "rhs", ",", "timestamp", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "entities", ".", "add", "(", "lhs", ")", "\n", "entities", ".", "add", "(", "rhs", ")", "\n", "relations", ".", "add", "(", "rel", ")", "\n", "timestamps", ".", "add", "(", "timestamp", ")", "\n", "", "to_read", ".", "close", "(", ")", "\n", "\n", "", "entities_to_id", "=", "{", "x", ":", "i", "for", "(", "i", ",", "x", ")", "in", "enumerate", "(", "sorted", "(", "entities", ")", ")", "}", "\n", "relations_to_id", "=", "{", "x", ":", "i", "for", "(", "i", ",", "x", ")", "in", "enumerate", "(", "sorted", "(", "relations", ")", ")", "}", "\n", "timestamps_to_id", "=", "{", "x", ":", "i", "for", "(", "i", ",", "x", ")", "in", "enumerate", "(", "sorted", "(", "timestamps", ")", ")", "}", "\n", "\n", "print", "(", "\"{} entities, {} relations over {} timestamps\"", ".", "format", "(", "len", "(", "entities", ")", ",", "len", "(", "relations", ")", ",", "len", "(", "timestamps", ")", ")", ")", "\n", "n_relations", "=", "len", "(", "relations", ")", "\n", "n_entities", "=", "len", "(", "entities", ")", "\n", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "DATA_PATH", ",", "name", ")", ")", "\n", "# write ent to id / rel to id", "\n", "for", "(", "dic", ",", "f", ")", "in", "zip", "(", "[", "entities_to_id", ",", "relations_to_id", ",", "timestamps_to_id", "]", ",", "[", "'ent_id'", ",", "'rel_id'", ",", "'ts_id'", "]", ")", ":", "\n", "        ", "ff", "=", "open", "(", "os", ".", "path", ".", "join", "(", "DATA_PATH", ",", "name", ",", "f", ")", ",", "'w+'", ")", "\n", "for", "(", "x", ",", "i", ")", "in", "dic", ".", "items", "(", ")", ":", "\n", "            ", "ff", ".", "write", "(", "\"{}\\t{}\\n\"", ".", "format", "(", "x", ",", "i", ")", ")", "\n", "", "ff", ".", "close", "(", ")", "\n", "\n", "# map train/test/valid with the ids", "\n", "", "for", "f", "in", "files", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "f", ")", "\n", "to_read", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "examples", "=", "[", "]", "\n", "for", "line", "in", "to_read", ".", "readlines", "(", ")", ":", "\n", "            ", "lhs", ",", "rel", ",", "rhs", ",", "ts", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "try", ":", "\n", "                ", "examples", ".", "append", "(", "[", "entities_to_id", "[", "lhs", "]", ",", "relations_to_id", "[", "rel", "]", ",", "entities_to_id", "[", "rhs", "]", ",", "timestamps_to_id", "[", "ts", "]", "]", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "continue", "\n", "", "", "out", "=", "open", "(", "Path", "(", "DATA_PATH", ")", "/", "name", "/", "(", "f", "+", "'.pickle'", ")", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "np", ".", "array", "(", "examples", ")", ".", "astype", "(", "'uint64'", ")", ",", "out", ")", "\n", "out", ".", "close", "(", ")", "\n", "\n", "", "print", "(", "\"creating filtering lists\"", ")", "\n", "\n", "# create filtering files", "\n", "to_skip", "=", "{", "'lhs'", ":", "defaultdict", "(", "set", ")", ",", "'rhs'", ":", "defaultdict", "(", "set", ")", "}", "\n", "for", "f", "in", "files", ":", "\n", "        ", "examples", "=", "pickle", ".", "load", "(", "open", "(", "Path", "(", "DATA_PATH", ")", "/", "name", "/", "(", "f", "+", "'.pickle'", ")", ",", "'rb'", ")", ")", "\n", "for", "lhs", ",", "rel", ",", "rhs", ",", "ts", "in", "examples", ":", "\n", "            ", "to_skip", "[", "'lhs'", "]", "[", "(", "rhs", ",", "rel", "+", "n_relations", ",", "ts", ")", "]", ".", "add", "(", "lhs", ")", "# reciprocals", "\n", "to_skip", "[", "'rhs'", "]", "[", "(", "lhs", ",", "rel", ",", "ts", ")", "]", ".", "add", "(", "rhs", ")", "\n", "\n", "", "", "to_skip_final", "=", "{", "'lhs'", ":", "{", "}", ",", "'rhs'", ":", "{", "}", "}", "\n", "for", "kk", ",", "skip", "in", "to_skip", ".", "items", "(", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "skip", ".", "items", "(", ")", ":", "\n", "            ", "to_skip_final", "[", "kk", "]", "[", "k", "]", "=", "sorted", "(", "list", "(", "v", ")", ")", "\n", "\n", "", "", "out", "=", "open", "(", "Path", "(", "DATA_PATH", ")", "/", "name", "/", "'to_skip.pickle'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "to_skip_final", ",", "out", ")", "\n", "out", ".", "close", "(", ")", "\n", "\n", "examples", "=", "pickle", ".", "load", "(", "open", "(", "Path", "(", "DATA_PATH", ")", "/", "name", "/", "'train.pickle'", ",", "'rb'", ")", ")", "\n", "counters", "=", "{", "\n", "'lhs'", ":", "np", ".", "zeros", "(", "n_entities", ")", ",", "\n", "'rhs'", ":", "np", ".", "zeros", "(", "n_entities", ")", ",", "\n", "'both'", ":", "np", ".", "zeros", "(", "n_entities", ")", "\n", "}", "\n", "\n", "for", "lhs", ",", "rel", ",", "rhs", ",", "_ts", "in", "examples", ":", "\n", "        ", "counters", "[", "'lhs'", "]", "[", "lhs", "]", "+=", "1", "\n", "counters", "[", "'rhs'", "]", "[", "rhs", "]", "+=", "1", "\n", "counters", "[", "'both'", "]", "[", "lhs", "]", "+=", "1", "\n", "counters", "[", "'both'", "]", "[", "rhs", "]", "+=", "1", "\n", "", "for", "k", ",", "v", "in", "counters", ".", "items", "(", ")", ":", "\n", "        ", "counters", "[", "k", "]", "=", "v", "/", "np", ".", "sum", "(", "v", ")", "\n", "", "out", "=", "open", "(", "Path", "(", "DATA_PATH", ")", "/", "name", "/", "'probas.pickle'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "counters", ",", "out", ")", "\n", "out", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.Regularizer.forward": [[11, 14], ["None"], "methods", ["None"], ["    ", "@", "abstractmethod", "\n", "def", "forward", "(", "self", ",", "factors", ":", "Tuple", "[", "torch", ".", "Tensor", "]", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.N3.__init__": [[16, 19], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.optimizers.IKBCOptimizer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", ":", "float", ")", ":", "\n", "        ", "super", "(", "N3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.N3.forward": [[20, 25], ["torch.sum", "torch.abs"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "factors", ")", ":", "\n", "        ", "norm", "=", "0", "\n", "for", "f", "in", "factors", ":", "\n", "            ", "norm", "+=", "self", ".", "weight", "*", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "f", ")", "**", "3", ")", "\n", "", "return", "norm", "/", "factors", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.Lambda3.__init__": [[28, 31], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.optimizers.IKBCOptimizer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", ":", "float", ")", ":", "\n", "        ", "super", "(", "Lambda3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.Lambda3.forward": [[32, 37], ["int", "torch.sqrt", "torch.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "factor", ")", ":", "\n", "        ", "ddiff", "=", "factor", "[", "1", ":", "]", "-", "factor", "[", ":", "-", "1", "]", "\n", "rank", "=", "int", "(", "ddiff", ".", "shape", "[", "1", "]", "/", "2", ")", "\n", "diff", "=", "torch", ".", "sqrt", "(", "ddiff", "[", ":", ",", ":", "rank", "]", "**", "2", "+", "ddiff", "[", ":", ",", "rank", ":", "]", "**", "2", ")", "**", "3", "\n", "return", "self", ".", "weight", "*", "torch", ".", "sum", "(", "diff", ")", "/", "(", "factor", ".", "shape", "[", "0", "]", "-", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.process_yago.prepare_dataset_rels": [[18, 133], ["print", "print", "len", "len", "zip", "numpy.array", "open", "pickle.dump", "open.close", "print", "to_skip.items", "open", "pickle.dump", "open.close", "set", "set", "collections.defaultdict", "os.path.join", "open", "open.readlines", "open.close", "os.makedirs", "open", "dic.items", "open.close", "sorted", "os.path.join", "os.path.join", "open", "open.readlines", "open", "pickle.dump", "open.close", "collections.defaultdict", "collections.defaultdict", "pickle.load", "skip.items", "line.strip().split", "entities.add", "entities.add", "relations.add", "enumerate", "enumerate", "enumerate", "len", "len", "len", "os.path.join", "input", "os.path.join", "open.write", "timestamps.keys", "line.strip().split", "numpy.array().astype", "open", "[].add", "[].add", "sorted", "len", "int", "len", "sorted", "sorted", "sorted", "sys.exit", "len", "int", "pickle.load.append", "list", "pathlib.Path", "line.strip", "re.search().group", "len", "timestamps.keys", "line.strip", "re.search().group", "len", "pathlib.Path", "numpy.array", "pathlib.Path", "re.search", "re.search", "len"], "function", ["None"], ["def", "prepare_dataset_rels", "(", "path", ",", "name", ")", ":", "\n", "    ", "\"\"\"\n    Given a path to a folder containing tab separated files :\n     train, test, valid\n    In the format :\n    (lhs)\\t(rel)\\t(rhs)\\t(type)\\t(timestamp)\\n\n    Maps each entity, relation+type and timestamp to a unique id, create corresponding folder\n    name in pkg/data, with mapped train/test/valid files.\n    Also create to_skip_lhs / to_skip_rhs for filtered metrics and\n    rel_id / ent_id for analysis.\n    \"\"\"", "\n", "files", "=", "[", "'train'", ",", "'valid'", ",", "'test'", "]", "\n", "entities", ",", "relations", ",", "timestamps", "=", "set", "(", ")", ",", "set", "(", ")", ",", "defaultdict", "(", "int", ")", "\n", "for", "f", "in", "files", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "f", ")", "\n", "to_read", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "for", "line", "in", "to_read", ".", "readlines", "(", ")", ":", "\n", "            ", "v", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "if", "len", "(", "v", ")", ">", "4", ":", "\n", "                ", "lhs", ",", "rel", ",", "rhs", ",", "type", ",", "timestamp", "=", "v", "\n", "rel", "+=", "type", "\n", "timestamp", "=", "int", "(", "re", ".", "search", "(", "r'\\d+'", ",", "timestamp", ")", ".", "group", "(", ")", ")", "\n", "timestamps", "[", "timestamp", "]", "+=", "1", "\n", "", "elif", "len", "(", "v", ")", "==", "4", ":", "\n", "# india participated in Korean War without timestamp :|", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "lhs", ",", "rel", ",", "rhs", "=", "v", "\n", "rel", "+=", "'_notime'", "\n", "\n", "", "entities", ".", "add", "(", "lhs", ")", "\n", "entities", ".", "add", "(", "rhs", ")", "\n", "relations", ".", "add", "(", "rel", ")", "\n", "\n", "", "to_read", ".", "close", "(", ")", "\n", "\n", "", "print", "(", "f\"{len(timestamps)} timestamps\"", ")", "\n", "\n", "entities_to_id", "=", "{", "x", ":", "i", "for", "(", "i", ",", "x", ")", "in", "enumerate", "(", "sorted", "(", "entities", ")", ")", "}", "\n", "relations_to_id", "=", "{", "x", ":", "i", "for", "(", "i", ",", "x", ")", "in", "enumerate", "(", "sorted", "(", "relations", ")", ")", "}", "\n", "timestamps_to_id", "=", "{", "x", ":", "i", "for", "(", "i", ",", "x", ")", "in", "enumerate", "(", "sorted", "(", "timestamps", ".", "keys", "(", ")", ")", ")", "}", "\n", "print", "(", "\"{} entities, {} relations over {} timestamps\"", ".", "format", "(", "len", "(", "entities", ")", ",", "len", "(", "relations", ")", ",", "len", "(", "timestamps", ")", ")", ")", "\n", "n_relations", "=", "len", "(", "relations", ")", "\n", "n_entities", "=", "len", "(", "entities", ")", "\n", "\n", "try", ":", "\n", "        ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "DATA_PATH", ",", "name", ")", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "        ", "r", "=", "input", "(", "f\"{e}\\nContinue ? [y/n]\"", ")", "\n", "if", "r", "!=", "\"y\"", ":", "\n", "            ", "sys", ".", "exit", "(", ")", "\n", "\n", "# write ent to id / rel to id", "\n", "", "", "for", "(", "dic", ",", "f", ")", "in", "zip", "(", "[", "entities_to_id", ",", "relations_to_id", ",", "timestamps_to_id", "]", ",", "[", "'ent_id'", ",", "'rel_id'", ",", "'ts_id'", "]", ")", ":", "\n", "        ", "ff", "=", "open", "(", "os", ".", "path", ".", "join", "(", "DATA_PATH", ",", "name", ",", "f", ")", ",", "'w+'", ")", "\n", "for", "(", "x", ",", "i", ")", "in", "dic", ".", "items", "(", ")", ":", "\n", "            ", "ff", ".", "write", "(", "\"{}\\t{}\\n\"", ".", "format", "(", "x", ",", "i", ")", ")", "\n", "", "ff", ".", "close", "(", ")", "\n", "\n", "# dump the time differences between timestamps for continuity regularizer", "\n", "", "ts", "=", "np", ".", "array", "(", "sorted", "(", "timestamps", ".", "keys", "(", ")", ")", ",", "dtype", "=", "'float'", ")", "\n", "diffs", "=", "ts", "[", "1", ":", "]", "-", "ts", "[", ":", "-", "1", "]", "\n", "out", "=", "open", "(", "os", ".", "path", ".", "join", "(", "DATA_PATH", ",", "name", ",", "'ts_diffs.pickle'", ")", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "diffs", ",", "out", ")", "\n", "out", ".", "close", "(", ")", "\n", "\n", "# map train/test/valid with the ids", "\n", "for", "f", "in", "files", ":", "\n", "        ", "file_path", "=", "os", ".", "path", ".", "join", "(", "path", ",", "f", ")", "\n", "to_read", "=", "open", "(", "file_path", ",", "'r'", ")", "\n", "examples", "=", "[", "]", "\n", "for", "line", "in", "to_read", ".", "readlines", "(", ")", ":", "\n", "            ", "v", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "ts", "=", "False", "\n", "if", "len", "(", "v", ")", ">", "4", ":", "\n", "                ", "lhs", ",", "rel", ",", "rhs", ",", "type", ",", "timestamp", "=", "v", "\n", "rel", "+=", "type", "\n", "timestamp", "=", "int", "(", "re", ".", "search", "(", "r'\\d+'", ",", "timestamp", ")", ".", "group", "(", ")", ")", "\n", "ts", "=", "True", "\n", "", "elif", "len", "(", "v", ")", "==", "4", ":", "\n", "# india participated in Korean War without timestamp :|", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "lhs", ",", "rel", ",", "rhs", "=", "v", "\n", "rel", "+=", "'_notime'", "\n", "\n", "", "try", ":", "\n", "                ", "examples", ".", "append", "(", "[", "\n", "entities_to_id", "[", "lhs", "]", ",", "relations_to_id", "[", "rel", "]", ",", "entities_to_id", "[", "rhs", "]", ",", "\n", "timestamps_to_id", "[", "timestamp", "]", "if", "ts", "else", "len", "(", "timestamps_to_id", ")", "\n", "]", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "continue", "\n", "", "", "out", "=", "open", "(", "Path", "(", "DATA_PATH", ")", "/", "name", "/", "(", "f", "+", "'.pickle'", ")", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "np", ".", "array", "(", "examples", ")", ".", "astype", "(", "'uint64'", ")", ",", "out", ")", "\n", "out", ".", "close", "(", ")", "\n", "\n", "", "print", "(", "\"creating filtering lists\"", ")", "\n", "\n", "# create filtering files", "\n", "to_skip", "=", "{", "'lhs'", ":", "defaultdict", "(", "set", ")", ",", "'rhs'", ":", "defaultdict", "(", "set", ")", "}", "\n", "for", "f", "in", "files", ":", "\n", "        ", "examples", "=", "pickle", ".", "load", "(", "open", "(", "Path", "(", "DATA_PATH", ")", "/", "name", "/", "(", "f", "+", "'.pickle'", ")", ",", "'rb'", ")", ")", "\n", "for", "lhs", ",", "rel", ",", "rhs", ",", "ts", "in", "examples", ":", "\n", "            ", "to_skip", "[", "'lhs'", "]", "[", "(", "rhs", ",", "rel", "+", "n_relations", ",", "ts", ")", "]", ".", "add", "(", "lhs", ")", "# reciprocals", "\n", "to_skip", "[", "'rhs'", "]", "[", "(", "lhs", ",", "rel", ",", "ts", ")", "]", ".", "add", "(", "rhs", ")", "\n", "\n", "", "", "to_skip_final", "=", "{", "'lhs'", ":", "{", "}", ",", "'rhs'", ":", "{", "}", "}", "\n", "for", "kk", ",", "skip", "in", "to_skip", ".", "items", "(", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "skip", ".", "items", "(", ")", ":", "\n", "            ", "to_skip_final", "[", "kk", "]", "[", "k", "]", "=", "sorted", "(", "list", "(", "v", ")", ")", "\n", "\n", "", "", "out", "=", "open", "(", "Path", "(", "DATA_PATH", ")", "/", "name", "/", "'to_skip.pickle'", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "to_skip_final", ",", "out", ")", "\n", "out", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.__init__": [[20, 63], ["numpy.max", "int", "int", "pathlib.Path", "open", "pickle.load", "max", "int", "open", "torch.from_numpy().cuda().float", "open.close", "open", "pickle.load", "open.close", "open", "pickle.load", "open.close", "sorted", "open", "pickle.load", "open.close", "str", "max", "int", "int", "str", "print", "str", "str", "pickle.load.keys", "print", "str", "torch.from_numpy().cuda", "torch.from_numpy", "pickle.load"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ":", "str", ")", ":", "\n", "        ", "self", ".", "root", "=", "Path", "(", "DATA_PATH", ")", "/", "name", "\n", "\n", "self", ".", "data", "=", "{", "}", "\n", "for", "f", "in", "[", "'train'", ",", "'test'", ",", "'valid'", "]", ":", "\n", "            ", "in_file", "=", "open", "(", "str", "(", "self", ".", "root", "/", "(", "f", "+", "'.pickle'", ")", ")", ",", "'rb'", ")", "\n", "self", ".", "data", "[", "f", "]", "=", "pickle", ".", "load", "(", "in_file", ")", "\n", "\n", "", "maxis", "=", "np", ".", "max", "(", "self", ".", "data", "[", "'train'", "]", ",", "axis", "=", "0", ")", "\n", "self", ".", "n_entities", "=", "int", "(", "max", "(", "maxis", "[", "0", "]", ",", "maxis", "[", "2", "]", ")", "+", "1", ")", "\n", "self", ".", "n_predicates", "=", "int", "(", "maxis", "[", "1", "]", "+", "1", ")", "\n", "self", ".", "n_predicates", "*=", "2", "\n", "if", "maxis", ".", "shape", "[", "0", "]", ">", "4", ":", "\n", "            ", "self", ".", "n_timestamps", "=", "max", "(", "int", "(", "maxis", "[", "3", "]", "+", "1", ")", ",", "int", "(", "maxis", "[", "4", "]", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "n_timestamps", "=", "int", "(", "maxis", "[", "3", "]", "+", "1", ")", "\n", "", "try", ":", "\n", "            ", "inp_f", "=", "open", "(", "str", "(", "self", ".", "root", "/", "f'ts_diffs.pickle'", ")", ",", "'rb'", ")", "\n", "self", ".", "time_diffs", "=", "torch", ".", "from_numpy", "(", "pickle", ".", "load", "(", "inp_f", ")", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "# print(\"Assume all timestamps are regularly spaced\")", "\n", "# self.time_diffs = None", "\n", "inp_f", ".", "close", "(", ")", "\n", "", "except", "OSError", ":", "\n", "            ", "print", "(", "\"Assume all timestamps are regularly spaced\"", ")", "\n", "self", ".", "time_diffs", "=", "None", "\n", "\n", "", "try", ":", "\n", "            ", "e", "=", "open", "(", "str", "(", "self", ".", "root", "/", "f'event_list_all.pickle'", ")", ",", "'rb'", ")", "\n", "self", ".", "events", "=", "pickle", ".", "load", "(", "e", ")", "\n", "e", ".", "close", "(", ")", "\n", "\n", "f", "=", "open", "(", "str", "(", "self", ".", "root", "/", "f'ts_id'", ")", ",", "'rb'", ")", "\n", "dictionary", "=", "pickle", ".", "load", "(", "f", ")", "\n", "f", ".", "close", "(", ")", "\n", "self", ".", "timestamps", "=", "sorted", "(", "dictionary", ".", "keys", "(", ")", ")", "\n", "", "except", "OSError", ":", "\n", "            ", "print", "(", "\"Not using time intervals and events eval\"", ")", "\n", "self", ".", "events", "=", "None", "\n", "\n", "", "if", "self", ".", "events", "is", "None", ":", "\n", "            ", "inp_f", "=", "open", "(", "str", "(", "self", ".", "root", "/", "f'to_skip.pickle'", ")", ",", "'rb'", ")", "\n", "self", ".", "to_skip", ":", "Dict", "[", "str", ",", "Dict", "[", "Tuple", "[", "int", ",", "int", ",", "int", "]", ",", "List", "[", "int", "]", "]", "]", "=", "pickle", ".", "load", "(", "inp_f", ")", "\n", "inp_f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.has_intervals": [[69, 71], ["None"], "methods", ["None"], ["", "", "def", "has_intervals", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "events", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.get_examples": [[72, 74], ["None"], "methods", ["None"], ["", "def", "get_examples", "(", "self", ",", "split", ")", ":", "\n", "        ", "return", "self", ".", "data", "[", "split", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.get_train": [[75, 82], ["numpy.copy", "numpy.copy", "numpy.vstack"], "methods", ["None"], ["", "def", "get_train", "(", "self", ")", ":", "\n", "        ", "copy", "=", "np", ".", "copy", "(", "self", ".", "data", "[", "'train'", "]", ")", "\n", "tmp", "=", "np", ".", "copy", "(", "copy", "[", ":", ",", "0", "]", ")", "\n", "copy", "[", ":", ",", "0", "]", "=", "copy", "[", ":", ",", "2", "]", "\n", "copy", "[", ":", ",", "2", "]", "=", "tmp", "\n", "copy", "[", ":", ",", "1", "]", "+=", "self", ".", "n_predicates", "//", "2", "# has been multiplied by two.", "\n", "return", "np", ".", "vstack", "(", "(", "self", ".", "data", "[", "'train'", "]", ",", "copy", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.eval": [[83, 116], ["datasets.TemporalDataset.get_examples", "torch.from_numpy().cuda", "datasets.TemporalDataset.time_eval", "torch.from_numpy().cuda.clone", "model.get_ranking", "torch.mean().item", "torch.FloatTensor", "torch.from_numpy", "torch.clone", "list", "datasets.TemporalDataset.astype", "torch.randperm", "torch.mean", "map", "len", "torch.mean().item", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.get_examples", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.time_eval", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.get_ranking"], ["", "def", "eval", "(", "\n", "self", ",", "model", ":", "TKBCModel", ",", "split", ":", "str", ",", "n_queries", ":", "int", "=", "-", "1", ",", "missing_eval", ":", "str", "=", "'both'", ",", "\n", "at", ":", "Tuple", "[", "int", "]", "=", "(", "1", ",", "3", ",", "10", ")", "\n", ")", ":", "\n", "        ", "if", "self", ".", "events", "is", "not", "None", ":", "\n", "            ", "return", "self", ".", "time_eval", "(", "model", ",", "split", ",", "n_queries", ",", "'rhs'", ",", "at", ")", "\n", "", "test", "=", "self", ".", "get_examples", "(", "split", ")", "\n", "examples", "=", "torch", ".", "from_numpy", "(", "test", ".", "astype", "(", "'int64'", ")", ")", ".", "cuda", "(", ")", "\n", "missing", "=", "[", "missing_eval", "]", "\n", "if", "missing_eval", "==", "'both'", ":", "\n", "            ", "missing", "=", "[", "'rhs'", ",", "'lhs'", "]", "\n", "\n", "", "mean_reciprocal_rank", "=", "{", "}", "\n", "hits_at", "=", "{", "}", "\n", "\n", "for", "m", "in", "missing", ":", "\n", "            ", "q", "=", "examples", ".", "clone", "(", ")", "\n", "if", "n_queries", ">", "0", ":", "\n", "                ", "permutation", "=", "torch", ".", "randperm", "(", "len", "(", "examples", ")", ")", "[", ":", "n_queries", "]", "\n", "q", "=", "examples", "[", "permutation", "]", "\n", "", "if", "m", "==", "'lhs'", ":", "\n", "                ", "tmp", "=", "torch", ".", "clone", "(", "q", "[", ":", ",", "0", "]", ")", "\n", "q", "[", ":", ",", "0", "]", "=", "q", "[", ":", ",", "2", "]", "\n", "q", "[", ":", ",", "2", "]", "=", "tmp", "\n", "q", "[", ":", ",", "1", "]", "+=", "self", ".", "n_predicates", "//", "2", "\n", "", "ranks", "=", "model", ".", "get_ranking", "(", "q", ",", "self", ".", "to_skip", "[", "m", "]", ",", "batch_size", "=", "500", ")", "\n", "mean_reciprocal_rank", "[", "m", "]", "=", "torch", ".", "mean", "(", "1.", "/", "ranks", ")", ".", "item", "(", ")", "\n", "hits_at", "[", "m", "]", "=", "torch", ".", "FloatTensor", "(", "(", "list", "(", "map", "(", "\n", "lambda", "x", ":", "torch", ".", "mean", "(", "(", "ranks", "<=", "x", ")", ".", "float", "(", ")", ")", ".", "item", "(", ")", ",", "\n", "at", "\n", ")", ")", ")", ")", "\n", "\n", "", "return", "mean_reciprocal_rank", ",", "hits_at", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.time_eval": [[117, 209], ["torch.from_numpy", "torch.from_numpy.float", "torch.cat", "sorted", "collections.defaultdict", "res.update", "datasets.TemporalDataset.get_examples().astype", "torch.cat.tolist", "len", "to_filter_batch.append", "cur_batch.append", "torch.cat", "torch.mean().item", "torch.FloatTensor", "torch.randperm", "sampled_time.unsqueeze", "time_range[].long", "masks[].long().unsqueeze", "masks[].long().unsqueeze", "masks[].long().unsqueeze", "masks[].long().unsqueeze", "collections.defaultdict", "sorted", "torch.cuda.LongTensor", "torch.LongTensor", "model.get_time_ranking", "ranks[].append", "ranks[].append", "ranks[].append", "ranks[].append", "ranks[].append", "list", "mean_reciprocal_rank.items", "datasets.TemporalDataset.get_examples", "len", "len", "to_filter[].keys", "len", "len", "torch.mean", "len", "map", "len", "hits_at.items", "masks[].long", "masks[].long", "masks[].long", "masks[].long", "len", "torch.mean().item", "torch.rand", "torch.mean"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.get_time_ranking", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.get_examples"], ["", "def", "time_eval", "(", "\n", "self", ",", "model", ":", "TKBCModel", ",", "split", ":", "str", ",", "n_queries", ":", "int", "=", "-", "1", ",", "missing_eval", ":", "str", "=", "'both'", ",", "\n", "at", ":", "Tuple", "[", "int", "]", "=", "(", "1", ",", "3", ",", "10", ")", "\n", ")", ":", "\n", "        ", "assert", "missing_eval", "==", "'rhs'", ",", "\"other evals not implemented\"", "\n", "test", "=", "torch", ".", "from_numpy", "(", "\n", "self", ".", "get_examples", "(", "split", ")", ".", "astype", "(", "'int64'", ")", "\n", ")", "\n", "if", "n_queries", ">", "0", ":", "\n", "            ", "permutation", "=", "torch", ".", "randperm", "(", "len", "(", "test", ")", ")", "[", ":", "n_queries", "]", "\n", "test", "=", "test", "[", "permutation", "]", "\n", "\n", "", "time_range", "=", "test", ".", "float", "(", ")", "\n", "sampled_time", "=", "(", "\n", "torch", ".", "rand", "(", "time_range", ".", "shape", "[", "0", "]", ")", "*", "(", "time_range", "[", ":", ",", "4", "]", "-", "time_range", "[", ":", ",", "3", "]", ")", "+", "time_range", "[", ":", ",", "3", "]", "\n", ")", ".", "round", "(", ")", ".", "long", "(", ")", "\n", "has_end", "=", "(", "time_range", "[", ":", ",", "4", "]", "!=", "(", "self", ".", "n_timestamps", "-", "1", ")", ")", "\n", "has_start", "=", "(", "time_range", "[", ":", ",", "3", "]", ">", "0", ")", "\n", "\n", "masks", "=", "{", "\n", "'full_time'", ":", "has_end", "+", "has_start", ",", "\n", "'only_begin'", ":", "has_start", "*", "(", "~", "has_end", ")", ",", "\n", "'only_end'", ":", "has_end", "*", "(", "~", "has_start", ")", ",", "\n", "'no_time'", ":", "(", "~", "has_end", ")", "*", "(", "~", "has_start", ")", "\n", "}", "\n", "\n", "with_time", "=", "torch", ".", "cat", "(", "(", "\n", "sampled_time", ".", "unsqueeze", "(", "1", ")", ",", "\n", "time_range", "[", ":", ",", "0", ":", "3", "]", ".", "long", "(", ")", ",", "\n", "masks", "[", "'full_time'", "]", ".", "long", "(", ")", ".", "unsqueeze", "(", "1", ")", ",", "\n", "masks", "[", "'only_begin'", "]", ".", "long", "(", ")", ".", "unsqueeze", "(", "1", ")", ",", "\n", "masks", "[", "'only_end'", "]", ".", "long", "(", ")", ".", "unsqueeze", "(", "1", ")", ",", "\n", "masks", "[", "'no_time'", "]", ".", "long", "(", ")", ".", "unsqueeze", "(", "1", ")", ",", "\n", ")", ",", "1", ")", "\n", "# generate events", "\n", "eval_events", "=", "sorted", "(", "with_time", ".", "tolist", "(", ")", ")", "\n", "\n", "to_filter", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Dict", "[", "int", ",", "int", "]", "]", "=", "defaultdict", "(", "lambda", ":", "defaultdict", "(", "int", ")", ")", "\n", "\n", "id_event", "=", "0", "\n", "id_timeline", "=", "0", "\n", "batch_size", "=", "100", "\n", "to_filter_batch", "=", "[", "]", "\n", "cur_batch", "=", "[", "]", "\n", "\n", "ranks", "=", "{", "\n", "'full_time'", ":", "[", "]", ",", "'only_begin'", ":", "[", "]", ",", "'only_end'", ":", "[", "]", ",", "'no_time'", ":", "[", "]", ",", "\n", "'all'", ":", "[", "]", "\n", "}", "\n", "while", "id_event", "<", "len", "(", "eval_events", ")", ":", "\n", "# Follow timeline to add events to filters", "\n", "            ", "while", "id_timeline", "<", "len", "(", "self", ".", "events", ")", "and", "self", ".", "events", "[", "id_timeline", "]", "[", "0", "]", "<=", "eval_events", "[", "id_event", "]", "[", "3", "]", ":", "\n", "                ", "date", ",", "event_type", ",", "(", "lhs", ",", "rel", ",", "rhs", ")", "=", "self", ".", "events", "[", "id_timeline", "]", "\n", "if", "event_type", "<", "0", ":", "# begin", "\n", "                    ", "to_filter", "[", "(", "lhs", ",", "rel", ")", "]", "[", "rhs", "]", "+=", "1", "\n", "", "if", "event_type", ">", "0", ":", "# end", "\n", "                    ", "to_filter", "[", "(", "lhs", ",", "rel", ")", "]", "[", "rhs", "]", "-=", "1", "\n", "if", "to_filter", "[", "(", "lhs", ",", "rel", ")", "]", "[", "rhs", "]", "==", "0", ":", "\n", "                        ", "del", "to_filter", "[", "(", "lhs", ",", "rel", ")", "]", "[", "rhs", "]", "\n", "", "", "id_timeline", "+=", "1", "\n", "", "date", ",", "lhs", ",", "rel", ",", "rhs", ",", "full_time", ",", "only_begin", ",", "only_end", ",", "no_time", "=", "eval_events", "[", "id_event", "]", "\n", "\n", "to_filter_batch", ".", "append", "(", "sorted", "(", "to_filter", "[", "(", "lhs", ",", "rel", ")", "]", ".", "keys", "(", ")", ")", ")", "\n", "cur_batch", ".", "append", "(", "(", "lhs", ",", "rel", ",", "rhs", ",", "date", ",", "full_time", ",", "only_begin", ",", "only_end", ",", "no_time", ")", ")", "\n", "# once a batch is ready, call get_ranking and reset", "\n", "if", "len", "(", "cur_batch", ")", "==", "batch_size", "or", "id_event", "==", "len", "(", "eval_events", ")", "-", "1", ":", "\n", "                ", "cuda_batch", "=", "torch", ".", "cuda", ".", "LongTensor", "(", "cur_batch", ")", "\n", "bbatch", "=", "torch", ".", "LongTensor", "(", "cur_batch", ")", "\n", "batch_ranks", "=", "model", ".", "get_time_ranking", "(", "cuda_batch", "[", ":", ",", ":", "4", "]", ",", "to_filter_batch", ",", "500000", ")", "\n", "\n", "ranks", "[", "'full_time'", "]", ".", "append", "(", "batch_ranks", "[", "bbatch", "[", ":", ",", "4", "]", "==", "1", "]", ")", "\n", "ranks", "[", "'only_begin'", "]", ".", "append", "(", "batch_ranks", "[", "bbatch", "[", ":", ",", "5", "]", "==", "1", "]", ")", "\n", "ranks", "[", "'only_end'", "]", ".", "append", "(", "batch_ranks", "[", "bbatch", "[", ":", ",", "6", "]", "==", "1", "]", ")", "\n", "ranks", "[", "'no_time'", "]", ".", "append", "(", "batch_ranks", "[", "bbatch", "[", ":", ",", "7", "]", "==", "1", "]", ")", "\n", "\n", "ranks", "[", "'all'", "]", ".", "append", "(", "batch_ranks", ")", "\n", "cur_batch", "=", "[", "]", "\n", "to_filter_batch", "=", "[", "]", "\n", "", "id_event", "+=", "1", "\n", "\n", "", "ranks", "=", "{", "x", ":", "torch", ".", "cat", "(", "ranks", "[", "x", "]", ")", "for", "x", "in", "ranks", "if", "len", "(", "ranks", "[", "x", "]", ")", ">", "0", "}", "\n", "mean_reciprocal_rank", "=", "{", "x", ":", "torch", ".", "mean", "(", "1.", "/", "ranks", "[", "x", "]", ")", ".", "item", "(", ")", "for", "x", "in", "ranks", "if", "len", "(", "ranks", "[", "x", "]", ")", ">", "0", "}", "\n", "hits_at", "=", "{", "z", ":", "torch", ".", "FloatTensor", "(", "(", "list", "(", "map", "(", "\n", "lambda", "x", ":", "torch", ".", "mean", "(", "(", "ranks", "[", "z", "]", "<=", "x", ")", ".", "float", "(", ")", ")", ".", "item", "(", ")", ",", "\n", "at", "\n", ")", ")", ")", ")", "for", "z", "in", "ranks", "if", "len", "(", "ranks", "[", "z", "]", ")", ">", "0", "}", "\n", "\n", "res", "=", "{", "\n", "(", "'MRR_'", "+", "x", ")", ":", "y", "for", "x", ",", "y", "in", "mean_reciprocal_rank", ".", "items", "(", ")", "\n", "}", "\n", "res", ".", "update", "(", "{", "(", "'hits@_'", "+", "x", ")", ":", "y", "for", "x", ",", "y", "in", "hits_at", ".", "items", "(", ")", "}", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.breakdown_time_eval": [[210, 285], ["torch.from_numpy", "torch.from_numpy.float", "torch.cat", "sorted", "collections.defaultdict", "collections.defaultdict", "datasets.TemporalDataset.get_examples().astype", "torch.cat.tolist", "len", "to_filter_batch.append", "cur_batch.append", "torch.FloatTensor", "torch.sum().item", "torch.randperm", "sampled_time.unsqueeze", "time_range[].long", "masks[].long().unsqueeze", "masks[].long().unsqueeze", "masks[].long().unsqueeze", "masks[].long().unsqueeze", "collections.defaultdict", "sorted", "torch.cuda.LongTensor", "torch.LongTensor", "model.get_time_ranking", "zip", "datasets.TemporalDataset.get_examples", "len", "len", "to_filter[].keys", "len", "ranks[].append", "torch.sum", "masks[].long", "masks[].long", "masks[].long", "masks[].long", "len", "rank.item", "torch.rand", "predicate.item"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.get_time_ranking", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.get_examples"], ["", "def", "breakdown_time_eval", "(", "\n", "self", ",", "model", ":", "TKBCModel", ",", "split", ":", "str", ",", "n_queries", ":", "int", "=", "-", "1", ",", "missing_eval", ":", "str", "=", "'rhs'", ",", "\n", ")", ":", "\n", "        ", "assert", "missing_eval", "==", "'rhs'", ",", "\"other evals not implemented\"", "\n", "test", "=", "torch", ".", "from_numpy", "(", "\n", "self", ".", "get_examples", "(", "split", ")", ".", "astype", "(", "'int64'", ")", "\n", ")", "\n", "if", "n_queries", ">", "0", ":", "\n", "            ", "permutation", "=", "torch", ".", "randperm", "(", "len", "(", "test", ")", ")", "[", ":", "n_queries", "]", "\n", "test", "=", "test", "[", "permutation", "]", "\n", "\n", "", "time_range", "=", "test", ".", "float", "(", ")", "\n", "sampled_time", "=", "(", "\n", "torch", ".", "rand", "(", "time_range", ".", "shape", "[", "0", "]", ")", "*", "(", "time_range", "[", ":", ",", "4", "]", "-", "time_range", "[", ":", ",", "3", "]", ")", "+", "time_range", "[", ":", ",", "3", "]", "\n", ")", ".", "round", "(", ")", ".", "long", "(", ")", "\n", "has_end", "=", "(", "time_range", "[", ":", ",", "4", "]", "!=", "(", "self", ".", "n_timestamps", "-", "1", ")", ")", "\n", "has_start", "=", "(", "time_range", "[", ":", ",", "3", "]", ">", "0", ")", "\n", "\n", "masks", "=", "{", "\n", "'full_time'", ":", "has_end", "+", "has_start", ",", "\n", "'only_begin'", ":", "has_start", "*", "(", "~", "has_end", ")", ",", "\n", "'only_end'", ":", "has_end", "*", "(", "~", "has_start", ")", ",", "\n", "'no_time'", ":", "(", "~", "has_end", ")", "*", "(", "~", "has_start", ")", "\n", "}", "\n", "\n", "with_time", "=", "torch", ".", "cat", "(", "(", "\n", "sampled_time", ".", "unsqueeze", "(", "1", ")", ",", "\n", "time_range", "[", ":", ",", "0", ":", "3", "]", ".", "long", "(", ")", ",", "\n", "masks", "[", "'full_time'", "]", ".", "long", "(", ")", ".", "unsqueeze", "(", "1", ")", ",", "\n", "masks", "[", "'only_begin'", "]", ".", "long", "(", ")", ".", "unsqueeze", "(", "1", ")", ",", "\n", "masks", "[", "'only_end'", "]", ".", "long", "(", ")", ".", "unsqueeze", "(", "1", ")", ",", "\n", "masks", "[", "'no_time'", "]", ".", "long", "(", ")", ".", "unsqueeze", "(", "1", ")", ",", "\n", ")", ",", "1", ")", "\n", "# generate events", "\n", "eval_events", "=", "sorted", "(", "with_time", ".", "tolist", "(", ")", ")", "\n", "\n", "to_filter", ":", "Dict", "[", "Tuple", "[", "int", ",", "int", "]", ",", "Dict", "[", "int", ",", "int", "]", "]", "=", "defaultdict", "(", "lambda", ":", "defaultdict", "(", "int", ")", ")", "\n", "\n", "id_event", "=", "0", "\n", "id_timeline", "=", "0", "\n", "batch_size", "=", "100", "\n", "to_filter_batch", "=", "[", "]", "\n", "cur_batch", "=", "[", "]", "\n", "\n", "ranks", "=", "defaultdict", "(", "list", ")", "\n", "while", "id_event", "<", "len", "(", "eval_events", ")", ":", "\n", "# Follow timeline to add events to filters", "\n", "            ", "while", "id_timeline", "<", "len", "(", "self", ".", "events", ")", "and", "self", ".", "events", "[", "id_timeline", "]", "[", "0", "]", "<=", "eval_events", "[", "id_event", "]", "[", "3", "]", ":", "\n", "                ", "date", ",", "event_type", ",", "(", "lhs", ",", "rel", ",", "rhs", ")", "=", "self", ".", "events", "[", "id_timeline", "]", "\n", "if", "event_type", "<", "0", ":", "# begin", "\n", "                    ", "to_filter", "[", "(", "lhs", ",", "rel", ")", "]", "[", "rhs", "]", "+=", "1", "\n", "", "if", "event_type", ">", "0", ":", "# end", "\n", "                    ", "to_filter", "[", "(", "lhs", ",", "rel", ")", "]", "[", "rhs", "]", "-=", "1", "\n", "if", "to_filter", "[", "(", "lhs", ",", "rel", ")", "]", "[", "rhs", "]", "==", "0", ":", "\n", "                        ", "del", "to_filter", "[", "(", "lhs", ",", "rel", ")", "]", "[", "rhs", "]", "\n", "", "", "id_timeline", "+=", "1", "\n", "", "date", ",", "lhs", ",", "rel", ",", "rhs", ",", "full_time", ",", "only_begin", ",", "only_end", ",", "no_time", "=", "eval_events", "[", "id_event", "]", "\n", "\n", "to_filter_batch", ".", "append", "(", "sorted", "(", "to_filter", "[", "(", "lhs", ",", "rel", ")", "]", ".", "keys", "(", ")", ")", ")", "\n", "cur_batch", ".", "append", "(", "(", "lhs", ",", "rel", ",", "rhs", ",", "date", ",", "full_time", ",", "only_begin", ",", "only_end", ",", "no_time", ")", ")", "\n", "# once a batch is ready, call get_ranking and reset", "\n", "if", "len", "(", "cur_batch", ")", "==", "batch_size", "or", "id_event", "==", "len", "(", "eval_events", ")", "-", "1", ":", "\n", "                ", "cuda_batch", "=", "torch", ".", "cuda", ".", "LongTensor", "(", "cur_batch", ")", "\n", "bbatch", "=", "torch", ".", "LongTensor", "(", "cur_batch", ")", "\n", "batch_ranks", "=", "model", ".", "get_time_ranking", "(", "cuda_batch", "[", ":", ",", ":", "4", "]", ",", "to_filter_batch", ",", "500000", ")", "\n", "for", "rank", ",", "predicate", "in", "zip", "(", "batch_ranks", ",", "bbatch", "[", ":", ",", "1", "]", ")", ":", "\n", "                    ", "ranks", "[", "predicate", ".", "item", "(", ")", "]", ".", "append", "(", "rank", ".", "item", "(", ")", ")", "\n", "", "cur_batch", "=", "[", "]", "\n", "to_filter_batch", "=", "[", "]", "\n", "", "id_event", "+=", "1", "\n", "\n", "", "ranks", "=", "{", "x", ":", "torch", ".", "FloatTensor", "(", "ranks", "[", "x", "]", ")", "for", "x", "in", "ranks", "}", "\n", "sum_reciprocal_rank", "=", "{", "x", ":", "torch", ".", "sum", "(", "1.", "/", "ranks", "[", "x", "]", ")", ".", "item", "(", ")", "for", "x", "in", "ranks", "}", "\n", "\n", "return", "sum_reciprocal_rank", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.time_AUC": [[286, 299], ["torch.from_numpy", "model.get_auc", "datasets.TemporalDataset.get_examples().astype", "torch.from_numpy.cuda", "sklearn.metrics.average_precision_score", "sklearn.metrics.average_precision_score", "torch.randperm", "datasets.TemporalDataset.get_examples", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TKBCModel.get_auc", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.get_examples"], ["", "def", "time_AUC", "(", "self", ",", "model", ":", "TKBCModel", ",", "split", ":", "str", ",", "n_queries", ":", "int", "=", "-", "1", ")", ":", "\n", "        ", "test", "=", "torch", ".", "from_numpy", "(", "\n", "self", ".", "get_examples", "(", "split", ")", ".", "astype", "(", "'int64'", ")", "\n", ")", "\n", "if", "n_queries", ">", "0", ":", "\n", "            ", "permutation", "=", "torch", ".", "randperm", "(", "len", "(", "test", ")", ")", "[", ":", "n_queries", "]", "\n", "test", "=", "test", "[", "permutation", "]", "\n", "\n", "", "truth", ",", "scores", "=", "model", ".", "get_auc", "(", "test", ".", "cuda", "(", ")", ")", "\n", "\n", "return", "{", "\n", "'micro'", ":", "average_precision_score", "(", "truth", ",", "scores", ",", "average", "=", "'micro'", ")", ",", "\n", "'macro'", ":", "average_precision_score", "(", "truth", ",", "scores", ",", "average", "=", "'macro'", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.datasets.TemporalDataset.get_shape": [[302, 304], ["None"], "methods", ["None"], ["", "def", "get_shape", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_entities", ",", "self", ".", "n_predicates", ",", "self", ".", "n_entities", ",", "self", ".", "n_timestamps", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.optimizers.TKBCOptimizer.__init__": [[14, 26], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "model", ":", "TKBCModel", ",", "\n", "emb_regularizer", ":", "Regularizer", ",", "temporal_regularizer", ":", "Regularizer", ",", "\n", "optimizer", ":", "optim", ".", "Optimizer", ",", "batch_size", ":", "int", "=", "256", ",", "\n", "verbose", ":", "bool", "=", "True", "\n", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "emb_regularizer", "=", "emb_regularizer", "\n", "self", ".", "temporal_regularizer", "=", "temporal_regularizer", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "verbose", "=", "verbose", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.optimizers.TKBCOptimizer.epoch": [[27, 56], ["torch.nn.CrossEntropyLoss", "tqdm.tqdm", "bar.set_description", "actual_examples[].cuda", "optimizers.TKBCOptimizer.model.forward", "torch.nn.CrossEntropyLoss.", "optimizers.TKBCOptimizer.emb_regularizer.forward", "torch.zeros_like", "optimizers.TKBCOptimizer.optimizer.zero_grad", "l.backward", "optimizers.TKBCOptimizer.optimizer.step", "bar.update", "bar.set_postfix", "torch.randperm", "optimizers.TKBCOptimizer.temporal_regularizer.forward", "nn.CrossEntropyLoss.item", "optimizers.TKBCOptimizer.item", "optimizers.TKBCOptimizer.item"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.Lambda3.forward", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.Lambda3.forward", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.Lambda3.forward"], ["", "def", "epoch", "(", "self", ",", "examples", ":", "torch", ".", "LongTensor", ")", ":", "\n", "        ", "actual_examples", "=", "examples", "[", "torch", ".", "randperm", "(", "examples", ".", "shape", "[", "0", "]", ")", ",", ":", "]", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'mean'", ")", "\n", "with", "tqdm", ".", "tqdm", "(", "total", "=", "examples", ".", "shape", "[", "0", "]", ",", "unit", "=", "'ex'", ",", "disable", "=", "not", "self", ".", "verbose", ")", "as", "bar", ":", "\n", "            ", "bar", ".", "set_description", "(", "f'train loss'", ")", "\n", "b_begin", "=", "0", "\n", "while", "b_begin", "<", "examples", ".", "shape", "[", "0", "]", ":", "\n", "                ", "input_batch", "=", "actual_examples", "[", "\n", "b_begin", ":", "b_begin", "+", "self", ".", "batch_size", "\n", "]", ".", "cuda", "(", ")", "\n", "predictions", ",", "factors", ",", "time", "=", "self", ".", "model", ".", "forward", "(", "input_batch", ")", "\n", "truth", "=", "input_batch", "[", ":", ",", "2", "]", "\n", "\n", "l_fit", "=", "loss", "(", "predictions", ",", "truth", ")", "\n", "l_reg", "=", "self", ".", "emb_regularizer", ".", "forward", "(", "factors", ")", "\n", "l_time", "=", "torch", ".", "zeros_like", "(", "l_reg", ")", "\n", "if", "time", "is", "not", "None", ":", "\n", "                    ", "l_time", "=", "self", ".", "temporal_regularizer", ".", "forward", "(", "time", ")", "\n", "", "l", "=", "l_fit", "+", "l_reg", "+", "l_time", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "l", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "b_begin", "+=", "self", ".", "batch_size", "\n", "bar", ".", "update", "(", "input_batch", ".", "shape", "[", "0", "]", ")", "\n", "bar", ".", "set_postfix", "(", "\n", "loss", "=", "f'{l_fit.item():.0f}'", ",", "\n", "reg", "=", "f'{l_reg.item():.0f}'", ",", "\n", "cont", "=", "f'{l_time.item():.0f}'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.optimizers.IKBCOptimizer.__init__": [[60, 73], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "model", ":", "TKBCModel", ",", "\n", "emb_regularizer", ":", "Regularizer", ",", "temporal_regularizer", ":", "Regularizer", ",", "\n", "optimizer", ":", "optim", ".", "Optimizer", ",", "dataset", ":", "TemporalDataset", ",", "batch_size", ":", "int", "=", "256", ",", "\n", "verbose", ":", "bool", "=", "True", "\n", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "emb_regularizer", "=", "emb_regularizer", "\n", "self", ".", "temporal_regularizer", "=", "temporal_regularizer", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "verbose", "=", "verbose", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.optimizers.IKBCOptimizer.epoch": [[74, 126], ["torch.nn.CrossEntropyLoss", "tqdm.tqdm", "bar.set_description", "actual_examples[].cuda", "torch.cat", "optimizers.IKBCOptimizer.model.forward", "torch.nn.CrossEntropyLoss.", "optimizers.IKBCOptimizer.model.has_time", "optimizers.IKBCOptimizer.emb_regularizer.forward", "torch.zeros_like", "optimizers.IKBCOptimizer.optimizer.zero_grad", "l.backward", "optimizers.IKBCOptimizer.optimizer.step", "bar.update", "bar.set_postfix", "torch.randperm", "optimizers.IKBCOptimizer.model.forward_over_time", "torch.nn.CrossEntropyLoss.", "optimizers.IKBCOptimizer.temporal_regularizer.forward", "sampled_time.unsqueeze", "these_examples[].cuda().long", "truth.cuda", "these_examples[].cuda", "nn.CrossEntropyLoss.item", "optimizers.IKBCOptimizer.item", "optimizers.IKBCOptimizer.item", "time_range[].float", "nn.CrossEntropyLoss.item", "torch.rand().cuda", "these_examples[].float", "type", "torch.rand().cuda", "torch.rand", "torch.rand"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.Lambda3.forward", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.has_time", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.Lambda3.forward", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.models.TNTComplEx.forward_over_time", "home.repos.pwc.inspect_result.facebookresearch_tkbc.tkbc.regularizers.Lambda3.forward"], ["", "def", "epoch", "(", "self", ",", "examples", ":", "torch", ".", "LongTensor", ")", ":", "\n", "        ", "actual_examples", "=", "examples", "[", "torch", ".", "randperm", "(", "examples", ".", "shape", "[", "0", "]", ")", ",", ":", "]", "\n", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'mean'", ")", "\n", "with", "tqdm", ".", "tqdm", "(", "total", "=", "examples", ".", "shape", "[", "0", "]", ",", "unit", "=", "'ex'", ",", "disable", "=", "not", "self", ".", "verbose", ")", "as", "bar", ":", "\n", "            ", "bar", ".", "set_description", "(", "f'train loss'", ")", "\n", "b_begin", "=", "0", "\n", "while", "b_begin", "<", "examples", ".", "shape", "[", "0", "]", ":", "\n", "                ", "time_range", "=", "actual_examples", "[", "b_begin", ":", "b_begin", "+", "self", ".", "batch_size", "]", ".", "cuda", "(", ")", "\n", "\n", "## RHS Prediction loss", "\n", "sampled_time", "=", "(", "\n", "torch", ".", "rand", "(", "time_range", ".", "shape", "[", "0", "]", ")", ".", "cuda", "(", ")", "*", "(", "time_range", "[", ":", ",", "4", "]", "-", "time_range", "[", ":", ",", "3", "]", ")", ".", "float", "(", ")", "+", "\n", "time_range", "[", ":", ",", "3", "]", ".", "float", "(", ")", "\n", ")", ".", "round", "(", ")", ".", "long", "(", ")", "\n", "with_time", "=", "torch", ".", "cat", "(", "(", "time_range", "[", ":", ",", "0", ":", "3", "]", ",", "sampled_time", ".", "unsqueeze", "(", "1", ")", ")", ",", "1", ")", "\n", "\n", "predictions", ",", "factors", ",", "time", "=", "self", ".", "model", ".", "forward", "(", "with_time", ")", "\n", "truth", "=", "with_time", "[", ":", ",", "2", "]", "\n", "\n", "l_fit", "=", "loss", "(", "predictions", ",", "truth", ")", "\n", "\n", "## Time prediction loss (ie cross entropy over time)", "\n", "time_loss", "=", "0.", "\n", "if", "self", ".", "model", ".", "has_time", "(", ")", ":", "\n", "                    ", "filtering", "=", "~", "(", "\n", "(", "time_range", "[", ":", ",", "3", "]", "==", "0", ")", "*", "\n", "(", "time_range", "[", ":", ",", "4", "]", "==", "(", "self", ".", "dataset", ".", "n_timestamps", "-", "1", ")", ")", "\n", ")", "# NOT no begin and no end", "\n", "these_examples", "=", "time_range", "[", "filtering", ",", ":", "]", "\n", "truth", "=", "(", "\n", "torch", ".", "rand", "(", "these_examples", ".", "shape", "[", "0", "]", ")", ".", "cuda", "(", ")", "*", "(", "these_examples", "[", ":", ",", "4", "]", "-", "these_examples", "[", ":", ",", "3", "]", ")", ".", "float", "(", ")", "+", "\n", "these_examples", "[", ":", ",", "3", "]", ".", "float", "(", ")", "\n", ")", ".", "round", "(", ")", ".", "long", "(", ")", "\n", "time_predictions", "=", "self", ".", "model", ".", "forward_over_time", "(", "these_examples", "[", ":", ",", ":", "3", "]", ".", "cuda", "(", ")", ".", "long", "(", ")", ")", "\n", "time_loss", "=", "loss", "(", "time_predictions", ",", "truth", ".", "cuda", "(", ")", ")", "\n", "\n", "", "l_reg", "=", "self", ".", "emb_regularizer", ".", "forward", "(", "factors", ")", "\n", "l_time", "=", "torch", ".", "zeros_like", "(", "l_reg", ")", "\n", "if", "time", "is", "not", "None", ":", "\n", "                    ", "l_time", "=", "self", ".", "temporal_regularizer", ".", "forward", "(", "time", ")", "\n", "", "l", "=", "l_fit", "+", "l_reg", "+", "l_time", "+", "time_loss", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "l", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "b_begin", "+=", "self", ".", "batch_size", "\n", "bar", ".", "update", "(", "with_time", ".", "shape", "[", "0", "]", ")", "\n", "bar", ".", "set_postfix", "(", "\n", "loss", "=", "f'{l_fit.item():.0f}'", ",", "\n", "loss_time", "=", "f'{time_loss if type(time_loss) == float else time_loss.item() :.0f}'", ",", "\n", "reg", "=", "f'{l_reg.item():.0f}'", ",", "\n", "cont", "=", "f'{l_time.item():.4f}'", "\n", ")", "\n"]]}