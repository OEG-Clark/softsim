{"home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig7_FullyDigital_BFgain.OMP_np.func_codedesign": [[8, 16], ["numpy.linspace", "numpy.zeros", "range", "numpy.float32", "numpy.exp", "list", "range", "numpy.sin"], "function", ["None"], ["def", "func_codedesign", "(", "delta_inv", ",", "phi_min", ",", "phi_max", ",", "N1", ")", ":", "\n", "    ", "phi", "=", "np", ".", "linspace", "(", "start", "=", "phi_min", ",", "stop", "=", "phi_max", ",", "num", "=", "delta_inv", ")", "\n", "A_tmp", "=", "np", ".", "zeros", "(", "[", "N1", ",", "delta_inv", "]", ",", "dtype", "=", "np", ".", "complex128", ")", "\n", "for", "i", "in", "range", "(", "delta_inv", ")", ":", "\n", "        ", "from0toN1", "=", "np", ".", "float32", "(", "list", "(", "range", "(", "0", ",", "N1", ")", ")", ")", "\n", "a_phi1", "=", "np", ".", "exp", "(", "1j", "*", "np", ".", "pi", "*", "from0toN1", "*", "np", ".", "sin", "(", "phi", "[", "i", "]", ")", ")", "\n", "A_tmp", "[", ":", ",", "i", "]", "=", "a_phi1", "\n", "", "return", "A_tmp", ",", "phi", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_channel": [[9, 37], ["numpy.array", "numpy.mod", "numpy.reshape", "numpy.floor", "numpy.reshape", "numpy.random.uniform", "numpy.sin", "numpy.exp", "numpy.arange", "numpy.random.normal", "numpy.random.uniform", "numpy.random.uniform", "numpy.cos", "numpy.sin", "numpy.random.normal", "numpy.zeros", "numpy.arange", "numpy.random.normal", "numpy.random.normal", "numpy.zeros", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["def", "generate_channel", "(", "params_system", ",", "location_user_initial", ",", "Rician_factor", ",", "\n", "scale_factor", ",", "num_samples", ",", "irs_Nh", ",", "is_Tx", ")", ":", "\n", "# scale_factor: can be viewed as (downlink noise_power_dB- downlink Pt)", "\n", "    ", "location_irs", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", "]", ")", "\n", "(", "num_elements_irs", ",", "num_user", ")", "=", "params_system", "\n", "channel_irs_user", ",", "set_location_user", ",", "channel_los", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "i1", "=", "np", ".", "mod", "(", "np", ".", "arange", "(", "num_elements_irs", ")", ",", "irs_Nh", ")", "\n", "i1", "=", "np", ".", "reshape", "(", "i1", ",", "(", "1", ",", "num_elements_irs", ")", ")", "\n", "i2", "=", "np", ".", "floor", "(", "np", ".", "arange", "(", "num_elements_irs", ")", "/", "irs_Nh", ")", "\n", "i2", "=", "np", ".", "reshape", "(", "i2", ",", "(", "1", ",", "num_elements_irs", ")", ")", "\n", "tmp", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0", ",", "scale", "=", "np", ".", "sqrt", "(", "0.5", ")", ",", "size", "=", "[", "num_samples", ",", "num_elements_irs", ",", "num_user", "]", ")", "+", "1j", "*", "np", ".", "random", ".", "normal", "(", "loc", "=", "0", ",", "scale", "=", "np", ".", "sqrt", "(", "0.5", ")", ",", "size", "=", "[", "num_samples", ",", "num_elements_irs", ",", "num_user", "]", ")", "\n", "if", "is_Tx", ":", "\n", "        ", "phi", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "np", ".", "pi", "/", "2", ",", "size", "=", "[", "num_samples", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "        ", "phi", "=", "np", ".", "random", ".", "uniform", "(", "3", "*", "np", ".", "pi", "/", "2", ",", "2", "*", "np", ".", "pi", ",", "size", "=", "[", "num_samples", ",", "1", "]", ")", "\n", "", "theta", "=", "np", ".", "random", ".", "uniform", "(", "-", "np", ".", "pi", "/", "2", ",", "np", ".", "pi", "/", "2", ",", "size", "=", "[", "num_samples", ",", "1", "]", ")", "\n", "aoa_irs_y", "=", "np", ".", "cos", "(", "theta", ")", "*", "np", ".", "sin", "(", "phi", ")", "\n", "aoa_irs_z", "=", "np", ".", "sin", "(", "theta", ")", "\n", "a_irs_user", "=", "np", ".", "exp", "(", "1j", "*", "np", ".", "pi", "*", "(", "aoa_irs_y", "*", "i1", "+", "aoa_irs_z", "*", "i2", ")", ")", "\n", "alpha", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0", ",", "scale", "=", "np", ".", "sqrt", "(", "0.5", ")", ",", "size", "=", "[", "num_samples", ",", "1", "]", ")", "+", "1j", "*", "np", ".", "random", ".", "normal", "(", "loc", "=", "0", ",", "scale", "=", "np", ".", "sqrt", "(", "0.5", ")", ",", "size", "=", "[", "num_samples", ",", "1", "]", ")", "\n", "a_irs_user", "=", "alpha", "*", "a_irs_user", "\n", "channels", "=", "np", ".", "zeros", "(", "[", "num_samples", ",", "num_elements_irs", ",", "num_user", "]", ")", "+", "1j", "*", "np", ".", "zeros", "(", "[", "num_elements_irs", ",", "num_user", "]", ")", "\n", "channels", "[", ":", ",", ":", ",", "0", "]", "=", "np", ".", "sqrt", "(", "Rician_factor", "/", "(", "1", "+", "Rician_factor", ")", ")", "*", "a_irs_user", "+", "np", ".", "sqrt", "(", "\n", "1", "/", "(", "1", "+", "Rician_factor", ")", ")", "*", "tmp", "[", ":", ",", ":", ",", "0", "]", "\n", "# channels[:, :,0] = a_irs_user", "\n", "return", "channels", ",", "set_location_user", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.main_generate_channel": [[39, 73], ["os.path.exists", "generate_channel.generate_channel", "generate_channel.generate_channel", "os.path.exists", "os.makedirs", "scipy.loadmat", "generate_channel.generate_channel", "generate_channel.generate_channel", "scipy.savemat", "str"], "function", ["home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_channel", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_channel", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_channel", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_channel"], ["", "def", "main_generate_channel", "(", "num_elements_irs", ",", "num_user", ",", "irs_Nh", ",", "num_samples", ",", "Rician_factor", ",", "location_user", "=", "None", ",", "\n", "scale_factor", "=", "120", ",", "isTesting", "=", "False", ")", ":", "\n", "    ", "params_system", "=", "(", "num_elements_irs", ",", "num_user", ")", "\n", "if", "isTesting", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "'Rician_channel'", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "'Rician_channel'", ")", "\n", "", "params_all", "=", "(", "num_elements_irs", ",", "num_user", ",", "irs_Nh", ",", "num_samples", ",", "Rician_factor", ",", "scale_factor", ")", "\n", "file_test_channel", "=", "'./Rician_channel/channel'", "+", "str", "(", "params_all", ")", "+", "'.mat'", "\n", "if", "os", ".", "path", ".", "exists", "(", "file_test_channel", ")", ":", "\n", "            ", "data_test", "=", "sio", ".", "loadmat", "(", "file_test_channel", ")", "\n", "channel_tx", ",", "set_location_tx", "=", "data_test", "[", "'channel_tx'", "]", ",", "data_test", "[", "'set_location_tx'", "]", "\n", "channel_rx", ",", "set_location_rx", "=", "data_test", "[", "'channel_rx'", "]", ",", "data_test", "[", "'set_location_rx'", "]", "\n", "", "else", ":", "\n", "            ", "channel_tx", ",", "set_location_tx", "=", "generate_channel", "(", "params_system", ",", "location_user_initial", "=", "location_user", ",", "\n", "Rician_factor", "=", "Rician_factor", ",", "\n", "scale_factor", "=", "scale_factor", ",", "num_samples", "=", "num_samples", ",", "\n", "irs_Nh", "=", "irs_Nh", ",", "is_Tx", "=", "True", ")", "\n", "channel_rx", ",", "set_location_rx", "=", "generate_channel", "(", "params_system", ",", "location_user_initial", "=", "location_user", ",", "\n", "Rician_factor", "=", "Rician_factor", ",", "\n", "scale_factor", "=", "scale_factor", ",", "num_samples", "=", "num_samples", ",", "\n", "irs_Nh", "=", "irs_Nh", ",", "is_Tx", "=", "False", ")", "\n", "sio", ".", "savemat", "(", "file_test_channel", ",", "\n", "{", "'channel_tx'", ":", "channel_tx", ",", "'set_location_tx'", ":", "set_location_tx", ",", "'channel_rx'", ":", "channel_rx", ",", "\n", "'set_location_rx'", ":", "set_location_rx", "}", ")", "\n", "", "", "else", ":", "\n", "        ", "channel_tx", ",", "set_location_tx", "=", "generate_channel", "(", "params_system", ",", "location_user_initial", "=", "location_user", ",", "\n", "Rician_factor", "=", "Rician_factor", ",", "\n", "scale_factor", "=", "scale_factor", ",", "num_samples", "=", "num_samples", ",", "\n", "irs_Nh", "=", "irs_Nh", ",", "is_Tx", "=", "True", ")", "\n", "channel_rx", ",", "set_location_rx", "=", "generate_channel", "(", "params_system", ",", "location_user_initial", "=", "location_user", ",", "\n", "Rician_factor", "=", "Rician_factor", ",", "\n", "scale_factor", "=", "scale_factor", ",", "num_samples", "=", "num_samples", ",", "\n", "irs_Nh", "=", "irs_Nh", ",", "is_Tx", "=", "False", ")", "\n", "", "return", "channel_tx", ",", "channel_rx", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_pilots": [[75, 91], ["scipy.linalg.dft", "numpy.array", "numpy.reshape", "numpy.random.uniform", "numpy.exp", "numpy.repeat", "scipy.linalg.dft", "numpy.repeat", "numpy.maximum"], "function", ["None"], ["", "def", "generate_pilots", "(", "len_pilot", ",", "num_elements_irs", ",", "num_user", ")", ":", "\n", "    ", "len_frame", "=", "num_user", "\n", "num_frame", "=", "len_pilot", "//", "len_frame", "\n", "if", "num_elements_irs", ">", "num_frame", ":", "\n", "        ", "phase_shifts", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0", ",", "high", "=", "2", "*", "np", ".", "pi", ",", "size", "=", "(", "num_elements_irs", ",", "num_frame", ")", ")", "\n", "phase_shifts", "=", "np", ".", "exp", "(", "1j", "*", "phase_shifts", ")", "\n", "phase_shifts", "=", "np", ".", "repeat", "(", "phase_shifts", ",", "len_frame", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "phase_shifts", "=", "dft", "(", "np", ".", "maximum", "(", "num_elements_irs", ",", "num_frame", ")", ")", "\n", "phase_shifts", "=", "phase_shifts", "[", "0", ":", "num_elements_irs", ",", "0", ":", "num_frame", "]", "\n", "phase_shifts", "=", "np", ".", "repeat", "(", "phase_shifts", ",", "len_frame", ",", "axis", "=", "1", ")", "\n", "", "pilots_subframe", "=", "dft", "(", "len_frame", ")", "\n", "pilots_subframe", "=", "pilots_subframe", "[", ":", ",", "0", ":", "num_user", "]", "\n", "pilots", "=", "np", ".", "array", "(", "[", "pilots_subframe", "]", "*", "num_frame", ")", "\n", "pilots", "=", "np", ".", "reshape", "(", "pilots", ",", "[", "len_pilot", ",", "num_user", "]", ")", "\n", "return", "phase_shifts", ",", "pilots", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_received_pilots": [[93, 114], ["numpy.zeros", "range", "numpy.sqrt", "numpy.concatenate", "range", "numpy.random.normal", "numpy.array", "numpy.array", "pilots_k2.reshape.reshape", "numpy.random.normal", "phase_shifts.reshape", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["", "def", "generate_received_pilots", "(", "channel_tx", ",", "channel_rx", ",", "phase_shifts", ",", "pilots", ",", "noise_power_db", ",", "scale_factor", ",", "Pt", ")", ":", "\n", "    ", "[", "num_samples", ",", "num_elements_irs", ",", "num_user", "]", "=", "channel_tx", ".", "shape", "\n", "len_pilot", "=", "phase_shifts", ".", "shape", "[", "1", "]", "\n", "y", "=", "np", ".", "zeros", "(", "(", "num_samples", ",", "num_user", ",", "len_pilot", ")", ",", "dtype", "=", "complex", ")", "\n", "for", "k1", "in", "range", "(", "num_user", ")", ":", "# uplink receiver", "\n", "        ", "h_k1", "=", "channel_tx", "[", ":", ",", ":", ",", "k1", "]", "\n", "for", "k2", "in", "range", "(", "num_user", ")", ":", "#uplink transmitter", "\n", "            ", "h_k2", "=", "channel_rx", "[", ":", ",", ":", ",", "k2", "]", "\n", "h_cascaded", "=", "(", "h_k1", "*", "h_k2", ")", ".", "reshape", "(", "-", "1", ",", "1", ",", "num_elements_irs", ")", "\n", "h_combined", "=", "h_cascaded", "@", "phase_shifts", ".", "reshape", "(", "1", ",", "num_elements_irs", ",", "len_pilot", ")", "\n", "pilots_k2", "=", "pilots", "[", ":", ",", "k2", "]", "\n", "pilots_k2", "=", "np", ".", "array", "(", "[", "pilots_k2", "]", "*", "num_samples", ")", "\n", "pilots_k2", "=", "pilots_k2", ".", "reshape", "(", "(", "num_samples", ",", "1", ",", "len_pilot", ")", ")", "\n", "y", "[", ":", ",", "k1", ",", ":", "]", "=", "y", "[", ":", ",", "k1", ",", ":", "]", "+", "(", "h_combined", "*", "pilots_k2", ")", "[", ":", ",", "0", ",", ":", "]", "\n", "\n", "", "", "noise", "=", "np", ".", "random", ".", "normal", "(", "loc", "=", "0", ",", "scale", "=", "np", ".", "sqrt", "(", "0.5", ")", ",", "size", "=", "[", "num_samples", ",", "num_user", ",", "len_pilot", "]", ")", "+", "1j", "*", "np", ".", "random", ".", "normal", "(", "loc", "=", "0", ",", "scale", "=", "np", ".", "sqrt", "(", "0.5", ")", ",", "size", "=", "[", "num_samples", ",", "num_user", ",", "len_pilot", "]", ")", "\n", "noise_sqrt", "=", "np", ".", "sqrt", "(", "10", "**", "(", "(", "noise_power_db", "-", "Pt", "+", "scale_factor", ")", "/", "10", ")", ")", "\n", "y", "=", "y", "+", "noise_sqrt", "*", "noise", "\n", "y_real", "=", "np", ".", "concatenate", "(", "[", "y", ".", "real", ",", "y", ".", "imag", "]", ",", "axis", "=", "1", ")", "\n", "return", "y", ",", "np", ".", "array", "(", "y_real", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.decorrelation": [[116, 133], ["numpy.array", "pilots.reshape.reshape", "numpy.conjugate", "numpy.zeros", "range", "numpy.concatenate", "numpy.array"], "function", ["None"], ["", "def", "decorrelation", "(", "received_pilots", ",", "pilots", ")", ":", "\n", "    ", "(", "len_pilots", ",", "num_user", ")", "=", "pilots", ".", "shape", "\n", "(", "num_samples", ",", "num_user", ",", "_", ")", "=", "received_pilots", ".", "shape", "\n", "pilots", "=", "np", ".", "array", "(", "[", "pilots", "]", "*", "num_samples", ")", "\n", "pilots", "=", "pilots", ".", "reshape", "(", "(", "num_samples", ",", "len_pilots", ",", "num_user", ")", ")", "\n", "\n", "len_frame", "=", "num_user", "\n", "num_frame", "=", "len_pilots", "//", "len_frame", "\n", "\n", "x_tmp", "=", "np", ".", "conjugate", "(", "pilots", "[", ":", ",", "0", ":", "len_frame", ",", ":", "]", ")", "\n", "y_decode", "=", "np", ".", "zeros", "(", "[", "num_samples", ",", "num_user", ",", "num_user", ",", "num_frame", "]", ",", "dtype", "=", "complex", ")", "#uplink: num_user_rx, num_user_tx", "\n", "for", "jj", "in", "range", "(", "num_frame", ")", ":", "\n", "        ", "y_k", "=", "received_pilots", "[", ":", ",", ":", ",", "jj", "*", "len_frame", ":", "(", "jj", "+", "1", ")", "*", "len_frame", "]", "\n", "y_decode_tmp", "=", "y_k", "@", "x_tmp", "/", "len_frame", "\n", "y_decode", "[", ":", ",", ":", ",", ":", ",", "jj", "]", "=", "y_decode_tmp", "\n", "", "y_real", "=", "np", ".", "concatenate", "(", "[", "y_decode", ".", "real", ",", "y_decode", ".", "imag", "]", ",", "axis", "=", "-", "1", ")", "\n", "return", "y_decode", ",", "np", ".", "array", "(", "y_real", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.compute_stat_info": [[135, 161], ["generate_channel.generate_channel", "generate_channel.generate_channel", "generate_channel.generate_received_pilots", "generate_channel.decorrelation", "numpy.zeros", "range", "numpy.transpose", "numpy.real", "range", "numpy.mean", "numpy.mean", "numpy.sum", "numpy.sum", "Q.conjugate", "numpy.matmul", "numpy.mean", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.diagonal", "numpy.transpose", "numpy.transpose", "np.zeros.conjugate", "Y.conjugate"], "function", ["home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_channel", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_channel", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_received_pilots", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.decorrelation"], ["", "def", "compute_stat_info", "(", "params_system", ",", "noise_power_db", ",", "phase_shifts", ",", "pilots", ",", "location_user", ",", "Rician_factor", ",", "irs_Nh", ",", "num_samples", ",", "scale_factor", ",", "Pt", ")", ":", "\n", "    ", "(", "num_elements_irs", ",", "num_user", ")", "=", "params_system", "\n", "# phase_shifts, pilots = generate_pilots(len_pilot, num_elements_irs, num_user)", "\n", "channel_tx", ",", "set_location_tx", "=", "generate_channel", "(", "params_system", ",", "location_user_initial", "=", "location_user", ",", "Rician_factor", "=", "Rician_factor", ",", "\n", "scale_factor", "=", "scale_factor", ",", "num_samples", "=", "num_samples", ",", "irs_Nh", "=", "irs_Nh", ",", "is_Tx", "=", "True", ")", "\n", "channel_rx", ",", "set_location_rx", "=", "generate_channel", "(", "params_system", ",", "location_user_initial", "=", "location_user", ",", "Rician_factor", "=", "Rician_factor", ",", "\n", "scale_factor", "=", "scale_factor", ",", "num_samples", "=", "num_samples", ",", "irs_Nh", "=", "irs_Nh", ",", "is_Tx", "=", "False", ")", "\n", "y", ",", "y_real", "=", "generate_received_pilots", "(", "channel_tx", ",", "channel_rx", ",", "phase_shifts", ",", "pilots", ",", "noise_power_db", ",", "scale_factor", ",", "Pt", ")", "\n", "Y", ",", "Y_real", "=", "decorrelation", "(", "y", ",", "pilots", ")", "\n", "A", "=", "np", ".", "zeros", "(", "(", "num_samples", ",", "num_user", ",", "num_elements_irs", ",", "num_user", ")", ",", "dtype", "=", "complex", ")", "\n", "for", "kk", "in", "range", "(", "num_user", ")", ":", "\n", "        ", "for", "jj", "in", "range", "(", "num_user", ")", ":", "\n", "            ", "A", "[", ":", ",", "jj", ",", ":", ",", "kk", "]", "=", "channel_tx", "[", ":", ",", ":", ",", "jj", "]", "*", "channel_rx", "[", ":", ",", ":", ",", "kk", "]", "\n", "", "", "Q", "=", "phase_shifts", "[", ":", ",", "0", ":", "phase_shifts", ".", "shape", "[", "1", "]", ":", "num_user", "]", "\n", "A", ",", "Y", "=", "A", "[", ":", ",", ":", ",", ":", ",", "0", "]", ",", "Y", "[", ":", ",", ":", ",", "0", ",", ":", "]", "\n", "\n", "mean_A", ",", "mean_Y", "=", "np", ".", "mean", "(", "A", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", ",", "np", ".", "mean", "(", "Y", ",", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "A", "=", "A", "-", "mean_A", "\n", "C_A", "=", "np", ".", "sum", "(", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "A", ".", "conjugate", "(", ")", ",", "(", "0", ",", "2", ",", "1", ")", ")", ",", "A", ")", ",", "axis", "=", "0", ")", "/", "num_samples", "\n", "Y", "=", "Y", "-", "mean_Y", "\n", "C_Y", "=", "np", ".", "sum", "(", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "Y", ".", "conjugate", "(", ")", ",", "(", "0", ",", "2", ",", "1", ")", ")", ",", "Y", ")", ",", "axis", "=", "0", ")", "/", "num_samples", "\n", "Q_H", "=", "np", ".", "transpose", "(", "Q", ".", "conjugate", "(", ")", ")", "\n", "C_N", "=", "C_Y", "-", "np", ".", "matmul", "(", "Q_H", ",", "np", ".", "matmul", "(", "C_A", ",", "Q", ")", ")", "\n", "gamma_n", "=", "np", ".", "real", "(", "np", ".", "mean", "(", "np", ".", "diagonal", "(", "C_N", ")", ")", ")", "\n", "stat_info", "=", "(", "gamma_n", ",", "C_A", ",", "mean_A", ")", "\n", "return", "stat_info", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.ls_estimator": [[163, 191], ["numpy.transpose", "x.conjugate", "numpy.matmul", "numpy.linalg.inv", "numpy.matmul", "numpy.matmul", "numpy.linalg.inv", "numpy.matmul", "numpy.matmul", "numpy.linalg.inv", "numpy.matmul", "numpy.matmul"], "function", ["None"], ["", "def", "ls_estimator", "(", "y", ",", "x", ")", ":", "\n", "    ", "\"\"\"\n    y = h *x + n\n    y: batch_size*m*l\n    h: batch_size*m*n\n    x: batch_size*n*l\n\n    Output: h = y*x^H*(x*x^H)^-1\n    \"\"\"", "\n", "n", ",", "ell", "=", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", "\n", "x_H", "=", "np", ".", "transpose", "(", "x", ".", "conjugate", "(", ")", ")", "\n", "if", "ell", "<", "n", ":", "\n", "        ", "x_Hx", "=", "np", ".", "matmul", "(", "x_H", ",", "x", ")", "\n", "# print('Cond number:',np.linalg.cond(x_Hx))", "\n", "x_Hx_inv", "=", "np", ".", "linalg", ".", "inv", "(", "x_Hx", ")", "\n", "h", "=", "np", ".", "matmul", "(", "y", ",", "x_Hx_inv", ")", "\n", "h", "=", "np", ".", "matmul", "(", "h", ",", "x_H", ")", "\n", "", "elif", "ell", "==", "n", ":", "\n", "# print('Cond number:',np.linalg.cond(x))", "\n", "        ", "h", "=", "np", ".", "linalg", ".", "inv", "(", "x", ")", "\n", "h", "=", "np", ".", "matmul", "(", "y", ",", "h", ")", "\n", "", "else", ":", "\n", "        ", "xx_H", "=", "np", ".", "matmul", "(", "x", ",", "x_H", ")", "\n", "# print('Cond number:',np.linalg.cond(xx_H))", "\n", "xx_H_inv", "=", "np", ".", "linalg", ".", "inv", "(", "xx_H", ")", "\n", "h", "=", "np", ".", "matmul", "(", "y", ",", "x_H", ")", "\n", "h", "=", "np", ".", "matmul", "(", "h", ",", "xx_H_inv", ")", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.lmmse_estimator": [[193, 226], ["numpy.transpose", "numpy.real", "Q.conjugate", "numpy.matmul", "numpy.mean", "numpy.matmul", "numpy.linalg.inv", "numpy.linalg.inv", "numpy.matmul", "numpy.matmul", "numpy.matmul", "generate_channel.ls_estimator", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.linalg.inv", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.matmul", "numpy.diagonal", "numpy.eye"], "function", ["home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.ls_estimator"], ["", "def", "lmmse_estimator", "(", "Y", ",", "Q", ",", "C_A", ",", "C_Y", ",", "mean_A", ",", "mean_Y", ")", ":", "\n", "# # Y = AQ+N", "\n", "\n", "# ================================================", "\n", "# A = np.matmul(Y,np.linalg.inv(C_Y))", "\n", "# A = np.matmul(A,np.transpose(Q.conjugate()))", "\n", "# A = np.matmul(A,C_A)", "\n", "\n", "# ===============for numerical stability===========", "\n", "    ", "Y", "=", "Y", "-", "mean_Y", "\n", "Q_H", "=", "np", ".", "transpose", "(", "Q", ".", "conjugate", "(", ")", ")", "\n", "C_N", "=", "C_Y", "-", "np", ".", "matmul", "(", "Q_H", ",", "np", ".", "matmul", "(", "C_A", ",", "Q", ")", ")", "\n", "gamma_n", "=", "np", ".", "real", "(", "np", ".", "mean", "(", "np", ".", "diagonal", "(", "C_N", ")", ")", ")", "\n", "n", ",", "ell", "=", "Q", ".", "shape", "[", "0", "]", ",", "Q", ".", "shape", "[", "1", "]", "\n", "if", "ell", ">", "n", ":", "\n", "        ", "QQ_H", "=", "np", ".", "matmul", "(", "Q", ",", "Q_H", ")", "\n", "C_A_inv", "=", "np", ".", "linalg", ".", "inv", "(", "C_A", ")", "\n", "tmp", "=", "np", ".", "linalg", ".", "inv", "(", "gamma_n", "*", "C_A_inv", "+", "QQ_H", ")", "\n", "tmp", "=", "np", ".", "matmul", "(", "tmp", ",", "QQ_H", ")", "\n", "tmp", "=", "np", ".", "matmul", "(", "C_A_inv", ",", "tmp", ")", "\n", "tmp", "=", "np", ".", "matmul", "(", "tmp", ",", "C_A", ")", "\n", "A", "=", "ls_estimator", "(", "Y", ",", "Q", ")", "\n", "A", "=", "np", ".", "matmul", "(", "A", ",", "tmp", ")", "\n", "", "else", ":", "\n", "        ", "tmp", "=", "np", ".", "matmul", "(", "Q_H", ",", "C_A", ")", "\n", "tmp", "=", "np", ".", "matmul", "(", "tmp", ",", "Q", ")", "\n", "tmp", "=", "tmp", "+", "gamma_n", "*", "np", ".", "eye", "(", "ell", ")", "\n", "tmp", "=", "np", ".", "linalg", ".", "inv", "(", "tmp", ")", "\n", "A", "=", "np", ".", "matmul", "(", "Y", ",", "tmp", ")", "\n", "A", "=", "np", ".", "matmul", "(", "A", ",", "Q_H", ")", "\n", "A", "=", "np", ".", "matmul", "(", "A", ",", "C_A", ")", "\n", "\n", "", "return", "A", "+", "mean_A", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.channel_estimation_lmmse": [[228, 243], ["numpy.matmul", "generate_channel.decorrelation", "numpy.zeros", "range", "numpy.matmul", "generate_channel.lmmse_estimator", "numpy.matmul", "numpy.eye", "numpy.transpose", "Q.conjugate"], "function", ["home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.decorrelation", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.lmmse_estimator"], ["", "def", "channel_estimation_lmmse", "(", "params_system", ",", "y", ",", "pilots", ",", "phase_shifts", ",", "stat_info", ")", ":", "\n", "    ", "(", "num_elements_irs", ",", "num_user", ")", "=", "params_system", "\n", "len_pilot", "=", "pilots", ".", "shape", "[", "0", "]", "\n", "num_sample", "=", "y", ".", "shape", "[", "0", "]", "\n", "len_frame", "=", "num_user", "\n", "Q", "=", "phase_shifts", "[", ":", ",", "0", ":", "len_pilot", ":", "len_frame", "]", "\n", "(", "gamma_n", ",", "C_A", ",", "mean_A", ")", "=", "stat_info", "\n", "C_Y", "=", "np", ".", "matmul", "(", "np", ".", "matmul", "(", "np", ".", "transpose", "(", "Q", ".", "conjugate", "(", ")", ")", ",", "C_A", ")", ",", "Q", ")", "+", "gamma_n", "*", "np", ".", "eye", "(", "Q", ".", "shape", "[", "1", "]", ")", "\n", "mean_Y", "=", "np", ".", "matmul", "(", "mean_A", ",", "Q", ")", "\n", "y_d", ",", "_", "=", "decorrelation", "(", "y", ",", "pilots", ")", "\n", "channel_cascaed", "=", "np", ".", "zeros", "(", "(", "num_sample", ",", "num_user", ",", "num_elements_irs", ",", "num_user", ")", ",", "dtype", "=", "complex", ")", "\n", "for", "kk", "in", "range", "(", "num_user", ")", ":", "\n", "        ", "y_k", "=", "y_d", "[", ":", ",", ":", ",", "kk", ",", ":", "]", "\n", "channel_cascaed", "[", ":", ",", ":", ",", ":", ",", "kk", "]", "=", "lmmse_estimator", "(", "y_k", ",", "Q", ",", "C_A", ",", "C_Y", ",", "mean_A", ",", "mean_Y", ")", "\n", "", "return", "channel_cascaed", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.run_main_rate_pilot": [[245, 308], ["generate_channel.main_generate_channel", "numpy.zeros", "range", "print", "print", "print", "scipy.savemat", "range", "numpy.array", "generate_channel.generate_pilots", "generate_channel.generate_received_pilots", "generate_channel.compute_stat_info", "generate_channel.channel_estimation_lmmse", "numpy.mean", "err_set.append", "numpy.squeeze", "numpy.conj", "numpy.sum", "numpy.mean", "optimal_power_set.append", "numpy.squeeze", "numpy.conj", "numpy.sum", "numpy.mean", "lmmse_power_set.append", "numpy.random.uniform", "numpy.exp", "numpy.sum", "numpy.mean", "random_power_set.append", "print", "dict", "numpy.multiply", "numpy.multiply", "numpy.multiply", "numpy.linalg.norm", "numpy.linalg.norm", "numpy.abs", "numpy.abs", "numpy.log10", "numpy.abs", "numpy.abs", "numpy.log10", "numpy.abs", "numpy.log10"], "function", ["home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.main_generate_channel", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_pilots", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.generate_received_pilots", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.compute_stat_info", "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.generate_channel.channel_estimation_lmmse"], ["", "def", "run_main_rate_pilot", "(", ")", ":", "\n", "    ", "num_ris_elements", "=", "64", "\n", "num_user", "=", "1", "\n", "params_system", "=", "(", "num_ris_elements", ",", "num_user", ")", "\n", "irs_Nh", "=", "8", "\n", "Rician_factor", "=", "10", "\n", "scale_factor", "=", "120", "\n", "num_samples", "=", "10000", "\n", "channel_tx_batch", ",", "channel_rx_batch", "=", "main_generate_channel", "(", "num_ris_elements", ",", "num_user", ",", "irs_Nh", ",", "num_samples", ",", "\n", "Rician_factor", ",", "location_user", "=", "None", ",", "scale_factor", "=", "scale_factor", ",", "\n", "isTesting", "=", "True", ")", "\n", "A", "=", "np", ".", "zeros", "(", "(", "num_samples", ",", "num_user", ",", "num_ris_elements", ",", "num_user", ")", ",", "dtype", "=", "complex", ")", "\n", "for", "kk", "in", "range", "(", "num_user", ")", ":", "\n", "        ", "for", "jj", "in", "range", "(", "num_user", ")", ":", "\n", "            ", "A", "[", ":", ",", "jj", ",", ":", ",", "kk", "]", "=", "channel_tx_batch", "[", ":", ",", ":", ",", "jj", "]", "*", "channel_rx_batch", "[", ":", ",", ":", ",", "kk", "]", "\n", "# ########### channel estimation", "\n", "", "", "noise_power_db", "=", "-", "scale_factor", "\n", "\n", "err_set", "=", "[", "]", "\n", "optimal_power_set", "=", "[", "]", "\n", "lmmse_power_set", "=", "[", "]", "\n", "random_power_set", "=", "[", "]", "\n", "len_pilot_set", "=", "num_user", "*", "np", ".", "array", "(", "[", "4", "]", ")", "\n", "P_u", "=", "0", "\n", "for", "len_pilot", "in", "len_pilot_set", ":", "\n", "        ", "phase_shifts", ",", "pilots", "=", "generate_pilots", "(", "len_pilot", ",", "num_ris_elements", ",", "num_user", ")", "\n", "y", ",", "y_real", "=", "generate_received_pilots", "(", "channel_tx_batch", ",", "channel_rx_batch", ",", "phase_shifts", ",", "pilots", ",", "noise_power_db", ",", "scale_factor", "=", "scale_factor", ",", "Pt", "=", "P_u", ")", "\n", "stat_info", "=", "compute_stat_info", "(", "params_system", ",", "noise_power_db", ",", "phase_shifts", ",", "pilots", ",", "\n", "location_user", "=", "None", ",", "Rician_factor", "=", "Rician_factor", ",", "\n", "num_samples", "=", "10000", ",", "scale_factor", "=", "scale_factor", ",", "irs_Nh", "=", "irs_Nh", ",", "Pt", "=", "P_u", ")", "\n", "A_hat", "=", "channel_estimation_lmmse", "(", "params_system", ",", "y", ",", "pilots", ",", "phase_shifts", ",", "stat_info", ")", "\n", "err", "=", "np", ".", "linalg", ".", "norm", "(", "A", "-", "A_hat", ",", "ord", "=", "'fro'", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "**", "2", "/", "np", ".", "linalg", ".", "norm", "(", "A", ",", "ord", "=", "'fro'", ",", "axis", "=", "(", "1", ",", "2", ")", ")", "**", "2", "\n", "err", "=", "np", ".", "mean", "(", "err", ",", "axis", "=", "0", ")", "\n", "err_set", ".", "append", "(", "err", ")", "\n", "\n", "h_input_val", "=", "np", ".", "squeeze", "(", "A", ")", "\n", "optimal_v_val", "=", "np", ".", "conj", "(", "h_input_val", "/", "np", ".", "abs", "(", "h_input_val", ")", ")", "\n", "y_tmp_val", "=", "np", ".", "sum", "(", "np", ".", "multiply", "(", "optimal_v_val", ",", "h_input_val", ")", ",", "axis", "=", "1", ")", "\n", "optimal_power_val", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "y_tmp_val", ")", "**", "2", ")", "\n", "optimal_power_set", ".", "append", "(", "10", "*", "np", ".", "log10", "(", "optimal_power_val", ")", ")", "\n", "\n", "h_input_hat", "=", "np", ".", "squeeze", "(", "A_hat", ")", "\n", "optimal_v_val", "=", "np", ".", "conj", "(", "h_input_hat", "/", "np", ".", "abs", "(", "h_input_hat", ")", ")", "\n", "y_tmp_val", "=", "np", ".", "sum", "(", "np", ".", "multiply", "(", "optimal_v_val", ",", "h_input_val", ")", ",", "axis", "=", "1", ")", "\n", "lmmse_power_val", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "y_tmp_val", ")", "**", "2", ")", "\n", "lmmse_power_set", ".", "append", "(", "10", "*", "np", ".", "log10", "(", "lmmse_power_val", ")", ")", "\n", "\n", "random_v", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "0", ",", "high", "=", "2", "*", "np", ".", "pi", ",", "size", "=", "(", "num_samples", ",", "num_ris_elements", ")", ")", "\n", "random_v", "=", "np", ".", "exp", "(", "1j", "*", "random_v", ")", "\n", "y_tmp_val", "=", "np", ".", "sum", "(", "np", ".", "multiply", "(", "random_v", ",", "h_input_val", ")", ",", "axis", "=", "1", ")", "\n", "rand_power_val", "=", "np", ".", "mean", "(", "np", ".", "abs", "(", "y_tmp_val", ")", "**", "2", ")", "\n", "random_power_set", ".", "append", "(", "10", "*", "np", ".", "log10", "(", "rand_power_val", ")", ")", "\n", "\n", "print", "(", "'len_pilot'", ",", "len_pilot", ",", "'err:'", ",", "err", ",", "'optimal_power'", ",", "optimal_power_val", ",", "'lmmse_power'", ",", "lmmse_power_val", ")", "\n", "\n", "", "print", "(", "optimal_power_set", ")", "\n", "print", "(", "lmmse_power_set", ")", "\n", "print", "(", "random_power_set", ")", "\n", "\n", "sio", ".", "savemat", "(", "'lmmse_pm.mat'", ",", "dict", "(", "lmmse_power_set", "=", "lmmse_power_set", ",", "\n", "pilots", "=", "len_pilot_set", ",", "N", "=", "num_ris_elements", ",", "\n", "optimal_power_set", "=", "optimal_power_set", ",", "\n", "random_power_set", "=", "random_power_set", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.util_fun.compute_weighted_sum_rate2": [[4, 42], ["numpy.reshape", "numpy.reshape", "range", "numpy.squeeze", "numpy.squeeze", "numpy.reshape", "direct_power_set.append", "range", "interference_set.append", "numpy.log2", "rate_set.append", "weighted_rate_set.append", "numpy.mean", "numpy.mean", "numpy.squeeze", "numpy.squeeze", "numpy.squeeze", "numpy.log2", "numpy.sum", "numpy.sum", "numpy.reshape", "numpy.abs", "numpy.squeeze", "numpy.abs"], "function", ["None"], ["def", "compute_weighted_sum_rate2", "(", "channel_tx", ",", "channel_rx", ",", "v", ",", "p", ",", "alpha", ",", "sigma2_dB", ")", ":", "\n", "    ", "'''\n    :param channel_tx: [num_samples, num_elements_irs, num_user]\n    :param channel_rx: [num_samples, num_elements_irs, num_user]\n    :param alpha: [num_samples, num_user] weights of rate\n    :param v: [num_samples, num_elements_irs, 1]\n    :param p: [num_samples, num_user]\n    :param sigma2_dB: scalar in dB\n    :param channel_cascaded: [num_samples,num_user_tx,num_elements_irs, num_user_rx]\n    :return: average sum rate of the dataset\n    '''", "\n", "sigma_sqr", "=", "10", "**", "(", "sigma2_dB", "/", "10", ")", "\n", "# sigma_sqr = 0", "\n", "[", "num_samples", ",", "num_elements_irs", ",", "num_user", "]", "=", "channel_tx", ".", "shape", "\n", "v", "=", "np", ".", "reshape", "(", "v", ",", "[", "-", "1", ",", "num_elements_irs", ",", "1", "]", ")", "\n", "p", "=", "np", ".", "reshape", "(", "p", ",", "[", "-", "1", ",", "num_user", "]", ")", "\n", "rate_set", "=", "[", "]", "\n", "weighted_rate_set", "=", "[", "]", "\n", "direct_power_set", "=", "[", "]", "\n", "interference_set", "=", "[", "]", "\n", "for", "kk", "in", "range", "(", "num_user", ")", ":", "# rx", "\n", "        ", "ch_kk", "=", "np", ".", "reshape", "(", "channel_tx", "[", ":", ",", ":", ",", "kk", "]", "*", "channel_rx", "[", ":", ",", ":", ",", "kk", "]", ",", "[", "-", "1", ",", "1", ",", "num_elements_irs", "]", ")", "\n", "sinr_num_kk", "=", "p", "[", ":", ",", "kk", "]", "*", "np", ".", "squeeze", "(", "(", "np", ".", "abs", "(", "ch_kk", "@", "v", ")", "**", "2", ")", ")", "\n", "direct_power_set", ".", "append", "(", "sinr_num_kk", ")", "\n", "sinr_de_kk", "=", "sigma_sqr", "# noise power", "\n", "for", "jj", "in", "range", "(", "num_user", ")", ":", "\n", "            ", "if", "jj", "!=", "kk", ":", "\n", "                ", "ch_kj", "=", "np", ".", "reshape", "(", "channel_tx", "[", ":", ",", ":", ",", "jj", "]", "*", "channel_rx", "[", ":", ",", ":", ",", "kk", "]", ",", "[", "-", "1", ",", "1", ",", "num_elements_irs", "]", ")", "\n", "sinr_de_kk", "=", "sinr_de_kk", "+", "p", "[", ":", ",", "jj", "]", "*", "np", ".", "squeeze", "(", "(", "np", ".", "abs", "(", "ch_kj", "@", "v", ")", "**", "2", ")", ")", "\n", "", "", "interference_set", ".", "append", "(", "sinr_de_kk", "-", "sigma_sqr", ")", "\n", "sinr_kk", "=", "np", ".", "squeeze", "(", "sinr_num_kk", ")", "/", "np", ".", "squeeze", "(", "sinr_de_kk", ")", "\n", "rate_kk", "=", "np", ".", "log2", "(", "1", "+", "sinr_kk", ")", "\n", "weighted_rate_kk", "=", "alpha", "[", ":", ",", "kk", "]", "*", "np", ".", "log2", "(", "1", "+", "sinr_kk", ")", "\n", "rate_set", ".", "append", "(", "rate_kk", ")", "\n", "weighted_rate_set", ".", "append", "(", "weighted_rate_kk", ")", "\n", "", "sum_rate", "=", "np", ".", "squeeze", "(", "np", ".", "mean", "(", "np", ".", "sum", "(", "rate_set", ",", "axis", "=", "0", ")", ")", ")", "\n", "weighted_sum_rate", "=", "np", ".", "squeeze", "(", "np", ".", "mean", "(", "np", ".", "sum", "(", "weighted_rate_set", ",", "axis", "=", "0", ")", ")", ")", "\n", "return", "weighted_sum_rate", ",", "(", "sum_rate", ",", "direct_power_set", ",", "interference_set", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.util_fun.compute_weighted_sum_rate": [[44, 82], ["numpy.reshape", "numpy.reshape", "numpy.reshape", "range", "numpy.squeeze", "numpy.squeeze", "numpy.reshape", "direct_power_set.append", "range", "interference_set.append", "numpy.log2", "rate_set.append", "weighted_rate_set.append", "numpy.mean", "numpy.mean", "numpy.squeeze", "numpy.squeeze", "numpy.squeeze", "numpy.log2", "numpy.sum", "numpy.sum", "numpy.reshape", "numpy.abs", "numpy.squeeze", "numpy.abs"], "function", ["None"], ["", "def", "compute_weighted_sum_rate", "(", "channel_cascaded", ",", "v", ",", "p", ",", "alpha", ",", "sigma2_dB", ")", ":", "\n", "    ", "'''\n    :param channel_cascaded: [num_samples,num_user_tx,num_elements_irs, num_user_rx]\n    :param v: [num_samples, num_elements_irs, 1]\n    :param p: [num_samples, num_user]\n    :param alpha: [num_samples, num_user] weights of rate\n    :param sigma2_dB: scalar in dB\n    :return: average sum rate of the dataset\n    '''", "\n", "sigma_sqr", "=", "10", "**", "(", "sigma2_dB", "/", "10", ")", "\n", "# sigma_sqr = 0", "\n", "[", "num_samples", ",", "num_user", ",", "num_elements_irs", ",", "_", "]", "=", "channel_cascaded", ".", "shape", "\n", "v", "=", "np", ".", "reshape", "(", "v", ",", "[", "-", "1", ",", "num_elements_irs", ",", "1", "]", ")", "\n", "p", "=", "np", ".", "reshape", "(", "p", ",", "[", "-", "1", ",", "num_user", "]", ")", "\n", "channel_cascaded", "=", "np", ".", "reshape", "(", "channel_cascaded", ",", "[", "-", "1", ",", "num_user", ",", "num_elements_irs", ",", "num_user", "]", ")", "\n", "rate_set", "=", "[", "]", "\n", "weighted_rate_set", "=", "[", "]", "\n", "direct_power_set", "=", "[", "]", "\n", "interference_set", "=", "[", "]", "\n", "for", "kk", "in", "range", "(", "num_user", ")", ":", "# rx", "\n", "        ", "ch_kk", "=", "np", ".", "reshape", "(", "channel_cascaded", "[", ":", ",", "kk", ",", ":", ",", "kk", "]", ",", "[", "-", "1", ",", "1", ",", "num_elements_irs", "]", ")", "\n", "sinr_num_kk", "=", "p", "[", ":", ",", "kk", "]", "*", "np", ".", "squeeze", "(", "(", "np", ".", "abs", "(", "ch_kk", "@", "v", ")", "**", "2", ")", ")", "\n", "sinr_de_kk", "=", "sigma_sqr", "# noise power", "\n", "direct_power_set", ".", "append", "(", "sinr_num_kk", ")", "\n", "for", "jj", "in", "range", "(", "num_user", ")", ":", "\n", "            ", "if", "jj", "!=", "kk", ":", "\n", "                ", "ch_kj", "=", "np", ".", "reshape", "(", "channel_cascaded", "[", ":", ",", "jj", ",", ":", ",", "kk", "]", ",", "[", "-", "1", ",", "1", ",", "num_elements_irs", "]", ")", "\n", "sinr_de_kk", "=", "sinr_de_kk", "+", "p", "[", ":", ",", "jj", "]", "*", "np", ".", "squeeze", "(", "(", "np", ".", "abs", "(", "ch_kj", "@", "v", ")", "**", "2", ")", ")", "\n", "", "", "interference_set", ".", "append", "(", "sinr_de_kk", "-", "sigma_sqr", ")", "\n", "sinr_kk", "=", "np", ".", "squeeze", "(", "sinr_num_kk", ")", "/", "np", ".", "squeeze", "(", "sinr_de_kk", ")", "\n", "rate_kk", "=", "np", ".", "log2", "(", "1", "+", "sinr_kk", ")", "\n", "weighted_rate_kk", "=", "alpha", "[", ":", ",", "kk", "]", "*", "np", ".", "log2", "(", "1", "+", "sinr_kk", ")", "\n", "rate_set", ".", "append", "(", "rate_kk", ")", "\n", "weighted_rate_set", ".", "append", "(", "weighted_rate_kk", ")", "\n", "", "sum_rate", "=", "np", ".", "squeeze", "(", "np", ".", "mean", "(", "np", ".", "sum", "(", "rate_set", ",", "axis", "=", "0", ")", ")", ")", "\n", "weighted_sum_rate", "=", "np", ".", "squeeze", "(", "np", ".", "mean", "(", "np", ".", "sum", "(", "weighted_rate_set", ",", "axis", "=", "0", ")", ")", ")", "\n", "\n", "return", "weighted_sum_rate", ",", "(", "sum_rate", ",", "direct_power_set", ",", "interference_set", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig9_RIS.util_fun.get_cascaded_channel": [[84, 91], ["numpy.zeros", "range", "range"], "function", ["None"], ["", "def", "get_cascaded_channel", "(", "channel_tx", ",", "channel_rx", ")", ":", "\n", "    ", "[", "num_samples", ",", "num_elements_irs", ",", "num_user", "]", "=", "channel_tx", ".", "shape", "\n", "channel_a", "=", "np", ".", "zeros", "(", "[", "num_samples", ",", "num_user", ",", "num_elements_irs", ",", "num_user", "]", ",", "dtype", "=", "complex", ")", "\n", "for", "kk", "in", "range", "(", "num_user", ")", ":", "\n", "        ", "for", "jj", "in", "range", "(", "num_user", ")", ":", "\n", "            ", "channel_a", "[", ":", ",", "jj", ",", ":", ",", "kk", "]", "=", "channel_tx", "[", ":", ",", ":", ",", "jj", "]", "*", "channel_rx", "[", ":", ",", ":", ",", "kk", "]", "\n", "", "", "return", "channel_a", "", "", ""]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Noncoherent.func_codedesign_cont.func_codedesign_cont": [[16, 33], ["numpy.linspace", "numpy.float32", "numpy.zeros", "range", "numpy.linspace", "numpy.zeros", "range", "list", "numpy.exp", "numpy.transpose", "numpy.exp", "numpy.transpose", "range", "numpy.sin", "numpy.sin"], "function", ["None"], ["def", "func_codedesign_cont", "(", "delta_inv", ",", "delta_inv_OS", ",", "phi_min", ",", "phi_max", ",", "N", ")", ":", "\n", "    ", "delta_theta", "=", "(", "phi_max", "-", "phi_min", ")", "/", "delta_inv", ";", "\n", "phi", "=", "np", ".", "linspace", "(", "start", "=", "phi_min", "+", "delta_theta", "/", "2", ",", "stop", "=", "phi_max", "-", "delta_theta", "/", "2", ",", "num", "=", "delta_inv", ")", "\n", "from0toN", "=", "np", ".", "float32", "(", "list", "(", "range", "(", "0", ",", "N", ")", ")", ")", "\n", "A_BS", "=", "np", ".", "zeros", "(", "[", "N", ",", "delta_inv", "]", ",", "dtype", "=", "np", ".", "complex64", ")", "\n", "for", "i", "in", "range", "(", "delta_inv", ")", ":", "\n", "        ", "a_phi", "=", "np", ".", "exp", "(", "1j", "*", "np", ".", "pi", "*", "from0toN", "*", "np", ".", "sin", "(", "phi", "[", "i", "]", ")", ")", "\n", "A_BS", "[", ":", ",", "i", "]", "=", "np", ".", "transpose", "(", "a_phi", ")", "\n", "\n", "", "delta_theta", "=", "(", "phi_max", "-", "phi_min", ")", "/", "delta_inv_OS", "\n", "phi_OS", "=", "np", ".", "linspace", "(", "start", "=", "phi_min", "+", "delta_theta", "/", "2", ",", "stop", "=", "phi_max", "-", "delta_theta", "/", "2", ",", "num", "=", "delta_inv_OS", ")", "\n", "A_BS_OS", "=", "np", ".", "zeros", "(", "[", "N", ",", "delta_inv_OS", "]", ",", "dtype", "=", "np", ".", "complex64", ")", "\n", "for", "i", "in", "range", "(", "delta_inv_OS", ")", ":", "\n", "        ", "a_phi", "=", "np", ".", "exp", "(", "1j", "*", "np", ".", "pi", "*", "from0toN", "*", "np", ".", "sin", "(", "phi_OS", "[", "i", "]", ")", ")", "\n", "A_BS_OS", "[", ":", ",", "i", "]", "=", "np", ".", "transpose", "(", "a_phi", ")", "\n", "\n", "", "return", "A_BS", ",", "phi", ",", "A_BS_OS", ",", "phi_OS", "", "", ""]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Coherent.func_codedesign_cont.func_codedesign_cont": [[16, 33], ["numpy.linspace", "numpy.float32", "numpy.zeros", "range", "numpy.linspace", "numpy.zeros", "range", "list", "numpy.exp", "numpy.transpose", "numpy.exp", "numpy.transpose", "range", "numpy.sin", "numpy.sin"], "function", ["None"], ["def", "func_codedesign_cont", "(", "delta_inv", ",", "delta_inv_OS", ",", "phi_min", ",", "phi_max", ",", "N", ")", ":", "\n", "    ", "delta_theta", "=", "(", "phi_max", "-", "phi_min", ")", "/", "delta_inv", ";", "\n", "phi", "=", "np", ".", "linspace", "(", "start", "=", "phi_min", "+", "delta_theta", "/", "2", ",", "stop", "=", "phi_max", "-", "delta_theta", "/", "2", ",", "num", "=", "delta_inv", ")", "\n", "from0toN", "=", "np", ".", "float32", "(", "list", "(", "range", "(", "0", ",", "N", ")", ")", ")", "\n", "A_BS", "=", "np", ".", "zeros", "(", "[", "N", ",", "delta_inv", "]", ",", "dtype", "=", "np", ".", "complex64", ")", "\n", "for", "i", "in", "range", "(", "delta_inv", ")", ":", "\n", "        ", "a_phi", "=", "np", ".", "exp", "(", "1j", "*", "np", ".", "pi", "*", "from0toN", "*", "np", ".", "sin", "(", "phi", "[", "i", "]", ")", ")", "\n", "A_BS", "[", ":", ",", "i", "]", "=", "np", ".", "transpose", "(", "a_phi", ")", "\n", "\n", "", "delta_theta", "=", "(", "phi_max", "-", "phi_min", ")", "/", "delta_inv_OS", "\n", "phi_OS", "=", "np", ".", "linspace", "(", "start", "=", "phi_min", "+", "delta_theta", "/", "2", ",", "stop", "=", "phi_max", "-", "delta_theta", "/", "2", ",", "num", "=", "delta_inv_OS", ")", "\n", "A_BS_OS", "=", "np", ".", "zeros", "(", "[", "N", ",", "delta_inv_OS", "]", ",", "dtype", "=", "np", ".", "complex64", ")", "\n", "for", "i", "in", "range", "(", "delta_inv_OS", ")", ":", "\n", "        ", "a_phi", "=", "np", ".", "exp", "(", "1j", "*", "np", ".", "pi", "*", "from0toN", "*", "np", ".", "sin", "(", "phi_OS", "[", "i", "]", ")", ")", "\n", "A_BS_OS", "[", ":", ",", "i", "]", "=", "np", ".", "transpose", "(", "a_phi", ")", "\n", "\n", "", "return", "A_BS", ",", "phi", ",", "A_BS_OS", ",", "phi_OS", "", "", ""]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.OMP.OMP_np.func_codedesign": [[5, 13], ["numpy.linspace", "numpy.zeros", "range", "numpy.float32", "numpy.exp", "list", "range", "numpy.sin"], "function", ["None"], ["\n", "'This code generate the results for MRT w$/$ perfect CSI MRT w/ OMP channel estimation (random sensing, fixed)'", "\n", "\n", "def", "func_codedesign", "(", "delta_inv", ",", "phi_min", ",", "phi_max", ",", "N1", ")", ":", "\n", "    ", "phi", "=", "np", ".", "linspace", "(", "start", "=", "phi_min", ",", "stop", "=", "phi_max", ",", "num", "=", "delta_inv", ")", "\n", "A_tmp", "=", "np", ".", "zeros", "(", "[", "N1", ",", "delta_inv", "]", ",", "dtype", "=", "np", ".", "complex128", ")", "\n", "for", "i", "in", "range", "(", "delta_inv", ")", ":", "\n", "        ", "from0toN1", "=", "np", ".", "float32", "(", "list", "(", "range", "(", "0", ",", "N1", ")", ")", ")", "\n", "a_phi1", "=", "np", ".", "exp", "(", "1j", "*", "np", ".", "pi", "*", "from0toN1", "*", "np", ".", "sin", "(", "phi", "[", "i", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig8.plot_array_response_LSTM.compute_prob_posterior": [[12, 20], ["numpy.sum", "numpy.exp", "numpy.min", "numpy.sum", "complex", "numpy.transpose", "numpy.abs", "numpy.sqrt", "numpy.conj"], "function", ["None"], ["def", "compute_prob_posterior", "(", "y", ",", "P_snr", ",", "W", ",", "A_dic", ",", "prob_prior", ")", ":", "\n", "    ", "mean_all", "=", "complex", "(", "np", ".", "sqrt", "(", "P_snr", ")", ")", "*", "np", ".", "transpose", "(", "np", ".", "conj", "(", "W", ")", ",", "axes", "=", "(", "0", ",", "2", ",", "1", ")", ")", "@", "A_dic", "\n", "dist", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "y", "-", "mean_all", ")", "**", "2", ",", "axis", "=", "1", ")", "\n", "dist", "=", "dist", "-", "np", ".", "min", "(", "dist", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "prob_likely", "=", "np", ".", "exp", "(", "-", "dist", ")", "\n", "prob_posterior", "=", "prob_prior", "*", "prob_likely", "\n", "prob_posterior", "=", "prob_posterior", "/", "np", ".", "sum", "(", "prob_posterior", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "return", "prob_posterior", "\n", "\n"]], "home.repos.pwc.inspect_result.foadsohrabi_dl-activesensing.Fig8.plot_array_response_LSTM.estimate_AoA": [[22, 32], ["numpy.argmax", "numpy.mean", "numpy.mean", "numpy.reshape", "numpy.reshape", "numpy.squeeze", "numpy.squeeze", "numpy.squeeze", "numpy.squeeze", "numpy.squeeze"], "function", ["None"], ["", "def", "estimate_AoA", "(", "prob_aoa", ",", "phi_all", ",", "phi_true", ")", ":", "\n", "# MAP", "\n", "    ", "lamda_t", "=", "np", ".", "argmax", "(", "prob_aoa", ",", "axis", "=", "1", ")", "\n", "phi_hat", "=", "phi_all", "[", "lamda_t", "]", "\n", "mse_phi_MAP", "=", "np", ".", "mean", "(", "(", "np", ".", "squeeze", "(", "phi_hat", ")", "-", "np", ".", "squeeze", "(", "phi_true", ")", ")", "**", "2", ")", "\n", "# MMSE", "\n", "num_AoAs", "=", "phi_all", ".", "shape", "[", "0", "]", "\n", "phi_hat_mmse", "=", "np", ".", "reshape", "(", "prob_aoa", ",", "[", "-", "1", ",", "1", ",", "num_AoAs", "]", ")", "@", "np", ".", "reshape", "(", "phi_all", ",", "[", "1", ",", "num_AoAs", ",", "1", "]", ")", "\n", "mse_phi_mmse", "=", "np", ".", "mean", "(", "(", "np", ".", "squeeze", "(", "phi_hat_mmse", ")", "-", "np", ".", "squeeze", "(", "phi_true", ")", ")", "**", "2", ")", "\n", "return", "[", "mse_phi_MAP", ",", "mse_phi_mmse", ",", "np", ".", "squeeze", "(", "phi_hat_mmse", ")", "]", "\n", "\n"]]}